quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability," ""issue still exists in today's master"".; -->. ### Describe the bug; in root interpreter, we may:; ``` c++; root [0] unsigned long a=5;; ```; and then; ```c++; root [1] b=a;; ```; and it returns a number; ```; (unsigned long) 140055251333128; ```; which is totally unexpected.; <!--. -->. ### Expected behavior; we expect to yield:; ```; (unsigned long)5; ```. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; code generally described above. ; you just need to: ; start root interpretor; ```bash; $root; ```; and run the lines in it; ```c++; root [0] unsigned long a=5;; (unsigned long) 5; root [1] b=a;; ```; note other unsigned integer types also bug.; ``` c++; root [2] unsigned int c; (unsigned int) 0; root [3] d=c; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression. root [4] unsigned char e=5; (unsigned char) '0x05'; root [5] f=e; Error in <TRint::HandleTermInput()>: std::runtime_error caught: >>> Interpreter compilation error:; expected relocatable expression; ```. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; splash screen; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; ROOT 6.22/02 on CentOS7 x86_64, at CVMFS; ```; /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.22.02/x86_64-centos7-gcc48-opt; ```; and ; ROOT 6.20/06 on CentOS7/gcc x86_64, installed by system adm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6812:1280,Error,Error,1280,https://root.cern,https://github.com/root-project/root/issues/6812,2,"['Error', 'error']","['Error', 'error']"
Availability," #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:11837,failure,failures,11837,https://root.cern,https://github.com/root-project/root/issues/12372,1,['failure'],['failures']
Availability, '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:7042,Error,Error,7042,https://root.cern,https://github.com/root-project/root/issues/7206,2,['Error'],['Error']
Availability," 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]; 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]; 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]; 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:10539,error,error,10539,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability," 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]; 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:6954,error,error,6954,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability," 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Visibility.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:56: error: use of undeclared identifier 'std'; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'; return std::is_signed<T>::value; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function; static constexpr EStorageType determineStorageTypeT(T*) {; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:16979,error,error,16979,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability," 'import ROOT'; Traceback (most recent call last):; File ""/opt/root/install/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); File ""/usr/lib/python3.10/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1050, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1027, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 1004, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'libcppyy3_10'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/install/lib/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/opt/root/install/lib/cppyy/__init__.py"", line 62, in <module>; raise ImportError(; ImportError: Failed to import libcppyy3_10. Please check that ROOT has been built for Python 3.10; ```. ### Optional: share how it could be improved. Can Python 3 version be found checking symlinks of `/usr/bin/python`, and not its highest version available?; I also use Python 2, hope it won't break its search. ### To Reproduce. Steps to reproduce the behavior:; 1. Install Python version newer than the system one.; 2. Build root.; 3. Import Python ROOT (it will fail). ### Setup. 1. ROOT version: ROOT Version: 6.29/01, From heads/master@v6-29-01-1273-g360c0c7c54.; 2. Operating system: Arch Linux, Built for linuxx8664gcc.; 3. Build myself from this repo. ### Additional context; I create software packages, that's why I use several Python versions (to provide better experience to users with different tools). It would not be very convenient to remove some python version in order to build ROOT. I have no idea where this search is being performed. Yesterday I left a comment on an old issue, but can't find it. On another system of mine it is also written that ""Python 3 not found"", and then it is built fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12744:1892,avail,available,1892,https://root.cern,https://github.com/root-project/root/issues/12744,1,['avail'],['available']
Availability," 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:29: error: no member named 'string' in namespace 'std'; return std::stod(std::string(str.data(), str.size()),pos);; ~~~~~^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/include/ROOT/RStringView.hxx:71:13: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:71:37: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:73:28: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:73:42: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:85:8: error: unknown type name 'size_t'; size_t fLength{0};; ^; /home/root-build/include/ROOT/RStringView.hxx:88:47: error: unknown type name 'size_t'; explicit TStringView(const char *cstr, size_t len) : fData(cstr), fLength(len) {}; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:9869,error,error,9869,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability," 'signbit' must be imported from module 'std.depr.math_h' before it is required; using ::signbit;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here; signbit(_A1 __lcpp_x) _NOEXCEPT; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:3189,error,error,3189,https://root.cern,https://github.com/root-project/root/issues/7881,1,['error'],['error']
Availability," 'std' implicitly imported here; #include <cwchar> // For mbstate_t; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator; namespace std _GLIBCXX_VISIBILITY(default); ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For WEOF, wmemmove, wmemset, etc.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:22840,error,error,22840,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability," (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer().",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12710:1468,Error,Error,1468,https://root.cern,https://github.com/root-project/root/issues/12710,4,['Error'],['Error']
Availability," (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TSystem::Run() (no debug info); [/Applications/root_v6.30.06/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Applications/root_v6.30.06/lib/libRint.so] TRint::Run(bool) (no debug info); [/Applications/root_v6.30.06/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); Root > ; ```. ### Reproducer. On macos 14.4 running on m1 arm 64 using xcode 15.3, open root in a terminal and run this code:; ```; root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. macOS 14.4 arm64 Xcode 15 pre built binary with .pkg installer. ### Operating system. MacOS Sonoma 14.4. ### Additional context. I had previously installed root 6.28 from hombrew and it worked until i updated the system to sonoma 13. At this point I uninstalled it.; I tried to install from source 6.26 and it worked (with c++14), until i decided to upgrade to a newer version (6.30) in macos 14.3. It built, but it still gave bus error so i manually removed installed files from system directories",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15129:8710,error,error,8710,https://root.cern,https://github.com/root-project/root/issues/15129,1,['error'],['error']
Availability," -y clean all. mkdir /reproducer && cd /reproducer; git clone -b master --depth 1 http://github.com/root-project/root source; git -C source log; gcc --version; cmake -GNinja -S source -B build -Dxrootd=OFF; cmake --build build. ```; ```console; ❯ singularity --version; singularity version 3.8.7-1.fc35; ❯ singularity build -f reproducer.sif reproducer.def; (...skip...); + mkdir /reproducer; + cd /reproducer; + git clone -b master --depth 1 http://github.com/root-project/root source; Cloning into 'source'...; (...skip...); + git -C source log; commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD); Author: Jonas Rembser <jonas.rembser@cern.ch>; Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:1195,error,errors,1195,https://root.cern,https://github.com/root-project/root/issues/10478,3,"['error', 'redundant']","['errors', 'redundant']"
Availability," ../bin/libCore.rootmap; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\M",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:1121,error,error,1121,https://root.cern,https://github.com/root-project/root/pull/6143,2,['error'],['error']
Availability," /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. Mac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:8630,error,error,8630,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability," // The name of the application.; static const char* APPNAME = ""arrayWrite"";. // Open the output file.; static const char* FILENAME = ""arrays.root"";; std::unique_ptr<TFile> ofile(TFile::Open(FILENAME, ""RECREATE""));; if ((!ofile) || ofile->IsZombie()) {; Error(APPNAME, ""Could not open output file \""%s\"""", FILENAME);; return 1;; }; Info(APPNAME, ""Opened output file \""%s\"""", FILENAME);. {; // Create a TTree in the output file.; auto otree = std::make_unique<TTree>(""arrays"", ""Tree with arrays"");; otree->SetDirectory(ofile.get());. // Add vectors of arrays to it.; std::array<float, 3> arr1;; MAKE_BRANCH(""arr1"", arr1);; std::vector<std::array<float, 3> > vec1;; MAKE_BRANCH(""vec1"", vec1);. // Fill a few entries into the tree.; for (Int_t i = 0; i < 10; ++i) {; vec1.clear();; arr1 = {static_cast<float>(i),; static_cast<float>(i + 1),; static_cast<float>(i + 2)};; for (Int_t j = 0; j < i; ++j) {; vec1.push_back({static_cast<float>(j),; static_cast<float>(j + 1),; static_cast<float>(j + 2)});; }; if (otree->Fill() <= 0) {; Error(APPNAME, ""Failed to record entry %i"", i);; return 1;; }; }. // Make sure that the tree is saved.; otree->AutoSave();; }; Info(APPNAME, ""Finished writing \""%s\"""", FILENAME);. // Return gracefully.; return 0;; }; ```. Building and running this example gets me:. ```; [bash][celeborn]:arrayWrite > make; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include -c -o arrayWrite.o arrayWrite.cpp; rootcint -f Dictionary.cpp LinkDef.h; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with __GLIBCXX__ '20220324'; Extraction of runtime standard library version was: '20220421'; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include -c -o Dictionary.o Dictionary.cpp; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include arrayWrite.o Dictionary.o -L/home/krasz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:4838,Error,Error,4838,https://root.cern,https://github.com/root-project/root/issues/12007,1,['Error'],['Error']
Availability," /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoord.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoordtrans.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/parallelcoordtrans.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/printSizes.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/printSizes.C; lto1: some warnings being treated as errors; lto-wrapper: fatal error: /usr/bin/x86_64-pc-linux-gnu-gfortran returned 1 exit status; compilation terminated.; /usr/lib/gcc/x86_64-pc-linux-gnu/12/../../../../x86_64-pc-linux-gnu/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:5621,error,errors,5621,https://root.cern,https://github.com/root-project/root/issues/11657,4,['error'],"['error', 'errors']"
Availability," /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered; 2024-09-24 20:01:12.581129: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.; 2024-09-24 20:01:15.157134: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT; /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:2209,avail,available,2209,https://root.cern,https://github.com/root-project/root/issues/16552,1,['avail'],['available']
Availability," /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context); 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {; | ^~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context); 456 | for (const auto &coef : pdf->coefList()) {; | ^~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; ```. Tried to change method names to those with underscores, got another error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context; 448 | elem[""x""] << pdf->_x().GetName();; | ^~; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’; 448 | elem[""x""] << pdf->_x().GetName();; | ~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:1793,error,error,1793,https://root.cern,https://github.com/root-project/root/issues/13101,1,['error'],['error']
Availability," /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:971:2: error: use of undeclared identifier 'memory_order_relaxed'; IO_URING_WRITE_ONCE(*ring->cq.kflags, flags);; ^; /usr/include/liburing/barrier.h:65:17: note: expanded from macro 'IO_URING_WRITE_ONCE'; (val), memory_order_relaxed); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:985:9: error: no matching function for call to '__io_uring_get_cqe'; return __io_uring_get_cqe(ring, cqe_ptr, 0, wait_nr, NULL);; ^~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:191:5: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'sigset_t *' (aka '__sigset_t *') for 5th argument; int __io_uring_get_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1007:19: error: use of undeclared identifier 'memory_order_acquire'; unsigned tail = io_uring_smp_load_acquire(ring->cq.ktail);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1010:9: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:22822,error,error,22822,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability," 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/art",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:3775,error,error,3775,https://root.cern,https://github.com/root-project/root/issues/16242,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability, 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:8103,error,error,8103,https://root.cern,https://github.com/root-project/root/pull/5054,4,['error'],['error']
Availability," 2. https://github.com/root-project/root/pull/12696; 3. https://github.com/root-project/root/pull/12699; 4. https://github.com/root-project/root/pull/12702; 5. https://github.com/root-project/root/pull/12707. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `d6cb771d7f`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 7c88a7414b [RF] Migrate more RooFit functions to `RooFit::OwningPtr<T>`; 5d5e1bcce1 [RF] Fix build due to changed compute() signature; f69a346520 [RF] Update FitParabola test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12708:914,error,error,914,https://root.cern,https://github.com/root-project/root/pull/12708,1,['error'],['error']
Availability," 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);; | ^~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration; 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);; | ^; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared; 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);; | ^~~~~~~~~~~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 583 | static DictFuncPtr_t GetDict (const char *cname);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 584 | static DictFuncPtr_t GetDict (const std::type_info &info);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:2273,error,error,2273,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['error']
Availability, 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:2007,error,error,2007,https://root.cern,https://github.com/root-project/root/pull/5054,4,['error'],['error']
Availability, 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:6315,error,error,6315,https://root.cern,https://github.com/root-project/root/pull/5054,1,['error'],['error']
Availability, 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:8474,error,error,8474,https://root.cern,https://github.com/root-project/root/pull/5054,4,['error'],['error']
Availability," ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationApplication.C`, and the output for ten events are listed here:; ```; eventID	 | BDT int(eventID) | BDT int(1) | BDT float(1) | BDT int(2) | BDT float(2) ; 1	 | 0.478264	 | 0.478264	 | 0.81558	 | 0.478264	 | 0.478264	 | ; 2	 | -0.626303	 | -0.626303	 | -0.796553	 | -0.626303	 | -0.626303	 | ; 3	 | -0.612484	 | -0.612484	 | -0.335053	 | -0.612484	 | -0.612484	 | ; 4	 | 0.981251	 | 0.981251	 | 0.939638	 | 0.981251	 | 0.981251	 | ; 5	 | 0.964202	 | 0.964202	 | 0.696889	 | 0.964202	 | 0.964202	 | ; 6	 | 0.992213	 | 0.992213	 | 0.989813	 | 0.992213	 | 0.992213	 | ; 7	 | 0.948738	 | 0.948738	 | 0.971397	 | 0.948738	 | 0.948738	 | ; 8	 | 0.927619	 | 0.927619	 | 0.932366	 | 0.927619	 | 0.927619	 | ; 9	 | 0.478264	 | 0.478264	 | 0.778263	 | 0.478264	 | 0.478264	 | ; 10	 | 0.994266	 | 0.994266	 | 0.996632	 | 0.994266	 | 0.994266	 | ; ```. The BDT output when fixing eventID to 1 or 2 should be different, which is the case when they are floats (column 4 and 6); ; But if eventID has integer type, whatever the value it has the BDT output is the same as if they were 0 (or the same the numFolds = 2). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; The test above is run with ROOT 6.22 installed in macOS Catalina, though it does seem to matter much. [demo.zip](https://github.com/root-project/root/files/7342885/demo.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9115:3209,down,download,3209,https://root.cern,https://github.com/root-project/root/issues/9115,1,['down'],['download']
Availability," ; ```c++; #include <iostream>; #include <fstream>; #include<TRandom.h>. float input_lambda(float width){; return -6.347e-07*width*width+0.0015*width+1.835;; }. void exampleND(){; auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);; myy->setBins(450.);. auto w = new RooWorkspace(""w"");. auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);; for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}; auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);; for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}; hist_1->Scale(1./hist_1->Integral());; hist_400->Scale(1./hist_400->Integral());. auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);; auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_pdf_1 = new RooHistPdf(""hist_pdf_1"", ""hist_pdf_1"", RooArgList(*myy), *data_sig_1);; auto hist_pdf_400 = new RooHistPdf(""hist_pdf_400"", ""hist_pdf_400"", RooArgList(*myy), *data_sig_400);. std::vector<float> Lambda_list = {1., 400.};; auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);; auto paramVec = TVectorD(2);; for (int j = 0; j < 2; ++j){; 	paramVec[j] = Lambda_list[j];; }. auto morph_ND = new RooMomentMorphND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_pdf_1, *hist_pdf_400), paramVec, RooMomentMorphND::Linear);. w->import(*morph_ND);; w->Print();; w->writeToFile(""test_workspace.root"");; }; ```; If you run the code, you will see the the error occurs at line 40, where I see the error message cites the issue as being related to the ""_referenceGrid"" not able to be saved. . The output seen is:; ```; Warning in <TStreamerInfo::Build>: RooMomentMorphND: RooMomentMorphND::Grid has no streamer or dictionary, data member ""_referenceGrid"" will not be saved. *** Break *** segmentation violation; __boot(); import os; ```. ### Setup; For the record, I am using ROOT Version: 6.24/06",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11876:2008,error,error,2008,https://root.cern,https://github.com/root-project/root/issues/11876,2,['error'],['error']
Availability," <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + python3.8/ 6.26.8 +python3.9; 2. Ubuntu18.04/centos7; 3. compiled locally / provided by remote host. ### Extra note:; I have been told that ROOT 6.26.10+python3.9 does not have this issue, so maybe some change in the python binding fixed this. Unfortunately I don't have access to python3.9 right now to test it myself. But I tested ROOT 6.26.10+python3.8 and the issue persists there.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:1945,down,download,1945,https://root.cern,https://github.com/root-project/root/issues/12182,1,['down'],['download']
Availability," = (""/cvmfs/cms.cern.ch/slc6_amd64_gcc530/lcg/root/6.06.00-ikhhed6/tutorials/hsimple.root"");. TChain* chain = new TChain(""ntuple"");; for ( int i = 0 ; i<nFiles ;i++ ) {; chain->Add(filename);; }. long nEntries = -1;; if ( DoGetEntries ) nEntries = chain->GetEntries();. if ( DoDeactivateBranches ); chain->SetBranchStatus(""*"",0); // this line, together with a previous GetEntries() causes a bug, but only if a single file is passed to the TChain!. // read a single branch; float px,py,pz,random=0.333333;; TBranch* b_random;; chain->SetBranchAddress(""random"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omiting to print further errors ...""<<endl;; }; sum += random;; }; }. // print out results and timing; auto stop = high_resolution_clock::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7567:1915,Error,Error,1915,https://root.cern,https://github.com/root-project/root/issues/7567,3,"['Error', 'error']","['Error', 'errors']"
Availability," >' requested here; /home/b/bendavid/pyrootdebug6/test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. call attempt 1; helper call failed; Template method resolution failed:; Failed to instantiate ""call_helper(Helper<vector<double> >&)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >*)""; error: called object type 'Helper<std::vector<double, std::allocator<double> > > *' is not a function or function pointer; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > *>' requested here. Failed to instantiate ""call_helper(Helper<vector<double> >)""; error: type 'const Helper<std::vector<double, std::allocator<double> > >' does not provide a call operator; note: in instantiation of function template specialization 'call_helper<Helper<std::vector<double, std::allocator<double> > > >' requested here; ```. (on the console the output also has the nice highlighting and colors one would normally get from clang diagnostic printing, see screenshot below). Needle",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12449:3872,error,error,3872,https://root.cern,https://github.com/root-project/root/pull/12449,1,['error'],['error']
Availability," Checked for duplicates. ### Describe the bug; If the external nhlohman json is used ROOT an error occurs if ROOTEve is used; ```; CMake Error at cmake/DD4hepBuild.cmake:625 (add_library):; Target ""DDEvePlugins"" links to target ""nlohmann_json::nlohmann_json"" but; the target was not found. Perhaps a find_package() call is missing for an; IMPORTED target, or an ALIAS target is missing?; Call Stack (most recent call first):; DDEve/CMakeLists.txt:43 (dd4hep_add_plugin); ```; (original discovery via lcg nightlies in DD4hep package build on top of root master. ### Expected behavior. ROOT targets resolve all their dependencies so that other CMake projects can use them without error or change to their cmake; `Find_dependency` added to e.g., ROOTConfig.cmake; or; this needs to be PRIVATE ?; https://github.com/linev/root/blob/88bdfd736f0b859b40973c457b75df9c73b0bbaf/graf3d/eve7/CMakeLists.txt#L139. ### To Reproduce; have a project with a library linking against ROOTEve; Assuming `cmake` is in the PATH (compiler and OS shouldn't matter); ```bash; wget http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/latest/ROOT-HEAD_db894-x86_64-centos7-gcc8-opt.tgz; tar xzf ROOT-HEAD_db894-x86_64-centos7-gcc8-opt.tgz; mkdir test; cd test; cat > CMakeLists.txt <<EOF; CMAKE_MINIMUM_REQUIRED(VERSION 3.12 FATAL_ERROR); PROJECT(myeve); find_package(ROOT REQUIRED); add_library(myeve SHARED myeve.cpp); TARGET_LINK_LIBRARIES(myeve ROOT::ROOTEve); EOF. cat > myeve.cpp <<EOF; int main (); {; return 1;; }; EOF; mkdir build; cd build. # assuming cmake is in the path; cmake -D ROOT_DIR=${PWD}/../../ROOT/HEAD/x86_64-centos7-gcc8-opt/cmake ..; ```. gives; ```; CMake Error at CMakeLists.txt:4 (add_library):; Target ""myeve"" links to target ""nlohmann_json::nlohmann_json"" but the; target was not found. Perhaps a find_package() call is missing for an; IMPORTED target, or an ALIAS target is missing?; ```. ### Setup. 1. ROOT master, `cmake ... -Dbuiltin_nlohmannjson=OFF ....`; 2. centos7; 3. build with LCGCmake",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6784:1661,Error,Error,1661,https://root.cern,https://github.com/root-project/root/issues/6784,1,['Error'],['Error']
Availability," Checked for duplicates. ### Description. Dear Rooters,. Indeed I used the TMapFile together with TApplication to realize the online monitoring for my DAQ. After having tried many combinations of ROOT and ubuntu versions, finally it worked with ROOT 6.12.06 on Ubuntu 16.04.7 LTS (gcc 5.4.0). . The main problem is remaining with the TMapFile which requires -lNew to be included in the makefile. Once this works, the TApplication just doesn't work with error message of segmentation fault or violation. Or vice versa, TApplication works but TMapFile doesn't work. In order to repeat the errors, I collected the three ROOT example macros (as attached) and created a makefile to compile them. In the Makefile, the option of --new or -lNew have been added. One can include them or comment them out. On Ubuntu 20.04.1 LTS (gcc 9.4.0), with ROOT version from 6.12.06 to 6.28.04, none of the combinations got to work. For instance, when the TMapFile works with ROOT 6.12.06, then the TApplication returns an error of ""Segmentation violation"". With a newer ROOT, e.g. 6.28.04, the TApplication works but the TMapFile got the error message; *****************************************************************************; Error in <TMapFile::TMapFile> : no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; *****************************************************************************. Could you guys have a look at this problem and find out what happened or may find a solution? Many thanks in advance. Huagen Xu from FZ Juelich, IKP; [root_examples.zip](https://github.com/root-project/root/files/12415948/root_examples.zip). ### Reproducer. As attached, there are three Macro files plus one Makefile. Those three files are all the ROOT examples to demostrate how the TMapFile as well as the TApplication work. To reproduce the problem described above, one could follow the tipps below.; 1. Unzip the file into a local directory ; 2. Open a terminal and cd to the unz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511:1035,error,error,1035,https://root.cern,https://github.com/root-project/root/issues/13511,1,['error'],['error']
Availability," Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]; 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]; 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]; 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]; 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFile",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:19017,error,error,19017,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability, D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:4685,Error,Error,4685,https://root.cern,https://github.com/root-project/root/issues/8518,1,['Error'],['Error']
Availability," Description. When compiling ROOT from source, I got an error:. ```; /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:; /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’?; 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));; | ^~~~~~~~~~~~~~~; | ROperator_Slice; /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’; 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));; | ^~~~~; make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1; make[2]: *** Waiting for unfinished jobs....; make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx; @@ -18,6 +18,7 @@; **********************************************************************************/; ; #include ""TMVA/RModelParser_Keras.h""; +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src; cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _N",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13102:1041,Error,Error,1041,https://root.cern,https://github.com/root-project/root/issues/13102,1,['Error'],['Error']
Availability," Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-minifile. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.Read",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9291,Error,Error,9291,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Error'],['Error']
Availability," Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1518,recover,recovery,1518,https://root.cern,https://github.com/root-project/root/issues/12430,1,['recover'],['recovery']
Availability, In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:421:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__functional/invoke.h:23:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_object_pointer.h:35:56: error: use of undeclared identifier '__remove_cv_t'; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_obj > {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_member_object_pointer.h:35:78: error: no type named '__is_obj' in the global namespace; : public _BoolConstant< __libcpp_is_member_pointer<__remove_cv_t<_Tp> >::__is_obj > {};; ~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:17:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/math.h:315:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/limits:827:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/type_traits:456:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_compound.h:14:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_fundamental.h:38:38: error: missing '#include <__type_traits/is_arithmetic.h>'; declaration of 'is_arithmetic' must be imported from module 'std.type_traits.is_arithmetic' before it is required; is_arithmetic<_Tp>::value> {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_arithmetic.h:23:50: note: previou,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:6292,error,error,6292,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability," MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.CPPTasks.GetOutOfDateItems.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; obj.clangAST.vcxproj -> C:\Users\sftnight\build\release\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.dir\Release\obj.clangAST.lib; ```; Another patch will be applied in `roottest`, removing ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:3225,error,error,3225,https://root.cern,https://github.com/root-project/root/pull/10247,1,['error'],['error']
Availability," MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]; 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]; 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]; 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]; 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:19490,error,error,19490,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability," MSVC's STL (which I work on) has removed this codepath by merging https://github.com/microsoft/STL/pull/2796, which will ship in VS 2022 17.4 Preview 1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://go",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:1217,error,error,1217,https://root.cern,https://github.com/root-project/root/issues/10875,1,['error'],['error']
Availability," Python 2 version on RHEL/CentOS 7. The packaging of root on EPEL 7 with the new pyroot implementaion fails with the followin error:; ```; + /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1; Bytecompiling .py files below /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7 using /usr/bin/python2.7; Compiling /builddir/build/BUILDROOT/root-6.22.00-1.el7.x86_64/usr/lib64/python2.7/site-packages/ROOT/_numbadeclare.py ...; SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function (_numbadeclare.py, line 198); error: Bad exit status from /var/tmp/rpm-tmp.RNRIsm (%install); ```. ### test1.py. This is a minimal reproducer of the existing code:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()); print(locals()['b']); return inner(); test(); ```; This produces the expected output with Python 3:; ```; $ python3 test1.py ; 123; 456; ```; But when using Python 2 it reproduces the error from the root build:; ```; $ python2 test1.py ; File ""test1.py"", line 5; exec('print(a); b = 456', glob, locals()); SyntaxError: unqualified exec is not allowed in function 'inner' it is a nested function; ```. ### test2.py . If the Python 2 syntax is used for the exec command:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; Then Python 3 fails as expected since this syntax is not valid Pathon 3:; ```; $ python3 test2.py ; Traceback (most recent call last):; File ""test2.py"", line 8, in <module>; test(); File ""test2.py"", line 7, in test; return inner(); File ""test2.py"", line 5, in inner; exec('print(a); b = 456') in glob, locals(); File ""<string>"", line 1, in <module>; NameError: name 'a' is not defined; ```; However, despite both syntax versions are supposed to be valid Python 2, this version succeeds with Python 2 even though the previous version ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:1153,error,error,1153,https://root.cern,https://github.com/root-project/root/pull/5960,1,['error'],['error']
Availability," RColumnElementEndian.Int16 (0 ms); [ RUN ] RColumnElementEndian.UInt16; [ OK ] RColumnElementEndian.UInt16 (0 ms); [ RUN ] RColumnElementEndian.Int32; [ OK ] RColumnElementEndian.Int32 (0 ms); [ RUN ] RColumnElementEndian.UInt32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTup",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:4858,down,down,4858,https://root.cern,https://github.com/root-project/root/issues/12426,1,['down'],['down']
Availability," ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 25 2024, 07:37:38 |; | From heads/master@v6-31-01-1759-ga6c7efff71 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4); (TH1F &) Name: h Title: h NbinsX: 64; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15340:1377,Error,Error,1377,https://root.cern,https://github.com/root-project/root/issues/15340,1,['Error'],['Error']
Availability," ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&); Maybe you need to load the corresponding shared library?; ```. # My Temporary Solution; I recognised that most of the problem originated from RCanvas being missing from the shared libraries, but I am not sure of the exact cause of that. At some point, I modified the JupyROOT code inside ``path/to/JupyROOT/helpers/utils.py`` to have the ``RCanvasAvailable`` function immediately return False, which seems to have fixed the issue. Perhaps some error handling in that function could help mitigate the issue?. It would be preferable to understand the direct cause of the problem, however, rather than using this patchwork solution. Perhaps something is wrong with how ROOT is compiled. I am working on a shared computing cluster and I do not have root privileges to the machine, but I will be able to relay potential troubleshooting ideas to the admin. # Related Problem?; I have also come up against a similar problem with ``TWebCanvas``, which is causing ``jsroot`` to not work within Jupyter notebooks. I tried the following in interactive ROOT:; ```; root [0] new TWebCanvas();; ROOT_prompt_0:1:5: error: allocation of incomplete type 'TWebCanvas'; new TWebCanvas();; ^~~~~~~~~~; /builddir/build/BUILD/root-6.30.02/redhat-linux-build/include/TPad.h:26:7: note: forward declaration of 'TWebCanvas'; class TWebCanvas;; ```; This problem is similarly solved by making ``TWebCanvasAvailable`` immediately return False in ``path/to/JupyROOT/helpers/utils.py``. ### Reprodu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:6655,error,error,6655,https://root.cern,https://github.com/root-project/root/issues/14587,1,['error'],['error']
Availability, TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:6364,error,error,6364,https://root.cern,https://github.com/root-project/root/issues/7206,2,"['Error', 'error']","['Error', 'error']"
Availability, TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/root-source/core/base/inc/LinkDef.h; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:6476,error,error,6476,https://root.cern,https://github.com/root-project/root/issues/7206,1,['error'],['error']
Availability," The changes introduced in PR #7616 have the side effect of breaking existing use of the RooNLLVar constructor where it is specified that the PDF is extended but the defaults for all further arguments are accepted, e.g.; `nllVar_ = new RooNLLVar(""nllVar"", """", model_, *exptData_, extended_);`; where `model_` is a `RooAddPdf`, `exptData_` is a `RooDataSet*` and `extended_` is a `bool`. This appears to be due to the reordering of the `extended` argument to the two constructors:; ```; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; RooAbsTestStatistic::Configuration const& cfg, bool extended);; ; RooNLLVar(const char *name, const char *title, RooAbsPdf& pdf, RooAbsData& data,; const RooArgSet& projDeps, RooAbsTestStatistic::Configuration const& cfg,; bool extended = false) ;; ```; where previously the `extended` argument followed `data` in the first case and `projDeps` in the second.; Is it possible to swap back the order of the `extended` and `cfg` arguments and provide a default for `cfg`?; I think this should restore backward compatibility in this scenario. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh dev3/latest x86_64-centos7-gcc11-opt; git clone https://phab.hepforge.org/source/laura.git; mkdir build install; cmake -S $PWD/laura -B $PWD/build -DLAURA_BUILD_ROOFIT_TASK=ON -DCMAKE_INSTALL_PREFIX=$PWD/install; cd build; make; ```; This will result in a compilation error when trying to compile `LauRooFitTask.cc`:; ```; error: no matching function for call to ‘RooNLLVar::RooNLLVar(const char [7], const char [1], RooAbsPdf&, RooAbsData&, const Bool_t&)’; ```; Attempting the same build with LCG_100 or even dev4/latest does not produce the same error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8976:1764,error,error,1764,https://root.cern,https://github.com/root-project/root/issues/8976,3,['error'],['error']
Availability," UniformExpZ neutrino_target_z(; ""uniform_exp_z_nt"", ""uniform (x) exp (z) nt"",; z, nt_h_top, nt_h_bot, l; );; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(RooUniform(""u_nt_x"", ""u_nt_x"", x),; RooUniform(""u_nt_y"", ""u_nt_y"", y)); );; RooProdPdf nt(""nt"", ""nt"", RooArgList(uxy_nt, neutrino_target_z));; // fit; RooFitResult *res = nt.fitTo(data, RooFit::Save(true), RooFit::NumCPU(8));. However, when I write RooUniform definition outside of that RooArgList, everything works fine:. RooUniform u_nt_x(""u_nt_x"", ""u_nt_x"", x);; RooUniform u_nt_y(""u_nt_y"", ""u_nt_y"", y);; RooProdPdf uxy_nt(; ""uxy_nt"", ""uxy_nt"",; RooArgList(u_nt_x, u_nt_y); );. ### Expected behavior. Should be the same for variables defined inside and outside the constructor. ### To Reproduce; 3. I compile this code with gcc. Sorry if the format of this bug report is not good :/. ### Setup; 1. ROOT version 6.22/06.; 2. Arch Linux.; 3. Built myself. ### Additional context; Unfortunately (I don't know whether it must be considered a bug) the output about the error appears only when I comment out a lot of code. Usually it only writes . > Command terminated by signal 11. Here is the output when I manage to get that:. > *** Break *** segmentation violation; >; > ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f21b73d20ca in wait4 () from /usr/lib64/libc.so.6; #1 0x00007f21b734fd6f in do_system () from /usr/lib64/libc.so.6; #2 0x00007f21b9bfc3c6 in TUnixSystem::StackTrace() () from /opt/root/cur/lib/libCore.so; #3 0x00007f21b9bf9705 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root/cur/lib/libCore.so; #4 <signal handler called>; #5 0x0000000000000000 in ?? (); #6 0x00007f21b7bf1322 in RooAbsArg::treeNodeServerList(RooAbsCollection*, RooAbsArg const*, bool, bool, bool, bool) const () from /opt/root/cur/lib/libRooFitCore.so; #7 0x00007f21b7bf880d in RooAbsAr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8052:1197,error,error,1197,https://root.cern,https://github.com/root-project/root/issues/8052,1,['error'],['error']
Availability," When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context; <!--; Add any other context about the problem here.; -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:1676,Error,Error,1676,https://root.cern,https://github.com/root-project/root/issues/7345,3,"['Error', 'avail', 'error']","['Error', 'available', 'error']"
Availability," Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB); 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`; 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:; ```cpp; #include <iostream>; #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {; const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,; 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,; 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};; int bin = -1;; for (int i = 0; i < 9; i++) {; if (time < bin_edges[i]); return bin;; bin++;; }; return bin;; }. int main(int argc, char *argv[]) {; ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);; auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;; ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];; std::string cut;; for (int time_bin = 0; time_bin < time_bins; time_bin++) {; cut = ""time_bin == "";; cut += std::to_string(time_bin);; counts[time_bin] = df.Filter(cut).Count();; }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {; std::cout << *counts[time_bin] << std::endl;; }. return 0;; }; ```. #### `mwe.py`:; ```python; import uproot; import pandas as pd; import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""); time_bin_edges = [0.00025 * i for i in range(9)]; df[""time_bin""] = pd.cut(; df[""D_decayTime""],; time_bin_edges,; include_lowest=True,; labels=range(len(time_bin_edges) - 1),; ); print(df.groupby(""time_bin"").size()); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.22.06; Linux 5.4.0, Ubuntu 18.04-like; Binary download of ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7273:2803,down,download,2803,https://root.cern,https://github.com/root-project/root/issues/7273,2,['down'],['download']
Availability," [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; ```. You can find the details in https://gitlab.cern.ch/atlas/athena/-/merge_requests/59648, but the problem is luckily fairly easy to reproduce in a completely ""standalone"" way as well. ### Expected behavior. We would like to be able to write and read `std::vector<std::array<T, N> >` variables (and ideally even more complicated combinations of `std::vector` and `std::array` types) using `TTree` branches. ### To Reproduce. I wrote the following small example:; - `Makefile`:. ```makefile; # Set up all variables for the implicit GNU Make rules to work.; CXX:=$(shell root-config --cxx); CXXFLAGS:=$(shell root-config --cflags); LD:=$(shell root-config --ld); LDLIBS:=$(shell root-config --libs); LINK.o = $(LINK.cc). # Set up all explicit targets.; all: arrayWrite. arrayWrite: arrayWrite.o Dictionary.o. Dictionary.cpp: LinkDef.h; 	rootcint -f $@ LinkDef.h. clean",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:1817,Error,Error,1817,https://root.cern,https://github.com/root-project/root/issues/12007,1,['Error'],['Error']
Availability," [x] Checked for duplicates. ### Describe the bug. While updating ATLAS's EDM, we tried to introduce some `std::vector<std::array<float, 3> >` variables into our output files. But was met with the following types of errors:. ```; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripCenter' [Likely missing S",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:932,Error,Error,932,https://root.cern,https://github.com/root-project/root/issues/12007,1,['Error'],['Error']
Availability," ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt.; ```; -- The C compiler identification is AppleClang 15.0.0.15000040; -- The CXX compiler identification is AppleClang 15.0.0.15000040; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | We",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1020,Error,Error,1020,https://root.cern,https://github.com/root-project/root/issues/14113,1,['Error'],['Error']
Availability," ] TClingCallFunc.MemberMethodWrapper (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperNodiscard; [ OK ] TClingCallFunc.FunctionWrapperNodiscard (0 ms); [ RUN ] TClingCallFunc.FunctionWrapperSharedPtr; [ OK ] TClingCallFunc.FunctionWrapperSharedPtr (33 ms); [ RUN ] TClingCallFunc.ROOT_6523; [ OK ] TClingCallFunc.ROOT_6523 (7 ms); [----------] 15 tests from TClingCallFunc (56 ms total); [----------] 4 tests from TClingDataMemberInfo; [ RUN ] TClingDataMemberInfo.UsingDecls; [ OK ] TClingDataMemberInfo.UsingDecls (1 ms); [ RUN ] TClingDataMemberInfo.Lookup; [ OK ] TClingDataMemberInfo.Lookup (0 ms); [ RUN ] TClingDataMemberInfo.Offset; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure; Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure; Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure; Expected equality of these values:; 3000; *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(); Which is: 0; [ FAILED ] TClingDataMemberInfo.Offset (7 ms); [ RUN ] TClingDataMemberInfo.issue8553; [ OK ] TClingDataMemberInfo.issue8553 (4 ms); [----------] 4 tests from TClingDataMemberInfo (14 ms total); [----------] 5 tests from TClingMethodInfo; [ RUN ] TClingMethodInfo.Prototype; [ OK ] TClingMethodInfo.Prototype (0 ms); [ RUN ] TClingMethodInfo.ROOT10789; [ OK ] TClingMethodInfo.ROOT10789 (2 ms); [ RUN ] TClingMethodInfo.DerivedCtorROOT11010; [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms); [ RUN ] TClingMethodInfo.TemplateFun; [ OK ] TClingMethodInfo.TemplateFun (1 ms); [ RUN ] TClingMethodInfo.Ctors; [ OK ] TClingMethodInfo.Ctors (4 ms); [----------] 5 tests from TClingMethodInfo (90 ms total); [----------] Global test environ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:3701,Failure,Failure,3701,https://root.cern,https://github.com/root-project/root/issues/14512,1,['Failure'],['Failure']
Availability," ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:7623,error,error,7623,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability," ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function; static constexpr EStorageType determineStorageTypeT(T*) {; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include ""cling/Interpreter/RuntimeUniverse.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:18594,error,error,18594,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability," ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdProofConn::ESrvType XrdProofConn::DoHandShake(XrdClientPhyConnection*)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:4: error: ‘ServerResponseType’ was not declared in this scope; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:23: error: expected ‘;’ before ‘type’; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1006:17: error: ‘type’ was not declared in this scope; 01:46:28 len = sizeof(type);; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1062:1: warning: control reaches end of non-void function [-Wreturn-type]; 01:46:28 }; 01:46:28 ^; ```. which seem caused by an update in the xrootd version (now version 5). ROOT has [some known issues](https://sft.its.cern.ch/jira/browse/ROOT-10910) with xrootd5, although this failure mode is not the same as in those cases. [These](root-project/root#6226) are the changes that @oshadura backported to 6.22 to fix xrootd5 support there.; I don't know whether those changes might break support for older xrootd versions instead (I just haven't looked into it). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The failures are happening every night, e.g. see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-18-00-patches/406/LABEL=ROOT-centos7,SPEC=noimt,V=6-18/consoleFull",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:3302,failure,failure,3302,https://root.cern,https://github.com/root-project/root/issues/6779,2,['failure'],"['failure', 'failures']"
Availability, ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration; begin(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:2153,error,error,2153,https://root.cern,https://github.com/root-project/root/issues/14062,1,['error'],['error']
Availability," `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:3272,Error,Error,3272,https://root.cern,https://github.com/root-project/root/issues/16242,1,['Error'],['Error']
Availability," a high function value to Minuit.; This value was always the same, though.; Like this, Minuit cannot compute a gradient to get out of this region,; because all bad parameter points yield the same function value. With this commit, RooFit can pack information about the ""badness"" of a; parameter point into the mantissa of a NaN, e.g. how much negative the; values of a PDF came out or how far the sum of PDF coefficients is from; 1. This information is packed into NaN using ""RooNaNPacker"", and passed; through the computation graph. It is finally unpacked in RooMinimizerFcn; before being handed to the minimiser. This allows for the calculation of; gradients, enabling the fitter to recover from an invalid state more; easily. When NaNs are being unpacked, they are presented to Minuit as maximum; function value + badness * penaltyStrength, so a gradient can be; computed that points away from the bad region. The maximum function; value comes from previous minimisation steps, the badness is the payload; of the packed NaN, and the strength can be set from the outside. If the minimisation starts out in an undefined region, and the maximum; function value is not (yet) known, 0. + badness * strength is used.; Once a well-defined region is found, the valid function values are; offset such that they are all lower than 0. In this way, Minuit is; encouraged to step into the well-defined regions, and sees a rapidly; rising function when stepping out. When fit results are saved, though,; this offset is subtracted in order to recover ""correct"" NLL values. Concretely:; - Add RooNaNPacker.; - Add a function to set the magnitude of the penalty term that's; supposed to drive the minimiser away from undefined regions.; - Add a function to RooMinimizerFcn that returns a possible artificial; offset. This helps to hide any offsetting from the outside world.; - When saving a fit result, remove any offset, and copy the number of; invalid function values into the fit result (was broken previously).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6401:1781,recover,recover,1781,https://root.cern,https://github.com/root-project/root/pull/6401,1,['recover'],['recover']
Availability," a segfault for non-debug builds):. ```cpp; #include <TTree.h>; #include <TFile.h>; #include <TApplication.h>. int main(); {; //TApplication app(""app"", nullptr, nullptr);; TFile *outputFile = new TFile(""output.root"", ""RECREATE"");. TTree *tree = new TTree(""tree"", ""treeliberated tree"");; outputFile->Write();. tree->StartViewer();. //app.Run();; outputFile->Close();; }; ```. ```; #8 0x00007fd6cf22b8c2 in TGCompositeFrame::TGCompositeFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=3, back=0) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:853; #9 0x00007fd6cf22d4cc in TGMainFrame::TGMainFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=2) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:1430; #10 0x00007fd6d64b9a6c in TTreeViewer::TTreeViewer (this=0x56036dc34a10, tree=0x56036d05df80) at ../../../root_dbg/tree/treeviewer/src/TTreeViewer.cxx:349; #11 0x00007fd6d809e059 in ?? (); #12 0x000056036c1be340 in ?? (); #13 0x000056036c1be340 in ?? (); #14 0x000056036dc34a10 in ?? (); #15 0x000056036dc34a10 in ?? (); #16 0x00007fff775fd220 in ?? (); #17 0x00007fff775fd3d8 in ?? (); #18 0x00007fff775fdc20 in ?? (); #19 0x00007fff775fd3f8 in ?? (); #20 0x00000001775fd3e0 in ?? (); #21 0x0000000000000000 in ?? (); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The crash is due to a nullptr dereference in `TGCompositeFrame::TGCompositeFrame` (`fParent` is null), which in turn is caused by a failed check in `TGWindow::TGWindow` at `TGWindow.cxx:54`:. ```; if (!p && gClient) {; p = gClient->GetRoot();; }; ```. In the condition above, if the user created no `TApplication`, `gClient` is false-y. Rather than crash and burning, we could detect the situation and produce a helpful error message. ### Additional context; <!--; Add any other context about the problem here.; -->. At least [one user](https://root-forum.cern.ch/t/break-segmentation-violation-for-a-compiled-program/42022/12) could have used a better error message :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6743:1935,error,error,1935,https://root.cern,https://github.com/root-project/root/issues/6743,2,['error'],['error']
Availability," abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; sh: 1: ipython3: not found; Traceback (most recent call last):; File ""/github/home/ROOT-CI/roottest/python/JupyROOT/nbdiff.py"", line 197, in <module>; retCode = canReproduceNotebook(nbFileName, kernelName, needsCompare); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; ```; ```; Exception occurred during processing of request from ('127.0.0.1', 53110); FTraceback (most recent call last):; File ""/usr/lib/python3.12/socketserver.py"", line 318, in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:3702,Error,Error,3702,https://root.cern,https://github.com/root-project/root/issues/16242,1,['Error'],['Error']
Availability," again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:1875,Error,Error,1875,https://root.cern,https://github.com/root-project/root/issues/8292,1,['Error'],['Error']
Availability," and even FDA_GAMT are same.`. void TMVA::MinuitFitter::Init(); {; .......... ; //fMinWrap = new MinuitWrapper( fFitterTarget, 2*GetNpars() );; fMinWrap = new MinuitWrapper( fFitterTarget, GetNpars() );; ..........; }; `. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; root tutorial/tmva/TMVARegreession.C. In TMVARegression.C, I use the FDA method as bellow: ` . if (Use[""FDA_MC""]); factory->BookMethod( dataloader, TMVA::Types::kFDA, ""FDA_MC"",; ""!H:!V:Formula=(0)+(1)*x0+(2)*x1:ParRanges=(-100,100);(-100,100);(-100,100):FitMethod=MC:SampleSize=100000:Sigma=0.1"" );; ; if (Use[""FDA_GA""]) // can also use Simulated Annealing (SA) algorithm (see Cuts_SA options) .. the formula of this example is good for parabolas; factory->BookMethod( dataloader, TMVA::Types::kFDA, ""FDA_GA"",; ""!H:!V:Formula=(0)+(1)*x0+(2)*x1:ParRanges=(-100,100);(-100,100);(-100,100):FitMethod=GA:PopSize=100:Cycles=3:Steps=30:Trim=True:SaveBestGen=1"" );; ; if (Use[""FDA_MT""]); factory->BookMethod( dataloader, TMVA::Types::kFDA, ""FDA_MT"",; ""!H:!V:Formula=(0)+(1)*x0+(2)*x1:ParRanges=(-100,100);(-100,100);(-100,100):FitMethod=MINUIT:ErrorLevel=1:PrintLevel=-1:FitStrategy=2:UseImprove:UseMinos:SetBatch"" );; ; if (Use[""FDA_GAMT""]); factory->BookMethod( dataloader, TMVA::Types::kFDA, ""FDA_GAMT"",; ""!H:!V:Formula=(0)+(1)*x0+(2)*x1:ParRanges=(-100,100);(-100,100);(-100,100):FitMethod=GA:Converger=MINUIT:ErrorLevel=1:PrintLevel=-1:FitStrategy=0:!UseImprove:!UseMinos:SetBatch:Cycles=1:PopSize=5:Steps=5:Trim"" );; `; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; root-6.18.00, centos7, built it by myself.; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6773:2329,Error,ErrorLevel,2329,https://root.cern,https://github.com/root-project/root/issues/6773,3,"['Error', 'down']","['ErrorLevel', 'download']"
Availability," and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s] 77 | __malloc_hook = p;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetFreeHook(TMemStatHook::FreeHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:88:4: error: '__free_hook' was not declared in this scope; [ 2135s] 88 | __free_hook = p;; [ 2135s] | ^~~~~~~~~~~; ~~~. Any suggestion to work around this would be highly appreciated. Thank you. (1) https://sourceware.org/pipermail/libc-alpha/2021-August/129718.html. [1]: https://sourceware.org/pipermail/libc-alpha/2021-August/129718.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9031:1938,error,error,1938,https://root.cern,https://github.com/root-project/root/issues/9031,2,['error'],['error']
Availability," are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “a p s ; ; 5 s=0.5” which means the graph is drawn with Axes, Markers and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with default settings. The second error dimension (systematic errors) is drawn with boxes of half the width of the X-Errors. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the individual ones add the Draw option “S” to the first block of the Draw options like in my example. All the best,; Simon Spies. I hope you find my class as useful as I do and vote for it to become part of ROOT in the future. :smile:; ![example](https://user-images.githubusercontent.com/5320187/53051016-15b0e300-349b-11e9-90d6-af75f21654a0.png); ![example](https://user-images.githubusercontent.com/5320187/53085326-e7ff8480-3502-11e9-8945-59e025",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:3946,error,error,3946,https://root.cern,https://github.com/root-project/root/pull/3452,3,"['Error', 'error']","['Errors', 'error', 'errors']"
Availability," as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:; * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine.; * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time.; * (no)dict2 -- Tests are run once again after running (no)dict1-cold;; * (no)dict3 -- Tests are run once again after running (no)dict2;; * (no)dict4 -- Tests are run once again after running (no)dict3;; * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specification is `Intel(R) Core(TM) i3-7100 CPU @ 3.90GHz` dual core, 8GB RAM and a **HDD**, run on Ubuntu 18.04. ### Results Interpretation. RDICT mostly intend to reduce the memory footprint during IO. We see no direct benefits in the memory footprint. The average of the max RSS of the sum of the max RSS of every test is higher. There is also a tendency towards faster execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012:1932,failure,failures,1932,https://root.cern,https://github.com/root-project/root/pull/3012,1,['failure'],['failures']
Availability," be used instead. Building in stdver=c++0x mode.""; ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0; make[7]: *** read jobs pipe: Bad file descriptor. Stop.; make[7]: *** Waiting for unfinished jobs....; In file included from ../../src/tbb/concurrent_hash_map.cpp:17:; ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:; ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; make[6]: *** [Makefile:28: tbb] Error 2; ```. Trying to upgrade to v6-28-12, https://github.com/SyneRBI/SIRF-SuperBuild/pull/859/files, it compiled TBB ok, but failed in XROOTD installation. XROOTD-install-err.log says; ```; [I] No git repository info found. Trying to interpret VERSION_INFO; [I] The XrdVersion.hh file already exists; gmake[7]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[7]: *** Waiting for unfinished jobs....; gmake[6]: *** [Makefile:136: all] Error 2; CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-install-Release-impl.cmake:9 (message):; Command failed (2):. '/usr/local/bin/cmake' '--build' '.' '--target' 'install'; ```; The same error occurs with v6-30-04. The log files actually don't really give an error, but the `bad file descriptor` is strange of course. I'm therefore not sure if this is a problem in ROOT, or a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520:2054,Error,Error,2054,https://root.cern,https://github.com/root-project/root/issues/14520,1,['Error'],['Error']
Availability," binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree command works so it does not comes from the root file:; ```; root -l Zee_Sh221-0.root; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; root [1] TTree *tree = (TTree*) _file0->Get(""Nominal"") ; root [2] tree->Draw(""MET>>h_MET(25,0,500)"", ""sample==\""Zbl\""""); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; (long long) 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:2439,error,error,2439,https://root.cern,https://github.com/root-project/root/issues/7169,2,['error'],['error']
Availability," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073:1459,Error,Error,1459,https://root.cern,https://github.com/root-project/root/issues/8073,3,"['Error', 'Failure', 'error']","['Error', 'Failures', 'error']"
Availability," changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #7 0x7fcd221d8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8027:895,ERROR,ERROR,895,https://root.cern,https://github.com/root-project/root/issues/8027,1,['ERROR'],['ERROR']
Availability," do before merging this PR and can probably be done by various people in parallel. Cling standalone:; - [x] Fix cling CUDA tests; - [ ] Fix the remaining test failures (6, see below); - [x] Revert the commit 'FIXME: Undo this change and debug why we have PendingInstances.'. <details>; <summary>Cling test failures</summary>. Failures in `master` on my system:; ```; Cling :: CodeUnloading/PCH/VTables.C; Cling :: DynamicLibraryManager/callable_lib_L_AB_order1.C; ```. Remaining failures (excluding the ones above):; ```; Cling :: CodeGeneration/Symbols.C; Cling :: CodeUnloading/AtExit.C; Cling :: CodeUnloading/PCH/VTablesClingPCH.C; Cling :: CodeUnloading/RereadFile.C; Cling :: ErrorRecovery/StoredState.C; Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; </details>. ROOT:; - [x] Compare the build size against master; - [x] Compare the `.pcm` file size against master; - [ ] Add flags to ignore compilation warnings coming from llvm; - [x] Remove the FIXME from commit 'Add another symbol generator to resolve the generated lazy symbol' - the explanation is in the commit; - [x] Fix the llvm::StringRef conversion failures on OSX. <details>; <summary>; Binary Size this PR needs 13% more space (2.3 vs 2. GB); </summary>. ```; du -hs root-release-llvm13; 2.3G	.; (base) vvassilev@vv-nuc /build/vvassilev/root-release-llvm13 $ du -hs ../root-release-master/; 2.0G	../root-release-master/; ```. </details>. <details>; <summary>; Module files need ~5% more space on disk (215 vs 206 MB); </summary>. ```; diff -y llvm13 master ; 424K	lib/ASImageGui.pcm				 |	444K	lib/ASImageGui.pcm; 468K	lib/ASImage.pcm					 |	484K	lib/ASImage.pcm; 4.2M	lib/_Builtin_intrinsics.pcm			 |	4.0M	lib/_Builtin_intrinsics.pcm; 48K	lib/_Builtin_stddef_max_align_t.pcm		 |	44K	lib/_Builtin_stddef_max_align_t.pcm; 200K	lib/Cling_Runtime_Extra.pcm			 |	132K	lib/Cling_Runtime_Extra.pcm; 100K	lib/Cling_Runtime.pcm					100K	lib/Cling_Runtime.pcm; 11M	lib/Core.pcm					 |	9.6M	lib/Core.pcm; 564K	lib/EG.pcm					 |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294:1151,failure,failures,1151,https://root.cern,https://github.com/root-project/root/pull/10294,1,['failure'],['failures']
Availability," executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; at /home/pcanal/root_working/code/master/core/metacling/src/TCling.cxx:1590. This PR fixes #11686",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687:1275,Error,Error,1275,https://root.cern,https://github.com/root-project/root/pull/11687,5,"['Error', 'error']","['Error', 'error-rint-pcm-is-out-of-date-cannot-read-module-signature']"
Availability," extern size_t getpagesize PARAMS ((void));; | ^~~~~~~~~~~; In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,; from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:; /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here; 163 | int getpagesize(void);; | ^~~~~~~~~~~; ```. The relevant part of `mmapsup.c` is:; ```c; #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \; || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)); extern size_t getpagesize PARAMS ((void));; #else; extern int getpagesize PARAMS ((void));; #endif; ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but agai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253:1234,error,error,1234,https://root.cern,https://github.com/root-project/root/issues/9253,1,['error'],['error']
Availability," f5 f5; 0x10007e757b50: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; Shadow gap: cc; ==529104==ABORTING; ```; ```; at src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:49; at src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:41; compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess, result=0x7ffff3afd8c0, disableValuePrinting=false); at src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:314; input_line=0x7ffff3afd829 ""#define XYZ 21"", compRes=@0x7ffff3afd910: cling::Interpreter::kSuccess,; result=0x7ffff3afd8c0) at src/core/metacling/src/TCling.cxx:2431; error=0x7fffd78cb0f4 <x>) at src/core/metacling/src/TCling.cxx:2591; sync=false, err=0x7fffd78cb0f4 <x>) at src/core/base/src/TApplication.cxx:1472; line=0x7fffd78c9000 ""#define XYZ 21"", error=0x7fffd78cb0f4 <x>); at src/core/base/src/TROOT.cxx:2328; from asan/roottest/cling/other/fileClose_C.so; filename=0x6070000f0fd0 ""asan/roottest/cling/other/fileClose_C.so"", flag=257); at /home/axel/build/llvm/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:6270; at src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; permanent=false, resolved=true); at src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184; at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1444; T=0x0) at src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1560; at src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:57; actionResult=@0x7ffff39532b0: cling::MetaSema::AR_Success); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8041:7492,error,error,7492,https://root.cern,https://github.com/root-project/root/pull/8041,2,['error'],['error']
Availability, failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm90-install-error; cd root-feedstock; export CPU_COUNT=$(nproc); ./build-locally.py --debug linux_64_numpy1.16python3.8.____cpython; # Run the line printed which will be similar to; cd xxxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:7367,Error,Error,7367,https://root.cern,https://github.com/root-project/root/issues/7206,1,['Error'],['Error']
Availability," failure:; * Fedora 39; * C++20; * ROOT built in Release mode (-O3); * The test `dataframe-vecops`, which needs to be run via ctest and using gtest infrastructure; * The test being compiled in release mode too. The failure is:; ```; 730/2406 Test #393: gtest-tree-dataframe-test-dataframe-vecops ........................................................***Failed 5.01 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RDFAndVecOps; [ RUN ] RDFAndVecOps.ReadStdVectorAsRVec; [ OK ] RDFAndVecOps.ReadStdVectorAsRVec (4678 ms); [ RUN ] RDFAndVecOps.DefineRVec; [ OK ] RDFAndVecOps.DefineRVec (0 ms); [ RUN ] RDFAndVecOps.SnapshotRVec; [ OK ] RDFAndVecOps.SnapshotRVec (6 ms); [ RUN ] RDFAndVecOps.RVecBool; double free or corruption (out); CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```. And gdb says:; ```; 0 0x00007f25d4eae834 in __pthread_kill_implementation () from /lib64/libc.so.6; 1 0x00007f25d4e5c8ee in raise () from /lib64/libc.so.6; 2 0x00007f25d4e448ff in abort () from /lib64/libc.so.6; 3 0x00007f25d4e457d0 in __libc_message.cold () from /lib64/libc.so.6; 4 0x00007f25d4eb87a5 in malloc_printerr () from /lib64/libc.so.6; 5 0x00007f25d4eba840 in _int_free_merge_chunk () from /lib64/libc.so.6; 6 0x00007f25d4ebd3de in free () from /lib64/libc.so.6; 7 0x00007f25d6c5efa8 in TList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 8 0x00007f25d6c56566 in THashList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 9 0x00007f25d67235b5 in TDirectoryFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 10 0x00007f25d6741406 in TFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 11 0x00000000004324e1 in MakeTreeWithBools(std::__cxx11::basic_string<char, s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14803:1052,error,error,1052,https://root.cern,https://github.com/root-project/root/pull/14803,1,['error'],['error']
Availability," following test case:. test.c; ```cpp; #include ""TInterpreter.h""; #include ""TClass.h""; #include ""TMethod.h""; #include ""TROOT.h""; #include <iostream>. struct Dummy {; double x;; };. struct Dummy2{; };. template<typename... Args, typename Extra = Dummy2>; double sumT(Args... args) {; return (args.x + ...);; }. int test() {; auto meth_explicit = gROOT->GetGlobalFunctionWithPrototype(""sumT"", ""Dummy, Dummy, Dummy"");; TMethodCall call_explicit(meth_explicit);. double res;; const Dummy arg{5.};; const void *args[3] = {&arg, &arg, &arg};; call_explicit.Execute(nullptr, args, 3, &res);; std::cout << ""res = "" << res << std::endl;. return 0;; }; ```. The attempted call fails, because the ""extra"" template argument is explicitly appended to the list of template arguments when the call wrapper is compiled. (This issue prevents templated functions with this feature being called from PyROOT). ```; In file included from input_line_8:1:; /home/b/bendavid/pyrootdebug7/test.c:16:16: error: no member named 'x' in 'Dummy2'; return (args.x + ...);; ~~~~ ^; input_line_10:8:17: note: in instantiation of function template specialization 'sumT<Dummy, Dummy, Dummy, Dummy2, Dummy2>' requested here; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; ^; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; else {; (void)(((double (&)(Dummy, Dummy,; Dummy))sumT<Dummy, Dummy, Dummy, Dummy2>)(*(Dummy*)args[0], *(Dummy*)args[1],; *(Dummy*)args[2]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::Exec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12549:990,error,error,990,https://root.cern,https://github.com/root-project/root/issues/12549,1,['error'],['error']
Availability," for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]; 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]; 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]; 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]; 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:18049,error,error,18049,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability," for <class 'numpy.float32'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float32'> type is zero.; return self._float_to_str(self.smallest_subnormal); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:549: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; setattr(self, word, getattr(machar, word).flat[0]); /home/pcanal/.local/lib/python3.9/site-packages/numpy/core/getlimits.py:89: UserWarning: The value of the smallest subnormal for <class 'numpy.float64'> type is zero.; return self._float_to_str(self.smallest_subnormal); 2024-09-24 20:01:26.401521: F external/local_tsl/tsl/platform/default/env.cc:74] Check failed: ret == 0 (11 vs. 0)Thread tf_numa_-1_Eigen creation via pthread_create() failed.; [ERROR] Failed to generate model using python; CMake Error at /home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1. <end of output>; Test time = 54.61 sec; ----------------------------------------------------------; Test Failed.; ""PyMVA-Keras-Classification"" end time: Sep 24 20:02 UTC; ""PyMVA-Keras-Classification"" time elapsed: 00:00:54; ```. Other errors:. ```; 14323: system_error: Resource temporarily unavailable; 614356:/bin/sh: fork: retry: Resource temporarily unavailable; 614357:/bin/sh: fork: retry: Resource temporarily unavailable; 614358:/bin/sh: fork: retry: Resource temporarily unavailable; 614359:/bin/sh: fork: retry: Resource temporarily unavailable; 614360:/bin/sh: fork: Resource temporarily unavailable; 614444:/bin/sh: fork: retry: Resource temporarily unavailable; 614445:/bin/sh: fork: retry: Resource temporarily unavailable; 614446:/bin/sh: fork: retry: Resource temporarily unavailable; 614447:/bin/sh: fork: retry: Resource temporarily unavailable; 616571:LLVM ERROR: pthread_crea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:3584,ERROR,ERROR,3584,https://root.cern,https://github.com/root-project/root/issues/16552,2,"['ERROR', 'Error']","['ERROR', 'Error']"
Availability," frame #50: 0x0000000103e552a5 libCling.so`cling::MetaProcessor::process(this=0x0000000100b65aa0, input_line=(Data = ""threadsh2()"", Length = 11), compRes=0x00007fff5fbfb540, result=0x00007fff5fbfbde0, disableValuePrinting=false) at MetaProcessor.cpp:341; frame #51: 0x000000010397bd63 libCling.so`HandleInterpreterException(metaProcessor=0x0000000100b65aa0, input_line=""threadsh2()"", compRes=0x00007fff5fbfb540, result=0x00007fff5fbfbde0) at TCling.cxx:2053; frame #52: 0x000000010397a16e libCling.so`TCling::ProcessLine(this=0x0000000100a0de40, line="".X /opt/build/root_builds/master.debug/tutorials/thread/./threadsh2.C+"", error=0x00007fff5fbfd694) at TCling.cxx:2170; frame #53: 0x0000000103984436 libCling.so`TCling::ProcessLineSynch(this=0x0000000100a0de40, line="".X /opt/build/root_builds/master.debug/tutorials/thread/./threadsh2.C+"", error=0x00007fff5fbfd694) at TCling.cxx:3044; frame #54: 0x00000001001f3133 libCore.so`TApplication::ExecuteFile(file=""threadsh2.C+"", error=0x00007fff5fbfd694, keep=false) at TApplication.cxx:1143; frame #55: 0x00000001001f19e0 libCore.so`TApplication::ProcessFile(this=0x0000000100b113e0, file=""threadsh2.C+"", error=0x00007fff5fbfd694, keep=false) at TApplication.cxx:1015; frame #56: 0x00000001001f138f libCore.so`TApplication::ProcessLine(this=0x0000000100b113e0, line="".x threadsh2.C+"", sync=false, err=0x00007fff5fbfd694) at TApplication.cxx:988; frame #57: 0x000000010009878d libRint.so`TRint::ProcessLineNr(this=0x0000000100b113e0, filestem=""ROOT_cli_"", line="".x threadsh2.C+"", error=0x00007fff5fbfd694) at TRint.cxx:756; frame #58: 0x0000000100097daf libRint.so`TRint::Run(this=0x0000000100b113e0, retrn=false) at TRint.cxx:416; frame #59: 0x00000001000027a4 root.exe`main(argc=1, argv=0x00007fff5fbff780) at rmain.cxx:30; frame #60: 0x00007fffaafdb235 libdyld.dylib`start + 1. thread #12; frame #0: 0x00007fffab109bf2 libsystem_kernel.dylib`__psynch_cvwait + 10; frame #1: 0x00007fffab1f57fa libsystem_pthread.dylib`_pthread_cond_wait + 712; frame #2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573:9565,error,error,9565,https://root.cern,https://github.com/root-project/root/pull/1573,1,['error'],['error']
Availability," from /lib64/libc.so.6; 1 0x00007f25d4e5c8ee in raise () from /lib64/libc.so.6; 2 0x00007f25d4e448ff in abort () from /lib64/libc.so.6; 3 0x00007f25d4e457d0 in __libc_message.cold () from /lib64/libc.so.6; 4 0x00007f25d4eb87a5 in malloc_printerr () from /lib64/libc.so.6; 5 0x00007f25d4eba840 in _int_free_merge_chunk () from /lib64/libc.so.6; 6 0x00007f25d4ebd3de in free () from /lib64/libc.so.6; 7 0x00007f25d6c5efa8 in TList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 8 0x00007f25d6c56566 in THashList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 9 0x00007f25d67235b5 in TDirectoryFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 10 0x00007f25d6741406 in TFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 11 0x00000000004324e1 in MakeTreeWithBools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (); 12 0x00000000004328da in RDFAndVecOps_RVecBool_Test::TestBody() (); 13 0x00007f25d56af4a3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; 14 0x00007f25d569a7fe in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; 15 0x00007f25d569aa05 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; 16 0x00007f25d569ab57 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; 17 0x00007f25d56a8210 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; 18 0x00007f25d56a6f68 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; 19 0x000000000042b27f in main (); ```. Also, this particular failure is triggered by exactly the following commit (identified with `git bisect`). https://github.com/root-project/root/commit/5ce8024d5b392410059486967e714c871d454ea9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14803:2996,failure,failure,2996,https://root.cern,https://github.com/root-project/root/pull/14803,1,['failure'],['failure']
Availability," guess SrvAuthenticate is defined in DaemonUtils.[h|cxx] and refers to the libSrvAuth !; ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Error(""Authenticate"", ""can't find SrvAuthenticate"");; ```. Additionally, https://root.cern/doc/master/authserv_8C.html is not working due to this. Knowing that there are all these ./src/net/net/ useful classes about remote connections.. why is that TSocket is being deprecated ? https://github.com/root-project/root/commit/8ef5d04e0102290cc2457c5a7cc40fc9874fa006 . This is incredibly useful feature.. same for all other basic communication protocol developped in `./net/net/` directory. ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Error(""Authenticate"", ""can't find SrvAuthenticate"");; ```. ### Reproducer. https://root.cern/doc/master/authserv_8C.html; https://root.cern/doc/master/authclient_8C.html. ### ROOT version. 2023/08/01. ### Installation method. build form source. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13387:1999,Error,Error,1999,https://root.cern,https://github.com/root-project/root/issues/13387,1,['Error'],['Error']
Availability," here; #include <array>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'strin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:6772,error,error,6772,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability, implemented; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_destructible.h:40:53: error: no template named 'is_trivially_destructible'; inline constexpr bool is_trivially_destructible_v = is_trivially_destructible<_Tp>::value;; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:238:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/stdexcept:46:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/cstdlib:144:9: error: no member named 'at_quick_exit' in the global namespace; using ::at_quick_exit _LIBCPP_USING_IF_EXISTS;; ~~^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/cstdlib:145:9: error: no member named 'quick_exit' in the global namespace; using ::quick_exit _LIBCPP_USING_IF_EXISTS;; ~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:11218,error,error,11218,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability," in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranEmpDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: CMake Error at C:/Users/sftnight/git/master/cmake/modules/RootTestDriver.cmake:232 (message):; 151: error code: 1; 151:; 151:; 2/2 Test #151: test-stresshistofit-interpreted ...***Failed Error regular expression found in output. Regex=[FAILED|Error in] 10.55 sec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312:3408,Error,Error,3408,https://root.cern,https://github.com/root-project/root/pull/3312,6,"['Error', 'error']","['Error', 'error']"
Availability," in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**; The error message helps neither; - to find out the call origin ; - to identify the root cause; - to fix the problem. as it provides ; 1. neither the parameters used in the top call ; 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** ; (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `); ```diff; diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx; index b8acf771d9..2f844b98da 100644; --- a/graf2d/graf/src/TTF.cxx; +++ b/graf2d/graf/src/TTF.cxx; @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize); }; ; Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;; - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)); - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");; + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);; + if (err); + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);; }; ; ////////////////////////////////////////////////////////////////////////////////; ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter).; The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**; In our case it allowed to find out that the automatic calculation of the TextSize value provided to the call was getting haywire due to a too small canvas (1x1 pixel), leading to large or negative values for `tsize`, maybe due to slightly different floating point calculations in Debian12. ### ROOT version. At least `v6.22` to `v6.26.10` but correspo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592:1227,Error,Error,1227,https://root.cern,https://github.com/root-project/root/issues/14592,4,"['Error', 'error']","['Error', 'error']"
Availability," in TPad::FillCollideGrid(TObject*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fe98b1de2eb in TPad::PlaceBox(TObject*, double, double, double&, double&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /afs/cern.ch/user/a/averbyts/Projects/zevis/test/pad2.cxx:84; ===========================================================. [averbyts@lxplus701 test]$ . ```; ## Expected behavior; No FPE. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TPad.h>; #include <TH1D.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:2916,mask,masks,2916,https://root.cern,https://github.com/root-project/root/issues/6428,1,['mask'],['masks']
Availability," in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```; Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C...; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]!; You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(); Maybe you need to load the corresponding shared library?; CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:951,Error,Error,951,https://root.cern,https://github.com/root-project/root/issues/6563,1,['Error'],['Error']
Availability," include <TH1D.h>; # include <TFile.h>; # include <TCanvas.h>; # include <TStyle.h>. # include <Riostream.h>; # include <iostream>. void particles_decay(int N0, double delta_t, double alpha, int seed = 1) {; double t=0.;; double T = 300.;. int N_survived = N0;; int N_decayed;. int N_steps = (int)(T/delta_t);; int step = 0;. double r;. TRandom3 *gRandom = new TRandom3();; gRandom -> SetSeed(seed);. TFile file(""particles_decay.root"", ""recreate"");. TCanvas* f = new TCanvas(""f"");. //creo oggetto TH1D per disegnare la funzione di decadimento; TH1D* N_vs_t = new TH1D(""N_vs_t"", ""Number of particles in time"", N_steps, 0, T);. while((t < T) && (N_survived > 0)) {. N_vs_t -> SetBinContent(step, N_survived);. //simulo decadimento radioattivo sulle particelle sopravvisute; N_decayed = 0;; for(int j=0; j<N_survived; j++){; r = gRandom -> Rndm();; if (r < alpha*delta_t) N_decayed++;; }. if (N_survived <= N_decayed) break;; N_survived -= N_decayed;. t += delta_t;; step++;; }. gStyle -> SetOptFit();; N_vs_t -> Fit(""expo"");. N_vs_t -> DrawCopy();. //Metto sul file root tutte le robe sovrapposte, nota che f punta al TCanvas aperto sopra, ; //mentre il file .root con quel nome era stato anche lui creato sopra.; f -> Print(""particles_decay.root"");. file.Close();; }; ```; This gives. ```; root [0] .L minimal.C; root [1] particles_decay(500, 1., 0.01); FCN=51.0153 FROM MIGRAD STATUS=CONVERGED 40 CALLS 41 TOTAL; EDM=4.6871e-07 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 6.20101e+00 7.29140e-03 1.63914e-05 -1.00223e-01; 2 Slope -1.01929e-02 6.74151e-05 1.51443e-07 4.24243e+00; Info in <TCanvas::SaveAs>: ROOT file particles_decay.root has been created; root [2] .L minimal.C; root.exe: /home/axel/build/root/master/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1513: void cling::Interpreter::unload(cling::Transaction&): Assertion `!T.getTopmostParent()->getNext() && ""Can not revert previous transactions""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9187:1594,ERROR,ERROR,1594,https://root.cern,https://github.com/root-project/root/issues/9187,2,['ERROR'],['ERROR']
Availability," included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/assert.h:8:; /usr/include/assert.h:69:13: error: exception specification in declaration does not match previous declaration; extern void __assert_fail (const char *__assertion, const char *__file,; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:349:31: note: previous declaration is here; __device__ static inline void __assert_fail(const char *__message,; ^; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:2:19: error: explicit specialization of undeclared template class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling; Maybe you need to load the corresponding shared library?; root [1]; ```; A really interesting observation is that `root.exe` includes and links to the CUDA SDK by default when it is available. ```C++; $ root.exe ; -----------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:13429,error,error,13429,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability," info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.9.2; -- Looking for ZLib; CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):; Maximum recursion depth of 1000 exceeded; Call Stack (most recent call first):; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); ... // many stack frames; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:55 (find_package); CMakeLists.txt:220 (include); ```. ### Setup. ROOT master cloned today on Windows 10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:3029,Error,Error,3029,https://root.cern,https://github.com/root-project/root/issues/8633,1,['Error'],['Error']
Availability," input=""threadsh2()"", CO=CompilationOptions @ 0x00007fff5fbfaae8, V=0x00007fff5fbfbde0, T=0x0000000000000000, wrapPoint=44) at Interpreter.cpp:1232; frame #49: 0x0000000103d79e27 libCling.so`cling::Interpreter::process(this=0x0000000100a0e3b0, input=""threadsh2()"", V=0x00007fff5fbfbde0, T=0x0000000000000000, disableValuePrinting=false) at Interpreter.cpp:684; frame #50: 0x0000000103e552a5 libCling.so`cling::MetaProcessor::process(this=0x0000000100b65aa0, input_line=(Data = ""threadsh2()"", Length = 11), compRes=0x00007fff5fbfb540, result=0x00007fff5fbfbde0, disableValuePrinting=false) at MetaProcessor.cpp:341; frame #51: 0x000000010397bd63 libCling.so`HandleInterpreterException(metaProcessor=0x0000000100b65aa0, input_line=""threadsh2()"", compRes=0x00007fff5fbfb540, result=0x00007fff5fbfbde0) at TCling.cxx:2053; frame #52: 0x000000010397a16e libCling.so`TCling::ProcessLine(this=0x0000000100a0de40, line="".X /opt/build/root_builds/master.debug/tutorials/thread/./threadsh2.C+"", error=0x00007fff5fbfd694) at TCling.cxx:2170; frame #53: 0x0000000103984436 libCling.so`TCling::ProcessLineSynch(this=0x0000000100a0de40, line="".X /opt/build/root_builds/master.debug/tutorials/thread/./threadsh2.C+"", error=0x00007fff5fbfd694) at TCling.cxx:3044; frame #54: 0x00000001001f3133 libCore.so`TApplication::ExecuteFile(file=""threadsh2.C+"", error=0x00007fff5fbfd694, keep=false) at TApplication.cxx:1143; frame #55: 0x00000001001f19e0 libCore.so`TApplication::ProcessFile(this=0x0000000100b113e0, file=""threadsh2.C+"", error=0x00007fff5fbfd694, keep=false) at TApplication.cxx:1015; frame #56: 0x00000001001f138f libCore.so`TApplication::ProcessLine(this=0x0000000100b113e0, line="".x threadsh2.C+"", sync=false, err=0x00007fff5fbfd694) at TApplication.cxx:988; frame #57: 0x000000010009878d libRint.so`TRint::ProcessLineNr(this=0x0000000100b113e0, filestem=""ROOT_cli_"", line="".x threadsh2.C+"", error=0x00007fff5fbfd694) at TRint.cxx:756; frame #58: 0x0000000100097daf libRint.so`TRint::Run(this=0x0000000100b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573:9214,error,error,9214,https://root.cern,https://github.com/root-project/root/pull/1573,1,['error'],['error']
Availability," int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b5a6); #24 0x68c8b594 in clang::ASTStmtWriter::Emit(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b594); #25 0x68ca4c29 in clang::ASTWriter::WriteSubStmt(class clang::Stmt *) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11234c29); #26 0x68c8b96c in clang::ASTRecordWriter::FlushStmts(void) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x1121b96c); #27 0x68b342ca in clang::ASTRecordWriter::Emit(unsigned int, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x110c42ca); ; ==6948==HINT: if you don't care about these errors you may set allocator_may_return_null=1; SUMMARY: AddressSanitizer: out-of-memory (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141) ; ==6948==ABORTING; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule;F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule;F:\gitP\root-project\root\CMakeLists.txt' exited with code 1. ; ```; ### To Reproduce; 1. Open a x86 Native Tools Command Prompt for VS 2019; 2. `git clone https://github.com/root-project/root.git root_src`; 3. `mkdir root_build && cd root_build`; 4. `cmake -G""Visual Studio 16 2019"" -A Win32 -Dtesting=ON -Droottest=ON ../root_src`; 5. `set _CL_= /fsanitize=address /GS- /wd5072 & set _LINK_= /InferASanLibs /incremental:no /debug` (please make sure use _ _ to inclose CL and LINK, since _ _ will style text Italic here ); 6. `set ASAN_OPTIONS=detect_odr_violation=0`; 7. `cmake --build . --config Release` . ### Setup; <!--; 1. Operating system: Windows 10; 2. How you obtained ROOT: built it myself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:6232,error,error,6232,https://root.cern,https://github.com/root-project/root/issues/9445,1,['error'],['error']
Availability," io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:24203,error,error,24203,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability," is set in the rootrc file. ### To Reproduce; 1. Set `OpenGL.CanvasPreferGL: 1` in rootrc file.; 2. In an interactive root session:. `(new TLatex(0.1, 0.3, ""#epsilon""))->Draw()`. leads to garbage being printed in the canvas. Other Greek letters, including #varepsilon, work fine, as does the problematic code when using `OpenGL.CanvasPreferGL: 0` instead. ### Setup; 1. ROOT version: 6.22/02; 2. Operating system Ubuntu 18.04.4; 3. How you obtained ROOT: built it myself. I find the same behaviour on an Arch Linux system. ### Additional context. The letter epsilon was found to be problematic before: [(ROOT-2048)](https://sft.its.cern.ch/jira/browse/ROOT-2048). As a workaround, using #varepsilon works fine, but according to the [TLatex](https://root.cern.ch/doc/master/classTLatex.html) documentation, #epsilon is a valid symbol, so at the very least, the documentation should be changed. Sometimes, not always, modifying the canvas that contains the #epsilon symbol, e.g. by resizing it, leads to a segmentation fault:. ```; #5 0x00007ff3298dd7e9 in FTCharmap::GlyphListIndex(unsigned int) () from /usr/lib/x86_64-linux-gnu/libftgl.so.2; #6 0x00007ff3298dfc9d in FTGlyphContainer::Glyph(unsigned int) const () from /usr/lib/x86_64-linux-gnu/libftgl.so.2; #7 0x00007ff3298e494b in FTFontImpl::CheckGlyph(unsigned int) () from /usr/lib/x86_64-linux-gnu/libftgl.so.2; #8 0x00007ff3298e5435 in FTFont::BBox(char const*, int, FTPoint, FTPoint) () from /usr/lib/x86_64-linux-gnu/libftgl.so.2; #9 0x00007ff329eac7a4 in TGLFont::BBox(char const*, float&, float&, float&, float&, float&, float&) const () from /home/henning/Software/root-6.22.02/lib/libRGL.so; #10 0x00007ff329eacf36 in TGLFont::Render(char const*, double, double, double, double) const () from /home/henning/Software/root-6.22.02/lib/libRGL.so; #11 0x00007ff329ee2911 in void TGLPadPainter::DrawTextHelper<char>(double, double, char const*, TVirtualPadPainter::ETextMode) () from /home/henning/Software/root-6.22.02/lib/libRGL.so; #12 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6755:1146,fault,fault,1146,https://root.cern,https://github.com/root-project/root/issues/6755,1,['fault'],['fault']
Availability," is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:792; 2187: #8 0x00007f2a60081efb in _GLOBAL__sub_I_libInitOrder.cxx () at roottest/root/meta/tclass/libInitOrder.cxx:123; 2187: #9 0x00007f2a631f305a in call_init (l=<optimized out>, argc=argc; 2187: entry=37, argv=argv; 2187: entry=0x7ffc0cd45a68, env=env; 2187: entry=0x61600030f680) at dl-init.c:72; 2187: #10 0x00007f2a631f315a in call_init (env=0x61600030f680, argv=0x7ffc0cd45a68, argc=37, l=<optimized out>) at dl-init.c:30; 2187: #11 _dl_init (main_map=0x61a00008b280, argc=37, argv=0x7ffc0cd45a68, env=0x61600030f680) at dl-init.c:119; 2187: #12 0x00007f2a617509bc in _dl_catch_exception () from /lib64/libc.so.6; 2187: #13 0x00007f2a631fa88e in dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:794; 2187: #14 dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:757; 2187: #15 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #16 0x00007f2a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:2006,error,error,2006,https://root.cern,https://github.com/root-project/root/issues/11867,2,['error'],['error']
Availability," issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:; ```; Torch Version: 2.0.1; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] Error 1; make[1]: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:949,error,error,949,https://root.cern,https://github.com/root-project/root/issues/13155,1,['error'],['error']
Availability," it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f45ad4d0bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f45ad43ff67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f45adc84afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:1424,error,error,1424,https://root.cern,https://github.com/root-project/root/issues/12358,1,['error'],['error']
Availability," it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:1341,error,error,1341,https://root.cern,https://github.com/root-project/root/issues/16577,1,['error'],['error']
Availability," it’s functionalities. I attached an example plot as a png picture. Unfortunatly I cannot upload the C macro here, but if you are interested you can find it on the forum: [https://root-forum.cern.ch/t/tgraphmultierrors-class-for-graphs-with-asymmetric-errors-and-multiple-different-y-error-types-e-g-statistic-and-systematic-errors/32784](https://root-forum.cern.ch/t/tgraphmultierrors-class-for-graphs-with-asymmetric-errors-and-multiple-different-y-error-types-e-g-statistic-and-systematic-errors/32784). Since the class reimplements all functionalities of TGraphAsymmErrors, you can refer to it’s documentation for most functionalities: https://root.cern.ch/doc/master/classTGraphAsymmErrors.html. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the functions TGraphMultiErrors::Paint, TGraphMultiErrors::PaintReverse and TGraphMultiErrors::PaintGraphMultiErrors. If this class should ever become part of ROOT the first two are to be deleted, cause there are similar functions in the class TGraphPainter and the last one is supposed to be inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:1423,Error,Error,1423,https://root.cern,https://github.com/root-project/root/pull/3449,1,['Error'],['Error']
Availability," like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./test.o; terminate called after throwing an instance of 'std::invalid_argument'; what(): Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; Aborted (core dumped); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063:1789,Error,Error,1789,https://root.cern,https://github.com/root-project/root/pull/11063,1,['Error'],['Error']
Availability," line 118 of `/scratch/tdietel/alisw/slc7_x86-64/ROOT/v6-28-04-14/include/TTreeReaderArray.h'; aborting; #0 0x00007fa77058860c in waitpid () from /lib64/libc.so.6; #1 0x00007fa770505f62 in do_system () from /lib64/libc.so.6; #2 0x00007fa7712b7b8c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fa771198e69 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TErrorDefaultHandler.cxx:177; #5 0x00007fa77124a7d5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fa750f2eabe """", fmt=<optimized out>, ap=0x7fff0771d888) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/foundation/src/TError.cxx:153; #6 0x00007fa77124b302 in Fatal (location=<optimized out>, fmt=<optimized out>) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/foundation/src/TError.cxx:251; #7 0x00007fa750f2a19e in void std::__merge_adaptive<TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, long, o2::trd::Tracklet64*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(o2::trd::Tracklet64, o2::trd::Tracklet64)> >(TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, long, long, o2::trd::Tracklet64*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(o2::trd::Tracklet64, o2::tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:4893,Error,ErrorHandler,4893,https://root.cern,https://github.com/root-project/root/issues/13314,1,['Error'],['ErrorHandler']
Availability, line 1949 in /opt/root_src/geom/geom/src/TGeoCone.cxx:1929; 2: Assuming 'id' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoCone.cxx:1954; 3: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoCone.cxx:1954; 4: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoCone.cxx:1965; 5: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoCone.cxx:1966; /opt/root_src/geom/geom/src/TGeoElement.cxx:894:46: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'TGeoElemIter::Next' in /opt/root_src/geom/geom/src/TGeoElement.cxx:861; 2: Assuming field 'fElem' is non-null in /opt/root_src/geom/geom/src/TGeoElement.cxx:910; 3: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:910; 4: Assuming 'i' is < 'nd' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 5: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 6: Calling 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 7: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoElement.cxx:895; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:895; 9: Assuming 'br' is >= field 'fLimitRatio' in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 11: Value assigned to field 'fDaughter' in /opt/root_src/geom/geom/src/TGeoElement.cxx:900; 12: Value assigned to field 'fElem' in /opt/root_src/geom/geom/src/TGeoElement.cxx:901; 13: Returning from 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 14: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 15: Assuming pointer value is null in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 16: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 17: Assuming 'i' is < 'nd' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 18: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:34073,Down,Down,34073,https://root.cern,https://github.com/root-project/root/issues/7428,1,['Down'],['Down']
Availability," memory available to the TTreeCache can not fit the entirety; of (potentially odd-shaped) cluster, the TTreeCache could end up with a situation; where (starting at some point) it is invalidated at each entry *and* the basket; from the previous cluster boundary up to some entry number less than the current; entry are loaded over and over again (until the entry number reaches the next cluster; boundary).; ; In a case encountered by CMS, a TTree has a recorded cluster size of 165 events. However the TTree; appears to not have been clustered; most basket size are the same and seem to be flushed at 139 events; interval. A few branches are flushed less frequently, for example EventAuxiliary is flushed every 459; entries.; ; As a consequence when entry 417 is requested, the cluster boundary is calculated as 330 and; the first end as 495. Then all basket containing entries in that range are loaded, including; EventAuxiliary's basket containing entries 459 to 917. Then 917 is the highest available (partial); entry available. Thus the next time the TTreeCache is invalidated is when entry 918 is requested.; As that point the cluster boundary is calculated as 845 and the first end as 495, however; (with the small enough TTreeCache size), the cache is full as soon as the basket for EventAuxiliary; is added. This resulted in a 'valid' range for this cache of 845 to 917 and lead to the reading; all the baskets added so far ... and thus eventhough none of them would be used for reading; and they already had been read once in memory. Then for entry 919, the exact same behavior; repeated.; ; The solution consist on marking the 'minimum' valid range as being 'at least' one cluster wide.; ; Thus in the example above for entry 918 through 989, **only** the missing baskets are read; individually resulting in 'degraded' performance but **not** a wild over-read.; ; A future enhancement would be, in those cases, restart the next buffer from the last valid; entry + 1 rather than the previous",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1778:1078,avail,available,1078,https://root.cern,https://github.com/root-project/root/pull/1778,2,['avail'],['available']
Availability," new class and everything I tried worked so I think now it's time to request the pull again. **Explanation**; My implementation is named TGraphMultiErrors and is basically a TGraphAsymmErrors with the possibility to include an unlimited amount of different types of y-Errors.; The whole functionality and naming convention of my class is strongly based on the TGraphAsymmErrors class. All functionalities of the TGraphAsymmErrors have been reimplemented. Furthermore like any other TGraph class it inherits from TGraph and has therefore all of it’s functionalities. I attached an example plot as a png picture. It's macro to be produced is included in the description part of the TGraphPainter class. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors and included a corresponding line in the TGraphPainter::PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple erro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:1367,Error,Error,1367,https://root.cern,https://github.com/root-project/root/pull/3452,1,['Error'],['Error']
Availability," nightlies, and nightlies are even slower. The time for a first compilation, so how long it's processing the line `Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so`, for running a script and directly the CompileMacro command in ipython:; | Version | py file | ipython |; | --- | --- | --- |; |Nightlies | 3m25s | 1m55s |; |6.22 | 1m35s | 1m05s|. The run time with `""kO""` option for the 2nd iteration of running, once binaries are created:; | Version | py file |; | --- | --- | ; |Nightlies | 1m15s | ; |6.22 | 0m30s | . All above times are on same lxplus machine. Between different lxplus machines the timing changes, but at best e.g from 30s down to 20s. Another test for how much time has elapsed e.g.:; ```sh; for version in /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh ; do (; source $version;; echo $version;; root --version -q; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; 14.56user 22.74system 2:30.29elapsed 24%CPU (0avgtext+0avgdata 869920maxresident)k; 14.52user 21.71system 2:08.49elapsed 28%CPU (0avgtext+0avgdata 870036maxresident)k; 14.26user 21.65system 1:13.75elapsed 48%CPU (0avgtext+0avgdata 869908maxresident)k; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh; ROOT Version: 6.25/01; Built f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774:1383,echo,echo,1383,https://root.cern,https://github.com/root-project/root/issues/7774,1,['echo'],['echo']
Availability," not found; ```. From this I conclude that those tests (in particular `TMVA_SOFIE_RDataFrame.C` and `tutorials/tmva/TMVA_SOFIE_GNN_Application.C`) are missing a dependencies that failed in the first run. Note `tutorial-tmva-TMVA_SOFIE_Keras_HiggsModel` and `tutorial-tmva-TMVA_SOFIE_RDataFrame-py` are indeed needing `TMVA_Higgs_Classification.C` to run first (it says so in the output! :) ). `tutorial-tmva-TMVA_SOFIE_RSofieReader` is asking for `Higgs_trained_model.h5`. `gtest-tmva-pymva-test-TestRModelParserKeras` is missing the symbol `sgemm_` (see below). However when rerunning (where this time somehow there was no resource related failures), I still got several failures:; ```; 346:gtest-tmva-pymva-test-TestRModelParserPyTorch; 350:gtest-tmva-pymva-test-TestRModelParserKeras; 984:tutorial-tmva-TMVA_SOFIE_GNN_Application; 988:tutorial-tmva-TMVA_SOFIE_RDataFrame; 990:tutorial-tmva-TMVA_SOFIE_RSofieReader; ```; all due to:; ```; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; or both; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Which may be due to either a badly formed result of the failing run (1) or due to an external package that does not have the correct version number?. ### Reproducer. ```; ctest -j 32 # and get lots of out of resource failures; ctest --rerun-failed; ctest -j 32; ```. ### ROOT version. master	. ### Installation method. hand build. ### Operating system. Alma9. ### Additional context. ```; jupyter-pcanal-rootdevel:quick-devel pcanal$ bin/root-config --features; cxx17 asimage builtin_clang builtin_cling builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_tbb builtin_vdt builtin_xxhash builtin_zlib builtin_zstd clad dataframe davix gdml http imt pyroot roofit root",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553:2352,failure,failures,2352,https://root.cern,https://github.com/root-project/root/issues/16553,2,['failure'],['failures']
Availability," not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:699:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/functional_hash.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:36:10: note: submodule of top-level module 'std' implicitly imported here; #include <initializer_list>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> // common_type_t, make_signed_t; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:24409,error,error,24409,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability," of ROOT using its CMake setup is not scaling well to many core systems at all. :frowning:. This is a snapshot of how ROOT 6.20/08 used my system's resources during its build:. ![root-6 20 08-build](https://user-images.githubusercontent.com/30694331/94133565-1d97ec80-fe61-11ea-927d-94b8926cd41b.png). The build starts ""pretty much"" at the left hand side of the timeline, and lasts until ""pretty much"" the right hand side of it. As you can see, the build starts out very well. Building LLVM scales perfectly to 64 threads. And I believe it would scale well to even beyond that. But once the LLVM build is done, many bottlenecks show up. First there is a big bottleneck with building `libCling` and `rootcling`, but after that the build of `libRIO` is also taking a surprising amount of time. And the build is stuck waiting for all of these. Towards the end things improve a bit once more, as many libraries / source files can build in parallel once more. But even then, very rarely does the build manage to make use of all of the available cores. ## Optional: share how it could be improved. From a quick glance it seems that ROOT's CMake configuration sets up way too many unnecessary dependencies between its build targets. Most of the issues seem to arise from how the dictionary generation is set up as far as I can see. In ATLAS I use the following code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:1181,avail,available,1181,https://root.cern,https://github.com/root-project/root/issues/6432,1,['avail'],['available']
Availability," of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “A P X Y0 S ; Z ; 5 s=0.5 ; 3” which means the graph is drawn with Axes, Markers, no Errors on X, no errors on points with y = 0 and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with lines without anything on their tip. The second error dimension (Point to Point Systematics) is drawn with boxes of half the width of the X-Errors. The third error dimension (Common Systematics) is drawn as an filled error band. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the individual ones add the Draw option “S” to the first block of the Draw options like in my example. I hope you find my class as useful as I do and vote for it to become part of ROOT in the future. :smile: . I tried to run the tests, but they failed at files having nothing to do with my implementation. There seem to be a few problem in the master branch which w",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:4763,error,error,4763,https://root.cern,https://github.com/root-project/root/pull/3449,2,"['Error', 'error']","['Errors', 'error']"
Availability," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here; std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; libc++abi: terminating due to uncaught exception of type std::runtime_error: ; An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash; All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6; ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656:3236,error,error,3236,https://root.cern,https://github.com/root-project/root/issues/13656,1,['error'],['error']
Availability," of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides; [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior; the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; root -b Minimum.C+. ### Setup; 1. ROOT version : 6.18.00; 2. Operating system : windows (session unix from mobaxterm); 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8005:2599,down,download,2599,https://root.cern,https://github.com/root-project/root/issues/8005,1,['down'],['download']
Availability," of the clicked point on the 3D coordinates of the drawn model. The ""depth"" is chosen such that the point on the drawn object surface below the mouse is picked. For ray-tracing, expect a correct ""solid"" drawing of the drawn volume. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Run the macro `$ROOTSYS/tutorials/geom/rootgeom.C; root[0] gGeoManager->GetVolume(""R"")->Draw(""ogl"");; Rotate the drawn ""R"", then go to tab ""Guides"" and select [Camera center]/Show; A marker should appear in the default center of view.; Now click on ""Pick center"", then click somewhere on the drawn letter ""R""; On linux, the center of view moves on the surface of ""R"" just below the mouse, and you can freely rotate about this; On mac, the center moves elsewhere than below the mouse position, showing that the device coordinates are wrongly mapped onto the scene coordinates. ; <img width=""848"" alt=""center_pick_mac"" src=""https://user-images.githubusercontent.com/18400453/213129268-db36b3b4-7ffb-4f65-9d9d-6051296cabf4.png"">. for ray-tracing testing:; root[0] gGeoManager->GetVolume(""R"")->Raytrace();; Linux:; ![r_ray_linux](https://user-images.githubusercontent.com/18400453/213126543-d15c9edb-fb94-460b-855b-9e66256060ad.png); MacBook Air (M1, 2020); <img width=""478"" alt=""r_ray_mac"" src=""https://user-images.githubusercontent.com/18400453/213126640-8c7e6a84-0178-4102-8c93-ec6ed938cbd2.png"">. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Any of the recent releases, tested on master; OS: linux Ok, mac buggy. ### Additional context; <!--; Add any other context about the problem here.; -->; See: https://root-forum.cern.ch/t/mouse-position-shifts-in-geometry-display/52937/4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12035:2896,down,download,2896,https://root.cern,https://github.com/root-project/root/issues/12035,1,['down'],['download']
Availability," of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors and included a corresponding line in the TGraphPainter::PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “a p s ; ; 5 s=0.5” which means the graph is drawn with Axes, Markers and ind",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:2745,error,error,2745,https://root.cern,https://github.com/root-project/root/pull/3452,1,['error'],['error']
Availability," of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:2081,Failure,Failure,2081,https://root.cern,https://github.com/root-project/root/issues/12427,1,['Failure'],['Failure']
Availability," on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:2225,ERROR,ERROR,2225,https://root.cern,https://github.com/root-project/root/issues/13895,1,['ERROR'],['ERROR']
Availability," out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:9816,error,error,9816,https://root.cern,https://github.com/root-project/root/issues/15738,1,['error'],['error']
Availability," port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s] 77 | __malloc_hook = p;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetFreeHook(TMemStatHook::FreeHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:88:4: error: '__free_hook' was not declared in this scope; [ 2135s] 88 | __free_hook = p;; [ 2135s] | ^~~~~~~~~~~; ~~~. Any suggestion to work around this would be highly appreciated. Thank you. (1) https://sourceware.org/pipermail/libc-alpha/2021-August/129718.html. [1]: https://sourceware.org/piperm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9031:1549,error,error,1549,https://root.cern,https://github.com/root-project/root/issues/9031,1,['error'],['error']
Availability," precision should be preserved when saving plots as ROOT macros with `TCanvas::SaveAs()`. This can probably be achieved with not too much effort using `std::setprecision`:; https://en.cppreference.com/w/cpp/io/manip/setprecision. ### Reproducer. Run this code, which works fine:. ```c++; TCanvas *c = new TCanvas(""c"", ""c"");; TH1D *histo = new TH1D(""histo"", ""histo"", 1, 595780500.110732, 595780531.878908);; histo->Draw();; c->SaveAs(""plot.C"");; ```. The resulting macro will not preserve the precision on the floating point numbers:; ```c++; TH1D *histo__1 = new TH1D(""histo__1"",""histo"",1,5.957805e+08,5.957805e+08);; ```; And you'll get an error when running it:; ```txt; Processing plot.C...; Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; root [1] Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With g++ (GCC) 13.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Nix. ### Operating system. NixOS (Linux). ### Additional context. Can easily happen in the analysis of timeseries, where one often has large axis values because they represent time with respect to some reference point far back in time (e.g. astrophysics, finance, ...)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16687:1061,Error,Error,1061,https://root.cern,https://github.com/root-project/root/issues/16687,1,['Error'],['Error']
Availability," print, the initialization `gROOT` is triggered and this includes the loading of the `rootmap files` which in turns warning about the (same) class being listed in 2 distinct `rootmap` files. ```; #0 0x00007f586472654d in __lll_lock_wait () from /lib64/libpthread.so.0; #1 0x00007f5864721e9b in _L_lock_883 () from /lib64/libpthread.so.0; #2 0x00007f5864721d68 in pthread_mutex_lock () from /lib64/libpthread.so.0; #3 0x00007f5865797806 in DebugPrint(char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #4 0x00007f5865797abd in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #5 0x00007f586584fb23 in ErrorHandler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #6 0x00007f58657aa2cc in TObject::Warning(char const*, char const*, ...) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #7 0x00007f584695be33 in TCling::ReadRootmapFile(char const*, TCling::TUniqueString*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so); #8 0x00007f5846990471 in TCling::LoadLibraryMap(char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11383:1215,Error,ErrorHandler,1215,https://root.cern,https://github.com/root-project/root/issues/11383,1,['Error'],['ErrorHandler']
Availability," printout; - Two are applied to TGeoVolumeAssembly objects and lead to these assembly having zero size bounding boxes (`/cave_1/sts_v22e_mcbm_0` and `/cave_1/sts_v22e_mcbm_0/Station01_1`); - One is applied to a Node and leads to 2 TGeoVolumeAssembly higher in the hierarchy to have zero size bounding boxes (`/cave_1/sts_v22e_mcbm_0/Station02_2/Ladder10_2/HalfLadder10d_2/HalfLadder10d_Module04_2`); <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 3. Don't forget to attach the required input files!; 4. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT 6.22.08, 6.26.10; 1. OS: Debian 8, Debian 10, Ubuntu 20.04; 1. Compiler: GCC > 8; 1. ROOT provided (compilation/installation) from:; - FairSoft apr21 (and patch releases) for 6.22, Legacy mode (""not Spack""); - FairSoft nov22 (and patch releases) for 6.26, Legacy mode (""not Spack""). <!--; 1. ROOT version; 3. Operating system; 5. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; - Fixed for now on the Fairroot side by [PR 1244](https://github.com/FairRootGroup/FairRoot/pull/1244/files#diff-91fa880fced775e0a97b72507da489affb1a15a59197901ae774ed40d6ca1ca1) ([Issue 1243](https://github.com/FairRootGroup/FairRoot/issues/1243)); - Unsure if this is a not-well documented intended behavior or an unexpected bug; - Adding a call to `gGeoManager->CloseGeometry();` instead of the fix used in FairRoot (as advised in [ROOT-7420](https://sft.its.cern.ch/jira/browse/ROOT-7420) for the AddNode case) does not cure the problem and results in a warning that the geometry is already closed; - I am not the author nor an expert of the section of code used to apply the alignment matrices in Fairsoft, which I copied in the example macro. For questions there I may have to forward to the corresponding developers.; - Investigation done by myself and @fuhlig1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242:3858,down,download,3858,https://root.cern,https://github.com/root-project/root/issues/12242,1,['down'],['download']
Availability," realfilename = safemalloc( dirname_len+filename_len+1 );; ^; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; free( realfilename );; ^; export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'; export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; curr = calloc(*size, 1);; ^; export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'; export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; buff->buffer = realloc( buff->buffer, buff->allocated_size );; ^; export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'; 4 errors generated.; make[3]: *** [Makefile:346: export.o] Error 1; make[3]: *** Waiting for unfinished jobs....; ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is never included when compiling `export.c` (see [HAVE_STDLIB_H check](https://github.com/root-project/root/blob/master/graf2d/asimage/src/libAfterImage/export.c#L71)). Including `stdlib.h` is what the error message tells you to do and fixes the build for me. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15044:1395,error,error,1395,https://root.cern,https://github.com/root-project/root/pull/15044,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability," reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:1215,error,error,1215,https://root.cern,https://github.com/root-project/root/issues/10777,1,['error'],['error']
Availability," reproduce what I'm doing it docker by running:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git; cd root-feedstock; git checkout llvm90-install-error; # Adjust CPU_COUNT as required; CPU_COUNT=192 ./build-locally.py --debug --output-id '*root_base*' linux_64_numpy1.16python3.8.____cpython; # When the container launches, look at the output and run the suggested command; # which will be of the form:; cd xxxxx && source xxxxx/build_env_setup.sh; source $RECIPE_DIR/build_root-base.sh; # Anything with ROOT will now fail, e.g.; root; # Rather than waiting to build again, you can roll back to before; # ""make install"" was ran by running; cd ../..; rm -rf $PWD/*; cp -rp $PWD.bak/* $PWD/; cd -; ```. >The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:; >```log; >$ root -b -q -x -e 1+2; >input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap); >#include <new>; > ^; >input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:1408,error,error,1408,https://root.cern,https://github.com/root-project/root/issues/7055,1,['error'],['error']
Availability," root stopped working. I would try to run my old macros and the system would always break (can't find those logs now, I'm sorry!). ### Reproducer. I was using the precompiled version and therefore I have uninstalled it and tried to reinstall it again. From the root webpage I was suggested to do so via snap. I managed to install it and in the end, when I oppened a session and tried new TBrowser() to check some hists and if everything was according to how it was previously, I got this as header of the break:. ```; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TGVSplitter::TGVSplitter>: splitterv.xpm not found; Error in <TGHSplitter::TGHSplitter>: splitterh.xpm not found; Error in <TGComboBox::TGComboBox>: arrow_down.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found; ```. I proceeded to uninstall it and try to build it on my own.; I followed the instructions on this webpage https://root.cern/install/build_from_source/ after checking all the dependencies. When I made the first cmake I got some things that it couldn't find which would give the following lines on terminal. ```; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; ```; The things it couldn't find were:; ```; PCRE; xxHash; ZSTD; GIF; TIFF; JPEG; GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the following lines ; ```; -- clang project is enabled; -- clang-tools-extra project is disabled; -- compiler-rt project is disabled; -- cross-project-tests project is disabled; -- libc project is disable",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:1182,Error,Error,1182,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Error'],['Error']
Availability," special column `rdfentry_`, despite the name, does not correspond to the global TChain entry number _in MT runs_ (see also [the relevant docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#helper-cols)). This is surprising for users (hence the big warning in the docs linked above) and makes it unnecessarily difficult to e.g. attach a numpy array as an additional column (because it's hard to index into it correctly without stable global row numbers). We could instead make `rdfentry_` always match the ""real"" (global) entry number in the dataset -- if only each MT task knew the offset of the current tree w.r.t. all other trees in the chain. ### Proposed solution . - have TTreeProcessorMT tell each MT task which tree it is processing w.r.t. to the global chain (`#1`, `#2`, `#3`, ...); - have each task calculate its tree's offset by going over a list of tree entry numbers, filling missing values as needed (the list of entry numbers would be implemented as an array of fixed size `nTrees` with atomic elements. This plus the fact that threads only need to write into the atomic elements if they see the value has not been calculated yet should minimize thread contention) . ### Other solution considered. - we could always build a global TChain, for every task, and always use global entry numbers everywhere. However this would require that TTreeProcessorMT reads out the number of entries in each tree before the tasks even start, because it first needs to come up with entry ranges for each task. My intuition is that this would bring a larger performance impact than the proposed solution: we know from DistRDF that the (redundant) opening O(1k) remote files at startup is a significant cost.; - we could do nothing: `rdfentry_` would be unstable and it could not be relied upon to e.g. index into manually added ""friend columns"" or to fill TEntryLists (like [this user would have liked to do](https://root-forum.cern.ch/t/accessing-entry-information-using-rdataframe/52378))",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190:1661,redundant,redundant,1661,https://root.cern,https://github.com/root-project/root/issues/12190,1,['redundant'],['redundant']
Availability," std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::_M_insert_range_unique<const std::pair<const std::__cxx11::basic_string<char>, bool> *>' requested here; { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }; ^; /home/blue/Scratchpad/work/forum_rvec_crash_2/repro_modules_crash.C:2:31: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char>, bool, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::map' requested here; std::map<std::string, bool> m{{""foo"", true}, {""bar"", false}};; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:315:7: note: previous definition is here; operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT; ^; ```. Note 1: A `Release` build seems to work fine. I can reproduce the problem on CentOS 8 Stream with a self-built GCC 11.1.0. When testing with self-built versions of GCC 11.2.0, 10.2.0, and 9.3.0, I get a probably related crash `ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:3857: unsigned int clang::FunctionDecl::getODRHash() const: Assertion 'hasODRHash()' failed.` where the `FunctionDecl` is the constructor of `std::_Rb_tree_iterator`. Note 2: The system-default GCC 8.5.0 and a self-built GCC 8.4.0 are both fine. The only ""relevant"" change that I see for `_Rb_tree_iterator` in GCC 9 is the move from (member) `bool operator==` to `friend bool operator==`, which matches the error message quite nicely. Finally, I was able to reproduce the assertion in a Docker container of `ubuntu:latest` (Ubuntu 22.04.4 LTS at the time of writing), after installing; ```; # apt update; # apt upgrade; # apt install --no-install-recommends ca-certificates cmake gcc g++ git libc6-dev libz-dev make ninja-build patch python3 uuid-dev; ```; and then configuring as `cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -Dx11=OFF ../root.src/`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291:3004,error,error,3004,https://root.cern,https://github.com/root-project/root/issues/10291,1,['error'],['error']
Availability," the bug; If an exception happens on the C++ side during the execution of an RDF task within a Dask worker process, this is not properly propagated. Most times it leads to some kind of unrepairable error. Take the following example. ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. The expected error here is that the graph cannot be filled with columns of mixed scalar/vector types. Running the code above gives; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```; Followed by the usual gdb stacktrace produced by ROOT. This happens because Dask tries to serialize the error object in order to send it back to the user. But the exception cannot be serialized by ROOT as stated in the warning. ### Expected behavior; The C++ exceptions should be properly propagated to the user. ### Setup; ROOT master; GCC 12; Fedora 36",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11050:1475,Error,Error,1475,https://root.cern,https://github.com/root-project/root/issues/11050,4,"['Error', 'error']","['Error', 'error']"
Availability," the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[1], line 3; 1 from ROOT import TObject; ----> 3 class C(TObject):; 4 def __init__(self):; 5 super().__init__() # Call the constructor of TObject. TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. ### ROOT version. ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 18 2024, 04:46:14; From tags/v6-32-02@v6-32-02. ROOT Version: 6.32.06; Built for linuxx8664gcc on Sep 21 2024, 19:19:59; From tags/v6-32-06@v6-32-06. ### Installation method. pre-built binary. ### Operating system. Linux, Ubuntu 23. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16520:1400,error,error,1400,https://root.cern,https://github.com/root-project/root/issues/16520,3,['error'],['error']
Availability," the same type and the result of the merge operation should still know how to merge again. To this end, a new function called `GetMergeableValue` takes as input an RResultPtr<T> , e.g. the last action node of the graph, and returns an `RMergeableValue<T>*`, a new class that satisfies the previous requirements. The choice of creating a new class instead of, for example, returning the standard return value plus a function to merge two values of that type, has to do with the second requirement above.; In fact, while this could be feasible with the return value of a `Count` operation (the merge function would just be the sum of the two count values), it would not be enough for all operations.; Notably, to merge results of two `Mean` operations we would need also the counts of each mean to merge them as a weighted mean, so the function would take 4 parameters of which at most 2 are known beforehand (the mean and the counts of the action that is currently being examined by the GetMergeableValue function), while the other 2 parameters wouldn't be known until the user tries to perform the Merge on the two values. RMergeableValue is created after the execution of the computation graph from the information contained in the various action helpers in ""tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx"".; RMergeableValue itself is a base class, with RMergeableGenericAction as the derived class that is mostly used to get the right information from the helpers, e.g. the value of the action and a function to merge two of those values. For specific actions that require more information, e.g. `Mean`, more derived classes can be created, e.g. `RMergeableMean`. The class instances are passed as void* up the call chain: ActionHelper-->RAction-->RActionBase-->ROOT::Detail::RDF::GetMergeableValue(); In the function they are `static_cast`ed back to their correct RMergeableValue<T>* type. Currently, two tests are available to show the usage of this feature with the `Count` and `Mean` operations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5552:2587,avail,available,2587,https://root.cern,https://github.com/root-project/root/pull/5552,1,['avail'],['available']
Availability," to be affected.; This may be caused by a bad interaction between `RooKeysPdf` and `RooAcceptReject`, since adding a prototype switches the generator from `RooFoamGenerator` to `RooAcceptReject`.; I verified that forcing `RooFoamGenerator` (which I can only do by recompiling ROOT, as far as I know) solves the issue. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Generation works correctly regardless of prototype data. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); pdf_x = ROOT.RooGenericPdf('pdf_x', 'x', [x]). # correct, of course; dt_base = pdf_x.generate({x}, NumEvents = 10000). pdf_keys = ROOT.RooKeysPdf('pdf_keys', '', x, dt_base, ROOT.RooKeysPdf.MirrorBoth). # also correct; dt_keys = pdf_keys.generate({x}, NumEvents = 10000). y = ROOT.RooRealVar('y', '', 0, 1); proto = ROOT.RooDataSet('proto_y', '', {y}); proto.add(ROOT.RooArgSet(y)). # still correct; dt_base_with_proto = pdf_x.generate({x}, NumEvents = 10000, ProtoData = proto). # broken; dt_keys_with_proto = pdf_keys.generate({x}, NumEvents = 10000, ProtoData = proto). frame = x.frame(); dt_base.plotOn(frame); dt_keys.plotOn(frame, MarkerColor = 'b'); dt_keys_with_proto.plotOn(frame, MarkerColor = 'r'); dt_base_with_proto.plotOn(frame, MarkerColor = 'g'). frame.Draw(); ```; Note that while in the example the prototype is useless this can easily happen when the `RooKeysPdf` is part of a larger pdf which does use the it. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12286:2653,down,download,2653,https://root.cern,https://github.com/root-project/root/issues/12286,1,['down'],['download']
Availability," to withdraw it and clean everything up before I request it again. And here we are, I ran some additional bugfixing and the ROOT tests which succeeded. Furthermore I tested my new class and everything I tried worked so I think now it's time to request the pull again. **Explanation**; My implementation is named TGraphMultiErrors and is basically a TGraphAsymmErrors with the possibility to include an unlimited amount of different types of y-Errors.; The whole functionality and naming convention of my class is strongly based on the TGraphAsymmErrors class. All functionalities of the TGraphAsymmErrors have been reimplemented. Furthermore like any other TGraph class it inherits from TGraph and has therefore all of it’s functionalities. I attached an example plot as a png picture. It's macro to be produced is included in the description part of the TGraphPainter class. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors an",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:1175,Error,Errors,1175,https://root.cern,https://github.com/root-project/root/pull/3452,2,"['Error', 'error']","['Errors', 'error']"
Availability," tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2: -v; Error in <TFile::TFile>: file -v does not exist; Error in <TFileMerger::AddFile>: cannot open file -v; hadd exiting due to error in -v; ```; Result: target.root created, but contains no tree and no entries. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version:; ```; ------------------------------------------------------------; | Welcome to ROOT 6.14/09 http://root.cern.ch |; | (c) 1995-2018, The ROOT Team |; | Built for linuxx8664gcc |; | From tag , 22 November 2018 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. Operating system:; ```; cat /etc/re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11372:2070,error,error,2070,https://root.cern,https://github.com/root-project/root/issues/11372,1,['error'],['error']
Availability," type [-fpermissive]; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2469:; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:15: note: to match this '('; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/too",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:6107,error,error,6107,https://root.cern,https://github.com/root-project/root/issues/9424,1,['error'],['error']
Availability," unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39 on i686; 3. How you obtained ROOT: compilation from source. ### Additional context. Logs for the two failing tests:. gtest-tree-ntuple-v7-test-ntuple-types fails due to alignment differences for std::tuple and std::pair. ~~~; 479/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 13.57 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNTuple.StdPair; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:102: Failure; Expected equality of these values:; (alignof(std::pair<int64_t, float>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdPair (287 ms); [ --- ]; [ RUN ] RNTuple.StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:1131,Failure,Failure,1131,https://root.cern,https://github.com/root-project/root/issues/12427,1,['Failure'],['Failure']
Availability," with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:1471,error,error,1471,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability," with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; TDavixFile* https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; KEY: TTree TreeS;1 TreeS; KEY: TTree TreeB;1 TreeB; KEY: TTree Sig;1 TreeS; KEY: TTree Bkg;1 TreeB; `. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; ROOT Version: 6.24/00; Built for linuxx8664gcc on Apr 14 2021, 14:33:50; From tags/v6-24-00@v6-24-00. LCG_100; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155:2749,down,download,2749,https://root.cern,https://github.com/root-project/root/issues/8155,1,['down'],['download']
Availability," with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036:1003,error,error,1003,https://root.cern,https://github.com/root-project/root/issues/9036,1,['error'],['error']
Availability," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15874:1112,Error,Error,1112,https://root.cern,https://github.com/root-project/root/issues/15874,4,['Error'],['Error']
Availability," ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:2165,error,error,2165,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability," ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ RUN ] RNTuple.SerializeString; [ OK ] RNTuple.SerializeString (0 ms); [ RUN ] RNTuple.SerializeColumnType; [ OK ] RNTuple.SerializeColumnType (0 ms);",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:11075,Error,Error,11075,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Error'],['Error']
Availability, ���2V8���2V not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found.; Module Ц~�����2V D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:4573,Error,Error,4573,https://root.cern,https://github.com/root-project/root/issues/8518,1,['Error'],['Error']
Availability,""" ; #weightName = ""EventWeight"" ; binning = [25,0,500]. histName = ""h_{}"".format(distName). print(""infileName = {}"".format(infileName)); print(""treeName = {}"".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:1705,error,error,1705,https://root.cern,https://github.com/root-project/root/issues/7169,2,"['Error', 'error']","['Error', 'error']"
Availability,""" << std::endl;; 	TFile *tfOut = TFile::Open(pathFileOut.c_str(), ""RECREATE"");; 	tfOut->cd();; 	df3.Histo1D({ ""hTest3"", """", 30, 0., 3. }, ""TestVar3"")->Write();; 	std::cerr << ""Closing the output file"" << std::endl;; 	tfOut->Close();; 	std::cerr << ""Snapshotting df3 {TestVar3} as tree3 into the output file"" << std::endl;; 	df3.Snapshot(""tree3"", pathFileOut, {""TestVar3""});; 	std::cerr << ""Snapshotting df3 {TestVar2} as tree2 into the output file"" << std::endl;; 	df3.Snapshot(""tree2"", pathFileOut, {""TestVar2""});; 	std::cerr << ""Snapshotting df3 {TestVar1} as tree1 into the output file"" << std::endl;; 	df3.Snapshot(""tree1"", pathFileOut, {""TestVar1""});; 	std::cerr << ""Closing the input file"" << std::endl;; 	tfIn->Close();; 	std::cerr << ""Complete!"" << std::endl;; }. int main(int argc, char* argv[]) {; 	if (argc > 1) {; 		reproduce(argv[1], argv[2]);; 	} else {; 		reproduce();; 	}; }; ```. 2. Run:; ```console; $ root -l -q 'gen_tree.C++()'; $ root -l -q 'reproduce.C++()'; ```. 3. See outputs and errors.; * Duplicated column names; ```; Columns: {TestVar2, TestVar1, TestVar3, TestVar1.fUniqueID, TestVar1.fBits, TestVar1.fP, TestVar1.fE, TestVar1, nTestVar1, }; ```; * Incorrect `GetSize()`; ```; Generating histogram hTest3 with TestVar3 in df3; TestVar1.GetSize(): 1000 n: 5; TestVar1.GetSize(): 1000 n: 1; TestVar1.GetSize(): 1000 n: 7; TestVar1.GetSize(): 1000 n: 0; ```; * ~Snapsht error happens to `TestVar1`, but not `TestVar2` or `TestVar3`~; Snapshot error happens to both `TestVar1` and `TestVar2`, but not `TestVar3`; * Full outputs:. ```console; $ root -l -q 'gen_tree.C++()'. Processing gen_tree.C++()...; Info in <TUnixSystem::ACLiC>: creating shared library /run/media/root/data-btrfs/shamrock-shared/targets/Research_LL/ctau-proper/lxplus_HTcondor/preselect/redefine_custom_vector.root/./gen_tree_C.so; Warning in <TTree::Bronch>: Using split mode on a class: TLorentzVector with a custom Streamer; jEntry: 0	nVar: 5	size: 5; (0.780836, 0.994304, 0.974700, -1.584510) (0.888",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:5637,error,errors,5637,https://root.cern,https://github.com/root-project/root/issues/9240,1,['error'],['errors']
Availability,"""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; # Set ymin > 0 since here we use log scale ; ymin = 0.1. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point negative ; data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 ; # observe the difference for the last point ; pad.SetBottomMargin(0.); #pad.SetBottomMargin(0.1); pad.SetLogy(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(3); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:4145,down,down,4145,https://root.cern,https://github.com/root-project/root/issues/16070,3,"['down', 'error']","['down', 'error', 'errors']"
Availability,"""And make sure we didn't see any errors or warnings.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1662:33,error,errors,33,https://root.cern,https://github.com/root-project/root/pull/1662,1,['error'],['errors']
Availability,"""overloadedFreePtsq"", ROOT.squared). #will fail because argument name determination from overloads is ambiguous; d = d.Define(""overloadedFreePtsq"", ROOT.squared2). #templated free function; d = d.Define(""templatedFreeNmuonsSq"", ROOT.squared[""int""], [""nMuons""]). #static class member; d = d.Define(""staticPtsq"", ROOT.Callable.mul, [""Muon_pt"", ""Muon_pt""]). #class member; d = d.Define(""overloadedMemberPtsq"", ROOT.Callable().squared, [""Muon_pt""]). #templated class member; d = d.Define(""templatedMemberNmuonsSq"", ROOT.Callable().squared[""int""], [""nMuons""]). #overloaded operator(); d = d.Define(""overloadedCallPtsq"", ROOT.Callable(), [""Muon_pt""]). #string expression; d = d.Define(""lambdaPtsq"", ""Muon_pt*Muon_pt""). #complete lambda expression (direct jitting without parsing); d = d.Define(""lambdaPtsq"", ""[](float x) { return x*x; }"", [""Muon_pt""]). #complete lambda expression with inferred column names and argument types (direct jitting without parsing, argument names determined from cling after jitting); d = d.Define(""lambdaAutoPtsq"", ""[](auto Muon_pt) { return Muon_pt*Muon_pt; }""); ```. A few remaining issues here:; - ""Warning: failed - offset calculation between TList and TViewPubFunctions"" in some cases (related to extracting argument names through cling machinery). - cppyy gives limited or obscure errors on template instantiation. In this case the templates are instantiated in code compiled by TClingCallFunc::compile_wrapper() which apparently has different verbosity than TCling::Declare (jitting through this route also does not forcibly disable the null pointer check like Declare does, and possibly other subtleties); In particular there's one nasty case which is fairly common and produces totally incomprehensible errors compared to compiling the same code in gcc (or even with TCling::Declare), where an incorrect number of columns is passed to Declare compare to the callable. All of the above functionality can be easily extended to Filter once we're happy with the direction.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9174:3664,error,errors,3664,https://root.cern,https://github.com/root-project/root/pull/9174,2,['error'],['errors']
Availability,"# 6.28.00. **GitHub issue** that we still want to resolve before the v6.28.00 release:. - [x] https://github.com/root-project/root/issues/11951; Issue is not closed yet because the solution we have is not perfect, but there is a way of doing it already in `v628`: with the `RooBinIntegrator`; - [x] https://github.com/root-project/root/issues/11814; - [x] https://github.com/root-project/root/issues/11954; - [x] https://github.com/root-project/root/issues/8984; Issue is not closed yet because the solution still needs to be validated to the user, but patch is already merged to `master` and `v628` branch. **Other items** that still need to be done without any associated GitHub issue:. - [x] New test statistics should consider the `Offset()` command in `RooAbsPdf::fitTo()`, @Zeff020; - [x] Write release notes for the change in the `KahanSum` class, @egpbos; - [x] If you run the `testInterface` unit test binary in `roofitcore`, you get errors printed out and there is one disabled test. Please take a look, @Zeff020. **Backports** that need to be made for the v6.28 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/11940; - [x] https://github.com/root-project/root/pull/11941; - [x] https://github.com/root-project/root/pull/10210; Except for the commit to RooStats, which is a fixup only relevant to a commit in master; - [x] https://github.com/root-project/root/pull/11953; Excluding the one technical commit about the `snapshot()` overload; - [x] https://github.com/root-project/root/pull/9539; Only the first four commits that are not about code modernization; - [x] https://github.com/root-project/root/pull/11969; - [x] https://github.com/root-project/root/pull/11962; - [x] https://github.com/root-project/root/pull/11970; - [x] https://github.com/root-project/root/pull/11966; - [x] https://github.com/root-project/root/pull/11984; - [x] https://github.com/root-project/root/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11856:943,error,errors,943,https://root.cern,https://github.com/root-project/root/issues/11856,1,['error'],['errors']
Availability,"# API Redesign. ## Goal. The goal is this PR is to improve the API of the CNN layers (MaxPooling and Conv currently), by eliminating redundant constructor arguments and fields. By redundant in this context, I refer to arguments that can be directly computed from others, and fields that unnecesseraly exist in multiple classes. ## Key points. Below some discussion points on design decisions I made, but still consider debatable. ; Since my experience in production level C++ is very limited I highly value opinions from experienced colleagues and previous authors of the module. ### Making `MaxPoolingLayer` a sub-class of `ConvLayer`. Every layer type in a convolutional network follows the logic existing in our `ConvLayer`:. A filter is sliding over the input and at each step applies an operation to the input elements within its receptive field to produce a single output element. * In a convolutional layer this operation is a linear combination with learnable parameters.; * In an average pooling layer the operation is a linear combination with constant parameters (and equal to the inverse of the receptive field's size).; * In a max pooling layer its a non linear operation. As we can see they all share the same logic and therefore fields. ## Results. 1. Common fields between the 2 layer types in the CNN module are now not duplicated (strides sizes, padding sizes, filter sizes). The same for the 4 `protected` methods in `ConvLayer`. 2. We now have a cleaner API, as the constructor arguments where reduced from 26 to 16 without any change in the functionality).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117:133,redundant,redundant,133,https://root.cern,https://github.com/root-project/root/pull/2117,4,['redundant'],['redundant']
Availability,"# Describe the bug; https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/ shows all mac build are broken with similar errrors:; ```; 07:02:10 CPack: - Building component package: /build/jenkins/ws/BUILDTYPE/Release/LABEL/mac1014/V/master/build/_CPack_Packages/Darwin/productbuild/root_v6.23.01.macosx64-10.14-clang100RELEASE/Contents/Packages/root_v6.23.01.macosx64-10.14-clang100RELEASE-tests.pkg; 07:02:11 CPack Error: Bad file extension specified: .md. Currently only .rtfd, .rtf, .html, and .txt files allowed.; 07:02:11 CPack Error: Problem copying the License, ReadMe and Welcome files; 07:02:11 CPack Error: Problem compressing the directory; 07:02:11 CPack Error: Error when generating package: ROOT; ```; ```; 03:20:55 CPack: - Building component package: /Users/sftnight/build/ws/BUILDTYPE/Debug/LABEL/mac1015/V/master/build/_CPack_Packages/Darwin/productbuild/root_v6.23.01.macosx64-10.15-clang120.debug/Contents/Packages/root_v6.23.01.macosx64-10.15-clang120.debug-tests.pkg; 03:20:56 CPack Error: Cannot find ReadMe resource file: /README.html; 03:20:56 CPack Error: Problem copying the License, ReadMe and Welcome files; 03:20:56 CPack Error: Problem compressing the directory; 03:20:56 CPack Error: Error when generating package: ROOT; 03:20:56 make: *** [package] Error 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6817:430,Error,Error,430,https://root.cern,https://github.com/root-project/root/issues/6817,11,['Error'],['Error']
Availability,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780:851,fault,faulty,851,https://root.cern,https://github.com/root-project/root/pull/10780,1,['fault'],['faulty']
Availability,"# Problem:. `TThreadExecutor` expects that `TSeq`-s always start with 0 and have step 1. Otherwise, it will give wrong result for `Foreach`, `MapReduce`, `Map` of the `TThreadExecutor`. With current master, the following snipet produces 0 and depending on compiler can also give `munmap_chunk(): invalid pointer` followed by `SIGABRT`:; ```C++; #include ""ROOT/TThreadExecutor.hxx""; #include ""ROOT/TSeq.hxx""; #include <iostream>. int main(){; auto func = [&](long int x)->long int { return x; };; auto redfunc = [](const std::vector<long int> &v){return std::accumulate(v.begin(), v.end(), 0l);};; ROOT::TThreadExecutor t(1);; std::cout << t.MapReduce(func, ROOT::TSeq<long int>(2, 4), redfunc) << '\n'; // expected result: 2 + 3 = 5; return 0;; }; ```; Moreover, when range is specified there is seg fault produced. # Partial Solution:. Looking with `gdb` I saw that in the reduction step, there is a call inside `TThreadExecutor.hxx:270`:; ```C++; unsigned start = *args.begin();; unsigned end = *args.end();; unsigned seqStep = args.step();. using retType = decltype(func(start));; std::vector<retType> reslist(args.size());; ; auto lambda = [&](unsigned int i); {; reslist[i] = func(i);; };; ParallelFor(start, end, seqStep, lambda);; ``` ; This assumes that the TSeq always starts with 0 and has step size 1. . To properly handle TSeq for MapReduce need to have:; ```C++; auto lambda = [&](unsigned int i); {; reslist[i] = func(args[i]);; };; ParallelFor(0U, args.size(), 1, lambda); // this calls tbb::parallel_for(start, end, step, f); // tbb::parallel_for expects as args: 1.starting idx, 2. end index, 3. step size, 4. func; // docs: https://spec.oneapi.io/versions/1.1-rev-1/elements/oneTBB/source/algorithms/functions/parallel_for_func.html; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10404:800,fault,fault,800,https://root.cern,https://github.com/root-project/root/issues/10404,1,['fault'],['fault']
Availability,"# Reproducer. ```python; import ROOT; print ( 'ROOT version' , ROOT.gROOT.GetVersion() ); ROOT.gInterpreter.Declare('''; #include <type_traits> ; #include <string> ; template <unsigned int N>; class A; {; public:; //; template <unsigned int K,; typename std::enable_if<(K<N),int>::type = 0 >; std::string fun_1 () { return ""ququ"" ;} ; //; template <unsigned int K,; typename std::enable_if<(N<=K),int>::type = 0 >; int fun_1 () { return K ;} ; };; // the same with functions; template <unsigned int K,unsigned int N, ; typename std::enable_if<(K<N),int>::type = 0 >; inline std::string fun_2 ( A<N>& ) { return ""ququ"" ;} ; //; template <unsigned int K,unsigned int N,; typename std::enable_if<(N<=K),int>::type = 0 >; inline int fun_2 ( A<N>& ) { return K ;} ; '''). N = 4 ; a = ROOT.A [ N ](). print ( 'Use templated method of templated class A<4> : it is OK ' ) ; for k in range ( 2 * N + 1 ) : ; print ( k , a.fun_1[k]() ) . print ( 'Use templated function for templated class A<4> : it fails for k >=4' ) ; for k in range( 2 * N + 1 ) :; func = ROOT.fun_2[k,N]; print ( k , func ( a ) ) ; ```. And the output is: ; ```; ROOT version 6.31/01; Use templated method of templated class A<4> : it is OK; 0 ququ; 1 ququ; 2 ququ; 3 ququ; 4 4; 5 5; 6 6; 7 7; 8 8; Use templated function for templated class A<4> : it fails for k >=4; 0 ququ; 1 ququ; 2 ququ; 3 ququ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/./tst64.py"", line 44, in <module>; print ( k , func ( a ) ); TypeError: Could not find ""fun_2<4,4>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""fun_2<4,4>(A<4>&)"". ```. ### ROOT version. 6.31/01 ; Linux, ; LCG-dev3 cvmvs nightly builds . ### Installation method. LCG-dev3 cvmfs nightly build. ### Operating system. Linux. ### Additional context. If I am not mistaken semtime ago the situations was just an opposite - stanalone template fuctions were OK, but template methods were not OK... but now I am not 100% sure...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085:2096,error,errors,2096,https://root.cern,https://github.com/root-project/root/issues/15085,1,['error'],['errors']
Availability,"# The problem. Sometimes the distributed RDataFrame test of the `RunGraphs` functionality fails, for example [in this CI run](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156523/testReport/projectroot.roottest.python.distrdf/common/roottest_python_distrdf_common_test_all/). The visible error from the user side comes from Dask, which serializes a Python RuntimeError and produces some output log on stdout as follows:. ```; 2022-10-07 17:00:25,901 - distributed.worker - WARNING - Compute Failed; Key: dask_mapper-d6baeae1-74a8-4a41-84e9-6ee2e8db064f; Function: execute_task; args: ((<function DaskBackend.ProcessAndMerge.<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:315,error,error,315,https://root.cern,https://github.com/root-project/root/issues/11515,1,['error'],['error']
Availability,"# This Pull request: . I created a Read The Docs (RTD) webpage for Cling. This project derives from a discussion I had in August 2022 with @vgvassilev, @davidlange6 , and @Axel-Naumann. ; The RTD webpage DOES NOT include Cling's download link, how to build, last release, or other developer-related info. These info will stay on a dedicated Cling's Github page (Axel, David, Vassil, you should discuss whether the Cling's GitHub webpage will stay in within ROOT, or it will be a separate one). ; Cling's RTD webpage includes, instead, a broader description of the Cling project, history of development, insights about the concepts of interpreter, JIT compilation, REPL, a short description of all Cling-based-projects, and a list of existing literature. . ## Checklist:. - [ ] Cling RTD webpage should include a link to Cling's Github webpage. We should discuss whether the GitHub webpage will be this: https://github.com/root-project/cling or another one (if we want to separate Cling from ROOT); - [ ] (https://root.cern/cling/) should be deleted; - [ ] (https://rawgit.com/root-project/cling/master/www/index.html) should be deleted",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11715:229,down,download,229,https://root.cern,https://github.com/root-project/root/pull/11715,1,['down'],['download']
Availability,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9008:322,error,error,322,https://root.cern,https://github.com/root-project/root/pull/9008,1,['error'],['error']
Availability,# This Pull request: ; Adds the typedefs Float16_t and Double32_t to the builtin types in TDataType.; It is directly related to #9008 which adds the same changes to the patch-branch. ## Changes or fixes:; The change is required to read tree branches of those types using TTreeReader and TTreeReaderValue<Float16_t> / TTreeReaderValue<Double32_t>. Otherwise attempting to read such branches results in an error message that no dictonary for Float16_t / Double32_t exists. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9009:404,error,error,404,https://root.cern,https://github.com/root-project/root/pull/9009,1,['error'],['error']
Availability,"# This Pull request: ; Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: ; Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10745:54,error,error,54,https://root.cern,https://github.com/root-project/root/pull/10745,1,['error'],['error']
Availability,# This Pull request: Fixes the Implementation of Max Pool operator for 1d and 3d cases.; Earlier it was giving a runtime error for 1d and 3d cases of Max Pool operator. ; Error is described here.; ![image](https://user-images.githubusercontent.com/84740927/174000876-7cd1e82c-86b8-4713-bf11-ef36f66912a1.png); I have also added the unit test for Max Pool 1d and 3d Operator. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10768:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/10768,2,"['Error', 'error']","['Error', 'error']"
Availability,"# This Pull request: Helps the debian packaging effort. ## Changes or fixes: Fixed the subprocess commands in the debianize() function credit to dimitry-ishenko and have also modified ProgressBar.py, which caused error before. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11137:213,error,error,213,https://root.cern,https://github.com/root-project/root/pull/11137,1,['error'],['error']
Availability,# This Pull request: Is intended to fix the LLVM prebuilt binary build. ## Changes or fixes: Replaced subprocess calls that use wget with the wget function and fixed naming errors and fixed undefined error regarding llvm_dir. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10994:173,error,errors,173,https://root.cern,https://github.com/root-project/root/pull/10994,2,['error'],"['error', 'errors']"
Availability,# This Pull request: Makes the code flake8 compliant. ## Changes or fixes: Reformatted the entire file using yapf and got rid of remaining flake8 errors manually. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes the issue mentioned https://github.com/root-project/root/pull/406 in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10862:146,error,errors,146,https://root.cern,https://github.com/root-project/root/pull/10862,1,['error'],['errors']
Availability,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Automatically split the lines and fixed other errors. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11140:126,error,errors,126,https://root.cern,https://github.com/root-project/root/pull/11140,1,['error'],['errors']
Availability,# This Pull request: [RNTuple] Addition of the evil storage layer. ## Changes or fixes:; - Add modifications to `RRawFile` to enable failures (bit flips and short reads) to be injected into the `ReadAt` and `ReadV` methods.; - Add I/O error unit test file `ntuple_ioerrors`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13434:133,failure,failures,133,https://root.cern,https://github.com/root-project/root/pull/13434,2,"['error', 'failure']","['error', 'failures']"
Availability,# This Pull request: fixes some typing errors and indentation issues in ROperator_Pool.hxx. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10337:39,error,errors,39,https://root.cern,https://github.com/root-project/root/pull/10337,1,['error'],['errors']
Availability,# This Pull request: fixes some typing errors and indentation issues in ROperator_Pool.hxx. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10342:39,error,errors,39,https://root.cern,https://github.com/root-project/root/pull/10342,1,['error'],['errors']
Availability,"# This Pull request:. ## Changes or fixes: Created a vector of Kahan sums . ## Checklist:. - [ ] tested changes locally ; I tried to test it locally, but I was unable to handle and resolve the ""#include errors"" and ""cannot found the source files"".; so I am doubtful if there will be an issue on line no. 965 (though it works as a vector). ps:- this is my first opensource commit, pls do suggest something if the above code does not work correctly, I will try to complete this issue as much try it takes. thanking you . This PR fixes #7395",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9663:203,error,errors,203,https://root.cern,https://github.com/root-project/root/pull/9663,1,['error'],['errors']
Availability,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #7395 Reduce precision errors for Mean and StdDev . I have tried to create a vector of Kahan sums using the already existing Kahan summation class:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9546:165,error,errors,165,https://root.cern,https://github.com/root-project/root/pull/9546,1,['error'],['errors']
Availability,# This Pull request:. ## Changes or fixes:. ### Push event behavior. Builds triggered by push events never download previous artifacts and always do clean builds. ### Artifact uploads. Use different heuristics to decide when to upload artifacts. #### Old; - Check if connection to s3 was possible. #### New; - Never upload on pull request; - Never upload incremental builds. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). <details><summary></summary>; <p>; [skip-ci]; </p>; </details>,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12582:107,down,download,107,https://root.cern,https://github.com/root-project/root/pull/12582,1,['down'],['download']
Availability,"# This Pull request:. ## Changes or fixes:. Adds a reasonable max bin content (and explicitly stated) for TH1F to prevent nasty silent data drawing errors. If the solution is welcome, I can extend it for TH2 and TH3. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/6671",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14271:148,error,errors,148,https://root.cern,https://github.com/root-project/root/pull/14271,1,['error'],['errors']
Availability,"# This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:; ```; core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'; if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4; ^; /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'; struct sockaddr *ifa_addr;; ^; 1 error generated.; ```; The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10703:87,error,error,87,https://root.cern,https://github.com/root-project/root/pull/10703,3,['error'],['error']
Availability,"# This Pull request:. ## Changes or fixes:. Currently, building the documentation issues 3700 warnings, see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/parsed_console/. With the current hack, we would go down to just 2700. By the way, it would be nice to fine-tune the parser: see https://github.com/root-project/jenkins-pipelines/issues/10. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). See related discussion https://github.com/doxygen/doxygen/issues/9044",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11614:249,down,down,249,https://root.cern,https://github.com/root-project/root/pull/11614,1,['down'],['down']
Availability,"# This Pull request:. ## Changes or fixes:. Dash (or ksh) shell might be used in Ubuntu18 (sh links by default to dash), but using `. bin/thisroot.sh` inside these shells was not compatible with it. Now it works in dash, bash, zsh and ksh simultaneously. Before:; ```; dash /opt/root_bld/bin/thisroot.sh; /opt/root_bld/bin/thisroot.sh: 166: /opt/root_bld/bin/thisroot.sh: Bad substitution; ```. After:; `dash /opt/root_bld/bin/thisroot.sh`; --> No error. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10298",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10332:448,error,error,448,https://root.cern,https://github.com/root-project/root/pull/10332,1,['error'],['error']
Availability,# This Pull request:. ## Changes or fixes:. Failure to install ROOT because root-help.el was removed in f4f8133607572b862998fcecf5efb9dba5402eb6. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13711:44,Failure,Failure,44,https://root.cern,https://github.com/root-project/root/pull/13711,1,['Failure'],['Failure']
Availability,"# This Pull request:. ## Changes or fixes:. Fix an import error in JsMVA:. ```; $ ipython; Python 3.12.3 (main, Apr 17 2024, 00:00:00) [GCC 14.0.1 20240411 (Red Hat 14.0.1-0)]; Type 'copyright', 'credits' or 'license' for more information; IPython 8.23.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: from ROOT.JsMVA import JsMVAMagic. In [2]: %jsmva on; ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); Cell In[2], line 1; ----> 1 get_ipython().run_line_magic('jsmva', 'on'). File /usr/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2480, in InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth); 2478 kwargs['local_ns'] = self.get_local_scope(stack_depth); 2479 with self.builtin_trap:; -> 2480 result = fn(*args, **kwargs); 2482 # The code below prevents the output from being displayed; 2483 # when using magics with decorator @output_can_be_silenced; 2484 # when the last Python token in the expression is a ';'.; 2485 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):. File /usr/lib64/python3.12/site-packages/ROOT/JsMVA/JsMVAMagic.py:26, in JsMVAMagic.jsmva(self, line); 22 @line_magic; 23 @magic_arguments(); 24 @argument(""arg"", nargs=""?"", default=""on"", help=""Enable/Disable JavaScript visualisation for TMVA""); 25 def jsmva(self, line):; ---> 26 from JsMVA.JPyInterface import functions; 28 args = parse_argstring(self.jsmva, line); 29 if args.arg == ""on"":. ModuleNotFoundError: No module named 'JsMVA'. ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15752:58,error,error,58,https://root.cern,https://github.com/root-project/root/pull/15752,1,['error'],['error']
Availability,# This Pull request:. ## Changes or fixes:. Fixes Nullptr access after raising Error. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15094:79,Error,Error,79,https://root.cern,https://github.com/root-project/root/pull/15094,1,['Error'],['Error']
Availability,"# This Pull request:. ## Changes or fixes:. Fixes error: use of deleted function; ~~~; /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp: In member function 'std::string llvm::NVPTXAsmPrinter::getPTXFundamentalTypeStr(llvm::Type*, bool) const':; /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:1319:10: error: use of deleted function 'std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::nullptr_t) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::nullptr_t = std::nullptr_t]'; 1319 | return nullptr;; | ^~~~~~~; In file included from /usr/include/c++/12/string:53,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/streambuf:41,; from /usr/include/c++/12/bits/streambuf_iterator.h:35,; from /usr/include/c++/12/iterator:66,; from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:21,; from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/SmallVector.h:16,; from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/STLExtras.h:20,; from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/ADT/StringRef.h:12,; from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/include/llvm/Pass.h:31,; from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTX.h:17,; from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.h:17,; from /builddir/build/BUILD/root-6.24.06/interpreter/llvm/src/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:14:; /usr/include/c++/12/bits/basic_string.h:732:7: note: declared here; 732 | basic_string(nullptr_t) = delete;; | ^~~~~~~~~~~~; ~~~; Fix backported from LLVM upstrea https://reviews.llvm.org/D87697. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9586:50,error,error,50,https://root.cern,https://github.com/root-project/root/pull/9586,2,['error'],['error']
Availability,# This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/14561. pinging @eoffermann. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15707:101,ping,pinging,101,https://root.cern,https://github.com/root-project/root/pull/15707,1,['ping'],['pinging']
Availability,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below).; [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15932:153,error,errors,153,https://root.cern,https://github.com/root-project/root/pull/15932,1,['error'],['errors']
Availability,"# This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-8256. With the change, you would get error messages of this type:. `Error in <TTreeFormula::TTreeFormula>: The length of the formula (1035) exceeds the maximum allowed (1024)`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15274:124,error,error,124,https://root.cern,https://github.com/root-project/root/pull/15274,2,"['Error', 'error']","['Error', 'error']"
Availability,"# This Pull request:. ## Changes or fixes:. For compatibility with Python 3.13. See: https://docs.python.org/3.13/whatsnew/3.13.html. From the above page:. * Classes have a new __firstlineno__ attribute, populated by the compiler, with the line number of the first line of the class definition. (Contributed by Serhiy Storchaka in gh-118465.). * Classes have a new __static_attributes__ attribute, populated by the compiler, with a tuple of names of attributes of this class which are accessed through self.X from any function in its body. (Contributed by Irit Katriel in gh-115775.). Without adding the new attributes to the blacklist there are errors:. AttributeError: 'int' object attribute 'doc' is read-only from the __firstlineno__ attribute. AttributeError: 'tuple' object attribute 'doc' is read-only from the __static_attributes__ attribute. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15430",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15798:646,error,errors,646,https://root.cern,https://github.com/root-project/root/pull/15798,1,['error'],['errors']
Availability,"# This Pull request:. ## Changes or fixes:. Implement builtin_gtest option. By setting the option to OFF the system gtest and gmock are used.; This allows doing tests without network available, e.g. during a package build for Fedora/EPEL. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10301:183,avail,available,183,https://root.cern,https://github.com/root-project/root/pull/10301,1,['avail'],['available']
Availability,"# This Pull request:. ## Changes or fixes:. Improvements in the error message displayed when the call to `FT_Set_Char_Size` fails in `TTF::SetTextSize`:; - The error code returned by the call to TTF FT_Set_Char_Size function was lost in the if condition, now it is displayed.; - Adding the display of passed parameters to the error message helps distinguish TTF related errors from context related ones. ## Checklist:. - [x] tested changes locally (execution v6.22 and v6.26, compilation v6.22, v6.26 and master; - [ ] updated the docs (not necessary I suspect). This PR fixes the easy part of #14592",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14603:64,error,error,64,https://root.cern,https://github.com/root-project/root/pull/14603,4,['error'],"['error', 'errors']"
Availability,"# This Pull request:. ## Changes or fixes:. It is not checked in the existing code whether `getenv(""ROOTSYS"")` returns `NULL`. It does so if the environment variable is not defined; it is exactly what happens during building [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L584). Then `std::string` gets initialized from the C string from address 0, which may result in a segmentation fault. ## Checklist:. - [ x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10776:424,fault,fault,424,https://root.cern,https://github.com/root-project/root/pull/10776,1,['fault'],['fault']
Availability,"# This Pull request:. ## Changes or fixes:. Sets the verbosity level of rootcling in ACLiC to the default, therewith printing also warnings and not only fatal errors. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [ROOT-10975](https://its.cern.ch/jira/browse/ROOT-10975). Linked roottest PR https://github.com/root-project/roottest/pull/1168 and https://github.com/root-project/roottest/pull/1169, that fixes a test which becomes broken once the verbosity is increased because some unused rules start to generate warnings. The rules are unused simply because the name of some template instantiations are not spelled correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16208:159,error,errors,159,https://root.cern,https://github.com/root-project/root/pull/16208,1,['error'],['errors']
Availability,"# This Pull request:. ## Changes or fixes:. The rf105_funcbinding.py tutorial used to trigger errors due to unknown symbols. In particular the custom new and delete operators used in RooFit were not autoloaded when needed. In the tutorial there was a workaround implemented to call ProcessLine instead of making calls directly form Python, to make the autoloading from the C++ side of ROOT instead. This did not quite fix the problem, and the tutorial still randomly failed due to missing symbols. After changing the algorthm used for autoloading in commit 6ae602bba7d33c900a117c9de0187ab5a28e14b8 these problems were solved. After this fix using the direct calls from Python also works, so this PR suggests updating the tutorial to do that. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10307:94,error,errors,94,https://root.cern,https://github.com/root-project/root/pull/10307,1,['error'],['errors']
Availability,"# This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: ; - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval.; - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791:609,avail,available,609,https://root.cern,https://github.com/root-project/root/pull/11791,1,['avail'],['available']
Availability,# This Pull request:. ## Changes or fixes:. This PR fixes the `TH1::GetCumulative()` method by assigning the cumulative error to the newly generated histogram instead of the original one. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11947,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11948:120,error,error,120,https://root.cern,https://github.com/root-project/root/pull/11948,1,['error'],['error']
Availability,"# This Pull request:. ## Changes or fixes:. This breaks the pattern used when undefining and then defining a variable in the same flag:; ```; $ echo | g++ -Wp,-UVAR,-DVAR=1 -c -x c++ -; ```; Here -Wp,-UVAR,-DVAR=1 will first undefine VAR and then define it to 1. If the -Wp, is dropped, this fails:; ```; $ echo | g++ -UVAR,-DVAR=1 -c -x c++ -; <command-line>: warning: extra tokens at end of #undef directive; ```; Now it will only undefine VAR, but not define it. I.e. instead of; ```; #undef VAR; #define VAR 1; ```; you get; ```; #undef VAR,-DVAR=1; ```; which explains the rather cryptic warning about extra token after #undef. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://bugzilla.redhat.com/show_bug.cgi?id=2177136",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12476:144,echo,echo,144,https://root.cern,https://github.com/root-project/root/pull/12476,2,['echo'],['echo']
Availability,# This Pull request:. ## Changes or fixes:. This fixes both of the errors seen when trying to build with builtin_llvm=off; https://root-forum.cern.ch/t/compiling-root-6-24-with-external-llvm-but-built-in-clang/45258. ## Checklist:. - [x] tested changes locally; - updated the docs (if necessary). This PR fixes #8141,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8678:67,error,errors,67,https://root.cern,https://github.com/root-project/root/pull/8678,1,['error'],['errors']
Availability,"# This Pull request:. ## Changes or fixes:. This is in a draft status, work in progress... The goals are:. - [x] Migrate old Makefile to modern CMake. See https://github.com/root-project/root/issues/9090; - [ ] Allow building the documentation from a git source repository with read-only permissions. I.e. try to not pollute the sources within the process. This follows the Make to CMake migration philosophy. See https://github.com/root-project/root/issues/8947; - [x] As done by [ALICE](https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22), use a 'dynamic' Doxyfile declaration, that only specifies what needs to be changed with respect to the default one. This makes easier the maintenance, as you do not need to constantly update the Doxyfile when a new doxygen version arises, and prevents warnings when running in older doxygen versions. This will hopefully contribute to next point:; - [ ] https://github.com/root-project/root/issues/9953; - [ ] Allow in the future for automatic meta-documentation of the CMake flag system. See https://github.com/root-project/root/issues/8999; - [x] Potentially add a flag in the main ROOT CMakeLists.txt, to enable the building of the documentation via a normal ""add_subdirectory()"", so that one does not need to build as a separate process.; - [x] Make the doxygen documentation thread-safe; - [x] Don't let doxygen search for ""input"" files in the output directory (e.g. it looks now for Mathjax output files that one just ""generated""). ## Checklist:. - [x] tested changes locally; - [ ] We would need to update https://github.com/root-project/web/blob/main/for_developers/doxygen/index.md; - [ ] Update rootspi scripts to build docu in CI accordingly; - [ ] tutorial generation does not work yet as ""out of source"". To-do...; - [x] require min doxygen version 1.9.4; - [ ] pre-check that output directory is empty ?; - [ ] if GVIZ not found, disable dot; - [ ] Stamp file generation to only recompile when changes; - [x] Remove unnee",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966:704,mainten,maintenance,704,https://root.cern,https://github.com/root-project/root/pull/9966,1,['mainten'],['maintenance']
Availability,"# This Pull request:. ## Changes or fixes:. This test tests support for 64 bit values. But it uses a long type, which fails on platforme where a long is 32 bits. This commit changes the test to use a long long type instead. ```[ RUN ] RDFSnapshotMore.ReadWriteCarray; /builddir/build/BUILD/root-6.26.00/tree/dataframe/test/dataframe_snapshot.cxx:530: Failure; Expected equality of these values:; rvl[0]; Which is: 0; 8589934592; /builddir/build/BUILD/root-6.26.00/tree/dataframe/test/dataframe_snapshot.cxx:530: Failure; Expected equality of these values:; rvl[0]; Which is: 0; 8589934592; [ FAILED ] RDFSnapshotMore.ReadWriteCarray (1667 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10302:351,Failure,Failure,351,https://root.cern,https://github.com/root-project/root/pull/10302,2,['Failure'],['Failure']
Availability,"# This Pull request:. ## Changes or fixes:. Triggered by a failure to run an ATLAS Higgs combination fit using the MultiProcess-parallelized LikelihoodJob, this PR changes the way offsetting is handled in the TestStatistics::LikelihoodWrapper family of classes. This in turn improves precision of evaluations, making many parallelized likelihood evaluations now bit-wise exactly equal to non-parallel evaluations. This allows us to better debug the Higgs fit. After this PR, the public Higgs workspace used in rootbench can be fit with LikelihoodJob enabled. In detail, this PR changes the following:. - Increased precision:; * Per-component offsets: instead of one offset for the total LikelihoodWrapper, we switched to a vector of offsets: one for each likelihood component. This makes a difference only for RooSumL fits, i.e. simultaneous PDF fits or fits with constraint or global observable terms. This brings the results of these fits closer to the old-style RooNLLVar fits, because those also use per-component offsets (per-RooNLLVar in a RooAddition to be exact).; * In LikelihoodJob::evaluate, the result_ KahanSum is no longer initialized to zero, but is initialized to the first value in the results_ array, both sum and carry term. This sometimes makes a difference: adding a term with a small but non-zero carry term to an existing sum with a zero sum and zero carry term can make the small non-zero carry term disappear.; * Due to these changes and the earlier KahanSum updates, we were able to tighten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:59,failure,failure,59,https://root.cern,https://github.com/root-project/root/pull/12202,1,['failure'],['failure']
Availability,"# This Pull request:. ## Changes or fixes:. When the external application (depending on ROOT) uses C++20, adding this C++ feature test can reduce the possibility of compilation failure. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311:177,failure,failure,177,https://root.cern,https://github.com/root-project/root/pull/11311,1,['failure'],['failure']
Availability,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16016:314,ERROR,ERROR,314,https://root.cern,https://github.com/root-project/root/pull/16016,4,"['ERROR', 'error', 'failure']","['ERROR', 'errors', 'failure']"
Availability,"# This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`; You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14154:241,avail,available,241,https://root.cern,https://github.com/root-project/root/pull/14154,1,['avail'],['available']
Availability,"# This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible; ; PCRE2 has a stricter regular expression syntax parsing than PCRE.; Some non-conforming regular expressions that were accepted by PCRE are; correcrly rejected by PCRE2.; ; Some of the regular expressions used by the TUri class do not follow; the syntax rules and were relying on them being acceped by PCRE; anyway. This commit corrects the syntax of these expressions so that; they are now accepted by PCRE2. The corrected expressions still work; correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class; ; RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the; scheme part of a URI as:; ; scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ); ; The regular expression for finding the scheme part in the TUri class; was defined as; ; ^[[:alpha:]][[:alpha:][:digit:]+-.]*$; ; This does not match the definition in the RFC, since +-. in regular; expression syntax is the range of ascii codes from '+' to '.', which; means '+', ',', '-' and '.'. I.e. the ',' is included in the regular; expression in error. This commit adds a backslash escape to the '-' so; that it is interpreted as a literal '-' sign instead of indicating a; range in the regular expression. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #15986",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15988:1142,error,error,1142,https://root.cern,https://github.com/root-project/root/pull/15988,1,['error'],['error']
Availability,"# This Pull request:. ## Changes or fixes:. ```; 167/1341 Test #120: gtest-hist-hist-test-testTProfile2Poly ....................................***Failed 11.00 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RNTuple.OpenHTTP:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.DoubleSlash:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from TProfile2Poly; [ RUN ] TProfile2Poly.GlobalCompare; /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/hist/hist/test/test_tprofile2poly.cxx:30: Failure; Expected equality of these values:; tp2d->GetMeanError(c); Which is: 0.0030918045191081229; tpp->GetMeanError(c); Which is: 0.0030918045191081199; [ FAILED ] TProfile2Poly.GlobalCompare (3076 ms); [ RUN ] TProfile2Poly.BinContentCompare; [ OK ] TProfile2Poly.BinContentCompare (2575 ms); [ RUN ] TProfile2Poly.BinErrorSpreadCompare; [ OK ] TProfile2Poly.BinErrorSpreadCompare (2820 ms); [ RUN ] TProfile2Poly.BinErrorMeanCompare; [ OK ] TProfile2Poly.BinErrorMeanCompare (2387 ms); [----------] 4 tests from TProfile2Poly (10861 ms total); [----------] Global test environment tear-down; [==========] 4 tests from 1 test suite ran. (10861 ms total); [ PASSED ] 3 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TProfile2Poly.GlobalCompare; 1 FAILED TEST; ```. The proposed change is based on a similar code in the same source file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15734:745,Failure,Failure,745,https://root.cern,https://github.com/root-project/root/pull/15734,2,"['Failure', 'down']","['Failure', 'down']"
Availability,# This Pull request:. ## Changes or fixes:. `root.exe -a`; returns right now a non-understandable error message. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14816:98,error,error,98,https://root.cern,https://github.com/root-project/root/pull/14816,1,['error'],['error']
Availability,# This Pull request:. ## Changes or fixes:. to avoid error when building documentation. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10060:53,error,error,53,https://root.cern,https://github.com/root-project/root/pull/10060,1,['error'],['error']
Availability,# This Pull request:. ## Changes or fixes:. ~~~~; Start 672: tutorial-io-loopdir; 690/1156 Test #666: tutorial-io-double32 ................................................ Passed 2.42 sec; Start 673: tutorial-io-loopdir11; 691/1156 Test #673: tutorial-io-loopdir11 ............................................... Passed 0.76 sec; Start 674: tutorial-io-mergeSelective; 692/1156 Test #672: tutorial-io-loopdir .................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.23 sec; Processing /builddir/build/BUILD/root-6.26.10/tutorials/io/loopdir.C...; Info in <TCanvas::Print>: ps file hsimple.ps has been created; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: Current canvas added to ps file hsimple.ps; Info in <TCanvas::Print>: ps file hsimple.ps has been closed; Error in <TPostScript::Text>: Cannot open temporary file: hsimple.ps_tmp_2089748; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11725:468,Error,Error,468,https://root.cern,https://github.com/root-project/root/pull/11725,3,['Error'],['Error']
Availability,"# This Pull request:. ## Changes or fixes:; - Mentions/Suggests in the GH template how to paste the setup information when reporting a bug via the web browser; - Adds the ability to submit a bug report by opening web browser from the ROOT prompt, with command `.gh`; - Adds the ability to auto-populate a GitHub bug report with your current system setup.; - Similarly for reporting a crash or bug in the forum. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary); - [FOR LATER BY AXEL] Add backtrace also in form, if any; - [NOT NEEDED] Strip or Obfuscate paths of backtrace that are outside of ROOT folder, or within GetHomeDirectory. Potentially also in GetBinaryDirectory within GetSetup function; - [ ] We would need the name of the build machine, for instance. I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now?; - [ ] Maybe we fill out the OS name also?; - [ ] Update on web full list of commands, add .gh issue, do as in https://github.com/root-project/web/pull/776; - [ ] Recommend also on manual this command; - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/; - [x] Discuss if more things need to be added to the setup; - [ ] Mention in the Forum; - [ ] Add aliases?; - [x] https://github.blog/changelog/2021-06-23-issues-forms-beta-for-public-repositories/; - [x] Somehow, the forum topic opened does not have the // after https. This PR fixes https://github.com/root-project/root/issues/8795. The way to submit a bug report without opening ROOT by hand would be:; ```; root -b -e '.gh bug' -q; root -b -e '.gh feature' -q; root -b -e '.gh improvement' -q; root -b -e '.forum bug' -q; ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to `rootbrowse`, etc. For example:; ```; rootbug; rootfeature; rootimprovement; rootforum; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366:916,avail,available,916,https://root.cern,https://github.com/root-project/root/pull/10366,1,['avail'],['available']
Availability,"# This Pull request:. ## Changes or fixes:; Currently this is the behaviour; ```; ~> root -b -q -l NotExistingFile.C; Warning in <TApplication::GetOptions>: macro pippo.C not found; root: unrecognized option 'pippo.C'; Try 'root --help' for more information.; ~> echo $?; 0; ```; the root executable simply warns about the file not existing but returns 0, as everything went well. This has several downsides, including not protecting us from our typos when adding tests to the suite (see original JIRA issue). ## Checklist:. - [v] tested changes locally; - [v] updated the docs (if necessary). This PR fixes [ROOT-9365](https://its.cern.ch/jira/browse/ROOT-9395)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16205:263,echo,echo,263,https://root.cern,https://github.com/root-project/root/pull/16205,2,"['down', 'echo']","['downsides', 'echo']"
Availability,"# This Pull request:. ## Changes or fixes:; Due to a copy-paste error, `RooDataSet::binnedClone` was overwriting the name of the clone if no title was provided. This PR fixes that. Since this is my first PR in ROOT, I have a couple of questions:; - since this was a small change I did not open an issue in the repo, should I do that regardless?; - do I need to write a test?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11507:64,error,error,64,https://root.cern,https://github.com/root-project/root/pull/11507,1,['error'],['error']
Availability,"# This Pull request:. ## Changes or fixes:; Each of the four commits contains an independent improvement that I made while working on something else (error handling). They are not necessary, but I think they are useful nonetheless, so here they are. 1. MultiProcess::Messenger worker to master messages implemented slightly more efficiently.; 2. Implemented full TestStatistics::RooAbsL::constOptimizeTestStatistic; these features are used rarely in Higgs fits, I think, but they are nonetheless features in non-MP RooFit fits that I now added for feature parity.; 3. Extend RooAbsL test suite with comparisons to the non-MP RooFit fits (RooNLLVar) that they were intended to reimplement.; 4. Extend NaNPacker test suite with some simple arithmetic demonstrations / sanity checks. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15499:150,error,error,150,https://root.cern,https://github.com/root-project/root/pull/15499,1,['error'],['error']
Availability,"# This Pull request:. ## Changes or fixes:; Fix hard error when checking if non-[common_range](https://en.cppreference.com/w/cpp/ranges/common_range) is printable. I.e., [std::ranges::enumerate_view](https://en.cppreference.com/w/cpp/ranges/enumerate_view).; Although root does not support C++20 currently, a range that returns different type for `begin()` and `end()` is still legal in other C++ versions. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/14966",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14968:53,error,error,53,https://root.cern,https://github.com/root-project/root/pull/14968,1,['error'],['error']
Availability,# This Pull request:. ## Changes or fixes:; Fixes linking failure with libfreetype on macOS (arm and intel) due to missing brotli library. Brotli support is not needed for the fonts ROOT uses. ## Checklist:. - [x ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10770:58,failure,failure,58,https://root.cern,https://github.com/root-project/root/pull/10770,1,['failure'],['failure']
Availability,"# This Pull request:. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public and changed the return type to `Bool_t`.; The exceptions types it throws were also made public, so that user code could catch them. ## Checklist:. - [X] tested changes locally. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and prints error messages in case of failure, but continues the execution.; Making it public allows user code to manually check the consistency to catch errors and stop the program.; This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13748:377,error,error,377,https://root.cern,https://github.com/root-project/root/pull/13748,4,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,"# This Pull request:. ## Changes or fixes:; Reimplement the TGraph::Sort function using std::sort to avoid a segmentation fault when used with a large number of entries. It's also faster, ex. for a `10000 points`:; ```; BEFORE CHANGES -> Sort execution time: 148100 microseconds. AFTER CHANGES -> Sort execution time: 7065 microseconds; ```; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13632",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13635:122,fault,fault,122,https://root.cern,https://github.com/root-project/root/pull/13635,1,['fault'],['fault']
Availability,# This Pull request:. ## Changes or fixes:; Replaced somewhat cryptic 'assert failed' message with the actual I/O error message explaining what went wrong in RNTupleWriter::RFileSimple::Write(). ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14487,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14677:114,error,error,114,https://root.cern,https://github.com/root-project/root/pull/14677,1,['error'],['error']
Availability,# This Pull request:. ## Changes or fixes:; Several documentation errors found by doxygen. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9650:66,error,errors,66,https://root.cern,https://github.com/root-project/root/pull/9650,1,['error'],['errors']
Availability,# This Pull request:. ## Changes or fixes:; Several documentation errors found by doxygen. Supersedes https://github.com/root-project/root/pull/9650. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9678:66,error,errors,66,https://root.cern,https://github.com/root-project/root/pull/9678,1,['error'],['errors']
Availability,"# This Pull request:. ## Changes or fixes:; Several documentation errors/warnings in gui, hist and grafs. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9603:66,error,errors,66,https://root.cern,https://github.com/root-project/root/pull/9603,1,['error'],['errors']
Availability,# This Pull request:. ## Changes or fixes:; Several errors in the documentation of bindings. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9648:52,error,errors,52,https://root.cern,https://github.com/root-project/root/pull/9648,1,['error'],['errors']
Availability,# This Pull request:. ## Changes or fixes:; Some errors found when compiling the doxygen documentation. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9593:49,error,errors,49,https://root.cern,https://github.com/root-project/root/pull/9593,1,['error'],['errors']
Availability,# This Pull request:. ## Changes or fixes:; The documentation of the VisualizeError command in RooAbsPdf::plotOn and RooAbsReal::plotOn. This command has two methods available which are explained in the code comments in roofit tutorial 610 but not in the class reference online. I copied a brief description from the tutorial.; No changes are made to the function of the code. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8738:166,avail,available,166,https://root.cern,https://github.com/root-project/root/pull/8738,1,['avail'],['available']
Availability,"# This Pull request:. ## Changes or fixes:; This PR mainly adds error handling to the `MultiProcess`-based fitting stack. Error signaling in RooFit happens through two mechanisms: `logEvalError` calls and `RooNaNPacker`-enhanced `nan` doubles. Both are now implemented and working. With this addition, we can now (finally!) run the most recent ATLAS Higgs combination fits again without issues. The actual error handling is implemented in the 5th commit of this PR. The first two commits are really unrelated, minor refactorings of existing code. I add them in this PR because I touched these while working on the error handling and just wanted to rebase to keep history clean and don't think they need a separate PR, since they are quite trivial changes. The same goes for the last commit; it's a refactoring that could have been done in a different PR, but I hope you will permit this shortcut for these three trivial commits ;). Finally, commit 3 and 4 add tests. I kept these commits separate mainly for reviewing and also for my testing convenience (I wanted to double check they indeed fail before applying commit 5). If you prefer, we can squash commits 3, 4 and 5 before we merge. ## Checklist:. - [x] tested changes locally; - [ ] ~updated the docs (if necessary)~ _There are no user-facing changes (except that more things now work), everything happens behind the scenes, so no documentation updates are necessary._. Thanks to @Zeff020 and @guitargeek for help in getting this done!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15797:64,error,error,64,https://root.cern,https://github.com/root-project/root/pull/15797,4,"['Error', 'error']","['Error', 'error']"
Availability,"# This Pull request:. ## Changes or fixes:; ```; [ RUN ] RooTruthModel.IntegrateSubrange; [#1] INFO:Eval -- RooRealVar::setRange(dt) new range named 'integral' created with bounds [2,2]; /builddir/build/BUILD/root-6.30.02/roofit/roofitcore/test/testRooTruthModel.cxx:38: Failure; Expected equality of these values:; integ->getVal(); Which is: -2.8822093e-17; 0.0; Which is: 0; [ FAILED ] RooTruthModel.IntegrateSubrange (194 ms); ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14164:271,Failure,Failure,271,https://root.cern,https://github.com/root-project/root/pull/14164,1,['Failure'],['Failure']
Availability,"# This Pull request:. ## Changes or fixes:; warns of overflow with an error message. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). See https://root-forum.cern.ch/t/break-segmentation-violation-while-using-geometry-package/53087/7. Side note: To allow for Long64_t, a complete rewrite of all variables' data types would be needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12028:70,error,error,70,https://root.cern,https://github.com/root-project/root/pull/12028,1,['error'],['error']
Availability,"# This Pull request:. ## Changes or fixes:; ~~~; .../hist/hist/test/test_tprofile2poly.cxx:61: Failure; The difference between cont1 and cont2 is 1.4551915228366852e-11, which exceeds delta, where; cont1 evaluates to 54886.064319363642,; cont2 evaluates to 54886.064319363628, and; delta evaluates to 9.999999960041972e-12.; .../hist/hist/test/test_tprofile2poly.cxx:61: Failure; The difference between cont1 and cont2 is 1.4551915228366852e-11, where; cont1 evaluates to 109868.61342004745,; cont2 evaluates to 109868.61342004743.; The abs_error parameter delta evaluates to 9.999999960041972e-12 which is smaller than the minimum distance between doubles for numbers of this magnitude which is 1.4551915228366852e-11, thus making this EXPECT_NEAR check equivalent to EXPECT_EQUAL. Consider using EXPECT_DOUBLE_EQ instead.; ~~~; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9601:95,Failure,Failure,95,https://root.cern,https://github.com/root-project/root/pull/9601,2,['Failure'],['Failure']
Availability,"# This Pull request:. Adds a tutorial that shows how to create a derived data set with a subset of the columns and row of the input data set. Working on the tutorial triggered several improvements to the RNTuple API:. - RNTupleModel takes ownership of entries and returns weak pointers to them (entries need to be destructed before the model and with it its fields are destructed).; - Several safety improvements: make members `const` or private; - Add `RFieldBase::Compare()`; - Several minor improvements. This PR triggers several follow-up PRs, e.g.; - `RBulk` should be returned as weak pointers like entries.; - `RFieldBase::RValue` should use shared pointers, not raw pointers; - There should be read support for projected fields to complete the skimming tutorial. Nevertheless, the PR is already rather large and it does seem to make sense to review it as is. ## Changes or fixes:. Changes to the following APIs: `RNTupleReader`, `RNTupleWriter`, `RNTupleModel`, `REntry`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs; - [ ] ping known users about the changes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13604:1055,ping,ping,1055,https://root.cern,https://github.com/root-project/root/pull/13604,1,['ping'],['ping']
Availability,# This Pull request:. Adds annotations for compiler warnings and errors during the build. - Creates annotations in the workflow summary. [Example](https://web.archive.org/web/20230317122819/https://github.com/olemorud/root/actions/runs/4446441053); - Creates annotations in the `Files changed` section of pull requests. [Example](https://web.archive.org/web/20230317122218/https://github.com/olemorud/root/pull/9/files#diff-8d4418f3872066807d7fb0e2558bd6f5e9ed9bb028a0c82bf7cb0fcd63935b26); - Highlights warnings/errors in the build log:; ![image](https://user-images.githubusercontent.com/82065181/225905454-7b5ff1b6-047f-4ff2-8ae2-c897c07c62ee.png). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12386:65,error,errors,65,https://root.cern,https://github.com/root-project/root/pull/12386,2,['error'],['errors']
Availability,# This Pull request:. Adds more options to generate asimov datasets by; - allowing to generate asimov datasets for RooMultiVarGaussian; - adding a new constructor to RooExtendPdf that allows to more easily extend pdfs to fixed nEvents; - improving error messages emitted by AsymptoticsCalculator when creating error messages. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12034:248,error,error,248,https://root.cern,https://github.com/root-project/root/pull/12034,2,['error'],['error']
Availability,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15105:1500,down,downloading,1500,https://root.cern,https://github.com/root-project/root/pull/15105,1,['down'],['downloading']
Availability,"# This Pull request:. Dear All. This PR fixes #13878 by adding if statement which checks if stdev is zero and gives a fatal error (Fatal). Without it there would be division by zero. I chose the fatal error instead of ""Error"" and returning some value (e.g. zero) because in my opinion the program should exit in situations where the result would not make sense. For example skewness of a histogram consisting only of identical values would be undefined. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #13878",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14506:124,error,error,124,https://root.cern,https://github.com/root-project/root/pull/14506,3,"['Error', 'error']","['Error', 'error']"
Availability,"# This Pull request:. Explicitly linked the core library against `libatomic`. This is necessary on some platforms in order to use the atomic operations performed by the library. ## Changes or fixes:. The current master branch, without the fix, produces the following build error on Raspberry Pi OS with GCC 11. (Though the exact GCC version doesn't matter much, just that it would not be the built-in GCC 6.3 coming with the OS.). ```; [100%] Linking CXX executable src/rootcling_stage1; ../foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o: In function `ROOT::Experimental::RLogManager::Emit(ROOT::Experimental::RLogEntry const&)':; RLogger.cxx:(.text+0x99c): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0x9c8): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0x9e8): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0xa08): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0xa30): undefined reference to `__atomic_fetch_add_8'; ../foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o:RLogger.cxx:(.text+0xa58): more undefined references to `__atomic_fetch_add_8' follow; collect2: error: ld returned 1 exit status; core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:242: recipe for target 'core/rootcling_stage1/src/rootcling_stage1' failed; make[3]: *** [core/rootcling_stage1/src/rootcling_stage1] Error 1; CMakeFiles/Makefile2:26106: recipe for target 'core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all' failed; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; CMakeFiles/Makefile2:26113: recipe for target 'core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/rule' failed; make[1]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/rule] Error 2; Makefile:8132: recipe for target 'rootcling_stage1' failed; make: *** [rootcling_stage1] Error 2; ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9987:273,error,error,273,https://root.cern,https://github.com/root-project/root/pull/9987,1,['error'],['error']
Availability,"# This Pull request:. Fixes compilation error with gcc 13. ## Changes or fixes:; ~~~; In file included from .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.cxx:1: .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:40:24: error: 'uint32_t' does not name a type; 40 | namespace SG { typedef uint32_t sgkey_t; }; | ^~~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:6:1: note: 'uint32_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; 5 | #include <vector>; +++ |+#include <cstdint>; 6 |; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: error: 'uint8_t' does not name a type; 43 | uint8_t m_nbits, m_nmantissa;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:43:4: note: 'uint8_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: error: 'uint8_t' does not name a type; 45 | uint8_t m_flags;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:45:4: note: 'uint8_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:46:8: error: 'sgkey_t' in namespace 'SG' does not name a type; 46 | SG::sgkey_t m_sgkey = 123;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: error: 'uint8_t' does not name a type; 47 | const uint8_t c_uint = 10;; | ^~~~~~~; .../root-6.26.10/tree/ntuple/v7/test/CustomStruct.hxx:47:10: note: 'uint8_t' is defined in header '<cstdint>'; did you forget to '#include <cstdint>'?; gmake[2]: *** [tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/build.make:79: tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/CustomStruct.cxx.o] Error 1; gmake[2]: Leaving directory '.../root-6.26.10/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:53506: tree/ntuple/v7/test/CMakeFiles/CustomStruct.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~; ## Checklist:. - [x] tested changes locally; - [ ] u",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12065:40,error,error,40,https://root.cern,https://github.com/root-project/root/pull/12065,4,['error'],['error']
Availability,# This Pull request:. Fixes some bugs in HS3.; Improves error reporting in createHistogram.; adjust distributions names in HS3 output. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12413:56,error,error,56,https://root.cern,https://github.com/root-project/root/pull/12413,1,['error'],['error']
Availability,"# This Pull request:. Fixes various small bugs, makes the implementation more robust and improves error reporting for JSON import of HS3 files. ## Changes or fixes:. - errors from the nlohmann_json importer are now correctly forwarded to the user, rather than giving an unspecific ""std_exception"".; - some missing keys or values no longer trigger segfaults, but instead lead to an actual error being emitted. this includes errors being emitted by ParamHistFuncs if the number of bins is incorrect.; - the version tag has been correctly updated to 0.2; - gaussians can now be imported with ""normal_dist"" as well, as described by the standard; - the implementation is a bit more lenient when missing some values (e.g. ignoring cases where the histfactory modifier name has been omitted and instead just numbers the systematics); - the list of variables in the workspace is now no longer just filled from the parameter_points, but also from the domains, allowing cases where no parameter points are given to be imported successfully. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14289:78,robust,robust,78,https://root.cern,https://github.com/root-project/root/pull/14289,5,"['error', 'robust']","['error', 'errors', 'robust']"
Availability,"# This Pull request:. Improves exception handling of RooWorkspace for non-existing objects. ## Changes or fixes:. Adding a non-existing object to RooWorkspace prints an error message but doesn't terminate the program, which might lead to segmentation faults. The fix prints the error message and then throws a runtime error to handle such cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes [JIRA: ROOT-7922](https://sft.its.cern.ch/jira/browse/ROOT-7922)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12860:169,error,error,169,https://root.cern,https://github.com/root-project/root/pull/12860,4,"['error', 'fault']","['error', 'faults']"
Availability,# This Pull request:. Improves some of the error messages by adding explicit checks for binning consistency to the HS3 HistFactory implementation. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13098:43,error,error,43,https://root.cern,https://github.com/root-project/root/pull/13098,1,['error'],['error']
Availability,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10886:103,failure,failures,103,https://root.cern,https://github.com/root-project/root/pull/10886,1,['failure'],['failures']
Availability,"# This Pull request:. Makes sure the converter code works also in the case arrays are in the data model of the TTree, so that when someone uses it to convert a TTree they do not get a segmentation fault when the branch contains a fixed size array per entry. This PR fixes #13996, in the sense that with that, my O2 AOD converter does not crash anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13997:197,fault,fault,197,https://root.cern,https://github.com/root-project/root/pull/13997,1,['fault'],['fault']
Availability,"# This Pull request:. Modifies Minuit2 interface to pass initial error/covariance matrix or second derivatives (G2) vector. ## Changes or fixes:. This PR exploits existing code in `MnSeedGenerator` and introduces some improvements, namely:; 1. Check whether provided matrix has positive diagonal (G2 must be positive) and larger than working precision `Eps`; if it is not the case, numerical computation is carried out.; 2. Disable `NegativeG2LineSearch` whenever point 1 is satisfied. Furthermore, this PR provides an interface to pass the error/covariance matrix or second derivatives (G2) vector via `ROOT::Math::Minimizer`. The user can provide either the error/covariance matrix in compressed format (column-major upper triangular part), OR the g2 vector, see the code snippet below. The matrix or second derivatives must take into account only variable parameters, implying that all fixed parameters must be declared before providing initial values. ```; ROOT::Math::Minimizer* minimum = ROOT::Math::Factory::CreateMinimizer(minName, algoName);. minimum->SetVariable(0,""x"",0.,0.);; minimum->SetVariable(1,""y"",0.,0.);. int nrow = 2;; std::vector<double> cov(nrow*(nrow+1)/2);; std::vector<double> d2(nrow);. for(int i = 0; i < nrow; i++) {; d2[i] = 0.1*(i+1);; for(int j = i;j< nrow;j++); cov[i + j * (j + 1) / 2] = (i==j) ? 0.1*(i+1) : 0.;; }. minimum->SetCovariance(cov,nrow);; // OR; //minimum->SetCovarianceDiag(d2,nrow);; ```. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16437:65,error,error,65,https://root.cern,https://github.com/root-project/root/pull/16437,3,['error'],['error']
Availability,# This Pull request:. Sets the executable bit on `build_root.py`. ## fixes:; Fixes `Permission denied` errors when running workflow; https://github.com/root-project/root/actions/runs/4057126157/jobs/6982483001#step:6:100. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12199:103,error,errors,103,https://root.cern,https://github.com/root-project/root/pull/12199,1,['error'],['errors']
Availability,# This Pull request:. The testRooAbsL test compares two doubles and fails due to rounding errors.; The failure happens on ppc64le and aarch64. ## Changes or fixes:. This PR changes EXPECT_EQ to EXPECT_DOUBLE_EQ in the affected test.; ~~~; [ RUN ] SimBinnedConstrainedTest.SubEventSections; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:293: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; N_events_total_parts.Sum(); Which is: -1263.7960506619268; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/TestStatistics/testRooAbsL.cxx:303: Failure; Expected equality of these values:; whole.Sum(); Which is: -1263.796050661927; thrice_N_events_total_parts.Sum(); Which is: -1263.7960506619268; [ FAILED ] SimBinnedConstrainedTest.SubEventSections (199 ms); ~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389:90,error,errors,90,https://root.cern,https://github.com/root-project/root/pull/12389,4,"['Failure', 'error', 'failure']","['Failure', 'errors', 'failure']"
Availability,"# This Pull request:. Then clad is disabled, some tests that use it are still run causing test failures. ## Changes or fixes:. This PR vetos thos tests.; (Also removed duplicates in minuit2 veto.). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12403:95,failure,failures,95,https://root.cern,https://github.com/root-project/root/pull/12403,1,['failure'],['failures']
Availability,# This Pull request:. This PR contains a few hotfixes to the HS3 implementation. ## Changes or fixes:. - attempting to export a forbidden variable name now triggers an error message; - export-keys-based exporters now use RooAbsProxy instead of RooRealProxy to allow also non-function-type and non-list-type proxies to be exported successfully.; - added a unit test for import and export of RooBernstein to cover the import/export issues for export-keys-based exporters.; - invalid category names will now be fixed upon export such that they don't lead to invalid data names; - FlexibleInterpVars with unequal numbers of variables and high/low variations will now be cut-off on minimum length upon export.; - HistFactory ShapeSys and staterror will now export and import the parameter names instead of auto-generating them. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13813:168,error,error,168,https://root.cern,https://github.com/root-project/root/pull/13813,1,['error'],['error']
Availability,"# This Pull request:. This PR fixes a build failure due to out-of-bounds vector element access in SOFIE. ## Changes or fixes:; ~~~~; cd <SRCDIR>/redhat-linux-build/tmva/sofie/test && /usr/bin/cmake -E env ROOTIGNOREPREFIX=1 ./emitFromONNX <SRCDIR>/tmva/sofie/test/input_models/ConvTranspose1d.onnx <SRCDIR>/redhat-linux-build/tmva/sofie/test/ConvTranspose1d; /usr/include/c++/12/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; reference = long unsigned int&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Subprocess aborted; gmake[2]: *** [tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/build.make:84: SofieCompileModels_ONNX] Error 1; gmake[2]: Leaving directory '<SRCDIR>/redhat-linux-build'; gmake[1]: *** [CMakeFiles/Makefile2:50024: tmva/sofie/test/CMakeFiles/SofieCompileModels_ONNX.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs....; ~~~~. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11704:44,failure,failure,44,https://root.cern,https://github.com/root-project/root/pull/11704,3,"['Error', 'failure']","['Error', 'failure']"
Availability,"# This Pull request:. `TRatioPlot` defines three pads named `upper_pad`, `lower_pad` and `top_pad`. If single canvas contains two or more `TRatioPlot`s, the saved C macro declares same object variable names resulting in runtime error. This fix adds counter suffix to pads (like for histograms) resulting in unique pad names. ## Changes or fixes:. Modifications to `SavePrimitive` members of `TPad` and `TCanvas` to count instances and renumerate written object variable names. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . ### Example. Consider MWE; ```c++; {; TH1I * h1 = new TH1I(""h1"", ""h1"", 10, -5, 5);; TH1I * h2 = new TH1I(""h2"", ""h2"", 10, -5, 5);. h1->FillRandom(""gaus"", 1000);; h2->FillRandom(""gaus"", 1000);. TCanvas * can = new TCanvas(""c_pads_test"", ""c_pads_test"", 800, 400);. can->cd(0);; TPad * p1 = new TPad(""p1"", ""p1"", 0, 0.3, 0.5, 1.0);; p1->Draw();; p1->cd();; TRatioPlot ratio1(h1, h2);; ratio1.Draw();. can->cd(0);; TPad * p2 = new TPad(""p2"", ""p2"", 0.5, 0.3, 1.0, 1.0);; p2->Draw();; p2->cd();; TRatioPlot ratio2(h2, h1);; ratio2.Draw();. can->cd(0);; TPad * p3 = new TPad(""p3"", ""p3"", 0.0, 0.0, 1.0, 0.3);; p3->Draw();; p3->cd();; h1->Draw();; h2->Draw(""same"");. can->Draw();. can->SaveAs("".C"");; }; ```; Run the macro and then try to run resulting `c_pads_test.C`. The output will be:. ```; Processing c_pads_test.C...; In file included from input_line_10:1:; /home/rlalik/c_pads_test.C:229:10: error: redefinition of 'upper_pad'; TPad *upper_pad = new TPad(""upper_pad"", """",0.0035,0.3,0.9965,0.9975);; ^; /home/rlalik/c_pads_test.C:27:10: note: previous definition is here; TPad *upper_pad = new TPad(""upper_pad"", """",0.0035,0.3,0.9965,0.9975);; ^; /home/rlalik/c_pads_test.C:303:10: error: redefinition of 'lower_pad'; TPad *lower_pad = new TPad(""lower_pad"", """",0.0035,0.0025,0.9965,0.3);; ^; /home/rlalik/c_pads_test.C:103:10: note: previous definition is here; TPad *lower_pad = new TPad(""lower_pad"", """",0.0035,0.0025,0.9965,0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12349:228,error,error,228,https://root.cern,https://github.com/root-project/root/pull/12349,1,['error'],['error']
Availability,"# This Pull request:. fixes an error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'; ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:3023:39: error: call to implicitly-deleted copy constructor of 'ROOT::Experimental::RFieldBase::RSharedPtrDeleter'; __cntrl_ = new _CntrlBlk(__p, __d, _AllocT());; ^~~; /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/src/RField.cxx:689:24: note: in instantiation of function template specialization 'std::shared_ptr<void>::shared_ptr<void, ROOT::Experimental::RFieldBase::RSharedPtrDeleter>' requested here; return RValue(this, std::shared_ptr<void>(where, RSharedPtrDeleter(GetDeleter())));; ^; /Users/yana/Projects/ROOT/Fixathon_13_02_2024/root/tree/ntuple/v7/inc/ROOT/RField.hxx:126:45: note: copy constructor of 'RSharedPtrDeleter' is implicitly deleted because field 'fDeleter' has a deleted copy constructor; std::unique_ptr<RFieldBase::RDeleter> fDeleter;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:1584:3: note: copy constructor is implicitly deleted because 'unique_ptr<ROOT::Experimental::RFieldBase::RDeleter>' has a user-declared move constructor; unique_ptr(unique_ptr&& __u) _NOEXCEPT; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk/usr/include/c++/v1/memory:2569:39: note: passing argument to parameter '__d' here; __shared_ptr_pointer(_Tp __p, _Dp __d, _Alloc __a); ^; ```. ```; % clang -v; Homebrew clang version 16.0.1; Target: x86_64-apple-darwin20.6.0; Thread model: posix; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14662:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/14662,2,['error'],['error']
Availability,"# This Pull request:; ## Changes or fixes:; I realized that the offsets used by TGraphPainter to not paint error bars inside the markers were missing values for the new marker styles (35 - 49) and did not treat markers with linewidths > 1 properly. Furthermore, some existing values were not correct, like for example the x-size of the full diamon marker was 1, but it should be 0.6. This PR fixes these problems. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9015:107,error,error,107,https://root.cern,https://github.com/root-project/root/pull/9015,1,['error'],['error']
Availability,# This Pull request:; * Fixes rendering error of REveBoxSet on Chrome OSX and Safari.; https://github.com/UL-FRI-LGM/RenderCore/pull/18. * Fixes transparency settings of irregular REveBoxSet type . * Improve REveTable layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15382:40,error,error,40,https://root.cern,https://github.com/root-project/root/pull/15382,1,['error'],['error']
Availability,# This Pull request:; - Removes some dead or redundant code from RMiniFile.cxx (see commit comment for more details); - adds a utility to FileRaii to preserve the file after running. Useful to quickly debug a test file locally without having to recompile ntuple_test.hxx or doing some weird tricks. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15670:45,redundant,redundant,45,https://root.cern,https://github.com/root-project/root/pull/15670,1,['redundant'],['redundant']
Availability,# This Pull request:; Added correct treatment of extended term in asymptotically correct method for uncertainty determination in the presence of weights. This improvement will allow for extended unbinned maximum likelihood fits to use the asymptotically correct method. . ## Changes or fixes:; -Added extended term to asymptotically correct method to allow for weighted extended maximum likelihood fits; -Usage of logarithmic PDFs for derivatives may have some numerical benefits; -Fixed RooDerivative to not use the parameter range in the step size calculation in case the parameter supplied has no range. This now allows to use the method (and RooDerivative in general) for parameters that do not specify a range. ; -Added warning in case of binned fits. In this case a chi2 fit using the std. treatment of weights should be preferrable. ## Checklist:. - [x] tested changes locally. This PR fixes # ; resolves https://its.cern.ch/jira/browse/ROOT-10827; resolves https://its.cern.ch/jira/browse/ROOT-10866; related #11660 ; note https://github.com/root-project/root/issues/11112 can not be fixed since the resulting minuit covariance matrix is not positive definite (set PrintLevel(0) to see this). Calculations with the inverse Hessians are thus not reliable. High stats fit show the expected behaviour.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14751:1253,reliab,reliable,1253,https://root.cern,https://github.com/root-project/root/pull/14751,1,['reliab'],['reliable']
Availability,"# This Pull request:; Adds an optional safety parameter to : `TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z, Option_t *option, Double_t safety)`; ## Changes or fixes:; Backward-compatible interface change, allowing the user to inspect if a given distance is safe (not touching the volume surfaces neighbouring a point). ```cpp; gGeoManager->CheckPoint(4.00457, -62.4337, 4.46698);; === Check current point : (4.00457, -62.4337, 4.46698) ===; - path : /TOP_1; Safety radius : 35.433700; ```. ![root_arb8](https://github.com/root-project/root/assets/18400453/133e7f2e-a20b-4c89-b4c7-5587ba50df84). ```cpp; gGeoManager->CheckPoint(4.00457, -62.4337, 4.46698, """", 31.067 /*user-defined*/); === Check current point : (4.00457, -62.4337, 4.46698) ===; - path : /TOP_1; Safety radius : 31.067000; ```; ![surface](https://github.com/root-project/root/assets/18400453/425f7b02-24e2-486c-b8a4-0da323d7dd1a). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary) Updated the class reference. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14851:75,CheckPoint,CheckPoint,75,https://root.cern,https://github.com/root-project/root/pull/14851,3,['CheckPoint'],['CheckPoint']
Availability,"# This Pull request:; Choosing an appropriate color scheme is essential for making results easy to understand and; interpret. Factors like colorblindness and converting colors to grayscale for publications; can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); under the MIT License, meet these criteria. ## Changes or fixes:; - Implement the new three colors scheme in TColor.cxx et RTypes.h; - Add 3 missing colors (kBrown, kGrape and kAsh); - Automaticallically set the name of a new color to its hexadecimal value; - Implement two new tutorials illustrating these new color schemes; - Update the doc; - Improve the dark and bright colors management. Modify the documentation accordingly. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16348:413,avail,available,413,https://root.cern,https://github.com/root-project/root/pull/16348,1,['avail'],['available']
Availability,# This Pull request:; Fixes `fatal error: 'google/protobuf/port_def.inc' file not found` error when building the tests of TMVA-Sofie with protobuf v3.17.3. ## Checklist:. - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8852:35,error,error,35,https://root.cern,https://github.com/root-project/root/pull/8852,2,['error'],['error']
Availability,"# This Pull request:; Fixes a bug that occurred spuriously when exiting the ROOT interpreter after using `MultiProcess::Job` objects, which left child processes alive. ## Changes or fixes:; As explained in the comments added in the code in the commit in this PR, the `zmqSvc().close_context()` was called at the wrong moment, namely in the `Messenger` destructor. When this was called at program exit, it caused dereferencing of a destroyed (and in the meantime randomly overwritten) singleton pointer, which caused a segfault on some systems. This bug probably went unnoticed before because it is a case of ""static destruction order fiasco"", which makes it build command, OS and probably weather dependent. This also makes the `RooMinimizer::cleanup()` calls after tests unnecessary; they were used as a workaround for the above problem, because by manually destroying all `Job`s (which were held alive inside `RooMinimizer::_theFitter`, which is deleted by `RooMinimizer::cleanup`), the `JobManager` was also destroyed (when all Jobs are destroyed, the JobManager self-destructs as well) before the `ZeroMQSvc` singleton is destroyed by the exiting of the program (in the phase of destroying static state), so the ""random"" destruction order problem mentioned above did not occur. Thanks to @Zeff020 for discovering the bug. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9399:161,alive,alive,161,https://root.cern,https://github.com/root-project/root/pull/9399,2,['alive'],['alive']
Availability,"# This Pull request:; Fixes the cmakeDIr undefined error that occurs on Windows ; ## Changes or fixes:; Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore; - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10726:51,error,error,51,https://root.cern,https://github.com/root-project/root/pull/10726,2,['error'],['error']
Availability,"# This Pull request:; Fixes validity of exported gdml file when the exported node is not the top geometry node. Adds error messages on gdml import errors, and deletes geometry manager in such case. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #9310",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10044:117,error,error,117,https://root.cern,https://github.com/root-project/root/pull/10044,2,['error'],"['error', 'errors']"
Availability,"# This Pull request:; Fixing a crash in HistoToWorkspaceFactoryFast.cxx where a parameter that was globally set to be constant was not found a given region, but the code was still accessing the parameter even when it was nullptr. . ## Changes or fixes:; Now the parameter is set to constant only when found in a given region. Also demoting the error to warning as this does not always indicate a wrong setup. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14225",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14249:344,error,error,344,https://root.cern,https://github.com/root-project/root/pull/14249,1,['error'],['error']
Availability,# This Pull request:; In EveManager::ImportSceneChangeJson remove REveElements objects which indices have been marked as deleted on the server. . ## Changes or fixes:; Error messages in delete of server elements on importSceneChangeJson. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8571:168,Error,Error,168,https://root.cern,https://github.com/root-project/root/pull/8571,1,['Error'],['Error']
Availability,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16000:469,failure,failure,469,https://root.cern,https://github.com/root-project/root/pull/16000,1,['failure'],['failure']
Availability,# This Pull request:; Minor change in a table controller. ## Changes or fixes:; Possible error on reloads of a page when elements are highlighted. This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10655:89,error,error,89,https://root.cern,https://github.com/root-project/root/pull/10655,1,['error'],['error']
Availability,"# This Pull request:; Removes invocations to the root-config executable at *ROOT module import time*. The executable `root-config` was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison, which is fast and which has no impact in terms of memory (as a query to the type system would have caused with modules),. More in general, this simple PR could be considered as the first of a series to reduce the time needed to `import ROOT` as much as possible. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13803:176,avail,available,176,https://root.cern,https://github.com/root-project/root/pull/13803,1,['avail'],['available']
Availability,"# This Pull request:; This PR aims to address #14085 by making thisroot.sh identify the shell correctly even when run under qemu, for example in emulated docker containers. ## Changes or fixes:; When qemu is run, then `/proc/$$/comm` contains the name of the command that is emulated. ## Checklist:; - [x] tested changes locally; - [ ] ~~updated the docs (if necessary)~~ N/A. This PR fixes #14085. ## Tests; Before:; ```console; (Fri Dec-15 2:11:32pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); > source thisroot.sh; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""aarch64-binfmt-P""!; (ERROR)-(Exit Code 1)-(General error); (Fri Dec-15 2:11:37pm)-(CPU 20.2%:0:Net 1)-(root:/)-(64K:21); ```; After:; ```console; (Fri Dec-15 2:12:57pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); > source thisroot.sh; (Fri Dec-15 2:13:00pm)-(CPU 20.2%:0:Net 1)-(root:/)-(16M:23); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14251:514,ERROR,ERROR,514,https://root.cern,https://github.com/root-project/root/pull/14251,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"# This Pull request:; This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by ; @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:; Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`.; Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation; At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14077:658,error,error,658,https://root.cern,https://github.com/root-project/root/pull/14077,4,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,"# This Pull request:; [DF] Added SaveGraph Tutorials; [DF] Remove static members from SaveGraph (Apply improvements from #9145). ## Changes or fixes:. Removed the static GraphNode id initializer (relevant for SaveGraph). Removed static maps, which were used to check if a define/filter/range node were already on the computation graph.; Solution is to pass a (non-static) map, which is created at each call of SaveGraph. The visited map is now only one and has signature `std::unordered_map<void *, std::shared_ptr<GraphNode>>` - in this manner, different type of nodes can use the same map. The size of the map of visited nodes is used to assign unique ids. Now, also the action nodes are in the visited map. Moreover, some friend methods are now redundant. Tests were adapted accordingly. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #9145",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9540:748,redundant,redundant,748,https://root.cern,https://github.com/root-project/root/pull/9540,1,['redundant'],['redundant']
Availability,"# This Pull request:; adds the `-Ddev=on` flag on the debian CI machine. It's a ""test run"" to see if we can later enable it on more (potentially all) build machines. Here's what the flag does:; - enables asserts; - (Linux|BSD) enables -Werror; - (Linux|BSD) does not relink if a dependent .so has changed (CMAKE_LINK_DEPENDS_NO_SHARED On); - (Linux|BSD) splits debug info (-gsplit-dwarf); - (Linux|BSD) uses lld if available; - defines USE_LESS_INCLUDES",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15853:415,avail,available,415,https://root.cern,https://github.com/root-project/root/pull/15853,1,['avail'],['available']
Availability,"# This Pull request:; fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger.; This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16010:41,error,error,41,https://root.cern,https://github.com/root-project/root/pull/16010,2,['error'],"['error', 'errors']"
Availability,# This Pull request:; fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15981:104,error,error,104,https://root.cern,https://github.com/root-project/root/pull/15981,1,['error'],['error']
Availability,"# This Pull request:; refactors RNTupleMerger to properly support late model extension.; The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match).; Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure.; By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO; - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16080:820,error,error,820,https://root.cern,https://github.com/root-project/root/pull/16080,1,['error'],['error']
Availability,"# This pull request:. Switches ROOT to only using ""pthread_attr_setaffinity_np"" on glibc, instead of all platforms that aren't MacOS. This function is only available on glibc (see [here](http://stress.stappe.de/software/gnulib/manual/html_node/pthread_005fattr_005fsetaffinity_005fnp.html), so this can currently not be compiled on other libc's for linux, such as musl, or other OS's besides MacOS that don't use glibc. ## Changes or fixes:. Fixes compatibility for platforms that aren't MacOS or glibc. . ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10045:156,avail,available,156,https://root.cern,https://github.com/root-project/root/pull/10045,1,['avail'],['available']
Availability,"# Udate cppyy. *Sister PR in `roottest`: https://github.com/root-project/roottest/pull/1071*. ## Summary. Synchronizes the [CPyCppyy](https://github.com/wlav/CPyCppyy) CPython extension and [cppyy](https://github.com/wlav/cppyy) Python library with upstream to fix bugs, add features, and avoid duplicate maintenance efforts. ## Behavior changes. ### No implicit conversion from fixed-sized char buffers to null-terminated string. If you have a `char` buffer with constant size, people might use it for different things. For example, to store null-terminated short strings in a TTree. Therefore, the current PyROOT converts such buffers to Python strings. However, that means it's impossible to get the full buffer if it contains zeros, which can be useful if the buffer doesn't contain a string but for example some status bytes. Therefore, the used is not required to *explicitly convert the buffer to a Python string* with the `as_string()` method. Demo:; ```python; import ROOT. ROOT.gInterpreter.Declare("""""". struct Struct {; char char_buffer[5] {};; };. void fill_char_buffer(Struct & st); {; std::string foo{""foo""};; std::memcpy(st.char_buffer, foo.data(), foo.size());; }. """"""); struct = ROOT.Struct(); ROOT.fill_char_buffer(struct); char_buffer = struct.char_buffer. # With thew new cppyy, you get access to the lower level buffer instead:; print(""struct.char_buffer : "", char_buffer). # However, you can turn the buffer into a string very easily with as_string():; print(""struct.char_buffer.as_string(): "", char_buffer.as_string()); ```; The output:; ```txt; struct.char_buffer : <cppyy.LowLevelView object at 0x74c7a2682fb0>; struct.char_buffer.as_string(): foo; ```. ## Associated GitHub issues. This will close the following GitHub issue:; * https://github.com/root-project/root/issues/12718; * https://github.com/root-project/root/issues/7686; * https://github.com/root-project/root/issues/11924; * https://github.com/root-project/root/issues/12230; * https://github.com/root-project/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:305,mainten,maintenance,305,https://root.cern,https://github.com/root-project/root/pull/14507,1,['mainten'],['maintenance']
Availability,"## Add root to npm, as to allow for easier installation.; ### It would be nice to add Root to npm, as ; - It would be easily available on Windows; - The Installation process wouldn't take as long/be as difficult. I think you can directly add it through Github, if i am not mistaken.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7012:125,avail,available,125,https://root.cern,https://github.com/root-project/root/issues/7012,1,['avail'],['available']
Availability,"## Changes or fixes:. On Ubuntu 22.04 , execute standalone cling binary. In cmd prompt execute .x meta command without giving a filename, cling crashes. The proposed solution is to directly reject the .x command without giving clear diagnostics. This is not user friendly but this is currently how `MetaParser.cpp` handles all parsing/input error. At least it prevents crashing. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11264:341,error,error,341,https://root.cern,https://github.com/root-project/root/pull/11264,1,['error'],['error']
Availability,"## Changes or fixes:; - When building in MacOS with afterimage (building ROOT from spack), I consistently get the following error:. ```; export.c:159:18: error: call to undeclared library function 'malloc' with type 'void *(unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; realfilename = safemalloc( dirname_len+filename_len+1 );; ^; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:159:18: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'; ./asim_afterbase.h:220:24: note: expanded from macro 'safemalloc'; #define safemalloc(s) malloc(s); ^; export.c:177:2: error: call to undeclared library function 'free' with type 'void (void *)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; free( realfilename );; ^; export.c:177:2: note: include the header <stdlib.h> or explicitly provide a declaration for 'free'; export.c:404:11: error: call to undeclared library function 'calloc' with type 'void *(unsigned long, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; curr = calloc(*size, 1);; ^; export.c:404:11: note: include the header <stdlib.h> or explicitly provide a declaration for 'calloc'; export.c:676:19: error: call to undeclared library function 'realloc' with type 'void *(void *, unsigned long)'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]; buff->buffer = realloc( buff->buffer, buff->allocated_size );; ^; export.c:676:19: note: include the header <stdlib.h> or explicitly provide a declaration for 'realloc'; 4 errors generated.; make[3]: *** [Makefile:346: export.o] Error 1; make[3]: *** Waiting for unfinished jobs....; ~. ```. In this PR I'm removing an undef that I think it shouldn't be there; if that variable is not defined then stdlib.h is n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15044:124,error,error,124,https://root.cern,https://github.com/root-project/root/pull/15044,3,['error'],['error']
Availability,"## Changes or fixes:; After b5d751c069df2725dbc0d96bb1a6a677addc3895, RField.cxx on clang yields the warning:; ```; /home/jp/root/tree/ntuple/v7/src/RField.cxx:2504:58: error: expression with side effects will be evaluated despite being used as an operand to 'typeid' [-Werror,-Wpotentially-evaluated-expression]; errMsg += ""Item field type: "" + std::string(typeid(*fSubFields[0]).name());; ```. Fixing the warning is just a matter of splitting the ptr dereference from the `typeid` expression. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15869:169,error,error,169,https://root.cern,https://github.com/root-project/root/pull/15869,1,['error'],['error']
Availability,"## Changes or fixes:; Let `a_t` be a c++ class, and we have done `using std::ostream;`.; In standalone cling cmd prompt, all of the below function definitions fail to be parsed and compiled(incrementally).; ```; ::a_t& ::a_t::operator()(int k) {return *this; }; const a_t& a_t::operator[](int k) const {return *this; }; a_t::a_t() = default;; a_t::~a_t() = delete;; ::a_t& ::a_t::operator()(int k) {return *this; }; std::ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; ostream& operator>>(std::ostream& os, const a_t& a) {return (os << a.str << '\n');}; const std::ostream& operator """" _tt(unsigned long long t) {return std::cout << ""tt is "" << t << '\n'; }; ::a_t& operator>=(a_t &lhs, int t) {return lhs; }; a_t& operator<=(::a_t &lhs, int t) {return lhs; }; const a_t& operator<(a_t &lhs, int t) {return lhs; }; const ::a_t& operator>(a_t &lhs, int t) {return lhs; }; ```; They get ""error: function definition is not allowed here"" due to `cling::utils::getWrapPoint()` wrongly determines to wrap function definition inside wrapper function `__cling_Un1Qu3...` . The root cause is that `MinimalPPLexer::IsClassOrFunction()` does not parse them as function definitions. This pullrequest enables `MinimalPPLexer::IsClassOrFunction()` to parse these kinds of func def but there are probably more edge cases of standard c++ func def not being recognized by `MinimalPPLexer::IsClassOrFunction()`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes ""error: function definition is not allowed here"" ( https://github.com/root-project/cling/issues/184 ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11265:923,error,error,923,https://root.cern,https://github.com/root-project/root/pull/11265,2,['error'],['error']
Availability,"## Describe the bug. I just ran into an issue while trying to use the ATLAS analysis software on the latest version of macOS, with the latest version of Xcode. While trying to load the dictionary of a class whose header includes `<boost/shared_ptr.hpp>`, my test application dies. To simplify things a bit, I put a simple reproducer under: https://github.com/krasznaa/root-boost-dictionary-error With which I see the following:. ```; [bash][eowyn-1]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] MyClass c;; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:31: error: expected expression; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:83:73: note: expanded from macro 'atomic_is_lock_free'; #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:390,error,error,390,https://root.cern,https://github.com/root-project/root/issues/6454,2,['error'],['error']
Availability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ## Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6397:587,down,download,587,https://root.cern,https://github.com/root-project/root/issues/6397,2,['down'],['download']
Availability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Jitted Min calls break with RVec columns, although they work fine with scalars and if the RVec type is passed explicitly as a template parameter. Max is not affected. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```c++; #include <ROOT/RDataFrame.hxx> ; #include <ROOT/RVec.hxx> ; ; int main() { ; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return ROOT::RVec<float>{1,2,3}; }); ; df.Max<ROOT::RVec<float>>(""x"").GetValue(); ; df.Min<ROOT::RVec<float>>(""x"").GetValue(); ; df.Max(""x"").GetValue(); ; df.Min(""x"").GetValue(); // this one breaks at runtime ; return 0; ; } ; ```. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.22.02. ## Additional context; <!--; Add any other context about the problem here.; -->. First reported [on the forum](https://root-forum.cern.ch/t/rdataframe-min-function-does-not-compile/41573).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6435:1020,down,download,1020,https://root.cern,https://github.com/root-project/root/issues/6435,1,['down'],['download']
Availability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following gist:; https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT master; 2. Fedora 32; 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context; Stacktrace; ```; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50; #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79; #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181; #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341; #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306; #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362; #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998; #7 0x00007ffff75db056 in TFile::~TFile (this=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6527:968,down,download,968,https://root.cern,https://github.com/root-project/root/issues/6527,1,['down'],['download']
Availability,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The following code works fine with 6.20.04, but segfaults with 6.22.02. ```cpp; #include ""RooDataSet.h""; #include ""RooRealVar.h""; #include ""TFile.h""; #include ""TTree.h"". int main(int argc, char* argv[]) {; TTree* tree = new TTree(""tree"", ""tree"");; double var = 1;; tree->Branch(""var"", &var, ""var/D"");; tree->Fill();. RooRealVar* roovar = new RooRealVar(""var"", ""var"", 0, 10);; TFile* output_file = new TFile(""test.root"", ""RECREATE"", ""output_file"");. output_file->Print();; RooDataSet* data_set = new RooDataSet(""data_set"", ""data_set"", tree, RooArgSet(*roovar));; output_file->Print();. return 0;; }; ```. The segfault happens on the last `output_file->Print();` line - it seems the creation of the `RooDataSet` somehow destroys the object pointed to by `output_file`. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the code to run without segfaulting. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Save the quoted code to `mwe_tfile.cc`; 2. Build with `g++ mwe_tfile.cc -o mwe_tfile $(root-config --cflags --glibs) -lRooFitCore`; 3. Run `./mwe_tfile`. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Ubuntu 18.04; Binary ROOT installs; Works with 6.20.04; Doesn't work with 6.22.02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6408:1557,down,download,1557,https://root.cern,https://github.com/root-project/root/issues/6408,1,['down'],['download']
Availability,"## Describe the bug; As discussed in the [ROOT forum](https://root-forum.cern.ch/t/root-memstat-doesnt-work/41455):; WIthout the memstat feature, `root.exe` still offers the `-memstat` option but produced failures like; ```; input_line_11:2:6: error: unknown type name 'TMemStat'; new TMemStat("""",100000,5000000);; ```. ## Expected behavior; If memstat is not part of the build, the memstat option should not be offered or there should be a clearer error message. ## To Reproduce; Steps to reproduce the behavior:; 1. Compile with `cmake -Dmemstat=off`; 2. Run `root -l`. ## Setup; 1. Master; 2. Arch Linux; 3. Built from sources",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6410:205,failure,failures,205,https://root.cern,https://github.com/root-project/root/issues/6410,3,"['error', 'failure']","['error', 'failures']"
Availability,"## Describe the bug; Crash.; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248; 6248	 tmpGuideLinePad->Delete();; (gdb) bt; #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248; #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior; No crash. ## To Reproduce; No working standalone reproducer so far. ## Setup; master ROOT with gcc4.8.5 on CentOS7. ## Additional context; The relevant code is . ```; static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad; if (tmpGuideLinePad) {; if (object == tmpGuideLinePad) { // in case of funny button click combination.; tmpGuideLinePad->Delete();; tmpGuideLinePad = 0;; return;; }; tmpGuideLinePad->Delete();; tmpGuideLinePad = 0;; }. ```; Obviously the code if completely ok for a single thread application.; However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6510:80,fault,fault,80,https://root.cern,https://github.com/root-project/root/issues/6510,1,['fault'],['fault']
Availability,"## Describe the bug; I store a custom event class in a TTree. Some of the members of the class are arrays (c-style). Accessing the array members works for the first time the GetEntry() is called, but subsequent accesses result in segmentation faults. I am using the ""old"" way of reading the tree (with SetBranchAddress). . One possible workaround might be to use std::array instead of c-style arrays, although I have not fully tested if this works. . ## Expected behavior; Array members of objects in TTrees are accessible via PyROOT as was the case before 6.22. . ## To Reproduce. I attached a MWE (really a minimal failing example), including a script to build/generate a tree/run the offending python scripts (faiing.sh): [mwe.tar.gz](https://github.com/root-project/root/files/5286101/mwe.tar.gz). The gist is that the event here is a simple class: ; ```. #ifndef _mwe_event_h; #define _mwe_event_h. #include ""TObject.h"" ; #include <array>. class MWEEvent ; {. public: ; MWEEvent() { iev =-1; bar=-1; foo[0] =-1; foo[1]=-1; } . // workaround for not being able to access foo directly ; double get_foo(int i) const { return foo[i]; } . int iev; ; double bar; ; double foo[2]; ; virtual ~MWEEvent() { ; } . ClassDef(MWEEvent,1);; }; ; ```. A tree of these objects can be read with PyROOT fine if only the scalar members are touched, or the getter is used:. ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.get_foo(0)); print (ev.get_foo(1)); ```. But if you try to access the array member directly (as used to work), it does not work:; ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.foo[0]); print (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:243,fault,faults,243,https://root.cern,https://github.com/root-project/root/issues/6468,1,['fault'],['faults']
Availability,"## Describe the bug; Using cppyy in ROOT master (51eb56e), I have a Python class that inherits from a C++ class (with two abstract classes) and I need to pass an instance of the Python class to a C++ function that accepts a pointer to one of the base classes. When the C++ function tries to call a method from the instance, I get a segmentation fault (actually I enter in an infinite segfault loop, where ROOT segfault handler segfaults too). ## Expected behavior; Just that called the C++ function can use the passed instance. ## To Reproduce; From a directory containing the file:; ```reproducer.py; import cppyy. cppyy.gbl.gInterpreter.Declare(""""""; #include <array>; #include <iostream>. struct Interface1 {; virtual void do_1() = 0;; virtual ~Interface1() = default;; };. struct Interface2 {; virtual void do_2() = 0;; virtual ~Interface2() = default;; };. struct Base : virtual public Interface1, virtual public Interface2 {; Base() {; std::cout << std::hex << ""Base* "" << this << ""\nInt1* "" << static_cast<Interface1*>( this ) << ""\nInt2* ""; << static_cast<Interface2*>( this ) << '\n';; }; };. struct Derived : Base, virtual public Interface2 {; void do_1() override { std::cout << std::hex << this << ""->do_1\n""; }; void do_2() override { std::cout << std::hex << this << ""->do_2\n""; }; };. void my_func( Interface2* i ) { i->do_2(); }; """"""). class PyDerived(cppyy.gbl.Derived):; pass. i = PyDerived(); i.do_1(); i.do_2(). cppyy.gbl.my_func(i). ```; call; ```; python reproducer.py; ```. ## Setup; - ROOT version: 51eb56e; - OS: CentOS7; - arch: x86_64; - compiler: gcc 9.2.0. ## Additional context; I'm using the nightly builds by CERN SFT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6376:345,fault,fault,345,https://root.cern,https://github.com/root-project/root/issues/6376,1,['fault'],['fault']
Availability,"## Describe the bug; When building 6.22.02 with x11 disabled, there's a build error:; ```; CMakeFiles/RGL.dir/src/TGLFormat.cxx.o: In function `TGLFormat::InitAvailableSamples()':; TGLFormat.cxx:(.text+0x35c): undefined reference to `XGetVisualInfo'; TGLFormat.cxx:(.text+0x476): undefined reference to `XFree'; CMakeFiles/RGL.dir/src/TGLWidget.cxx.o: In function `TGLWidget::CreateWindow(TGWindow const*, TGLFormat const&, unsigned int, unsigned int, std::pair<void*, void*>&)':; TGLWidget.cxx:(.text+0xcd5): undefined reference to `XCreateColormap'; TGLWidget.cxx:(.text+0xd28): undefined reference to `XCreateWindow'; CMakeFiles/RGL.dir/src/TGLWidget.cxx.o: In function `TGLWidget::~TGLWidget()':; TGLWidget.cxx:(.text+0x1765): undefined reference to `XFree'; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libRGL.so] Error 1; make[1]: *** [graf3d/gl/CMakeFiles/RGL.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. ## Expected behavior; a clean build. ## To Reproduce; ```; setup gcc 9.2.0; > export CXX=g++; > export CC=gcc; > cmake -Dx11=OFF -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off ../src; > make -j30; ```. ## Setup; version: v6.22.02; OS: RHEL7; root built from git source (tag v6-22-02); gcc: 9.2.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6368:78,error,error,78,https://root.cern,https://github.com/root-project/root/issues/6368,4,"['Error', 'error']","['Error', 'error']"
Availability,"## Description:; This Pull Request fixes a typographical error in the README.md file. ## Changes Made:; Corrected ""histograming"" to ""histogramming"" in the README.md file. ## Additional Information:; This fix is not related to any existing issue. It's a minor typo that I noticed while reviewing the README. Thank you for considering this contribution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13884:57,error,error,57,https://root.cern,https://github.com/root-project/root/pull/13884,1,['error'],['error']
Availability,"## Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; Currently, this doesn't compile, because `TThreadExecutor::Map` only accepts `std::vector<T> &` and not `const std::vector<T>&`:. ```; const std::vector<int> args = {1,2,3};; threadExecutor.Map(func, args);; ```; gets you; ```; foo.cpp:9:33: error: no matching function for call to 'ROOT::TThreadExecutor::Map(main()::<lambda(int)>&, const std::vector<int>&)'; threadExecutor.Map(func, args);; ^; In file included from foo.cpp:1:0:; /home/blue/miniconda3/envs/cern-root/include/ROOT/TThreadExecutor.hxx:58:12: note: candidate: template<class F, class Cond> std::vector<typename std::result_of<F()>::type, std::allocator<typename std::result_of<F()>::type> > ROOT::TThreadExecutor::Map(F, unsigned int); auto Map(F func, unsigned nTimes) -> std::vector<typename std::result_of<F()>::type>;; ^~~; /home/blue/miniconda3/envs/cern-root/include/ROOT/TThreadExecutor.hxx:58:12: note: template argument deduction/substitution failed:; foo.cpp:9:33: note: cannot convert 'args' (type 'const std::vector<int>') to type 'unsigned int'; threadExecutor.Map(func, args);; ^; In file included from foo.cpp:1:0:; /home/blue/miniconda3/envs/cern-root/include/ROOT/TThreadExecutor.hxx:60:12: note: candidate: template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER)>::type, std::allocator<typename std::result_of<F(INTEGER)>::type> > ROOT::TThreadExecutor::Map(F, ROOT::TSeq<INTEGER>); auto Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>;; ^~~; /home/blue/miniconda3/envs/cern-root/include/ROOT/TThreadExecutor.hxx:60:12: note: template argument deduction/substitution failed:; foo.cpp:9:33: note: 'std::vector<int>' is not derived from 'ROOT::TSeq<INTEGER>'; threadExecutor.Map(func, args);; ^; In file included from foo.cpp:1:0:; /home/blue/miniconda3/envs/cern-root/include/ROOT/TThreadExecutor.hxx:62:12: note: candidate",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6472:352,error,error,352,https://root.cern,https://github.com/root-project/root/issues/6472,1,['error'],['error']
Availability,"## Explain what you would like to see improved; When using [pullHist](https://root.cern.ch/doc/master/classRooPlot.html#a0d3911db1f4e0ba5cfcf9e182eea3ed0), don't take curve at bin centre, but integrate curve over the bin. That should fix the following pull plot:; | Wrong | Correct |; | ---- | ---- |; | ![oneToy_old](https://user-images.githubusercontent.com/16205615/108328256-acb8ee80-71cc-11eb-9eb1-f3edb2a3b855.png) | ![oneToy_new](https://user-images.githubusercontent.com/16205615/108328286-b5112980-71cc-11eb-9fa0-67ccba717d9b.png) |. ### Optional: share how it could be improved; - Alter this part of the function:; https://github.com/root-project/root/blob/478d84e4035c74d55511a01372e2bd0b7c8b60a7/roofit/roofitcore/src/RooHist.cxx#L777-L787; - Instead of interpolating the curve to the middle of the bin, find the bin edges from RooHist using the x errors. (Note that RooHist inherits from [TGraphAsymErrors](https://root.cern.ch/doc/master/classTGraphAsymmErrors.html)).; - Then, find the corresponding points on the PDF curve.; - Then, [integrate](https://root.cern.ch/doc/master/classTGraph.html#a06b6dfc69d4fe9336ade71a47864f974) the PDF curve from the first to the last point from above step. ### Code to produce such a plot; From [here](https://github.com/hageboeck/rootNotebooks/blob/master/BinSamplingPdf.ipynb); ```c++; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(20);; RooRealVar m(""m"", ""mean"", 1.5, -10, 10);; RooRealVar s(""s"", ""sigma"", 0.5, -10, 10);; RooGaussian gaus(""gaus"", ""Gaussian distribution"", x, m, s);. RooDataSet* dataset = gaus.generate(x, 10000);; RooDataHist binnedDataset(""binnedData"", ""BinnedData"", x, *dataset);. TCanvas c(""c"", ""Pull demo"", 1200, 800);; c.Divide(2,2);. c.cd(1);; auto frame = x.frame();; dataset->plotOn(frame);; gaus.plotOn(frame);; frame->Draw();. c.cd(3);; auto pulls = frame->pullHist();; pulls->Draw(""P"");; c.Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7239:860,error,errors,860,https://root.cern,https://github.com/root-project/root/issues/7239,1,['error'],['errors']
Availability,"## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:; * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine.; * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time.; * (no)dict2 -- Tests are run once again after running (no)dict1-cold;; * (no)dict3 -- Tests are run once again after running (no)dict2;; * (no)dict4 -- Tests are run once again after running (no)dict3;; * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specifi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012:802,avail,available,802,https://root.cern,https://github.com/root-project/root/pull/3012,1,['avail'],['available']
Availability,"## The problem. In the [bindings/pyroot/pythonizations/CMakeLists.txt](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt) file, the following code is used to compile the Python sources. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); install(CODE ""execute_process(COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source})""); install(CODE ""execute_process(COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source})""); endforeach(); ```. However, with this `execute_process` trick, there is no error code checking, so it often happens that the compilation actually fails with Python 2 because the Pythonizations use features that are only available in Python 3!. I notice this when trying to replace this ""install-to-build-directory"" trick with proper CMake targets, kind of like this:. ```cmake; # Compile .py files; foreach(py_source ${py_sources}); add_custom_command(TARGET ${libname}; COMMAND ${python_executable} -m py_compile ${localruntimedir}/${py_source}; COMMAND ${python_executable} -O -m py_compile ${localruntimedir}/${py_source}; DEPENDS ${localruntimedir}/${py_source}; COMMENT ""Compiling ${py_source} for ${libname}""); endforeach(); ```. With `add_custom_command`, failures in compiling the Python sources causes the build to fail (as it should be I think). ## What needs to be done to fix this issue. * Have CMakes error out when Python compilation fails by using `add_custom_command`; * Make the Pythonization sources compatible with Python 2...; * ... except for the sources that should [only be used for Python 3](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/CMakeLists.txt#L17). For these, the compilation should be done only with Python 3 (logic to do this needs to be added to the CMakeLists.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11437:592,error,error,592,https://root.cern,https://github.com/root-project/root/issues/11437,4,"['avail', 'error', 'failure']","['available', 'error', 'failures']"
Availability,## This Pull request:; - Initialize the size and the stride of the axis; - throw an error when the input tensor has more than 5 dimensions. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11403:84,error,error,84,https://root.cern,https://github.com/root-project/root/pull/11403,1,['error'],['error']
Availability,"## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The first line executed is invalid C++ code, and cling rightly complains. The second line is valid code, but cling does not seem to be able to compile it after the previous compilation failure. Opening a new ROOT prompt and directly inserting the valid code works fine. ```; ~ root -l; root [0] ROOT::RDataFrame(10).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"");; ROOT_prompt_0:1:53: error: no matching member function for call to 'Snapshot'; /*** snip ***/; root [1] ROOT::RDataFrame(10).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"", {""x""});; IncrementalExecutor::executeFunction: symbol '_ZStanSt12memory_orderSt23__memory_order_modifier' unresolved while linking [cling interface function]!; You are probably missing the definition of std::operator&(std::memory_order, std::__memory_order_modifier); Maybe you need to load the corresponding shared library?; ```. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@3ae45ea5f9, RelWithDebInfo.; I could not reproduce with master@dcac6e1bf0, Debug build type.; The 6.22.02 conda package also seems to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439:467,failure,failure,467,https://root.cern,https://github.com/root-project/root/issues/6439,3,"['down', 'error', 'failure']","['download', 'error', 'failure']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour?. No error message when generating `module.idx`. ### How to reproduce?. This can be reproduced with a modified ROOT:; ```diff; diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx; index 7a094cc01f..d74c69aa2b 100644; --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx; +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx; @@ -73,4 +73,6 @@ namespace cling {; std::string printValue(ROOT::RDataFrame *tdf);; } // ns cling; ; +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);; +; #endif // ROOT_RDATAFRAME; ```. This causes; ```; [522/527] Generating lib/modules.idx; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12988:485,error,error,485,https://root.cern,https://github.com/root-project/root/issues/12988,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip); Doing:; ```; make; root.exe -b -l -q macro.cc; ```; leads to:; ```. Loading A.sl. Processing macro.cc...; In file included from ADictUX dictionary payload:6:; ./B.h:5:18: error: base class has incomplete type; class B : public A {; ~~~~~~~^; ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'; class A {; ^; In file included from ADictUX dictionary payload:6:; ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'; B(int arg) : A(arg) {}; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H; ```. ### What is the expected behaviour?. The correct output is:; ```. Loading A.sl. Processing macro.cc...; init A with arg=0; test A; init A with arg=0; test A; ```. ### How to reproduce?. ```; unzip linker_example.zip; make; root.exe -b -q -q macro.cc; ```. ### ROOT version. Any v6 version. ### How did you install ROOT?. any. ### Which operating system are you using?. linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:; ```; diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx; index f56ce23b7a..7cd24d2c63 100644; --- a/core/dictgen/src/rootcling_impl.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:493,error,error,493,https://root.cern,https://github.com/root-project/root/issues/13034,4,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. When I tried to run TMVA test code with the follow errors. root [0] ; Processing TMVA_Higgs_Classification.C...; <FATAL> : Can't import __main__; ***> abort program execution; libc++abi: terminating due to uncaught exception of type std::runtime_error: FATAL error. macOS 13.4, M1, root 6.28.04, any solution? thanks. . ### What is the expected behaviour?. run TMVA tutorial code on macOS M1 it reported an error about libc++abi exceptions. ### How to reproduce?. root $ROOTSYS/tutorials/tmva/TMVA_Higgs_Classification.C ; on macOS 13.4 M1 processor. ### ROOT version. 6.28.04. ### How did you install ROOT?. download from root.cern.ch. ### Which operating system are you using?. macOS 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13002:131,error,errors,131,https://root.cern,https://github.com/root-project/root/issues/13002,4,"['down', 'error']","['download', 'error', 'errors']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**; cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen; [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 73%] Linking CXX executable src/rootcling_stage1; [ 73%] Built target rootcling_stage1; [ 73%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration; begin(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here; template<typename _Tp> _Tp* begin(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration; begin(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:385,failure,failure,385,https://root.cern,https://github.com/root-project/root/issues/14062,2,"['error', 'failure']","['error', 'failure']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. A (cumbersome) macro file shown below gives an error in ROOT 6.30.06, but crashes with 6.33.01. 6.30.06. ```; Processing merged.C...; In file included from input_line_8:1:; /.../merged.C:4:1: error: expected unqualified-id; {; ```. 6.33.01. `#9 0x00007eea14d80b1e in clang::Sema::PushCompoundScope(bool) [clone .cold] () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so`. ### Reproducer. root -l merged.C. ```; #if defined(FUNCTION_INTERFACE); void merged(); #endif; {; int a=0;; }. ```. ### ROOT version. 6.30 vs 6.33.01. ### Installation method. Binary. ### Operating system. Ubuntu 22. ### Additional context. https://root-forum.cern.ch/t/how-to-unify-named-and-anonymous-scripts/59694/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15888:122,error,error,122,https://root.cern,https://github.com/root-project/root/issues/15888,2,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. After updating to the lastest master I got the following error:; ```; && /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/c++ -fdiagnostics-color=always -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -rdynamic core/testsupport/CMakeFiles/TestSupport.dir/src/TestSupport.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TNamedTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TQObjectTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TExceptionHandlerTests.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TStringTest.cxx.o core/base/test/CMakeFiles/CoreBaseTests.dir/TBitsTests.cxx.o -o core/base/test/CoreBaseTests -Wl,-rpath,/home/pcanal/root_working/build/quick-devel/lib lib/libCling.so -ldl lib/libRIO.so googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a -Wl,--unresolved-symbols=ignore-in-object-files lib/libThread.so lib/libCore.so googletest-prefix/src/googletest-build/lib//libgtest.a && :; /cvmfs/cms.cern.ch/el9_amd64_gcc11/external/gcc/11.4.1-30ebdc301ebd200f2ae0e3d880258e65/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.4.1/../../../../x86_64-redhat-linux-gnu/bin/ld: lib/libCling.so: undefined reference to `clang::CXXMethodDecl::getThisObjectType() const'; ```; and indeed:; ```; ./lib/libCling.so: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:BaseForwardModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build/lib/libcladDifferentiator.a:HessianModeVisitor.cpp.o: U clang::CXXMethodDecl::getThisObjectType() const; ./interpreter/llvm-project/llvm/lib/libclangAST.a:DeclCX",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16668:132,error,error,132,https://root.cern,https://github.com/root-project/root/issues/16668,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Any code run through `TInterpreter::Declare` that needs symbols from `libMatrix` ends up in. ```; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; ```. See the simple reproducer below. Here is what I get with two different ROOT versions on lxplus:. ### ROOT 6.32.02 (LCG106); ```; [vpadulan@lxplus951 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus951 ~]$root --version; ROOT Version: 6.32.02; Built for linuxx8664gcc on Jun 19 2024, 05:05:49; From heads/master@tags/v6-32-02; [vpadulan@lxplus951 ~]$python repro_libphysics.py; cling JIT session error: Failed to materialize symbols: { (main, { _ZN8TVectorTIfE8StreamerER7TBuffer, _ZN8TVectorTIfE8Delete_mEiRPf, _ZN8TVectorTIfE4DrawEPKc, _ZNK8TVectorTIfE5PrintEPKc, _ZN8TVectorTIfE5ClassEv }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { _ZL5myvec, _ZN8TStorage19FilledByObjectAllocEPVKj, _ZNSt13__atomic_baseIhEppEi, _ZN4ROOT8Internal22THashConsistencyHolderIRK8TVectorTIfEE17fgHashConsistencyE, __cxx_global_var_initcling_module_306_, _ZN8TVectorTIfED2Ev, _ZN8TStorage14UpdateIsOnHeapERVKjRVj, _ZGVL5myvec, _ZN8TVectorTIfEC1Ev, _ZTI8TVectorTIfE, _ZTV8TVectorTIfE, __clang_call_terminate, _ZNK8TVectorTIfE11ShowMembersER16TMemberInspector, $.cling-module-306.__inits.0, _ZNK7TObject10IsSortableEv, _ZN8TVectorTIfEC2Ev, _ZNSt13__atomic_baseIhEppEv, _ZNK8TVectorTIfE3IsAEv, __orc_init_func.cling-module-306, _ZN8TVectorTIfED0Ev, _ZZNK8TVectorTIfE27CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOption",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601:191,error,error,191,https://root.cern,https://github.com/root-project/root/issues/16601,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As first reported at https://root-forum.cern.ch/t/rootsys-test-cannot-be-found/56151 . Running the `copytree3.C` tutorial produces the following. ```; $: root $ROOTSYS/tutorials/tree/copytree3.C ; root [0] ; Processing /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C...; In file included from input_line_8:1:; /home/vpadulan/programs/mambaforge/envs/root-628/tutorials/tree/copytree3.C:14:1: fatal error: '/home/vpadulan/programs/mambaforge/envs/root-628/test/libEvent.so' file not found; R__LOAD_LIBRARY($ROOTSYS/test/libEvent.so); ```. In fact, there is no `test` folder in the $ROOTSYS . ### Reproducer. See above. ### ROOT version. 6.28. ### Installation method. conda. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13548:501,error,error,501,https://root.cern,https://github.com/root-project/root/issues/13548,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in a few forum posts . https://root-forum.cern.ch/t/issue-with-rdataframe-using-spark-cluster-on-lcg-102-and-higher/56568/3. https://root-forum.cern.ch/t/error-while-using-rdataframe-with-spark-cluster-analytix/56006. https://swan-community.web.cern.ch/t/distributed-rdataframes-with-spark/690. When running on lxplus/SWAN with recent LCG stacks, TMVA fails its part of the Python initialization with the following error. ```; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_103swan/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_tmva/__init__.py"", line 25, in <module>; hasRDF = gSystem.GetFromPipe(""root-config --has-dataframe"") == ""yes""; ValueError: TString TSystem::GetFromPipe(const char* command) =>; ValueError: nullptr result where temporary expected; ```. This has surfaced when users try distributed RDataFrame applications on such platforms, which cannot even start due to the reported error. ### Reproducer. See the related forum posts. ### ROOT version. 6.26 and above (based on the LCG stacks reported). ### Installation method. LCG build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13798:237,error,error-while-using-rdataframe-with-spark-cluster-analytix,237,https://root.cern,https://github.com/root-project/root/issues/13798,3,['error'],"['error', 'error-while-using-rdataframe-with-spark-cluster-analytix']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/roottest-pullrequests-build/14222/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/. this test fails because of missing access to `scikit-learn` and `xgboost`. Are those hard requirement of ROOT? . If they are, why does the configuration succeed?. If they are not, why does the test fail?. ### Reproducer. ```; test_versions (dependency_versions.DependencyVersions); Test the versions of the installed packages versus the ... Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/sftnight/build/workspace/roottest-pullrequests-build/root/requirements.txt; Details about not matched dependencies:; - The 'scikit-learn' distribution was not found and is required by the application; - The 'xgboost' distribution was not found and is required by the application; ERROR; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212:1482,ERROR,ERROR,1482,https://root.cern,https://github.com/root-project/root/issues/15212,1,['ERROR'],['ERROR']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As seen on https://github.com/root-project/roottest/pull/1106#issuecomment-2050216040 and https://github.com/root-project/roottest/pull/1106#issuecomment-2050220592 there are several tutorials failures in the TMVA tutorials. We do not see those failures in the new CI thus it could be that either the new CI is not running them (or ignoring the failures); or there is a missing protection against a bad/not-supported configuration. This is a blocker to completely retiring the jenkins build as they currently ""appear"" to show failure that the new CI does not detect. . ### Reproducer. A sample of the failure output in case the log are deleted can be found at https://gist.github.com/pcanal/d68be81d3ea618a83fb50a11d4ea1d1d. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. Seen on; ROOT-ubuntu2004/python3. Running on root-ubuntu-2004-1.cern.ch; and; ROOT-ubuntu2204/nortcxxmod.Running on root-ubuntu-2204-2.cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211:268,failure,failures,268,https://root.cern,https://github.com/root-project/root/issues/15211,5,['failure'],"['failure', 'failures']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Backwards compatibility for `THnSparseL` was broken in 6.32 by #8546, @ferdymercury @vepadulano. ### Reproducer. Write a `THnSparseL` to a file e.g. with ROOT 6.30.06:; ```c++; void write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15874:641,error,error,641,https://root.cern,https://github.com/root-project/root/issues/15874,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Behavior: Snapshot warns that an illegaly named column will be renamed when writing to file. Then the column appears twice, with the new name and the original. Renamed leaves now appear outside of their original branch. Expected behavior: Only the renamed column appears in the saved tree, respecting the original tree structure. ### Reproducer. ```; //Dicts for the file structure; gSystem->Load(""$HOME/progs/ExRootAnalysis/libExRootAnalysis.so"");. auto df = ROOT::RDataFrame(""LHEF"", ""pp_2j_LO_H_T_35GeV.root"");. //redefinition of column with unsupported name. auto add_func_call_int=[](ROOT::VecOps::RVec<int> inputArray1,ROOT::VecOps::RVec<int> inputArray2){; auto Array3 = inputArray1+inputArray2;; return Array3;};. auto df2 = df.Redefine(""Event.Nparticles"",add_func_call_int,{""Event.Nparticles"",""Event.Nparticles""});. df2.Snapshot(""LHEF"", ""out_snapshot.root"");. std::unique_ptr<TFile> file1{TFile::Open(""out_snapshot.root"")};; TTree * tree1 = (TTree*)file1->Get<TTree>(""LHEF"");; tree1->Print(); . //Info in <Snapshot>: Column Event.Nparticles will be saved as Event_Nparticles; //Warning in <TTree::Bronch>: Using split mode on a class: TRootWeight with a custom Streamer. // Print() shows the column Events_Nparticles (renamed), but the original is also written to the file as Events.Nparticles. //Redefining by doing ; auto df2 = df.Redefine(""Event.Nparticles"",""Event.Nparticles+Event.Nparticles""}); ; //for example, just gives ; //Error in <TRint::HandleTermInput()>: std::runtime_error caught: RDataFrame::Redefine: cannot define variation ""Event.Nparticles"". Not a valid C++ variable name.; ```. [pp_3j_LO_H_T_2_35GeV.root.tar.gz](https://github.com/root-project/root/files/12874991/pp_3j_LO_H_T_2_35GeV.root.tar.gz). ### ROOT version. ROOT 6.28/00 . ### Installation method. built from source. ### Operating system. Linux Mint 21.1 Cinnamon. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13846:1515,Error,Error,1515,https://root.cern,https://github.com/root-project/root/issues/13846,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Building from source with:; ```; cmake -Droofit_multiprocess=ON -DCMAKE_INSTALL_PREFIX=../root_install/ ../root_src/; cmake --build . --target install -j6; ```. Results in; ```; CMake Error at /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:37 (message):; Command failed: 2. '/usr/bin/cmake' '--build' '.'. See also. /home/tomas/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log. -- stdout output is:; [ 3%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o. -- stderr output is:; gmake[4]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[4]: *** Waiting for unfinished jobs....; gmake[5]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[5]: *** Waiting for unfinished jobs....; In file included from /usr/include/c++/14/atomic:50,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/../../include/oneapi/tbb/detail/_utils.h:22,; from /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/address_waiter.cpp:17:; In member function ‘void std::__atomic_base<_IntTp>::store(__int_type, std::memory_order) [with _ITp = bool]’,; inlined from ‘void std::atomic<bool>::store(bool, std::memory_order)’ at /usr/include/c++/14/atomic:109:20,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all_relaxed() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:430:53,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::abort_all() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:413:26,; inlined from ‘void tbb::detail::r1::concurrent_monitor_base<Context>::destroy() [with Context = tbb::detail::r1::address_context]’ at /home/tomas/ROOT/build/TBB-prefix/src/TBB/src/tbb/concurrent_monitor.h:446:24,; inlined from ‘void tbb::detail::r1::clear_address_waiter_table()’ at /home/tomas/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16654:259,Error,Error,259,https://root.cern,https://github.com/root-project/root/issues/16654,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CMake find_package(ROOT) worked well with 6.28. Now it fails with 6.30 on Ubuntu 22.04 with the binary release. First error was related to not finding the builtin nlohmann even if it's there. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. A hack workaround is using sudo apt install nlohmann-json3-dev. Next error is:. ```; cmake ../testroot/; -- The C compiler identification is GNU 11.4.0; -- The CXX compiler identification is GNU 11.4.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.25/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163:193,error,error,193,https://root.cern,https://github.com/root-project/root/issues/14163,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Cant build ROOT on Fedora 38: ; ```; [ 78%] Completed 'clad'; [ 78%] Built target clad; [ 78%] Generating G__Core.cxx, ../lib/Core.pcm; [ 78%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:52:; In file included from /usr/include/c++/13/memory_resource:60:; In file included from /usr/include/c++/13/bits/memory_resource.h:46:; /usr/include/c++/13/bits/utility.h:219:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp>>'; inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;; ^; /usr/include/c++/13/bits/stl_pair.h:62:11: note: '/usr/include/c++/13/bits/utility.h' included multiple times, additional include site in header from module 'std.bits/stl_pair.h'; # include <bits/utility.h> // for std::tuple_element, std::tuple_size; ^; /opt/root_build/etc/cling/std.modulemap:505:10: note: std.bits/stl_pair.h defined here; module ""bits/stl_pair.h"" {; ^; /usr/include/c++/13/bits/memory_resource.h:46:11: note: '/usr/include/c++/13/bits/utility.h' included multiple times, additional include site in header from module 'std.memory_resource'; # include <bits/utility.h> // index_sequence; ^; /opt/root_build/etc/cling/std.modulemap:257:10: note: std.memory_resource defined here; module ""memory_resource"" [optional] {; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /opt/root_build/etc/cling/Interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:615,error,error,615,https://root.cern,https://github.com/root-project/root/issues/13450,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). ; * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. ; It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. ; ; ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function ; . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot ; * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. ; * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. ; ; ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42); ; * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:177,error,errors,177,https://root.cern,https://github.com/root-project/root/issues/16070,6,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear Rooters,. Indeed I used the TMapFile together with TApplication to realize the online monitoring for my DAQ. After having tried many combinations of ROOT and ubuntu versions, finally it worked with ROOT 6.12.06 on Ubuntu 16.04.7 LTS (gcc 5.4.0). . The main problem is remaining with the TMapFile which requires -lNew to be included in the makefile. Once this works, the TApplication just doesn't work with error message of segmentation fault or violation. Or vice versa, TApplication works but TMapFile doesn't work. In order to repeat the errors, I collected the three ROOT example macros (as attached) and created a makefile to compile them. In the Makefile, the option of --new or -lNew have been added. One can include them or comment them out. On Ubuntu 20.04.1 LTS (gcc 9.4.0), with ROOT version from 6.12.06 to 6.28.04, none of the combinations got to work. For instance, when the TMapFile works with ROOT 6.12.06, then the TApplication returns an error of ""Segmentation violation"". With a newer ROOT, e.g. 6.28.04, the TApplication works but the TMapFile got the error message; *****************************************************************************; Error in <TMapFile::TMapFile> : no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; *****************************************************************************. Could you guys have a look at this problem and find out what happened or may find a solution? Many thanks in advance. Huagen Xu from FZ Juelich, IKP; [root_examples.zip](https://github.com/root-project/root/files/12415948/root_examples.zip). ### Reproducer. As attached, there are three Macro files plus one Makefile. Those three files are all the ROOT examples to demostrate how the TMapFile as well as the TApplication work. To reproduce the problem described above, one could follow the tipps below.; 1. Unzip the file into a local directory ; 2. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511:486,error,error,486,https://root.cern,https://github.com/root-project/root/issues/13511,3,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. I noticed that sometimes, when trying to produce .C macros for my figures, the `SaveAs()` function would return broken macros. I narrowed it down to the `Name()` arguments passed to the `plotOn()` function when plotting RooFit pdf's. The problem seems to be that the default `Name()` value contains special characters (`[` and `]`, in this case), and these characters end up in variable names in the .C macro. I have included a reproducer below (`test_plot_macros.cpp`) which produces three .C macros, two of which are broken as described above.; For instance, in `plot1.C` (one of the produced macros), one can find invalid code such as ; ```cpp; Double_t pdf_Norm[x]_fx1[114] = {; -10.2002,; -10.2,; ...; ```. Would it be possible to filter these special characters when producing the macros?. ### Reproducer. Create a file `test_plot_macros.cpp` containing the script below and run `root test_plot_macros.cpp`. ```cpp; #include ""TCanvas.h"". #include ""RooArgSet.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealVar.h"". using namespace RooFit;. void test_plot_macros() {; // Create a PDF; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar width(""width"", ""width"", 2, 0, 5);; RooGaussian gaus(""pdf"", ""pdf"", x, mean, width);. // Generate some data; RooDataSet* data = gaus.generate(RooArgSet(x), Name(""data""), NumEvents(2000));. // Plots; TCanvas* c = new TCanvas(""c"");. // Plot 1; // Broken .C macro because of default pdf ""Name()""; RooPlot* frame1 = x.frame();; data->plotOn(frame1);; gaus.plotOn(frame1);; frame1->Draw();; c->SaveAs(""./plot1.png"");; c->SaveAs(""./plot1.C"");. // Plot 2; // Not broken .C macro because of explicit (and safe) ""Name()"" configuration; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; gaus.plotOn(frame2, Name(""gaus""));; frame2->Draw();; c->SaveAs(""./plot2.png"");; c->SaveAs(""./plot2.C"");. //",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15887:231,down,down,231,https://root.cern,https://github.com/root-project/root/issues/15887,1,['down'],['down']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,. The tutorial that shows how to create a dictionary `root-master/tutorials/tree/dictionary` do not compile in newer versions of Osx / Xcode. The error happens during the configuration:; ```; cmake .. -G Xcode ; -- The C compiler identification is AppleClang 14.0.0.14000029; -- The CXX compiler identification is AppleClang 14.0.0.14000029; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Configuring done (12.8s); -- Generating done (0.0s); CMake Error in CMakeLists.txt:; The custom command generating. /Users/agramunt/Downloads/root-master/tutorials/tree/dictionary/xcode/G__data2Tree.cxx. is attached to multiple targets:. G__data2Tree; data2TreeLib. but none of these is a common dependency of the other(s). This is not; allowed by the Xcode ""new build system"". CMake Generate step failed. Build files cannot be regenerated correctly.; ```. ### Reproducer. Try to compile the tutorial `root-master/tutorials/tree/dictionary`. ### ROOT version. fails with several versions in the same manner. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/14 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 28 2023, 00:39:39 |; | From tags/v6-26-14@v6-26-14 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits',",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14595:234,error,error,234,https://root.cern,https://github.com/root-project/root/issues/14595,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear experts,; I am trying to compile ROOT 6.28.04 with C++20 standard. It seems that the c++ standard gets downgraded during the compilation, because while compiling the `RRangeCast.hxx` it no longer recognize `std::span`. I am able to compile short C++ code involving `std::span`. This is the full error i get:. ```; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:186:27: error: ‘span’ is not a member of ‘std’; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~~~; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:186:32: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:186:33: error: expected unqualified-id before ‘>’ token; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:225:26: error: ‘span’ is not a member of ‘std’; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~~~; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:225:31: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:225:32: error: expected unqualified-id before ‘>’ token; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; make[2]: *** [core/imt/CMakeFiles/Imt.dir/build.make:132: core/imt/CMakeFiles/Imt.dir/src/RTaskArena.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:32924: core/imt/CMakeFiles/Imt.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. ### Reproducer. My [CMakeCache.txt](https://github.com/root-project/root/files/12080083/CMakeCache.txt) used for the build. ### ROOT version. ROOT 6.28.04. ### Installation method. build from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13270:183,down,downgraded,183,https://root.cern,https://github.com/root-project/root/issues/13270,5,"['down', 'error']","['downgraded', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Floating point precision should be preserved when saving plots as ROOT macros with `TCanvas::SaveAs()`. This can probably be achieved with not too much effort using `std::setprecision`:; https://en.cppreference.com/w/cpp/io/manip/setprecision. ### Reproducer. Run this code, which works fine:. ```c++; TCanvas *c = new TCanvas(""c"", ""c"");; TH1D *histo = new TH1D(""histo"", ""histo"", 1, 595780500.110732, 595780531.878908);; histo->Draw();; c->SaveAs(""plot.C"");; ```. The resulting macro will not preserve the precision on the floating point numbers:; ```c++; TH1D *histo__1 = new TH1D(""histo__1"",""histo"",1,5.957805e+08,5.957805e+08);; ```; And you'll get an error when running it:; ```txt; Processing plot.C...; Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; root [1] Error in <TCanvas::Range>: illegal world coordinates range: x1=595780500.000000, y1=-0.131250, x2=595780500.000000, y2=1.181250; Error in <TCanvas::RangeAxis>: illegal axis coordinates range: xmin=595780500.000000, ymin=0.000000, xmax=595780500.000000, ymax=1.050000; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 18:21:53 |; | From tags/6-32-06@6-32-06 |; | With g++ (GCC) 13.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Nix. ### Operating system. NixOS (Linux). ### Additional context. Can easily happen in the analysis of timeseries, where one often has large axis values because they represent time",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16687:730,error,error,730,https://root.cern,https://github.com/root-project/root/issues/16687,3,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Following up on an issue which was buried in https://github.com/root-project/root/pull/12449#issuecomment-1464946488. In current nightlies this test case behaves slightly differently, but still not correctly. It fails with sensible error messages on the first attempt, but then ""succeeds"" on the second attempt. I would expect it to fail with the same errors again if the state were really fully rolled back. ### Reproducer. test.h; ```; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. testdeclare.py; ```; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'); print(""header include ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). bad_template = ""template std::size_t call_helper<Helper<std::vector<double>>>(const Helper<std::vector<double>>&);"". for i in range(2):; print(f""declare attempt {i}""); ret = ROOT.gInterpreter.Declare(bad_template); print(""ret"", ret); ```. output:; ```; header include ret True; creating helper; declare attempt 0; In file included from input_line_34:1:; ./test.h:10:9: error: cannot assign to variable 'res' with const-qualified type 'const std::size_t' (aka 'const unsigned long'); res = T{0, 0}.size();; ~~~ ^; ./test.h:18:10: note: in instantiation of member function 'Helper<std::vector<double, std::allocator<double> > >::operator()' requested here; return helper();; ^; ./test.h:9:23: note: variable 'res' declared const here; const std::size_t res = 0;; ~~~~~~~~~~~~~~~~~~^~~~~~~; ret False; declare attempt 1; ret True; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:307,error,error,307,https://root.cern,https://github.com/root-project/root/issues/16577,2,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10797. Dear ROOT developers. I was not able to start ROOT 6.20 on a machine running standard CentOS 7. Opt version of ROOT produced seg fault without any hint what could be wrong, debug version of ROOT complained that SystemDir was missing, but did not say which directory exactly. Error messages from ROOT 6.18 were more informative: it complained about missing header file ctype.h. Finally problem was solved by installing glibc-headers rpm, which was not installed initially, since we didn't plan to compile anything on this machine. In future it would be nice to have clear error message that ROOT can not start because certain file is missing, especially if it's not missing shared library which can be checked by ""ldd"". see details in. [https://root-forum.cern.ch/t/can-not-start-root-6-20-02-from-lcg-97-systemdir-is-missing/39594].  . With best regards. Sanya.  . ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14571:253,fault,fault,253,https://root.cern,https://github.com/root-project/root/issues/14571,3,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10813. In principle, markers 24, 25, 26, 27, 28, 30, 32 should be drawn as ""open shape"" so the ""underlying"" error bars should clearly be visible, also in cases when they are smaller than the marker.; Unfortunately this is not the case.; The marker 4 (""kCircle"") behaves properly, though.; A simple test macro which demonstrates this problem is below (note: it uses graphs but I guess the same problem appears for all objects which use these markers, e.g. histograms). ```cpp; {; const Int_t m = 24; // try 24, 25, 26, 27, 28, 30, 32; TGraphErrors *g1 = new TGraphErrors(1);; g1->SetMarkerStyle(4); // error bars clearly visible; g1->SetPoint(0, 0.2, 0.5); g1->SetPointError(0, 0.01, 0.01);; TGraphErrors *g2 = new TGraphErrors(1);; g2->SetMarkerStyle(m); // marker covers error bars; g2->SetPoint(0, 0.4, 0.5); g2->SetPointError(0, 0.01, 0.01);; TGraphErrors *g3 = new TGraphErrors(1);; g3->SetMarkerStyle(4); // error bars clearly visible; g3->SetPoint(0, 0.6, 0.5); g3->SetPointError(0, 0.05, 0.05);; TGraphErrors *g4 = new TGraphErrors(1);; g4->SetMarkerStyle(m); // marker covers error bars; g4->SetPoint(0, 0.8, 0.5); g4->SetPointError(0, 0.05, 0.05);; TMultiGraph *mg = new TMultiGraph();; mg->Add(g1); mg->Add(g2); mg->Add(g3); mg->Add(g4);; mg->GetXaxis()->SetLimits(0., 1.);; mg->SetMinimum(0.); mg->SetMaximum(1.);; mg->Draw(""AP"");; }; ```. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14549:225,error,error,225,https://root.cern,https://github.com/root-project/root/issues/14549,5,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10847. I'm trying to run a simple RDF program that fills a `TH2Poly` object:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TH2Poly.h>; #include <TCanvas.h>; #include <string>. int main(); {; ROOT::RDataFrame df(100);. auto filled = df.Define(""b1"", ""(double) rdfentry_""); .Define(""b2"", ""(double) rdfentry_ * rdfentry_""); .Fill<double, double>(TH2Poly(""name"", ""title"", 0, 10, 0, 100), {""b1"", ""b2""});. TCanvas c{"""", """", 600, 600};; c.cd();. filled->Draw(""colz"");. c.Draw();; c.SaveAs(""rdf_fill_th2poly.png"");; }; ```. But getting errors because the copy constructor of `TH2Poly` is deleted:. ```; /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/ROOT/RDF/ActionHelpers.hxx:298:24: error: use of deleted function ‘TH2Poly::TH2Poly(const TH2Poly&)’; 298 | fObjects[i] = new HIST(*fObjects[0]);; | ^~~~~~~~~~~~~~~~~~~~~~; In file included from rdf_fill_th2poly.cpp:2:; /home/vincenzo/Programs/rootproject/build/masterdevoptsystemtbb/include/TH2Poly.h:66:7: note: ‘TH2Poly::TH2Poly(const TH2Poly&)’ is implicitly deleted because the default definition would be ill-formed:; 66 | class TH2Poly : public TH2 {; ```. Is it possible to add it ?. Cheers,; Vincenzo. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14548:649,error,errors,649,https://root.cern,https://github.com/root-project/root/issues/14548,2,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10973. If store canvas from `tutorials/image/rose_image.C` into file, read it back and draw,; most of the images are not drawn. On the terminal I see errors:; ```; libpng error: invalid screen gamma in png_set_gamma; libpng error: invalid screen gamma in png_set_gamma; libpng error: invalid screen gamma in png_set_gamma; libpng error: invalid screen gamma in png_set_gamma; Error in <TASImage::Paint>: no image set; Error in <TASImage::Paint>: no image set; Error in <TASImage::Paint>: no image set; Error in <TASImage::Paint>: no image set; ```; Seems to be, all images which are internally stored in PNG format, fails.; Two remaining images are shown with palette, which is not a case with original macro. ### Reproducer. As per description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14545:267,error,errors,267,https://root.cern,https://github.com/root-project/root/issues/14545,9,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-4839. Dear Rooters,. I was writing an online monitoring program. Our DAQ is constantly writing data to a temporary TTree, and a monitoring GUI is reading the tree periodically. I followed the instructions (AutoSave) from the reference page http://root.cern.ch/root/html534/TTree.html. The program occasionally crashes after a Refresh() followed by a GetEntry(). I was able to reproduce the problem with a static TTree. The script that generates the tree is below.; ```cpp. {; gROOT->Reset();. TFile *f = new TFile(""test.root"",""recreate"");; TTree *tree = new TTree(""test"",""my test tree"");; TH1F *hh = new TH1F(""hh"",""hh"",100,-10,10);; Float_t x;. tree->Branch(""x"",&x,""x/F"");; //tree->SetCircular(10000);; int Count = 0;; for(size_t ii=0;ii<1000;ii++){; x = gRandom->Gaus(0,2);; tree->Fill();; hh->Fill(x);; Count++;; if(Count%1000==0) {; tree->AutoSave(""SaveSelf"");; //hh->Write();; }; }; tree->Write();; hh->Write();; f->Close();; }; ```. Then I used a root session to open the file. ```cpp; jliu@jliu-VirtualBox:~$ root \-l test.root; root [0]; Attaching file test.root as _file0...; root [1] TTree *t = (TTree*)gDirectory->Get(""test""); root [2] t->GetEntry(0); (Int_t)4; root [3] t->Refresh(); root [4] t->GetEntry(0); Error in <TObjArray::AddAt>: index \-1 out of bounds (size: 10, this: 0x9953a50); ```. This is very puzzling. Is there a way to get around this. I was able to reproduce this on both ROOT 5.27 (SL5.5) and ROOT 5.34 (Ubuntu 11.04). ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14560:1337,Error,Error,1337,https://root.cern,https://github.com/root-project/root/issues/14560,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-5114. All TString functions should raise an exception when they're asked to allocate more space than kMaxSize, instead of just logging an error and clamping the value. For example, the Clobber function is documented as allocating 'nc' characters, but the silent clamping is not mentioned at all. If the TString::Streamer was trying to read a malformed ROOT file, with a TString larger than kMaxSize (currently probably not possible due to alignment in the capacity of the TString, and kMaxSize being set to kMaxInt - 1, but this may accidentally be changed in the future), the Clobber-function would return a buffer that's too small, and potentially exploitable memory corruption would occur. ### Reproducer. NA. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14552:255,error,error,255,https://root.cern,https://github.com/root-project/root/issues/14552,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-8348. When I run the included program with the following command line:; ```; TestExe ""BDT::BDT0_75"" TMVAClassification_BDT.weights.xml; ```; I get a segmentation fault:. ```; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f2a6116db0c in waitpid () from /lib64/libc.so.6; #1 0x00007f2a610f2092 in do_system () from /lib64/libc.so.6; #2 0x00007f2a62a75cf8 in TUnixSystem::Exec (this=0x1225750, shellcmd=0x39585f0 ""/afs/cern.ch/sw/lcg/releases/ROOT/6.06.02-6cc9c/x86_64-slc6-gcc49-dbg/etc/gdb-backtrace.sh 8321 1>&2"") at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2073; #3 0x00007f2a62a7654d in TUnixSystem::StackTrace (this=0x1225750) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:2301; #4 0x00007f2a62a79d6b in TUnixSystem::DispatchSignals (this=0x1225750, sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3539; #5 0x00007f2a62a721e9 in SigHandler (sig=kSigSegmentationViolation) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:395; #6 0x00007f2a62a79cb9 in sighandler (sig=11) at /var/build/jenkins/workspace/lcg_release/BUILDTYPE/Debug/COMPILER/gcc49/LABEL/slc6-physical/build/projects/ROOT-6.06.02/src/ROOT/6.06.02/core/unix/src/TUnixSystem.cxx:3516; #7 <signal handler called>; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14569:279,fault,fault,279,https://root.cern,https://github.com/root-project/root/issues/14569,1,['fault'],['fault']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello @guitargeek @cburgard !. My student @mathyuu is trying to use the JSON functionality for some combination workflow, and at first we are making sure we can ""round-trip"" existing workspaces. There are problems importing JSON files that were produced by the export functionality. More specifically, when importing ""generic functions"", aka RooFormulas, the parser used to get the names of the dependent variables is extremely brittle and cannot handle numbers in scientific notation in all cases... and to be honest, reading the code, what surprises me is that it can at all work in some cases. Can't you rely on the built-in parsers for `RooFormula` instead, for instance ?. The issue is in `extractArguments` function. BTW, if you fix the bug, can you take the opportunity to change the output from `vector<string>` to `set<string>` ? There are warnings printed down the line with a difference between what the function ""claims to use"" and what it ""is in use"", that all come from variables that appear several times in the formula. See below for reproducer. ### Reproducer. Here is a copy of the function:. ``` C++; #include <vector>; #include <algorithm>; #include <string>; #include <iostream>; #include <cctype>. std::vector<std::string> extractArguments(std::string expr); {; // Get rid of whitespaces; expr.erase(std::remove_if(expr.begin(), expr.end(), [](unsigned char c) { return std::isspace(c); }), expr.end());. std::vector<std::string> arguments;; size_t startidx = expr.size();; for (size_t i = 0; i < expr.size(); ++i) {; if (startidx >= expr.size()) {; if (isalpha(expr[i])) {; startidx = i;; }; } else {; if (!isdigit(expr[i]) && !isalpha(expr[i]) && expr[i] != '_') {; if (expr[i] == '(') {; startidx = expr.size();; continue;; }; std::string arg(expr.substr(startidx, i - startidx));; startidx = expr.size();; arguments.push_back(arg);; }; }; }; if (startidx < expr.size()) {; arguments.push_back(expr.su",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14637:941,down,down,941,https://root.cern,https://github.com/root-project/root/issues/14637,1,['down'],['down']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello, . I am creating this issue because there is a bug when setting an entry list that has already been used to a `TTree`.; The entry number returned by `tree->GetEntryNumber(index)` are messed up until that function is called 2 times in a row for the same index. You can find a standalone simple reproducer of the bug below. . In that code by setting `numTest` to `0`, `1` or `2` you will obtain the different print below. ; With that example by calling `tree->GetEntryNumber(index)` it should return the value `index` ; e.g. `tree->GetEntryNumber(2)` should return `2`. However until the `GetEntryNumber()` function has not been called 2 times for the same index then the returned entry number is NOT the expected one. . Here it is simple to solve the issue i.e. not call `entryList->GetEntry(15);` before setting the entry list to the tree ; but I find this behaviour really error prone as one would need to be sure the entry list has never been used basically. . On the other hand using the copy constructor allows not having this issue because I think the `fLastIndexQueried` is reset to `-1` ; ```; tree->SetEntryList( new TEntryList(*entryList) );; ``` . Tagging @pcanal and @Axel-Naumann . For `numTest=0`; ```; tree->GetEntryNumber(0)=16; tree->GetEntryNumber(0)=0; tree->GetEntryNumber(0)=0; tree->GetEntryNumber(0)=0; ```; For `numTest=1`; ```; tree->GetEntryNumber(0)=16; tree->GetEntryNumber(1)=17; tree->GetEntryNumber(1)=1; tree->GetEntryNumber(1)=1; ```; For `numTest=2`; ```; tree->GetEntryNumber(0)=16; tree->GetEntryNumber(1)=17; tree->GetEntryNumber(2)=18; tree->GetEntryNumber(2)=2; tree->GetEntryNumber(2)=2; ```. ### Reproducer. ```C++; #include ""TFile.h""; #include ""TTree.h""; #include ""TError.h""; #include ""TEntryList.h"". #include<string>; #include<vector>; #include<iostream>. // function defined after main ; void createTree(const std::string &outputFile);. int main(){; ; // number of the test ; /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13338:955,error,error,955,https://root.cern,https://github.com/root-project/root/issues/13338,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. I am facing an issue that I cannot fix. ; Can you advice ? Is there a way to make DataFrame it more verbose maybe ?; ```; Install the project...; -- Install configuration: ""Debug""; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:312:4: error: static_assert failed due to requirement 'std::is_convertible<void, bool>::value' ""filter expression returns a type that is not convertible to bool""; static_assert(std::is_convertible<FilterRet_t, bool>::value,; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:450:4: note: in instantiation of function template specialization 'ROOT::Internal::RDF::CheckFilter<void ()>' requested here; CheckFilter(f);; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; In module 'ROOTDataFrame':; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:112:14: error: cannot initialize return object of type 'bool' with an rvalue of type 'void'; return fFilter(fValues[slot][S]->template Get<ColTypes>(entry)...);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:99:27: note: in instantiation of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656:376,error,error,376,https://root.cern,https://github.com/root-project/root/issues/13656,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hello,. It looks like #13081 is closed, but the problem is still there. I compiled root from today's head of the master branch, c15efc8fb313595a018245f112adf3f30c014776. The only difference from my earlier report is that one needs to use the --web=off switch to the command line to make the image appear in the GL viewer window (where the box clip is available) instead of a browser window (which does not even have the box clip). Once the ""edit in viewer"" option is checked, the clip box can be moved with the mouse, but still only along one axis, not along the other two. This issue may be specific to the newest version of Alma Linux. Andrei. ### Reproducer. To reproduce: run. $ root --web=off $ROOTSYS/tutorials/geom/building.C. - in the GL window, click on the ""Clipping"" tab; - click ""Box""; - check ""Edit in Viewer""; - rotate to make the three clip box axes visible; - try to move the clip box along the axes. It moves along one axis, but not along the other two. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 08 2023, 14:22:00 |; | From heads/master@v6-29-01-2303-gc15efc8fb3 |; | With c++ (GCC) 11.3.1 20221121 (Red Hat 11.3.1-4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; ### Installation method. build from source. ### Operating system. AlmaLinux 9.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13418:426,avail,available,426,https://root.cern,https://github.com/root-project/root/issues/13418,1,['avail'],['available']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi ROOT team,. We ran into some trouble last night with the ROOT ""HEAD"" builds that have CUDA enabled in our LCG nightlies. The builds failed on these platforms: x86_64-centos7-gcc11-opt, x86_64-centos8-gcc11-opt, and el9-gcc11-opt. These are the ones we use for this configuration. @bellenot: asked me to let you know, so here's the ticket. Here's the error message we got:. ```; Error: Module 'RooFitCuda.pcm' failed to load.; ```; and this:; ```; make[5]: *** [roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/build.make:519: roofit/roofitcore/G__RooFitCore.cxx] Error 1; make[5]: Target 'roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/depend' not remade because of errors.; make[4]: *** [CMakeFiles/Makefile2:44521: roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/all] Error 2; ```. you can find the full build logs here:. http://cdash.cern.ch/upload/d526fd513d6f4007d95aa0eeb56dfc0627929bf1/ROOT-HEAD-build.log. Thanks for looking into this, and let me know if you need anything else!. Cheers,; Dmitri. ### Reproducer. No reproducer. ### ROOT version. HEAD. ### Installation method. build from sources. ### Operating system. Linux, centos7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13415:428,error,error,428,https://root.cern,https://github.com/root-project/root/issues/13415,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi root team,. We are the ATLAS VHbbcc analysis team and we are testing with the new root preview version v6.32-rc1 since it has the bug fix related to the issue: https://root-forum.cern.ch/t/cling-jit-session-error-cannot-allocate-memory/56744. However we met some different behavior in this version compared to the previous 6.32/02 that we use. . 1) The pyROOT, we got a different type when access the RooCategory allowedState name. In the new version, it returns `cppyy.gbl.std.string` object, previously it is a python `str` object. May I ask it is designed or a bug? ; 2) We found this because it crushes when we tried to pass it to `re.findall()` function. But according to the cppyy document, the cppyy should convert `cppyy.gbl.std.string` to `str` automatically when the `str` is needed. So what is the reason for not being converted automatically?; 3) We also found that it takes much longer time to run the fit using the new root version, in our case, a 1-hour fit now takes 3-hours to finish. Is there any hint what may be the cause?. Thanks a lot for your time. Yuhao. ### Reproducer. ```; import ROOT. g = ROOT.TFile.Open(""/afs/cern.ch/work/y/yuhao/public/test.root""); ws=g.combined; simpdf=ws.pdf(""simPdf""); channelCat = simpdf.indexCat(); print(type(channelCat.begin().first)); ```. ### ROOT version. 6.32-rc1. ### Installation method. build from source. ### Operating system. Linux el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15479:285,error,error-cannot-allocate-memory,285,https://root.cern,https://github.com/root-project/root/issues/15479,1,['error'],['error-cannot-allocate-memory']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I found that putting a RooBinSamplingPdf that wraps an extended pdf inside a RooAddPdf (that is in 'no-coefficient' mode, so that it is also extended), you cannot construct the NLL for this. The reason I think is that the RooBinSamplingPdf class does not forward the createExpectedEventsFunc call to the underlying pdf. Will submit a fix in just a moment. ### Reproducer. Here's a minimal reproducer:; ```; RooWorkspace w;; w.factory(""RooAddPdf::apdf(RooBinSamplingPdf::p(x,RooExtendPdf::epdf(EXPR::pdf('x',x[0,10]),e[100])))"");; RooDataSet d(""data"",""data"",*w.var(""x""));; w.pdf(""apdf"")->createNLL(d);; ```; Produces:; ```; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(apdf) fixing normalization set for coefficient determination to observables in data; [#0] ERROR:InputArguments -- The pdf ""p"" of type RooBinSamplingPdf did not overload RooAbsPdf::createExpectedEventsFunc()!. *** Break *** segmentation violation; ```. ### ROOT version. 6.34. ### Installation method. source. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16796:935,ERROR,ERROR,935,https://root.cern,https://github.com/root-project/root/issues/16796,1,['ERROR'],['ERROR']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I have a class with some overloaded methods that are designed to throw exceptions if the user messes up. In non-overloaded methods this exception is passed back to the user, exactly as expected. But when the method is overloaded, cppyy seems to assume that the failure was a TypeError issue rather than returning the underlying exception. Below is a reproducer. ### Reproducer. ```; import ROOT. ROOT.gInterpreter.ProcessLine(""""""; class MyClass {; public:; class MyObj {; public:; MyObj(const char*) { }; };; void MyMethod(const MyObj& x = """") {; throw std::runtime_error(""My exception"");; }; void MyMethod(const MyObj& x, bool another) {; throw std::runtime_error(""My second exception"");; }. };; """"""); MyClass().MyMethod(""hi""); ```; Produces:. ```; TypeError: none of the 2 overloaded methods succeeded. Full details:; void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>; TypeError: takes at least 2 arguments (1 given); void MyClass::MyMethod(const MyClass::MyObj& x = """") =>; TypeError: could not convert argument 1; ```; The issue is the second exception, since there isn't a conversion error here. Pyroot should report the exception (runtime_error(""My Exception"")) here instead. ### ROOT version. 6.32. ### Installation method. source. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16405:336,failure,failure,336,https://root.cern,https://github.com/root-project/root/issues/16405,2,"['error', 'failure']","['error', 'failure']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I have a compilation error in the case with an existing version of the nlohmann library; ```; /home/runner/install/include/nlohmann/json.hpp:3435:8: error: redefinition of default argument for ‘class T’; 3435 | struct adl_serializer;; | ^~~~~~~~~~~~~~; In file included from /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/sources/ROOT/graf3d/eve7/inc/ROOT/REveShape.hxx:15,; from /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/sources/ROOT/graf3d/eve7/inc/ROOT/REveBox.hxx:15,; from /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/sources/ROOT/graf3d/eve7/src/REveBox.cxx:12:; /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/sources/ROOT/graf3d/eve7/inc/ROOT/REveElement.hxx:39:10: note: original definition appeared here; 39 | template<typename T = void, typename SFINAE = void>; | ^~~~~~~~; In file included from /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/sources/ROOT/graf3d/eve7/src/REveBox.cxx:18:; /home/runner/install/include/nlohmann/json.hpp:3448:7: error: redefinition of default argument for ‘template<class U, class V, class ... Args> class ObjectType’; 3448 | class basic_json;; ```. I believe this is cause by the fact that the installed version is v3.10.4 (which doesn't have `json_fwd.h`). Relevant bits of code:; - CMake code [checks for version](https://github.com/root-project/root/blob/f98afaed8286ae156d364bedd36c440bc22c0875/cmake/modules/SearchInstalledSoftware.cmake#L87); - CMake [defaults to ""build-in"" OFF](https://github.com/root-project/root/blob/f98afaed8286ae156d364bedd36c440bc22c0875/cmake/modules/RootBuildOptions.cmake#L100); - `REveElement.hxx` contains a work-around if `json_fwd.h` is not found, i.e. it [defines its own](https://github.com/root-project/root/blob/25e81912b499df1703bc6bed47623cfbbce036f7/graf3d/eve7/inc/ROOT/REveElement.hxx#L25-L37). I believe the latter is causing the problem: somehow the existing (old) `json.h` has been",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14634:96,error,error,96,https://root.cern,https://github.com/root-project/root/issues/14634,2,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I see (for example in https://github.com/root-project/root/pull/16664/checks?check_run_id=31435842971): failures like:. ```; /github/home/ROOT-CI/src/tutorials/tmva/TMVA_SOFIE_GNN_Application.C:10:10: fatal error: 'encoder.hxx' file not found; #include ""encoder.hxx""; ^~~~~~~~~~~~~; ```; or ; ```; Traceback (most recent call last):; File ""/home/pcanal/root_working/code/quick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 226, in <module>; gnn = SofieGNN(); File ""/home/pcanal/root_working/code/quick-devel/tutorials/tmva/TMVA_SOFIE_GNN.py"", line 150, in __init__; self.encoder_session = ROOT.TMVA_SOFIE_encoder.Session(); TypeError: none of the 4 overloaded methods succeeded. Full details:; Session::Session(TMVA_SOFIE_encoder::Session&&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session(const TMVA_SOFIE_encoder::Session&) =>; TypeError: takes at least 1 arguments (0 given); Session::Session() =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; void __cppyy_internal::init_TMVA_SOFIE_encoder__Session(TMVA_SOFIE_encoder::Session*& self, const TMVA_SOFIE_encoder::Edge_Update::Session& edge_update = TMVA_SOFIE_encoder::Edge; _Update::Session{}, const vector<float>& fEdgeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Node_Update::Session& node_update = TMVA_SOFIE_encoder::Node_Update::Session{}, co; nst vector<float>& fNodeInputs = vector<float>{}, const TMVA_SOFIE_encoder::Global_Update::Session& global_update = TMVA_SOFIE_encoder::Global_Update::Session{}) =>; runtime_error: TMVA-SOFIE failed to read the correct tensor name; expected name is tensor_EncodeProcessDecodeMLPGraphIndependentgraph_independentedge_modelmlplinear_3w0 , read ; 0.00669210032; ```. I also see from grepping:. ```; ./src/./tutorials/tmva/TMVA_SOFIE_GNN_Application.C",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16680:179,failure,failures,179,https://root.cern,https://github.com/root-project/root/issues/16680,2,"['error', 'failure']","['error', 'failures']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. I've been using RooFit for my binned chi2 fits (with chi2FitTo). I use the `lb-conda` LHCb wrapper for python. Lately it seems that the `lb-conda` has updated and with the new version, my fits stopped working.; The old version of ROOT I was using is 6.28/04 (python 3.11.4), and the new one is 6.30/04 (python 3.11.8). The new version finds a different minimum, returns status `MINIMIZE=-1 HESSE=302` and zero errors. The old version returns `MINIMIZE=1 HESSE=1 ` and meaningful errors.; I set ROOT.RooFit.Minimizer(""Minuit2"",""migrad"") option for both. I didn't manage to reproduce the error in other conditions, so I packed my workspace in a reproducible example, found in my public lxplus area (`/afs/cern.ch/work/v/vyeroshe/public/test.root`). ### Reproducer. ```; import ROOT as r. file = r.TFile(""/afs/cern.ch/work/v/vyeroshe/public/test.root""); workspace = file.Get(""w_test""). hist = workspace.data(""jpsi_ppbar_mass""); pdf = workspace.pdf(""model_Low""). result = pdf.chi2FitTo(hist, r.RooFit.Save(),r.RooFit.Minimizer(""Minuit2"",""migrad"")); result.Print(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Feb 06 2024, 23:27:10 |; | From heads/master@tags/v6-30-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. lb-conda. ### Operating system. CentOS Linux 7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15196:485,error,errors,485,https://root.cern,https://github.com/root-project/root/issues/15196,3,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If RDF is created from the TTree which has a branch that has a non standard name, such as a dot at the end, the errors appear while trying to use this branch to define a new column. ### Reproducer. ```python; import ROOT. def write():; with ROOT.TFile.Open(""reproducer.root"", ""recreate"") as f:; tree = ROOT.TTree(""reproducer"", ""reproducer""); obj = ROOT.TObject(); tree.Branch(""s."", obj); tree.Fill(); tree.Write(). def read():; df = ROOT.ROOT.RDataFrame(""reproducer"", ""reproducer.root""); df = df.Alias(""nots"", ""s.""); #df = df.Define(""uniqid"", ""s.fUniqueId"") # does not work: error: use of undeclared identifier 's' auto func0(){return s.fUniqueId; #df = df.Define(""uniqid"", ""nots.fUniqueId"") # does not work either, as Alias is resolved back to `s..fUniqueId`: error: use of undeclared identifier 's' auto func0(TObject& var0){return s..fUniqueId; ```. ### ROOT version. all. ### Installation method. source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14404:187,error,errors,187,https://root.cern,https://github.com/root-project/root/issues/14404,3,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```; Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection.; Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; terminate called after throwing an instance of 'std::runtime_error'; what(): An error was encountered while processing the data. TTreeReader status code is: 6; ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>; #include <array>. const static auto filename{""file.root""};; const static auto treename{""tree""};; const static auto branchname{""array""};. void write_ttree(); {; TFile f{filename, ""recreate""};; TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);; t.Fill();; f.WriteObject(&t, treename);; }. void read_rdf(); {; ROOT::RDataFrame df{treename, filename};; df.Describe().Print();; df.Display<std::array<int, 6>>({branchname})->Print();; }. int main(); {; write_ttree();; read_rdf();; }; ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error; ```; Dataframe from TChain tree in file file.root. Property Value; -------- -----; Columns in total 1; Columns from defines 0; Event loops run 0; Processing slots 1. Column Type Origin; ------ ---- ------; array ROOT::VecOps::RVec<Int_t> Dataset; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16160:252,Error,Error,252,https://root.cern,https://github.com/root-project/root/issues/16160,3,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If the build directory is named (for example): `master.c++20` we get (zillions of times the lines):; ```; CMake Error at cmake/modules/RootMacros.cmake:336 (list):; list sub-command FILTER, mode REGEX failed to compile regex; ""^/Users/pcanal/root_working/builds/master.c++20/ginclude"".; Call Stack (most recent call first):; cmake/modules/RootMacros.cmake:1361 (ROOT_GENERATE_DICTIONARY); core/clingutils/CMakeLists.txt:69 (ROOT_STANDARD_LIBRARY_PACKAGE). ```. We should either fix this or make the error messages clearer (i.e detect the case early and fail clearly)>. ### Reproducer. Use a wild card (eg `+`) in the build directory name. ### ROOT version. master. ### Installation method. source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13731:187,Error,Error,187,https://root.cern,https://github.com/root-project/root/issues/13731,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the GPU-PR #16580, @dpiparo suggested to disable a few components to speed up the non-GPU-related parts. After disabling the webgui, the following test started to hang and time out:; ```; TEST FAILURES:; 1521:roottest-python-JupyROOT-Cpp_IMT_Canvas_notebook; ```. ### Reproducer. This is the full config:; ```; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -DCMAKE_BUILD_TYPE=RelWithDebInfo ""-DCMAKE_BUILD_TYPE=RelWithDebInfo"" ""-Dalien=off"" ""-Dall=off"" ""-Darrow=off"" ""-Dasan=off"" ""-Dasimage=on"" ""-Dasserts=off"" ""-Dbuiltin_cfitsio=off"" ""-Dbuiltin_clang=on"" ""-Dbuiltin_cling=on"" ""-Dbuiltin_cppzmq=on"" ""-Dbuiltin_davix=off"" ""-Dbuiltin_fftw3=off"" ""-Dbuiltin_freetype=off"" ""-Dbuiltin_ftgl=off"" ""-Dbuiltin_gl2ps=off"" ""-Dbuiltin_glew=off"" ""-Dbuiltin_gsl=off"" ""-Dbuiltin_llvm=on"" ""-Dbuiltin_lz4=off"" ""-Dbuiltin_lzma=off"" ""-Dbuiltin_nlohmannjson=off"" ""-Dbuiltin_openssl=off"" ""-Dbuiltin_openui5=on"" ""-Dbuiltin_pcre=off"" ""-Dbuiltin_tbb=off"" ""-Dbuiltin_unuran=on"" ""-Dbuiltin_vc=off"" ""-Dbuiltin_vdt=off"" ""-Dbuiltin_veccore=off"" ""-Dbuiltin_xrootd=off"" ""-Dbuiltin_xxhash=off"" ""-Dbuiltin_zeromq=on"" ""-Dbuiltin_zlib=off"" ""-Dbuiltin_zstd=off"" ""-Dccache=on"" ""-Dcefweb=off"" ""-Dclad=on"" ""-Dclingtest=off"" ""-Dcocoa=off"" ""-Dcoverage=off"" ""-Dcuda=on"" ""-Dcudnn=off"" ""-Dcxxmodules=off"" ""-Ddaos=off"" ""-Ddataframe=on"" ""-Ddavix=on"" ""-Ddcache=off"" ""-Ddev=off"" ""-Ddistcc=off"" ""-Dfail-on-missing=on"" ""-Dfcgi=off"" ""-Dfftw3=on"" ""-Dfitsio=on"" ""-Dfortran=off"" ""-Dgdml=off"" ""-Dgminimal=off"" ""-Dgnuinstall=off"" ""-Dgsl_shared=off"" ""-Dgviz=off"" ""-Dhttp=on"" ""-Dimt=on"" ""-Djemalloc=off"" ""-Dlibcxx=off"" ""-Dmacos_native=off"" ""-Dmathmore=on"" ""-Dmemory_termination=off"" ""-Dminimal=off"" ""-Dmpi=off"" ""-Dmysql=off"" ""-Dodbc=off"" ""-Dopengl=on"" ""-Dpgsql=on"" ""-Dpyroot=on"" ""-Dpythia8=off"" ""-Dqt5web=off"" ""-Dqt6web=off"" ""-Dr=off"" ""-Droofit=on"" ""-Droofit_multiprocess=on"" ""-Droot7=on"" ""-Drootbench=off"" ""-Droottest=on"" ""-Droottest_force_checkout=off"" ""-Drp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16689:271,FAILURE,FAILURES,271,https://root.cern,https://github.com/root-project/root/issues/16689,1,['FAILURE'],['FAILURES']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the [source file](https://root.cern/doc/v628/DataLoader_8cxx_source.html) line#73 line#74; ```; TMVA::gConfig()::GetIONames().fWeightFileDirPrefix = ""/tmp"";; TMVA::gConfig()::GetIONames().fWeightFileDir = ""myTrainigResults"";; ```; should be; ```; TMVA::gConfig().GetIONames().fWeightFileDirPrefix = ""/tmp"";; TMVA::gConfig().GetIONames().fWeightFileDir = ""myTrainigResults"";; ```; If someone copy it directly, it will return an error. ### Reproducer. no need. ### ROOT version. v6.28. ### Installation method. non. ### Operating system. non. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13177:505,error,error,505,https://root.cern,https://github.com/root-project/root/issues/13177,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Inherit whatever ROOT parent class in a python class generates error ; on the TObject::DoError method. ; Python raises an error on `TypeError`. Which is categorical wrong, it should be `NotImplemented`. At the root-forum it is being suggested that `RDataFrame` is not a class to be inherited in PyRoot;; due to ""composition over inheritance"" idiom and warnings on bad data type manipulation internally; leading to wrong numerical results. ; Is this going to be for all ROOT classes? No ROOT class should be inherited in a Python class from now on ?. It only affects the last release 6.32.04 and 6.32.06; Release 6.30.02 works fine.; ; Similar issues:; https://github.com/root-project/root/issues/12391; https://root-forum.cern.ch/t/rdataframe-has-no-virtual-destructor/53605; https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198/14; . ### Reproducer. ```python; from ROOT import TObject. class C(TObject):; def __init__(self):; super().__init__() # Initialize the base class. def some_method(self):; print(""This is a method in class C.""); ```. ```; In [1]: from ROOT import TObject; ...: ; ...: class C(TObject):; ...: def __init__(self):; ...: super().__init__() # Call the constructor of TObject; ...: ; Installed ROOT event loop hook.; input_line_35:10:62: error: unknown type name '__va_list_tag'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:79: error: expected ')'; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:10:15: note: to match this '('; void DoError(int arg0, const char* arg1, const char* arg2, __va_list_tag[1] arg3) const {; ^; input_line_35:11:47: error: use of undeclared identifier 'arg3'; return TObject::DoError(arg0, arg1, arg2, arg3);; ^; -----------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16520:138,error,error,138,https://root.cern,https://github.com/root-project/root/issues/16520,2,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. It appears that some member function ambiguities prevent pyROOT from calling the proper function. This has been encountered specifically with TProfile2D with the Fill method (see reproducer below). ; The equivalent code runs fine in C++. ### Reproducer. import ROOT; h = ROOT.TProfile2D(""h"",""h"",1,0,1,1,0,1); h.Fill(""a"",""b"",1,1). Produces this error:. ```; input_line_40:8:47: error: call to member function 'Fill' is ambiguous; new (ret) (int) (((TProfile2D*)obj)->Fill(*(const char**)args[0], *(const char**)args[1],; ```. ### ROOT version. master, 6.32. ### Installation method. pre-built. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15688:419,error,error,419,https://root.cern,https://github.com/root-project/root/issues/15688,2,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moved from JIRA: [ROOT-10269](https://its.cern.ch/jira/browse/ROOT-10269). First reported on the forum [here](https://root-forum.cern.ch/t/empty-stack-error-during-rdataframe-snapshot/35620). The issue has been mitigated in master and 6.18/02 by disabling parallel TTree::Fill (and therefore the primary cause of nested parallelism during an RDF event loop).; This does not protect from users spawning their own TBB tasks within an RDF event loop. The proper fix is to fully support nested parallelism in RDF, which requires more work. The goal is simply to make nested parallelism in RDF safe. This is a matter of correctness, even though typically users do not spawn TBB tasks from within the RDF event loop. ### Reproducer. Reproducer without jitting, input files are [here](https://cernbox.cern.ch/index.php/s/1pGFlHFDwp8Mcqf):. ```; #include <ROOT/RDataFrame.hxx>; #include <TROOT.h>; #include <vector>; #include <string>. int main(); {; ROOT::EnableImplicitMT();; ; for (UInt_t i = 0 ; i < 100; i++){; 	std::vector<std::string> input_files;; 	input_files.emplace_back(""test1.root"");; 	input_files.emplace_back(""test2.root"");	; std::vector<std::string> columnList = {""mcChannelNumber"", ""DeltaPhiJJ"", ""DeltaPhiMetJJ"", ""DeltaPhiMetJJ_corr"", ""DeltaPhiMin3"", ""DeltaRJJ"", ""DeltaRJJ_corr"", ""DeltaR_ratio"", ""EleWeight"", ""EleWeightTrig_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_OR_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0"", ""Electron_charge"", ""Electron_eta"", ""Electron_m"", ""Electron_passOR"", ""Electron_phi"", ""Electron_pt"", ""Electron_signal"", ""FatJet_eta"", ""FatJet_m"", ""FatJet_n_matchedasstrkjets"", ""FatJet_phi"", ""FatJet_pt"", ""ForwardJet_eta"", ""ForwardJet_m"", ""ForwardJet_phi"", ""ForwardJet_pt"", ""GenWeight"", ""GenWeightMCSampleMerging"", ""HtRatioMerged"", ""HtRatioResolved"", ""IsMETTrigPassed"", ""IsSingleElecTrigMatched"", ""IsSingleElecTrigPassed"", ""IsSingleMuonTrigMatched"", ""IsSingleMuonTrigPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15079:226,error,error-during-rdataframe-snapshot,226,https://root.cern,https://github.com/root-project/root/issues/15079,1,['error'],['error-during-rdataframe-snapshot']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724); Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs.; I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15076:504,alive,alive,504,https://root.cern,https://github.com/root-project/root/issues/15076,1,['alive'],['alive']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. My Windows 11 program compiles and runs when the '#include ""TMVA/Factory.h""' statement precedes the '#include ""TODBCResult.h""' statement, and fails to compile as below when the order is reversed:. 1>------ Build started: Project: RootGrapher, Configuration: Debug x64 ------; 1>RootGrapher.cpp; 1>E:\dev\root_build\include\TArrayL64.h(45,61): warning C4244: 'return': conversion from 'Long64_t' to 'Double_t', possible loss of data; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): warning C4003: not enough arguments for function-like macro invocation 'max'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2589: '(': illegal token on right side of '::'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,44): error C2062: type 'unknown-type' unexpected; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,42): error C2789: 'TVirtualTreePlayer::kMaxEntries': an object of const-qualified type must be initialized; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TVirtualTreePlayer.h(45,30):; 1> see declaration of 'TVirtualTreePlayer::kMaxEntries'; 1>E:\dev\root_build\include\TVirtualTreePlayer.h(45,75): error C2059: syntax error: ')'; 1>(compiling source file 'RootGrapher.cpp'); 1>E:\dev\root_build\include\TTree.h(229,64): error C2131: expression did not evaluate to a constant; 1>(compiling source file 'RootGrapher.cpp'); 1> E:\dev\root_build\include\TTree.h(229,64):; 1> failure was caused by a read of an uninitialized symbol; 1> E:\dev\root_build\include\TTree.h(229,64):; 1> see usage of 'kMaxEntries'. ### Reproducer. put this in a cpp file and compile it to see the error:. #include <iostream>; #include <gsl\gsl>; #include ""TF1.h""; #include ""TH1F.h""; #include ""TApplication.h""; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16638:790,error,error,790,https://root.cern,https://github.com/root-project/root/issues/16638,2,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Parameter nentries of TTreePlayer::Scan works bad if number is small. Found thanks to @vepadulano. ### Reproducer. Reproducer ROOT test file here: https://its.cern.ch/jira/browse/ROOT-8256; Script below. ```; root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",3);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; ***********************************. root -l -b -q -e 'TChain c(""Nominal/llllTree""); c.Add(""my.output.root""); c.Scan(""llll_type"","""","""",4);'; Warning in <TClass::Init>: no dictionary for class TChannelInfo is available; ***********************************; * Row * Instance * llll_type *; ***********************************; * 0 * 0 * *; * 1 * 0 * *; * 2 * 0 * *; * 3 * 0 * 1111 *; * 3 * 1 * 1111 *; * 3 * 2 * 1111 *; * 3 * 3 * 1111 *; * 3 * 4 * 1111 *; * 3 * 5 * 1111 *; * 3 * 6 * 1111 *; * 3 * 7 * 1111 *; * 3 * 8 * 1111 *; * 3 * 9 * 1111 *; * 3 * 10 * 1111 *; * 3 * 11 * 1111 *; * 3 * 12 * 1111 *; * 3 * 13 * 1111 *; * 3 * 14 * 1111 *; * 3 * 15 * 1111 *; * 3 * 16 * 1111 *; * 3 * 17 * 1111 *; * 3 * 18 * 1111 *; * 3 * 19 * 1111 *; * 3 * 20 * 1111 *; * 3 * 21 * 1111 *; Type <CR> to continue or q to quit ==> q; ***********************************; ```. ### ROOT version. ```; ROOT v6.30/04; Built for linuxx8664gcc on Jan 31 2024, 10:01:37; From heads/master@tags/v6-30-04; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04 MATE desktop. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15210:455,avail,available,455,https://root.cern,https://github.com/root-project/root/issues/15210,2,['avail'],['available']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. RBDT was never testing proper handling of xgboost models, either in writing them to ROOT format or in their usage afterwards. The functionality was never actually tested since the `xgboost` package was not installed on the CI nodes and the only available test was silently not running if the package was not found https://github.com/root-project/root/blob/05203aeefeaaeaa8efe1ca162fa6477d2b638c8a/tmva/tmva/test/CMakeLists.txt#L34-L41. The test had to be disabled right after the package was installed on some nodes and it immediately triggered failures as documented in this PR https://github.com/root-project/root/pull/15183. Since today, all platforms are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15197:320,avail,available,320,https://root.cern,https://github.com/root-project/root/issues/15197,3,"['FAILURE', 'avail', 'failure']","['FAILURES', 'available', 'failures']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Since recently we have been seeing that on ROOT master a simple workspace with a single `RooStats::HistFactory::FlexibleInterpVar` component fails already just on evaluation, whereas it works in ROOT 6.28.04. The workspace is attached, and the code to reproduce the error included in the reproducer. ### Reproducer. 1. *unzip workspace*; 2. `root -l failWS_release.root`; 3. `fail->Print()`; 4. See: ""message : function value is NAN"". Please find here the workspace:; [failWS_release.zip](https://github.com/root-project/root/files/12750467/failWS_release.zip). ### ROOT version. Current ROOT master gives the error. ROOT 6.28.04 does not. ### Installation method. build from source. ### Operating system. Linux centos7. ### Additional context. The PR that introduced the problem:; https://github.com/root-project/root/pull/13067",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13749:341,error,error,341,https://root.cern,https://github.com/root-project/root/issues/13749,2,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Something goes wrong in the code generation for a lot of tests, this case is roottest-root-meta-evolution-data1-build; for some reason the first entry from the list of available elf objects ([vdso]) makes it to the generated command line (and because it is not a path, I imagine, something get's thrown off). Where is that generated? A quick search left me with nothing... I suspect this is a reason for a lot of trouble here. ```; 1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")...; 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping; 1874: sh: Syntax error: Unterminated quoted string; 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13080:243,avail,available,243,https://root.cern,https://github.com/root-project/root/issues/13080,1,['avail'],['available']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Sometimes it happens (it is supported by http) that headers (like `Location`) can be with lower case `location`. https://github.com/root-project/root/blob/e49a596254bab8610f5480aefe6d26c83c937c0b/net/net/src/TWebFile.cxx#L939. I think one needs to add to all `res.BeginsWith(""<header name>"")` eg. from `res.BeginsWith(""Location:"")` to `res.BeginsWith(""Location:"", TString::ECaseCompare::kIgnoreCase)` and it should be fine. ```; ⬢[mvala@toolbox [fc39] ~]$ curl -i https://eos.science.upjs.sk/eos/ndmspc/scratch/hsimple.root; HTTP/1.1 307 TEMPORARY_REDIRECT; server: XrootD/5.6.4; content-length: 0; date: Thu, 25 Jan 2024 08:01:05 GMT; etag: ""12348030976:09c4618b""; location: https://eos.science.upjs.sk:9025/eos/ndmspc/scratch.....; ....; ```. ### Reproducer. ```; $ root https://eos.science.upjs.sk/eos/ndmspc/scratch/hsimple.root; root [0] ; Attaching file https://eos.science.upjs.sk/eos/ndmspc/scratch/hsimple.root as _file0...; Error in <TWebFile::GetFromWeb10>: error - redirect without location from host eos.science.upjs.sk; (TFile *) nullptr; ```. ### ROOT version. 6.30/02. ### Installation method. dnf. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14429:1009,Error,Error,1009,https://root.cern,https://github.com/root-project/root/issues/14429,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Strange issue with Cling and TTree:Scan(), please see table in Reproducer. ### Reproducer. file `scan.C`; ```C++; #include ""TTree.h""; #include ""TRandom.h"". TTree *t = nullptr;. void scan() {; const Int_t kMax = 10;; Int_t n;; Float_t a[kMax];. t = new TTree(""t"", ""tree""); // in memory; t->Branch(""n"", &n, ""n/I"");; t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {; n = gRandom->Rndm()*(kMax-1);; for (Int_t j = 0; j < n; j++); a[j] = gRandom->Gaus(0, 1);; t->Fill();; }; // t->Scan(""a[0]"");; }; ```. <table>. <tr>; <td> Fedora 40, root master (2024-10-22)</td> <td> lxplus.cern.ch (RHEL 9.4), root v6.32.06 </td>; </tr>. <tr>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * 1.255e-41 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] t->Draw(""a[0]""); root [3] // draws correct all 5 values; ```. </td>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************; (long long) 5; root [2]. ```. </td>; </tr>. <tr>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************. *** Break *** segmentation violation; ```. </td>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; *************",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16730:888,ERROR,ERROR,888,https://root.cern,https://github.com/root-project/root/issues/16730,2,['ERROR'],['ERROR']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. TGSpeedo no longer works on 6.30.02, it's missing the image speedo.gif. ### Reproducer. ```; root -l; root [0] new TGSpeedo; Error in <TGSpeedo::TGSpeedo::Build>: speedo.gif not found; (TGSpeedo *) 0x556984fae6a0; ```. ### ROOT version. ```; ROOT v6.30/02; Built for linuxx8664gcc on Nov 27 2023, 19:50:38; From tags/v6-30-02@; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Binary release. ### Operating system. Ubuntu 22.04. ### Additional context. https://sft.its.cern.ch/jira/browse/ROOT-8552; https://forum.gsi.de/index.php?t=tree&th=3483&mid=13297&rid=0&rev=&reveal=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14247:200,Error,Error,200,https://root.cern,https://github.com/root-project/root/issues/14247,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The TMVA rreader is not multithread safe. I created a message on the root forum here: https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. In the end I think it boils down to moving the lock [here](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RReader.hxx#L245) a few lines up, before setting the variables. As a workaround we put a lock before the compute call and that solves the problem. ### Reproducer. see https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662. ### ROOT version. 6.30 (but still in master). ### Installation method. pre build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16600:259,down,down,259,https://root.cern,https://github.com/root-project/root/issues/16600,1,['down'],['down']
Availability,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The `rootcling` help states:; ```; USAGE: rootcling [options] <output dictionary file> <list of dictionary header files> <LinkDef file>; ```; where as the code actually implements:; ```; USAGE: rootcling [options] <output dictionary file> <list of dictionary header files> <LinkDef file | selection xml file>; ```. It has been decided not to port to `genreflex` all the options needed to properly create `module` based dictionary. As a result `genreflex` is essentially deprecated. We should note in the `genreflex` documentation and help that this is the case and that the transition is straightforward. There is code that will show the `rootcling` options corresponding to a set of `genreflex` options. However this information is only available by passing the option `--debug something` to `genreflex`. We should make this information available on its own via new option. ### Reproducer. `rootcling --help` and `genreflex --help`. ### ROOT version. any	. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13481:813,avail,available,813,https://root.cern,https://github.com/root-project/root/issues/13481,2,['avail'],['available']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The build of ROOT 6.32.00 on ix86 crashes with a segmentation fault during the generation of the tutorials/hsimple.root file:. ```; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0xf7f03589 in __kernel_vsyscall (); #1 0xf76ada87 in wait4 () from /lib/libc.so.6; #2 0xf76adc06 in waitpid () from /lib/libc.so.6; #3 0xf76061d8 in do_system () from /lib/libc.so.6; #4 0xf7d17a81 in TUnixSystem::Exec (this=0x57816fd0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #6 0xf7d12654 in TUnixSystem::DispatchSignals (this=0x57816fd0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3662; #7 0xf7d126d8 in SigHandler (sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:410; #8 0xf7d02a21 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61; #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071; #12 0xf7c419b2 in TArrayI::Streamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/cont/src/TArrayI.cxx:157; #13 0xf7d7f75c in ROOT::streamer_TArrayI (buf=..., obj=0x58ac6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:137,fault,fault,137,https://root.cern,https://github.com/root-project/root/issues/15738,1,['fault'],['fault']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The command ""root --notebook"" is not allowed on Windows 11. ### Reproducer. Run the ""root --notebook"" command. This is my code.; ```; import ROOT; ```; The following is an error.; ```; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:205:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:596:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302:247,error,error,247,https://root.cern,https://github.com/root-project/root/issues/14302,2,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The failure seen in the asan job for the `gtest-tree-dataframe-test-dataframe-interface` test is due to the reproducer attached. It seems trying to JIT a function with a very long return expression is causing issues. Unfortunately asan just reports a segfault with no stacktrace, but I was able to get a (very long) stacktrace with gdb and the reproducer, see the attachment. Note that the reproducer is completely detached from RDataFrame and just calls the interpreter. [gdb_ginterpreter_declare_manyargs.txt](https://github.com/user-attachments/files/15794771/gdb_ginterpreter_declare_manyargs.txt). ### Reproducer. ```cpp; #include <TInterpreter.h>. int main(){; gInterpreter->Declare(R""(; namespace R_rdf {; auto func0(const int var0){return var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + var0 + var0 + var0+var0 + va",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15818:79,failure,failure,79,https://root.cern,https://github.com/root-project/root/issues/15818,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test `PyMVA-Keras-Regression` fails on 6.32 and master with this error:; ```; Error: [ERROR] Mean squared error is 115.737 (>30.0); ```; The test needs to be fixed in order to prevent this unstable behaviour. This is a blocker for the release of 6.32.00. ### Reproducer. See nightlies, e.g. https://github.com/root-project/root/actions/runs/8908577851/job/24464458546. ### ROOT version. master and 6.32. ### Installation method. from sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15396:144,error,error,144,https://root.cern,https://github.com/root-project/root/issues/15396,4,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15936:290,failure,failures,290,https://root.cern,https://github.com/root-project/root/issues/15936,1,['failure'],['failures']
Availability,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There seems to be a compilation error when building ROOT on macOS 11 reported by @ianna . This issue should be fixed by https://github.com/root-project/root/pull/14662. ### Reproducer. Build ROOT from source. ### ROOT version. master. ### Installation method. build from source. ### Operating system. MacOS12. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14664:107,error,error,107,https://root.cern,https://github.com/root-project/root/issues/14664,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This is related to #15406. In a run of `cling::utils::Lookup::Named` with:; ```; (lldb) p sofar->dumpAsDecl(); NamespaceDecl 0x12e8d0788 </Users/pcanal/root_working/test/2024-meta/test_usingenum.cxx:3:1, col:34> col:11 C; `-UsingDirectiveDecl 0x12e8d0818 <col:15, col:31> col:31 Namespace 0x12e8d0438 'A'; ```; will not look (or at least not find) anything brought by the using directive. This results in both `TClass::GetClass` and `TClass::GetEnum` (even after #15406 is resolved) with nothing find entity that are spelt via a using directive:. This is due to `TClassEdit::GetNormalizedName` is not correctly resolving the name (due to the incorrect behavior of `cling::utils::Lookup::Named`. ### Reproducer. ```; root [0] namespace A { enum E { kOne }; class C; }; root [1] namespace B { using namespace A; }; root [2] TClass::GetClass(""A::C""); Warning in <TClass::Init>: no dictionary for class A::C is available; (TClass *) 0x12fe265f0; root [3] TClass::GetClass(""B::C""); (TClass *) nullptr; root [4] TEnum::GetEnum(""A::E""); (TEnum *) 0x600000e64c30; root [5] TEnum::GetEnum(""B::E""); (TEnum *) nullptr; ```. ```; namespace A { enum E { kOne }; class C; }; namespace B { using namespace A; }. int testing(); {; 	auto c = TClass::GetClass(""B::C"");; if (!c) ; return 1;; if (c != TClass::GetClass(""A::E"");; return 2;. // Should work when PR #15408 is merged but does not.; auto e = TEnum::GetEnum(""B::E""); if (!e); return 3;; if (e != TEnum::GetEnum(""A::E"");; return 4;; return 0;; }; ```. ### ROOT version. v6.00+ including master. ### Installation method. any. ### Operating system. any. ### Additional context. A commented out part of `roottest/root/enums/test_usingenum.cxx` is failing due to this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15407:982,avail,available,982,https://root.cern,https://github.com/root-project/root/issues/15407,1,['avail'],['available']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Today I upgraded my macos system to 14.0, downloaded the source code for v6.28/06 and compiled it, after that root works fine and drawing works fine, but TBrowser doesn't work!; ![WechatIMG150](https://github.com/root-project/root/assets/61787337/bf938e44-b07b-4760-878a-7600a2e41ee5). ### Reproducer. run root -l; TBrowser a. and saw this picture; ![WechatIMG150](https://github.com/root-project/root/assets/61787337/7e8f1a54-9304-49ba-bbd6-c3a088a5a81a). ### ROOT version. v6.28/06 . ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13834:117,down,downloaded,117,https://root.cern,https://github.com/root-project/root/issues/13834,1,['down'],['downloaded']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We get a segfault when trying to read C-style arrays returned by getters from the `TGraph(Asymm,Bent)Errors` classes as Python `list`:. ```; #10 0x00007f7361d62896 in CPyCppyy::(anonymous namespace)::DoubleConverter::FromMemory (this=0x7f7361e399f8 <(anonymous namespace)::InitConvFactories_t::InitConvFactories_t()::{lambda(long*)#51}::operator()(long*) const::c>, address=0x55e74bab5000) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:952; #11 0x00007f7361dbf232 in ll_item (self=0x7f7354768960, index=88746) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:376; #12 0x00007f736fc1e9e5 in iter_iternext (iterator=<iterator at remote 0x7f73620b46a0>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/iterobject.c:65; #13 0x00007f736fbf33fd in list_extend (self=self; entry=0x7f732b67c200, iterable=<cppyy.LowLevelView at remote 0x7f7354768960>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:966; #14 0x00007f736fc11261 in list___init___impl (iterable=<optimized out>, self=0x7f732b67c200) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:2790; ```. ### Reproducer. ```python; import ROOT; import numpy. if __name__ == ""__main__"":; n = 10; x = numpy.array([0.22, 0.05, 0.25, 0.35, 0.5, 0.61, 0.7, 0.85, 0.89, 0.95], dtype=numpy.double); y = numpy.array([1, 2.9, 5.6, 7.4, 9, 9.6, 8.7, 6.3, 4.5, 1], dtype=numpy.double); exl = numpy.array([.05, .1, .07, .07, .04, .05, .06, .07, .08, .05], dtype=numpy.double); eyl = numpy.array([.8, .7, .6, .5, .4, .4, .5, .6, .7, .8], dtype=numpy.double); exh = numpy.array([.02, .08, .05, .05, .03, .03, .04, .05, .06, .03], dtype=numpy.double); eyh = numpy.array([.6, .5, .4, .3, .2, .2, .3, .4, .5, .6], dtype=numpy.double); gr = ROOT.TGraphAsymmErrors(n, x, y, exl, exh, eyl, eyh). print(list(gr.GetEXlow())); ```. ### ROOT versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13600:176,Error,Errors,176,https://root.cern,https://github.com/root-project/root/issues/13600,1,['Error'],['Errors']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318:306,error,errors,306,https://root.cern,https://github.com/root-project/root/issues/15318,7,"['Error', 'avail', 'error']","['Error', 'available', 'errors']"
Availability,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have seen recently ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510). ### Reproducer. The reproducer is the roottest test at https://github.com/root-project/roottest/blob/a05d63796f584020aa2e749d95218434ef28cc37/root/tree/branches/runnoname.C. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Ubuntu 24.04. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15621:106,failure,failures,106,https://root.cern,https://github.com/root-project/root/issues/15621,1,['failure'],['failures']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error.; Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16562:257,error,error,257,https://root.cern,https://github.com/root-project/root/issues/16562,1,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I use the `RooFFTConvPdf` function to convolved two pdf, there is an error infomation:; ```; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; Error in <TVirtualFFT::FFT>: handler not found; [#0] FATAL:Eval -- RooFFTConvPdf::fillCacheSlice(sigpdfCannot get a handle to fftw. Maybe ROOT was built without it?; terminate called after throwing an instance of 'std::runtime_error'; what(): Cannot get a handle to fftw.; ```. But I have already installed all the dependencies include `libfftw3-dev`. And I also try the same script under the ROOT 6.28/06, it works well. ### Reproducer. A part of script:; ```; auto h1a = new TH1D(""h1a"", ""h1a"", nbins1, xlow1, xup1);; t2->Draw(""x>>h1a"");. RooDataHist exmch1a(""exmch1a"", ""exmch1a"", x, h1a, 1.0);. RooHistPdf exmcpdf(""exmcpdf"", ""exmcpdf"", x, exmch1a, 0);. RooRealVar mean_gauss(""mean_gauss"", ""mean_gauss"", 0.0, -10000.0, 10000.0);; RooRealVar width_gauss(""width_gauss"", ""width_gauss"", 0.0, 0.0, 1000.0);; RooGaussModel gausspdf(""gausspdf"", ""gausspdf"", x, mean_gauss, width_gauss);. RooFFTConvPdf sigpdf(""sigpdf"", ""sigpdf"", x, exmcpdf, gausspdf);; ```. I'm sorry I can't provide the rest of the script. I run this script with the following command; ```; root fit.cxx; ```. ### ROOT version. ROOT 6.30/02. ### Installation method. pre-compiled binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14162:149,error,error,149,https://root.cern,https://github.com/root-project/root/issues/14162,4,"['Error', 'error']","['Error', 'error']"
Availability,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When RDataFrame encouters:. ```; Error in <TNetXNGSystem::GetDirEntry>: Unable to give access - user access restricted - unauthorized identity used ; Permission denied; ```. Python exits due to the segfault when I would expect it to raise an exception. ### Reproducer. See: https://github.com/root-project/root/issues/16475. ### ROOT version. 6.32.2. ### Installation method. sft.cern.ch. ### Operating system. Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16502:108,Error,Error,108,https://root.cern,https://github.com/root-project/root/issues/16502,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When compiles ROOT on OpenSUSE Linux, one gets following compilation failure:; ```; /home/linev/git/json/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/testing/builder.h: No such file or directory; 14 | #include <arrow/testing/builder.h>; | ^~~~~~~~~~~~~~~~~~~~~~~~~; ```. Seems to be `/usr/include/arrow/testing` directory not exists at all when `arrow` installed as provided by linux distributions. ### Reproducer. Compilation with `-Darrow=ON` on OpenSUSE Tumbleweed. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13516:144,failure,failure,144,https://root.cern,https://github.com/root-project/root/issues/13516,2,"['error', 'failure']","['error', 'failure']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When jitting code with errors in some cases, the failure leads to a segfault in cling. I didn't manage a very minimal reproducer, so here's the actual code which provoked this. (including an Eigen dependency, where the include of the Eigen headers seems to be relevant to provoking the crash). ### Reproducer. test.h; ```#ifndef WREMNANTS_EtaPtCorrelatedEfficiency_h; #define WREMNANTS_EtaPtCorrelatedEfficiency_h. #include ""TROOT.h""; #include ""TH2D.h""; #include ""TH3D.h""; #include ""TFile.h""; #include ""TMath.h"". #include <eigen3/Eigen/Dense>; // #include <eigen3/Eigen/Eigenvalues>; //#include <stdlib.h>; //#include <stdio.h>; #include <cstdlib> ; #include <cstdio>; #include <cmath>; #include <iostream>; #include <string>; #include <fstream>; #include <cassert>. namespace wrem {. // ================================================; // Some functions to be used for EtaPtCorrelatedEfficiency; // ================================================; // TODO:; // put functions in another header file; // write a base class to make all functions derive from, at least for polynomials; // write a generic class for polynomials; class pol3_custom {; public:; pol3_custom() {};; pol3_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double operator() (std::vector<double> &x, std::vector<double> &p) {; double xscaled = (x[0] - xMinNorm_) / xRangeNorm_;; return p[0] + p[1]*xscaled + p[2]*std::pow(xscaled,2) + p[3]*std::pow(xscaled,3);; }; void setPolynomialArgument(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; }; int getNparams() { return nparams_; }; protected:; // to normalize polynomial argument; int nparams_ = 4;; double xMinNorm_ = 0.0;; double xRangeNorm_ = 1.0;; };. class pol4_custom {; public:; pol4_custom() {};; pol4_custom(const double& xMin, const double& xRange) {; xMinNorm_ = xMin;; xRangeNorm_ = xRange;; };; double ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16578:98,error,errors,98,https://root.cern,https://github.com/root-project/root/issues/16578,2,"['error', 'failure']","['errors', 'failure']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running with `ctest -j 32` on a node with 127 cores (see below for more details), one of the run had many failures due to running out of thread resources. The list of affected test includes:; ```; 47:PyMVA-Keras-Classification ; 348:PyMVA-Keras-Regression ; 349:PyMVA-Keras-Multiclass ; 985:tutorial-tmva-TMVA_SOFIE_Keras; 1238:tutorial-tmva-RBatchGenerator_PyTorch-py ; 1239:tutorial-tmva-RBatchGenerator_TensorFlow-py ; 1247:tutorial-tmva-TMVA_SOFIE_RDataFrame-py ; 1252:tutorial-tmva-keras-GenerateModel-py ; 1253:tutorial-tmva-keras-MulticlassKeras-py ; 1584:roottest-root-io-evolution-make ; 1641:roottest-root-io-newstl-make; ```. those (and possibly `tutorial-tmva-keras-MulticlassKeras-py` which did not run because it requires the previous test). ### Reproducer. ```; 347/2278 Testing: PyMVA-Keras-Classification; 347/2278 Test: PyMVA-Keras-Classification; Command: ""/usr/bin/cmake"" ""-DCMD=/home/pcanal/root_working/build/quick-devel/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/home/pcanal/root_working/build/quick-devel"" ""-P"" ""/home/pcanal/root_working/code/quick-devel/cmake/modules/RootTestDriver.cmake""; Directory: /home/pcanal/root_working/build/quick-devel/tmva/pymva/test; ""PyMVA-Keras-Classification"" start time: Sep 24 20:01 UTC; Output:; ----------------------------------------------------------; Get test data...; Generate keras model...; 2024-09-24 20:01:12.572604: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered; 2024-09-24 20:01:12.572668: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered; 2024-09-24 20:01:12.573914: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Att",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16552:186,failure,failures,186,https://root.cern,https://github.com/root-project/root/issues/16552,1,['failure'],['failures']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 ; The script is quite simple:; ```; from ROOT import TFile; f=TFile.Open(""tmp.RDO""); f.ls(); t=f.Get(""CollectionTree""); n=t.GetEntries(); for i in range(n):; s=t.GetEntry(i); print(s); f.Close(); ```; For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0; . ### ROOT version. Writing: 6.32/02; Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964:154,failure,failure,154,https://root.cern,https://github.com/root-project/root/issues/15964,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to use the `RNTupleImporter::SetFieldModifier` feature, I stumbled upon the following error:. ```; input_line_71:2:19: error: unknown type name 'RFieldBase'; void fptr_wrap1(RFieldBase& arg0) {; ^; Traceback (most recent call last):; File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 55, in <module>; raise SystemExit(main()); ^^^^^^; File ""/Users/vpadulan/Projects/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main; importer.SetFieldModifier(low_precision_modifier); TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>; TypeError: could not convert argument 1; ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16613:174,error,error,174,https://root.cern,https://github.com/root-project/root/issues/16613,2,['error'],['error']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:; ```; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```; i.e. without buillding; leads to:; ```; CMake Error:; Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib; ```. ### Reproducer. ```; mkdir build; cd build; cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF; cmake .; ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16149:324,Error,Error,324,https://root.cern,https://github.com/root-project/root/issues/16149,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Cling` is not seeing of the content of `math.h` on MacOS. ### Reproducer. With the file header.h; ```; #include <math.h>. void func(); {; float a = 0, b = 0, c = 0;; __sincospif(a, &b, &c);; }; ```; the file compiles:; ```; clang++ -c header.h ; clang: warning: treating 'c-header' input as 'c++-header' when in C++ mode, this behavior is deprecated [-Wdeprecated]; ```; but fails to be parsed by `Cling` (well `rootcling`); ```; rootcling -f dict.cxx header.h; In file included from input_line_8:3:; header.h:6:4: error: use of undeclared identifier '__sincospif'; __sincospif(a, &b, &c);; ^; Error: rootcling: compilation failure (dict51adc8b8cb_dictUmbrella.h); ```. ### ROOT version. Tested on master likely also on older releases. ### Installation method. manual build and/or spack. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14442:591,error,error,591,https://root.cern,https://github.com/root-project/root/issues/14442,3,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. `Scale()` scales all bins, even ""non-existing"" (i.e. sparse-skipped) ones. See https://root-forum.cern.ch/t/hadd-error-thnsparse/56444. ### Reproducer. `h->Scale()` will do. ### ROOT version. master. ### Installation method. From source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13962:188,error,error-thnsparse,188,https://root.cern,https://github.com/root-project/root/issues/13962,1,['error'],['error-thnsparse']
Availability,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. ```; Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier 'clad'; clad::hessian(TFormula____id13317627456646018083, ""p[0:2]"" );; ^; ```. This is due to `TFormula` seemingly unconditionally running:; ```; IncludeCladRuntime; from TFormula::GenerateHessianPar(; from TFormula::HessianPar; from GeneralHessianCalc<T>::Hessian; from GeneralHessianCalc<T>::IsAvailable(fFunc); from WrappedMultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15091:278,error,error,278,https://root.cern,https://github.com/root-project/root/issues/15091,2,['error'],['error']
Availability,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. last version `07d2b27d192bd20bea8421da7b1c6c381376cfb2`; build on macos ; cmake ; ```; cmake version 3.29.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; ```; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information.; ```. ### Reproducer. mkdir build; cmake ../root. ### ROOT version. last commit `07d2b27d192bd20bea8421da7b1c6c381376cfb2`. ### Installation method. build from source. ### Operating system. macos 14.4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15549:270,Error,Error,270,https://root.cern,https://github.com/root-project/root/issues/15549,1,['Error'],['Error']
Availability,### Check duplicate issues. - [ ] Checked for duplicates. ### Description. the libpng included in latest root/afterimage is 1.2.55 . The modern version is 1.6.40. This causes problems at run time:; libpng warning: Application was compiled with png.h from libpng-1.6.39; libpng warning: Application is running with png.c from libpng-1.2.55; libpng error: Incompatible libpng version in application and library. ### Reproducer. I dont think a reproduced is needed. ### ROOT version. | From tags/v6-28-06@v6-28-06 |. ### Installation method. brew. ### Operating system. macos. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13825:347,error,error,347,https://root.cern,https://github.com/root-project/root/issues/13825,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Because of the implicit `using namespace std` in the interpreter, trying to use range-v3 headers result in errors about ambiguous references, like:; ```; In file included from ROOT_prompt_0:1:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range/traits.hpp:24:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/range_fwd.hpp:23:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/concepts/compare.hpp:35:39: error: reference to 'ranges' is ambiguous; concept compares_as = same_as<ranges::common_comparison_category_t<T, Cat>, Cat>;; ^; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/include/range/v3/compare.hpp:25:11: note: candidate found by name lookup is 'ranges'; namespace ranges; ^; /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/experimental/string_view:689:13: note: candidate found by name lookup is 'std::ranges'; namespace ranges; ^; ```. ### What is the expected behaviour?. I expect to be able to use the top level `ranges` namespace at the same time as `std::ranges`. ### How to reproduce?. From lxplus9.cern.ch; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <range/v3/range/traits.hpp>; In file included from ROOT_prompt_0:1:; In file included from /cvmfs/sft-nightlies.cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13001:187,error,errors,187,https://root.cern,https://github.com/root-project/root/issues/13001,2,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Hi,; We are trying to test latest ROOT 6.28 patches (commit 55513fb518) and ROOT master (commit d4d1df86b07886d56c4bd1372590d0a62c3987c0) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit a13590901c or ROOT maser commit f499987. . [a]; ```; @@@@ Running edmWriteConfigs for SimG4CoreSaveSimTrackAction. *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x0000152ecd0815db in waitpid () from /lib64/libc.so.6; #1 0x0000152eccfe3ce7 in do_system () from /lib64/libc.so.6; #2 0x0000152ece6e73e2 in TUnixSystem::Exec (this=0x234e8c0, shellcmd=0x51d8ad0 ""/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/etc/gdb-backtrace.sh 1509407 1>&2"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2104; #3 0x0000152ece6e7c83 in TUnixSystem::StackTrace (this=0x234e8c0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:2395; #4 0x0000152ece6eb6be in TUnixSystem::DispatchSignals (this=0x234e8c0, sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/unix/src/TUnixSystem.cxx:3615; #5 0x0000152ece6e35da in SigHandler (sig=kSigSegmentationViolation) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:311,error,errors,311,https://root.cern,https://github.com/root-project/root/issues/12957,2,['error'],['errors']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. In commit 18531a48df595f64251cccc44aae3625a6b0348a the printing of the progress bar when evaluating regression events was modified. Unfortunately, it didn't consider datasets with less than 100 events. The issue is that in [line 1039 of MethodBase](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#L1039) the modulo is calculated as; `Long64_t modulo = Long64_t(nevt / 100)`, which returns 0 if the number of events (nevt) is smaller than 100. In the [next line](https://github.com/root-project/root/blame/master/tmva/tmva/src/MethodBase.cxx#1040) the operation `ievt % modulo` throws an Arithmetic exception error (SIGFPE) as the modulo operation is undefined for division by zero. ### What is the expected behaviour?. If the number of events is smaller than 100, the progress bar can either be omitted or be printed for every event. ### How to reproduce?. Run TMVA regression with a dataset that contains less than 100 events. However, the bug description should be obvious from a purely mathematical point of view. ### ROOT version. 6.26/10. ### How did you install ROOT?. custom build. ### Which operating system are you using?. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13017:719,error,error,719,https://root.cern,https://github.com/root-project/root/issues/13017,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It is not possible to operate on a HistFactory Measurement object in a workspace created with ROOT 6.26 by using ROOT 6.28. Attempting to do so results in the following:; ```; Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux; ```. The opposite scenario (workspace created in 6.28, using 6.26 to read it) also causes issues. This means that there is essentially some trial&error when handling unknown workspaces to find a suitable ROOT version. ### What is the expected behaviour?. Unclear to me whether this breaking change is expected or not, but the error message is not particularly clear in case this is expected. ### How to reproduce?. Create HistFactory workspace in ROOT 6.26 (or use this example https://cernbox.cern.ch/s/uRaTglosZypwm81, created from xmls via `hist2workspace` using 6.26/08), here called `workspace_example.root`:. ```bash; root@2cd219ab253b:~/data# root --version; ROOT Version: 6.28/04; Built for linuxx8664gcc on May 24 2023, 17:37:00; From tags/v6-28-04@v6-28-04; root@2cd219ab253b:~/data# root -l workspace_example.root; root [0]; Attaching file workspace_example.root as _file0...; (TFile *) 0x402fde6770; root [1] minimal_example->PrintXML(); Error in <TRint::HandleTermInput()>: std::length_error caught: basic_string::_M_replace_aux; ```. ### ROOT version. 6.28/04. ### How did you install ROOT?. custom build, container via https://gitlab.cern.ch/atlas-amglab/atlstats. ### Which operating system are you using?. N/A. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967:256,Error,Error,256,https://root.cern,https://github.com/root-project/root/issues/12967,4,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. It was reported at https://root-forum.cern.ch/t/reading-from-http-very-slow/53213 that reading a file via HTTP from EOS with ROOT takes much longer than simply downloading that file with wget. From the original report,. ```; root -l https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root; root [0] Electrons_All->Draw(""pt__NOSYS""); ```. takes ~5 minutes (although the tree is very small, ~60k events, 4MB in total). while. ```; wget https://cernbox.cern.ch/remote.php/dav/public-files/ntHJKDVRTjlSkyS/test_ntuples_200123.root; root -l test_ntuples_200123.root ; ```. takes 0.6s. ### What is the expected behaviour?. _No response_. ### How to reproduce?. See original report. ### ROOT version. 6.26.10. ### How did you install ROOT?. Does not matter. ### Which operating system are you using?. Linux. ### Additional context. Discussion on SNOW with the EOS folks at https://cern.service-now.com/service-portal?id=ticket&table=u_request_fulfillment&n=RQF2315805 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018:240,down,downloading,240,https://root.cern,https://github.com/root-project/root/issues/13018,1,['down'],['downloading']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. The presence of tessellated volumes in the TGeo geometry leads to erroneous node identification from coordinates. The tessellated volume is identified as the node containing the given point, which actually lies in another volume. Removing the tessellated volume the right one is correctly identified. This issue has originally been reported in the VGM project (see [here](https://github.com/vmc-project/vgm/issues/14#issuecomment-1589757201)) and identified by the VGM developer as a problem with Root navigation. . ### What is the expected behaviour?. The volume including the origin should be found when searching for origin coordinates even with the tessellated tray in the geometry. ### How to reproduce?. A full reproducer is available [here](https://basket.fi.infn.it/f/30bd4036d8/?dl=1). After decompressing the tarball, create the build folder for cmake and build as usual. Then transfer the tray.gdml and vis.mac macros in the build folder and launch the test executable. The test program consists of a GDML tray filled with cubic crystals, and will first show the geometry in an OpenGL canvas, then export the geometry to TGeo and find the volume in the origin (the geometry is also saved in a Root file for convenience). From very last line of the console output one can see that the volume at the origin is the tray, while it should be a cubic crystal. Indeed, commenting out lines 62-64 of main.cpp and running the geometry is now made only of cubes in the very same positions as before, and now TGeo correctly finds a crystal in the origin. ### ROOT version. 6.26/04. ### How did you install ROOT?. Build from source. ### Which operating system are you using?. Archlinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13039:811,avail,available,811,https://root.cern,https://github.com/root-project/root/issues/13039,1,['avail'],['available']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. Trying to use `std::source_location` in a header exposed to cling result in an error. See, for example, https://gitlab.cern.ch/gaudi/Gaudi/-/issues/266#note_6757681, where we had to hide `source_location` to cling as a workaround (https://gitlab.cern.ch/gaudi/Gaudi/-/merge_requests/1455/diffs#afb7337014c145ecb07b8ea11c702bcae52ff226_29_28). ### What is the expected behaviour?. I expect to be able to use `std::source_location` in a header that I pass to cling to generate a dictionary. ### How to reproduce?. On lxplus9.cern.ch; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh ; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 10 2023, 00:28:00 |; | From heads/v6-28-00-patches@v6-28-04-94-gb7de1efc73 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <source_location>; root [1] auto loc = std::source_location::current();; ROOT_prompt_1:1:17: error: 'source_location' is not a class, namespace, or enumeration; auto loc = std::source_location::current();; ^; ROOT_prompt_1:1:17: note: 'source_location' declared here; root [2] ; ```. ### ROOT version. v6-28-00-patches. ### How did you install ROOT?. LCG nightly builds in /cvmfs/sft-nightlies.cern.ch. ### Which operating system are you using?. Linux Alma 9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12993:159,error,error,159,https://root.cern,https://github.com/root-project/root/issues/12993,2,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. We are using a customized version of https://github.com/therocode/meta_enum that fails with ROOT v6-28-00-patches. When including the attached file I get an assertion failure from LLVM:; ```; root [0] #include ""custom_meta_enum_test.hpp""; root.exe: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/AST/ExprConstant.cpp:5921: bool HandleUnionActiveMemberChange({anonymous}::EvalInfo&, const clang::Expr*, const {anonymous}::LValue&): Assertion `declaresSameEntity(FD, LHS.Designator.Entries[PathLength] .getAsBaseOrMember().getPointer())' failed.; ```. By trial and errors I managed to find the bit of code that triggers the assertion error and I embedded the workaround in the attached file:; ```; root [0] #define WORKAROUND; root [1] #include ""custom_meta_enum_test.hpp""; root [2] ; ```. The difference that works around the issue is basically; ```patch; +++ b/Kernel/LHCbKernel/include/Kernel/meta_enum.h; @@ -130,10 +130,11 @@ namespace meta_enum_internal {; currentStringStart = currentStringEnd;; }; for ( size_t i = 0; i < memberStrings.size(); ++i ) {; - result.members[i].name = parseEnumMemberName( memberStrings[i] );; + auto name = parseEnumMemberName( memberStrings[i] );; + result.members[i].name = name;; result.members[i].value = std::get<1>( values )[i];; if ( std::get<0>( values ) == std::get<1>( values )[i] ) {; - result.defaultString = result.members[i].name;; + result.defaultString = name;; result.defaultValue = std::get<0>( values );; }; }. ```. [custom_meta_enum_test.hpp.gz](https://github.com/root-project/root/files/11749495/custom_meta_enum_test.hpp.gz). ### What is the expected behaviour?. _No response_. ### How to reproduce?. From lxplus9.cern.ch:; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-el9-gcc13-dbg/setup.sh; ❯ root; --------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13019:247,failure,failure,247,https://root.cern,https://github.com/root-project/root/issues/13019,3,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When trying to draw a histogram with a transparent box on top of it, I noticed that whenever I set `CanvasPreferGL` to `true`, the canvas moves down, and the X-axis title is cut off. ### What is the expected behaviour?. The only change I would expect is the transparency introduced to my box. Things are not supposed to be moved around only due to; ```c++; gStyle->SetCanvasPreferGL(true);; ```. ### How to reproduce?. Consider this macro:. ```c++; void transpar(); {; gStyle->SetCanvasPreferGL(false);. TH2F *h = new TH2F(""h"", ""h;X;Y;Z"", 10, 0., 10., 10, 0., 10.);; h->Draw();. TMarker *m = new TMarker(4., 7., 8);; m->Draw();. TBox *b = new TBox(1., 1., 8., 8.);; printf(""CanvasPreferGL is set to %s\n"", gStyle->GetCanvasPreferGL() ? ""true, the red box is expected to be transparent"":""false, the red box is expected to be non-transparent"");; b->SetFillColorAlpha(kRed, 0.2);; b->Draw();; }; ```. Now if I run this as; ```; root -l -n transpar.cxx; ```; I get the following:; ![image](https://github.com/root-project/root/assets/7541582/446db1cf-b73e-4809-b5f7-dfb422934db3). (no transparency is expected, so it is all good).; But when I change `false` to `true` at the third line; ```c++; gStyle->SetCanvasPreferGL(true);; ```; and run again; ```; root -l -n transpar.cxx; ```; , I get; ![image](https://github.com/root-project/root/assets/7541582/e88d31f5-e46e-487b-bf37-8779ab8ef2d3). The box is now transparent, which is good, but there is too much empty space above the histogram name (“`h`”) and, as a consequence, the X-axis title is now cut off. Is there a way to make my box transparent and keep everything else where it was before?. Please note I’m using the `-n` option when running `transpar.cxx`, so it’s not due to something I have in my style file. [The original discussion at the ROOT forum](https://root-forum.cern.ch/t/extra-vertical-space-on-a-canvas-when-canvasprefergl-is-set-to-true/55298) revealed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13016:224,down,down,224,https://root.cern,https://github.com/root-project/root/issues/13016,1,['down'],['down']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code; ```cpp; #ifdef __has_include; #if __has_include(<span>); #include <span>; #endif; #endif; ```; (found in `range/v3/range/access.hpp`) causes an error in the interpreter:; ```; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'; module ""span"" {; ```; Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:; ```; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |; | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] std::span<int> s; (std::span<int> &) {}; root [1] ; ```; which looks wrong to me. ### What is the expected behaviour?. `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce?. from lxplus.cern.ch; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |; | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13032:318,error,error,318,https://root.cern,https://github.com/root-project/root/issues/13032,2,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error; Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:; ```; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(); Maybe you need to load the corresponding shared library?; ```; A similar error comes up if I try to ``import ROOT`` in a python notebook:; ```; Welcome to JupyROOT 6.30/02; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'!; You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(); Maybe you need to load the corresponding shared library?. ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self); 475 def _post_execute(self):; --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(); 464 DrawGeometry(); 465 DrawCanvases(); --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(); 458 def DrawRCanvases():; --> 459 rdrawers = GetRCanvasDrawers(); 460 for drawer in rdrawers:; 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(); 429 def GetRCanvasDrawers():; 430 if not RCanvasAvailable(): re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:77,Error,Error,77,https://root.cern,https://github.com/root-project/root/issues/14587,4,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Current Behavior ; I have downloaded ROOT binary installer from `https://root.cern/download/root_v6.32.02.win64.vc17.exe`. When running the executable Windows prompts that the executable is untrusted. Checking the executable shows that it’s not signed. ![image](https://github.com/root-project/root/assets/73365079/5b0be6ab-e737-43c4-9076-5cbbb6769c7f). Because the installer is untrusted, I'm not able to install the package on my system. ### Expected Behavior; The installers are signed so that they do not cause installation errors on Windows based systems. . ### Reproducer. 1. Download the installer from https://root.cern/download/root_v6.32.02.win64.vc17.exe; 2. Run Windows Signtool to verify the installer's signature:; ```; signtool verify /pa /v <filename>; ```. ### ROOT version. 6.32.00 and 6.30.00. ### Installation method. pre-built binary. ### Operating system. Windows. ### Additional context. First reported in Forum Thread: https://root-forum.cern.ch/t/windows-installers-are-not-signed/59558/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896:105,down,downloaded,105,https://root.cern,https://github.com/root-project/root/issues/15896,5,"['Down', 'down', 'error']","['Download', 'download', 'downloaded', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ### Describe the bug; A range object that return different types for `begin()` and `end()`(A.K.A. not a [common-range](https://en.cppreference.com/w/cpp/ranges/common_range)) fails to check if the types is printable. ### Expected behavior; `printValue_impl<CollectionType>` must not have hard error whether `CollectionType` is printable or not. ### Reproducer. I'm using C++14 library that provide [`vccc::views::iota`](https://github.com/visualcamp/vccc/blob/6080acb71122f984293c38f17412ceb085f43b02/include/vccc/__ranges/views/iota_view.hpp#L434-L445) that models [`std::views::iota`](https://en.cppreference.com/w/cpp/ranges/iota_view).; The standard defines that It returns different type for sentinel if it models unbounded `iota_view`. Anyway, detailed description is not really necessary because the fix is really simple and intuitive. #### Input line; ```c++; vccc::views::iota(10) | vccc::views::take(4); ```; #### Output; ```c++; In file included from input_line_11:1:; In file included from /Users/yonggyulee/Documents/GitHub/lackhole/xeus-cling/install/include/xcpp/xmime.hpp:16:; /usr/local/include/cling/Interpreter/RuntimePrintValue.h:224:7: error: 'auto' deduced as 'counted_iterator<I>' (aka 'counted_iterator<vccc::ranges::iota_view<int, vccc::unreachable_sentinel_t>::iterator>') in declaration of 'iter' and deduced as 'sentinel<true>' in declaration of 'iterEnd'; auto iter = obj->begin(), iterEnd = obj->end();; ^ ~~~~~~~~~~~~ ~~~~~~~~~~; /usr/local/include/cling/Interpreter/RuntimePrintValue.h:241:39: note: in instantiation of function template specialization 'cling::collectionPrinterInternal::printValue_impl<vccc::ranges::take_view<vccc::ranges::iota_view<int>>>' requested here; return collectionPrinterInternal::printValue_impl(obj);; ^; /Users/yonggyulee/Documents/GitHub/lackhole/xeus-cling/install/include/xcpp/xmime.hpp:49:39: note: in instantiation of function template specialization 'cling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14966:368,error,error,368,https://root.cern,https://github.com/root-project/root/issues/14966,1,['error'],['error']
Availability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Error at interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:138 (message):; Target host is not in the set of libraries.; Call Stack (most recent call first):; interpreter/llvm-project/llvm/cmake/modules/LLVM-Config.cmake:256 (llvm_expand_pseudo_components); interpreter/llvm-project/llvm/cmake/modules/AddLLVM.cmake:641 (llvm_map_components_to_libnames); interpreter/cling/CMakeLists.txt:426 (llvm_add_library); interpreter/cling/lib/Interpreter/CMakeLists.txt:60 (add_cling_library). ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master @fee23275. ### Installation method. source. ### Operating system. FreeBSD 13.2p4. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13865:168,Error,Error,168,https://root.cern,https://github.com/root-project/root/issues/13865,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. @bellenot @linev, this was seen by several users: ; https://github.com/root-project/root/issues/14163; https://github.com/root-project/root-docker/issues/60. ```; CMake Error at /usr/share/cmake-3.25/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; By not providing ""Findnlohmann_json.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""nlohmann_json"", but CMake did not find one. Could not find a package configuration file provided by ""nlohmann_json""; (requested version 3.10.5) with any of the following names:. nlohmann_jsonConfig.cmake; nlohmann_json-config.cmake. Add the installation prefix of ""nlohmann_json"" to CMAKE_PREFIX_PATH or set; ""nlohmann_json_DIR"" to a directory containing one of the above files. If; ""nlohmann_json"" provides a separate development package or SDK, be sure it; has been installed.; Call Stack (most recent call first):; /tmp/newroot/cmake/ROOTConfig.cmake:122 (find_dependency); gui/CMakeLists.txt:28 (find_package); ```. `builtin_nlohmann` is off in the binary release, so the Findpackage CMake script should not require it to be found. ### Reproducer. ```; cmake_minimum_required(VERSION 3.25). project(ProjectName). find_package(ROOT 6.30 CONFIG REQUIRED); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |; | From tags/v6-30-02@ |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. https://github.com/root-project/root/pull/14178#discussion_r1415435156",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188:244,Error,Error,244,https://root.cern,https://github.com/root-project/root/issues/14188,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. A user has reported a compatibility issue when sourcing thisroot.sh from the ROOT framework in the zsh shell. The error encountered is: /usr/bin/which: invalid option -- 'p'. This problem is traced to the script at:. https://github.com/root-project/root/blob/a1f54ed694b330a3b2591807daa75445a39a76c3/config/thisroot.sh#L182. The script uses the _which_ command with the -p option, a feature specific to zsh's built-in _which_ command. However, in this context, the system's _which_ command is called instead, which does not recognize the -p option. The script should be modified to use zsh's built-in _which_ command. This can be done by using _builtin which_ instead of just _which_. ### Reproducer. ```; ssh lxplus7; zsh; source /cvmfs/sft.cern.ch/lcg/releases/LCG_105/ROOT/6.30.02/x86_64-centos7-gcc11-opt/bin/thisroot.sh ; /usr/bin/which: invalid option -- 'p'; ```. ### ROOT version. 6.30.02. ### Installation method. build from source. ### Operating system. Linux, centos7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14324:189,error,error,189,https://root.cern,https://github.com/root-project/root/issues/14324,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After `TPaveText::SetLabel()` is called, drawing of such pave is corrupted. First of all - label is not drawn. If one tries move title after label is set for it, either part or complete canvas is white. Also getting lot of failures like:; ```; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; Error in <TTF::SetTextSize>: error in FT_Set_Char_Size; ```. ### Reproducer. Attached is reproducer. ; [hstack.C.txt](https://github.com/root-project/root/files/13294534/hstack.C.txt). And this is how canvas look when try to move title:. ![cst](https://github.com/root-project/root/assets/4936580/334dfe25-4cb7-41cc-b51e-491135db142a). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14032:298,failure,failures,298,https://root.cern,https://github.com/root-project/root/issues/14032,17,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. After following advice to transition from `genreflex` to `rootcling --genreflex`, we discovered that IO dictionaries generated for classes with transient (non-persistent) data members actually included stream information for those data members, in contrast both with the behavior of `genreflex` and our desire. ### Reproducer. 1. Download, unpack and `cd` into the top level directory of [rootcling-genreflex-transient-bug.tgz](https://github.com/root-project/root/files/12439967/rootcling-genreflex-transient-bug.tgz); 2. `./makeit good`; 3. `./makeit`. The output of the final `ROOT -b` command should be the same down to the checksum reported if the problem were not present. ### ROOT version. `ROOT 6.28/04@30598a8430`. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. Compiled with GCC 13.1.0/C++20. May be related to the (insufficiently detailed) #13361.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13543:405,Down,Download,405,https://root.cern,https://github.com/root-project/root/issues/13543,2,"['Down', 'down']","['Download', 'down']"
Availability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. After updating from gcc 13.2.1 to gcc 14.1.1 I get several compile errors starting with e.g.; ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:10:; In file included from /usr/include/c++/14.1.1/chrono:49:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr.h:53:; In file included from /usr/include/c++/14.1.1/bits/shared_ptr_base.h:66:; /usr/include/c++/14.1.1/bits/align.h:93:21: error: call to 'has_single_bit' is ambiguous; static_assert(std::has_single_bit(_Align));; ^~~~~~~~~~~~~~~~~~~; /usr/include/c++/14.1.1/bit:439:5: note: candidate function [with _Tp = unsigned long]; has_single_bit(_Tp __x) noexcept; ^; ```; The full log is ; [install.txt](https://github.com/root-project/root/files/15391030/install.txt). ### Reproducer. ```bash; git clone https://github.com/root-project/root.git; cd root/; git checkout v6-30-06; mkdir build install; cd build; cmake -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_STANDARD=20 ../; cmake --build . --target install -j 12 &> install.txt; ```. ### ROOT version. v6-30-06. ### Installation method. from source. ### Operating system. Linux (arch linux). ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15585:142,error,errors,142,https://root.cern,https://github.com/root-project/root/issues/15585,2,['error'],"['error', 'errors']"
Availability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. As described [on the forum](https://root-forum.cern.ch/t/building-cling-dll-from-source-code/55311/9) trying to '#include <atlstr.h>` in ROOT create a lot of errors:; ```; root [0] #include <atlstr.h>; In file included from ROOT_prompt_0:1:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:192:9: error: reference to 'byte' is ambiguous; typedef byte cs_byte;; ^; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:191:23: note: candidate found by name lookup is 'byte'; typedef unsigned char byte;; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'; enum class byte : unsigned char {};; ^; In file included from ROOT_prompt_0:1:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlstr.h:19:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlbase.h:66:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14602:233,error,errors,233,https://root.cern,https://github.com/root-project/root/issues/14602,1,['error'],['errors']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT 6.28.06 from source with python 3.11 results in easily-trigger GC assertion errors for at least me and and other user (@clark2668, who ran into this issue and sought out help from me in debugging this), on two different platforms (me on F38, @clark2668 on some version of Ubuntu). . In particular, the following script fails from a fresh build. . ```; import ROOT; f = ROOT.TFile(""test.root"",""CREATE""); ; ```. with stack trace. ```; #6 0x00007fc00f3cf844 in __pthread_kill_implementation () from /lib64/libc.so.6; #7 0x00007fc00f37eabe in raise () from /lib64/libc.so.6; #8 0x00007fc00f36787f in abort () from /lib64/libc.so.6; #9 0x00007fc00f36779b in __assert_fail_base.cold () from /lib64/libc.so.6; #10 0x00007fc00f377147 in __assert_fail () from /lib64/libc.so.6; #11 0x00007fc00f7ed8f3 in subtype_traverse (self=0x7fbfe6b16be0, visit=0x7fc00f8df3c1 <visit_decref>, arg=0x7fbfe6b16be0) at Objects/typeobject.c:1210; #12 0x00007fc00f8ddad9 in subtract_refs (containers=containers; entry=0x7fc00fbd5768 <_PyRuntime+59656>) at Modules/gcmodule.c:478; #13 0x00007fc00f8dedfb in deduce_unreachable (base=base; entry=0x7fc00fbd5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694:165,error,errors,165,https://root.cern,https://github.com/root-project/root/issues/13694,1,['error'],['errors']
Availability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building ROOT on macOS 14 with Xcode 15 fails to configure when trying to build LLVM with the following error:. ```; CMake Error: File /Users/pagessin/dev/ci-dependencies/build_all_cpp20_15p0/root/src/root/interpreter/llvm/src/llvm.spec.in does not exist; ```. ### Reproducer. - Checkout ROOT; - Run cmake. ### ROOT version. 6.30.0 and 6.30.02. ### Installation method. build from source. ### Operating system. macOS 14 / Xcode 15. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14169:179,error,error,179,https://root.cern,https://github.com/root-project/root/issues/14169,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Building with cuDNN 9.0 or later results in the following errors:; ```; /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(500): error: identifier ""cudnnRNNForwardTraining"" is undefined; cudnnStatus_t status = cudnnRNNForwardTraining(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(513): error: identifier ""cudnnRNNForwardInference"" is undefined; cudnnStatus_t status = cudnnRNNForwardInference(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNForward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Float_t]"" at line 43 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:133,error,errors,133,https://root.cern,https://github.com/root-project/root/issues/15413,2,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console; $ cmake ../root; CMake Error at CMakeLists.txt:20 (message):; ROOT must be built out-of-source.; Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred!; ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh; ssh <username>@lxplus8.cern.ch; git clone https://github.com/root-project/root.git; mkdir root-build.foo; cd root-build.foo; cmake ../root; ```. 2. See the error described above. ### ROOT version. Git branch: master; Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2; * `/etc/os-release` content. ```; NAME=""Red Hat Enterprise Linux""; VERSION=""8.9 (Ootpa)""; ID=""rhel""; ID_LIKE=""fedora""; VERSION_ID=""8.9""; PLATFORM_ID=""platform:el8""; PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)""; ANSI_COLOR=""0;31""; CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos""; HOME_URL=""https://www.redhat.com/""; DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8""; BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8""; REDHAT_BUGZILLA_PRODUCT_VERSION=8.9; REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux""; REDHAT_SUPPORT_PRODUCT_VERSION=""8.9""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159:127,Error,Error,127,https://root.cern,https://github.com/root-project/root/issues/14159,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Calling `ROOT::Experimental::RNTupleWriter::Recreate` with a path to a full disk results in an assert in RMiniFile.cxx about `fileStream` being bad. A more useful error message would be appreciated. ### Reproducer. Should happen anytime you write to a full disk. ### ROOT version. ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 21 2024, 23:43:23 |; | From heads/master@tags/v6-31-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ### Installation method. CMSSW release. ### Operating system. Linux alma 8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14487:238,error,error,238,https://root.cern,https://github.com/root-project/root/issues/14487,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can not compile root after xcode update: clang-1500.3.9.4. ```; #include <vector>; ^; Error: Building module 'std_vector' implicitly. If 'std_vector' requires a ; dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_vector'.; Otherwise, specify '-mByproduct std_vector' to disable this diagnostic.; In file included from input_line_7:16:; In file included from /usr/local/root/root_build/include/ROOT/TExecutorCRTP.hxx:15:; In file included from /usr/local/root/root_build/include/ROOT/TSeq.hxx:15:; /usr/local/root/root_build/include/TError.h:37:10: remark: building module 'std_functional' as '/usr/local/root/root_build/lib/std_functional.pcm' [-Rmodule-build]; #include <functional>; ^; Error: Building module 'std_functional' implicitly. If 'std_functional' requires a ; dictionary please specify build dependency: 'G__Core.cxx' depends on 'std_functional'.; Otherwise, specify '-mByproduct std_functional' to disable this diagnostic.; ```. ### Reproducer. cmake --build . -- install -j. ### ROOT version. v-6-31-01, and also a similar error with the master branch. ### Installation method. build from the source. ### Operating system. MacOS 14.3.1. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14902:161,Error,Error,161,https://root.cern,https://github.com/root-project/root/issues/14902,3,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Can't install RooFit because of RooJSON. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context); 448 | elem[""x""] << pdf->x().GetName();; | ^; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context); 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {; | ^~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context); 456 | for (const auto &coef : pdf->coefList()) {; | ^~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; ```. Tried to change method names to those with underscores, got another error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooA",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:402,error,error,402,https://root.cern,https://github.com/root-project/root/issues/13101,2,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compiling root 6.28-04 on arch linux using gcc 13.2.1 results in this error:. ```; FAILED: core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o ; /usr/bin/c++ -I/home/maxnoe/Downloads/root-6.28.04/core/textinput/inc -I/home/maxnoe/Downloads/root-6.28.04/core/textinput/src -I/home/maxnoe/Downloads/root-6.28.04/core/base/inc -I/home/maxnoe/Downloads/root-6.28.04/core/clib/inc -I/home/maxnoe/Downloads/root-6.28.04/core/meta/inc -I/home/maxnoe/Downloads/root-6.28.04/core/cont/inc -I/home/maxnoe/Downloads/root-6.28.04/core/gui/inc -I/home/maxnoe/Downloads/root-6.28.04/core/thread/inc -I/home/maxnoe/Downloads/root-6.28.04/core/foundation/inc -I/home/maxnoe/Downloads/root_build/ginclude -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++17 -fPIC -fdiagnostics-color=always -MD -MT core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -MF core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o.d -o core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -c /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13529:145,error,error,145,https://root.cern,https://github.com/root-project/root/issues/13529,11,"['Down', 'error']","['Downloads', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Constructing an RNTuple field with a CMSSW data format appears to be causing an assertion failure inside clang:; ```; root.exe: /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc12/lcg/root/6.31.01-167ba8c8f4839ca54faaf182c09898b0/root-6.31.01/interpreter/llvm-project/clang/lib/Sema/SemaCXXScopeSpec.cpp:122: clang::DeclContext* clang::Sema::computeDeclContext(const clang::CXXScopeSpec&, bool): Assertion `!isSFINAEContext() && ""partial specialization scope specifier in SFINAE context?""' failed.; ```. ### Reproducer. ```bash; source ; pushd /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300; cmsenv; popd; root -l; ```; in the prompt,; ```cpp; auto model = ROOT::Experimental::RNTupleModel::Create();; auto field1 = model->MakeField<vector<edm::Ref<vector<TTTrack<edm::Ref<edm::DetSetVector<Phase2TrackerDigi>,Phase2TrackerDigi,edm::refhelper::FindForDetSetVector<Phase2TrackerDigi> > > > > >>(""test"");; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 18 2023, 22:20:53 |; | From heads/master@tags/v6-31-01 |; | With g++ (GCC) 12.3.1 20230527 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. CMSSW IB. ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13913:165,failure,failure,165,https://root.cern,https://github.com/root-project/root/issues/13913,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, when using the ```TGraph::Sort``` function with a large number of entries, a segmentation fault (stack overflow) occurs due to deep recursion inside the implemented quicksort algorithm. ### Reproducer. ```; import ROOT. d = ROOT.RDataFrame(1000000); dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; graph = dd.Graph(""x"", ""y""); ; c = ROOT.TCanvas(). graph.Sort(); graph.Draw(). ```. ### ROOT version. v6.29/01. ### Installation method. Compiled from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13632:176,fault,fault,176,https://root.cern,https://github.com/root-project/root/issues/13632,1,['fault'],['fault']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Downstream bug report: https://bugzilla.redhat.com/show_bug.cgi?id=2278644. root fails to build with Python 3.13.0a6.; 116 tests failed out of 1314, mostly with:. AttributeError: 'tuple' object attribute '__doc__' is read-only; AttributeError: Failed to get attribute RooRealVar from ROOT. https://docs.python.org/3.13/whatsnew/3.13.html. For all our attempts to build root with Python 3.13, see:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/package/root/. Testing and mass rebuild of packages is happening in copr.; You can follow these instructions to test locally in mock if your package builds with Python 3.13:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### Reproducer. Instructions for reproducing the build in a local mock is provided by the page linked from the downstream bug report:; https://copr.fedorainfracloud.org/coprs/g/python/python3.13/. ### ROOT version. 6.30.06. ### Installation method. Package build on Fedora rawhide from source with additional Python 3.13 packages. ### Operating system. Fedora rawhide. ### Additional context. Python 3.13 is planned to be included in Fedora 41.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15430:75,Down,Downstream,75,https://root.cern,https://github.com/root-project/root/issues/15430,2,"['Down', 'down']","['Downstream', 'downstream']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Drawing a TEfficiency to a TCanvas then saving it to .C format does not produce a working macro. I have encountered two different issues:; - the line `eff->SetStatisticOption(0);` errors out with `error: cannot initialize a parameter of type 'TEfficiency::EStatOption' with an rvalue of type 'int'`; - Even if the issue is manually fixed in the macro, if one is using weighted entries, warnings like the following appears: ; ```; warning: implicit conversion from 'double' to 'Int_t' (aka 'int') changes value from 1.2 to 1; [-Wliteral-conversion]; test1->SetTotalEvents(1,1.2);`; ```. ### Reproducer. ```python; import ROOT; ROOT.gROOT.SetBatch(); cnv = ROOT.TCanvas(""c"", """", 0, 0, 800, 600); teff = ROOT.TEfficiency(""test"", """", 1, 0, 1); teff.FillWeighted(True, 1.2, 0); teff.Draw(); cnv.SaveAs(""teff_test.C""); ROOT.gROOT.ProcessLine("".x teff_test.C""). ofile = open('teff_test_2.C', 'w'); for line in open('teff_test.C').readlines():; if 'SetStatisticOption' in line:; continue; ofile.write(line). print(""Second try""); ROOT.gROOT.ProcessLine("".x teff_test_2.C""); ``` ; . ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/02 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 25 2024, 20:04:04 |; | From heads/master@tags/v6-30-02 |; | With c++ (GCC) 13.2.1 20230801 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. pacman package, root-6.30.02-2. ### Operating system. Arch linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14801:255,error,errors,255,https://root.cern,https://github.com/root-project/root/issues/14801,2,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Fedora 40 updated gcc to version 14. After this. the test gtest-math-matrix-test-testMatrixTSparse started failing on aarch64, ppc64le and s390x. The test still succeeds on ix86 and x86_64. The test failure:. ```; Start 207: gtest-math-matrix-test-testMatrixTSparse; 243/1265 Test #207: gtest-math-matrix-test-testMatrixTSparse ..................................***Failed 0.03 sec; Running main() from /builddir/build/BUILD/googletest-1.14.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TChainParsing.RemoteGlob:TFile.ReadWithoutGlobalRegistrationNet:TFile.ReadWithoutGlobalRegistrationWeb:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from testSparse; [ RUN ] testSparse.LwbInit; /builddir/build/BUILD/root-6.30.02/math/matrix/test/testMatrixTSparse.cxx:47: Failure; Expected equality of these values:; m1; Which is: 80-byte object <00-00 02-AA 28-E9 07-70 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-05 3C-B0 00-00 00-00 00-00 01-00 03-FF 87-BA DF-98 00-00 02-AA 29-1E 84-50 00-00 02-AA 29-1E 65-B0 00-00 02-AA 29-1E 7F-00>; m2; Which is: 264-byte object <00-00 02-AA 28-E9 04-58 00-00 00-00 02-00 00-00 00-00 00-04 00-00 00-05 00-00 00-01 00-00 00-00 00-00 00-14 00-00 00-00 3C-B0 00-00 00-00 00-00 01-22 00-C0 4C-E7 2C-66 40-09 21-FB 54-44 2D-18 ... 40-34 B8-A1 9E-49 B7-53 40-37 70-82 EF-AC 42-40 00-00 02-AA 29-1E 83-A0 00-00 03-FF 87-BA DF-98 00-00 03-FF 87-86 06-68 00-00 03-FF 87-85 04-16 00-00 03-FF EE-2F 6B-28 00-00 03-FF EE-2F 6A-E0>; [ FAILED ] testSparse.LwbInit (0 ms); [----------] 1 test from testSparse (0 ms total); [----------] Global test environment tear-down; [==========] 1 test from 1 test suite ran. (0 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] testSparse.LwbInit; 1 FA",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14446:274,failure,failure,274,https://root.cern,https://github.com/root-project/root/issues/14446,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats; - Different ticks and label frequency in the left side y axis; - Different error bar width. 2: size-overview; - Difference in `TPaveText` background (flat color vs shadow); - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram); - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling; - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip); [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip); [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13707:265,error,error,265,https://root.cern,https://github.com/root-project/root/issues/13707,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a class with read rules, data members may report wrong offsets (see reproducer). ### Reproducer. [infobug.tar.gz](https://github.com/user-attachments/files/15884205/infobug.tar.gz). In the attached reproducer, the output of `offset` is. ```; $ ./offset ; 0; 8; 0. StreamerInfo for class: Event, version=3, checksum=0x153ea7a; Event@@3 @@alloc offset= 0 type=1001 ; float pt offset= 8 type= 5 (cached) ; float pt offset= 0 type= 5 (write) ; Event@@3 @@dealloc offset= 0 type=1002 ; i= 0, @@alloc type=1001, offset= 0, len=1, method=0; i= 1, pt type= 5, offset= 8, len=1, method=0 [cached]; i= 2, pt type= 5, offset= 0, len=1, method=0 [write]; i= 3, @@dealloc type=1002, offset= 0, len=1, method=0; ```. Demonstrating that `pt` is reported with an offset of 8 by the streamer info element. The wrong offset in the streamer info seems to stem from `TStreamerInfo::BuildOld`, which adds a second, faulty cached member to the list of streamer info elements. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15877:973,fault,faulty,973,https://root.cern,https://github.com/root-project/root/issues/15877,1,['fault'],['faulty']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For my project I use LCG nightly builds (dev3 slot) of ROOT and from this morning I see numerous messages of this kind . ```Warning in <TBufferFile::WriteObjectAny>: since RooNLLVar has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; ```. ### Reproducer. ROOT master from LCG dev3 nightly builds . ### ROOT version. ROOT master from LCG dev3 nightly builds . ### Installation method. LCG dev3 nightly build. ### Operating system. centos7 . ### Additional context. Same warning messages I see also for other classes like `RooRealMPFE`. Also I see numerous messages ; ```; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class RooAbsArg, offset=983040 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class vector<RooAbsArg*> read too few bytes: 227437 instead of 235302; Error in <TClass::New>: cannot create object of class RooNLLVar; Error in <TBufferFile::ReadObject>: could not create object of class RooNLLVar; Error in <TExMap::Remove>: key 463722250 not found at 1407; ```; but likely they are induced by the same problem of removed default constructors,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13280:926,Error,Error,926,https://root.cern,https://github.com/root-project/root/issues/13280,4,['Error'],['Error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-9277. From https://root-forum.cern.ch/t/unresolved-symbols-when-using-std-async/28084/1 :. I am using root_v6.12.06.Linux-ubuntu17-x86_64-gcc7.2.tar.gz, the official binaries. I did want to speed up my code a lil bit with std::async and got such errors:; ```; IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt11__once_call' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!; IncrementalExecutor::executeFunction: symbol '__emutls_v._ZSt15__once_callable' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!; ```. ### Reproducer. ```cpp; std::async([]() { return 1; }).get();; ```. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. Related to https://github.com/root-project/cling/issues/370",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14537:363,error,errors,363,https://root.cern,https://github.com/root-project/root/issues/14537,1,['error'],['errors']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,; It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```; #include ""TAxis.h""; #include ""Riostream.h""; #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x); {; //; // Get correct bin number from x value for TAxis ax; // ; Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);; return retVal;; }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0); {; //; // Test TAxis bug ; // ; TAxis *ax=new TAxis (nBins, xMin, xMax);; cout << ""Root version : "" << gROOT->GetVersion() << endl; ; for (Int_t i=1;i<=ax->GetNbins();i++); {; cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) ; << "" : "" << ; GetRightBin (ax, ax->GetBinLowEdge (i)); ; if (i != ax->FindBin (ax->GetBinLowEdge (i))); {; cout << "" <= Bug!!! "";; }; cout << endl;; }; cout << endl;; }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14091:523,error,errors,523,https://root.cern,https://github.com/root-project/root/issues/14091,1,['error'],['errors']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello! Sorry for the newbie issue, but I can't seem to work around it...!; After upgrading from ubuntu 22 to ubuntu 23, my root stopped working. I would try to run my old macros and the system would always break (can't find those logs now, I'm sorry!). ### Reproducer. I was using the precompiled version and therefore I have uninstalled it and tried to reinstall it again. From the root webpage I was suggested to do so via snap. I managed to install it and in the end, when I oppened a session and tried new TBrowser() to check some hists and if everything was according to how it was previously, I got this as header of the break:. ```; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TGVSplitter::TGVSplitter>: splitterv.xpm not found; Error in <TGHSplitter::TGHSplitter>: splitterh.xpm not found; Error in <TGComboBox::TGComboBox>: arrow_down.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found; ```. I proceeded to uninstall it and try to build it on my own.; I followed the instructions on this webpage https://root.cern/install/build_from_source/ after checking all the dependencies. When I made the first cmake I got some things that it couldn't find which would give the following lines on terminal. ```; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; ```; The things it couldn't find were:; ```; PCRE; xxHash; ZSTD; GIF; TIFF; JPEG; GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the fol",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:839,Error,Error,839,https://root.cern,https://github.com/root-project/root/issues/14479,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14195:388,Error,Error,388,https://root.cern,https://github.com/root-project/root/issues/14195,2,"['Error', 'error']","['Error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. I spoted a bug in the FOAM function GetIntNorm. From the name of the variable **Errel** an user would naively suggest that this is a relative error. However this function does nothing else but calling GetIntegMC(intMC,errMC) which returns an absolute error. . I would suggest changing the output from GetIntNorm(IntNormF, ErrelF ); to GetIntNorm(IntNormF, ErrIntF ); and put a sentence in the documentation about the type of error it returns. . ### Reproducer. The code runs fine. . ### ROOT version. ALL. ### Installation method. Doesn't matter. ### Operating system. ALL. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14528:225,error,error,225,https://root.cern,https://github.com/root-project/root/issues/14528,3,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. Since we moved to TCMalloc (instead of JeMalloc) for `cmsRun` we have seen some failures in `TROOT::EndOfProcessCleanups` upon destruction of `TString` (and some other destructors) affecting CMSSW ROOT6 (version `6.29.01`) and ROOT628 (version `6.28.05`) IBs (`el8_amd64_gcc11`). We reported the issue in the cmssw repo at [#42468](https://github.com/cms-sw/cmssw/issues/42468). ### Reproducer. The errors can be reproduced on lxplus as follows:; ```; lxplus816:~> cmssw-el8; Singularity> cd /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/; Singularity> cmsenv; Singularity> cd /tmp/avalenzu/; Singularity> cmsRun /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ``` . And for gdb:; ```; Singularity> gdb cmsRun; (gdb) run /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ```. A sample stacktrace upon destruction of the `TString`:; ```; Thread 1 (Thread 0x7ffff413fc80 (LWP 3407688) ""cmsRun""):; #0 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:88; #1 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:79; #2 tcmalloc::ThreadCache::FreeList::PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, this=0x45a0a0) at src/thread_cache.h:238; #3 tcmalloc::ThreadCache::ReleaseToCentralCache (this=this@entry=0x45a040, src=src@entry=0x45a0a0, cl=<optimized out>, N=N@entry=32) at src/thread_cache.cc:206; #4 0x00007ffff57dff2c in tcmalloc::ThreadCache::ListTooLong (this=0x45a040, list=0x45a0a0, cl=<optimized out>) at s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429:163,failure,failures,163,https://root.cern,https://github.com/root-project/root/issues/13429,2,"['error', 'failure']","['errors', 'failures']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below; ```; ==3160809== Invalid write of size 1; ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400); ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so); ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461); ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was; ```; gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);; ```. Where `localPath` and `targetPath` were strings holding locations of files.; Example (These files are on different volumes):; `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`; `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`; ```; std::filesystem::copy(localPath.Data(), targetPath.Data());; ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one.; This is the snippet of code c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14096:169,error,error,169,https://root.cern,https://github.com/root-project/root/issues/14096,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi 👋,; Homebrew maintainer here. We are trying to build `root` with the 8.3.0 release of MySQL, but we are seeing a build error to an API deprecation - https://dev.mysql.com/doc/relnotes/mysql/8.3/en/news-8-3-0.html#mysqld-8-3-0-deprecation-removal. ### Reproducer. ```; 2024-01-17T12:50:08.5969830Z /tmp/root-20240117-14093-76plq7/root-6.30.02/sql/mysql/src/TMySQLServer.cxx:642:16: error: use of undeclared identifier 'mysql_reload'; 2024-01-17T12:50:08.5970520Z Int_t res = mysql_reload(fMySQL);; 2024-01-17T12:50:08.5970770Z ^; 2024-01-17T12:50:08.5971380Z /tmp/root-20240117-14093-76plq7/root-6.30.02/sql/mysql/src/TMySQLServer.cxx:661:10: error: use of undeclared identifier 'mysql_shutdown'; 2024-01-17T12:50:08.5972100Z res = mysql_shutdown(fMySQL, SHUTDOWN_DEFAULT);; 2024-01-17T12:50:08.5972430Z ^; 2024-01-17T12:50:08.5972600Z 2 errors generated.; ```. ### ROOT version. -. ### Installation method. build from source. ### Operating system. -. ### Additional context. https://github.com/Homebrew/homebrew-core/pull/160037",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14376:197,error,error,197,https://root.cern,https://github.com/root-project/root/issues/14376,4,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi, I use Spack to evaluate Fujitsu compilers for Fugaku and FX1000.; When I tried to install this application on spack with the ""--test=root"" option(unit tests), I got the following error:. ```; /fefs/spack2/tmp/spack-stage/spack-stage-root-6.30.02-ifueiwdgknhz2zyg3olctrljdchct3mv/spack-src/tree/dataframe/test/dataframe_datasetspec.cxx:15:10: fatal error: nlohmann/json.hpp: No such file or directory; 15 | #include <nlohmann/json.hpp>; | ^~~~~~~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [tree/dataframe/test/CMakeFiles/dataframe_datasetspec.dir/build.make:79: tree/dataframe/test/CMakeFiles/dataframe_datasetspec.dir/dataframe_datasetspec.cxx.o] Error 1; make[2]: Leaving directory '/fefs/spack2/tmp/spack-stage/spack-stage-root-6.30.02-ifueiwdgknhz2zyg3olctrljdchct3mv/spack-build-ifueiwd'; make[1]: *** [CMakeFiles/Makefile2:51492: tree/dataframe/test/CMakeFiles/dataframe_datasetspec.dir/all] Error 2; make[1]: Leaving directory '/fefs/spack2/tmp/spack-stage/spack-stage-root-6.30.02-ifueiwdgknhz2zyg3olctrljdchct3mv/spack-build-ifueiwd'; make: *** [Makefile:169: all] Error 2; ```. Attached build log.; [spack-build-out_root.txt](https://github.com/root-project/root/files/14339928/spack-build-out_root.txt). ### Reproducer. ``` ; $ spack install --test=root root@6.30.02%gcc@12.2.0; ```. ### ROOT version. [v6-30-02](https://github.com/root-project/root/releases/tag/v6-30-02). ### Installation method. Spack package manager. ### Operating system. Linux(RHEL 8.8,aarch64). ### Additional context. There is another problem when using Spack. ; Please check the issue of spack.; [Installation issue: root@6.30.02 fails to build with --test=root option #42720](https://github.com/spack/spack/issues/42720)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14769:258,error,error,258,https://root.cern,https://github.com/root-project/root/issues/14769,5,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi, build craps out as seen below. Reasonably standard build, the only difference from (my) usual is that I have no preinstalled xrootd, no idea if that is related. I've seen similar issues on 13.2-RELEASE. Something makes it think it is seeing llvm2 (system has 16, not sure what root builds - 14? 15?). ```; [ 51%] Performing configure step for 'clad'; CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:37 (message):; Command failed: 1. '/usr/local/bin/cmake' '-G' 'Unix Makefiles' '-DCMAKE_BUILD_TYPE=Release' '-DCMAKE_C_COMPILER=/usr/bin/cc' '-DCMAKE_C_FLAGS= -pipe -Wall -W -pthread -fPIC' '-DCMAKE_CXX_COMPILER=/usr/bin/c++' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:436,Error,Error,436,https://root.cern,https://github.com/root-project/root/issues/14492,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi, the documentation for `getPropagatedError` contains a mistake in the definition of the error propagation formula as far as I can tell. In the current definition of the master version, the calculation uses the covariance matrix, but defines a function `F` to not be a slope to approximate a derivative, but instead the average variation of `f`. When using the covariance matrix, the definition of `F` should include a `da` in the denominator. Alternatively, the definition of the propagation should use the correlation matrix with `F` unchanged. The same version of the formula is used in the 6.24 docs. The 6.22 docs contain a version that uses the correlation matrix (with `F` unchanged), but misses a square on the uncertainty (this was since fixed). I could be wrong in my math of course, so please ensure I am not misunderstanding something here. master: https://root.cern.ch/doc/master/classRooAbsReal.html#a4d7678837410aabcd93e6f0937de525b (uses covariance); 6.24: https://root.cern.ch/doc/v624/classRooAbsReal.html#a8ea9118e0ca9578fee21443e919fa3c0 (uses covariance); 6.22: https://root.cern.ch/doc/v622/classRooAbsReal.html#a8ea9118e0ca9578fee21443e919fa3c0 (uses correlation). In addition to this, the formula rendering is broken for me for this function in 6.22+ documentation (MacOS, tested on Firefox/Safari/Chrome). ![Screenshot 2023-08-04 at 17 20 58](https://github.com/root-project/root/assets/45009355/1f192cd6-1dee-4772-8b63-90b449a33acb). The changes track back to #6387 (https://github.com/root-project/root/pull/6387/files#diff-6933c2fd9e2c651fe82af05b368fd4a0c1bd32d965a24e523973ee6a0846f89d). cc @guitargeek @kratsg for prior related exchanges. ### Reproducer. n/a. ### ROOT version. n/a. ### Installation method. n/a. ### Operating system. MacOS. ### Additional context. n/a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13404:166,error,error,166,https://root.cern,https://github.com/root-project/root/issues/13404,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi:; I build ROOT on Windows with msvc and with option /permissive-, it issues error like below, could you take a look at this issue, thanks.; `F:\gitP\root-project\root\tmva\tmva\inc\TMVA/RBatchGenerator.hxx(100,89): error C4576: a parenthesized type followed by an initializer list is a non-standard explicit type conversion syntax [F:\gitP\root-project\root\build_amd64\tmva\tmva\G__TMVA.vcxproj]`. **Workaround:**; If I remove the brackets around the `std::vector<std::size_t>` in the line: https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RBatchGenerator.hxx#L100, error will disappear. ### Reproducer. Open a VS2022 x64 Native Tools command.; 1. git clone https://github.com/root-project/root F:\gitP\root-project\root; 2. git -C ""F:\gitP\root-project\root"" reset --hard 0d1f204109a31cc4884e9fd49519edf0fa2e4505; 3. mkdir F:\gitP\root-project\root\build_amd64 and cd F:\gitP\root-project\root\build_amd64; 4. python.exe -m pip install pytest ; 5. set _CL_=/permissive-; 6. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=ON -Droottest=ON ..; 7. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. ### ROOT version. commit: 0d1f204109a31cc4884e9fd49519edf0fa2e4505. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. [build.log](https://github.com/root-project/root/files/12300237/build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13421:154,error,error,154,https://root.cern,https://github.com/root-project/root/issues/13421,3,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I am using ROOT 6.31/01 from LCG dev3 cvmfs nightly build.; and I've observed that for new PyROOT/cppyy at leats some enum objects ; are not pickleable anymore . ### Reproducer. Reproducer is very trivial; ```python; import ROOT,pickle. print ( 'ROOT version %s' % ROOT.gROOT.GetVersion() ). a = ROOT.TMVA.Types.kBDT; print ( 'enum:', a ). ## error here:; pickle.dumps ( a ); ```. ### ROOT version. 6.31/01 from the LCG dev3 cvmfs nightly build ; . ### Installation method. LCG dev3 cvmfs nightly build . ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15104:418,error,error,418,https://root.cern,https://github.com/root-project/root/issues/15104,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I get the following error while building ROOT from scratch on macOS Sequoia **and** XCode 16:. ```; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: [7737/10283] Generating G__Core.cxx, ../lib/Core.pcm; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: FAILED: core/G__Core.cxx lib/Core.pcm /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/core/G__Core.cxx /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/lib/Core.pcm; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: cd /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/core && /opt/homebrew/Cellar/cmake/3.30.3/bin/cmake -E env LD_LIBRARY_PATH=/Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/lib:/Users/ktf/src/sw/osx_arm64/pythia/v8311-local1/lib:/Users/ktf/src/sw/osx_arm64/HepMC/HEPMC_02_06_10-local1/lib:/Users/ktf/src/sw/osx_arm64/lhapdf/v6.5.2-local1/lib:/Users/ktf/src/sw/osx_arm64/Vc/1.4.1-local1/lib:/Users/ktf/src/sw/osx_arm64/FFTW3/v3.3.9-local1/lib:/Users/ktf/src/sw/osx_arm64/TBB/v2021.5.0-local1/lib:/Users/ktf/src/sw/osx_arm64/XRootD/v5.7.0-local1/lib:/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local1/lib:/Users/ktf/src/sw/osx_arm64/Python-modules-list/1.0-local1/lib:/Users/ktf/src/sw/osx_arm64/hdf5/1.10.9-local1/lib:/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local1/lib:/Users/ktf/src/sw/osx_arm64/UUID/v2.27.1-local1/lib:/Users/ktf/src/sw/osx_arm64/ApMon-CPP/master-local1/lib:/Users/ktf/src/sw/osx_arm64/AliEn-CAs/v1-local1/lib:/Users/ktf/src/sw/osx_arm64/arrow/v17.0.0-alice6-local1/lib:/Users/ktf/src/sw/osx_arm64/re2/2019-09-01-local1/lib:/Users/ktf/src/sw/osx_arm64/double-conversion/v3.1.5-local1/lib:/Users/ktf/src/sw/osx_arm64/RapidJSON/v1.1.0-alice2-local1/lib:/Users/ktf/src/sw/osx_arm64/flatbuffers/v24.3.25-local1/lib:/Users/ktf/src/sw/osx_arm64/ninja/fortran-v1.11.1.g9-local1/lib:/Users/ktf/src/sw/osx_arm64/xsimd/8.1.0-local1/lib:/Users/ktf/src/sw/osx_arm64/utf8proc/v2.6.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:95,error,error,95,https://root.cern,https://github.com/root-project/root/issues/16449,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I installed ROOT on ubuntu 20.04 via conda and I get the following warnings when `import`ing ROOT in a Python session. ```; /root/mambaforge/envs/myenv/etc/cling/std.modulemap:257:29: warning: unknown attribute 'optional' [-Wignored-attributes]; module ""memory_resource"" [optional] {; ^; /root/mambaforge/envs/myenv/etc/cling/std.modulemap:447:27: warning: unknown attribute 'optional' [-Wignored-attributes]; module ""bits/chrono.h"" [optional] {; ^; /root/mambaforge/envs/myenv/etc/cling/std.modulemap:531:41: warning: unknown attribute 'optional' [-Wignored-attributes]; explicit module ""bits_ranges_base_h"" [optional] {; ^; /root/mambaforge/envs/myenv/etc/cling/std.modulemap:538:32: warning: unknown attribute 'optional' [-Wignored-attributes]; module ""bits/ranges_util.h"" [optional] {; ^; /root/mambaforge/envs/myenv/etc/cling/std.modulemap:559:40: warning: unknown attribute 'optional' [-Wignored-attributes]; module ""bits/uses_allocator_args.h"" [optional] {. ``` . I have seen issues with slightly similar problems, but it was regarding the missing module, not the unknown attribute. I will try to see if this behaviour is reproduced also on other ubuntu versions or distros. ### Reproducer. ```; docker run --rm -it ubuntu:20.04; apt-get update && apt-get install curl; curl -L -O ""https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh""; bash Mambaforge-$(uname)-$(uname -m).sh -b; source /root/mambaforge/bin/activate; mamba create -n myenv root; conda activate myenv; python -c ""import ROOT""; ```. ### ROOT version. 6.28.04. ### Installation method. conda. ### Operating system. ubuntu 20.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13265:1421,down,download,1421,https://root.cern,https://github.com/root-project/root/issues/13265,1,['down'],['download']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I see `definitely lost: 8,904 bytes in 76 blocks` with valgrind in a few different places, which apparently all boil down to the following series of calls; ```; ==174298== at 0x484382F: malloc (vg_replace_malloc.c:431); ==174298== by 0xB8A21C5: llvm::safe_malloc(unsigned long) (MemAlloc.h:26); ==174298== by 0xB8A2ACC: clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (ParsedTemplate.h:206); ==174298== by 0xB90CA4B: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (ParseTemplate.cpp:1356); ==174298== by 0xB893CA9: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (ParseExprCXX.cpp:506); ==174298== by 0xB91DDED: clang::Parser::TryAnnotateCXXScopeToken(bool) (Parser.cpp:2094); ==174298== by 0xA8FB2A9: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (LookupHelper.cpp:629); ==174298== by 0xA7FF96C: TClingClassInfo::TClingClassInfo(cling::Interpreter*, char const*, bool) (TClingClassInfo.cxx:87); ```. Full report from valgrind; [valgrind_report.txt](https://github.com/root-project/root/files/11914909/valgrind_report.txt). ### Reproducer. ROOT was built with the following configuration; ```; cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug; ```. This is the reproducer; ```cpp; #include <TChain.h>; int main(){; TChain c;; }; ```. Compile and run with valgrind; ```; $: g++ -g -o r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13130:192,down,down,192,https://root.cern,https://github.com/root-project/root/issues/13130,1,['down'],['down']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files.; In the past all this worked:; ```; TUri uri1(""EcalBarrel.gdml"");; TUri uri2(""file://EcalBarrel.gdml"");; TUri uri3(""file://./EcalBarrel.gdml"");; ```; now after sync'ing with master this does not work anymore. Any invocation results in a SEGV.; - Is this a real problem in ROOT or; - What do I wrong; I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```; $> root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |; | From heads/master@v6-31-01-2515-g03703814ef |; | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""); ```. Result:; ```; Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation; ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15986:1155,Error,Error,1155,https://root.cern,https://github.com/root-project/root/issues/15986,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If a code attempts to create a field in an RNTuple for a virtual object type, it rightfully fails, but not with a very clear warning as to why (as compared to constructing the object on the interpreter). However, after the failure, types that should be OK to make fields from now fail. So I guess some internal data structure gets corrupted. ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""\; class Abstract {; public:; Abstract() : data1_(3) {};; virtual ~Abstract() {};. virtual int method() = 0;. private:; int data1_;; };. class Derived : public Abstract {; public:; Derived() : Abstract() {};. int method() override { return data2_; };. private:; int data2_;; };; """"""). model = ROOT.Experimental.RNTupleModel.Create(). # Derived can be constructed without complaint; # obj1 = model.MakeField[""Derived""](""test1""). # If we attempt (foolishly) to make Abstract, and; # catch the exception, then later attempts to make Derived now fail; # with puzzling JIT errors; try:; obj1 = model.MakeField[""Abstract""](""test1""); except ValueError as ex:; print(ex); obj2 = model.MakeField[""Derived""](""test2""); ```. ### ROOT version. master (6.31.01+). ### Installation method. CMSSW IB (/cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02807/el8_amd64_gcc12/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-10-18-2300). ### Operating system. EL8. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13910:298,failure,failure,298,https://root.cern,https://github.com/root-project/root/issues/13910,2,"['error', 'failure']","['errors', 'failure']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If the head of ROOT is taken, C++ 20 specified and the build process started, the pcm file of libCore cannot be generated because of this error (at least):; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.0.sdk/usr/include/c++/v1/__ranges/elements_view.h:155:38: error: cannot take address of consteval function '__get_iterator_category' outside of an immediate invocation; using iterator_category = decltype(__get_iterator_category());; ```. ### Reproducer. Take a mac with the 14.3 sdk (LLVM 15)root master, enable C++ 20, cmake, make. ### ROOT version. master and 6.28. ### Installation method. build from sources. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13698:213,error,error,213,https://root.cern,https://github.com/root-project/root/issues/13698,2,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. If you build ROOT 6.30.01, some TMVA / SOFIE ONNX support is compiled in, which required building some protobuf generated code. However, due to the fact /opt/homebrew/ is prepended to the search path, you get a conflict like:. ```; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:17:2: error: This file was generated by an older version of protoc which is; #error This file was generated by an older version of protoc which is; ^; /Volumes/build/alice-ci-workdir/alidist-o2/sw/BUILD/8ad3db67bd8069efafa78e7f340f28929ca4c88f/ROOT/tmva/sofie_parsers/onnx_proto3.pb.h:18:2: error: incompatible with your Protocol Buffer headers. Please; #error incompatible with your Protocol Buffer headers. Please; ^; ```. in the case you are trying to use, for whatever reason, a protobuf which is not provided by homebrew. Could you please append (rather than prepend) the /opt/homebrew/include path?. ### Reproducer. Just try to build ROOT with your own protobuf which is different and incompatible from the one provided by homebrew. ### ROOT version. 6.30.01. ### Installation method. Own build. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14207:447,error,error,447,https://root.cern,https://github.com/root-project/root/issues/14207,4,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:140,fault,fault,140,https://root.cern,https://github.com/root-project/root/issues/15970,3,"['avail', 'error', 'fault']","['available', 'errors', 'fault']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In TFormula the polynomial functions do not accept a variable name (such as x) as argument. . ### Reproducer. Example of code producing an error in parsing the formula expression; ```; TF1 f1(""f1"",""pol1(x,0)"");; TF1 f2(""f2"",""pol1(x,[A],[B])"");; ```; In the case of other predefined functions, for example, gaus, works as expected:; ```; TF1 f1(""f1"",""gaus(x,0)"");; f1.Print(""V"");; TF1 f2(""f2"",""gaus(x,[A],[mean],[sigma])"");; f2.Print(""V"");; ```. ### ROOT version. All ROOT 6 versions with new TFormula. ### Installation method. All. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16794:214,error,error,214,https://root.cern,https://github.com/root-project/root/issues/16794,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In some dictionary a class inheriting from `std::pair<std::string, std::string>` results in ; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:; ```; The original issue shows up in DD4hep, and works in previous versions of LCG_105 and before; see the green tick marks here: https://github.com/AIDASoft/DD4hep/pull/1242. ### Reproducer. setup root; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Fri/ROOT/v6-32-00-patches/x86_64-el9-gcc13-opt/ROOT-env.sh; ```; or; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/ROOT-env.sh; ```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221:174,Error,Error,174,https://root.cern,https://github.com/root-project/root/issues/15221,4,['Error'],['Error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In the [documentation of `TGeoManager::CheckOverlaps`](https://root.cern.ch/doc/master/classTGeoManager.html#afa2bfedf7f02398fdf5867072a77a884) the first parameter `ovlp` is described as a limit for the overlap size (which we understand to be the minimal size before considering it as illegal and triggering the error).; This method lead through chained calls to either `TGeoChecker::MakeCheckOverlap` (standard surface/edge/point check) or `TGeoChecker::CheckOverlapsBySampling` (sampling check):; ```; TGeoManager::CheckOverlaps => TNode::CheckOverlaps => TGeoVolume::CheckOverlaps => TGeoPainter::CheckOverlaps => TGeoChecker::CheckOverlaps | => TGeoChecker::MakeCheckOverlap; | => TGeoChecker::CheckOverlapsBySampling; ```. However [the line using this parameter in the sampling case (l.1271) is commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1271).; It was commented in https://github.com/root-project/root/commit/406af49ee13e135d7c2f1268370ea83e0a99c729 and the commit message does not mention this change explicitly (maybe a consequence of the introduction of the usage of `Voxels`?). The [corresponding line for the non-sampling method is in `TGeoChecker::MakeCheckOverlap` (l.1173) and not commented out](https://github.com/root-project/root/blame/master/geom/geompainter/src/TGeoChecker.cxx#L1173), which would indicate that the intended original usage is still valid. We (CBMROOT) stumbled upon this as we started to find for some of our geometries overlaps with total integrated volume in the order of `10^-6 to 10^-10 cm3` when changing the sampling points number. We first started by adding exceptions in our CI but the list quickly grew as the sampling position is different with each change in the fully assembled geometry volume.; Having/restoring the possibility to ignore the ""really small"" overlaps would cure our problem with a single parameter. Pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14675:387,error,error,387,https://root.cern,https://github.com/root-project/root/issues/14675,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that in several 6.32/XX pre-compiled binaries the class `TMVA::Experimental::SOFIE::RModelParser_ONNX` is missing. With 6.32/06 on Ubuntu 24.04:; ```; root [0] TMVA::Experimental::SOFIE::RModelParser_ONNX(); ROOT_prompt_0:1:28: error: no member named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'; TMVA::Experimental::SOFIE::RModelParser_ONNX(); ~~~~~~~~~~~~~~~~~~~~~~~~~~~^; ```; while it works perfectly fine on Ubuntu 20.04. I quickly checked that the header file `RModelParser_ONNX.hxx` is missing in the folder `include/TMVA` in 6.32/XX pre-compiled binaries for both Ubuntu 22.04 and Ubuntu 24.04, while it is present in the pre-compiled binaries for Ubuntu 20.04, Almalinux 8.9 and Almalinux 9.4. Unless there are good reasons why `RModel_ONNX` class should be missing in Ubuntu 22.04 and Ubuntu 24.04 binaries, I assume there is something fishy in the build system. ### Reproducer. On an Ubuntu 24.04 machine:; ```; wget wget https://root.cern/download/root_v6.32.06.Linux-ubuntu24.04-x86_64-gcc13.2.tar.gz; tar -xzf root_v6.32.06.Linux-ubuntu24.04-x86_64-gcc13.2.tar.gz; source root/bin/thisroot.sh; root; (from the ROOT shell) TMVA::Experimental::SOFIE::RModelParser_ONNX(); ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.32.06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 21 2024, 19:19:59 |; | From tags/v6-32-06@v6-32-06 |; | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. pre-built binaries. ### Operating system. Ubuntu 22.04, Ubuntu 24.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16774:312,error,error,312,https://root.cern,https://github.com/root-project/root/issues/16774,2,"['down', 'error']","['download', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Iterating over a Python list containing PyROOT proxies seems to mess up something, causing subsequent crashes when using the elements. ### Reproducer. The problem can be reproduced with some Python code inspired by this forum post, where the problem was originally reported:; https://root-forum.cern.ch/t/memory-leak-in-fits/56249/4. ```python; import ROOT as r. x = r.RooRealVar(""x"", ""x"", 0, 10); gm = r.RooRealVar(""gm"", ""gm"", 5, 0, 10); pdf = r.RooGaussian(""g"", ""g"", x, gm, r.RooFit.RooConst(1)); data = pdf.generate({x}, 1000). commands = [; r.RooFit.PrintLevel(-1),; r.RooFit.Save(),; ]. # Iterating over the python list will break the code. Uncomment it and things; # will work. Say whaat?; for x in commands:; pass. cmdList = r.RooLinkedList(). for i in range(len(commands)):; commands[i].Print(); cmdList.Add(commands[i]). # To get a more direct reproducer, we're not calling the pythonized version of; # fitTo(), but the original cppyy method that is available as _fitTo():; pdf._fitTo(data, cmdList); ```. ### ROOT version. `master`. ### Installation method. Building from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/memory-leak-in-fits/56249",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13611:1034,avail,available,1034,https://root.cern,https://github.com/root-project/root/issues/13611,1,['avail'],['available']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in; from DelphesAnalysis import Delphes; File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in; root.CreateScopeProxy( “Event” ).str = Event__str; File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr; raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)); AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15957:337,error,error,337,https://root.cern,https://github.com/root-project/root/issues/15957,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13734:272,echo,echo,272,https://root.cern,https://github.com/root-project/root/issues/13734,3,"['echo', 'error']","['echo', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474:399,error,error,399,https://root.cern,https://github.com/root-project/root/issues/15474,6,"['ERROR', 'Error', 'Fault', 'error']","['ERROR', 'Error', 'Faulty', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, running with cmake option `-Dall=YES` breaks cmake on `master`, on `v6.30.*` is works fine:. `cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..`. ```CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. CMake Error: CMake can not determine linker language for target: RooBatchCompute_CUDA; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined. -- Generating done (0.8s); CMake Generate step failed. Build files cannot be regenerated correctly.```. ### Reproducer. On `master` branch, on macOS, do:. ```cmake -G Ninja -Dall=YES -DPYTHON_EXECUTABLE=/opt/homebrew/bin/python3.9 ..```. ### ROOT version. master branch of today. ### Installation method. Build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15139:266,Error,Error,266,https://root.cern,https://github.com/root-project/root/issues/15139,4,['Error'],['Error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. One of the overloads of the function abuses the logic of the class:. https://github.com/root-project/root/blob/224551cf3fc5bdc80b2693578d082eb9cb0e32a3/tmva/tmva/src/DataLoader.cxx#L126-L133. In this overload a `DatasetInfo` object is created on the heap (as a temporary). Then `DatasetManager::AddDatasetInfo` takes the input argument as l-value ref and finally stores the `DatasetInfo` object as a shallow-reference in the internal `TList` data member `fDataSetInfoCollection`. This data member is not owning, thus at destruction time it will not take care of deleting its items. . https://github.com/root-project/root/blob/224551cf3fc5bdc80b2693578d082eb9cb0e32a3/tmva/tmva/src/DataSetManager.cxx#L105-L113. At the same time, the `DataSetInfo` object was created with `new` but never deleted. This logic is faulty and is related to the following report by valgrind:. ```; ==290973== Conditional jump or move depends on uninitialised value(s); ==290973== at 0x2C720F3A: TMVA::DataLoader::AddTree(TTree*, TString const&, double, TCut const&, TMVA::Types::ETreeType) (DataLoader.cxx:360); ==290973== by 0x2C72113C: TMVA::DataLoader::AddSignalTree(TTree*, double, TMVA::Types::ETreeType) (DataLoader.cxx:373); ==290973== by 0x4F9573B: ???; ==290973== by 0x4F9107E: ???; ==290973== by 0x6EC8BCD: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4EA4E: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/vpadulan/Programs/rootproject/rootbuild/fix-tutorial-tmva-cnn-classification-testing/lib/libCling.so); ==290973== by 0x6E4F13C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14433:885,fault,faulty,885,https://root.cern,https://github.com/root-project/root/issues/14433,1,['fault'],['faulty']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches?. ### Reproducer. ```; file:; KEY: ROOT::Experimental::RNTuple EventData;1 object title; KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor; At:; void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]; ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16134:731,Error,Error,731,https://root.cern,https://github.com/root-project/root/issues/16134,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Passing arguments to functions that expect types with a deleted copy constructor leads to PyROOT calling said constructor and thus triggering a compilation error:. ```cpp; input_line_35:11:68: error: call to implicitly-deleted copy constructor of 'std::unique_ptr<A, std::default_delete<A> >'; ((void (&)(std::unique_ptr<A, std::default_delete<A> >))foo)(*(std::unique_ptr<A, std::default_delete<A> >*)args[0]);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/unique_ptr.h:210:59: note: copy constructor is implicitly deleted because 'unique_ptr<A, std::default_delete<A> >' has a user-declared move constructor; _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_SINCE_CXX23 unique_ptr(unique_ptr&& __u) _NOEXCEPT; ^; Traceback (most recent call last):; File ""/Users/vpadulan/Projects/rootcode/rntuple-fix-pyroot-model-create/pass_by_value_unique_ptr.py"", line 18, in <module>; a = ROOT.std.make_unique[ROOT.A](33); TypeError: Could not instantiate make_unique<A>:; Failed to instantiate ""make_unique<A>(int)""; ```. ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.Declare(r'''. struct A{; int mA{42};; void print() { std::cout << ""A: "" << mA << ""\n""; }; A() {}; A(int val): mA(val) {}; };. void foo(std::unique_ptr<A> a = std::make_unique<A>()) { a->print(); }. '''). ROOT.foo(). a = ROOT.std.make_unique[ROOT.A](33); ROOT.foo(a); ```. ### ROOT version. master, but any will do. ### Installation method. built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14425:231,error,error,231,https://root.cern,https://github.com/root-project/root/issues/14425,2,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Python bindings done with ROOT's cppyy lack the aggregate initialization constructor; ```python; >>> import ROOT; >>> ROOT.gInterpreter.ProcessLine(""struct Foo {float x,y,z;};""); 0; >>> ROOT.Foo(1,2,3); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: none of the 3 overloaded methods succeeded. Full details:; Foo::Foo(Foo&&) =>; TypeError: takes at most 1 arguments (3 given); Foo::Foo() =>; TypeError: takes at most 0 arguments (3 given); Foo::Foo(const Foo&) =>; TypeError: takes at most 1 arguments (3 given); >>> print(ROOT.Foo.__init__.__doc__); Foo::Foo(Foo&&); Foo::Foo(); Foo::Foo(const Foo&); ```; same errors when directly using cppyy shipped with ROOT. But the same code run with the stock cppyy taken from pip works fine; ```python; >>> import cppyy; >>> cppyy.__version__; '3.1.2'; >>> cppyy.cppdef(""struct Foo {float x,y,z;};""); True; >>> cppyy.gbl.Foo(1,2,3); <cppyy.gbl.Foo object at 0x59dc0cbddc50>; >>> print(cppyy.gbl.Foo.__init__.__doc__); Foo::Foo(Foo&&); Foo::Foo(); Foo::Foo(const Foo&); void __cppyy_internal::init_Foo(Foo*& self, const float& x = 0, const float& y = 0, const float& z = 0); ```. ### Reproducer. ```python; import ROOT; ROOT.gInterpreter.ProcessLine(""struct Foo {float x,y,z;};""); ROOT.Foo(1,2,3); print(ROOT.Foo.__init__.__doc__); ```. ### ROOT version. Built for linuxx8664gcc on Sep 09 2024, 22:50:44 ; From heads/master@tags/v6-32-04 . ### Installation method. LCG dev4 nightly. ### Operating system. almalinux9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16469:724,error,errors,724,https://root.cern,https://github.com/root-project/root/issues/16469,1,['error'],['errors']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT fails to build when the environment variable `CLING_DEBUG=1` is set. When generating `G__Core.cxx, ../lib/Core.pcm`, it fails with the following error:; ```; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; Error: Parsing #pragma failed /home/jollychen/root/core/base/inc/LinkDef.h; ```. ### Reproducer. `CLING_DEBUG=1 ninja`. ### ROOT version. 6.31.01. ### Installation method. build from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14593:225,error,error,225,https://root.cern,https://github.com/root-project/root/issues/14593,6,"['Error', 'error']","['Error', 'error']"
Availability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT_HEAD failed in the nightlies in centos7 platfom; The reported error estracted from the[ log file ](http://cdash.cern.ch/upload/43670d452f7f3ef813ce655ef9357e62800d1e7a/ROOT-HEAD-configure.log)is:; gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-pc-linux-gnu:/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test found_arc4; -- Performing Test found_arc4 - Failed; -- Performing Test found_arc4_bsd; -- Performing Test found_arc4_bsd - Failed; -- Performing Test found_getrandom; -- Performing Test found_getrandom - Failed; CMake Error at core/unix/CMakeLists.txt:42 (message):; Fail to detect cryptographic random generator. ### Reproducer. [lcg_nightly_pipeline](https://lcgapp-services.cern.ch/spi-jenkins/view/LCG%20Nightlies/job/lcg_nightly_pipeline/). ### ROOT version. master. ### Installation method. build from source. ### Operating system. centos7. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958:142,error,error,142,https://root.cern,https://github.com/root-project/root/issues/14958,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Reproducer fails with an error; ```; : CommandLine Error: Option 'help-list' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; ```. Comparing libCling.so from ROOT with and without external LLVM, it looks like there are many more symbols from llvm:: namespace re-exported (from LLVM static libs).; https://gist.github.com/veprbl/24958db267b8c00bcbf2213b642454fb; (outputs of `nm --dynamic --with-symbol-versions prefix/lib/libCling.so | awk '{print $3;}'`). A decent workaround given in https://discourse.llvm.org/t/can-something-be-done-with-the-inconsistency-in-registered-commandline-options-error/1720/9 to version all symbols in ROOT using a --version-script, but I'm wondering what is so special about the `builtin_llvm=ON` build that prevents symbols from being exported and aliased. ### Reproducer. ```shell; echo 'TCanvas c; TGLSAViewer vv(&c);' | root; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 31 2024, 08:17:06 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; ### Installation method. nix/nixpkgs. ### Operating system. Linux. ### Additional context. cc @stephanlachnit @hahnjo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14778:100,error,error,100,https://root.cern,https://github.com/root-project/root/issues/14778,5,"['ERROR', 'Error', 'echo', 'error']","['ERROR', 'Error', 'echo', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Running `rootn.exe` from ROOT 6.30.04 should bring up the ROOT prompt, but instead crashes instantly on startup. . It works fine with older versions of ROOT (6.28, 6.26). ### Reproducer. - Install precompiled ROOT 6.30.04, downloaded from root.cern, on RHEL8 or 9.; - Run `thisroot.sh` to set up the runtime environment; - Type rootn.exe; - Hard crash. Transcript of session on RHEL8:; ```; % source /apps/ROOT/6.30.04/bin/thisroot.sh; % root-config --version; 6.30.04; % root-config --features; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_davix builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xrootd builtin_xxhash builtin_zeromq builtin_zlib builtin_zstd clad dataframe davix fftw3 fitsio fortran gdml http imt mathmore mlp minuit2 mysql opengl pgsql proof pyroot roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore x11 xml xrootd; % which rootn.exe; /apps/ROOT/6.30.04/bin/rootn.exe; % rootn.exe; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; ... longish stack trace ...; ```; This works without error with ROOT 6.26.14 and 6.28.12 on the exact same machine. Running plain `root` 6.30.04 also works, of course. Only `rootn.exe` seems affected. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 31 2024, 09:46:18 |; | From heads/master@tags/v6-30-04 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-21) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ----------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14767:298,down,downloaded,298,https://root.cern,https://github.com/root-project/root/issues/14767,1,['down'],['downloaded']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. See the reproducer. Despite ROOT is able to find the header (i.e. `#include <source_location>` works) it fails to find `std::source_location` in the namespace and fails with:. ```; In file included from input_line_8:1:; /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:8: error: no type named 'source_location' in namespace 'std'; std::source_location loc = std::source_location::current();; ~~~~~^; /Users/ktf/src/sw/BUILD/892abf24b97cb0ff623b7a495dedcfb95e9c6445/O2Physics/foo.C:5:35: error: no member named 'source_location' in namespace 'std'; std::source_location loc = std::source_location::current();; ~~~~~^; ```. ### Reproducer. Just put the following in `foo.C` and then run with `root.exe foo.C`. ```C++; #include <source_location>; #include <iostream>. int foo() {; std::source_location loc = std::source_location::current();; std::cout << ""File: "" << loc.function_name() << std::endl;; return 0;; }; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jan 26 2024, 10:35:25 |; | From tags/v6-30-01-alice2@v6-30-01-2-g526782cfe8 |; | With Apple clang version 15.0.0 (clang-1500.1.0.2.5) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14601:381,error,error,381,https://root.cern,https://github.com/root-project/root/issues/14601,2,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since a few days, our GitHub Actions are failing when building ROOT via CMake. This is part of a SuperBuild with lots of other projects, and uses a parallel build. The problem is reproducible, i.e. all jobs fail at the same point. However, the failure depends on the ROOT version. When compiling v6-26-10, we get https://github.com/SyneRBI/SIRF-SuperBuild/issues/857; ```; CMake Error at /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'compiler=gcc' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/usr/lib/ccache/g++-11' 'CONLY=/usr/lib/ccache/gcc-11' 'LDFLAGS='; See also; /home/runner/work/SIRF-SuperBuild/SIRF-SuperBuild/build/builds/ROOT/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```; the log file says; ```; build/common.inc:48: ""Warning: deprecated cpp0x=1 is used, stdver must be used instead. Building in stdver=c++0x mode.""; ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc11.4.0_libc2.35_kernel6.2.0; make[7]: *** read jobs pipe: Bad file descriptor. Stop.; make[7]: *** Waiting for unfinished jobs....; In file included from ../../src/tbb/concurrent_hash_map.cpp:17:; ../../include/tbb/concurrent_hash_map.h: In constructor ‘tbb::interface5::internal::hash_map_base::hash_map_base()’:; ../../include/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ../../include/tbb/concurrent_hash_map.h:93:16: note: ‘struct tbb::interface5::internal::hash_map_base::bucket’ declared here; 93 | struct bucket : tbb::internal::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14520:319,failure,failure,319,https://root.cern,https://github.com/root-project/root/issues/14520,2,"['Error', 'failure']","['Error', 'failure']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```; Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!); At:; ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:; ```; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh; lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive); ```. To reproduce the error:; ```; root [0] using namespace ROOT::Experimental;; root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();; ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16135:242,error,error,242,https://root.cern,https://github.com/root-project/root/issues/16135,3,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since yesterday, March 13 we observe errors in our tests using our installed nightly view.; And also on LXPLUS, see here for an error from our build system: https://lcgapp-services.cern.ch/cdash/testDetails.php?test=24046676&build=314678. ### Reproducer. On lxplus for example; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-dbg/setup.sh; root; ```; gives; ```; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc13-dbg/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:112,error,errors,112,https://root.cern,https://github.com/root-project/root/issues/14964,3,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Some classes/functions that call classes/functions from the ROOT.Internal namespace will be broken when it is accidentally overridden by the ROOT.Math.Internal. ### Reproducer. ```; import cppyy; import ROOT; Internal_0 = ROOT.Internal; declaration = \; """"""; using namespace ROOT::Math;; """"""; cppyy.cppdef(declaration); Internal_1 = ROOT.Internal; print(Internal_0, Internal_1); ```. We see that `Internal_0` belongs to `namespace cppyy.gbl.ROOT.Internal`, whereas `Internal_1` belongs to `namespace cppyy.gbl.ROOT.Math.Internal`. This has the undesirable side effect that some classes/functions will be broken:. ```; ROOT.RDataFrame(10).Define(""x"", ""1"").Snapshot(""test"", ""test.root""); ROOT.RDF.Experimental.Distributed.Dask.RDataFrame(""test"", ""test.root""); ```. which will give the error; ```; AttributeError: <namespace cppyy.gbl.ROOT.Math.Internal at 0x864b200> has no attribute 'TreeUtils'. Full details:; type object 'Internal' has no attribute 'TreeUtils'; 'ROOT::Math::Internal::TreeUtils' is not a known C++ class; 'TreeUtils' is not a known C++ template; 'TreeUtils' is not a known C++ enum. ```. A temporary fix will be to override ROOT.Internal withe the correct namespace after it is changed. I am wondering if there are being ways to make sure that the classes/functions from the correct namespace are being called (in PyROOT)?. ### ROOT version. 6.30/04. ### Installation method. LCG(Swan). ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15035:858,error,error,858,https://root.cern,https://github.com/root-project/root/issues/15035,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Sometiems I need to make a ""sum"" of two RooPlot objects. (results of fits for two samples).; Typically for this task I make a loop over RooPlot components and ""sum"" them manually.; To make a fum of two `RooHist` obejcs I rely on a costructor of `RooHist` from two `RooHist` objects.; I observed that sumamtion of two RooPlot object is broken for for ROOT 6.30/04 ( I use ROOT instalaltion ; from LCG cvmff build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/; The sum of two histos is very different from expected. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist.; I've prepared a file with two `RooHist` objects in mu piblic AFS directory; ```; import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'); h1 = f.Get ( 'h1' ) ## RooHist ; h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum ; hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum ; h1.Draw ('same') ## draw the first component ; h2.Draw ('same') ## draw the second component . h1.SetLineColor(2); h2.SetLineColor(4); ```. . ### Reproducer. The script to preproduce the error is veyr trivial, but it shows no problems for all ""simple"" RooHist.; I've prepared a file with two `RooHist` objects in mu piblic AFS directory; ```; import ROOT. f = ROOT.TFile('/afs/cern.ch/user/i/ibelyaev/public/test.root','READ'); h1 = f.Get ( 'h1' ) ## RooHist ; h2 = f.Get ( 'h2' ) ## RooHist . ## it shoukd be the sum ; hs = ROOT.RooHist ( h1 , h2 ) . hs.Draw ('ap' ) ## draw the sum ; h1.Draw ('same') ## draw the first component ; h2.Draw ('same') ## draw the second component . h1.SetLineColor(2); h2.SetLineColor(4); ```. . ### ROOT version. ROOT 6.30/04. ### Installation method. LCG cvmfs build: /cvmfs/sft.cern.ch/lcg/views/LCG_105a_LHCB_7/. ### Operating system. x86_64-el9-gcc13-opt. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15052:619,error,error,619,https://root.cern,https://github.com/root-project/root/issues/15052,2,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Take this CI run as an example. https://github.com/root-project/root/actions/runs/5546846102/jobs/10127673943?pr=13246. The PR it belongs to, https://github.com/root-project/root/pull/13246, makes some changes to `DistRDF` code that should immediately trigger an error in the tests. This is evident from jenkins runs of the same PR, e.g. https://github.com/root-project/root/pull/13246#issuecomment-1634733833 . Instead, the builds of the new CI state they are running the DistRDF tests and they also pass. ```; 2410/2429 Test #1573: roottest-python-distrdf-dask-test_all ............................................................. Passed 127.24 sec; ```. Which is evidently wrong. One possible reason behind this is that the new CI runs on incremental builds and it's possible that Python files are not properly copied over after the changes. ### Reproducer. See the description above. ### ROOT version. pull request. ### Installation method. CI. ### Operating system. ubuntu22 . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13249:338,error,error,338,https://root.cern,https://github.com/root-project/root/issues/13249,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program; 31 | ""Enric Tejedor Saavedra"",\n 0\n };; ```; ```; /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ^; /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant; 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",; | ~ ^~~~~~~~~~~; /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token; 34 | } // namespace ROOT; | ^; ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14138:125,error,errors,125,https://root.cern,https://github.com/root-project/root/issues/14138,9,['error'],"['error', 'errors']"
Availability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. The ROOT CI has endemically suffered of instabilities. Every time people need to check if the bots report the same failures on other PRs. A possible implementation is to export PR context as part of every job via the GitHub API and each build to look at the last 10 finished jobs for common test failures... . ### Reproducer. N/A. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. The bugreport template should not have most of the fields that are currently marked as mandatory. That's not a tax declaration form.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14781:190,failure,failures,190,https://root.cern,https://github.com/root-project/root/issues/14781,2,['failure'],['failures']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The [EDM4hep](https://github.com/key4hep/EDM4hep) default data model definition includes multiple fields defined as fixed-length single-dimensional `std::array` of `float`, e.g. `std::array<float,6> covMatrix` in `edm4hep::TrackerHit` [1]. When data is written with these fields, it is not readable with ROOT, and an error is returned. This is reported under EDM4hep as well, at https://github.com/key4hep/EDM4hep/issues/262, but it appears this is an issue in ROOT, not EDM4hep. [1]: https://github.com/key4hep/EDM4hep/blob/60ad463c5474b51115345446edb5e90bf9dc33f5/edm4hep.yaml#L348. ### Reproducer. To reproduce the issue with the input file [edm4hep_events.root.gz](https://github.com/root-project/root/files/14365763/edm4hep_events.root.gz) (38K), use the follwing steps. ### In ROOT interpreter:; ```; ROOT::RDataFrame df(""events"", ""edm4hep_events.root""); df.Describe(); ```; returns; ```; root [0] ROOT::RDataFrame df(""events"", ""edm4hep_events.root""); (ROOT::RDataFrame &) A data frame built on top of the events dataset.; root [1] df.Describe(); Error in <TRint::HandleTermInput()>: std::runtime_error caught: TTree leaf TrackerHitPlanes.covMatrix[6] has both a leaf count and a static length. This is not supported.; ```. ### In Python interpreter:; ```; import ROOT; df = ROOT.RDataFrame(""events"", ""edm4hep_events.root""); df.Describe(); ```; returns; ```; In [1]: import ROOT; ...: df = ROOT.RDataFrame(""events"", ""edm4hep_events.root""); ...: df.Describe(); ...: ; Installed ROOT event loop hook.; ---------------------------------------------------------------------------; runtime_error Traceback (most recent call last); Cell In[1], line 3; 1 import ROOT; 2 df = ROOT.RDataFrame(""events"", ""edm4hep_events.root""); ----> 3 df.Describe(). runtime_error: ROOT::RDF::RDFDescription ROOT::RDF::RInterfaceBase::Describe() =>; runtime_error: TTree leaf TrackerHitPlanes.covMatrix[6] has both a leaf count and a static lengt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14790:392,error,error,392,https://root.cern,https://github.com/root-project/root/issues/14790,1,['error'],['error']
Availability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. The attached reproducer will fail to execute the ROOT Python script successfully when the `buggy::Constraint` class template is constrained instead of producing identical output to when `buggy::Constraint` is not constrianed:; ```.console; $ ./makeit good; number = 5; ```; ```.console; $ ./makeit; Error in <TInterpreter::AutoParse>: Error parsing payload code for class buggy::Constrained with content:; ⋮; ```. ### Reproducer. To induce the failure case:; ```.console; $ cd root-concepts-dict-bug; $ ./makeit; ```. To see the reference output:; ```.console; $ cd root-concepts-dict-bug; $ ./makeit good; ```. ### ROOT version. `ROOT 6.28/04@30598a8430`. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. Compiled with GCC 13.1.0/C++20.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13461:374,Error,Error,374,https://root.cern,https://github.com/root-project/root/issues/13461,3,"['Error', 'failure']","['Error', 'failure']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change in https://github.com/root-project/root/pull/16568 causes gtest to be always required, or at least in the config we use for LCG stacks in Release mode. See; https://lcgapp-services.cern.ch/cdash3/build/34617/file/1275. ```; In file included from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/src/TestSupport.cxx:14:; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/testsupport/inc/ROOT/TestSupport.hxx:28:10: fatal error: gtest/gtest.h: No such file or directory; 28 | #include ""gtest/gtest.h""; | ^~~~~~~~~~~~~~~; compilation terminated.; ```; Therefore this should fail in the configure step already. ### Reproducer. lcgcmake. ### ROOT version. master. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612:599,error,error,599,https://root.cern,https://github.com/root-project/root/issues/16612,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The code crashes once I use the `RooUnblindOffset` as it is in the snippet below. This seems to be working just fine when I use I use an older version of ROOT, e.g, 6.26/04 . I also attach the segmentation error if helps ; [segfault.txt](https://github.com/user-attachments/files/16984068/segfault.txt). ### Reproducer. ```c++; RooRealVar* tauB = new RooRealVar(""tau"",""tau"",1.6, 1.4 ,1.8 );; std::string blindname = ""blindTau"";; std::string blindString = ""McFluff"";; RooUnblindOffset* blind = new RooUnblindOffset(blindname.c_str(), blindname.c_str(), blindString.c_str(), 0.02, *tauB );; RooFormulaVar* Gamma = new RooFormulaVar(""Gamma"",""Gamma"",""-1/@0"" ,RooArgSet(*blind));; ```. ### ROOT version. ROOT 6.32.04. ### Installation method. installed from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16419:281,error,error,281,https://root.cern,https://github.com/root-project/root/issues/16419,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The issue arises under the following circumstances:; - The overall Probability Density Function is constructed using HistFactory.; - The Beeston Barlow Lite method is employed, thus `ActivateStatError()` is used, leading to a series of constrained `gamma_stat` errors.; - `HistFactorySimultaneous` is used (this bug does not occur if HistFactorySimultaneous is not used). The main problem surfaces **when executing MINOS, which alters the gamma parameter values (`gamma_stat_[...]`)**, contrary to our expectation that they should remain unmodified. To summarize, if the model is built using `HistFactory` as shown in the following code:; ```cpp; #include ""RooStats/HistFactory/Measurement.h""; #include ""RooStats/HistFactory/MakeModelAndMeasurementsFast.h""; #include ""RooStats/HistFactory/HistFactorySimultaneous.h""; using namespace RooFit;; using namespace RooStats;; using namespace HistFactory;. // Build the model; Measurement meas(""meas"", ""meas"");; // [...]; // [...]; RooWorkspace *w = MakeModelAndMeasurementFast(meas);; RooStats::ModelConfig *mc = (RooStats::ModelConfig*) w->obj(""ModelConfig"");; RooSimultaneous* model = (RooSimultaneous*)mc->GetPdf();; HistFactorySimultaneous* model_hf = new HistFactorySimultaneous( *model );. // Minimisation; RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));; RooMinimizer *minuit = new RooMinimizer(*nll_hf);; minuit->setOffsetting(kTRUE);; minuit->setStrategy(1);; minuit->migrad();. // Run MINOS on the parameter of interest; minuit->minos(*parameter_of_interest);; ```; Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug; After cloning the repository, you can run:; ```bash; root example.C; ```. After running it, you should observe the following:; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13142:336,error,errors,336,https://root.cern,https://github.com/root-project/root/issues/13142,1,['error'],['errors']
Availability,### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cmake changes some behavior WRT the ninja Generator (see https://cmake.org/cmake/help/latest/command/add_custom_command.html) and this seems to break root builds with:. ```; 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ++ cmake --build . --target install -j 28; 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0: ninja: error: build.ninja:27137: multiple outputs aren't (yet?) supported by depslog; bring this up on the mailing list if it affects you; 2024-03-27@10:00:24:DEBUG:ROOT:ROOT:0:; ```. ### Reproducer. Just update to the latest cmake and build root with the -G Ninja option. ### ROOT version. 6.30.1. ### Installation method. aliBuild. ### Operating system. macOS. ### Additional context. I think the issue is general and not related to macOS. Reverting back to Cmake 3.28 works around the issue. Using the makefile generator also works around the issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15064:385,error,error,385,https://root.cern,https://github.com/root-project/root/issues/15064,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:; ```back; export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase ; source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh; asetup main--dev4LCG,latest,Athena; python; ```; ```python; import ROOT, cppyy.ll; ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(); ```; ```txt; True; ```; ```python; cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0); ```; ```txt; TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)""; ```; but using a typedef to the DataVector works (note the real type of the returned object):; ```python; cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0); ```; ```txt; <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>; ```; and after the previous call autoloaded some libraries, the real type starts to work as well:; ```python; cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0); ```; ```txt; <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>; ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15996:101,error,error,101,https://root.cern,https://github.com/root-project/root/issues/15996,2,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The original report is available here:; https://root-forum.cern.ch/t/streamerinfo-is-not-stored-in-tfile-with-update-mode/57383. ```; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14171:98,avail,available,98,https://root.cern,https://github.com/root-project/root/issues/14171,1,['avail'],['available']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There is a `can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx` (at line 23) when running `ntuple_show.exe` on Windows. This code is the issue: `*end_arena = &(*vec.end());` one cannot dereference `end()`, [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. Note there is the same kind of potential issue at line 27 with `static_cast<IteratorData *>(*end_arena)->ptr = &(*vec.end());`. ### Reproducer. Run the `ntuple_show.exe` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13568:144,failure,failure,144,https://root.cern,https://github.com/root-project/root/issues/13568,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16051:539,Down,Download,539,https://root.cern,https://github.com/root-project/root/issues/16051,1,['Down'],['Download']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This code in [RTensor.hxx](https://github.com/root-project/root/blob/master/tmva/tmva/inc/TMVA/RTensor.hxx#L460):; ```; shape.insert(shape.end() + 1 + idx, 1);; ```; generates a debug assertion failure ""cannot seek vector iterator after end"".; As explained [in the standard](https://en.cppreference.com/w/cpp/container/vector/end): end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior. ### Reproducer. Compile ROOT in Debug mode on Windows with the `/RTC1` compiler flag and run the TMVA tests/tutorials. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13325:269,failure,failure,269,https://root.cern,https://github.com/root-project/root/issues/13325,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This issue stems from the problems arisen in #13134 . Among the `webgui` classes, there is the following layout:. ```cpp; // RFileDialog.hxx; class RFileDialog {; RBrowserData fBrowsable; ///<! central browsing element; };. // RBrowserData.hxx; class RBrowserDataCleanup;; class RBrowserData {; std::unique_ptr<RBrowserDataCleanup> fCleanupHandle; ///<! cleanup handle for RecursiveRemove; };. // RBrowserData.cxx; class RBrowserDataCleanup : public TObject {};; ```. Which leads to failures in `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`:. ```; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 0 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 1 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; ```. As per the discussion in the linked PR, it seems that `TClass` is always generating dictionaries for the `std::unique_ptr` data member, even if it's transient. As things stand, the only ""fix"" is to move the `RBrowserDataCleanup` class from the implementation file to the header, and adding `ClassDef` macro since it inherits from `TObject`. An alternative workaround was changing `std::unique_ptr<RBrowserDataCleanup>` to `RBrowserDataCleanup *`, which is treated transparently in case of a t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13361:558,failure,failures,558,https://root.cern,https://github.com/root-project/root/issues/13361,1,['failure'],['failures']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Tutorial macro crashes when running:; ```; root -l ""tutorials/fit/fit2dHist.C(11)"" ; ```. ### Reproducer. Produces output:; ```; Processing tutorials/fit/fit2dHist.C(11)...; Do global fit; Error in <ROOT::Math::Fitter::SetFCN>: wrong fit parameter settings; terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ```. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13906:264,Error,Error,264,https://root.cern,https://github.com/root-project/root/issues/13906,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using ROOT 6.30/04 built by EP-SFT stacks for `aarch64-el9-gcc13-dbg` on `lxplus-arm.cern.ch` the application is aborted because of a failed assert:; ```; root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/interpreter/llvm-project/clang/include/clang/Serialization/ModuleFile.h:77: clang::serialization::InputFile::InputFile(clang::FileEntryRef, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed.; ```. It turns out that the failure is implicitly caused by an updated version of GCC (from 11.3 to 11.4). ### Reproducer. Here is a redacted log a sessions exposing the problem:; ```; ssh lxplus-arm.cern.ch; > rpm -q gcc; gcc-11.4.1-2.1.el9.aarch64; > . /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/aarch64-el9/setup.sh; > . /cvmfs/sft.cern.ch/lcg/views/LCG_105a/aarch64-el9-gcc13-dbg/setup.sh; > root; root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/interpreter/llvm-project/clang/include/clang/Serialization/ModuleFile.h:77: clang::serialization::InputFile::InputFile(clang::FileEntryRef, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed.; >; ```. The optimized build, of course, works; ```; ssh lxplus-arm.cern.ch; > rpm -q gcc; gcc-11.4.1-2.1.el9.aarch64; > . /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/aarch64-el9/setup.sh; > . /cvmfs/sft.cern.ch/lcg/views/LCG_105a/aarch64-el9-gcc13-opt/setup.sh; > root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxarm64 on Feb 03 2024, 21:41:03 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; --------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14789:604,failure,failure,604,https://root.cern,https://github.com/root-project/root/issues/14789,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a ROOT version >= 6.24.06 (older versions above 6.24 may also be affected), double-clicking on leafs e.g. of a `TLorentzVector` stored in a `TTree` (so for example, `X()`) within a classic `TRootBrowser` does not fill the histogram anymore. . ### Reproducer. Create a new file with the following ROOT macro:; ```; {; TFile f(""tree.root"", ""RECREATE"");; TTree tree(""NOMINAL"", ""NOMINAL"");; TLorentzVector my_vector;; auto branch = tree.Branch(""my_vector"", &my_vector);; for (UInt_t i=0; i<100; ++i) {; my_vector.SetXYZT(i,i,i,i);; tree.Fill();; }; tree.Write();; }; ```; Then, enforce the old `TRootBrowser` is used, e.g.:; ```; echo ""Browser.Name: TRootBrowser"" >> ~/.rootrc; ```; Finally, open the file inside a `TBrowser`. Then, click on the ROOT file, `NOMINAL`, `my_vector`, and finally double-click on `X()`. . With the new `ROOT::Experimental::RWebBrowserImp` browser, this works, with the classic `TRootBrowser` in recent ROOT versions, the histogram stays empty, with a manual `Draw()` command, it works. . ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. can also be reproduced with 6.24.06 from CVMFS, but not older versions < 6.24.00.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13233:707,echo,echo,707,https://root.cern,https://github.com/root-project/root/issues/13233,1,['echo'],['echo']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces; ```; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""!; ```; Reason: ; `/proc/$$/cmdline` produces; ```; /usr/bin/qemu-x86_64; /usr/bin/bash; bash; --norc; ...; ```; and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:; ```; curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash; ./eic-shell; source /usr/local/bin/thisroot.sh; ```; I believe in linux the following also invokes the image with a qemu setting; ```; docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14085:217,ERROR,ERROR,217,https://root.cern,https://github.com/root-project/root/issues/14085,1,['ERROR'],['ERROR']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We have a HistFactory setup where one of the NormFactors is constant and set to -1. During the Workspace creation (HistoToWorkspaceFactoryFast) the code crashes:. ```; --------; RooFormulaVar::b2[ actualVars=(b) formula=""b*b"" ] = 0.294849. [#2] INFO:HistFactory -- making normFactor: mu_ttbar; [#2] INFO:HistFactory -- processing hist emu_OS_2b_Mc_regBin; [#2] INFO:HistFactory -- Mc_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_stop_2b_regBin; [#2] INFO:HistFactory -- stop_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_ttV_2b_regBin; [#2] INFO:HistFactory -- ttV_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_diboson_2b_regBin; [#2] INFO:HistFactory -- diboson_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- processing hist emu_OS_2b_wjets_2b_regBin; [#2] INFO:HistFactory -- wjets_2b_emu_OS_2b has no variation histograms ; [#2] INFO:HistFactory -- making normFactor: mu_Z; [#2] INFO:HistFactory -- processing hist emu_OS_2b_zjets_2b_regBin; [#2] INFO:HistFactory -- zjets_2b_emu_OS_2b has no variation histograms ; [#2] ERROR:HistFactory -- could not find variable minusONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:1262,ERROR,ERROR,1262,https://root.cern,https://github.com/root-project/root/issues/14225,1,['ERROR'],['ERROR']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. We have a custom histogram class which has a custom Merge method which is declared as protected. Instances of this class get merged together via TFileMerger. This worked fine until recently, when merging started to silently fail (only the first histogram was in the merged result, the others were ignored). The only thing we saw (which went unnoticed) is a message a few lines above saying:. ```c++; input_line_35:7:57: error: 'Merge' is a protected member of 'StepTHnT<TArrayF>'; new (ret) (long long) (((StepTHnT<TArrayF>*)obj)->Merge(*(TCollection**)args[0]));; ^; G__O2Framework dictionary payload:254:12: note: declared protected here; Long64_t Merge(TCollection* list) override;; ^; ```. Is this a known issue worth investigating? In the end our solution was to mark the Merge method as public, however it would be good to understand what happened and if the new behaviour is the desired one (and it would be good to have TFileMerger to throw if it does not manage to do its job). ### Reproducer. ```; void merge_test(); {; TFileMerger merger(kFALSE, kFALSE);; merger.OutputFile(""AnalysisResults.root"");; ; ifstream fin(""input_data.txt"");; while (fin.good()); {; char buffer[2000];; fin.getline(buffer, 2000);; ; if (strlen(buffer) == 0); continue;; ; Printf(""%s"", buffer);; ; merger.AddFile(buffer);; }; ; merger.Merge(); ; }; ```. ### ROOT version. 6.30.01. ### Installation method. aliBuild. ### Operating system. Linux, macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14963:495,error,error,495,https://root.cern,https://github.com/root-project/root/issues/14963,1,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When I used RNTupleWriter to store CMS miniAOD like data using LZMA compression with level 4 I got libc errors about problems with free. Running valgrind on the job turned up many 'invalid writes' in calls to lzma. ```; ==1855575== Invalid write of size 1; ==1855575== at 0x4046BE3: memmove (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/external/valgrind/3.22.0-e989c977f8949fc48f1bc1206f1f87c8/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==1855575== by 0x700C7DA: ??? (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/external/xz/5.2.5-6f3f49b07db84e10c9be594a1176c114/lib/liblzma.so.5.2.5); ==1855575== by 0x7011C2F: ??? (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/external/xz/5.2.5-6f3f49b07db84e10c9be594a1176c114/lib/liblzma.so.5.2.5); ==1855575== by 0x700CB55: lzma_code (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/external/xz/5.2.5-6f3f49b07db84e10c9be594a1176c114/lib/liblzma.so.5.2.5); ==1855575== by 0x596A683: R__zipLZMA (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/lcg/root/6.31.01-184a5ee42f3c094c02e1b303c901e8e4/lib/libCore.so); ==1855575== by 0x4D6E315: ROOT::Experimental::Detail::RPageSink::SealPage(ROOT::Experimental::Detail::RPage const&, ROOT::Experimental::Detail::RColumnElementBase const&, int, void*, bool) (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/lcg/root/6.31.01-184a5ee42f3c094c02e1b303c901e8e4/lib/libROOTNTuple.so); ==1855575== by 0x4D6378E: ROOT::Experimental::Detail::RPageSinkBuf::CommitPage(ROOT::Experimental::Detail::RPageStorage::RColumnHandle, ROOT::Experimental::Detail::RPage const&) (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/lcg/root/6.31.01-184a5ee42f3c094c02e1b303c901e8e4/lib/libROOTNTuple.so); ==1855575== by 0x4CDDA89: ROOT::Experimental::Detail::RColumn::Flush() (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/lcg/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14508:179,error,errors,179,https://root.cern,https://github.com/root-project/root/issues/14508,1,['error'],['errors']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When TF1::Save with default arguments (all 0), stored buffer incorrect and cannot be used.; When all zeros are provided as argument, it suppose to write function value in pre-defined region between fXmin and fXmax. But makes failure by 0.5 bin. . ### Reproducer. Simple reproducer:; ```; void test_save(); {; auto f1 = new TF1(""linear"", ""x"", -5, 5);; f1->SetNpx(10);; f1->Draw(""l"");; Double_t xx[1] = { 0 };; // this works properly; f1->Save(-5, 5, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; // calling with default args make mistake by 0.5 bin; f1->Save(0, 0, 0, 0, 0, 0);; printf(""Get saved at 0 %f\n"", f1->GetSave(xx));; }; ```; [test_save.cxx.txt](https://github.com/root-project/root/files/13117827/test_save.cxx.txt). It expects to return 0 for x==0, but for second case it returns 0.5.; Running the example :. ```; Get saved at 0 0.000000; Get saved at 0 0.500000; ```. ### ROOT version. master, all recent releases. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13927:300,failure,failure,300,https://root.cern,https://github.com/root-project/root/issues/13927,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When adding a commit to a PR, the rerun of clang-format fails with an output like the following. ```; + echo 'Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d'; Running clang-format against branch master, with hash 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ git diff --name-status 60f72758eafe149ffba9bc6d3742eb10cc8d892d; ++ grep -i -v LinkDef; ++ sed -E 's,^.[[:space:]]+,,'; ++ grep -v -E '^D +'; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + COMMIT_FILES=; +++ which clang-format; ++ git-clang-format --commit 60f72758eafe149ffba9bc6d3742eb10cc8d892d --diff --binary /usr/bin/clang-format; fatal: bad object 60f72758eafe149ffba9bc6d3742eb10cc8d892d; + RESULT_OUTPUT=; ```. ### Reproducer. Submit a PR, add a commit to it. ### ROOT version. master. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15107:179,echo,echo,179,https://root.cern,https://github.com/root-project/root/issues/15107,1,['echo'],['echo']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When attempting to produce a PCM from a module map specifying a header that cannot be found, I get the message; ```; /scratch/greenc/build/mrb-art-summer/e28-prof/build_slf7.x86_64/critic/critic/test/art/sampling-input/module.modulemap:3:10: error: cannot emit module critic_test_art_sampling-input_dict: size must be explicitly specified for missing header file ""canvas/Persistency/Common/Sampled.h""; header ""canvas/Persistency/Common/Sampled.h""; ^; ```; This—while unwelcome—is reasonable. However, `rootcling` then exits with status code 0 and the continues with the PCM file never generated. ### Reproducer. 1. Create a simple module map attempting to use a nonexistent header, e.g.; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; link ""libcanvas.so""; }; ```; 1. Attempt to create a PCM from it:; ```; rootcling --cxxmodule -f -v4 ...; ```; 1. Check the error code:; ```; echo $?; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. * GCC13.1.0/C++20",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13675:317,error,error,317,https://root.cern,https://github.com/root-project/root/issues/13675,3,"['echo', 'error']","['echo', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT from source, I got an error:. ```; /opt/root/src/tree/dataframe/src/RNTupleDS.cxx: In member function ‘virtual const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations& ROOT::Experimental::Internal::RRDFCardinalityField::GetColumnRepresentations() const’:; /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:25: error: ‘kSplitIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kSplitIndex32’?; 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},; | ^~~~~~~~~~~~~; | kSplitIndex32; /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:78:55: error: ‘kIndex64’ is not a member of ‘ROOT::Experimental::EColumnType’; did you mean ‘kIndex32’?; 78 | {{EColumnType::kSplitIndex64}, {EColumnType::kIndex64}, {EColumnType::kSplitIndex32}, {EColumnType::kIndex32}},; | ^~~~~~~~; | kIndex32; /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:79:12: error: no matching function for call to ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(<brace-enclosed initializer list>, <brace-enclosed initializer list>)’; 79 | {});; | ^; In file included from /opt/root/src/tree/dataframe/src/RNTupleDS.cxx:19:; /opt/root/install/include/ROOT/RField.hxx:111:7: note: candidate: ‘ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::RColumnRepresentations(const TypesList_t&, const TypesList_t&)’; 111 | RColumnRepresentations(const TypesList_t &serializationTypes, const TypesList_t &deserializationExtraTypes);; | ^~~~~~~~~~~~~~~~~~~~~~; /opt/root/install/include/ROOT/RField.hxx:111:49: note: no known conversion for argument 1 from ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RFieldBase::RColumnRepresentations::TypesList_t&’ {aka ‘const std::vector<std::vector<ROOT::Experimental::EColumnType> >&’}; 111 | RColumnRepresentations(const TypesList_t &seria",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13103:116,error,error,116,https://root.cern,https://github.com/root-project/root/issues/13103,3,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch; Index: root-6.30.02/math/minuit2/StandAlone.cmake; ===================================================================; --- root-6.30.02.orig/math/minuit2/StandAlone.cmake; +++ root-6.30.02/math/minuit2/StandAlone.cmake; @@ -40,8 +40,8 @@ endfunction(); include(copy_standalone.cmake). # Copy these files in if needed; -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE; - FILES core/foundation/inc/ROOT/RVersion.hxx); +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE; + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION .; FILES LGPL2_1.txt); ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14157:161,error,errors,161,https://root.cern,https://github.com/root-project/root/issues/14157,2,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When compiling ROOT from source, I got an error:. ```; /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:; /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’?; 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));; | ^~~~~~~~~~~~~~~; | ROperator_Slice; /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’; 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));; | ^~~~~; make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1; make[2]: *** Waiting for unfinished jobs....; make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx; @@ -18,6 +18,7 @@; **********************************************************************************/; ; #include ""TMVA/RModelParser_Keras.h""; +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src; cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13102:117,error,error,117,https://root.cern,https://github.com/root-project/root/issues/13102,4,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When input files to `RDataFrame` are remote files, force caching of remote files does not work and the remote files will be downloaded every time. . ### Reproducer. ```; import os; import ROOT. user = os.environ['USER']; outdir = f""/eos/user/{user[0]}/{user}""; filename = os.path.join(outdir, ""test.root""); # create dummy root file; ROOT.RDataFrame(100).Define(""x"", ""1"").Snapshot(""test"", filename). ROOT.TFile.SetCacheFileDir(""/tmp"", True, True); # this does not trigger loading of cached root file; ROOT.RDataFrame(""test"", f""root://eosuser.cern.ch/{filename}"").Sum(""x"").GetValue(); ```. This is because internally RDataFrame will create a TChain using [`ROOT.Internal.TreeUtils.MakeChainForMT(treename)`](https://root.cern/doc/master/RLoopManager_8cxx_source.html#l01169), which creates a `TChain` object with the mode `ROOT.TChain.kWithoutGlobalRegistration`. This in turn forces the TFile open option to be [""READ_WITHOUT_GLOBALREGISTRATION""](https://root.cern/doc/master/TChain_8cxx_source.html#l00505). This causes the TFile to be opened without caching since it only checks the [fgCacheFileForce](https://root.cern/doc/master/classTFile.html#a04d17cde8f18d500653077fc7d7dc3ac) flag when option is [""READ""](https://root.cern/doc/master/TFile_8cxx_source.html#l04182). ### ROOT version. 6.30/04 (LCG105a). ### Installation method. LCG (Swan). ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15028:199,down,downloaded,199,https://root.cern,https://github.com/root-project/root/issues/15028,1,['down'],['downloaded']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When passing some identical histograms to KSTest of TH1, the code return probability 0 in case of the ""X"" option (runing toys) while the probablity of the default KS test is 1 (as expected). ### Reproducer. running the following macro reproduces the issue:; ```c++; void kstest() {. TFile* f = TFile::Open(""kstest.root"", ""READ"");. TH1D* h1 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/nominal/SR2_2L_el_tt_Conv"");; TH1D* h2 = f->Get<TH1D>(""SR2_2L_el/tt_Conv/FSRAlphaS_ttbar/SR2_2L_el_tt_Conv_FSRAlphaS_ttbar_Shape_Down"");. std::cout << ""integral h1: "" << h1->Integral() << "", h2: "" << h2->Integral() << ""\n"";. const double probX = h1->KolmogorovTest(h2, ""X"");; const double prob = h1->KolmogorovTest(h2);; std::cout << ""KS probability using toys is: "" << probX << "", without toys it is: "" << prob << ""\n"";; }; ```; with the input file available in this public afs repository: /afs/cern.ch/user/t/tdado/public/kstest.root. I could not reproduce it with a dummy histograms, so it must be somehow related to the actual values in the bins?. ### ROOT version. ROOT Version: 6.28/04; Built for linuxx8664gcc on Jul 10 2023, 18:22:00; From v6-28-04@v6-28-04. ### Installation method. source from LCG. ### Operating system. CentOS7 (lxplus). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13697:899,avail,available,899,https://root.cern,https://github.com/root-project/root/issues/13697,1,['avail'],['available']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running the `gtest-hist-histv7-test-histhistv7testUnit` test, there is the following error on Windows:; ```; Run-Time Check Failure #3 - The variable 'bins_per_hyperplane' is being used without being initialized.; ```; in `RHistImpl.hxx` at line 936:; ```; Internal::RComputeLocalBinsInitialisation<NDIMS - 1, NDIMS, decltype(fAxes)>()(bins_per_hyperplane, regular_bins_per_hyperplane, fAxes);; ```. ### Reproducer. Run the `gtest-hist-histv7-test-histhistv7testUnit` test in debug mode with the /RTC1 flag on Windows. ### ROOT version. master (6.29/01). ### Installation method. built from source. ### Operating system. Windows. ### Additional context. This is visible on Windows with RTC1, but is relevant to all OSes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13569:165,error,error,165,https://root.cern,https://github.com/root-project/root/issues/13569,2,"['Failure', 'error']","['Failure', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16119:145,error,errors,145,https://root.cern,https://github.com/root-project/root/issues/16119,2,"['Error', 'error']","['Error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```; 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); 9.604 Call Stack (most recent call first):; 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency); 9.604 CMakeLists.txt:363 (find_package); ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads; ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\; apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\; apt-get install -y dialog apt-utils&&\; apt-get install -y tzdata &&\; apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038:254,Error,Error,254,https://root.cern,https://github.com/root-project/root/issues/16038,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to draw a TH1F from interactive interpreter, i get a bus error and the program crashes. ; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/06 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 03 2024, 10:22:56 |; | From tags/v6.30.06-0-g4f4e716372@v6.30.06-0-g4f4e716372 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TH1F* h=new TH1F(""histo"",""h"",5,-10,10);; root [1] h->Fill(5);; root [2] h->Draw();. *** Break *** bus error; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info); [/System/Library/Fram",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15129:144,error,error,144,https://root.cern,https://github.com/root-project/root/issues/15129,2,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When using the [mold](https://github.com/rui314/mold) linker there is a segmentation fault when running `rootcling`, like here; ```; [7643/9449] Generating G__RHTTP.cxx, ../../lib/RHTTP.pcm; FAILED: net/http/G__RHTTP.cxx lib/RHTTP.pcm /root/builddir/net/http/G__RHTTP.cxx /root/builddir/lib/RHTTP.pcm; cd /root/builddir/net/http && /usr/bin/cmake -E env LD_LIBRARY_PATH=/root/builddir/lib:/usr/local/lib: ROOTIGNOREPREFIX=1 /root/builddir/bin/rootcling -rootbuild -v2 -f G__RHTTP.cxx -cxxmodule -s /root/builddir/lib/libRHTTP.so -m RIO.pcm -m Thread.pcm -excludePath /root -excludePath /root/builddir/ginclude -excludePath /root/builddir/externals -excludePath /root/builddir/builtins -DUSE_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h TH",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15473:160,fault,fault,160,https://root.cern,https://github.com/root-project/root/issues/15473,1,['fault'],['fault']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With a simple `module.modulemap` along the lines of:; ```; module ""critic_test_art_sampling-input_dict"" {; requires cplusplus; header ""canvas/Persistency/Common/Sampled.h""; export *; link ""libcanvas.so""; }; ```; The specified header is not found—as it would be in C++ source—even in the presence of; ```; -I<path/to/parent/of/relative/path>; ```; on the `rootcling` command line. ### Reproducer. 1. Put a header from which to make a ROOT PCM in a directory _not_ under the intended `rootcling` execution directory.; 2. Make a suitable `module.modulemap` specifying the location of the header relative to an ancestor directory not the immediate parent.; 3. Invoke `rootcling` to produce the PCM using the command line option `-I<ancestor>`; 4. Observe the failure to find the header. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. UPS. ### Operating system. SL7. ### Additional context. See also https://github.com/root-project/root/issues/13675.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13689:830,failure,failure,830,https://root.cern,https://github.com/root-project/root/issues/13689,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With newer versions of cmake like 3.30.5 at least some of ExternalProject_Add'ed builtins fail to compile with an error like; ```; gmake[6]: *** read jobs pipe: Bad file descriptor. Stop.; gmake[6]: *** Waiting for unfinished jobs....; gmake[5]: *** [CMakeFiles/Makefile2:97: CMakeFiles/pcre.dir/all] Error 2; gmake[4]: *** [CMakeFiles/Makefile2:104: CMakeFiles/pcre.dir/rule] Error 2; gmake[3]: *** [Makefile:179: pcre] Error 2; ```; (here builtin PCRE failed). I don't know with which version of cmake this starts failing, but we (SPI/LCG) moved from 3.26.2 to 3.30.; Unless one limits oneself to a small number of `--jobs`?. ### Reproducer. On lxplus or equivalent machines with CVMFS for example. ```; export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.30.5/Linux-x86_64/bin/:$PATH; git clone https://github.com/root-project/root.git; cd root; mkdir build; cd build; cmake -D builtin_pcre=ON ..; make -j8; ```. ### ROOT version. any? (definitely HEAD). ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16733:189,error,error,189,https://root.cern,https://github.com/root-project/root/issues/16733,4,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. With the latest glibc update in Fedora Rawhide (glibc-2.37.9000-15.fc39) the strlcpy and strlcat were added to the standard library. The definitions in the system header string.h:. ~~~.c; #ifdef __USE_MISC; /* Copy at most N - 1 characters from SRC to DEST. */; extern size_t strlcpy (char *__restrict __dest,; 		 const char *__restrict __src, size_t __n); __THROW __nonnull ((1, 2)) __attr_access ((__write_only__, 1, 3));. /* Append SRC to DEST, possibly with truncation to keep the total size; below N. */; extern size_t strlcat (char *__restrict __dest,; 		 const char *__restrict __src, size_t __n); __THROW __nonnull ((1, 2)) __attr_access ((__read_write__, 1, 3));; #endif; ~~~. conflict with the ROOT header core/clib/inc/strlcpy.h:. ~~~.c++; size_t strlcpy(char *dst, const char *src, size_t siz);; size_t strlcat(char *dst, const char *src, size_t siz);; ~~~. Resulting in compilation errors due to different exception specifiers:. ~~~; In file included from /usr/include/c++/13/cstring:42,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of 'size_t strlcpy(char*, const char*, size_t) noexcept' has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /builddir/build/BUILD/root-6.28.04/core/textinput/src/Getline.cxx:13:; /builddir/build/BUILD/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration 'size_t strlcpy(char*, const char*, size_t)'; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of 'size_t strlcat(char*, const char*, size_t) noexcept' has a different exception specifier; 512 | extern ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13156:970,error,errors,970,https://root.cern,https://github.com/root-project/root/issues/13156,1,['error'],['errors']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. davix fails to build with (so far) two errors related to differences in GNU and BSD tooling:; `sed -i` requires an argument in BSD land, does not in GNU (that requires patching an internal patching script); `make -j` also needs an argument on BSDs (not sure yet what the proper way to fix it is, probably an explicit `BUILD_COMMAND ""make""` would fix it as build seems to continue just fine after manually issuing `make` in the build directory); I'll propose a patch soon. ### Reproducer. cmake --build . -j4. ### ROOT version. recent master. ### Installation method. source. ### Operating system. FreeBSD 14.0-RELEASE. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14697:114,error,errors,114,https://root.cern,https://github.com/root-project/root/issues/14697,1,['error'],['errors']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. ATLAS is seeing a number of unit test failures in the dev4LCG/el9 nightlies; (which use root-6.28.00-patches); that are linked to trying to operate on Eigen objects from pyroot.; I've managed to reduce this to a simple, standalone example, which reveals; that the issue has to do with a template overload for operator(). The reproducer is in the attached archive. The included setup script; should be appropriate for lxplus9.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it crashes with a segmentation violation. From gdb, the stack trace is:. ```; #0 0x00007ffff7558f13 in std::construct_at<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__location=0x5f3a3a676e697274); at /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/bits/stl_construct.h:97; #1 0x00007ffff75588c3 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (; __p=0x5f3a3a676e697274, __a=...); at /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/bits/alloc_traits.h:539; #2 std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff75ba167, __x=@0x7fffffff7c40: 0x73abec0); at /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/x86_64-el9/include/c++/13.1.0/bits/stl_vector.h:1281; #3 0x00007ffff75624a9 in CPyCppyy::CPPOverload::AdoptMethod (; this=0x7ffff75fe9a0 <CPyCppyy::TemplateProxy_Type>, pc=0x73abec0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:946; #4 0x00007ffff759fb6a in CPyCppyy::TemplateProxy::AdoptMethod (; this=0x7fffd65c01f0, pc=0x73abec0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111; #5 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410:119,failure,failures,119,https://root.cern,https://github.com/root-project/root/issues/13410,1,['failure'],['failures']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14156:235,error,errors,235,https://root.cern,https://github.com/root-project/root/issues/14156,3,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. if at the prompt, it is possible to change the type and value of a variable by using an innocent cast. ### Reproducer. At the root prompt:; ```; root [0] double x = 3; (double) 3.0000000; root [1] int(x); (int) 0; root [2] x; (int) 0; ```; This example is a stripped down version of [this post on the forum](https://root-forum.cern.ch/t/a-strangeness-for-init-value-for-root-prompt/57576) by `cxwx1`. ### ROOT version. MacOs 14, ROOT 6.30.02 and master (llvm 13 and 16) from sources; EL9, ROOT 6.30.02 and master (llvm 13 and 16) from packages. ### Installation method. sources/packages. ### Operating system. macos/el9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14259:342,down,down,342,https://root.cern,https://github.com/root-project/root/issues/14259,1,['down'],['down']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. on MacOS 15, m1 pro, see the compiling errors below:. [ 77%] Built target clingMetaProcessor; [ 77%] Built target CLING; [ 77%] Built target LLVMRES; [ 77%] Built target ClingUtils; [ 77%] Built target Dictgen; [ 77%] Built target rootcling_stage1; [ 77%] Built target MetaCling; [ 77%] Generating G__Core.cxx, ../lib/Core.pcm; [ 77%] Linking CXX shared library ../../../lib/libCling.so; [ 77%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:114,error,errors,114,https://root.cern,https://github.com/root-project/root/issues/16498,1,['error'],['errors']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. root [0] size_t al(size_t p, size_t alignment) { return ((p + (alignment - 1)) & ~(alignment - 1)); } ; root [1] void printextra(size_t use, size_t p, size_t alignment) { auto realstart = al(p+use, alignment); std::cout << ""alloc: "" << p << "" data: "" << realstart << "" waste: "" << realstart - p - use << '\n' };; ROOT_prompt_1:1:196: error: expected ';' after expression; void printextra(size_t use, size_t p, size_t alignment) { auto realstart = al(p+use, alignment); std::cout << ""alloc: "" << p << "" data: "" << realstart << "" waste: "" << realstart - p - use << '\n' };; ^; ;; root [2] void printextra(size_t use, size_t p, size_t alignment) { auto realstart = al(p+use, alignment); std::cout << ""alloc: "" << p << "" data: "" << realstart << "" waste: "" << realstart - p - use << '\n'; };; root [3] printextra(24, 56, 64); cling JIT session error: Failed to materialize symbols: { (main, { __ZNSt3__1lsB7v160006INS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c }) }; root [4] .q. ### Reproducer. Copy/paste this on the root prompt:; ```; size_t al(size_t p, size_t alignment) { return ((p + (alignment - 1)) & ~(alignment - 1)); } ; void printextra(size_t use, size_t p, size_t alignment) { auto realstart = al(p+use, alignment); std::cout << ""alloc: "" << p << "" data: "" << realstart << "" waste: "" << realstart - p - use << '\n' };; void printextra(size_t use, size_t p, size_t alignment) { auto realstart = al(p+use, alignment); std::cout << ""alloc: "" << p << "" data: "" << realstart << "" waste: "" << realstart - p - use << '\n'; };; printextra(24, 56, 64); ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14788:409,error,error,409,https://root.cern,https://github.com/root-project/root/issues/14788,2,['error'],['error']
Availability,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. when doing a pol1 fit for the TGraphErrors in PyROOT, fitter goes nuts if slope is<0, and x errors< y errors.; easily reproducible; all conditions must be met; using guesses doesn't help, not limiting.; i tried limiting/fixing values, the .Draw() options shows that the red fit line somehow is drawn as if slope is positive. seems like a typo in the library somewhere... OUTPUT of the code; ```; FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 193 CALLS 194 TOTAL; EDM=3.27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:167,error,errors,167,https://root.cern,https://github.com/root-project/root/issues/13895,4,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A commit (https://github.com/root-project/root/commit/b327dd8fd159494666842607708140c429fa4055) deleted an important feature about authentication using local accounts from TServerSocket. I think it is wrong that the file is not used. I guess SrvAuthenticate is defined in DaemonUtils.[h|cxx] and refers to the libSrvAuth !; ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Error(""Authenticate"", ""can't find SrvAuthenticate"");; ```. Additionally, https://root.cern/doc/master/authserv_8C.html is not working due to this. Knowing that there are all these ./src/net/net/ useful classes about remote connections.. why is that TSocket is being deprecated ? https://github.com/root-project/root/commit/8ef5d04e0102290cc2457c5a7cc40fc9874fa006 . This is incredibly useful feature.. same for all other basic communication protocol developped in `./net/net/` directory. ```; $ grep srvauthenticate -i -R ../src; ../src/net/net/src/TServerSocket.cxx:TVirtualMutex *gSrvAuthenticateMutex = 0;; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: R__LOCKGUARD2(gSrvAuthenticateMutex);; ../src/net/net/src/TServerSocket.cxx: // Locate SrvAuthenticate; ../src/net/net/src/TServerSocket.cxx: Func_t f = gSystem->DynFindSymbol(srvlib,""SrvAuthenticate"");; ../src/net/net/src/TServerSocket.cxx: Er",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13387:955,Error,Error,955,https://root.cern,https://github.com/root-project/root/issues/13387,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15370:291,avail,available,291,https://root.cern,https://github.com/root-project/root/issues/15370,2,['avail'],['available']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. After I upgraded my M1 pro MacBook (2021) to MacOS 14.5 last night, I found there are many error printings every time I open the ROOT prompt or execute a program with ROOT libraries linked. Then I tried to update the ROOT to the master version last night and rebuild it. Now I found every time I create a TCanvas in the ROOT program, it prints the errors:. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 15 2024, 03:36:37 |; | From heads/master@v6-31-01-1952-gfb9ba02037 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TCanvas *tc1 = new TCanvas(); Error in <TGHScrollBar::TGHScrollBar>: arrow_*.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found. *** Break *** segmentation violation; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info); [/Users/josiahlee/WORK/Tools/root_install_master/lib/libGui.so] TGCanvas::Layout() (no debug info) ; ```. ### Reproducer. 1. Open root prompt on MacOS 14.5; 2. type ""TCanvas *tc=new TCanvas();"". ### ROOT version. heads/master@v6-31-01-1952-gfb9ba02037. ### Installation method. build from source. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15517:166,error,error,166,https://root.cern,https://github.com/root-project/root/issues/15517,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,. I have defined an enum class type, such that I can switch between mathematical representations easily. Considering the reproducer below, I get the following error message:; ```; Forward declarations from [..]/install/lib/libXXX.rootmap:3:11: error: unknown type name 'MyEnum'; template <MyEnum> class MyClass;; ^; ```. Here is an overview of the rootmap, MyEnum is not declared ; ``` #Rootmap; { decls }; [..]; template <MyEnum> class MyClass;; [..]; [ libXXX.dylib ]; [...]; ```. How can I fix the root map ? ; It seem `enum class` is missing in root map so MyEnum is not defined. ### Reproducer. Here are some abstractions:; ```; # LinkDef.h; #pragma link C++ enum class MyEnum;. #pragma link C++ class MyClass<MyEnum::E0>+;; #pragma link C++ class MyClass <MyEnum::E1>+;; #pragma link C++ class MyClass <MyEnum::E2>+;. # Header.h; enum class MyEnum { E0, E1, E2 };; template <MyEnum T = MyEnum::E0>; class MyClass : public MyClassAbstract; {; // [...]; }; ```. ### ROOT version. v6.32.04. ### Installation method. build from source. ### Operating system. macOS 15.0. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16496:240,error,error,240,https://root.cern,https://github.com/root-project/root/issues/16496,2,['error'],['error']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,; I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```; <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>; <variable name=""testVariable"" value=""someNumbers[1]""/>; ```. ROOT complains when parsing the GDML, with the following error:. ```; input_line_155:2:81: error: subscripted value is not an array, pointer, or vector; Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }; ~~~~^~; Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'; aborting; ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,; Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```; root -l; TGeoManager::Import(""geometry_test.gdml""); ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13074:359,error,error,359,https://root.cern,https://github.com/root-project/root/issues/13074,7,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hi all,. [MSVC] ROOT_x86 failed due to failed due to libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char). It can be reproduced on this commit `1f86c24` Could you please help look at this issue? Thanks in advance!. ### Reproducer. Steps to reproduce the behavior:; 1. https://github.com/root-project/root C:\gitP\root-project/root; 2. Open a VS2022 x86 cmd; 3. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=x86 -arch=x86 & set _CL_= /Bcapture_repro C:\a\_work\_temp\rwc_project_logs\ROOT\preprocessed_repro_build & set _LINK_= /onfailrepro:C:\a\_work\_temp\rwc_project_logs\ROOT\link_repro_build; 4. cd /d C:\gitP\root-project\root\build_x86; 5. msbuild /m /p:Platform=Win32 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. Error Message: After updating the hash commit, ROOT_amd64 passed but ROOT_X86 failed with the following error:; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"". **What is the expected behaviour?**; Project Pass. **Operating System**; Windows. **What versions of the operating systems?**; VS 2022 + Windows Server 2022 Datacenter. **Architectures**; 86-bit. **Stacktrace**; No response. **Plug-in formats (if applicable)**; No response. **Plug-in host applications (DAWs) (if applicable)**; No response. **Testing on the develop branch**; The bug is present on the develop branch. ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336:143,error,error,143,https://root.cern,https://github.com/root-project/root/issues/15336,4,"['Error', 'error']","['Error', 'error']"
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I did the following:; ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```; And I get the following while building cling errors:; ```; [ 76%] Generating G__Core.cxx, ../lib/Core.pcm; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:263,error,errors,263,https://root.cern,https://github.com/root-project/root/issues/16451,2,['error'],"['error', 'errors']"
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I need help to understand an issue which we have when running on Linux on ARM when reading a file which was serialised on x86. Notice that this platform is peculiar, because `char` (without specifier) is unsigned, and not signed (char sign-ess is implementation detail in the standard). This is important because `mPadSubset` that you will see below is an `enum PadSubset : char`. Running in valgrind, the issue appears as dumped below. What puzzles me and what I think is the culprit of the segmentation fault is the line:. ```; [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]; ```. as I would have expected it to be len=1. Can you explain me what is going on?. ```; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]: Creating StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 2; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=2, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=1, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312:580,fault,fault,580,https://root.cern,https://github.com/root-project/root/issues/16312,1,['fault'],['fault']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried the new web graphics booting ROOT with `root --web` building from sources the `master` branch. ### Reproducer. ```; -> root --web; ------------------------------------------------------------------; | Welcome to ROOT 6.33/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Apr 25 2024, 07:37:38 |; | From heads/master@v6-31-01-1759-ga6c7efff71 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TH1F h(""h"",""h"",64, -4, 4); (TH1F &) Name: h Title: h NbinsX: 64; root [1] h.FillRandom(""gaus""); root [2] h.Draw(); Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15340:817,Error,Error,817,https://root.cern,https://github.com/root-project/root/issues/15340,1,['Error'],['Error']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I tried to run std::stable_sort on a TTreeReaderArrray. The sorting works fine on macOS, but a colleague tried to run the same code on Ubuntu and reported a crash. I then managed to reproduce the crash on CentOS 7. I investigated the error, and it seems that std::stable_sort assumes that it can decrement and invalid pointer to get a pointer to the last array of an element. However, TTreeReaderArray invalidates the iterator by setting fArray=0 when fIndex is incremented to fIndex>=fSize. This means that the information about the associated array is lost, and the subsequent decrement and dereference will fail. I would assume this could be fixed by marking an invalid iterator with a special value for fIndex (instead of setting fArray=0). So my question would be if TTreeReaderArray is supposed to be sortable, or if I am trying something that's outside of the scope of the implementation?. I know my reproducer requires ALICE O2. ### Reproducer. I encountered the bug with a tree that holds classes from the ALICE O2 framework. I wrote a minimal macro `sortbug.C` that fails when run in compiled mode in an O2 root environment. Data files are available from https://cernbox.cern.ch/s/ypjoEC6awvYpjwR. The command is root `sortbug.C+`. The macro content is:; ```; #if !defined(__CLING__) || defined(__ROOTCLING__). #include <iostream>; //std::cout << ""including header files"" << std::endl;. #include <DataFormatsTRD/Digit.h>; #include <DataFormatsTRD/Tracklet64.h>. #include <TFile.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. #endif. /// comparison function to order digits by det / row / MCM / -channel; bool comp_digit(const o2::trd::Digit& a, const o2::trd::Digit& b); {; if (a.getDetector() != b.getDetector()); return a.getDetector() < b.getDetector();. if (a.getPadRow() != b.getPadRow()); return a.getPadRow() < b.getPadRow();. if (a.getROB() != b.getROB()); return a.getROB() < b.getROB();. if (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:309,error,error,309,https://root.cern,https://github.com/root-project/root/issues/13314,1,['error'],['error']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I updated my mac system to 15 yesterday. My Mac is M1. The root did not work and I rebuilt it. However, I couldn't build and got the error; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16486:208,error,error,208,https://root.cern,https://github.com/root-project/root/issues/16486,2,['error'],['error']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I use the root's REPL to create my code.when my function return type is long double,the REPL report me error; ![image](https://github.com/root-project/root/assets/54460355/d2762097-cbbc-4844-b5c9-f129eb9576ef). ### Reproducer. long double t(long double x) {; return x*x;; }. ### ROOT version. ROOT 6.29/01 ; Built for linuxx8664gcc on Jul 20 2023, 11:06:00 |; | From tag , 21 December 2022 |; | With c++ (GCC) 13.1.1 20230429. ### Installation method. build from source. ### Operating system. Manjaro Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13288:178,error,error,178,https://root.cern,https://github.com/root-project/root/issues/13288,1,['error'],['error']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. On MacOS Sequoia 15, I compiled using branch v6.32.00-patches using the following cmake commands :. ```; $ root -l ; new TBroot [0] new TBrowser. *** Break *** bus error; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] PNGReadPlugin::InitializePluginData(IIOImageReadSession*, IIODictionary*, IIODictionary*, CGImageMetadata*, CGColorSpace**, ReadPluginData&, PNGPluginData&, __CFDictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOReadPlugin::callInitialize() (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIO_Reader::initImageAtOffset(CGImagePlugin*, unsigned long, unsigned long, unsigned long) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::makeImagePlus(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::getPropertiesAtIndexInternal(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] IIOImageSource::copyPropertiesAtIndex(unsigned long, IIODictionary*) (no debug info); [/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO] CGImageSourceCopyPropertiesAtIndex (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] ImageSourceOptionsForCGImageSource_index_ (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imagesWithData:hfsFileType:extension:zone:expandImageContentNow:includeAllReps:] (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSBitmapImageRep _imageRepsWithData:hfsFileType:extension:expandImageContentNow:] (no debug info); [/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit] +[NSImageRep _imageRepsWithConte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428:239,error,error,239,https://root.cern,https://github.com/root-project/root/issues/16428,1,['error'],['error']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. ROOT misbehaves when ASAN is enabled. Below different incarnation of the problem are illustrated:; - [ ] root/io/bigevent, root/io/event, root/io/compression, root/io/datamodelevolution, root/io/perf, root/treeformula/event, root/treeformula/retobj, ; root/treeformula/schemaEvolution, root/treeformula/sync, root/tree/friend, root/tree/evolution, root/tree/treeproblem, root/treeproxy, root/io/compression : bad linkage to asan functions; - [ ] root/io/references: badly setup dependency on libEvent; - [ ] root/tree/addresses : `AddressSanitizer: heap-buffer-overflow`; - [ ] root/io/newClassDef: Real failure with ASAN enabled; - [ ] root/io/cint: bad linkage to ASAN libraries. Should also check if the tests are needed at all. Moreover, the above (and root/tree/addresses) are automatic Makefile driven tests. They could be translated to CMake to gain granularity. ### Reproducer. Run with Asan. ### ROOT version. master. ### Installation method. From sources (need asan). ### Operating system. Linux, mac. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14682:679,failure,failure,679,https://root.cern,https://github.com/root-project/root/issues/14682,1,['failure'],['failure']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp; using ROOT::Experimental::RNTupleModel;; using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";; const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";; const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {; auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));; auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;; tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};; tree->Fill();; tree->Write();; }. void write_ntuple() {; auto model = RNTupleModel::Create();; auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =; RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};; ntuple->Fill();; }. void read(std::string_view name, std::string_view path) {; ROOT::RDataFrame df(name, path);; auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}); .Display();; dfRes->Print();; }. void rdf_stdvector() {; write_tree();; read(kTreeName, kTreeFileName);. write_ntuple();; read(kNTupleName, kNTupleFileName);; }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16034:1660,fault,fault,1660,https://root.cern,https://github.com/root-project/root/issues/16034,1,['fault'],['fault']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. The latest master of ROOT doesn't compile with pytorch 2.0.1 installed. The error message is the following:; ```; Torch Version: 2.0.1; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (fc2): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); (sigmoid): RecursiveScriptModule(original_name=Sigmoid); ); <string>:1: FutureWarning: 'torch.onnx.symbolic_helper._set_onnx_shape_inference' is deprecated in version 1.13 and will be removed in 2.0. Please remove its usage and avoid setting internal variables directly. Python error message:; Traceback (most recent call last):; File ""<string>"", line 6, in <module>; File ""<string>"", line 6, in <dictcomp>; TypeError: 'torch._C.Node' object is not subscriptable; terminate called after throwing an instance of 'std::runtime_error'; what(): ; Failed to run python code: for i in graph[0].nodes():; globals().update(locals()); nodeData={}; nodeData['nodeType']=i.kind(); nodeAttributeNames=[x for x in i.attributeNames()]; nodeAttributes={j:i[j] for j in nodeAttributeNames}; nodeData['nodeAttributes']=nodeAttributes; nodeInputs=[x for x in i.inputs()]; nodeInputNames=[x.debugName() for x in nodeInputs]; nodeData['nodeInputs']=nodeInputNames; nodeOutputs=[x for x in i.outputs()]; nodeOutputNames=[x.debugName() for x in nodeOutputs]; nodeData['nodeOutputs']=nodeOutputNames; nodeDType=[x.type().scalarType() for x in nodeOutputs]; nodeData['nodeDType']=nodeDType; modelData.append(nodeData); Subprocess aborted; make[2]: *** [tmva/pymva/test/CMakeFiles/SofieCompileModels_PyTorch.dir/build.make:70: SofieCompileModels_PyTorch] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13155:151,error,error,151,https://root.cern,https://github.com/root-project/root/issues/13155,1,['error'],['error']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We have an error in the nightlies build for dev3cuda-x86_64-el9-gcc11-opt and dev3cuda-x86_64-el8-gcc11-opt; Here, CUDA is enabled. The build without CUDA are fine. The error seems to be related to the RooFit::Evaluator::assignToGPU function:; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:574:68: error: use of deleted function 'std::__ROOT::span<T>& std::__ROOT::span<T>::operator=(std::__ROOT::span<T>&&) [with T = double]'; ```; Also this throws an error; ```; /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/roofit/roofitcore/src/RooFit/Evaluator.cxx:575:48: error: cannot convert 'std::__ROOT::span<double>' to 'const std::__ROOT::span<const double>&'; 575 | _evalContextCUDA.set(node, _evalContextCUDA._currentOutput);; ```. The full log for ROOT-HEAD can be found here: https://lcgapp-services.cern.ch/cdash/upload/405718ff1f150aae3de5d392f40f70fd238ea254/ROOT-HEAD-build.log. ### Reproducer. /. ### ROOT version. master. ### Installation method. lcgcmake from source: options [gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82](https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt?ref_type=heads#L82); ### Operating system. alma8 alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15087:86,error,error,86,https://root.cern,https://github.com/root-project/root/issues/15087,5,['error'],['error']
Availability,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. We've been using MSVC to build ROOT, and we've recently encountered the following error:. `error G694476FC: static_assert failed ""Unexpected size""`. Our developer has suggested the compiler that was used needs to implement the Defect Report https://cplusplus.github.io/CWG/issues/2518.html (which has been implemented by MSVC and Clang). ### Reproducer. Repro step:. 1. Open ""x64 Native Tools Command Prompt for VS 2022""; 2. git clone https://github.com/root-project/root.git; 3. mkdir root\build_amd64; 4. cd /d root\build_amd64; 5. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=amd64; 6. python.exe -m pip install pytest 2>&1; 7. cmake -G ""Visual Studio 17 2022"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.22621.0 -Dtesting=ON -Droottest=ON -Droofit=off .. 2>&1; 8. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild 2>&1. ### Expected result:; Build succesfully. ### ROOT version. We are using the latest commit. ### Installation method. git. ### Operating system. Windows server 2022 data center. ### Additional context. Detailed log:; [Build.log](https://github.com/root-project/root/files/15090474/Build.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15321:157,error,error,157,https://root.cern,https://github.com/root-project/root/issues/15321,2,['error'],['error']
Availability,"### Describe the bug. About 1/3 of the tests fail on aarch64 with errors like:; ~~~; cling JIT session error: Failed to materialize symbols: { (main, { __aarch64_ldadd8_acq_rel }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZN9RooArgSetC1IJEEERK9RooAbsArgDpOT_ }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZN9RooArgSetC1IJEEERK9RooAbsArgDpOT_ }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZN9RooArgSetC1IJEEERK9RooAbsArgDpOT_ }) }; ~~~; ### Expected behavior. No failing tests. ### To Reproduce. Build ROOT 6.28.00 for aarch64, run tests. 1. ROOT version 6.28.00; 2. Operating system GNU/Linux RHEL+EPEL 9, Fedora 36. Fedora 37, Fedora 38. Fedora 39 - same result on all; 3. Package build from source. ### Additional context. epel9: 67% tests passed, 434 tests failed out of 1317; f36: 67% tests passed, 435 tests failed out of 1318; f37: 67% tests passed, 435 tests failed out of 1318; f38: 67% tests passed, 436 tests failed out of 1318. Some of the symbols that can't be found are in libgcc:; $ nm /usr/lib/gcc/aarch64-redhat-linux/12/libgcc.a | grep __aarch64_ldadd4_acq_rel; 0000000000000000 T __aarch64_ldadd4_acq_rel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12294:66,error,errors,66,https://root.cern,https://github.com/root-project/root/issues/12294,5,['error'],"['error', 'errors']"
Availability,"### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available; TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available; ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup; * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7960:243,avail,available,243,https://root.cern,https://github.com/root-project/root/issues/7960,5,['avail'],['available']
Availability,"### Describe the bug. Doing:. ```C++; #include <TBufferFile.h>; #include <TFile.h>; #include <TTree.h>; #include <iostream>. void bar() {; auto f = TFile::Open(""/Users/ktf/Downloads/AO2D-2.root"");; char const *dfs[1] = {""DF_2449800039997798139;1""};; ; for (auto di = 0; di < 1; di++) {; auto df = dfs[di];; auto d = (TDirectoryFile*)f->Get(df);; ; std::cout << ""Reading DF "" << df << std::endl;; char const *treeNames[4] = {""O2bc"", ""O2collision"", ""O2fdd"", ""O2ft0""};. for (auto ti = 0; ti < 4; ti++) {; std::cout << ti << std::endl;; std::cout << treeNames[ti] << std::endl;; auto t = (TTree*)d->Get(treeNames[ti]);; t->SetClusterPrefetch(true);; auto branchList = t->GetListOfBranches();; auto e = t->GetEntries();; for (auto bi = 0; bi < branchList->GetEntries(); ++bi) {; auto b = (TBranch*)branchList->At(bi);; assert(b);; int pos = 0;; while (pos < e) {; b->Print();; TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);; auto &r = b->GetBulkRead();; auto s = r.GetBulkEntries(0, buf);; pos += s;; std::cout << ""Read "" << s << "" elements "" << std::endl;; }; }; }; }; }; ```. crashes with:. ```C++; [22971:internal-dpl-aod-reader_t0]: Fatal: fExtraBasket == nullptr && ""fExtraBasket should have been set to nullptr by GetFreshBasket"" violated at line 1523 of `/Users/ktf/src/sw/SOUR; CES/ROOT/ad1ddb8593/0/tree/tree/src/TBranch.cxx'; ```. if one of the branches has more than one basket. Removing `t->SetClusterPrefetch(true)` fixes the issue. Notice how it still works fine with branches which have only one basket. I can provide a file to reproduce if needed. ### Expected behavior. I would expect it to work. ### Setup. Vanilla 6.24.02 on linux or macOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8962:172,Down,Downloads,172,https://root.cern,https://github.com/root-project/root/issues/8962,1,['Down'],['Downloads']
Availability,"### Describe the bug. During a build of root with tmva-sofie enabled, the build fails with the following error:. In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/test/TestCustomModelsFromROOT.cxx:3:; /builddir/build/BUILD/root-6.26.00/redhat-linux-build/tmva/sofie/test/Linear_16_FromROOT.hxx:14:123: error: 'nan' was not declared in this scope; 14 | float tensor_2bias[800] = {-2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, -1.6853868e+38, -7.29983234e+27, 1.04351275e-35, -4.85025149e-26, -1.8755401e-25, -1.1517516e+36, -4.63935318e-31, 0.686275303, 1.24939929e-20, 1.69885186e+27, 2.25105193e+21, -364749.844, 1.5719514e-34, 8.914608, 0.017398471, -1.69850501e+13, -5.68424096e+26, 5.46905411e-28, -4550.52832, 9.75181774e-06, 58461.7383, -9.21360134e-21, 3.14942058e+27, 0.000689532433, -7.38048164e-12, 1.63026903e+36, -23409.6191, 7.75302674e+23, -4.05909378e+21, -1.36839554e-21, nan, 3.00273573e-29, 214934480, -2.14694423e+20, -2.62987679e-27, -3.31015721e+10, -3.77250566e-25, 2721.82764, -0.185639352, -nan, 4.30533447e-18, 2.46234533e+27, -4.90863758e-14, 9355069, -1.40139204e-31, -4.42654684e+15, 7.01436106e+16, 0.104793049, -3234.07764, -2.00034187e+36, ....... The floats in the declared array fluctuate violently, and there are both ""nan"" and ""-nan"" in there. This header file is generated during the build. Compare this to the code generated on x86_64:. float tensor_16bias[800] = {-0.142527401, 0.168874308, -0.0887828916, -0.0631441548, -0.0660232753, 0.0544182472, 0.0641550943, 0.0606994219, -0.0223076269, 0.102970138, 0.0258652028, -0.0809393153, -0.0276761875, 0.0546831638, 0.128886178, -0.0795307532, -0.0189131647, -0.120750055, 0.17368494, -0.0492844023, -0.0578795224, 0.0671775565, 0.0123591702, 0.132642269, -0.0525798798, 0.0173827056, 0.06598",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10146:105,error,error,105,https://root.cern,https://github.com/root-project/root/issues/10146,2,['error'],['error']
Availability,"### Describe the bug. From https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/BUILDTYPE=Release,LABEL=ROOT-fedora29,V=master/353/parsed_console/; ```; CMakeFiles/RooFitCore.dir/src/InitUtils.cxx.o:InitUtils.cxx:function RooFit::InitUtils::loadComputeLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >): error: undefined reference to '__cpu_indicator_init'. CMakeFiles/RooFitCore.dir/src/InitUtils.cxx.o:InitUtils.cxx:function RooFit::InitUtils::loadComputeLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >): error: undefined reference to '__cpu_model'. collect2: error: ld returned 1 exit status; gmake[2]: *** [roofit/roofitcore/CMakeFiles/RooFitCore.dir/build.make:3264: lib/libRooFitCore.so.6.23.01] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33899: roofit/roofitcore/CMakeFiles/RooFitCore.dir/all] Error 2; ```. ### Expected behavior. No linker error. ### To Reproduce. Build ROOT on Fedora 29. Consider adding `-lgcc` *if* needed, i.e. in the case 'yes we want / can build arch-specific compute libraries we should check whether linking calls to `__cpu_indicator_init` and `__cpu_model` need `-lgcc`, and if so, provide it to the linker invocation of `libRooFitCore`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6855:358,error,error,358,https://root.cern,https://github.com/root-project/root/issues/6855,6,"['Error', 'error']","['Error', 'error']"
Availability,"### Describe the bug. I booted a CERN Openstack VM with the CentOS7 image. I sourced dev3 on CVMFS, i.e. the LCG stack with ROOT master. In particular:. `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc8-opt/setup.sh`. and I tried to import ROOT from Python. When doing so, I observed the following error:. ```; error: entry with relative path at the root level is not discoverable; { 'name': '', 'type': 'directory',; ^~; Error in modulemap.overlay!. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 7 (Thread 0x7f7003fff700 (LWP 1242) ""python""):; #0 0x00007f704d3e3549 in waitpid () from /lib64/libc.so.6; #1 0x00007f704d360f62 in do_system () from /lib64/libc.so.6; #2 0x00007f704d361311 in system () from /lib64/libc.so.6; #3 0x00007f7003163e83 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #4 0x00007f70031667a5 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f6ff7060608 in llvm::vfs::OverlayFileSystem::pushOverlay(llvm::IntrusiveRefCntPtr<llvm::vfs::FileSystem>) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #7 0x00007f6ff46b3b3c in (anonymous namespace)::collectModuleMaps(clang::CompilerInstance&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .constprop.586] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #8 0x00007f6ff46b45fe in (anonymous namespace)::setupCxxModules(clang::CompilerInstance&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Mon/x86_64-centos7-gcc8-opt/lib/libCling.so; #9 0x00007f6ff46b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8157:317,error,error,317,https://root.cern,https://github.com/root-project/root/issues/8157,3,"['Error', 'error']","['Error', 'error']"
Availability,"### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python; import ROOT. class pMainFrame( ROOT.TGMainFrame ):; def __init__( self, parent, width, height ):; ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); ```. This prints:. ```; Traceback (most recent call last):; File ""../examples/mainframerepro.py"", line 10, in <module>; window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); File ""../examples/mainframerepro.py"", line 6, in __init__; ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work; TypeError: none of the 2 overloaded methods succeeded. Full details:; Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>; TypeError: takes at most 1 arguments (3 given); Dispatcher1::Dispatcher1() =>; TypeError: takes at most 0 arguments (3 given); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++; namespace __cppyy_internal {; class Dispatcher1 : public ::TGMainFrame {; public:; virtual ~Dispatcher1() {}; using TGMainFrame::TGMainFrame;; using TGMainFrame::GetMWMinpString;; };; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6578:87,error,error,87,https://root.cern,https://github.com/root-project/root/issues/6578,1,['error'],['error']
Availability,"### Describe the bug. On Mac ARM we get (found by René):. ```; sftnight@macphsft26 build % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern/ |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 09 2022, 11:42:50 |; | From heads/master@v6-25-02-1202-g8dc4bc40fb |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_9:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; libc++abi: terminating with uncaught exception of type cling::CompilationException; sftnight@macphsft26 build %; ```. ### Expected behavior; ```; % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on May 09 2022, 05:37:55 |; | From heads/master@v6-25-02-1201-g797bb5dce1 |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_13:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; Error in <HandleInterpreterException>: Error evaluating expression (whatever); Execution of your code was aborted.; root [1] ; ```; ### To Reproduce; Type something unknown at the ROOT prompt. ### Setup; MacOS, ARM1 machine",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10548:617,error,error,617,https://root.cern,https://github.com/root-project/root/issues/10548,4,"['Error', 'error']","['Error', 'error']"
Availability,"### Describe the bug. PyROOT fails with the following error with Python 3.11:; ~~~; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.04/tutorials/launcher.py"", line 21, in <module>; import ROOT; ^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/ROOT/__init__.py"", line 22, in <module>; import cppyy; ^^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/usr/lib/python3.11/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; SystemError: type cppyy.CPPInstance has the Py_TPFLAGS_HAVE_GC flag but has no traverse function; ~~~. ### Expected behavior. ""import ROOT"" works. ### To Reproduce. 1. Compile ROOT with Python 3.11; 2. Try ""import ROOT"" in python ...; 3. ... or run the test suite and see every python test fail. ### Setup. 1. ROOT version: 6.26.04 + commit 484deb056dacf768aba4954073b41105c431bffc + commit 484deb056dacf768aba4954073b41105c431bffc; 2. Operating system: Fedora 37 (rawhide). ### Additional information. I tried the following patch:. ~~~{.patch}; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; index 73fb8099b5..2854b2e919 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPIns",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10799:54,error,error,54,https://root.cern,https://github.com/root-project/root/issues/10799,1,['error'],['error']
Availability,"### Describe the bug. ROOT 6.28.00 fails on s390x. [100%] Generating tutorials/hsimple.root; cd /builddir/build/BUILD/root-6.28.00/s390x-redhat-linux-gnu/tutorials && LD_LIBRARY_PATH=/builddir/build/BUILD/root-6.28.00/s390x-redhat-linux-gnu/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /builddir/build/BUILD/root-6.28.00/s390x-redhat-linux-gnu/bin/root.exe -l -q -b -n -x hsimple.C -e return; [IncrementalJIT] addModule() failed: Added modules have incompatible data layouts: E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64 (module) vs E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64 (jit); Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; Processing hsimple.C...; [IncrementalJIT] addModule() failed: Added modules have incompatible data layouts: E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64 (module) vs E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64 (jit); [IncrementalJIT] addModule() failed: Added modules have incompatible data layouts: E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64 (module) vs E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64 (jit). ### Expected behavior. Working ROOT. ### To Reproduce. Build ROOT for s390x. Build fails when the hsimple.C macro is executed at the end of the build process with the above error. ### Setup. 1. ROOT version 6.28.00; 2. GNU/Linux on RHEL+EPEL 8, RHEL+EPEL 9, Fedora 36. Fedora 37, Fedora 38. Fedora 39 - same result on all; 3. Package build from source. ### Additional context. This error is a regression wrt earlier versions that did not have this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12293:1321,error,error,1321,https://root.cern,https://github.com/root-project/root/issues/12293,2,['error'],['error']
Availability,"### Describe the bug. ROOT fails inside the ipyparallel.directView.map method. ### Expected behavior. pyRoot should work with ipyparallel . ### To Reproduce. Please find bellow the steps to reproduce the issue:. source /cvmfs/sft.cern.ch/lcg/views/LCG_97/x86_64-centos7-gcc8-opt/setup.sh; ipcluster start -n 3 --daemonize; ipython test_ipp.py; the gist for test_ipp.py script:; https://gist.github.com/TatianaOvsiannikova/eb8065352b3605cbebf547e7d2465c37. it fails with an error:. NameErrorTraceback (most recent call last)<string> in <module>(); <ipython-input-1-a67452f95d83> in f(x); /cvmfs/sft.cern.ch/lcg/views/LCG_97/x86_64-centos7-gcc8-opt/lib/ROOT.pyc in <module>(); 823 ip = get_ipython(); 824 if hasattr(ip,""kernel""):; --> 825 import JupyROOT; 826 import JsMVA; 827 ; /cvmfs/sft.cern.ch/lcg/views/LCG_97/x86_64-centos7-gcc8-opt/lib/ROOT.pyc in _importhook(name, *args, **kwds); 520 except Exception:; 521 pass; --> 522 return _orig_ihook( name, *args, **kwds ); 523 ; 524 __builtin__.__import__ = _importhook; /cvmfs/sft.cern.ch/lcg/views/LCG_97/x86_64-centos7-gcc8-opt/lib/JupyROOT/__init__.py in <module>(); 1 from JupyROOT.helpers import cppcompleter, utils; 2 ; 3 if '__IPYTHON__' in __builtins__ and __IPYTHON__:; ----> 4 cppcompleter.load_ipython_extension(get_ipython()); 5 utils.iPythonize(); NameError: name 'get_ipython' is not defined; -->. ### Setup. 1. ROOT 6.20/02; 2. centos 7, lxplus7.cern.ch; 3. LCG_97 via cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6974:473,error,error,473,https://root.cern,https://github.com/root-project/root/issues/6974,1,['error'],['error']
Availability,"### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:; ```python; import ROOT. class Derived(ROOT.TH1F):; def __reduce__(self):; return (self.__class__, ()); ```; In test.py:; ```python; from Derived import Derived; import pickle; pickle.dumps(Derived()); ```. Running test.py throws a segfault in the `__reduce__` implementation:; ```; #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so; #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so; #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0; #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0; #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8438:178,error,error,178,https://root.cern,https://github.com/root-project/root/issues/8438,2,['error'],['error']
Availability,### Describe the bug. See e.g. https://root-forum.cern.ch/t/homebrew-and-latest-macos-sdk/43049:. ```; warning: no such sysroot directory: '/Library/Developer/CommandLineTools/SDKs/MacOSX11.0.sdk'; ```; despite 11.1 being there. ### Expected behavior; Picks up 11.1 SDK. Possibly use generic MacOSX.sdk directory instead. ### To Reproduce; Download binaries built with 11.0 SDK while you have a newer Xcode / cmd line tools.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7021:340,Down,Download,340,https://root.cern,https://github.com/root-project/root/issues/7021,1,['Down'],['Download']
Availability,"### Describe the bug. Test failure on i686 only with numpy 1.24.1. Fails during package build in Fedora rawhide.; Build architectures are i686, x86_64, aarch64, ppc64le and s390x.; So the failure is on the only 32 bit architecture, so could be 32 bit related. ~~~; 115/1232 Test #69: pyunittests-pyroot-roofit-roodataset-numpy ..........................***Failed 2.72 sec; test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for ... ; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; [#0] WARNING:DataHandling -- FAIL; test_to_numpy_and_from_numpy (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy); Test exporting to numpy and then importing back a non-weighted dataset. ... RooDataSet.from_numpy(dataSetNumpy) Ignored 58 out-of-range events; ok; test_to_numpy_and_from_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_and_from_numpy_weighted); Test exporting to numpy and then importing back a weighted dataset. ... ok; test_to_numpy_basic (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_basic); Basic test with a real value and a category. ... ok; test_to_numpy_derived_weight (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_derived_weight); Test if the optional computation of derived weights works. ... ok; test_to_numpy_weighted (roodataset_numpy.TestRooDataSetNumpy.test_to_numpy_weighted); Test with a weighted dataset. ... ok; ======================================================================; FAIL: test_ignoring_out_of_range (roodataset_numpy.TestRooDataSetNumpy.test_ignoring_out_of_range); Test that rows with out-of-range values are skipped, both for; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12162:27,failure,failure,27,https://root.cern,https://github.com/root-project/root/issues/12162,2,['failure'],['failure']
Availability,"### Describe the bug. The DUNE experiment ran into a situation where instances of class `recob::Track` were written to disk with version 13, but were read with a dictionary whose class version was 17. Although an I/O rule was written, it appears to not have been applied, possibly because version 13 was not specified in selection XML file. Philippe would know the exact reason. Significant memory growth was observed, and Philippe confirmed that a memory leak is encountered. ### Reproduction and setup. Philippe already has the appropriate setup instructions for diagnosing this error. This bug report was opened at his request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7016:581,error,error,581,https://root.cern,https://github.com/root-project/root/issues/7016,1,['error'],['error']
Availability,"### Describe the bug. Then changing the Address of a Branch in TTree it seems to sometimes still use the old memory address after the call. As a minimal example here we create a TNamed, set it as branch but directly after delete it and set the branch address to `nullptr` before filling:. ```c++; #include <TTree.h>; #include <TFile.h>. #include <iostream>. int main() {; auto* tf = TFile::Open(""test.root"", ""RECREATE"");; auto* t = new TTree(""tree"", ""tree"");. TNamed *f = new TNamed(""foo"", ""bar"");; auto* b = t->Branch(""FileMetaData"", &f);; ; delete f;; f = nullptr;; b->SetAddress(nullptr);. t->Fill();; t->Write();; tf->Close();; return 0;; }; ```. When running this with address sanitizer it gives the following error with 6.24:. ```; g++ -g `root-config --cflags --libs` -fsanitize=address -o mwe mwe.C && ./mwe ; =================================================================; ==934566==ERROR: AddressSanitizer: heap-use-after-free on address 0x606000112a68 at pc 0x7fcd23e920f0 bp 0x7ffcc8579ab0 sp 0x7ffcc8579aa8; READ of size 4 at 0x606000112a68 thread T0; #0 0x7fcd23e920ef in int TStreamerInfoActions::WriteBasicType<unsigned int>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) root/io/io/src/TStreamerInfoActions.cxx:252; #1 0x7fcd239c8950 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const root/io/io/inc/TStreamerInfoActions.h:123; #2 0x7fcd239c8950 in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) root/io/io/src/TBufferFile.cxx:3572; #3 0x7fcd21fdd5dc in TBranch::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranch.cxx:891; #4 0x7fcd22016bfa in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1265; #5 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElemen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8027:715,error,error,715,https://root.cern,https://github.com/root-project/root/issues/8027,1,['error'],['error']
Availability,"### Describe the bug. There are several issues when compiling root 6.24.00 on ppc64le. 1. The fix for the altivec __vector keyword that was previously backported (from LLVM 10) was lost in the LLVM 9 upgrade (#8069). 2. After fixing that, running root 6.24.00 on ppc64le fails with an assert: https://github.com/root-project/root/blob/3b0d691a83cfe12c28d50a74d9d8b2c7da703c6c/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp#L81. 3. Trying to request the large code model rather than assert fail (https://github.com/ellert/root/commit/a71528ca1d5af631d49251ad9525f9d6a875ce7d) does not work. The build fails with a segmentation fault at the very end of the build when the hsimple.C macro is run to create the hsimple.root file. 4. Testing to run with the default code model (i.e. neither trying to change to the large model, nor assert if the model is not the large one) avoids the segmentation fault above, but many tests fail with:; ```; Relocation R_PPC64_REL32 overflow; UNREACHABLE executed at /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldELF.cpp:800!; ```. So it really needs the large code model. Enabling the large code model for ppc64le did not result in a segmentation fault in previous versions of root, so this is a regression. ### Expected behavior; Working root on ppc64le. ### To Reproduce; Compile root 6.24.00 for ppc64le. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072:637,fault,fault,637,https://root.cern,https://github.com/root-project/root/issues/8072,3,['fault'],['fault']
Availability,"### Describe the bug. Using:; [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz); we get:; ```; . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec; Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder!; ```; which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading).; ```; #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970; ...; #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310; #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225; #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949; ....; #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439; ....; #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour?. properly loading of the dictionary. ### How to reproduce?. Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz); and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT?. local build. ### Which operating system are you using?. alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12953:196,Error,Error,196,https://root.cern,https://github.com/root-project/root/issues/12953,2,['Error'],['Error']
Availability,"### Describe the bug. When building root 6.28.00 for RHEL+EPEL 8 on ppc64le there are build and test failures. Test failures happens in compiled unit tests (gtest), tests using interpreded root and tests using python. All tests fail with the error ""pure virtual method called"" and the backtrace all indicate the same line:. ~~~; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:101,failure,failures,101,https://root.cern,https://github.com/root-project/root/issues/12372,6,"['error', 'failure']","['error', 'errors', 'failures']"
Availability,"### Describe the bug. When building the reference guide the tutorial `df105_WBosonAnalysis.py` does not convert in notebook using `nbconvert`; we get the following errors:. ```; $ /usr/bin/python converttonotebook.py /home/sftnight/couet/root/tutorials/dataframe/df105_WBosonAnalysis.py /home/sftnight/rootdoc/notebooks/; 0.0331268310547; [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook; [NbConvertApp] Executing notebook with kernel: python2; [NbConvertApp] ERROR | Error while converting '/home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb'; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/nbconvert/nbconvertapp.py"", line 410, in export_single_notebook; output, resources = self.exporter.from_filename(notebook_filename, resources=resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 179, in from_filename; return self.from_file(f, resources=resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 197, in from_file; return self.from_notebook_node(nbformat.read(file_stream, as_version=4), resources=resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/notebook.py"", line 32, in from_notebook_node; nb_copy, resources = super(NotebookExporter, self).from_notebook_node(nb, resources, **kw); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node; nb_copy, resources = self._preprocess(nb_copy, resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess; nbc, resc = preprocessor(nbc, resc); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__; return self.preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess; nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources); File ""/us",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430:164,error,errors,164,https://root.cern,https://github.com/root-project/root/issues/10430,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'errors']"
Availability,"### Describe the bug. When running make test on a root build on Fedora 34 (using gcc 11) several tests fail that do not fail on Fedora 33 (using gcc 10). ### Expected behavior; No test failures. ### To Reproduce; 1. Build root 6.24.00 on Fedora 34.; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 34. ### Additional context; The kind of errors vary. But many of them seems to be related to disagreement on the size of data structures. Here are some examples: [test.log.gz](https://github.com/root-project/root/files/6413774/test.log.gz). Some examples: ; ```; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrLine, respectively 368 400; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrColor, respectively 64 72; Error in <TInterpreter::InspectMembers>: TClass and cling disagree on the size of the class ROOT::Experimental::RAttrBase, respectively 64 72; ```; and; ```; python3.9: /builddir/build/BUILD/root-6.24.00/roofit/roofitcore/src/RooArgSet.cxx:108: static void* RooArgSet::operator new(size_t): Assertion `sizeof(RooArgSet) == bytes' failed.; ```; Does anyone have any idea what is going on?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8071:185,failure,failures,185,https://root.cern,https://github.com/root-project/root/issues/8071,5,"['Error', 'error', 'failure']","['Error', 'errors', 'failures']"
Availability,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073:879,Error,Errors,879,https://root.cern,https://github.com/root-project/root/issues/8073,2,"['Error', 'error']","['Errors', 'error']"
Availability,"### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```; 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:52,failure,failures,52,https://root.cern,https://github.com/root-project/root/issues/10203,2,"['Failure', 'failure']","['Failures', 'failures']"
Availability,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8145:379,error,error,379,https://root.cern,https://github.com/root-project/root/issues/8145,3,"['Error', 'error']","['Error', 'error']"
Availability,"### Describe the bug. building root v6-26-00 with clang 13.0.1 fails with many errors. I have tried with both gcc8.4 and gcc11.2 toolchains for clang. This is on a centos7 system. The cmake (3.22.2) configuration step was:; ```; cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -GNinja ../src; ```; Is this expected behavior? If so, what version of clang is supported for building root?. If desired, I will attach the build errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10046:79,error,errors,79,https://root.cern,https://github.com/root-project/root/issues/10046,2,['error'],['errors']
Availability,"### Describe the bug. cling crashes when running some LHCb process involving using python within C++ code called from python; Here is the top of the stack trace :; ```; #11 0x00007f10460f38cc in clang::Sema::getTemplateDepth(clang::Scope*) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #12 0x00007f1045b8e15f in clang::Sema::EnterTemplatedContext(clang::Scope*, clang::DeclContext*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #13 0x00007f1045a8a95c in clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope*, clang::CXXScopeSpec&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; ```. ### Expected behavior. No crash obviously. ### To Reproduce. files lhcbRunEnv and test-XMLSummary-exception.py are attached to the report. I had to zip together into material.zip to please github... ```; source /cvmfs/lhcb.cern.ch/lib/LbEnv.sh; source lhcbRunEnv; python /tmp/test-XMLSummary-exception.py; ```. ### Setup; 1. ROOT version : LCG 103, hence ROOT 6.28.00-a8528; 2. Linux, centos7; 3. cvmfs. ### Additional context; The same is working under LCG 102. Also it seems to be related to using a complicated stack where python calls C++ which calls python which calls C++ again, with ROOT dictionary at pretty much all levels. Moreover, no LHCb code is used in the example, only Gaudi, but of course LHCb dictionaries are still loaded and a key point to the failure.; [material.zip](https://github.com/root-project/root/files/11397560/material.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12758:1535,failure,failure,1535,https://root.cern,https://github.com/root-project/root/issues/12758,1,['failure'],['failure']
Availability,### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7340:64,error,errors-when-trying-to-fit-a-histogram,64,https://root.cern,https://github.com/root-project/root/issues/7340,1,['error'],['errors-when-trying-to-fit-a-histogram']
Availability,"### Describe the bug. numpy.object was deprecated in numpy 1.20 and has been removed in numpy 1.24. ### Expected behavior. No failing tests. ### To Reproduce. The following tests FAILED:; 	 54 - pyunittests-pyroot-pyz-rdataframe-asnumpy (Failed); 	1087 - tutorial-dataframe-df026_AsNumpyArrays-py (Failed). Test failing due to:. AttributeError: module 'numpy' has no attribute 'object'. File ""/builddir/build/BUILD/root-6.26.10/redhat-linux-build/lib/ROOT/_pythonization/_rdataframe.py"", line 138, in GetValue; tmp = numpy.empty(len(cpp_reference), dtype=numpy.object). ### Setup. 1. ROOT version 6.26.10; 2. Operating system Fedora 38; 3. How you obtained ROOT: Failures when running tests during package build from source. ### Additional context. From numpy 1.24 release notes:. The deprecation for the aliases np.object, np.bool, np.float, np.complex, np.str, and np.int is expired (introduces NumPy 1.20). Some of these will now give a FutureWarning in addition to raising an error since they will be mapped to the NumPy scalars in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12148:663,Failure,Failures,663,https://root.cern,https://github.com/root-project/root/issues/12148,2,"['Failure', 'error']","['Failures', 'error']"
Availability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Apparently calling `Display` with some extra parameter like `nRows` is not respected if before calling `Print` one adds any other operation to the graph. ### To Reproduce; ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TString.h>; #include <string>; #include <vector>; #include <memory>; void write_tree(); {; int x{};; TString s{};. TFile file{""dataset.root"", ""recreate""};; TTree tree{""events"", ""events""};; tree.Branch(""nJets"", &x, ""nJets/I"");; tree.Branch(""systName"", &s);. std::vector<std::string> values{""nominal"", ""up"", ""down""};. for (int i = 0; i < 3; i++); {; x = i + 1;; s.Replace(0, s.Length(), values[i]);; tree.Fill();; }. tree.Write();; }. void read_tree(); {; TFile file{""dataset.root"", ""read""};; std::unique_ptr<TTree> tree{file.Get<TTree>(""events"")};; tree->Scan(""*"");; }. void analyze(); {; ROOT::RDataFrame df{""events"", ""dataset.root""};. // Book display; auto disp = df.Display(""systName"", 1);. // Do anything else; df.Count().GetValue();. // The display doesn't respect the original parameters; // Prints all 3 rows whereas it should print only one; disp->Print();; }. int main(); {; write_tree();; read_tree();; analyze();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Fedora 36; ROOT 6.26/06 from conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11390:626,down,down,626,https://root.cern,https://github.com/root-project/root/issues/11390,2,['down'],"['down', 'download']"
Availability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. First reported on the forum [here](https://root-forum.cern.ch/t/rdataframe-and-friend-and-python/41923).; TTrees written to file preserve knowledge of their friends, and if they are also present in the file reading one TTree recovers the full friendship chain. When constructing an RDF object as `RDataFrame(treename, filename)`, friends are not automatically made available as they are if the TTree is read from file manually and then passed to RDF's ctor. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```cpp; root [0] TFile f(""f.root"", ""recreate""); T(TFile &) Name: f.root Title: ; root [1] TTree t1(""t1"", ""t1""); (TTree &) Name: t1 Title: t1; root [2] TTree t2(""t2"", ""t2""); (TTree &) Name: t2 Title: t2; root [3] int x = 42; (int) 42; root [4] t2.Branch(""x"", &x); (TBranch *) 0x5575916824d0; root [5] t2.Fill(); (int) 4; root [6] t1.AddFriend(&t2); (TFriendElement *) 0x557591f09790; root [7] t1.Write(); (int) 231; root [8] t2.Write(); (int) 343; root [9] f.Close(); root [10] ROOT::RDataFrame(""t1"", ""f.root"").Max<int>(""t2.x"").GetValue(); Error in <TRint::HandleTermInput()>: std::runtime_error caught: Unknown column: t2.x; ```. Note that extracting the TTree from file manually and then constructing RDF from the tree works:. ```cpp; auto t1 = file.Get<TTree>(""t1"");; ROOT::RDataFrame(*t1).Max<int>(""t2.x"").GetValue() // prints 42; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6741:322,recover,recovers,322,https://root.cern,https://github.com/root-project/root/issues/6741,3,"['Error', 'avail', 'recover']","['Error', 'available', 'recovers']"
Availability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Our centos7 nightly builds fail with the following errors:. ```; 01:46:28 In file included from /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:34:0:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/inc/XrdProofConn.h:140:4: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType LowWrite(XPClientRequest *, const void *, int);; 01:46:28 ^; 01:46:28 In file included from /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:47:0:; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘entity’ [-Wunused-parameter]; 01:46:28 virtual bool PostProcess(XrdSecEntity &entity,; 01:46:28 ^; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘einfo’ [-Wunused-parameter]; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdClientMessage* XrdProofConn::SendRecv(XPClientRequest*, const void*, char**)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:41: error: ‘LowWrite’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:46: error: ‘kOK’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: At global scope:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:777:1: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType XrdProof",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:148,error,errors,148,https://root.cern,https://github.com/root-project/root/issues/6779,2,['error'],"['error', 'errors']"
Availability,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The current logic to construct a TChain in a distributed task to pass to the RDF constructor is at; https://github.com/root-project/root/blob/b494a9b145246b66868fa38e2fd3e1f37fa73c47/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py#L166-L168. But this is too simple, since it doesn't account for the common use case of a TChain with no name and sub trees with different names:; ```py; >>> import ROOT; >>> RDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; >>> c = ROOT.TChain(); >>> c.Add(""10entries.root/entries""); 1; >>> c.Add(""other10entries.root/otherentries""); 1; >>> df = RDF(c); >>> df.Count().GetValue(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Proxy.py"", line 127, in GetValue; headnode.backend.execute(generator); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Backends/Base.py"", line 135, in execute; ranges = headnode.build_ranges(); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/HeadNode.py"", line 307, in build_ranges; clustersinfiles = Ranges.get_clusters(self.treename, self.inputfiles); File ""/home/vpadulan/Programs/rootproject/rootbuild/devdebugtest/lib/DistRDF/Ranges.py"", line 220, in get_clusters; entries = t.GetEntriesFast(); AttributeError: 'TObject' object has no attribute 'GetEntriesFast'; ```. The error is due to the current sub tree not being found (since the input chain has no name). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should support this use case. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master built on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8750:1516,error,error,1516,https://root.cern,https://github.com/root-project/root/issues/8750,2,"['down', 'error']","['download', 'error']"
Availability,"### Describe the bug; <!--; Setup snap ""root-framework"" (723) security profiles for auto-connections (cannot obtain mount security snippets for snap ""root-framework"": shared-memory plug with ""private: true"" cannot be connected if ""/dev/shm"" is a symlink).; -->. ### Expected behavior; <!--; Root-framework can be installed.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. sudo daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target; 2. exec sudo nsenter -t $(pidof systemd) -m -p su - $LOGNAME; 3. snap version; snap 2.56.2+22.04ubuntu1; snapd 2.56.2+22.04ubuntu1; series 16; ubuntu 22.04; kernel 5.10.102.1-microsoft-standard-WSL2; -->. ### Setup; <!--; 1. ROOT version: v6-26-06; 2. Operating system:; Distributor ID: Ubuntu; Description: Ubuntu 22.04.1 LTS; Release: 22.04; Codename: jammy; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself:; snap install root-framework; -->. ### Additional context; <!--; NA.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11338:916,down,download,916,https://root.cern,https://github.com/root-project/root/issues/11338,1,['down'],['download']
Availability,"### Describe the bug; A definition in an unnamed namespace cannot be redeclared by re-running the same code. ### Expected behavior; A new declaration is provided; `13` is printed twice. ### To Reproduce; ```c++; // t.cxx; namespace {; int h = 12;; }. void t() {; printf(""%d\n"", ++h);; }; ```; ```; root [0] .x t.cxx; 13; root [1] .x t.cxx; In file included from input_line_10:1:; t.cxx:6:20: error: use of undeclared identifier 'h'; printf(""%d\n"", ++h);; ^; ```. ### Setup; ROOT master Ubuntu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7483:392,error,error,392,https://root.cern,https://github.com/root-project/root/issues/7483,1,['error'],['error']
Availability,"### Describe the bug; A reverted transaction due to a failed compilation ends up removing decls / JITed symbols that should be left untouched. Related issues: #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848), [ROOT-6254](https://sft.its.cern.ch/jira/browse/ROOT-6254), [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084), and [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245). ### Expected behavior; Clean unload. Reverting a transaction should probably not touch template instantiations / emitted symbols that correspond to deserialized decls. ### To Reproduce; ```c++; root [1] foo.size(); ROOT_prompt_1:1:4: error: no member named 'size' in 'std::unique_ptr<std::__cxx11::basic_string<char>, std::default_delete<std::__cxx11::basic_string<char> > >'; did you mean to use '->' instead of '.'?; foo.size(); ^; ->; root [2] foo->size(); ROOT_prompt_2:1:4: error: member reference type 'std::unique_ptr<std::string>' (aka 'unique_ptr<basic_string<char> >') is not a pointer; did you mean to use '.'?; foo->size(); ~~~^~; ```; or; ```c++; root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};; root [1] foo.GetName(); ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'?; foo.GetName(); ^; ->; root [2] foo->GetName(); IncrementalExecutor::executeFunction: symbol '_ZSt3getILm0EJP5TFileSt14default_deleteIS0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::tuple_element<0ul, std::tuple<TFile*, std::default_delete<TFile> > >::type const& std::get<0ul, TFile*, std::default_delete<TFile> >(std::tuple<TFile*, std::default_delete<TFile> > const&); Maybe you need to load the corresponding shared library?; ```. ### Setup; ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10049:653,error,error,653,https://root.cern,https://github.com/root-project/root/issues/10049,3,['error'],['error']
Availability,"### Describe the bug; After the commit 2c4a756d38d9b5f0348f645a116b3014159f03d6, I get a segmentation fault in Cling when I use the CUDA mode, define a kernel and exit Cling. ```; $ ./cling --std=c++14 -xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7433:102,fault,fault,102,https://root.cern,https://github.com/root-project/root/issues/7433,3,['fault'],['fault']
Availability,"### Describe the bug; As seen in #7488, changing headers / data structures in Clang doesn't rebuild Clad and causes very weird test failures. ### Expected behavior; The build system should detect the changes and rebuild Clad as well as `libCling.so` as needed. ### To Reproduce; Apply / Revert #7488 to see a crash or just touch Clang header files and observe that Clad isn't rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7977:132,failure,failures,132,https://root.cern,https://github.com/root-project/root/issues/7977,1,['failure'],['failures']
Availability,"### Describe the bug; Because of #6563 and the fix in CMake we need to move from linking `${PYTHON_LIBRARIES}` to instead depend on `Python3::Python`. See https://gitlab.kitware.com/cmake/cmake/-/issues/21293. This fixes test failures:; ```; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; ```. ### Expected behavior; RPath correctly set. ### To Reproduce; Jenkins nightly master or 6.22 on macos15, https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/. ### Setup. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6753:226,failure,failures,226,https://root.cern,https://github.com/root-project/root/issues/6753,1,['failure'],['failures']
Availability,"### Describe the bug; Building from scratch on Fedora 33, gcc 10.2.1, master version of ROOT. The problem probably appeared after [this commit](https://github.com/root-project/root/commit/05fb923c75ec41f999723e834bd3d61b2fa2356e) (compilation from 07.03 is OK).; ```; $ cmake /cern/root_master_source/ -Droofit=OFF -Dtmva=OFF -Dmathmore=OFF -Dhttp=ON -DXROOTD_ROOT_DIR=/cern/xrootd/ -DCMAKE_INSTALL_PREFIX=/cern/root_master/ -Drpath=ON; $ make -j 12. [ 60%] Built target G__ROOTDataFrame; [ 60%] Building CXX object tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx: In member function ‘std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> ROOT::Experimental::Detail::RNTupleColumnReader::MakeField(const string&, ROOT::Experimental::Detail::RNTupleColumnReader::RPageSource&)’:; /cern/root_master_source/tree/dataframe/src/RNTupleDS.cxx:50:43: error: ‘const class ROOT::Experimental::RFieldDescriptor’ has no member named ‘CreateField’; 50 | auto fieldBasePtr = fieldDescriptor.CreateField(descriptor);; | ^~~~~~~~~~~; make[2]: *** [tree/dataframe/CMakeFiles/ROOTDataFrame.dir/build.make:394: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/src/RNTupleDS.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:29856: tree/dataframe/CMakeFiles/ROOTDataFrame.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7601:921,error,error,921,https://root.cern,https://github.com/root-project/root/issues/7601,4,"['Error', 'error']","['Error', 'error']"
Availability,"### Describe the bug; Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior; I expected to get a value different than 0 and no error. . ### To Reproduce; ```c++; #include <iostream> ; #include ""TH3.h"". int main() {; auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);; ; for(int i=1; i <= m_hist->GetNbinsX(); i++); for(int j=1; j <= m_hist->GetNbinsY(); j++); for(int k=1; k <= m_hist->GetNbinsZ(); k++); m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;; double y = 0.002;; double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; ; std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";; std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";; ; return 0;; }; ```; This outputs the following on my machine,; ```; bins = 29 1 1; Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain.; value = 0; value = 3; ```. ### Setup; Built for linuxx8664gcc on Apr 12 2022, 16:28:03; From tags/v6-26-02@v6-26-02; downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10678:143,error,error,143,https://root.cern,https://github.com/root-project/root/issues/10678,4,"['Error', 'down', 'error']","['Error', 'downloaded', 'error']"
Availability,"### Describe the bug; Cling produces in the dictionary files code like this:. ```; static const char* fwdDeclCode = R""DICTFWDDCLS(; #line 1 ; ```; Which is invalid for VS if the string is longer than ~16000 characters.; In these cases either the C2026 is issued ; https://docs.microsoft.com/en-us/cpp/error-messages/compiler-errors-1/compiler-error-c2026?view=msvc-160; or, much worse, the code is silently truncated and then the compiled executables crash in runtime on code parsing. ### Expected behavior; Cling should take into account this limitation in VS. ### To Reproduce; Generate relatively large dictionary or, optionally manually increase the size of string literal in a small generated dictionary. Sorry that I don't provide a reproducer. My primary goal was to avoid this behavior when I saw it and not to debug it. ### Setup; 1. ROOT 6.22, VS 16.8? ( not sure actually, I've tried many builds, some worked, other didn't); 2. Windows; 3. Official site. ### Additional context; One can try to use an array of char* like that is done `classesHeaders[]` for the and add `TROOT::RegisterModule()`` that would accept it. But I cannot submit a PR. Sorry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6824:301,error,error-messages,301,https://root.cern,https://github.com/root-project/root/issues/6824,3,['error'],"['error-', 'error-messages', 'errors-']"
Availability,"### Describe the bug; Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior; I can define a callback signature with types not in global namespace. ### To Reproduce; ```python; import cppyy. cppyy.cppdef(r""""""\; #include <functional>. namespace foo {; class Foo {; public:; Foo() : bar(0) {};; int bar;; };; }. void apply(std::function<void(foo::Foo*)> f) {; foo::Foo x;; f(&x);; }; """"""); cppyy.gbl.apply(lambda x: print(x.bar)); ```; Expected output: `0`. What I get instead is a failure to compile:; ```; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10680:561,failure,failure,561,https://root.cern,https://github.com/root-project/root/issues/10680,6,"['error', 'failure']","['error', 'failure']"
Availability,"### Describe the bug; Drawing histograms one by one in a python loop crashes if `EnableImplicitMT()` is enabled. ### Expected behavior; Everything works in single threaded mode, so I would assume crash could be avoided with multithreading as well.; If not, exception still would be better. ### To Reproduce; ```python; import ROOT; # comment next line and everything works; ROOT.EnableImplicitMT(). vars = [""x"", ""x2""]. def get_histos():; df = ROOT.RDataFrame(10)\; .Define(""x"", ""rdfentry_"")\; .Define(""x2"", ""rdfentry_*rdfentry_""); ; histos = []; for var in vars:; h = df.Histo1D((""h_{}"".format(var), ""{}; x; y"".format(var), 100, 0, 100), var); histos.append(h); # event loop runs here; histos = [h.GetValue() for h in histos]; return histos. histos = get_histos(); for var, h in zip(vars, histos):; canvas = ROOT.TCanvas(""{}"".format(var)); h.Draw(); canvas.Update(); input(""Press something to get the next histogram""). ```; ### Setup; 1. ROOT version: 6.26/06; 2. OS: Centos 7; 3. ROOT is from cvmfs package `source /cvmfs/ilc.desy.de/key4hep/setup.sh`; 4. Python: 3.9.10. ### Additional context; Initially submitted on forum:; https://root-forum.cern.ch/t/rdataframe-multithreading-seg-faults-with-python-for-loops/53963",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496:1187,fault,faults-with-python-for-loops,1187,https://root.cern,https://github.com/root-project/root/issues/12496,1,['fault'],['faults-with-python-for-loops']
Availability,"### Describe the bug; Hi All,. I am trying to build ROOT project as well as tests, but there is an error occurred when building, and it maybe related to pytest version. When I use same build steps but different pytest version, ROOT project build success with pytest version 6.1.1, but SofieCompileModels_PyTorch.vcxproj fails to compile with pytest version 6.2.5, the error as belows. I have checked if pytest version is 6.1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot!; ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\So",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:99,error,error,99,https://root.cern,https://github.com/root-project/root/issues/9487,3,['error'],['error']
Availability,"### Describe the bug; Hi All,. I have follow [Build from source](https://root.cern/install/#build-from-source) to build root project on Windows with VS 2019, but hit below CMake Error while building, it seems the error details are in FREETYPE-configure-out.log, and I have attached the log.; [FREETYPE-configure-out.log](https://github.com/root-project/root/files/7617109/FREETYPE-configure-out.log); Could you please help have a look? Thanks a lot!. Error:; CMake Error at F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-Release.cmake:49 (message):; Command failed: 1; ; 'C:/Program Files/CMake/bin/cmake.exe' '-G' 'Visual Studio 16 2019' '-DCMAKE_INSTALL_PREFIX=F:/root-project/root_install' '-GVisual Studio 16 2019' '-AWin32' '-Thost=x64' '-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise' 'F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE'; ; See also; ; F:/root-project/root_build/FREETYPE-prefix/src/FREETYPE-stamp/FREETYPE-configure-*.log; ; ### Expected behavior; Successfully build root project without errors. ### To Reproduce; 1. Open a x86 Native Tools Command Prompt for VS 2019; 2. git clone --branch latest-stable https://github.com/root-project/root.git root_src; 3. mkdir root_build root_install && cd root_build; 4. cmake -G""Visual Studio 16 2019"" -A Win32 -Thost=x64 -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=../root_install ../root_src; 5. cmake --build . --config Release --target install. ### Setup; 1. Operating system: Windows 10; 2. Visual studio version: 16.11.6; 2. How you obtained ROOT: built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9347:178,Error,Error,178,https://root.cern,https://github.com/root-project/root/issues/9347,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"### Describe the bug; Hi All,. I have follow below steps to build root project with msvc on AddressSanitizer mode, but hit below errors. And I have seen ""WARNING ""Address sanitizer builds only tested with gcc and Clang"" on CMakeLists. So I am not sure if root support asan mode with msvc. Could you please help have a look and confirm it? Thanks a lot!. (The error message shows ""The items cannot be built in parallel."" but I have tried build single parallel still hit this error); Error:; ```; CustomBuild:; ""The build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\ecd3d997f4f89e0243288555110c5833\onepcm.rule' depends on 'F:\GITP\ROOT-PROJECT\ROOT\BUILD_X86_ASAN2\ETC\ALLDICT.CXX.PCH' which is produced by the build of 'F:\gitP\root-project\root\build_x86_asan2\CMakeFiles\1b80de060c1a00976f83382f69cf2b7f\allDict.cxx.pch.rule'. The items cannot be built in parallel.""; Generating etc/allDict.cxx.pch; ; Generating PCH for core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk graf3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter io\io math\genetic math\genvector math\mathcore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\roofit roofit\roofitcore roofit\roostats tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\tree tree\treeplayer tree\treeviewer; ; =================================================================; ==6948==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x203ffff bytes; #0 0x6684e141 (C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.29.30133\bin\HostX64\x86\clang_rt.asan_dynamic-i386.dll+0x1003e141); #1 0x693e0308 in llvm::safe_realloc(void *, unsigned int) (F:\gitP\root-project\root\build_x86_asan2\bin\libCling.dll+0x11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:129,error,errors,129,https://root.cern,https://github.com/root-project/root/issues/9445,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"### Describe the bug; I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant; - Some of them could be auto-fixed by Clang; - Some of them look like real errors.; ; For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```; Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,; TCppObject_t self, size_t nargs, void* args, TCppType_t result_type); {; TClassRef& cr = type_from_handle(result_type);; void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));; if (WrapperCall(method, nargs, args, self, obj)); return (TCppObject_t)obj;; return (TCppObject_t)0;; }; ```. ```; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290; 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887; 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889; ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check?. Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ?. ### To Reproduce; - Install QtCreator; - Click on File, Import File or Project, click on the main ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400:281,error,errors,281,https://root.cern,https://github.com/root-project/root/issues/7400,1,['error'],['errors']
Availability,"### Describe the bug; I get a crash with ROOT after a (stupid) test of undo sequences. ### Expected behavior; No crash. ### To Reproduce; ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_13:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x).; Execution of your code was aborted.; root [6] x; input_line_15:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x).; Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_24:2:3: error: use of undeclared identifier 'x'; (x); ^; terminate called after throwing an instance of 'cling::CompilationException'; what(): Error evaluating expression (x); ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10178:277,error,error,277,https://root.cern,https://github.com/root-project/root/issues/10178,8,"['Error', 'error']","['Error', 'error']"
Availability,"### Describe the bug; I have a ROOT script stored in a folder which has some accent (Física) within the full path. If I open the ROOT console, and run the script as; - `.x test_script.cpp` all works fine.; - `.x test_script.cpp+` I get an error. `_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program`. ### Expected behavior; ROOT dictionary generator correctly codifies accents into something understandable by compiler. ### To Reproduce; 1. Create a folder with an accent.; 2. Put any script there; 3. Open ROOT console; 4. Try running with .x test_script.cpp; 5. Try running with .x test_script.cpp+. ### Setup; Compiled from source; ```; ------------------------------------------------------------; | Welcome to ROOT 6.19/01 https://root.cern |; | (c) 1995-2019, The ROOT Team |; | Built for linuxx8664gcc on Nov 03 2020, 17:15:44 |; | From heads/master@v6-19-01-214-g832989cd2c |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------; ```. ### Additional context; Somehow related: https://sft.its.cern.ch/jira/browse/ROOT-9345",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6837:239,error,error,239,https://root.cern,https://github.com/root-project/root/issues/6837,2,['error'],['error']
Availability,"### Describe the bug; I have root installed from EPEL8-testing, version 6.24.02.; I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map.; When TInterpreter::AutoParse finds ; ```; #include <map> ; ```; in my headers it tries to parse /usr/bin/map. ```; In file included from /usr/include/zevis/ZStyleScheme.h:12:; /usr/bin/map:1:2: error: invalid preprocessing directive; #!/usr/bin/perl -w; ^; /usr/bin/map:2:2: error: invalid preprocessing directive; #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $; ```. ### Expected behavior; /usr/bin/map is not parsed. ### To Reproduce; Eh, not sure if I can provide a short reproducer immediately. ### Setup; 1. ROOT 6.24.02 from EPEL8 testing; 2. CentSO8 Stream; 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8904:370,error,error,370,https://root.cern,https://github.com/root-project/root/issues/8904,3,"['down', 'error']","['download', 'error']"
Availability,"### Describe the bug; I try to build the current master with the `-Dbuiltin_nlohmannjson=on`, but I obtain a lot of error messages [(make.log)](https://drive.google.com/file/d/161nAtyhRd3VFMud4V-F4xSQoype3T-Lt/view?usp=sharing). ### Expected behavior; The build succeeds. ### Setup. 1. ROOT version: current master (452f82119a07fb873a7b050004477d9d9f93120d); 2. Operating system: Archlinux, gcc 12.1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11236:116,error,error,116,https://root.cern,https://github.com/root-project/root/issues/11236,1,['error'],['error']
Availability,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):; file INSTALL cannot find; ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or; directory.; Call Stack (most recent call first):; core/cmake_install.cmake:75 (include); cmake_install.cmake:200 (include); make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior; `cmake` should not delete this file. ### To Reproduce; 1. Download and unpack a source .tar.gz, create and cd the build directory.; 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)).; 3. cmake --build . --target install -- -j15. ### Setup; 1. 6.22.06; 2. Arch Linux.; 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context; There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search).; 1. https://root-forum.cern.ch/t/installation-is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7293:176,Error,Error,176,https://root.cern,https://github.com/root-project/root/issues/7293,4,"['Error', 'error']","['Error', 'error', 'error-cannot-find-libvectordict-so']"
Availability,"### Describe the bug; I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):; Command failed: 2; '/usr/bin/make'; See also; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log; make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 ; make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO; [I] src/XrdVersion.hh successfully generated; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope; 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));; | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope; 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:; /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope; 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf); | ^~~~~~~~~; make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/Xr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7292:243,Error,Error,243,https://root.cern,https://github.com/root-project/root/issues/7292,3,['Error'],['Error']
Availability,"### Describe the bug; I'm seeing an error when building an application with root, kokkos and CUDA. The file that's producing the error does not explicitly include any Kokkos or CUDA headers, but the CUDA headers are somehow being pulled in. Kokkos is somehow involved in all this as another version of the code which uses plain CUDA does not throw this error. This error is apparent with root v6-24-00 through v6-26-06 (I haven't tried anything older or newer). It appeared with CUDA 11.6 and beyond- it's fine with older versions (I've tried back to 11.2 and up to 11.7. I haven't tried 11.8). The error is apparent with gcc 9.3 to 11.2. Nothing in the source is explicitly calling TExecutorCRTP or TSequentialExecutor. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCR",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11511:36,error,error,36,https://root.cern,https://github.com/root-project/root/issues/11511,7,['error'],['error']
Availability,"### Describe the bug; If an exception happens on the C++ side during the execution of an RDF task within a Dask worker process, this is not properly propagated. Most times it leads to some kind of unrepairable error. Take the following example. ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. The expected error here is that the graph cannot be filled with columns of mixed scalar/vector types. Running the code above gives; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```; Followed by the usual gdb stacktrace produced by ROOT. This happens because Dask tries to serialize the error object in order to send it back to the user. But the exception cannot be serialized by ROOT as stated in the warning. ### Expected behavior; The C++ exceptions should be properly propagated to the user. ### Setup; ROOT master; GCC 12",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11050:210,error,error,210,https://root.cern,https://github.com/root-project/root/issues/11050,2,['error'],['error']
Availability,"### Describe the bug; In a local jupyter notebook and SWAN, the output of a code block only shows after the block finishes execution.; This makes progress bars only display after completion, rendering them useless. ### Expected behavior; An std::flush should update the output of a code block of a notebook, even if the code block is still running. ### To Reproduce; For example:; ```; std::chrono::steady_clock::time_point begin = std::chrono::steady_clock::now();. for(long i = 0; i < 1000000000; i++); {; if(i % 100000000 == 0); {; std::cout << i << ""\n"" << std::flush;; }; }. std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();; std::cout << ""Time difference = "" << std::chrono::duration_cast<std::chrono::milliseconds>(end - begin).count() << ""ms\n"";; ```; This takes 7 seconds on my machine, thus long enough to see the numbers pop up sequentially in a ROOT console.; However, in a local notebook or on SWAN, all of the output is only shown after 7 seconds. ### Setup; ROOT version: ROOT 6.24/06; Operating system: Ubuntu on windows (Ubuntu 20.04.1 LTS); How you obtained ROOT: Downloaded today via Conda; Jupyter Notebook 6.4.3 (ROOT kernel). ### Additional context; On Swan, progress bars work on SWAN software stack 97a, but not on 99 and 100.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8989:1110,Down,Downloaded,1110,https://root.cern,https://github.com/root-project/root/issues/8989,1,['Down'],['Downloaded']
Availability,"### Describe the bug; In the lcgcmake build system; Compiling ROOT master on macOS 11 (http://cdash.cern.ch/viewFiles.php?buildid=218660) or 12 (http://cdash.cern.ch/viewFiles.php?buildid=218674) fails to compile with the error message. ```; [ 55%] Copying clang's __clang_hip_libdevice_declares.h...; In file included from /Users/sftnight/build/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/macosx/src/TMacOSXSystem.mm:12:; /Users/sftnight/build/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/macosx/inc/TMacOSXSystem.h:16:10: fatal error: 'TUnixSystem.h' file not found; [ 55%] Linking CXX static library ../../libLLVMDebugInfoCodeView.a; #include ""TUnixSystem.h""; ```. Seems related to #10690 Which was touching the related CMakeLists.txt files. ### Expected behavior. Root compiles successfully on macOS. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: master; 2. Operating system: macOS 11, 12; 3. git clone",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12130:222,error,error,222,https://root.cern,https://github.com/root-project/root/issues/12130,2,['error'],['error']
Availability,"### Describe the bug; In this page: https://github.com/root-project/web/blob/main/manual/cling/index.md there is an example about using the '?' before every line. See also https://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#the-root-prompt. ```; root [] {; root [] ? TLine l;; root [] ? for (int i = 0; i < 5; i++) {; root [] ? l.SetX1(i);; root [] ? l.SetY1(i+1);; root [] ? l.Print();; root [] ? }; root [] ? }; ```. However, if I try it, I get errors, not the help it's supposed to output:; ```; ROOT_prompt_1:1:1: error: expected expression; ? TLine l;; ^; ROOT_prompt_1:1:3: error: 'TLine' does not refer to a value; ? TLine l;; ^; /opt/root_bld/include/TPaveText.h:19:7: note: declared here; class TLine;; ^; ROOT_prompt_1:1:9: error: expected ':'; ? TLine l;; ^; : ; ROOT_prompt_1:1:1: note: to match this '?'; ? TLine l;; ^; ROOT_prompt_1:1:9: error: use of undeclared identifier 'l'; ? TLine l;; ^; ROOT_prompt_2:1:1: error: expected expression; ? for (int i = 0; i < 5; i++) {; ^; ROOT_prompt_2:1:3: error: expected expression; ? for (int i = 0; i < 5; i++) {; ^; ROOT_prompt_2:1:3: error: expected ':'; ? for (int i = 0; i < 5; i++) {; ^; : ; ROOT_prompt_2:1:1: note: to match this '?'; ? for (int i = 0; i < 5; i++) {; ^; ROOT_prompt_2:1:3: error: expected expression; ? for (int i = 0; i < 5; i++) {; ^; <<< cling interactive line includer >>>:1:1: error: expected '}'; ROOT_prompt_0:1:1: note: to match this '{'; {; ^; <<< cling interactive line includer >>>:1:1: error: expected '}'; input_line_9:1:42: note: to match this '{'; void __cling_Un1Qu31(void* vpClingValue) {; ^; ```. vs. ```; TLine X1=0.000000 Y1=1.000000 X2=0.000000 Y2=0.000000; TLine X1=1.000000 Y1=2.000000 X2=0.000000 Y2=0.000000; TLine X1=2.000000 Y1=3.000000 X2=0.000000 Y2=0.000000; TLine X1=3.000000 Y1=4.000000 X2=0.000000 Y2=0.000000; TLine X1=4.000000 Y1=5.000000 X2=0.000000 Y2=0.000000; ```. ### Expected behavior; Either remove this example from the documentation, or fix the issue. If t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10056:468,error,errors,468,https://root.cern,https://github.com/root-project/root/issues/10056,3,['error'],"['error', 'errors']"
Availability,"### Describe the bug; It looks like ROOT/Clang is not able to parse the VS headers from the recent 16.8.; It emits multiple errors about undefined symbols. ### Expected behavior; Dictionaries are generated. ### To Reproduce; Try to generate a dictionary using VS 16.8 . ### Setup; ROOT 6.22 zip tarbal for Win32 from the ROOT site; Windows10. ### Additional context; Not sure that this is the largest problem on Windows.; Also, the same dictionaries work fine with VS 16.7.5 when I set extra flags ; -D_HAS_CONDITIONAL_EXPLICIT=0 -D__CUDACC__ for the dictionary generation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6820:124,error,errors,124,https://root.cern,https://github.com/root-project/root/issues/6820,1,['error'],['errors']
Availability,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196:195,avail,available,195,https://root.cern,https://github.com/root-project/root/issues/7196,3,['avail'],['available']
Availability,"### Describe the bug; One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior; A warning is issued instead of crashing. ### To Reproduce; ```; root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'; for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ^~~~; root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed.; ```; ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash.; ```; root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ost",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8389:288,error,error,288,https://root.cern,https://github.com/root-project/root/issues/8389,1,['error'],['error']
Availability,"### Describe the bug; PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior; PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279:46,down,downloaded,46,https://root.cern,https://github.com/root-project/root/issues/7279,1,['down'],['downloaded']
Availability,"### Describe the bug; RDataFrame constructed within a function with a TChain becomes inaccessible when returned, unless TChain is returned with it (segfault occurs). ### Expected behavior; RDataFrame constructed with a TChain should be able to be returned from a function. ### To Reproduce; ```python; import ROOT; import glob. def build_rdataframe(filepath, tree):; chain = ROOT.TChain(tree); for file in glob.glob(filepath):; chain.Add(file); Rdf = ROOT.RDataFrame(chain). return chain, Rdf. chain, df = build_rdataframe(""path/to/files"", ""tree""); print(df.Count().GetValue()); # works. def build_rdataframe_2(filepath, tree): ; chain = ROOT.TChain(tree); for file in glob.glob(filepath):; chain.Add(file); Rdf = ROOT.RDataFrame(chain). return Rdf. df = build_rdataframe_2(""path/to/files"", ""tree""); print(df.Count().GetValue()); # segfault; ```. ### Setup; 1. ROOT version 6.24.00 / Python 3.10.4 | ROOT version 6.20.06 / Python 2.7.5; 2. Arch Linux / Centos7; 3. ROOT downloaded from conda-forge / Arch linux repository / lxplus; (tested on multiple OSs/environments)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10965:970,down,downloaded,970,https://root.cern,https://github.com/root-project/root/issues/10965,1,['down'],['downloaded']
Availability,"### Describe the bug; ROOT crashes when trying to compile a file where I add a tstring with a c string with a c++ string. ```; root.exe: /opt/root_src/core/metacling/src/TCling.cxx:2326: virtual void TCling::RegisterModule(const char*, const char**, const char**, const char*, const char*, void (*)(), const FwdDeclArgsToKeepCollection_t&, const char**, Bool_t, Bool_t): Assertion `cling::Interpreter::kSuccess == compRes && ""Payload code of a dictionary could not be parsed correctly.""' failed.; ```; ### Expected behavior; No crash, just a compiler error. ### To Reproduce; - Download this test [test.txt](https://github.com/root-project/root/files/6702369/test.txt); - Rename it to .cpp; - `root -l test.cpp+`. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524:551,error,error,551,https://root.cern,https://github.com/root-project/root/issues/8524,2,"['Down', 'error']","['Download', 'error']"
Availability,"### Describe the bug; ROOT master (c8ad00846344c090c3a6f653e0decf38ad324d65) fails to build with g++ 12.2 with `cmake -DCMAKE_CXX_STANDARD=20`. The reported error is:; ```; In file included from /home/bgruber/dev/root/interpreter/llvm/src/include/llvm/Support/BinaryStreamReader.h:16,; from /home/bgruber/dev/root/interpreter/llvm/src/lib/Support/BinaryStreamReader.cpp:9:; /home/bgruber/dev/root/interpreter/llvm/src/include/llvm/Support/BinaryStreamArray.h:331:31: error: expected unqualified-id before ‘const’; 331 | FixedStreamArrayIterator<T>(const FixedStreamArrayIterator<T> &Other); | ^~~~~; /home/bgruber/dev/root/interpreter/llvm/src/include/llvm/Support/BinaryStreamArray.h:331:31: error: expected ‘)’ before ‘const’; 331 | FixedStreamArrayIterator<T>(const FixedStreamArrayIterator<T> &Other); | ~^~~~~; | ); ```. Checking out the offending file:; ```c++; template <typename T>; class FixedStreamArrayIterator; : public iterator_facade_base<FixedStreamArrayIterator<T>,; std::random_access_iterator_tag, const T> {. public:; FixedStreamArrayIterator(const FixedStreamArray<T> &Array, uint32_t Index); : Array(Array), Index(Index) {}. FixedStreamArrayIterator<T>(const FixedStreamArrayIterator<T> &Other) // ERROR HERE; : Array(Other.Array), Index(Other.Index) {}; ...; ```; indeed looks like wrong C++ syntax (the constructor shall only be named via an id-expression referring to the injected class name, see [here](https://eel.is/c++draft/class.ctor#general-1)). The `<T>` should be removed. The issue was fixed in upstream LLVM with [this commit](https://github.com/llvm/llvm-project/commit/2ccf0b76bcaf0895e04f14e3ff53c59dd96f9f0f). Please consider cherry-picking this commit. ### To Reproduce; 1. git clone ROOT master; 2. `cmake -DCMAKE_CXX_STANDARD=20`; 3. `make`. ### Setup. * gcc 12.2; * Ubuntu 22.10",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12037:157,error,error,157,https://root.cern,https://github.com/root-project/root/issues/12037,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"### Describe the bug; ROOT v6.24.06 is currently failing to build in Ubuntu 22.04. This appears to be due to an upgrade to [OpenSSL 3.0](https://www.openssl.org/blog/blog/2021/09/07/OpenSSL3.Final/) with this new LTS release; you can see for example a similar issue [here](https://github.com/chris2511/xca/issues/320). The specific build error happens while building XROOTD. (I apologize in advance if this is not the correct place to report the issue.). ### Expected behavior; ROOT builds without error using latest OpenSSL. ### To Reproduce; 1) Clean install of Ubuntu 22.04; 2) `sudo apt update`, followed by `sudo apt upgrade` and `sudo apt install` the required libraries for building ROOT; 3) Download ROOT source code and unzip; 4) Configure & build (using system Python 3.10). ### Setup; ROOT version: v6-24-06; Operating system: Ubuntu 22.04 LTS (on Windows Subsystem for Linux / WSL2); How you obtained ROOT: building from source. ### Additional context; `root-v6-24-06/src/ROOT-build/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log` files are attached:; [XROOTD-build-out.log](https://github.com/root-project/root/files/8613858/XROOTD-build-out.log); [XROOTD-build-err.log](https://github.com/root-project/root/files/8613857/XROOTD-build-err.log). The specific error from `XROOTD-build-err.log`:; `root-v6-24-06/src/ROOT-build/XROOTD-prefix/src/XROOTD/src/XrdCrypto/XrdCryptosslgsiAux.cc:901:32: error: invalid conversion from ‘const rsa_st*’ to ‘RSA*’ {aka ‘rsa_st*’} [-fpermissive]`. Finally, if it is helpful, the build script being used is [here](https://github.com/ezradlesser/heppy/blob/master/external/root/build.sh), with the only modification to the script being the `root_version` variable: `root_version=6-24-06`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518:338,error,error,338,https://root.cern,https://github.com/root-project/root/issues/10518,5,"['Down', 'error']","['Download', 'error']"
Availability,"### Describe the bug; Reported by Marcin Nowak (@Nowakus) by e-mail (see below).; > I ran a bigger production job today (1000 events) writing to RNTuple. It seems to work OK, but I saw 18 errors printed like this; > ```; > FATAL fWritePage[fWritePageIdx].IsEmpty() violated at line 87 of `/build/jenkins/workspace/lcg_nightly_pipeline; > /build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/inc/ROOT/RColumn.hxx'; > ```. ### Setup; 1. ROOT version: master; 2. Operating system: CentOS 7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12742:188,error,errors,188,https://root.cern,https://github.com/root-project/root/issues/12742,1,['error'],['errors']
Availability,### Describe the bug; The MSVC team recently added root as part of RWC testing. And we found some errors when building root with '/std:c++latest' and '/permissive-'. Could you please help look at this issue or provide some workarounds? Thanks in advance.; ### Expected behavior; root project could build successfully under '/std:c++latest' and '/permissive-' mode.; ### To Reproduce; 1. git clone https://github.com/root-project/root F:\gitP\root-project\root; 2. mkdir F:\gitP\root-project\root\build_amd64; 2. set CL= /std:c++latest or set CL= /permissive-; 3. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 4. msbuild /m /p:Platform=x64 /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild; ### Setup; Visual Studio 2019 16.11.8; ### Additional context; Build.log:; /std:c++latest: [build.log](https://github.com/root-project/root/files/7889383/build.log); /permissive-: [build.log](https://github.com/root-project/root/files/7889386/build.log),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9607:98,error,errors,98,https://root.cern,https://github.com/root-project/root/issues/9607,1,['error'],['errors']
Availability,"### Describe the bug; The `ROOT_GENERATE_DICTIONARY` function from cmake creates dictionary `G_xxx_cc.cxx` and compieles it with different flags than rest of the target sources.; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The `ROOT_GENERATE_DICTIONAR` body copies various properties of the target into new target for dictionary, and should also copy the compile features properties.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Steps to reproduce the behavior:; 1. Create target with some non-standard feature, e.g. c++17 (requires root compiled against c++17, then `std::string_view` breaks compatibility with pre c++17 build); ```; target_compile_features(${ARG_TARGET} PRIVATE cxx_std_17); ```; 2. Generate dictionary; ```; ROOT_GENERATE_DICTIONARY(G__${ARG_TARGET}_cc; ${ARG_HEADERS}; MODULE ${ARG_TARGET}; LINKDEF Linkdef.h; ); ```; 3. Compile such dictionary, the dict will not compile against c++17 and various errors related to `std::string_view` will appear. ### Setup; 1. ROOT 6.22.02; 2. Operating system - GNU/Linux; 3. Compiled from source. ### Solution; In line 667 of `RootMacros.cmake` add following lines:. ```; target_compile_features(${dictionary} PRIVATE; $<TARGET_PROPERTY:${ARG_MODULE},COMPILE_FEATURES>); ```. See also https://root-forum.cern.ch/t/rootmacros-cmake-should-also-support-target-features-for-dictionary/42159",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6777:1023,error,errors,1023,https://root.cern,https://github.com/root-project/root/issues/6777,1,['error'],['errors']
Availability,"### Describe the bug; The build errors when switching from `CMAKE_CXX_STANDARD=14` (the default with GCC 8.4.1 on CentOS 8) to `CMAKE_CXX_STANDARD=17` (for example to get ROOT7).; ```; FAILED: tree/treeplayer/G__TreePlayer.cxx lib/TreePlayer.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:2084:4: error: no matching member function for call to '_M_rehash_aux'; _M_rehash_aux(__n, __unique_keys());; ^~~~~~~~~~~~~; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:1730:8: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash' requested here; _M_rehash(__do_rehash.second, __saved_state);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable_policy.h:739:16: note: in instantiation of member function 'std::_Hashtable<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char> >, std::hash<std::__cxx11::st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8642:32,error,errors,32,https://root.cern,https://github.com/root-project/root/issues/8642,2,['error'],"['error', 'errors']"
Availability,"### Describe the bug; The logic to retrieve the input files of a distributed RDataFrame is faulty at; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in; https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8490:91,fault,faulty,91,https://root.cern,https://github.com/root-project/root/issues/8490,2,"['down', 'fault']","['download', 'faulty']"
Availability,"### Describe the bug; This script produces the following result:. ```; #include ""TCanvas.h""; #include ""TASImage.h"". void test_asimage(); {; new TCanvas(""bmp"",""bmp"");; auto bmp = new TASImage(""./screenshot.bmp"");; bmp->Draw();. new TCanvas(""png"",""png"");; auto png = new TASImage(""./screenshot.png"");; png->Draw();; }; ```. ![image](https://user-images.githubusercontent.com/10653970/117480572-12ae4a00-af62-11eb-936b-0f8138e05af4.png). ### Expected behavior; Both PNG and BMP pictures should be the same. the left picture looks like it has some byte misalignment. ### To Reproduce; 1. Download the screenshot files [screenshots.zip](https://github.com/root-project/root/files/6443072/screenshots.zip); 2. Run the code snippet above. ### Setup; ROOT 6.22/02 on Ubuntu18",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8125:584,Down,Download,584,https://root.cern,https://github.com/root-project/root/issues/8125,1,['Down'],['Download']
Availability,"### Describe the bug; When importing a TTree in a RooDataSet, if a RooCategory is filled from a tree branch of type Short_t, incorrect values are silently loaded. The category is always the same (it seems that it picks the first label in alphabetical order). The same problem appears for other types, only Int_t and UChar_t seem to work correctly. ### Expected behavior; Either correctly load the data set or fail with an error. ### To Reproduce; ```; TTree* tree = new TTree(""test_tree"", ""Test tree"");; Short_t cat_in;; tree->Branch(""cat"", &cat_in);. cat_in = 2; //category B; tree->Fill();. RooCategory cat(""cat"", ""Category"",{; {""B_cat"", 2},; {""A_cat"", 3}; });; RooDataSet data(""data"", ""RooDataSet"", RooArgSet(cat), RooFit::Import(*tree));. data.table(cat)->Print(""v"");; ```; We should get an event in category cat_B but instead we get an event in category cat_A. ### Setup; Latest ROOT from git, master branch, commit 8d87e2bb6e6a; Linux. ### Additional context; It seems to come from [RooAbsCategory::attachToTree](https://github.com/root-project/root/blob/943706c005c6723500e00061872d6eff4967d262/roofit/roofitcore/src/RooAbsCategory.cxx#L454) where there should probably be an error message if the type of branch is neither Int_t or UChar_t.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10278:422,error,error,422,https://root.cern,https://github.com/root-project/root/issues/10278,2,['error'],['error']
Availability,"### Describe the bug; When passing a path containing a double slash (```//```) to ```TChain```, the last characters are trimmed. The bug has been described [here](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path-2/43416). This is error-prone. ### Expected behavior; Even if ones does not want to automatically convert the double slash into a single slash in some scenarios, a warning should be expected. The behavior also goes against what any Linux user would expect. ### To Reproduce. I took the example from the [original bug report](https://root-forum.cern.ch/t/tnetxngfile-open-fails-with-double-slash-in-path/37564):. ```bash; TChain* mychain = new TChain(""DecayTree"");; mychain->AddFile(""root://eoslhcb.cern.ch//eos/lhcb/user/<letter>/<username>/test2//mytestfile.root""); (int) 1; mychain->GetEntries(); Error in <TNetXNGFile::Open>: [ERROR] Server responded with an error: [3011] Unable to open file /eos/lhcb/user/<letter>/<usern>; No such file or directory; ```. ### Setup; 1. ROOT Version: 6.20/02; 2. OS: Linux, SLC7; 3. How you obtained ROOT: binary install",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7159:259,error,error-prone,259,https://root.cern,https://github.com/root-project/root/issues/7159,4,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error', 'error-prone']"
Availability,"### Describe the bug; When trying to build with an external XRootD, cmake says it finds it but then it says it doesn't and this is making a spack build fail. Relevant lines in the cmake output:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4.post256 (setting -DROOTXRDVERS=5.5.4.po); -- Setting OLDPACK TRUE; -- XROOTD not found, enabling 'builtin_xrootd' option; -- Downloading and building XROOTD version 5.5.2; ```; When building with XROOTD from spack (where I found this issue) the error is more verbose but I think is the same issue:; ```; 121 -- Looking for XROOTD; 122 -- Found Xrootd version num: 5.5.3 (setting -DROOTXRDV; ERS=500050003); 123 -- libXrdMain not found: xproofd will be ; a wrapper around xrootd; 124 -- libXrdClient not found: use built-in; >> 125 CMake Error at cmake/modules/SearchInstalledSoftware.c; make:992 (message):; 126 XROOTD not found. Set environment variable XRDSYS t; o point to your XROOTD; 127 installation, or include the installation of XROOTD ; in the; 128 CMAKE_PREFIX_PATH. Alternatively, you can also enab; le the option; 129 'builtin_xrootd' to build XROOTD internally; ```. ### To Reproduce; ```; # To install xrootd; git clone https://github.com/xrootd/xrootd; cd xrootd; mkdir build; cd build; cmake .. -DCMAKE_INSTALL_PREFIX=../install; ```. ```; # To install ROOT; git clone https://github.com/root-project/root; cd root; mkdir builddir; cd builddir; cmake .. -DCMAKE_PREFIX_PATH=/path/to/xrootd/install -Dbuiltin_xrootd=OFF -Dxrootd=ON -DCMAKE_VERBOSE_MAKEFILE=ON; ```. ### Setup; cmake 3.26.2; OS: Arch Linux. ### Additional context; I'm posting it here since I tried different versions of XRootD and all failed, maybe it's an issue with XROOTD since it's complaining about not finding libXrdMain nor libXrdClient",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631:383,Down,Downloading,383,https://root.cern,https://github.com/root-project/root/issues/12631,3,"['Down', 'Error', 'error']","['Downloading', 'Error', 'error']"
Availability,"### Describe the bug; With both 6.24/02 and master the following snippet outputs an error:; ```cpp; #include <TWebFile.h>. int main(){; TWebFile f{""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""}; ; }; ```; ```bash; $: g++ -g -o twebfile_open_github twebfile_open_github.cpp `root-config --cflags --glibs`; $: ./twebfile_open_github ; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8890:84,error,error,84,https://root.cern,https://github.com/root-project/root/issues/8890,4,"['Error', 'error']","['Error', 'error']"
Availability,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970:179,error,error,179,https://root.cern,https://github.com/root-project/root/issues/7970,2,"['down', 'error']","['download', 'error']"
Availability,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10895:111,error,errors,111,https://root.cern,https://github.com/root-project/root/issues/10895,4,['error'],"['error', 'errors']"
Availability,"### Description. A C++ build of ROOT with GCC 13 works fine and passes all tests, *unless* also enabling Pythia8. Then suddenly `roottest-root-meta-MakeProject-examples` starts failing, as demonstrated with https://github.com/root-project/root/pull/14216:; ```; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:305:7: error: 'std::pair<const int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >::pair' from module 'std.bits_stl_iterator_h' is not present in definition of 'std::pair<const int, std::basic_string<char, std::char_traits<char>, std::allocator<char> > >' in module 'std.bits_stl_iterator_h'; pair(const _T1& __x, const _T2& __y); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:197:17: note: declaration of 'pair' does not match; constexpr pair(const pair&) = default; ///< Copy constructor; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:198:17: note: declaration of 'pair' does not match; constexpr pair(pair&&) = default; ///< Move constructor; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:202:2: note: declaration of 'pair' does not match; pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:238:2: note: declaration of 'pair' does not match; pair(tuple<_Args1...>&, tuple<_Args2...>&,; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: declaration of 'pair' does not match; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:305:7: note: declaration of 'pair' does not match; pair(const _T1& __x, const _T2& __y); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:315:2: note: declaration of 'pair' does not match; pair(_U1&& __x, _U2&& __y); ^; /usr/lib/gcc/x86_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14217:395,error,error,395,https://root.cern,https://github.com/root-project/root/issues/14217,1,['error'],['error']
Availability,"### Description. Cling is (rightfully) confused when evaluating a type trait on a forward-declared template specialization and then supplying the full definition (see reproducer). This breaks `roottest-root-meta-ROOT-7462-make` with the upgrade to LLVM 16 (https://github.com/root-project/root/pull/13273) in a C++20 build with GCC 13. This is because the test first expects `std::pair<std::string, Inner<int>>` to be ""bad"" with only a forward declaration and then to succeed after providing the definition. This doesn't work with the `requires` implementation of `libstdc++` under C++20:; ```; In file included from instlib dictionary payload:5:; ./instGood.cxx:10:33: error: no matching constructor for initialization of 'std::pair<string, Inner<int> >' (aka 'pair<basic_string<char>, Inner<int> >'); std::pair<string,Inner<int>> p;; ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:249:7: note: candidate constructor not viable: constraints not satisfied; pair(); ^; /usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/stl_pair.h:251:12: note: because 'is_default_constructible_v<Inner<int> >' evaluated to false; && is_default_constructible_v<_T2>; ^; ```. (I'm still investigating why this doesn't happen in `master` with LLVM 13...). ### Reproducer. ```; root [0] template <typename T> class Inner;; root [1] template <> class Inner<int>;; root [2] std::is_default_constructible_v<Inner<int>>; (... error: incomplete type 'Inner<int>' used in type trait expression ...); root [3] template <> class Inner<int> { public: int fValue; };; root [4] std::is_default_constructible_v<Inner<int>>; (const bool) false; ```. Interestingly enough, the following works:; ```; root [0] struct A;; root [1] std::is_default_constructible_v<A>; (... error: incomplete type 'A' used in type trait expression ...); root [2] struct A { int v; };; root [3] std::is_default_constructible_v<A>; (const bool) true; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815:670,error,error,670,https://root.cern,https://github.com/root-project/root/issues/13815,3,['error'],['error']
Availability,"### Description. For jitted `Book()`, ie not giving compiled column types, it fails to compile if the `Exec` instantiation is available, but contains itself an ambiguous call. Specifying an explicit column type *or* forcing at least one argument to `Exec` makes it work. ### Reproducer. ```c++; #include <ROOT/RDataFrame.hxx>. #include <memory>. struct Result {; template <typename... A>; void Fill(A... a) {}; template <typename... A>; void Fill(typename A::type... a) {}; };. class Helper : public ROOT::Detail::RDF::RActionImpl<Helper> {; public:; using Result_t = Result;. private:; std::shared_ptr<Result_t> fResult;. public:; Helper() {; fResult = std::make_shared<Result_t>();; }; Helper(const Helper &) = delete;; Helper(Helper &&) = default;; std::shared_ptr<Result_t> GetResultPtr() const { return fResult; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; template <typename... ColumnTypes>; void Exec(unsigned int, ColumnTypes... values) {; fResult->Fill(values...);; }; void Finalize() {}; std::string GetActionName() const { return ""Helper""; }; };. int main() {; ROOT::RDataFrame df(1);; df.Book(Helper{}, {""rdfentry_""});. return 0;; }; ```. gives with GCC 8.5.0:; ```; book.cxx:30:5: error: call of overloaded ‘Fill()’ is ambiguous; fResult->Fill(values...);; ^~~~~~~; book.cxx:7:8: note: candidate: ‘void Result::Fill(A ...) [with A = {}]’; void Fill(A... a) {}; ^~~~; book.cxx:9:8: note: candidate: ‘void Result::Fill(typename A::type ...) [with A = {}]’; void Fill(typename A::type... a) {}; ^~~~; ```. ### ROOT version. `master`. ### Installation method. from source. ### Operating system. Linux. ### Additional context. As discussed, not critical right now (also in the reproducer, the `Helper` type would have to be known to the interpreter for it to work at run-time). Also not sure if this can be fixed at all or if this is a direct consequence of resolving the ambiguity to support `Book()` without any columns, which requires a run-time check...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15263:126,avail,available,126,https://root.cern,https://github.com/root-project/root/issues/15263,2,"['avail', 'error']","['available', 'error']"
Availability,"### Description. In an unnamed macro having:; ```; {; gROOT->ProcessLine(statement_1);; statement_2;; }; ```; is process line by line (per se) and `statement_2` should (and does in most case) be able to use declaration made in `statement_1`. In some circumstances it does not. One such circumstance is the test `roottest-cling-return-constRetrunTest_WILL_FAIL` which should actually succeed (the original problem is fixed by moving to `Cling`) but still fails (unexpectedly) with:; ```; Processing run.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./run.C:7:1: error: unknown type name 't02'; t02 t;; ^; ```. ### Reproducer. With the files in [trun.tar.gz](https://github.com/root-project/root/files/15279954/trun.tar.gz); we can set that the declaration in the `ProcessLine` are properly seen in the next lines. For example this version of `trun.C`:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15481:582,error,error,582,https://root.cern,https://github.com/root-project/root/issues/15481,1,['error'],['error']
Availability,"### Description. On a Alma 9.4 node (specifically cmslpc-el9-heavy01.fnal.gov), I used verbatim the instructions from the CI for an arbitrary PR build (see [here](https://github.com/root-project/root/actions/runs/10343508810/job/28658232103?pr=16202#step:9:8064) and a copy/paste in the reproducer. However, I get 23 failures not seen on any of the CI runs (see list below and ; full log of the failures at: [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log). Looking in the log the problem seem to include:; * Missing (py)Torch installation (PyMVA); * Missing ipython3 installation (Jupyter); * Failure to connect to a server (roottest-python-distrdf-backends-test_all ); * Some more unclear failures; * See below for an extraction of the relevant output; * see [RootCI-Container-LastTest.log](https://github.com/user-attachments/files/16615802/RootCI-Container-LastTest.log) for more details. ```; The following tests FAILED:; 385 - PyMVA-RandomForest-Classification (Failed); 386 - PyMVA-RandomForest-Multiclass (Failed); 387 - PyMVA-GTB-Classification (Failed); 388 - PyMVA-GTB-Multiclass (Failed); 389 - PyMVA-AdaBoost-Classification (Failed); 390 - PyMVA-AdaBoost-Multiclass (Failed); 391 - PyMVA-Torch-Classification (Failed); 392 - PyMVA-Torch-Regression (Failed); 393 - PyMVA-Torch-Multiclass (Failed); 394 - gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:317,failure,failures,317,https://root.cern,https://github.com/root-project/root/issues/16242,4,"['Failure', 'failure']","['Failure', 'failures']"
Availability,"### Description. One example from the ROOT manual doesn't work anymore with ROOT 6.32:; https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction. ```Python; import ROOT. from array import array. class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):; def NDim( self ):; return 1. def DoEval( self, x ):; return (x[0] - 42) * (x[0] - 42). def Clone( self ):; x = MyMultiGenFCN(); ROOT.SetOwnership(x, False); return x. def main():; fitter = ROOT.Fit.Fitter(); myMultiGenFCN = MyMultiGenFCN(); params = array('d', [1.]); fitter.FitFCN(myMultiGenFCN, params); fitter.Result().Print(ROOT.std.cout, True). if __name__ == '__main__':; main(); ```; The error is:; ```txt; input_line_33:38:23: error: expected '(' for function-style cast or type construction; return unsigned int{};; ~~~~~~~~ ^; Traceback (most recent call last):; File ""/home/rembserj/example.py"", line 5, in <module>; class MyMultiGenFCN( ROOT.Math.IMultiGenFunction ):; TypeError: no python-side overrides supported (failed to compile the dispatcher code); ```. See:; * https://root.cern/manual/python/#alternative-for-tpymultigenfunction-and-tpymultigradfunction; * https://root-forum.cern.ch/t/minuit2minimizer-with-root-math-imultigenfunction/59102",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15315:680,error,error,680,https://root.cern,https://github.com/root-project/root/issues/15315,2,['error'],['error']
Availability,"### Description. This is probably a side effect of #14713. Therefore, let me tag @dpnrlz. In the latest ATLAS/LCG nightlies against ROOT master, we started picking up compilation errors like these ones:. ```; /build/atnight/localbuilds/nightlies/main--dev3LCG/athena/InnerDetector/InDetDigitization/PixelDigitization/src/RadDamageUtil.cxx: In member function 'StatusCode RadDamageUtil::generateEfieldMap(TH1F*&, InDetDD::PixelModuleDesign*, double, double, int, const std::string&, bool)':; /build/atnight/localbuilds/nightlies/main--dev3LCG/athena/InnerDetector/InDetDigitization/PixelDigitization/src/RadDamageUtil.cxx:273:20: error: no matching function for call to 'TH1F::SaveAs(const char*)'; 273 | eFieldMap->SaveAs(dirname.Data());; | ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/include/TH3.h:24,; from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/include/TH3F.h:24,; from /build/atnight/localbuilds/nightlies/main--dev3LCG/athena/InnerDetector/InDetDigitization/PixelDigitization/src/RadDamageUtil.cxx:10:; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/include/TH1.h:359:21: note: candidate: 'virtual void TH1::SaveAs(const char*, Option_t*) const'; 359 | void SaveAs(const char *filename, Option_t *option) const override; // *MENU*; | ^~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-el9-gcc13-opt/include/TH1.h:359:21: note: candidate expects 2 arguments, 1 provided; ```. There is no change to our code since the last nightly, where this was working fine. This can probably be easily resolved by providing a default value for the options argument. ### Reproducer. ```; hist1D->SaveAs(""directory""); // i.e. without explicit options; ```. ### ROOT version. heads/master@v6-31-01-1274-g778179c57e. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14863:179,error,errors,179,https://root.cern,https://github.com/root-project/root/issues/14863,2,['error'],"['error', 'errors']"
Availability,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11722:71,error,errors,71,https://root.cern,https://github.com/root-project/root/issues/11722,3,"['down', 'error', 'recover']","['download', 'errors', 'recover']"
Availability,"### Explain what you would like to see improved and how. (I will be using `DeltaPhi` for illustration here, but I suspect many functions have similar ""limitations"". The current way of doing things is perfectly valid and might even be preferable, this issue is also meant to gauge whether you would be willing to accept PR(s) with these changes in place). The current interface of `DeltaPhi` in `RVec.hxx` looks like this:; https://github.com/root-project/root/blob/7a4af49dc65a812a3feea24c98a49b84cd85caaf/math/vecops/inc/ROOT/RVec.hxx#L2876. This means that calling it with; ```cpp; auto dphi = DeltaPhi(3.14f, 1.23); ```; will lead to a template deduction error because both argument should have the same type. We have triggered this via RDataFrame from python by using the version that uses an `RVec` by passing a `vector<float>` and `vector<double>`. The error message you get at the moment tells us exactly that, but is also not the easiest to interpret if you are not too familiar with C++. One way around this is to introduce a temporary variable that converts one of the two vectors into the same type as the other. While this obviously works it's also not really elegant to do so. The ""proper""(?) way to fix this would to make `DeltaPhi` a bit more ""relaxed"" with its template arguments, something along the lines of:; ```cpp; template <typename T, typename U = T>; std::common_type_t<T, U> DeltaPhi(T v1, U v2, std::common_type_t<T, U> c = M_PI) { ; // implementation unchanged apart from updated static_assert to take into account T and U; }; ```; This would then have to be done also the the overloads taking an `RVec` to solve our issue. Is this something you would be interested in at all? Then we could maybe also discuss who would be doing the actual work for this. ### ROOT version. 6.18/00 onwards. ### Installation method. any . ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15077:658,error,error,658,https://root.cern,https://github.com/root-project/root/issues/15077,2,['error'],['error']
Availability,"### Explain what you would like to see improved and how. Currently custom streamers have no reliable way to communicate failure to the calling code (e.g. to have it skip the current object).; A possible way to add this capability would be through exceptions, but the I/O code must be made exception safe and properly handle the exceptions if that is the way we wanna go. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Linux. ### Additional context. RNTuple::Streamer currently uses exceptions to communicate failure, but this is not necessarily handled corrently in the calling code right now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15640:92,reliab,reliable,92,https://root.cern,https://github.com/root-project/root/issues/15640,3,"['failure', 'reliab']","['failure', 'reliable']"
Availability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-10213. Suppose to have an RDataFrame and call Histo1D on it. This will return an RResultPtr to a TH1D. There are some functions of TH1D that only accept pointers to TH1D, such as Add. In the case that a user wants to add two histograms created with an RDataFrame computational graph, for instance:; ```python; import ROOT; df_1 = ROOT.RDataFrame(10); h_1 = df_1.Histo1D(""rdfentry_""); df_2 = ROOT.RDataFrame(10); h_2 = df_2.Histo1D(""rdfentry_""); h_1.Add(h_2); ```; The Add function of h_1 will be correctly called, but it will give an error while trying to overload with h_2 that is of type RResultPtr. This situation could be generalized to all functions of ROOT classes that accept pointers to ROOT objects. It should be so that RResultPtr behaved like a pointer to the result of the computational graph, in order to be accepted by this kind of functions. If a user wants to retrieve directly the result of the computational graph in Python, s/he can call the GetValue function. This is similar to how in C++ one can dereference the RResultPtr. With the modifications written above, the GetValue function could be avoided, so that when a user types Histo1D s/he can actually use the result of that as if it were a TH1D object. See the attached file for a specific situation in which the behaviour of GetValue is unclear. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14578:633,error,error,633,https://root.cern,https://github.com/root-project/root/issues/14578,1,['error'],['error']
Availability,"### Explain what you would like to see improved and how. From https://its.cern.ch/jira/browse/ROOT-5305. I've been reading http://root.cern.ch/download/doc/ROOTUsersGuideHTML/ch12s21.html and one of the early passages is:; > It is clear that you want to be as independent as possible of the header file (i.e. MyClass.h) generated by MakeClass. The solution is to implement a derived class, for example MyRealClass deriving from MyClass such that a change in your Tree or regeneration of MyClass.h does not force you to change MyRealClass.h. You can imagine deriving several classes from MyClass.h, each with a specific algorithm. I would like to request an addition to this User Guide section which outlines this example of deriving MyRealClass from MyClass. It might just need an extra line or two explaining how this would work. Jean-François. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14566:143,down,download,143,https://root.cern,https://github.com/root-project/root/issues/14566,1,['down'],['download']
Availability,"### Explain what you would like to see improved and how. From the forum: https://root-forum.cern.ch/t/rootssh-from-mac-os-with-homebrew-fails-with-netcat/55593. Apparently, `rootssh` uses a couple of Linux-specific things that prevent it to work on macOS, namely:; - The script relies on the OpenBSD `netcat` (GNU variant does not support UNIX-domain sockets), which is usually available as `nc` on macOS.; On GNU/Linux, `nc` is typically a symlink to `netcat`; thus, I would advise to replace all occurrences of `netcat` to `nc` in the script.; - It also relies on `xdg-open`, that complies to the freedesktop.org's XDG specification, and that is expected to be present on most (all?) GNU/Linux systems.; However, `open` should be used instead in macOS. ### ROOT version. 6.28/04. ### Installation method. Not specified. ### Operating system. MacOS Ventura 13.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13215:378,avail,available,378,https://root.cern,https://github.com/root-project/root/issues/13215,1,['avail'],['available']
Availability,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778:176,avail,available,176,https://root.cern,https://github.com/root-project/root/issues/15778,1,['avail'],['available']
Availability,"### Explain what you would like to see improved and how. I found myself trying to use a glob in `TChain::Add` with a remote path. I discovered that in XRootD, this is supported:; ```; TChain c{""Events""};; c.Add(""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run*"");; c.GetListOfFiles()->GetEntries(); (int) 4; ```; Whereas with https (through davix) this is not supported; ```; TChain c{""Events""};; c.Add(""https://root.cern/files/HiggsTauTauReduced/*.root"");; Error in <TDavixSystem::DavixOpendir>: failed to opendir the directory: HTTP 405 : Method Not Allowed, Permission refused (17); ```. First off, we should understand more clearly with the different libraries if this use case is 1. knowingly supported (xrootd), knowingly unsupported (davix) 2. a valid use case or seen as a corner case. Base on that, we should decide whether to actually support it in ROOT, which would mean support it with all the different remote protocols, or remove support with xrootd and decide to always throw an exception in case remote globbing is attempted. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13258:479,Error,Error,479,https://root.cern,https://github.com/root-project/root/issues/13258,1,['Error'],['Error']
Availability,"### Explain what you would like to see improved and how. Moving from JIRA: [ROOT-9438](https://its.cern.ch/jira/browse/ROOT-9438). Advanced users (e.g. TMVA internals) might want to define a computation graph once (e.g. by jitting) and then apply it to several different data-sets or several subsets of a dataset in sequence, without having to re-generate the computation graph each time.; The introduction of a new type of head node, a ""computation manager"", which can attach to different ""loop managers"", would be one relatively simple way to allow this.; Common usage of RDataFrame would remain the same, with the loop manager using a computation manager to ""speak"" to the computation graph under the hood. Explicit usage of the computation manager node would allow to attach to different loop managers.; At least the schema of the dataset (or the subset that one expects to read) should probably still be known a priori, to allow RDataFrame to error out early in case of misspelled column name, inexistent branch name and so on.; To allow the reusage of the same computation graph, actions should not be deleted at the end of the event loop as it is currently done but kept around for the next run. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15070:948,error,error,948,https://root.cern,https://github.com/root-project/root/issues/15070,1,['error'],['error']
Availability,"### Explain what you would like to see improved and how. Python2 is not supported since a while, and supporting in ROOT both Python2 and Python3, despite easing greatly the transition of users and experiments, incremented the maintenance cost of the codebase. . All traces of Python2 should be removed from the ROOT codebase and all the simplifications deriving from this removal should be put in place. ### ROOT version. v6.32/00. ### Installation method. All. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13861:226,mainten,maintenance,226,https://root.cern,https://github.com/root-project/root/issues/13861,1,['mainten'],['maintenance']
Availability,"### Explain what you would like to see improved and how. Root's CMake configuration should set requirements on the C++ standard and compiler used for the given branch. . ### ROOT version. On Ubuntu Linux, having git clone the root repository, and initially checked out (to the latest stable branch which was) `v6-28-06`, which didn't succeed to build (despite the configuration passing) when setting the C++ standard to C++20 and compiler gcc/g++ version 9.4.0. ### Installation method. build from source. ### Operating system. Linux Ubuntu 20.04. ### Additional context. I initially attempted to build from root branch `v6-28-06`, using compiler g++ 9.4.0, setting to the C++ standard to C++20. CMake configuration was successful, [but errors occurred during compilation that wasn't obvious](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/6?u=jade2). It was then pointed out to me that[ I had the wrong branch that supports C++20 and the wrong compiler version](https://root-forum.cern.ch/t/building-root-with-standard-set-to-c-20-results-in-compilation-errors-on-linux/56715/7?u=jade2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13886:737,error,errors,737,https://root.cern,https://github.com/root-project/root/issues/13886,3,['error'],"['errors', 'errors-on-linux']"
Availability,"### Explain what you would like to see improved and how. The RDataFrame JIT logic makes use of a series of controlled memory leaks between different functions to ensure lifetime of objects that are needed by the JIT until that actually happens. This is an optimization but has certain fragilities, that were already analysed in a recent [bug report](https://github.com/root-project/root/issues/15399). The same topic surfaced in the past (see [this issue moved from JIRA](https://github.com/root-project/root/issues/15076)). And the fact we rely on leaking objects is subtly error-prone (see a recent [PR](https://github.com/root-project/root/pull/15477)). We should investigate how to implement a different way to handle the JIT machinery so that it does not require leaking objects. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15520:575,error,error-prone,575,https://root.cern,https://github.com/root-project/root/issues/15520,1,['error'],['error-prone']
Availability,"### Explain what you would like to see improved and how. The [example](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#progressbar) given by the RDataFrame documentation on the use of the progress bar does not run because the wrong function is used. ```; import ROOT; rdf = ROOT.RDataFrame(10).Define(""x"", ""1""); rdf_1 = ROOT.RDF.RNode(rdf.Filter(""x == 1"")); ROOT.RDF.Experimental.AddProgressBar(rdf_1); ```. This gives the error; ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); /tmp/ipykernel_531/2773921370.py in <module>; 1 import ROOT; 2 rdf = ROOT.RDataFrame(10).Define(""x"", ""1""); ----> 3 rdf_1 = ROOT.RDF.RNode(rdf.Filter(""x == 1"")); 4 ROOT.RDF.Experimental.AddProgressBar(rdf_1). TypeError: Template method resolution failed:; none of the 2 overloaded methods succeeded. Full details:; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(const ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; none of the 2 overloaded methods succeeded. Full details:; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&&) =>; TypeError: could not convert argument 1; RInterface<ROOT::Detail::RDF::RNodeBase,void>::RInterface<ROOT::Detail::RDF::RNodeBase,void>(const ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase,void>&) =>; TypeError: could not convert argument 1; none of the 3 overloaded methods succeeded. Full details:; RI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15040:433,error,error,433,https://root.cern,https://github.com/root-project/root/issues/15040,1,['error'],['error']
Availability,"### Explain what you would like to see improved and how. This forum post https://root-forum.cern.ch/t/too-many-operators-for-the-ttree-project-conditions/58009/5 triggered a discussion that probably `RResultPtr` could better behave with respect to ownership of its pointee. For example, this function; ```cpp; TH1D *DrawStuff(const char *columnname) {; auto file = TFile::Open(""tutorials/hsimple.root"", ""READ"");; auto ntuple = file->Get<TTree>(""ntuple"");; ROOT::RDataFrame df(*ntuple);; auto ht = df.Histo1D(*h, columname);; return ht.GetPtr();; }; ```. Will return a dangling pointer since the `RResultPtr` going out of scope will destroy the pointee. The forum user presents a pattern such as. ```cpp; THStack* histStack = new THStack(""histStack"", ""Bs_MCORR"");; for(int i=0; i<sampNumb; i++) {; TFile* file = new TFile(rootList[i]);; TTree* tree = (TTree*)file->Get(""DecayTree"");; ROOT::RDataFrame df(*tree);; auto ht = df.Filter(conds[i].Data()).Histo1D(h, ""Bs_MCORR"");; histStack->Add(ht.GetPtr(), , ""HIST && E1 && EX0"");; }; histStack->Draw();; ```. Which also doesn't work with the current API. Admittedly, this example would not work in general since `THStack` does not take ownership of the passed histograms and assumes they will be kept alive by ROOT global objects. In general, for this kind of use case we could convey the message to users they can store the histograms in a vector of shared pointers which is the clearest and most standard data structure to represent the situation correctly. So we need:. * `std::shared_ptr<T> RResultPtr<T>::GetSharedPtr()`; * More documentation on the RDataFrame user guide about these use cases; * A tutorial starting from the forum post reproducer once we have the API. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14766:1247,alive,alive,1247,https://root.cern,https://github.com/root-project/root/issues/14766,1,['alive'],['alive']
Availability,"### Explain what you would like to see improved and how. This is really up for discussion, but I wanted to at least raise the issue. One can put an arbitrarily large number as the `endEntry` of the global entry range passed to `RDatasetSpec::WithGlobalRange`, and everything will run correctly: RDataFrame simply stops the event loop at the last actually available entry. Diagnosing this case to warn the user or to error out is not straightforward in general: think of a dataset made of O(1k) files read over the network: hard to tell what the max number of entries is before we start processing. I think this is the reason for the current behavior. Reproducer:. ```cpp; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RSample.hxx""; #include <ROOT/RDataFrame.hxx>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Fill();; t.Write();; }; ; ROOT::RDF::Experimental::RDatasetSpec spec;; ROOT::RDF::Experimental::RSample sample(""main"", {{""t"", ""f.root""}});; spec.AddSample(sample);; spec.WithGlobalRange({0, 2}); // but the tree only has 1 entry; ROOT::RDataFrame(spec).Count().GetValue(); // no error; }; ```. ### ROOT version. any that supports RDatasetSpec. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13800:355,avail,available,355,https://root.cern,https://github.com/root-project/root/issues/13800,3,"['avail', 'error']","['available', 'error']"
Availability,"### Explain what you would like to see improved and how. Unfortunately, Vc, a very nice library, is currently not supporting cpp17 and is not supported any more.; On Fedora 36 the compilation of ROOT presents deprecation warnings, but it's just a matter of time before they become errors.; For a particular class of these warnings, i.e. the usage of std::iterator, a PR was proposed to Vc and will be hopefully considered https://github.com/VcDevel/Vc/pull/356 . However, it might be necessary to identify a path to get rid of the dependency on this unsupported product. ### ROOT version. all. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13713:281,error,errors,281,https://root.cern,https://github.com/root-project/root/issues/13713,1,['error'],['errors']
Availability,"### Explain what you would like to see improved and how. When installing ROOT in Windows from precompiled release section [on the web](https://root.cern/releases/release-63200/), it's said that one has to use the same Visual Studio and Python version in the system than the one used for compiling. The Visual Studio version (2022) is part of the title and (vc17) is part of the filename. The same is not true for the Python version. It would be great if this could be added. For example, what Python version should be downloaded for v6.32.00 ? It's 3.11 but you need to find it out the hard way. Thanks in advance!!. ### ROOT version. ```; ROOT v6.32.00; Built for linuxx8664gcc on May 28 2024, 05:02:02; From tags/v6-32-00@v6-32-00; With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /opt/root/bin; ```. ### Installation method. Pre-built binary. ### Operating system. Windows. ### Additional context. ![image](https://github.com/root-project/root/assets/10653970/3817d313-2d9c-460f-8f50-8cf86985ad6d)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15774:518,down,downloaded,518,https://root.cern,https://github.com/root-project/root/issues/15774,1,['down'],['downloaded']
Availability,"### Explain what you would like to see improved and how. https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/inc/mathtext.h#L153. is too small on windows to return the correct glyph calucated via e.g. . https://github.com/root-project/root/blob/9935cb9cb7cf2476857a4d09779e8b399b6229e6/graf2d/mathtext/src/mathtextencode.cxx#L314. ### ROOT version. some commit from a few months ago. But it shouldn't matter too much. . ### Installation method. build from source. ### Operating system. Windows. ### Additional context. I only noticed this since i tried to build root with clang-cl and it choked on the truncation msvc normally does (https://github.com/llvm/llvm-project/issues/63494). ```; E:\all\vcpkg\buildtrees\root\src\4777595a60-bb02050ae7\graf2d\mathtext\src\mathtextencode.cxx(174,33): error: character too large for enclosing character literal type; default: _glyph = L'\U0001d538' + (_code[0] - 'A');; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13091:840,error,error,840,https://root.cern,https://github.com/root-project/root/issues/13091,1,['error'],['error']
Availability,"### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.); - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version?; - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful); - [ ] OS name; - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea?; - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864; - [ ] Recommend also on ROOT manual these commands; - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/; - [x] Mention in the Forum --> Done by Bertrand; - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce?. The way to submit a bug report without opening ROOT by hand would be:. ```; root -b -e '.gh bug' -q; root -b -e '.gh feature' -q; root -b -e '.gh improvement' -q; root -b -e '.forum bug' -q; ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```; rootbug; rootfeature; rootimprovement; rootforum; ```. ### ROOT version; ```; ROOT v6.29/01; Built for linuxx8664gcc on Jun 20 2023, 17:02:12; From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf; With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13062:664,avail,available,664,https://root.cern,https://github.com/root-project/root/issues/13062,1,['avail'],['available']
Availability,"### Explain what you would like to see improved. I have a `c++` class with several constructors:. MyClass(const std::string& configfilename);; MyClass(const MyClass& other);. I have python bindings for this class that were generated with `cppyy`. Now, I have a piece of python code that instantiates my class, with a nice `try`-`except` block:. try:; obj = MyClass(args.config); except ConfigFileNotFoundError:; print(""config file ""+args.config+"" was not found!""); exit(0). Now, to test, I'm executing this with a wrong config file. But what I get is roughly this:. TypeError: none of the 2 overloaded methods succeeded. Full details:; MyClass(const std::string&) => ConfigFileNotFoundError; MyClass::MyClass(const MyClass&) => TypeError. So I'm wondering:; Since `cppyy` seems to handle function overloading with a `try`/`except` block, is there any reasonable way to do error handling for such applications? . I'd love to actually get the `ConfigFileNotFoundError` to handle it properly, rather than getting this `TypeError`. . I've started to look into using `__overload__`, but this seems less than elegant. Also, I was unable to figure out how to ask `__overload__` for the accepted signatures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9909:872,error,error,872,https://root.cern,https://github.com/root-project/root/issues/9909,1,['error'],['error']
Availability,"### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce?. A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT?. Part of CMSSW stack. ### Which operating system are you using?. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13035:367,error,error,367,https://root.cern,https://github.com/root-project/root/issues/13035,3,['error'],['error']
Availability,"### Explain what you would like to see improved. Right now, the HS3 implementation of importing a HistFactory model contains somewhat of a re-implementation of HistFactory itself in so far as the creation of the RooFit objects (constraint terms, ProdPdfs, ...) is manual.; This constitutes somewhat of a code duplication with the actual implementation of HistFactory.; It might be worthwhile to rewrite this function completely to instead of building the RooFit objects directly, instead build a HistFactory model and then invoke HistToWorkspaceFactory(Fast) on it. However, this would probably need some major refactoring of HistFactory itself, since one would need to circumvent the need of HistFactory to store everything in a temporary file, and also probably require adding a method that works like HistToWorkspaceFactory, but only on a single channel. Hence, this improvement constitutes a significant chunk of work, the only possible payoff being reduced maintenance in the future. ; I leave it to the RooFit dev's to decide if this makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12368:962,mainten,maintenance,962,https://root.cern,https://github.com/root-project/root/issues/12368,1,['mainten'],['maintenance']
Availability,### Explain what you would like to see improved. The current implementation (https://github.com/root-project/root/pull/13051) of filling the list of GlobalObservables in the ModelConfig when reading in an HS3 JSON file is rather makeshift and relies on the isConstant property to be set correctly for the GlobalObservables (const) and the NuisanceParameters (float). ### Share how it could be improved. A more robust solution needs to be found eventually. ### How to reproduce?. Can be reproduced with the HS3 tutorial (https://root.cern/doc/master/rf515__hfJSON_8py.html). ### ROOT version. 6-29-01-1583-g27a07966749. ### How did you install ROOT?. compiled with cmake from master. ### Which operating system are you using?. archlinux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13053:410,robust,robust,410,https://root.cern,https://github.com/root-project/root/issues/13053,1,['robust'],['robust']
Availability,"### Explain what you would like to see improved. We have [a proposal for an improved `rootls`](https://root-forum.cern.ch/t/terminal-program-for-printing-root-file-contents-in-a-tree-format/44185/12; ). After discussion we decided to implement missing features in `rootls` - for instance to keep it in Python (platform-independent terminal interaction) and to continue to make the code available to the other command line utilities. In our usage of `rootls`, what's missing? Let's collect this in comments below. ### Optional: share how it could be improved. See comments below. ### To Reproduce. See comments below. ### Setup. ROOT master, please - there are some +/- recent changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8361:386,avail,available,386,https://root.cern,https://github.com/root-project/root/issues/8361,1,['avail'],['available']
Availability,"### Explain what you would like to see improved. When I do a chi-2 calculation in RooFit, with [RooAbsPdf::createChi2](https://root.cern.ch/doc/master/classRooAbsPdf.html#a37b90418e779e3ecd92d43c42745d672), there is an option `DataError`, which is of type [RooAbsData::ErrorType](https://root.cern.ch/doc/master/classRooAbsData.html#a3f1b47ae0cc4e217f514a8e4331f7e88). There are options Expected error [RooAbsData::Expected], and also Poisson interval [RooAbsData::Poisson]. This is a bit confusing: how exactly do you calculate the expected error? Is it just the square root of the pdf (that is Poisson, but for the function, not data)? Could you please add that to the documentation?. I could not find it on the forum or in the source code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8615:269,Error,ErrorType,269,https://root.cern,https://github.com/root-project/root/issues/8615,3,"['Error', 'error']","['ErrorType', 'error']"
Availability,"### Explain what you would like to see improved; <!-- ; Explain what isn't as good as it could be and why; --> ; In RooMCStudy, the parameter of interest should also be fitted with Gaussian in addition to its pull distribution. This is important to perform the linearity test.; ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; --> The details problem and solution are explained in, https://root-forum.cern.ch/t/why-the-fitgauss-true-doesnt-work-for-plotparam-in-roomcstudy/53706. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12387:940,down,download,940,https://root.cern,https://github.com/root-project/root/issues/12387,1,['down'],['download']
Availability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6947:625,down,download,625,https://root.cern,https://github.com/root-project/root/issues/6947,1,['down'],['download']
Availability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently, when using RLogger, you get an output such as:. ```; Info in <[ROOT.RDF] Info ../../../root_verbose_rdf/tree/dataframe/src/RLoopManager.cxx:658 in void ROOT::Detail::RDF::RLoopManager::Run()>: Starting event loop number 0.; ```. Note in particular the redundant `Info`. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. - `s/Info in <(.*)>/\1/`; - not 100% sure about this, but maybe we could shorten the filename to just the part under `$ROOTSYS`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7008:374,redundant,redundant,374,https://root.cern,https://github.com/root-project/root/issues/7008,1,['redundant'],['redundant']
Availability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes.; Thanks,; Emil. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11757:1143,down,download,1143,https://root.cern,https://github.com/root-project/root/issues/11757,1,['down'],['download']
Availability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. When `RooRealVar::setVal(value)` is used with `value` outside the predefined `RooRealVar` range, the `value` is changed to the closest value in the predefined range. This goes against the most basic rules of programming for dealing with unexpected input. To add insult to injury, the behavior is completely silent!. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. The `value` should be checked and an error thrown/exception raised if it is out of range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. Run the following macro. In the end the value of `var` is `1` which is not what the user asked for. ```c++; void mwe() {; RooRealVar var(""var"", ""var"", 0.5, 0, 1);; std::cout << var.getVal() << std::endl;; var.setVal(333);; std::cout << var.getVal() << std::endl;; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.22.0; Debian 10 Buster; ROOT built from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6937:594,error,error,594,https://root.cern,https://github.com/root-project/root/issues/6937,2,"['down', 'error']","['download', 'error']"
Availability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:; RooFit cannot normalize the RooHistPdf correctly (always some random heights); RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; ```C++; using namespace RooFit;. void test2(); {; RooRealVar x(""x"",""x"",800,1800);; RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);; RooRealVar sigma(""sigma"",""sigma"",80,50,90);; RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);; RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);; RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);; RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));; Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);; RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);; RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);; RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);; RooGaussian Gauss4(""Gauss4"",""Gauss4"",",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11760:369,error,errors,369,https://root.cern,https://github.com/root-project/root/issues/11760,1,['error'],['errors']
Availability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent ; `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]"");; TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly; g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error; ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++; TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");; f.SetParName(3, ""lastParameter"");; // Parameters names: p0, p1, p2, lastParameter; f.SetParNames(""a"", ""b"");; // Parameters names: a, b, p2, p3; ```; User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7805:1034,error,error,1034,https://root.cern,https://github.com/root-project/root/issues/7805,1,['error'],['error']
Availability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; In:. https://root.cern.ch/doc/master/classTTree.html#a9fc48df5560fce1a2d63ecd1ac5b40cb. the entry number is zero by default, that should not be a default parameter. If I wanted to get the zeroth entry, I would just get the zeroth entry. On the other hand, If the user forgets to put the entry there, the compiler will be fine with it and we won't find the mistake until we check the outputs that will all correspond to the zeroth entry. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8300:1062,down,download,1062,https://root.cern,https://github.com/root-project/root/issues/8300,1,['down'],['download']
Availability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; On [Zenodo](https://zenodo.org/search?q=conceptrecid:""848818""&sort=-publication_date&all_versions=True), only 10 releases are currently listed and the reason of selection is not obvious. None of ROOT 5 are there whereas there are still some usages of that legacy versions. Even the most of ROOT 6 releases are not available. As a result, citing ""the DOI specific to your ROOT version"" is practically difficult. It would be great if every new release is available on Zenodo. Publishing historical releases, ex. all ROOT 6 and recent ROOT 5 used by major projects, will be a plus. Ancient releases like ROOT 3 and 4 may not be worth doing, though. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. Publishing a new release on Zenodo (automatically) as part of the release process?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->; N/A. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; N/A. ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8706:425,avail,available,425,https://root.cern,https://github.com/root-project/root/issues/8706,3,"['avail', 'down']","['available', 'download']"
Availability,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; When there are many columns in a `ROOT::RDataFrame`, `df.Display(many_columns)->Print()` is truncated and doesn't include all the columns requested. I can understand this truncating without any parameter, but when I pass the columns explicitly, no truncating should occur. The Pandas approach to truncation is better and should be adopted as well - it shows first and last columns with `...` in the middle, clearly indicating the truncation. ### Setup; 1. ROOT version: 6.22.06; 2. Operating system: Ubuntu 18.04; 3. How you obtained ROOT: `binary download`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7205:659,down,download,659,https://root.cern,https://github.com/root-project/root/issues/7205,1,['down'],['download']
Availability,"### Explain what you would like to see improved; Currently, cling uses `cling::utils::getWrapPoint()` to cut the input line in two parts: one that will become part of an internal wrapper function (i.e., `__cling_Un1Qu3xxx`) and the other that will not.; This mechanism is overly simplistic and cannot correctly handle some cases, e.g. users would expect that the excerpts below are equivalent, however,; ```c++; root [0] namespace foo { int i; }; root [1] using namespace foo; std::cout << ""hello\n"";; hello; root [2] i; (int) 0; ```; translates into do not wrap `using namespace foo;` and wrap `std::cout << ""hello\n"";`, while; ```c++; root [0] namespace foo { int i; }; root [1] std::cout << ""hello\n""; using namespace foo;; hello; root [2] i; input_line_11:2:3: error: use of undeclared identifier 'i'; (i); ^; ```; will wrap all the input. Therefore, the `using` directive is not parsed at the TU level. Also, this function adds missing `;` for some cases, but the current support is somewhat limited (see related issue #8064). ### Optional: share how it could be improved; Cling should cut the input line in several independent fragments that will be either wrapped or directly parsed by clang. Additionally, these fragments shall incorporate some marks, such as ""needs wrapper"" or ""needs terminating semicolon"". The proposed solution might also add the terminating `;` where required, if requested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9171:765,error,error,765,https://root.cern,https://github.com/root-project/root/issues/9171,1,['error'],['error']
Availability,"### Explain what you would like to see improved; I've been working (with couet and others) on reducing errors in the Doxygen documentation of the code, from 10k+ to a manageable level of under 1k (and going down). However, currently, there is no safeguard to prevent new commits from introducing new errors, which is prone to happen, as not everyone is familiar with the doxygen syntax. To maintain in a sustainable way the 'clean status' of the reference guide and online documentation, it would be helpful to add an automation script that compiles the documentation only with the files modified in the Pull Request to be merged, in the same way that a bot checks now about clang-format, etc. Because Doxygen can be configured to have only one input file, this extra check will not involve much time as compared to building the whole documentation. Then, it could be checked whether no warnings are produced by the 'touched' files. ### Optional: share how it could be improved; - [ ] The Github action or CI script should modify the -DDOCU_INPUT CMake flag to only add those touched by the Pull Request; - [x] The INCLUDE_PATH in the Doxyfile should be extended (for good, not just in the script) to all possible include folders, as you might touch a 'source file', but would get a bunch of warnings if Doxygen does not find the corresponding include path. (This is not the case in the full build, as the include files are also part of the INPUT, but wouldn't be the case if we just 'touch' the sources in the PR).; - [ ] The WARN_LOGFILE (-DDOCU_LOGFILE in cmake) should be set by the CI script to a useful filename. If the file is empty after running doxygen, the Test passes.; - [ ] Optional: HAVE_DOT, listLibs, etc. could be set to NO in case a speedup is wanted.; - [ ] Potentially hook it also up with spell-checking checks, see https://github.com/codespell-project/codespell; - [ ] Alternative approach suggested by albert-github to avoid missing references: use the overnight tag file from h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9953:103,error,errors,103,https://root.cern,https://github.com/root-project/root/issues/9953,3,"['down', 'error']","['down', 'errors']"
Availability,### Explain what you would like to see improved; In `builtins/xrootd/CMakeLists.txt` we don't pass any openssl configuration over to Xrootd. This causes inconsistent builds for ROOT and xrootd. ### Optional: share how it could be improved; Maybe use; ```; OPENSSL_CRYPTO_LIBRARY; OPENSSL_SSL_LIBRARY; OPENSSL_INCLUDE_DIR; ```; as made available with Xrootd's `CMakeLists.txt`. . ### To Reproduce; See https://root-forum.cern.ch/t/building-from-source-root-v6-26-00-failing-with-openssl-on-macos-monterey/49078,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10075:335,avail,available,335,https://root.cern,https://github.com/root-project/root/issues/10075,1,['avail'],['available']
Availability,"### Explain what you would like to see improved; In the GitHub templates for ""Issue"" and ""Improvement"", I think it could be interesting to replace these instructions. ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ```. with:; ```; ### Setup; '''; Suggested: Paste here the output of root -b -q; '''; ```; (Maybe some more metadata had to be added to root -b in order to tag some builds as 'dnf' or 'binary prepackage'.). It would be interesting to define a special command in the ROOT binary folder, like; `rootissue` or `rootfeature` that opens a web browser with an issue or feature template, with the field ""Setup"" already prepopulated with the current ROOT version. See below how KiCad does this. ### Additional context; KiCad already has this functionality. When one presses on ""Report Bug"" in the KiCaD GUI, it opens a webpage pre-filled with the version field, see https://gitlab.com/kicad/code/kicad/-/blob/master/common/tool/common_control.cpp#L50. It just opens a web browser with the following [link](https://gitlab.com/kicad/code/kicad/-/issues/new?issue[description]=%3C%21--%20Before%20Creating%20a%20New%20Issue%3A%0A%2A%20Search%20the%20issue%20tracker%20to%20verify%20the%20issue%20has%20not%20already%20been%20reported.%0A%2A%20Only%20report%20one%20problem%20per%20issue.%20--%3E%0A%0A%23%20Description%0A%3C%21--%20What%20is%20the%20current%20behavior%20and%20what%20is%20the%20expected%20behavior%3F%20--%3E%0A%3C%21--%20Please%20attach%20screenshots%20if%20they%20will%20help%20explain%20the%20problem.%20--%3E%0A%0A%23%20Steps%20to%20reproduce%0A%3C%21--%20Please%20include%20a%20screen%20recording%20if%20it%20will%20help%20explain%20how%20to%20reproduce.%20--%3E%0A%3C%21--%20If%20this%20issue%20is%20specific%20to%20a%20project%2C%20please%20attach%20it.%20--%3E%0A1.%0A2.%0A%23%20KiCad%20Version%0A%0A%60%60%60%0AApplication%3A%20KiCad%20PCB%20Editor%0A%0AVersion%",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8795:284,down,download,284,https://root.cern,https://github.com/root-project/root/issues/8795,1,['down'],['download']
Availability,"### Explain what you would like to see improved; It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved; - [ ] Add some info to all docs, e.g. that a lambda like this would do:; ```c++; [](const std::vector<T>&) { }; ```; Failure to meet that signature leads to an explosion of template instantiation failures with gcc.; - [ ] Show how to do a parallel for using `Map()`?; - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ); - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex;; const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; // Empty reducer; auto reducer = []() -> int { return 0; };; auto printRange = [=](std::size_t) -> int {; return 0;; };; ; ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7871:345,Failure,Failure,345,https://root.cern,https://github.com/root-project/root/issues/7871,2,"['Failure', 'failure']","['Failure', 'failures']"
Availability,"### Explain what you would like to see improved; Mathjax2 is used by documentation. ### Optional: share how it could be improved; Mathjax3 brings some performance improvements. Maybe it can be even downloaded on the fly, rather than storing it as part of the ROOT source code?. ### To Reproduce; https://root.cern.ch/doc/master/. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/doxygen/doxygen/issues/9185#issuecomment-1059971803",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10067:198,down,downloaded,198,https://root.cern,https://github.com/root-project/root/issues/10067,1,['down'],['downloaded']
Availability,"### Explain what you would like to see improved; My students and myself often encounter the following situation. We are trying to make a fit of a histogram to a Gaussian. This works well and ROOT finds perfectly all parameters without having to set them initially by hand. ![image](https://user-images.githubusercontent.com/10653970/180315415-84720a1c-e52c-4d32-a7ab-bc86b319967c.png). ```; FCN=220.83 FROM MIGRAD STATUS=CONVERGED 70 CALLS 71 TOTAL; EDM=6.98482e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 3.92175e+02 4.99591e+00 2.81307e-02 6.15584e-06; 2 Mean 9.95290e-03 1.03175e-02 7.50080e-05 1.55399e-03; 3 Sigma 1.04566e+00 8.42889e-03 1.42471e-05 1.69822e-02; ```. Now, we decide it would be best to fine-tune the fit by also adding a pol0 constant. Thus we click on Add radio-button, pol0. (Results in gaus(0)+pol0(3)). Then, you click on Fit, and the fit completely fails. ![image](https://user-images.githubusercontent.com/10653970/180315692-d3b3f3de-e08d-49d7-9bbe-ddc01231bc00.png). ```; FCN=9324.48 FROM HESSE STATUS=FAILED 11 CALLS 179 TOTAL; EDM=3.13749e-15 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 100.0 per cent; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 -2.89841e+05 4.24264e-01 -0.00000e+00 0.00000e+00; 2 p1 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 3 p2 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 4 p3 1.17552e+01 3.42858e-01 1.17552e+01 1.63372e-07; ```; So the manual workaround is to set by hand all the initial parameters of the first fit, so that it finally converges. ### Optional: share how it could be improved; After 'adding' a pol0, it would be nice that the initial values of the Gaussian parameters are not reset to zero, but are rescued from the previous fit where only the Gaussian was used. This is the parameter window just before adding pol0:. ![image](https://user-images.githubusercontent.com/10653970/180316740-e5f902e7-fde7-4404-893d",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11021:478,ERROR,ERROR,478,https://root.cern,https://github.com/root-project/root/issues/11021,2,['ERROR'],['ERROR']
Availability,"### Explain what you would like to see improved; Some legacy CINT commands are not available for Cling, but could be quite useful, like:. - [ ] ""./keyword"" search keyword in help information; - [ ] "".l"" for printing list of local variables ("".g"" does exist already for printing the list of global variables). ### Optional: share how it could be improved; Rescue from CINT the ones considered most useful. Reminder:. - [ ] Update accordingly in TApplication.cxx and/or MetaSema.cpp help messages; - [ ] Update accordingly in https://github.com/root-project/web/blob/main/manual/cling/index.md; - [ ] Copy resulting output to https://github.com/root-project/web/blob/main/manual/first_steps_with_root/index.md; - [ ] https://github.com/root-project/NotebookPrimer/blob/master/notebooks/2-ROOT-Basics.ipynb. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/root-project/root/issues/10065; Here is the full list of ROOTv5.34:; ```; Note1: Cint is not aimed to be a 100% ANSI/ISO compliant C/C++ language; processor. It rather is a portable script language environment which; is close enough to the standard C++. Note2: Regulary check either of /tmp /usr/tmp /temp /windows/temp directory; and remove temp-files which are accidentally left by cint. Note3: Cint reads source file on-the-fly from the file system. Do not change; the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters.; This is harmless. Please ignore. CINT/ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:83,avail,available,83,https://root.cern,https://github.com/root-project/root/issues/10191,1,['avail'],['available']
Availability,"### Explain what you would like to see improved; TGHtml objects can be stored into a TFile. However, when opening a TBrowser, right click or double click leads to:; ```; Error in <TQClass::New>: cannot create object of class TGHtml; Error in <TKey::ReadObj>: Cannot create new object of class TGHtml; ```. It would be nice if it would be supported in the TBrowser. ### Optional: share how it could be improved; - Right click, dump, prints the HTML code to terminal; - Double click reproduces the TGHtml on a canvas?. ### To Reproduce; 1. Store TGHtml object to TFile; 2. Open TFile with TBrowser and double-click. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8647:170,Error,Error,170,https://root.cern,https://github.com/root-project/root/issues/8647,2,['Error'],['Error']
Availability,"### Explain what you would like to see improved; The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh; https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved; - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ""; - Or remove the part about export ROOTSYS...; - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context; See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10722:644,error,error-in-thisroot-csh-during-installation,644,https://root.cern,https://github.com/root-project/root/issues/10722,1,['error'],['error-in-thisroot-csh-during-installation']
Availability,"### Explain what you would like to see improved; The TGCommandLinePlugin is great for external CMake/C++ applications that use some ROOT classes / TApplication and GUI classes TGFrame, where you want to have some interactive debugging options via Cling. To make it even more user-friendly, it would be nice if the following things were improved:; - Pressing Up and Down Arrow Keys changes the selected command in the ComboBox.; - Pressing Tab Key propagates to the command line to give command suggestions / autocompletion, as it happens in the real ROOT terminal; - Typed commands are added to the ROOT history file, so that the next time . ### Optional: share how it could be improved; Changes in TGTextEntry:; ```; virtual void UpDownArrowsPressed(Int_t); //*SIGNAL*. case kKey_Down:; CursorOutDown();; UpDownArrowsPressed(1);; break;; case kKey_Up:; CursorOutUp();; UpDownArrowsPressed(0);; break;; ```. Changes in TGCommandLinePlugin; ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this,; ""HandleTab()"");; fCommand->Connect(""UpDownArrowsPressed()"", ""TGCommandPlugin"", this,; ""HandleArrows()"");. void TGCommandPlugin::HandleTab(); {; //redirect CLI suggestions back to terminal; }. void TGCommandPlugin::HandleArrows(); {; //Scroll one up or down in combobox; }. if (app->InheritsFrom(""TRint"") || fForceFlag ) // accept also if a user set an fForceFlat explicitly?; Gl_histadd((char *)string);; ```. ### To Reproduce; - Open tutorials/gui/guiWithCINT.C; - Try to use up and down arrow keys to scroll between line commands. ### Setup; 1. ROOT 6.23/01; 2. Linux; 3. Self-built",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180:365,Down,Down,365,https://root.cern,https://github.com/root-project/root/issues/7180,3,"['Down', 'down']","['Down', 'down']"
Availability,"### Explain what you would like to see improved; The TGCommandPlugin has an internal TTimer that I think is redundant. I don't understand why the function CheckRemote needs to be checked every one second, which also calls frame->Layout(). Shouldn't it be better to just check in the beginning with a TTimer::SingleShot? Or if gROOT->GetApplication() changes during lifetime, with a signal/slot ?. ```; fTimer = new TTimer(this, 1000);; fTimer->Reset();; fTimer->TurnOn();; ...; ////////////////////////////////////////////////////////////////////////////////; /// Handle timer event. Bool_t TGCommandPlugin::HandleTimer(TTimer *t); {; if ((fTimer == 0) || (t != fTimer)) return kTRUE;; CheckRemote("""");; return kTRUE;; }; void TGCommandPlugin::CheckRemote(const char * /*str*/); {; Pixel_t pxl;; TApplication *app = gROOT->GetApplication();; if (!app->InheritsFrom(""TRint"")); return;; TString sPrompt = ((TRint*)app)->GetPrompt();; Int_t end = sPrompt.Index("":root ["", 0);; if (end > 0 && end != kNPOS) {; // remote session; sPrompt.Remove(end);; gClient->GetColorByName(""#ff0000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(Form(""Command (%s):"", sPrompt.Data()));; }; else {; // local session; gClient->GetColorByName(""#000000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(""Command (local):"");; }; fHf->Layout();; }; ```; Alternatively, it would be nice to provide a function to stop the timer by the user, when performance is needed and you are sure that TApplication is always the same. ### Setup; 1. ROOT from git master; 2. Ubuntu 20; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8269:108,redundant,redundant,108,https://root.cern,https://github.com/root-project/root/issues/8269,1,['redundant'],['redundant']
Availability,"### Explain what you would like to see improved; We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved; Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6635:75,down,downloading,75,https://root.cern,https://github.com/root-project/root/issues/6635,2,['down'],['downloading']
Availability,"### Explain what you would like to see improved; You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved; - `void` should be supported.; - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce; ```c++; void runParallel() {; ROOT::Internal::TExecutor ex; ; constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; ; auto printRange = [=](std::size_t i) {; const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); ; const auto begin = nEvent * i;; const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile; //return 0;; }; ; ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7872:281,failure,failures,281,https://root.cern,https://github.com/root-project/root/issues/7872,1,['failure'],['failures']
Availability,"### Explain what you would like to see improved; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule; 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",; 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent; 23 0x00007ffff6adec40 in TClass::ReadRules; 24 0x00007fffecd0b3a0 in TCling::Initialize; ```. ### Optional: share how it could be improved. As discussed in root-project/root#7398, we should remove the `TClingMemberIter` iteration from the initialization phase as it causes a lot of deserialization resulting in redundant memory usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7724:1841,redundant,redundant,1841,https://root.cern,https://github.com/root-project/root/issues/7724,1,['redundant'],['redundant']
Availability,"### Explain what you would like to see improved; qch and tag files generated by doxygen and posted at https://root.cern/reference/ are big. It would reduce some space and make it nicer to download, especially in the case of the tag file, that is XML and the automatic browser parser gets easily stuck trying to read it instead of downloading it. ### Optional: share how it could be improved; Apply compression as already done for the html. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/doxygen/doxygen/issues/9185#issuecomment-1059971803",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10066:188,down,download,188,https://root.cern,https://github.com/root-project/root/issues/10066,2,['down'],"['download', 'downloading']"
Availability,"### Feature description. As discussed in CHEP24 for CMS FlashSim samples produced with; oversampling a dedicated histo filling scheme is needed where events; are first accumulated on same-gen subevents then used to fill a TH; with proper error handling.; In order to achieve this in a (memory) efficient way the following; features would be needed:; - know the number of threads actively used and/or which threads will; not be used at all or any longer in the processing; - define a global_rdfentry_ that is a progressive number on the inputdataset; - know what global_rdfentry_ a given thread is processing. An additional useful feature, for handling oversampled events is the; option to have output events in Snapshots sorted according to the; global_rdfentry_ (i.e. maintaining the input order). ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16740:238,error,error,238,https://root.cern,https://github.com/root-project/root/issues/16740,1,['error'],['error']
Availability,"### Feature description. As discussed in CHEP24, it would be useful to support Caching (e.g.; RDF.Cache) of a limited number of variables with the other variables; being still available in a lazy way. Example usage; ```; #suppose rdf has columns Jet_pt, Jet_eta; rdf=rdf.Define(""Jet_regressedPt"", ""slowRegression(Jet_pt)""); rdf=rdf.Cache([""Jet_regressedPt""]); rdf=rdf.Define(""Jet_discriminator"",""computeDiscriminator(Jet_regressedPt,; Jet_eta""); rdf=rdf.TH1F(""Jet_discriminator""); ```. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16741:176,avail,available,176,https://root.cern,https://github.com/root-project/root/issues/16741,1,['avail'],['available']
Availability,"### Feature description. Hello everyone, I would like to try to make the software available on flathub. I would like to know if I can do it and if there are any kind of considerations I should have.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14254:82,avail,available,82,https://root.cern,https://github.com/root-project/root/issues/14254,1,['avail'],['available']
Availability,"### Feature description. Hi,. I would like to use the functionality of [RDatasetSpec](https://root.cern.ch/doc/master/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html) object to setup my RDataFrame code. However, this seems to lack one crucial functionality: the option to match events from different trees using friend trees and the ""BuildIndex"" functionality. I see that the object allows to pass some global friends via ""WithGlobalFriends"" but this adds a global friend trees without the option of matching events from the trees. One would also not want to match the events between the individual samples and a global friend tree. What I would want is to have an option to define per sample a tree/tchain that would be added as a friend tree for that given sample with the option to match the events between the trees using BuildIndex or similar functionality. . What this would mean in practice is probably to add FriendInfo support for the individual RSamples. This is also what is natural for my setup (which is rather common I think) where you want to match detector level events (one TTree) and truth level events (another TTree) and this matching is different for different samples in the specification. . Please, let me know if this is a reasonable thing or there is some workaround available already. Best,; Tomas. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14933:1298,avail,available,1298,https://root.cern,https://github.com/root-project/root/issues/14933,1,['avail'],['available']
Availability,"### Feature description. Moving the issue from JIRA: [ROOT-9372](https://its.cern.ch/jira/browse/ROOT-9372) . Currently, the only way to early-quit an event loop is to use Range transformations: when all ranges in all branches of an RDF graph have reached their end, the event loop is stopped.; It would be useful to add an Until transformation that takes a condition evaluated at each event (in the form of a callable that potentially takes columns as arguments), and interrupts processing as soon as the condition is verified. Two {{Until}}s in different chains (different branches of the computation graph) will interrupt processing of their downstream actions, and will interrupt the event loop when they have all ""fired"".; This behavior is analogous to what Range already does, although with a more limited choice of stopping condition, so most of the internal infrastructure required is already in place. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15069:645,down,downstream,645,https://root.cern,https://github.com/root-project/root/issues/15069,1,['down'],['downstream']
Availability,"### Feature description. The projection methods of profile plots (TProfile::ProjectionX and TProfile2D::ProjectionXY) have a bunch of useful options that allow us to visualize useful features like the RMS in each bin, or the sum of weights, or the number of entries in each bin. I would like to propose that a new context submenu be added to JSROOT for profile plots, or at least a lot more options appear under the ""proj"" submenu for these plot types. All the different options from these two methods should be available (the options are the same between TProfile and TProfile2D). I actually dont know what the existing options under the ""proj"" submenu even do, to be honest?. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15851:512,avail,available,512,https://root.cern,https://github.com/root-project/root/issues/15851,1,['avail'],['available']
Availability,"### Is your feature request related to a problem? Please describe. As of 6.28/00, `RooFitResult::globalCorr` causes a seg fault if `SumW2Error` was used in the fit. First reported in the forum [here](https://root-forum.cern.ch/t/extracting-global-correlation-causes-a-seg-fault-with-sumw2error/). ### Describe the solution you'd like. `RooFitResult::globalCorr` should return the global correlation coefficient using the corrected error matrix. As stated in the [forum](https://root-forum.cern.ch/t/extracting-global-correlation-causes-a-seg-fault-with-sumw2error/55138/3), the global correlation coefficients are defined as; $`\rho_k^2 = 1 - [V_{kk} * (V^{-1})_{kk}]^{-1}`$,; so the corrected correlation coefficients could be defined as; $`(\rho_{corr})_k^2 = 1 - [(V_{corr})_{kk} * (V_{corr}^{-1})_{kk}]^{-1}`$. ### Describe alternatives you've considered. At the very least, calling `RooFitResult::globalCorr` should raise a sensible error instead of causing a seg fault. ### Additional context. More generally, it would be nice if RooFit printed the corrected matrix instead of (or after) the uncorrected one at the end of the fit. At present, one sees a long list of parameter updates printed, but the errors and correlations in the final one printed differ from those stored in the `RooFitResult`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12935:122,fault,fault,122,https://root.cern,https://github.com/root-project/root/issues/12935,7,"['error', 'fault']","['error', 'errors', 'fault', 'fault-with-']"
Availability,"### Is your feature request related to a problem? Please describe. Create a TGraphErrors object from a dataframe. In the RDataFrame Class there is the function GraphAsymmErrors which has asymmetric errors that could be set to the same value to obtain the wanted result. But, if there are no errors on the x-axis for example, there is no elegant way to set them to zero other than defining a column with zero values on the dataframe, given that in RDataFrame documentation says you should give a string (name of column). ### Describe the solution you'd like. Add the member function RDataFrame::GraphErrors. ### Describe alternatives you've considered. An easy way to set the errors to zero in RDataFrame::GraphAsymmErrors, something like:; auto graph = df.GraphAsymmErrors(""x"", ""y"", 0, 0, ""eyl"", ""eyh""); ; without having to define a new column in the dataframe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11959:198,error,errors,198,https://root.cern,https://github.com/root-project/root/issues/11959,3,['error'],['errors']
Availability,"### Is your feature request related to a problem? Please describe. It's not relevant for this feature request, but: this would allow CMS to trace autoparsing by setting an environment variable, after https://github.com/root-project/root/pull/7609 is merged. ### Describe the solution you'd like. ```bash; export ROOT_LOG='ROOT.InterpreterPerf=Debug(3),ROOT.RBrowser=Error'; ```; should set verbosity for `ROOT.InterpreterPerf` to `kDebug+3` and for `ROOT.RBrowser` to `kError`. ### Describe alternatives you've considered; `.` in variable names is forbidden in bash, so `export ROOT_LOG_ROOT.InterpreterPerf='Debug(3)'` doesn't work, and we'd need to mangle this. That's ugly and complex. We could also have an entry in `.rootrc` - but it brings in a dependency for `RLogger` on `TEnv` that I'd like to avoid. ### Additional context. https://github.com/root-project/root/issues/6931",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7614:366,Error,Error,366,https://root.cern,https://github.com/root-project/root/issues/7614,1,['Error'],['Error']
Availability,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361:148,avail,available,148,https://root.cern,https://github.com/root-project/root/issues/7361,2,"['avail', 'down']","['available', 'down']"
Availability,"### Is your feature request related to a problem? Please describe. Since C++11, the user can select a in-memory size for the enum, when constructing the list of data member of offset directly from clang/core-meta this is properly taken into account (i.e we ask each member for its offset) but when recalculating the offset ""by hand"" (eg in the on-the-fly pseudo dictionary generation for std::pair) we need to know the actual size of the enum given its typename ... This information is currently not available from core meta (i.e. missing TEnum::GetSize) so we have to ""assume"" (incorrectly) 4 bytes in R__CreateEmulatedElement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6721:500,avail,available,500,https://root.cern,https://github.com/root-project/root/issues/6721,1,['avail'],['available']
Availability,"### Is your feature request related to a problem? Please describe.; 1. We would like to compile ROOT without triggering a 'call home' in the CMakeLists.txt, at https://github.com/root-project/root/blob/master/CMakeLists.txt#L124, so we can install ROOT on network-isolated nodes without incurring artificial build delays, or on network-connected nodes which we would prefer to remain private.; 2. When desired, we would like the ROOT internet connection check to work regardless of captive portals and other web screening portals, since currently those sites may appear as connected because the content of the downloaded file is not checked for accuracy.; 3. We would like to be notified in advance of the privacy policy that governs the data that is (inevitably) collected by the root.cern webservers without the user's consent or knowledge, since there exist user privacy expectations here. [GDPR principles](https://gdpr.eu/what-is-gdpr/) that may apply: lack of transparency, collection beyond the limited purpose, lack of data minimization, and probably some others (I am not a laywer). ### Describe the solution you'd like; The 'call home' in https://github.com/root-project/root/blob/master/CMakeLists.txt#L124 should default to off, and should only be called when explicitly requested by a user, and only when the features (`builtin_gsl` and `clad`) that depend on it are enabled. When it is used, the internet connection check should check a checksum of the downloaded file. ### Describe alternatives you've considered; Alternatively, the user can be alerted upon downloading the ROOT source code from any of its various locations that compiling this software may trigger data collection on the root.cern server, e.g. https://root.cern/install/build_from_source/, https://github.com/root-project/root/releases, etc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11603:610,down,downloaded,610,https://root.cern,https://github.com/root-project/root/issues/11603,3,['down'],"['downloaded', 'downloading']"
Availability,"### Is your feature request related to a problem? Please describe.; <!--; A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]""; -->; Here:. https://root.cern.ch/doc/master/TH2Poly_8h_source.html#l00033. The code suggests that we cannot store in these bins neither the bin error nor the sum of the squares of the weights. Thus in order to keep track of the errors we need two TH2Poly instances, one for the values and the other for the errors. What is the logic behind this design? I do not think this makes sense. Can this be changed? ; ### Describe the solution you'd like; <!--; A clear and concise description of what you want to happen.; -->; Add setters and getters for errors, add members for the error and a member for the sum of squares of weights. . ### Describe alternatives you've considered; <!--; Can you think of alternative solutions or features?; -->. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8340:325,error,error,325,https://root.cern,https://github.com/root-project/root/issues/8340,5,['error'],"['error', 'errors']"
Availability,"### Is your feature request related to a problem? Please describe.; Although ROOT 6.26/06 was [released](https://root.cern/doc/v626/release-notes.html#release-6.2606) on July 28, 2022, there is currently (two weeks later) no release with downloadable build products or release notes on github, https://github.com/root-project/root/releases/tag/v6-26-06 compared to https://github.com/root-project/root/releases/tag/v6-26-04. ROOT 6.26/06 does not appear on the github side panel either. ### Describe the solution you'd like; The release producedures for a new ROOT version should include a bullet item to create a release with build products and binary distributions. ### Describe alternatives you've considered; Alternatively there could be a decision to not publish any build products or binary distributions on github and direct all users to root.cern (which would also be consistent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11197:238,down,downloadable,238,https://root.cern,https://github.com/root-project/root/issues/11197,1,['down'],['downloadable']
Availability,"### Is your feature request related to a problem? Please describe.; I want to create a frame for a _RooFormulaVar_. Unfortunately, it doesn't have a method _frame()_, so I wanted to use a _RooPlot_ constructor to create the frame, and later use the existing _plotOn()_ method of _RooFormulaVar_. However, it seems that [RooPlot](https://root.cern.ch/doc/master/classRooPlot.html) allows setting the number of bins only for _RooAbsRealLValue_, which is inconsistent. No method to set the number of bins is available. The underlying access to _nbins_ is private. ### Describe the solution you'd like; Allow to set the number of bins in all constructors. Maybe there should be a separate method for that, but it may be dangerous if someone tries to change the number of bins in the middle of processing. ### Describe alternatives you've considered; I already decided to use a new _RooRealVar_ instead of _RooFormulaVar_, but I think that a plot should allow to set the number of bins. UPD: no, there are no arguments to change the number of bins in _plotOn_. It seems it can be set only for the Plot.; _It looks like I can set the number of bins during _plotOn_ of _RooFormulaVar_. This is great. However, I think that in this case the number of bins in the constructor should be removed, to reduce code duplication. At least it should be made consistent in all constructors (see no reason for the otherwise, but I don't understand RooFit well yet)._. P.S. There is also a typo in the _RooPlot_ class description, ""settting"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7782:505,avail,available,505,https://root.cern,https://github.com/root-project/root/issues/7782,1,['avail'],['available']
Availability,"### Is your feature request related to a problem? Please describe.; I want to use the manual offline. Ideally a pdf, but an archive of html pages is fine too. ### Describe the solution you'd like; Could it be added to the Reference Guide at https://root.cern/reference/ ? And give a link to that in some visible place. ### Describe alternatives you've considered; I know I can use `wget`, but I downloaded the Reference Guide from the site (oh no, I generated it myself - but I think there's no difference? If there is, maybe it could be included into doxygen data?), and regret that Manual is missing there. Thanks a lot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421:395,down,downloaded,395,https://root.cern,https://github.com/root-project/root/issues/7421,1,['down'],['downloaded']
Availability,"### Is your feature request related to a problem? Please describe.; I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko).; But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like; Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered; @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {; std::vector<int> fContent;; ClassDef(VectorWrapper, 2);; };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8517:693,error,error,693,https://root.cern,https://github.com/root-project/root/issues/8517,1,['error'],['error']
Availability,"### Is your feature request related to a problem? Please describe.; I'd like to use fast Python with ROOT bindings.; Why do I want that? I like ROOT trees, they are rather good containers, and can be very interactive with TreeViewer. I almost never use numpy, scipy or pandas (though it is said that recent PyPy versions support them). I use C++ for hard calculations (like 3-dimensional fits), but mostly I use pure Python for high-level data analysis, and it would be useful to combine PyPy and ROOT for middle-hard calculations. ; I'm also developing an architectural framework for data analysis in Python, and I'm curious whether PyPy + ROOT will ever be possible (it would be a good combination for speeding up Python). I'm interested in the possibility to use PyPy with ROOT. When I launched that, there was an error. > $ pypy; > \>\>\>\> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT/\_\_init__.py"", line 22, in <module> import cppyy; File ""/opt/root/cur/lib/cppyy/\_\_init__.py"", line 64, in <module> libcppyy_mod_name, major, minor)); ImportError: Failed to import libcppyy2_7. Please check that ROOT has been built for Python 2.7. However, I allowed Python 2 support in ROOT, and `python2` imports ROOT fine. A similar error was for Python 3, but Python 3 version for my PyPy and ROOT installations were different, so I checked that with Python 2. ### Describe the solution you'd like; Allow PyPy to use ROOT. ### Describe alternatives you've considered; I think that PyPy is the most general fast Python implementation (I didn't use other ones and not sure whether they will work with ROOT).; I've heard about `numba`, but it looks like it's mostly useful with numpy.; `Jython` didn't run when I tried it with `tox`. ### Additional context; I've sent a letter to PyPy developers, and this is what they [replied](https://mail.python.org/pipermail/pypy-dev/2021-May/016164.html):. > ROOT uses a fork of cppyy with several l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110:817,error,error,817,https://root.cern,https://github.com/root-project/root/issues/8110,1,['error'],['error']
Availability,"### Is your feature request related to a problem? Please describe.; I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"".; When merging those files with hadd there are multiple messages displayed, like:; ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673; Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798; Warning in <TFile::Init>: successfully recovered 21 keys; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Source file 2: ppfx_me000z-200i_run_526.root; Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT.; hadd Target path: out.root:/; hadd Target path: out.root:/nom; hadd Target path: out.root:/nom/parent; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110; Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216; Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107; Error in <TBufferFile::CheckByteCount>: object of class ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8952:281,recover,recovered,281,https://root.cern,https://github.com/root-project/root/issues/8952,10,"['Recover', 'recover']","['Recover', 'recovered']"
Availability,"### Is your feature request related to a problem? Please describe.; In cling cmd prompt, `.x`, `.X` meta commands loads a `.C` script then invoke a function with the same name as the script file (stripped extension).; Every time the filename changes the entry function name needs to be changed too. This is not user friendly, or even error prone. P.S. In `interpreter/cling/lib/MetaProcessor/MetaSema.cpp` , there is a comment about plan to enabling using `__main__` as a filename independent entry function name. However identifier with two underscores is reserved by c++ standard (https://en.cppreference.com/w/cpp/language/identifiers). ### Describe the solution you'd like; A filename independent entry function like `clingmain`, `clingstart`, `clingrun`, `cling_on_load`, `cling_on_x`... etc.; Or function attribute like `[[cling::on_load]] int any_func_name(char c, int a) {...}` to let cling call `any_func_name` on meta cmd `.x`.; A `[[cling::on_unload]]` can be useful too, though not directly related to this feature request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299:334,error,error,334,https://root.cern,https://github.com/root-project/root/issues/11299,1,['error'],['error']
Availability,"### Is your feature request related to a problem? Please describe.; Sometimes, in the midst of a ROOT session, it would be helpful to get an overview of the local and global variables that have been declared. cling allows `.g` for printing a list of global variables.; The option `.l` for local variables got lost in the migration from CINT to cling, but there is an open issue: https://github.com/root-project/root/issues/10191. ### Describe the solution you'd like; Apart from `.l` for local variables, it would be nice if ROOT (or cling) had a graphical way of displaying variables with its value, potentially as a 'TreeView'. Something like:; `new TVariableBrowser()`; instead of; `new TBrowser()`. Or maybe, it could be just a new TGTab inside the already existing TBrowser. If the variable is an std::vector, one could maybe right click on it and click on ""Scan"" or ""Print"" as if were a TTree. Or double-clicking on it could unfold the tree view, or open a new GUI dialog with the vector. Something like:; https://docs.spyder-ide.org/current/panes/variableexplorer.html. ### Describe alternatives you've considered; I use the QtCreator's debugger to see the list of variables, see https://root.cern/blog/code-horsepower-f1/#debugging-your-root-scripts-or-executables-with-gdb, but it would be nice to have this available directly from the TBrowser or from the terminal. One could also use Python and Spyder, but that's not directly the ROOT terminal... ### Additional context. If the feature were helpful for cling users, it should not rely on ROOT, maybe just a python script behind the scenes using Tkinter as GUI, that can be run from the cling terminal?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11295:1317,avail,available,1317,https://root.cern,https://github.com/root-project/root/issues/11295,1,['avail'],['available']
Availability,"### Is your feature request related to a problem? Please describe.; Sometimes, we may want to create plot with a XKCD style. It [will not be implemented](https://sft.its.cern.ch/jira/browse/ROOT-7567) in ROOT6. ### Describe the solution you'd like; Add an option in THistPainter in order to draw histograms and graph with a ""XKCD style"". Some examples are available here:. > https://jakevdp.github.io/blog/2013/07/10/XKCD-plots-in-matplotlib/; > http://matplotlib.org/xkcd/examples/showcase/xkcd.html; > https://linuxtoosx.blogspot.com/2013/07/create-xkcd-style-graphs-with-gnuplot.html. Basically, matplotlib, a python plotting library has such option.; Of course, plotting such histogram may not be used inside papers but could be used in some presentations. ### Describe alternatives you've considered; For the algorithm used to distord lines, I found these functions that I use in this small macro (they come from http://rfonseca.github.io/xkcd-gnuplot/). ```; #include <TRandom.h>; #include <TF1.h>; #include <TMath.h>;  ; using namespace std;;  ; TRandom *r = nullptr;;  ; double jiggle(double *x, double *par) {; return x[0]*(1.+(2.*r->Uniform()-0.5)*0.015); //Relative +-1.5% (as a fraction of the y value); };  ; double jigglea(double *x, double *par) {; double range = 20.; //Range for the absolute jiggle; return x[0]+range*(2.*(r->Uniform()-0.5)*0.005); //Absolute (as a fraction of the range); };  ; double jiggledCos(double *x, double *par) {; return 5.*TMath::Cos(jiggle(x,par));; };  ; void test() {; r = new TRandom(1234);; TF1 *f = new TF1(""f"",jigglea,-10.,10.);; f->Draw();; TF1 *fcos = new TF1(""fcos"",jiggledCos,-10.,10.);; fcos->SetLineColor(kBlue);; fcos->Draw(""same"");; }; ```. For the font it appears the ""Humor sans"" font does the job (https://github.com/shreyankg/xkcd-desktop/blob/master/Humor-Sans.ttf). This is available under a free licence. ### Additional context; As [stated](https://sft.its.cern.ch/jira/browse/ROOT-7567?focusedCommentId=84789&page=com.atlassian.jira.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6682:356,avail,available,356,https://root.cern,https://github.com/root-project/root/issues/6682,1,['avail'],['available']
Availability,"### Is your feature request related to a problem? Please describe.; When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>; import cppyy; File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>; import libPyROOT as _backend; ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3.; People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like; The solution could be:; - to make bindings work both for Python 2 and 3, or; - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7289:166,error,error,166,https://root.cern,https://github.com/root-project/root/issues/7289,3,"['ERROR', 'error']","['ERROR', 'error', 'error-pyinit-libpyroot']"
Availability,"### Is your feature request related to a problem? Please describe.; When saving a canvas as .tex, I often have to later add the begin{document} and usepackages by hand. ### Describe the solution you'd like; - `SaveAs("".tex"", ""standalone"")` adds the statements below in the output file:; - Default behaviour without arguments adds the statements below as comment (prepend %). ```; \documentclass{standalone}; \usepackage{tikz}; \usetikzlibrary{patterns,plotmarks}; \begin{document}; <----- here the current output; \end{document}; ```. ### Describe alternatives you've considered; To develop a bash script that modifies the text file using cat / echo. Or a c++ macro.; https://root-forum.cern.ch/t/colored-2d-histograms-in-pdf-output/13822/45. ### Additional context; https://github.com/root-project/root/pull/9147",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9384:645,echo,echo,645,https://root.cern,https://github.com/root-project/root/issues/9384,1,['echo'],['echo']
Availability,"### The observed bug; I have been using the RooMomentMorphND (and RooMomentMorphFuncND) classes, where I am trying to save these functions to a workspace .root file. I am not able to do this, as an error occurs specifically when trying to write this class to a workspace. Note this error is not seen when I tested on the RooMomentMorph class, only in the ND case. . ### To Reproduce; I have prepared a small example in order to reproduce the error: ; ```c++; #include <iostream>; #include <fstream>; #include<TRandom.h>. float input_lambda(float width){; return -6.347e-07*width*width+0.0015*width+1.835;; }. void exampleND(){; auto myy = new RooRealVar(""myy"", ""myy"", 110., 155.);; myy->setBins(450.);. auto w = new RooWorkspace(""w"");. auto hist_1 = new TH1F(""hist_1_125"",""hist_1_125"", 450, 110., 155.);; for(double i=0; i<10000; i++){hist_1->Fill(gRandom->Gaus(125., input_lambda(1.)));}; auto hist_400 = new TH1F(""hist_400_125"",""hist_400_125"", 450, 110., 155.);; for(double i=0; i<10000; i++){hist_400->Fill(gRandom->Gaus(125., input_lambda(400.)));}; hist_1->Scale(1./hist_1->Integral());; hist_400->Scale(1./hist_400->Integral());. auto data_sig_1 = new RooDataHist(""data_sig_1"", ""data_sig_1"", RooArgList(*myy), hist_1);; auto data_sig_400 = new RooDataHist(""data_sig_400"", ""data_sig_400"", RooArgList(*myy), hist_400);. auto hist_pdf_1 = new RooHistPdf(""hist_pdf_1"", ""hist_pdf_1"", RooArgList(*myy), *data_sig_1);; auto hist_pdf_400 = new RooHistPdf(""hist_pdf_400"", ""hist_pdf_400"", RooArgList(*myy), *data_sig_400);. std::vector<float> Lambda_list = {1., 400.};; auto Lambda = RooRealVar(""lambda"", ""lambda"", 1., 400.);; auto paramVec = TVectorD(2);; for (int j = 0; j < 2; ++j){; 	paramVec[j] = Lambda_list[j];; }. auto morph_ND = new RooMomentMorphND(""morph_ND"",""morph_ND"", Lambda, RooArgList(*myy), RooArgList(*hist_pdf_1, *hist_pdf_400), paramVec, RooMomentMorphND::Linear);. w->import(*morph_ND);; w->Print();; w->writeToFile(""test_workspace.root"");; }; ```; If you run the code, you will see t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11876:198,error,error,198,https://root.cern,https://github.com/root-project/root/issues/11876,3,['error'],['error']
Availability,### This Pull request:; * Fix axis labels ; * CaloTower selection in context of REveDataCollection when collection filter is applied; * Fix client's duplicate error messages from server; * Minor correction in Summary view layout; * Add expression validator for new column expression in table; * Review log messages; * Introduce HttpPublic option which disable usage of RFileDialog; * Updates REnderCore with fixes in font renderin. From verion 1.5 to 1.6.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16829:159,error,error,159,https://root.cern,https://github.com/root-project/root/pull/16829,1,['error'],['error']
Availability,"### To Reproduce. ```; root tutorials/graphics/triangles.C ; root [] c1->SaveAs(""c1.C""); root [] .x c1.C; ```; One gets several error messages: `error: use of undeclared identifier 'ci'`. Problem can be easily fixed. PR will be provided after #11914 will be merged",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11916:128,error,error,128,https://root.cern,https://github.com/root-project/root/issues/11916,2,['error'],['error']
Availability,"#2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend the core library to detect when there is a memory checker (or similar) that leads to the memory being salted after a delete and in that case disable our own already-deleted test (since it is now ineffective anyway and assumingly it is already doing the job of warning the user about use-after-delete). And subsequently the test needs to also be disabled in those cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11330:1754,failure,failure,1754,https://root.cern,https://github.com/root-project/root/issues/11330,1,['failure'],['failure']
Availability,"$ find /usr -name ""cuchar""; /usr/include/c++/8/cuchar; /usr/include/c++/7/cuchar; /usr/include/c++/6/cuchar. PR fixes a broken CI build on Ubuntu 16 (gcc 5.4): /mnt/build/workspace/root-pullrequests-build/build/include/stl.modulemap:366:12: error: header 'cuchar' not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3578:241,error,error,241,https://root.cern,https://github.com/root-project/root/pull/3578,1,['error'],['error']
Availability,"&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:6661,error,error,6661,https://root.cern,https://github.com/root-project/root/issues/12673,1,['error'],['error']
Availability,"' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:28635,error,error,28635,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"'); -- Compiler Flags: -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 2.7.17; -- Found ccache: /usr/bin/ccache; -- Looking for ZLib; -- Looking for Freetype; -- Building LZMA version 5.2.4 included in ROOT itself; -- Looking for X11; -- Could NOT find GIF (missing: GIF_LIBRARY GIF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT fin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:2045,Error,Error,2045,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Error'],['Error']
Availability,"'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:2496,error,error,2496,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]; 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]; 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]; 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]; 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:4459,error,error,4459,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"'__atomic_fetch_add_8' unresolved. It does not fail on any other Fedora architectures including 32 bit arm. Fedora koji scratch build: https://koji.fedoraproject.org/koji/taskinfo?taskID=55575382. ```; 50/1028 Test #11: pyunittests-pyroot-pyz-ttree-branch-attr ............................***Failed 1.24 sec; test_alias_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_basic_type_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_char_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ntuples (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch_leaflist (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr) ... IncrementalExecutor::executeFunction: symbol '__atomic_fetch_add_8' unresolved while linking symbol '__cf_16'!; ERROR; test_vector_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; ======================================================================; ERROR: test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.22.04/bindings/pyroot/pythonizations/test/ttree_branch_attr.py"", line 139, in test_ttree_subclass_in_namespace; t = ROOT.Foo.MyTree(); TypeError: Foo::MyTree constructor failed; ----------------------------------------------------------------------; Ran 9 tests in 0.509s; FAILED (errors=1); CMake Error at /builddir/build/BUILD/root-6.22.04/cmake/modules/RootTestDriver.cmake:237 (message):; error code: 1; ```; ### Expected behavior; Successful test on all architectures. ### To Reproduce; 1. Compile root 6.22.04 for ix32; 2. Run unit tests. ### Setup; 1. ROOT version: 6.22.04; 2. Operating system: Fedora Linux 32/33/34 for ix32; 3. Compilation from source during packaging for Fedora/EPEL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6813:1430,ERROR,ERROR,1430,https://root.cern,https://github.com/root-project/root/issues/6813,4,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error', 'errors']"
Availability,"'s master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThrea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366:1108,error,error,1108,https://root.cern,https://github.com/root-project/root/issues/7366,3,"['Error', 'error']","['Error', 'error']"
Availability,"() (__closure=0x7f131ad40bc0, ; codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""...); at /home/vpadulan/programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:340; #6 0x00007f132bf6def9 in ROOT::Internal::RDF::InterpreterCalc (; code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., context=""RLoopManager::Run""); ```. Which as a first instinct hints at some possible contention between the different things cling is doing in the two threads. For the moment I cannot come up with an easier reproducer, see next section for more details. # How to reproduce. Here is the patch to print the statements that show the PID (as .txt so that I can attach it to this issue):; [0001-Print-statements-for-DistRDF-Cling-failure.txt](https://github.com/root-project/root/files/9735187/0001-Print-statements-for-DistRDF-Cling-failure.txt). The following is a Python script with the test; ```py; import os. import pyspark; from dask.distributed import Client, LocalCluster. import ROOT; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs; SparkDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; DaskDF = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; # verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kDebug+10). def connection():; daskconn = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True, memory_limit=""2GiB"")). conf = {""spark.master"": ""local[2]"", ""spark.driver.memory"": ""4g"", ""spark.app.name"": ""roottest-distrdf-common""}; sparkconf = pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkan",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:11993,failure,failure,11993,https://root.cern,https://github.com/root-project/root/issues/11515,1,['failure'],['failure']
Availability,"(New) option “TEXTE”, for 1D histograms, with ""± bin error""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9505:53,error,error,53,https://root.cern,https://github.com/root-project/root/issues/9505,1,['error'],['error']
Availability,(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7393:39,error,error,39,https://root.cern,https://github.com/root-project/root/issues/7393,1,['error'],['error']
Availability,"(T*) {; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include ""cling/Interpreter/RuntimeUniverse.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtyp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:18872,error,error,18872,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:1473,Error,Error,1473,https://root.cern,https://github.com/root-project/root/issues/8268,1,['Error'],['Error']
Availability,"(reported by -Wimplicit-int-float-conversion). Fixing next failure (http://cdash.cern.ch/testDetails.php?test=69494934&build=706195):; -- TEST COMMAND -- ; cd /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core; /usr/bin/timeout -s USR2 270s root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core"")' -e 'gROOT->SetMacroPath(""/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core"")' -q -l -b /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx+; -- BEGIN TEST OUTPUT --. Processing /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx+...; Checking FromHumanReadableSize; Checking ToHumanReadableSize; Checking 1024 vs 1.024KiB an 1KB; Checking 2097152 vs 2.09715MiB an 2MB; Checking 4294967296 vs 4.29497GiB an 4GB; Checking 8796093022208 vs 8.7960",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4257:59,failure,failure,59,https://root.cern,https://github.com/root-project/root/pull/4257,1,['failure'],['failure']
Availability,"))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x7f0cc29a41b0));. Failure in gInterpreter->Calc: PID=31643,errorCode=1; ```. Adding these two lines in `cling::IncrementalExecutor::jitInitOrWrapper` provides a way to stop the execution when the offending code is triggered, so that we can step in with `gdb -p PID_OF_FAILING_DISTRDF_TASK`:; ```; volatile int a = 0;; while (a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:1944,Failure,Failure,1944,https://root.cern,https://github.com/root-project/root/issues/11515,1,['Failure'],['Failure']
Availability,"), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tried/succeeded building root with nvc++?. FWIW, nvc++ was configured with gcc 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036:1161,error,error,1161,https://root.cern,https://github.com/root-project/root/issues/9036,4,"['Error', 'error']","['Error', 'error']"
Availability,"); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader = rt.TMVA.DataLoader(dataset); loader.AddVariable('var0','var0','D'); loader.AddVariable('var1','var1','D'). # now get the input file; input = 'input_00.root'; input = rt.TFile.Open(input). sig = input.Get('ts'); bck = input.Get('tb'). sig_weight = 1.; bck_weight = 1.; loader.AddSignalTree(sig,sig_weight) # I crash here; #loader.AddBackgroundTree(bck,bck_weight); ```; **The error:**; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /opt/conda/envs/hw/lib/python3.7/site-packages/JupyROOT/helpers/utils.py in post_execute(self); 347 else:; 348 for t in transformers:; --> 349 (out, err, otype) = t(out, err); 350 if otype == 'html':; 351 IPython.display.display(HTML(out)). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in transform(self, output, error); 330 self.addClassForOutputFlag(Header.group(5)); 331 self.__currentHeaderName = Header.group(2); --> 332 self.__transformOneGroup(Header.group(5)); 333 elif EmptyHeader:; 334 self.__currentType = EmptyHeader.group(1). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in __transformOneGroup(self, firstLine); 226 if j != 0:; 227 processed_lines += 1; --> 228 self.iterLines.next(); 229 tmp_str += ""<tr>""; 230 if DatasetName or NumEvents or VariableMeanHeader:. AttributeError: 'range_iterator' object has no attribute 'next'; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version 6.22/02 (via conda); OS: Ubuntu 18.04.5 LTS; (see top of the post for conda environment files). Please let me know if I can provide any more useful information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:2862,error,error,2862,https://root.cern,https://github.com/root-project/root/issues/6657,2,"['down', 'error']","['download', 'error']"
Availability,"); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If I call `TH1::GetXaxis()->SetRange`, the Yaxis range automatically adjusts to zoom in on the selected bins. For `THStack::GetXaxis()->SetRange`, however, this is not the case–the Yaxis retains the same range it had before. Originally reported in the [forum](https://root-forum.cern.ch/t/yaxis-range-does-not-adjust-when-zooming-xaxis-of-thstack/42953?u=mwilkins). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `THStack::GetXaxis()->SetRange` should result in a re-zoom of the Yaxis so that the bins in-range are visible. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See [forum](https://root-forum.cern.ch/t/yaxis-range-does-not-adjust-when-zooming-xaxis-of-thstack/42953?u=mwilkins).; ```python; import ROOT as r; h1 = r.TH1F(""h1"", ""h1"", 100, 0, 100); for i in range(int(1e6)):; h1.Fill(r.gRandom.Gaus(20, 5)); c = r.TCanvas(); h1.Draw() # full range shown; h1.GetXaxis().SetRange(1, 6); c.Update() # Yaxis zooms in to show content in bins 1 to 6; h2 = r.TH1F(""h2"", ""h2"", 100, 0, 100); for i in range(10):; h2.Fill(r.gRandom.Gaus(9, 5)); hs = r.THStack(); hs.Add(h1); hs.Add(h2); hs.Draw() # note Yaxis range; hs.GetXaxis().SetRange(1, 6); c.Update() # Yaxis range has not changed, making it difficult to see the bins; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; _ROOT Version_: 6.22/06; _Platform_: macOS; _Compiler_: conda-forge",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6991:2087,down,download,2087,https://root.cern,https://github.com/root-project/root/issues/6991,1,['down'],['download']
Availability,");```; (NB: on a system where ``sizeof(int)==2``, the compiler is (afaik) free to interpret 0 as int, whose complement will then be disappointingly small.); Under this interpretation, I want to cast doubt on ; ```; const Int_t kMaxUChar = 256;; const Int_t kMaxUShort = 65534;; ```; While there were some promising publications of computer scientists claiming to have succeeded in storing 256 in an unsigned char, later attempts to reproduce that research found that the bit sequence was indistinguishable from zero. The general consensus among computer scientists today is that the highest value which can be stored in a uint8_t is in fact 255. On the other hand, a few years later initially doubtful claims that 65535 could be stored in an unsigned short *were* replicated. Today, big tech (e.g. GAFAM) routinely store that value in their 16 bit numbers and even smaller startups are picking up on the trend. ``</sarcasm>``. (Also, while the kMaxUShort error is rendered harmless by the bitshift in kMaxShort, the kMaxUChar error means that kMinChar and kMaxChar are wrong. In fact, Char_t(kMinChar)>Char_t(kMaxChar) is true. However, nine out of ten math professors agree that the maximum of a set of values should be at least as large as the minimum of that set. ``[[citation needed]]``). These issues have been present in the codebase since at least ROOT5, so fixing them would break backwards compatibility. My suggestion is a different one. C++14 introduces an attribute called ``[[deprecated]]``. ```; [[deprecated(""kMaxUChar has a misleading value and should not be used.""; "" Please use std::numeric_limits<unsigned char>::max()"")]] ; const Int_t kMaxUChar = 256;; ```. And while we are at it, let's be honest: Most users are already somewhat aware that there is a C++ ecosystem outside the safe-ish space that is ROOT. The fallout of vendor-specific implementations has long decayed to a safe level, the air is fresh and breathable, standard compliant implementations are blooming. Thus:; ``",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12208:2067,error,error,2067,https://root.cern,https://github.com/root-project/root/issues/12208,2,['error'],['error']
Availability,* Controlled error when step size is 0.; * Small enhancement when TSeq printed in cling (properly show when the; step is smaller than 0),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10407:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/10407,1,['error'],['error']
Availability,* Fix error with too fast update of canvas before previous is completed; * Use better methods to work with STL containers like std::find_if or std::remove_if,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2648:6,error,error,6,https://root.cern,https://github.com/root-project/root/pull/2648,1,['error'],['error']
Availability,* Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14130:120,redundant,redundant,120,https://root.cern,https://github.com/root-project/root/pull/14130,1,['redundant'],['redundant']
Availability,"* Protect `EnableImplicitMT()` with `R__USE_IMT`.; * Expect error about non existent file in `readspeed` test. Those should have been caught by the `TestSupport` library, but that one doesn't work at the moment (see https://github.com/root-project/root/issues/12828).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12829:60,error,error,60,https://root.cern,https://github.com/root-project/root/pull/12829,1,['error'],['error']
Availability,"* PyROOT_PyUnicode_AsString changed return type from char* to const char*; * Using _PyObject_GC_TRACK results in linking error:; undefined reference to `_PyGC_generation0'; The python documentation says this about _PyObject_GC_TRACK:; ""A macro version of PyObject_GC_Track(). It should not be used for; extension modules.""; So it should not be used. Calling PyObject_GC_Track instead avoids the; undefined symbol. I also removed the #ifndef R__WIN32 since the; comment indicates that this was added to avoid the same issue on; windows. Calling PyObject_GC_Track instead of using the; _PyObject_GC_TRACK macro should fix the undefined symbol probelem on; windows too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2395:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/2395,1,['error'],['error']
Availability,* Removal of members; * Removal of base class; * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16172:145,avail,available,145,https://root.cern,https://github.com/root-project/root/pull/16172,1,['avail'],['available']
Availability,* Remove man pages for non-existing binaries; They might have existed in the past: g2rootold genmap proofserva roota. * Install generated man pages in the correct subdirectory (man/man1). * Use the correct library name in the plugin definitions. * Remove obsolete plugin definition; libPeac was removed in version 5.34.01. * Simplify rule; No need to exclude files that no longer exists. * TWebVirtualX was removed - remove plugin definition using it; See commit a07af0afbe2e26237bf8ca059abc34255378a070. * Don't download input file if it already exists; This allows running the tests with pre-fetched file in environments without network - like e.g. the Fedora package build server. * Python 3 compatibility,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4026:513,down,download,513,https://root.cern,https://github.com/root-project/root/pull/4026,1,['down'],['download']
Availability,"* Use only **Browsable::Provider** class for all factory methods; * Split ROOT6 and ROOT7 drawing plugins; * Rename RBrowsable -> RBrowserData to avoid confusion; * Fix Windows compiler error, tests on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4785:186,error,error,186,https://root.cern,https://github.com/root-project/root/pull/4785,1,['error'],['error']
Availability,"* [ ] `DeclUnloader::VisitNamedDecl`: https://reviews.llvm.org/D119675 was committed in https://github.com/llvm/llvm-project/commit/8c0eb32d2aa0bc73c176d7b25f47bdf37f967d3b, available since LLVM 15:; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/DeclUnloader.cpp#L559-L563; * [ ] `ExternalInterpreterSource::ImportDecl`; https://github.com/root-project/root/blob/44299a000236b7d16a5458917167ebbd306e11c3/interpreter/cling/lib/Interpreter/ExternalInterpreterSource.cpp#L100-L118. I'm pretty sure there are more - these are the first results grepping for `FIXME` and `TODO` in `interpreter/cling/`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14210:174,avail,available,174,https://root.cern,https://github.com/root-project/root/issues/14210,1,['avail'],['available']
Availability,"* [windows] Make `OpenDirectory` and `GetDirEntry` thread safe. Create a struct holding the flag, `HANDLE`, and `WIN32_FIND_DATA` used by `OpenDirectory`, `GetDirEntry`, and `FreeDirectory`, so each thread creates its own instance of it. This fixes randome failures in mutithreaded applications on Windows, like for example in the `R__USE_IMT` part of the `datasource-root` test:; ```; [ RUN ] TRootTDS.DefineSlotMT; Error in <TFile::TFile>: file C:/root-dev/build/x64/debug/tree/dataframe/test/G__NTupleStruct.vcx does not exist; [ OK ] TRootTDS.DefineSlotMT (191 ms); [ RUN ] TRootTDS.FromARDFMT; Error in <TFile::Init>: C:/root-dev/build/x64/debug/tree/dataframe/test/INSTALL.vcxproj not a ROOT file; C:\root-dev\git\master\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 23; [ FAILED ] TRootTDS.FromARDFMT (6 ms); ```. * Adress the comments from Axel. * Pass the correct pointer to the helper. * Cosmetics. * Update core/winnt/src/TWinNTSystem.cxx. Prevent possible memory leak. * Update core/winnt/src/TWinNTSystem.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13500:257,failure,failures,257,https://root.cern,https://github.com/root-project/root/pull/13500,4,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,"* [windows][skip-ci] Fix the C++ notebooks on Windows. * [windows][skip-ci] Fix the C++ notebooks on Windows. Fix the following errors in `bindings/jupyroot/python/JupyROOT/kernel/utils.py`:; ```; Traceback (most recent call last):; File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 70, in __init__; module = importlib.import_module(module_path); File ""c:\python39-32\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'JupyROOT.kernel.magics.magics\\cppmagic'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>; main(); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main; IPKernelApp.launch_instance(kernel_class=ROOTKernel); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance; app.initialize(argv); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner; return method(app, *args, **kwargs); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize; self.init_kernel(); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel; kernel = kernel_factory(parent=self, session=self.session,; File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance; inst = cls(*args, **kwargs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12951:128,error,errors,128,https://root.cern,https://github.com/root-project/root/pull/12951,1,['error'],['errors']
Availability,* fixes a memory leak in `testSPlot`; * make sure the last normalization set is kept alive in PyROOT even when the last normalization set was implicitly created from a Python collection via the new Pythonizations; * make sure no derived coefficients are evaluated without normalization sets in `SPlot` to fix undefined behavior when calling `getVal()` and `RooAbsReal::getValV()` checks for the last normalization set that might not be alive anymore; * improving the code of the `RooLinearVar` that is used by the `SPlot`. Closes #11221.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11228:85,alive,alive,85,https://root.cern,https://github.com/root-project/root/pull/11228,2,['alive'],['alive']
Availability,"* modernize RooSimPdfBuilder; * fix documentation; * add test for RooSimPdfBuilder; * fix logic error reported in https://github.com/root-project/root/issues/7481. The `RooSimPdfBuilder` is superseeded by the RooSimWSTool, but I still think it's a good idea to update this class which might still be used in the wild.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7489:96,error,error,96,https://root.cern,https://github.com/root-project/root/pull/7489,1,['error'],['error']
Availability,"* replace `Double_t` with `double` and `Int_t` with `int`. * replace `kTRUE` with `true` and `kFALSE` with `false`. * remove redundant member initializations. * avoid code duplication in internal-use constructors. * replace C-style casts with C++ casts. * add missing `_binnedPdf->setAttribute(""BinnedLikelihoodActive"") ;` to; one of the internal-use constructors to be consistent with the other; internal-use constructor. * fix memory leak of a `std::list<Double_t>`. * replace `fabs` with `std::abs`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9206:125,redundant,redundant,125,https://root.cern,https://github.com/root-project/root/pull/9206,1,['redundant'],['redundant']
Availability,"* replace wrong `dynamic_cast<RooAbsReal*>` with; `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in; debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,; which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```; ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:; ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]; 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;; ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8434:102,error,error,102,https://root.cern,https://github.com/root-project/root/pull/8434,2,['error'],['error']
Availability,*** Break *** segmentation violation in case of compilation errors in unnamed macros,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8367:60,error,errors,60,https://root.cern,https://github.com/root-project/root/issues/8367,1,['error'],['errors']
Availability,"*** headers files to be 0 linux time. It turns out in that case, Cling/Clang/LLVM refused to actually uses any of the system headers coming from the spack-provided compiler build. So nothing is properly defined not even `__GLIBCXX__`. The visible consequence is:; ```; ... rootcling_stage1 ... G__Core.cxx ... ; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; In file included from input_line_2:1:; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:175:47: error: use of undeclared identifier 'std'; void copyArray(T* src, void* placement, std::size_t size) {; ^; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:176:14: error: use of undeclared identifier 'std'; for (std::size_t i = 0; i < size; ++i); ^; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; ninja: build stopped: subcommand failed.; ```. ### Reproducer. ```; cat /var/tmp/a.cxx ; void a(); {; fprintf(stdout, ""Running the script a.cxx\n"");; }. touch -m a -d '1969-12-31 18:00:00.000000000' /var/tmp/a.cxx . ls -l /var/tmp/a.cxx ; -rw-r--r-- 1 pcanal us_cms 63 Dec 31 1969 /var/tmp/a.cxx. root.exe -b -l -q /var/tmp/a.cxx . Processing /var/tmp/a.cxx...; input_line_8:1:10: fatal error: file '/var/tmp/a.cxx' modified since it was first processed; #include ""/var/tmp/a.cxx""; ^; ```. ### ROOT version. | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2024, 21:36",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372:1172,error,error,1172,https://root.cern,https://github.com/root-project/root/issues/14372,1,['error'],['error']
Availability,"*********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGAT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:2813,ERROR,ERROR,2813,https://root.cern,https://github.com/root-project/root/issues/13895,1,['ERROR'],['ERROR']
Availability,"***. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:2609,ERROR,ERROR,2609,https://root.cern,https://github.com/root-project/root/issues/13895,1,['ERROR'],['ERROR']
Availability,"***tl;dr;*** This PR eliminates (almost all of) the dependencies between the implicit and explicit multithreading execution modes in ROOT and allows the co-existance of several TThreadExecutor instances, each one executing on a different number of threads. . It doesn't change any other behaviour in the eyes of the user. TO DO:. - [ ] Decide on explicit-implicit MT execution modes' interactions; - [ ] Rename TPoolManager; - [ ] Decide if allowing change of the number of threads when calling several times EnableImplicitMT(x) with a varying x without an intermediate call to DisableImplicitMT(); - [ ] Add warnings . ***********************************************************************************. # Previous behaviour; Previous to this PR, the number of threads was limited during the lifetime of the tbb scheduler, kept alive by TPoolManager as a ```std::shared_ptr``` as long as references to it existed, to the value set on its initialization. ```cpp; //We initialize the scheduler with 4 threads; ROOT::EnableIMT(4);; { ; //The scheduler is active, so the value passed to TThreadExecutor; //is overriden with the number of threads the scheduler has been; //initialized with (4); TThreadExecutor executor(9);; }; ROOT::DisableIMT();. //The scheduler is not alive at this point, ; //so we initialize it with 2 threads; ROOT::EnableIMT(2);; ROOT::TThreadExecutor executor(8);; ROOT::DisableIMT();. executor.MapReduce(...); //Runs on two threads!. ROOT::EnableIMT(3);; //Still two threads! TThreadExecutor instance was keeping the scheduler alive; ```; This also implies that given two co-existent instances of TThreadExecutor initialized with a different number of threads, the first one to be initialized forces on the second one the number of threads to work with. ```cpp; ROOT::TThreadExecutor executor(4);; ROOT::TThreadExecutor executor2(8); //will run limited to two threads!!; ```; This setup was useful [to avoid undefined behaviours between the implicit and explicit parallelism mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389:829,alive,alive,829,https://root.cern,https://github.com/root-project/root/pull/2389,1,['alive'],['alive']
Availability,"**Context:**; I am working in CBM at GSI/FAIR and helping for the support of our CBMROOT CI chains.; One of our nodes was updated to Debian 12 and then had hundreds of errors in the logs of a test running without trouble on other nodes.; All errors are an identical `Error in <TTF::SetTextSize>: error in FT_Set_Char_Size`, which comes from [TTF.cxx l.574, in `TTF::SetTextSize`](https://github.com/root-project/root/blob/c6f4076e69beaa6283d520c365831dfb0149d083/graf2d/graf/src/TTF.cxx#L574). **Problem:**; The error message helps neither; - to find out the call origin ; - to identify the root cause; - to fix the problem. as it provides ; 1. neither the parameters used in the top call ; 2. nor the actual error code returned by the underlying TTF library. **Proposed solution:** ; (inspired by a quick look at handling in `graf3d/ftgl/[inc src]/FTSize.[h cxx] `); ```diff; diff --git a/graf2d/graf/src/TTF.cxx b/graf2d/graf/src/TTF.cxx; index b8acf771d9..2f844b98da 100644; --- a/graf2d/graf/src/TTF.cxx; +++ b/graf2d/graf/src/TTF.cxx; @@ -570,8 +570,9 @@ void TTF::SetTextSize(Float_t textsize); }; ; Int_t tsize = (Int_t)(textsize*kScale+0.5) << 6;; - if (FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72)); - Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size"");; + FT_Error err = FT_Set_Char_Size(fgFace[fgCurFontIdx], tsize, tsize, 72, 72);; + if (err); + Error(""TTF::SetTextSize"", ""error in FT_Set_Char_Size: %d (input size %f, calc. size %x)"", err, textsize, tsize);; }; ; ////////////////////////////////////////////////////////////////////////////////; ```. Patch tested locally based on ROOT v6.26.10 under Debian 12 (as far as I can tell this part of the file was not changed since the initial commit so the ROOT version should not matter).; The one thing where I am unsure is whether the calculated size (`tsize`) should be printed in hexadecimal (as it is offseted by multiple bits) or as standard integer. **Effect:**; In our case it allowed to find out that the automat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592:168,error,errors,168,https://root.cern,https://github.com/root-project/root/issues/14592,6,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"**Describe the bug**. Root_x86 failed to run ""roottest-cling-exception-nullderef-e"" test on release and debug configuration with MSVC on windows. Could you please help look at this issue or provide some workarounds? Thanks in advance. **Expected behavior**; For Root_x86, ""roottest-cling-exception-nullderef-e"" test should be run pass on the windows. **To Reproduce**; 1. git clone  https://github.com/root-project/root F:\gitP\root-project\root; 2. mkdir F:\gitP\root-project\root\build_x86; 3. cd F:\gitP\root-project\root\build_x86; 4. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 5. python.exe -m pip install pytest; 6. cmake -G ""{0}"" -A {1} -DCMAKE_SYSTEM_VERSION={2} -DCMAKE_BUILD_TYPE=Release -Dtesting=ON -Droottest=ON .. ; 7. set PATH=%PATH:C:\Strawberry\perl\bin;=%; 8. msbuild /m /p:Platform=Win32 /p:Configuration=Debug ALL_BUILD.vcxproj /t:Rebuild; 9. powershell.exe -NoProfile -ExecutionPolicy Bypass ""..\..\tools\LongPathsEnabled.ps1""; 10. ctest -C Release --output-on-failure -j8 -R ""roottest"" -E ""roottest-root-meta"". **Setup**; VS 2019 + Windows Server 2019. **Additional context**; [test_release.log](https://github.com/root-project/root/files/7957119/test_release.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9742:981,failure,failure,981,https://root.cern,https://github.com/root-project/root/issues/9742,1,['failure'],['failure']
Availability,"**Edit**: This patch fixes cxxmodule tests failure; GetListOfGlobalFunctions were fine, what failing modules test was GetListOfAllPublicMethods. Let's use GetMethodAny instead. Performance benchmark:; `rootbench-build/root/hist/hist/HistBenchmarks`; Release build, without modules, without this patch:; ```; ---------------------------------------------------------------; Benchmark Time CPU Iterations ; --------------------------------------------------------------- ; BM_TFormula_CreateEmpty 0 ns 0 ns 1000000000 ; BM_TFormula_Math_Sin 221061 ns 220326 ns 3118; BM_TFormula_Pow 19896 ns 19843 ns 34679 ; BM_TFormula_Std_Pow 262071 ns 261083 ns 2592 ; ```; Release build, without modules, with this patch:; ```; ---------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------; BM_TFormula_CreateEmpty 0 ns 0 ns 1000000000; BM_TFormula_Math_Sin 197420 ns 196728 ns 3384; BM_TFormula_Pow 20003 ns 19949 ns 34502; BM_TFormula_Std_Pow 27867 ns 27778 ns 25631; ```; Memory benchmark:; `/usr/bin/time -v test/TFormulaTests 2>&1 | grep resident`; Release build, without modules, without this patch:; ```; Maximum resident set size (kbytes): 208144; ```; Release build, without modules, with this patch:; ```; Maximum resident set size (kbytes): 178772; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1821:43,failure,failure,43,https://root.cern,https://github.com/root-project/root/pull/1821,1,['failure'],['failure']
Availability,"**Need**:. The need for a new evaluation metric for testing the convergence of the optimizer is essential. The already existing metric was maximumRelativeError() between two matrices which takes the maximum of all the relative errors between its individual elements. But the relative error between these elements depends on the element values. i.e. Relative error between a and b = abs(a-b)/(abs(a)+abs(b)). Let use consider 2 cases,. case a) If two values are a = 0.0001 , b = 0.0002, relative error = 0.3333; case b) If two values are a = 10.0001 b = 10.0002 relative error = 4.99992e-6 . Since the unit tests for optimizer is written in a way so that a sample 3 layer DNN will learn this function Y = K * X. So, If X = I ( Identity matrix ), then Y = K * I = K. This should be equivalent to the output of the trained DNN when I is feed as Input. Let Y' be the output of the trained DNN. So I need to compare the matrices K and Y' for approximate equality with a certain threshold. So If I use maximumRelativeError for comparing the approximate equality for two matrices, then even though the difference is small for two cases, the relative error is significantly different. So there is a need for a new evaluation metric.; ; **Goal**:. The goal of this PR is to implement new evaluation metric meanAbsoluteError() between two matrices which takes the mean of all the absolute errors of individual elements. Absolute error between a and b = abs(a-b). So both the cases described above will have the same absolute error. So I propose this would be a good choice of metric for comparing two matrices for approximate equality as needed for testing optimizers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2376:227,error,errors,227,https://root.cern,https://github.com/root-project/root/pull/2376,9,['error'],"['error', 'errors']"
Availability,"**TLDR: Assume macOS 10.15 or newer. This is upstreaming one of the patches from nix Darwin.**. In some environments that are indepent of the Apple SDKs like nix Darwin, the `sw_vers` executable that is used in `SetUpMacOS.cmake` is not available. However, it is not actually needed anymore, because the most recent macOS version for which there are different code branches in the CMake is OS X 10.8 Mountain Lion, which is end of life since about 10 years. Therefore, this commit suggests to remove the macOS version check and assume we always have OS X 10.9 or newer. Furthermore, the following simplifications are suggested:. * remove 32-bit code branch, since the last macOS version that; supported 32 bit CPUs was 10.14 Mojave, end-of-life since three; years: https://en.wikipedia.org/wiki/MacOS_version_history; This effectively sets our oldest supported macOS version to 10.15; from the perspective of CMake (although, I think in practice the; minimum supported version is probably newer because of LLVM; constraints). * don't add `-mmacosx-version-min=${MACOSX_VERSION}` linker flag,; which I believe is not needed anymore. It is also patched out in; nix, and things work just fine. See also:. * https://github.com/root-project/root/commit/e298ce70e310b2dd2f4fbbdcfd3f90d1deeef7f4. * https://its.cern.ch/jira/browse/ROOT-6836. * https://github.com/guitargeek/nixpkgs/blob/master/pkgs/applications/science/misc/root/sw_vers.patch#L49",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16554:237,avail,available,237,https://root.cern,https://github.com/root-project/root/pull/16554,1,['avail'],['available']
Availability,"**This is a replay of #16274 with the ""clear build"" label for the CI, to see if we can reproduce the build error that were observed after merging said PR**. Our CMake code modifies `find_package` to ignore any ROOT builtins, such that the builtin LLVM doesn't find and use system versions of the builtin dependencies. This is a bit hacky, but fortunately this needs to be done only when builtins are used. Therefore, this commit suggests to only do this redefinition of `find_package` if any builtins are used. This closes #8633, where it was requested to avoid this hack for the sake of being compatible with the `vcpkg` package manager. Although the hack is not completely removed, it is removed for the case where not builtins are used, which is probably what is done when using a C++ package manager to manage dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16285:107,error,error,107,https://root.cern,https://github.com/root-project/root/pull/16285,1,['error'],['error']
Availability,"*N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:; ```cpp; #pragma link C++ class std::map<char, long>+;; #pragma link C++ class std::pair<char, long>+;; ```; instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce; 1. Use a ROOT master build with `-Druntime_cxxmodules=off`.; 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34; 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:; ```cpp; if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {; std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";; fClass->GetListOfDataMembers()->ls();; fClass->GetStreamerInfo()->ls();; throw RException(R__FAIL(""Insufficient information for "" + GetType()));; }; ```; ## Observed output; ### From the snippet added above:; ```; The TClass for std::p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14084:887,error,error,887,https://root.cern,https://github.com/root-project/root/issues/14084,1,['error'],['error']
Availability,"*mode, int *nbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: ‘cfopei_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:542:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 542 | CALL UCOPY2(IQ(LCID+ITAG1),IQ(LCID+32),NW); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: ‘ucopy2’ was previously declared here; 403 | SUBROUTINE UCOPY2 (A,B,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:1581:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:1959:18: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1959 | COMMON/PAWC/NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC(5),LMAIN,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:205:19: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 205 | COMMON /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/po",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:2902,error,error,2902,https://root.cern,https://github.com/root-project/root/issues/11657,1,['error'],['error']
Availability,"++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: excep",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:11346,error,error,11346,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,", 0.0);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[jpar] = outpars[jpar];; }; return ret;; }. // method to return all parameters in a single vector; std::vector<double> EtaPtCorrelatedEfficiency::DoEffSyst(int etabin) {. std::vector<double> inpars(ndim_);; std::vector<double> outpars(ndim_);; ; for (int jpar = 0; jpar < ndim_; ++jpar) {; inpars[jpar] = parhist_->GetBinContent(etabin, jpar+1);; }. std::vector<double> ret(ndim_*ndim_, 0.0);; for (int ipar = 0; ipar < ndim_; ++ipar) {; DoHessianShifts(etabin, ipar, inpars, outpars);; for (int jpar = 0; jpar < ndim_; ++jpar) {; ret[ipar * ndim_ + jpar] = outpars[jpar];; }; }; return ret;; }; ; }; ; #endif; ```. test.py; ```; import ROOT. ROOT.gInterpreter.Declare('#include ""test.h""'). ```. output:; ```; In module 'Hist':; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:764:73: error: no matching function for call to 'GetTheRightOp'; using Fnc_t = typename ROOT::Internal::GetFunctorType<decltype(ROOT::Internal::GetTheRightOp(&Func::operator()))>::type;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:401:41: note: in instantiation of member function 'ROOT::Internal::TF1Builder<wrem::pol3_custom>::Build' requested here; ROOT::Internal::TF1Builder<Func>::Build(this, f);; ^; ./test.h:173:32: note: in instantiation of function template specialization 'TF1::TF1<wrem::pol3_custom>' requested here; tf1_pol3_tf_ = new TF1(""tf1_pol3_tf_"", pol3_tf_, ptmin_, ptmax_, pol3_tf_.getNparams());; ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:207:12: note: candidate template ignored: could not match 'const T *' against 'std::vector<double> &'; auto GetTheRightOp(T(F::*opPtr)(const T *, const double *)) -> decltype(opPtr); ^; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Wed/ROOT/HEAD/x86_64-el9-gcc14-opt/include/TF1.h:213:12: note: candidate template i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16578:10806,error,error,10806,https://root.cern,https://github.com/root-project/root/issues/16578,1,['error'],['error']
Availability,", 0}};; int option_index = 0;; while (true) {; int c = getopt_long(argc, argv, ""o:hv"", long_options, &option_index);; // If the help flag is set, print the help message and exit; if (c == 'h') {; print_help();; return 0;; }; // If the verbose flag is set, print the verbose message; else if (c == 'v') {; verbose = true;; }; // If the output file is set, print the output file name; else if (c == 'o') {; outputFile = optarg;. } else if (c == -1) {; break;; } else if (c == '?') {; print_help();; return 1;; } else {; print_help();; return 1;; }; }; if (optind < argc) {; inputFile = argv[optind];; }; debug(""Output file: "" + outputFile);; if (inputFile.empty()) {; error(""Missing input file"");; }; debug(""Input file: "" + inputFile);. // Open the input file using ROOT, iterate over all the TFolders starting with DF_ and; // convert the TTrees inside such folder an RNTuple in the output file in the same folder. TFile* in = TFile::Open(inputFile.c_str(), ""READ"");; if (!in) {; error(""Cannot open input file"");; }; TFile* out = TFile::Open(outputFile.c_str(), ""RECREATE"");; if (!out) {; error(""Cannot open output file"");; }; // Iterate over the directories in the file; TIter next(in->GetListOfKeys());; TKey* key;; while ((key = (TKey*)next())) {; std::cout << key->GetClassName() << std::endl;; if (std::string(key->GetClassName()) == ""TDirectoryFile"") {; std::string name = key->GetName();; log(""Found TDirectoryFile: "" + name);; auto* dir = (TDirectoryFile*)key->ReadObj();; if (!out->GetDirectory(name.c_str())) {; out->mkdir(name.c_str());; }; out->cd(name.c_str());; // Iterate over the objects in the directory; TIter next2(dir->GetListOfKeys());; TKey* key2;; while ((key2 = (TKey*)next2())) {; if (std::string(key2->GetClassName()) == ""TTree"") {; std::string name2 = key2->GetName();; log(""Found TTree: "" + name2);; auto* tree = (TTree*)key2->ReadObj();; debug(""Converting to RNTuple"");; // Create the folder in the output file if it does not exist; using namespace ROOT::Experimental;; //",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13996:10727,error,error,10727,https://root.cern,https://github.com/root-project/root/issues/13996,1,['error'],['error']
Availability,", Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Double_t, Double_t, Double_t, Double_t,std::vector<float>,std::vector<float>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>,std::vector<char>, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, UInt_t, UInt_t, Int_t, Double_t, Double_t, Int_t, Bool_t, Bool_t, Int_t, Bool_t, Bool_t,std::vector<int>,std::vector<double>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<char>,std::vector<float>,std::vector<float>, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Char_t, Float_t, Float_t, Float_t, Int_t, Float_t, Float_t, Float_t, Float_t, Float_t, UInt_t, Float_t, ULong64_t, Bool_t, UInt_t, Float_t, Float_t, Float_t, Float_t, Float_t, Float_t, Double_t, Float_t, Float_t, UInt_t, Float_t>; (""test"", ""test_out.root"", columnList); .GetValue();; }; }; ```. Looking at the stacktraces it's clear that the problem is interleaved execution of RDataFrame TBB tasks (a RDF task starts and take a slot number, then ROOT::Internal::TBranchIMTHelper::Wait triggers the start of an inner RDF task that takes a second slot number without returning the first one, leading to an error in builds with asserts enabled, and undefined behavior in builds without asserts). Attached the stacktrace of the relevant thread (not the one that errors out, but the one that steals the last slot number so another thread doesn't find it and errors out). ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15079:8285,error,error,8285,https://root.cern,https://github.com/root-project/root/issues/15079,3,['error'],"['error', 'errors']"
Availability,", ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeHeader (0 ms); [ RUN ] RNTuple.SerializeFooter; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeFooter (0 ms); [----------] 14 tests from RNTuple (190 ms total); [----------] Global test environment tear-down; [==========] 14 tests from 1 test suite ran. (190 ms total); [ PASSED ] 12 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.SerializeEnvelope; [ FAILED ] RNTuple.SerializeLocator; 2 FAILED TESTS; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-types. Endian issue:. $ printf '%x\n%x\n' 180388626432 42; 2a00000000; 2a; ~~~; 465/1272 Test #433: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 5.68 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 18 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 18 tests from RNTuple; [ RUN ] RNT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:14831,down,down,14831,https://root.cern,https://github.com/root-project/root/issues/12426,1,['down'],['down']
Availability,", bufsize=1024, motherDir=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253; #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024); at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960; --Type <RET> for more, q to quit, c to continue without paging--; #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0); at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839; #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249; #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262; #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20); at eventhandling/hades.cc:956; #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512; #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547; (gdb); ```. ### To Reproduce; Custom code requires whole framework, hard to regenerate. ### Setup; 1. root@v5-34-00-patches (sorry that I still need to use root-5); 2. Operating system; ```; $ lsb_release -a; LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch; Distributor ID: Debian; Description: Debian GNU/Linux 8.11 (jessie); Release: 8.11; Codename: jessie; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:7446,down,download,7446,https://root.cern,https://github.com/root-project/root/issues/9564,1,['down'],['download']
Availability,", but if you are interested you can find it on the forum: [https://root-forum.cern.ch/t/tgraphmultierrors-class-for-graphs-with-asymmetric-errors-and-multiple-different-y-error-types-e-g-statistic-and-systematic-errors/32784](https://root-forum.cern.ch/t/tgraphmultierrors-class-for-graphs-with-asymmetric-errors-and-multiple-different-y-error-types-e-g-statistic-and-systematic-errors/32784). Since the class reimplements all functionalities of TGraphAsymmErrors, you can refer to it’s documentation for most functionalities: https://root.cern.ch/doc/master/classTGraphAsymmErrors.html. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the functions TGraphMultiErrors::Paint, TGraphMultiErrors::PaintReverse and TGraphMultiErrors::PaintGraphMultiErrors. If this class should ever become part of ROOT the first two are to be deleted, cause there are similar functions in the class TGraphPainter and the last one is supposed to be included in the TGraphPainter class. The function TGraphMultiErrors::Paint is similar to TGraph::Paint and TGraphPaint",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:1524,error,errors,1524,https://root.cern,https://github.com/root-project/root/pull/3449,2,['error'],"['error', 'errors']"
Availability,", in _handle_request_noblock; self.process_request(request, client_address); ```. ### Reproducer. Grab the image:; ```; $ docker run --security-opt label=disable -it registry.cern.ch/root-ci/ubuntu2404:buildready; ```; Then:; ``` ; (; rm -rf /github/home/ROOT-CI; mkdir -p /github/home/ROOT-CI; ); (; curl --output /github/home/ROOT-CI/artifacts.tar.gz https://s3.cern.ch/swift/v1/ROOT-build-artifacts/ubuntu2404/master/RelWithDebInfo/3f796869dae3bde0bfafc4ef8051339eb5ca133c/2024-08-12.tar.gz; ); (; cd /github/home/ROOT-CI && tar -xf /github/home/ROOT-CI/artifacts.tar.gz; ); (; cd '/github/home/ROOT-CI/src'; git checkout master; git fetch; git reset --hard @{u}; ); (; cd '/github/home/ROOT-CI/src'; git fetch https://github.com/root-project/root 9fc748389d42ce698fe8654ac177f9cf9a542f5c; ); (; cd '/github/home/ROOT-CI/src'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch origin 7d45ab2957efacf7b6685f4ae126a9fed243494c:fix-15733; git checkout fix-15733; git rebase 531620f59e898e5ec809043135583d15b0d151a6; ); (; git clone --branch master --single-branch https://github.com/root-project/roottest.git ""/github/home/ROOT-CI/roottest""; ); (; cd '/github/home/ROOT-CI/roottest'; ; git config user.email ""rootci@root.cern""; git config user.name 'ROOT Continous Integration'; ; git fetch ; git checkout ; git rebase master; ); (; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; ); (; cmake -S '/github/home/ROOT-CI/src' -B '/github/home/ROOT-CI/build' -N -L; ); (; cmake --build '/github/home/ROOT-CI/build' --config 'RelWithDebInfo' --parallel '16'; ); (; cd '/github/home/ROOT-CI/build'; ctest --output-on-failure --parallel 16 --output-junit TestResults.xml; ); ```. ### ROOT version. master. ### Installation method. docker copy/pasted from CI. ### Operating system. Alma9 + Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:6086,failure,failure,6086,https://root.cern,https://github.com/root-project/root/issues/16242,1,['failure'],['failure']
Availability,"- Add build option `asan` to build with address sanitizer.; Only works with clang so far.; - Add suppression file for leak sanitizer, suppressing fallout from; llvm and clang memory management.; - Set up compiler flags for statically linking address sanitizer; into all ROOT exectuables.; - A micro library for configuring asan was added, and statically linked; into all ROOT executables.; Address sanitizer (at least in clang) allows to define; __asan_default_config and __lsan_default_suppressions to set good; defaults.; - A shared version of the setup library is available for all cases where; the address sanitizer run time is LD_PRELOADed into non-instrumented; executables.; - LD_PRELOAD with asan runtimes has been set up for all tests that use; python as executable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5237:567,avail,available,567,https://root.cern,https://github.com/root-project/root/pull/5237,1,['avail'],['available']
Availability,- Add the proper Win64 mangled symbol of `RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)`; - Add several explicit `delete hfile` to prevent the following kind of error:; ```; SysError in <TFile::TFile>: could not delete BulkApiSillyStruct.root (errno: 13) Permission denied; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9264:181,error,error,181,https://root.cern,https://github.com/root-project/root/pull/9264,1,['error'],['error']
Availability,- Adds a locator type that can reference blocks >4GB on disk; - The new locator replaces the previously available but unused string locator; - Makes that DAOS locator support >4GB blocks; - Adds some fixes for pages >2GB,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16332:104,avail,available,104,https://root.cern,https://github.com/root-project/root/pull/16332,1,['avail'],['available']
Availability,"- Change implementation of next event. Simplify updates. Update summary tree on scene changes. - Optimize streaming. - Detect web-socket close and warn user (red rectangle in topbar). - Standalone THREE renderer:; - ortho camera, compositing, camera reset, key and mouse handling (own copy of OrbitController needed); - picking, highlight and tooltips; - selection and multiple selection. - Don't execute user input from main toolbar while scene changes are processing. - Add virtual function LocalModelChanges to controll model changes in the proxy builder. - Major cleanup of several JS classes. - New class REveEllipsod (error ellipse). - Support changing of outline colors for selection/highlight. - Review / improve REveData classes, esp. for selection and projections. - REveSelection, allow a list of selection upward propagation modes, not just a single one. - Validate expressions for table views, also, check TROOT::ProcessLine staus. - Cleanup some TEve-stlye change propagation / update functions. - Merge REveElement GetMaster() and ForwardSelection() through fSelectionMaster member. - Use REveAuntAsList in REveDataItem to communicate selection between proxy builders and REveDataItem. - Improve selection handling for compounds and multi-Objec3D representations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4617:624,error,error,624,https://root.cern,https://github.com/root-project/root/pull/4617,1,['error'],['error']
Availability,- Do not use gif output in tutorials. On machine where gif is not available is generated error when build the doxygen manual .; - use `auto`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9589:66,avail,available,66,https://root.cern,https://github.com/root-project/root/pull/9589,2,"['avail', 'error']","['available', 'error']"
Availability,"- Fix compilation errors with `/std:c++17` (and later) option on Windows; - Add `/std:c++17` flag for ACLiC; - Add the `-wd4146` compiler flag to ignore the warning C4146: unary minus operator applied to unsigned type, result still unsigned (in LLVM); - Add a the missing `#include <typeinfo>` and `#include <stdexcept>` with `/std:c++17`; - Don't add the `-fPIC` flag with MSVC (prevent the command line warning D9002: ignoring unknown option '-fPIC')",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8657:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/8657,1,['error'],['errors']
Availability,"- Fix error C2057: expected constant expression in several array declarations; - Outline (move from header to source) the IsCandleScaled() and IsViolinScaled() to export them from DLL; - In fontembedps.cxx, replace unsupported memmem() function by std::search()",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1092:6,error,error,6,https://root.cern,https://github.com/root-project/root/pull/1092,1,['error'],['error']
Availability,- Fix the computation in case of imt or blas is not available. . Use still TCpuMatrix class (TCpu architecture) but use TMatrix for matrix multiplication instead of BLAS\; Only dense layers architectures are supported in this case. - Fix tutorials for the no-imt case. - Use Higgs data file from root.cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5519:52,avail,available,52,https://root.cern,https://github.com/root-project/root/pull/5519,1,['avail'],['available']
Availability,- Force using Visual Studio 2017 or higher; - Undefine unsupported __attribute__ keyword; - Move the TObject constructors from the header to the source (prevent a couple of static members to be externally unresolved); - Use the AreAllSignalsBlocked() method instead of the static fgAllSignalsBlocked (prevent it to be externally unresolved); - Comment out inline TString operator==() to fix the compiler error C2593: 'operator ==' is ambiguous (!!!); - Implement a working dlsym function; - Remove some obsolete code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1132:404,error,error,404,https://root.cern,https://github.com/root-project/root/pull/1132,1,['error'],['error']
Availability,"- Improve diagnostic output of compare() function; - Test inverted matrix times original against identity using; element by element comparison, and use less strict tolerance; to account for innacuracies due to matrix inversion. *Note: I am still running this test many times to make sure it doesn't fail anymore. Please wait to merge until after the runs are finished.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/521:164,toler,tolerance,164,https://root.cern,https://github.com/root-project/root/pull/521,1,['toler'],['tolerance']
Availability,"- Move some RenderCore specific classes and all shaders into RenderCore source tree. - Implement all existing Three.js functionality with RenderCore. - In RenderCore, further improve on existing functionality:; - Textured points - arbitrary size and shape.; - Mesh lines - arbitrary thickness.; - Object and sub-object picking through color buffer with fragment depth detection.; - Camera handling like in TEve, with ability to pick rotation center. - The development branch has been squashed to hide redundant changes. Full history is available in PR osschar/root#41. ## C++ / Server Changes. - REveManager: Make RenderCore the default rendering engine. - Stream interpreter errors and show them in client log. - Add flag fIsRCore to REveManager. - Make REvePointSet secondary-selectable. - Add parameter for projection depth in REveDataCollection. ## JS / Client Changes. - Remove error MessageBox popup during client updates. - EveManager.js: Check change bits in ImportSceneBinary when scene changes are streamed. - EveScene.js: Optimize visibility changes. - EveScene.js: pass eve_element instead of object3d in cases where it simplifies the code. - EveScene.js, GlViewer classes: Cleamup highlite/selection management so it can be abstracted for RCore. - Separate viewer-side selection processing for Three / RCore. ## Tutorials / Demos Changes. - event_demo.C: secondary select points, jet title include pT. - Tune marker sizes, colors, visual parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11936:501,redundant,redundant,501,https://root.cern,https://github.com/root-project/root/pull/11936,4,"['avail', 'error', 'redundant']","['available', 'error', 'errors', 'redundant']"
Availability,- Only rely on presence of TMCManager in multi run (PR#6 in vmc-project/vmc); - Withdraw unwanted TMCVerbose modifications to avoid changes in the tests outputs; - Recover TGeoManager::fIsOutside for transfer tracks (PR#3 in vmc-project/vmc),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4459:164,Recover,Recover,164,https://root.cern,https://github.com/root-project/root/pull/4459,1,['Recover'],['Recover']
Availability,- Protect usage of pymva when it is available; - Enable tf.keras by default in MethodPyKeras since this is now the standard for Keras. Call also the option `tfkeras`; in addition to `tf.keras` since this form will not work as cmd arg in Python.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11546:36,avail,available,36,https://root.cern,https://github.com/root-project/root/pull/11546,1,['avail'],['available']
Availability,"- Remove unused `import pty`; - Disable stream capture (currently not working on Windows). The output coming from C++ (ROOT) will only print in the command prompt and not in the notebook (to be investigated); - Disable tab completion (currently not working on Windows).; - Add the `delete=False` argument in `NamedTemporaryFile()` and manually delete the created file to prevent the following error:; ```; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x0C321C58>> (for post_execute):; ---------------------------------------------------------------------------; PermissionError Traceback (most recent call last); ~\build\release\bin\JupyROOT\helpers\utils.py in _post_execute(self); 461; 462 def _post_execute(self):; --> 463 NotebookDraw(); 464; 465 def register(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in NotebookDraw(); 450 def NotebookDraw():; 451 DrawGeometry(); --> 452 DrawCanvases(); 453 DrawRCanvases(); 454. ~\build\release\bin\JupyROOT\helpers\utils.py in DrawCanvases(); 441 drawers = GetCanvasDrawers(); 442 for drawer in drawers:; --> 443 drawer.Draw(); 444; 445 def DrawRCanvases():. ~\build\release\bin\JupyROOT\helpers\utils.py in Draw(self); 598; 599 def Draw(self):; --> 600 self._display(); 601 return 0; 602. ~\build\release\bin\JupyROOT\helpers\utils.py in _display(self); 583 self._jsDisplay(); 584 else:; --> 585 self._pngDisplay(); 586; 587 def GetDrawableObjects(self):. ~\build\release\bin\JupyROOT\helpers\utils.py in _pngDisplay(self); 572; 573 def _pngDisplay(self):; --> 574 img = self._getPngImage(); 575 IPython.display.display(img); 576. ~\build\release\bin\JupyROOT\helpers\utils.py in _getPngImage(self); 566 with _setIgnoreLevel(ROOT.kError):; 567 self.drawableObject.SaveAs(ofile.name); --> 568 img = IPython.display.Image(filename=ofile.name, format='png', embed=True); 569 #ofile.close(); 570 #os.unlink(ofile.name). c:\python38-32\lib\site-packages\IPython\core\",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9109:393,error,error,393,https://root.cern,https://github.com/root-project/root/pull/9109,2,"['Error', 'error']","['Error', 'error']"
Availability,"- RootMacros.cmake: set the correct PYTHONPATH (${ROOTSYS}/bin on Windows); - CPyCppyy/CMakeLists.txt: export all symbols and set correct prefix (lib) and suffix (.pyd); - MemoryRegulator[.cxx/.h]: downstream cppyy changes [`move hook setting to .cxx`](https://bitbucket.org/wlav/cpycppyy/commits/24ac364); - cppyy-backend/CMakeLists.txt: export all symbols; - pythonizations/CMakeLists.txt: export all symbols, set correct suffix (.pyd) and link against Python library (cannot have unresolved symbols on Windows); - PyzPythonHelpers.cxx, RDataFramePyz.cxx, RVecPyz.cxx, TPyClassGenerator.cxx, and TPython.cxx: Use proper forward declarations and fix pointer formatting; - pythonizations/test/CMakeLists.txt: disable failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5892:198,down,downstream,198,https://root.cern,https://github.com/root-project/root/pull/5892,1,['down'],['downstream']
Availability,"- Switch to batch mode when ssh to a Windows machine, like other platforms; - Protect against potential null GC values leading to the followin error:; ```; Gdk-CRITICAL **: file gdkgc.c: line 146: assertion `gc != NULL' failed; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9323:143,error,error,143,https://root.cern,https://github.com/root-project/root/pull/9323,1,['error'],['error']
Availability,"- The first error fixed is an unquoted variable that creates an error in the case that the remote repos of roottest are not called origin. It's relatively common to give the remotes useful names, and those users shouldn't be punished with weird errors.; - Re-enable FindGLEW. ROOT claims that the latest version of CMake has an error in FindGLEW. In fact, the error was fixed after cmake 3.25, so we can use system GLEW again starting from 3.26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16465:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/16465,5,['error'],"['error', 'errors']"
Availability,- Update Vc to version 1.3.0; - Download from LCG at CERN (Vc-1.3.0 not yet available at service-spi.web.cern.ch); - Use same compiler options and installation prefix as ROOT; - Configure and install Vc into CMake binary directory; - Install at the end with the rest of ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/360:32,Down,Download,32,https://root.cern,https://github.com/root-project/root/pull/360,2,"['Down', 'avail']","['Download', 'available']"
Availability,- Use TMath::Pi() instead of M_PI (undefined on Windows); - Replace 'uint' with 'unsigned int'; - Fix error C2057: expected constant expression with newX and newY arrays,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1099:102,error,error,102,https://root.cern,https://github.com/root-project/root/pull/1099,1,['error'],['error']
Availability,- Use different typedefs for (U)Longptr_t to prevent overload errors on Win32; - First round of replacing (U)Long_t with (U)Longptr_t where applicable (mostly on core) and fix the following kind of warnings (leading to errors when truncating pointers); `warning C4311: 'type cast': pointer truncation from 'void *' to 'Long_t'`; `warning C4312: 'type cast': conversion from 'Long_t' to 'void *' of greater size`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7778:62,error,errors,62,https://root.cern,https://github.com/root-project/root/pull/7778,2,['error'],['errors']
Availability,- Veto tutorial multiVarGaus.C when mathmore is not available; - Disable printing error message in exampleFunction.py when mathmore is not available. This fixes ROOT-8145,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8288:52,avail,available,52,https://root.cern,https://github.com/root-project/root/pull/8288,3,"['avail', 'error']","['available', 'error']"
Availability,"- When a plot in overlapping ranges is requested, the normalisation is not; computed correctly. Now, any overlap between plot ranges is removed; before plotting.; - [RF4756] When integrating a peaked function in a side band, the normalisation integral; might vanish. This will raise an evaluation error. Now, if the function; value also vanishes, this is accepted without error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4107:297,error,error,297,https://root.cern,https://github.com/root-project/root/pull/4107,2,['error'],['error']
Availability,"- When weight errors are added to a RooDataSet, but the dataset hasn't; been set up to store weights, these are silently ignored. Users will now; see warnings.; - After adding the last event, the weight variable will keep the value; of the weight error until a new error is set. RooDataSet::add(); therefore now resets weight and weight error after adding an entry. [ROOT-10259]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4178:14,error,errors,14,https://root.cern,https://github.com/root-project/root/pull/4178,4,['error'],"['error', 'errors']"
Availability,"- [ ] Checked for duplicates; <!--; I did not find any duplicates; -->. ### Describe the bug; <!--; When compiling a makefile that includes ROOT libraries, there was an error when using TCanvas.h.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; makefile that included root libraries. ; make version 3.81. clang++ -g -Werror -fopenmp `root-config --cflags` -I./Analysis -o Test Analysis/TestAnalysis.cpp Analysis/Test.cpp `root-config --glibs` -lSpectrum ; In file included from Analysis/Test.cpp:16:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TCanvas.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TPad.h:15:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualPad.h:30:; In file included from /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TQObject.h:42:; /Users/XXX/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:53:42: error: 'sizeof (val)' will return the size of the pointer, not the array itself [-Werror,-Wsizeof-pointer-div]; constexpr size_t size = sizeof(val)/sizeof(val[0]);; ~~~~~~~~~~~^; /Users/tamashiro1/local/Cellar/root/6.26.06_2/include/root/TVirtualQConnection.h:51:25: note: pointer 'val' declared here; void SetArg(const T* val). The SOLUTION that I used:; In line 53 of TVirtualQConnection.h, I changed ; constexpr size_t size = sizeof(val)/sizeof(val[0]);; to ; constexpr size_t size = sizeof(val)/sizeof(*val);; and my code compiled.; -->. ### Setup; <!--; 1. 6.26/06; 2. Mac OS 12.6.5; 3. homebrew; -->. ### Additional context; <!--; root works for now, but I wanted to share the bug and solution I used. ; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12786:169,error,error,169,https://root.cern,https://github.com/root-project/root/issues/12786,2,['error'],['error']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963:513,Error,Error,513,https://root.cern,https://github.com/root-project/root/issues/10963,1,['Error'],['Error']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version 6.26/02; 2. Operating system Mac Big Sur apple m1; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->binary download. ### Additional context; <!--; create a microstrip simulation with:; <img width=""1440"" alt=""Schermata 2022-04-27 alle 16 55 24"" src=""https://user-images.githubusercontent.com/75098135/165547907-b77c9c26-b3ac-4ec6-809d-f0d2032e9c4e.png"">. --> creat with Weightfield2 5.2 or 5.3 . [bug weightfield53.txt](https://github.com/root-project/root/files/8573132/bug.weightfield53.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10472:981,down,download,981,https://root.cern,https://github.com/root-project/root/issues/10472,2,['down'],['download']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10533:952,down,download,952,https://root.cern,https://github.com/root-project/root/issues/10533,8,['down'],['download']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6645:952,down,download,952,https://root.cern,https://github.com/root-project/root/issues/6645,1,['down'],['download']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. For ROOT 6.27 (LCG dev23 nightly slot) I see a wrong overload resolution for pair of functions that takes argumentof type `double` and `std::complex<double>`. The complex veruison of function is invoked, whle `double` version is ignored:. see [here](https://gist.github.com/VanyaBelyaev/2cd0280e1e5584a74652c9bfd8f2f2af). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I would expect the proper overleoad resolution: the `double` function is inviked for `double` argument ; and `std::complex<double>` version is invoked for the `complex` argument. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. see the gist [here](https://gist.github.com/VanyaBelyaev/2cd0280e1e5584a74652c9bfd8f2f2af). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT Version 6.27 ; 2. LCG dev3 nightly cvmfs slot, `x86_64-centos7-gcc12-opt` platform . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11924:1545,down,download,1545,https://root.cern,https://github.com/root-project/root/issues/11924,1,['down'],['download']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8902:566,error,error,566,https://root.cern,https://github.com/root-project/root/issues/8902,1,['error'],['error']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Exception is throwing std::length_error with message vector too long. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```; #include <ROOT/RDataFrame.hxx>; #include <TFile.h>; #include <TTree.h>. int; main(int argc, char* argv[]); {; std::uint32_t v0 = 0;; std::uint32_t v1 = 0;. TFile file(""sbx.root"", ""RECREATE"");; TTree tree(""tree-name"", ""tree-title"");; tree.Branch(""v0"", &v0);; tree.Branch(""v1"", &v1);. for (std::size_t i = 0; i < 10; ++i); {; v0 = i;; v1 = i * 2;; tree.Fill();; }. tree.Scan();; tree.Write();. try; {; ROOT::RDataFrame df(tree);; }; catch (std::length_error& ex); {; std::cout << ex.what() << std::endl;; std::cout << std::endl;; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version 6.26.10 and 6.29.01; 2. Operating system Windows Visual Studio 2022 64-bit x64 ; 3. How you obtained ROOT Downloaded exe installer; -->; ROOT version 6.26.10 and 6.29.01; Operating system Windows Visual Studio 2022 64-bit x64 ; How you obtained ROOT Downloaded exe installer. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12540:1604,Down,Downloaded,1604,https://root.cern,https://github.com/root-project/root/issues/12540,2,['Down'],['Downloaded']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Trying to load the plugin for a module that was not compiled returns 0 (success value); ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Return the failure value (-1 ?). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; root [1] gROOT->GetPluginManager()->FindHandler(""TVirtualGeoConverter"")->LoadPlugin(); Module ConverterVG not found.; Error in <TCling::LoadPCM>: ROOT PCM /Users/agheata/root/root_install/lib/libConverterVG_rdict.pcm file does not exist; ... long list of PCM's tried by LoadPCM; (int) 0; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Tested with master branch on Monterey MacBook Air (M1, 2020), compiled from source. ### Additional context; <!--; Add any other context about the problem here.; -->; The same code on my Ubuntu 22.04 returns correctly -1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12326:656,failure,failure,656,https://root.cern,https://github.com/root-project/root/issues/12326,3,"['Error', 'down', 'failure']","['Error', 'download', 'failure']"
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ```; geonwoo@geonwoo-VirtualBox:~$ root; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fd7d1a1bc2a in __GI___wait4 (pid=4287, stat_loc=stat_loc; entry=0x7ffdd0caeb28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fd7d1a1bbeb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffdd0caeb28, options=options; entry=0) at waitpid.c:38; #2 0x00007fd7d198b0e7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fd7d203d1ce in TUnixSystem::StackTrace() () from /home/geonwoo/root/lib/libCore.so.6.22; #4 0x00007fd7d203a055 in TUnixSystem::DispatchSignals(ESignals) () from /home/geonwoo/root/lib/libCore.so.6.22; #5 <signal handler called>; #6 0x00007fd7d0566be6 in (anonymous namespace)::RedirectingFileSystemParser::uniqueOverlayTree((anonymous namespace)::RedirectingFileSystem*, (anonymous namespace)::Entry*, (anonymous namespace)::Entry*) () from /home/geonwoo/root/lib/libCling.so; #7 0x00007fd7d0566d05 in (anonymous namespace)::RedirectingFileSystemParser::uniqueOverlayTree((anonymous names",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859:499,ERROR,ERROR,499,https://root.cern,https://github.com/root-project/root/issues/6859,1,['ERROR'],['ERROR']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; When running the same script twice in a row in the same root session, I get a segmentation fault. Same commands inline work fine. If changing TF1 to TH1, it works fine.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; void Test(); {; TF1 *crap = new TF1(""crap"",""pol0"",0.,1.);; crap->Print();. TFile *out = new TFile(""./test.root"",""recreate""); ; ; crap->Write();; ; out->Close();; delete out;; ; return;; }. .x Test.C; -->. ### Setup; <!--; 1. 6.22/03 ; 2. CentOS Linux 8; 3. Own build; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10489:480,fault,fault,480,https://root.cern,https://github.com/root-project/root/issues/10489,1,['fault'],['fault']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155:606,Error,Error,606,https://root.cern,https://github.com/root-project/root/issues/8155,1,['Error'],['Error']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When booking `TMVA.Types.kPyKeras` method, once add `LearningRateSchedule` option to the option string, a FATAL error will occure. ### Expected behavior; Just fix it? Make it work? Or something like these... ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add `LearningRateSchedule` option to line 65, /tutorials/tmva/keras/ClassificationKeras.py:; ```python; factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',; H:!V:VarTransform=D,G:FilenameModel=model.h5:NumEpochs=20:BatchSize=32:LearningRateSchedule=10,0.01;20,0.005'); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.24.06; 2. Operating system: Ubuntu20.04; 3. Obtain way: binary download. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9624:495,error,error,495,https://root.cern,https://github.com/root-project/root/issues/9624,6,"['down', 'error']","['download', 'error']"
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. Cannot create `ROOT.TF1` from python function in ROOT v6.25/01 (dev3python2 LCG slot) i tworks for dev3 slot, but nor for dev2python2 . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Failure to create `ROOT.TF1` bject from python function. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; it should work both for python2 and python3 . ### To Reproduce. ```; from __future__ import print_function; import ROOT, sys, math . print( 'Python: ', sys.version_info ); print( 'ROOT: ', ROOT.gROOT.GetVersion() ). def fun ( x,*_ ): return math.sin(x[0])/x[0] . f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); f1.Draw (); ```. as output one gets: . ```; Traceback (most recent call last):; File ""./ostap/build/tst1.py"", line 10, in <module>; f1 = ROOT.TF1 ( 'f1' , fun , 0 , 8*math.pi ); TypeError: Template method resolution failed:; none of the 8 overloaded methods succeeded. Full details:; TF1::TF1(const TF1& f1) =>; TypeError: takes at most 1 arguments (4 given); TF1::TF1() =>; TypeError: takes at most 0 arguments (4 given); TF1::TF1(const char* name, const char* formula, double xmin, double xmax, const char* option) =>; TypeError: takes at least 5 arguments (4 given); TF1::TF1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152:594,Failure,Failure,594,https://root.cern,https://github.com/root-project/root/issues/8152,1,['Failure'],['Failure']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter De",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:806,error,error,806,https://root.cern,https://github.com/root-project/root/issues/8942,1,['error'],['error']
Availability,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . I am using the example from https://gist.github.com/cranmer/46fff8d22015e5a26619 ; it was OK for ROOT 6.24 but fails for e.g. dev3 LCG nightly build . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. no segfault . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. at lxplus: ; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/setup.sh; python test.py ; ```; where `tst.py` is a content of https://gist.github.com/cranmer/46fff8d22015e5a26619 with a fixed print statement. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Fails for ROOT > 6.24 ; 2. lxplus ; 3. LCG . ### Additional context; <!--; Add any other context about the problem here.; -->. actuallt my examples are more complicated, but since it fails even for the example from the expert, I use his example",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11061:1484,down,download,1484,https://root.cern,https://github.com/root-project/root/issues/11061,1,['down'],['download']
Availability,"- [ ] Checked for duplicates; Yes, kind of. I thought that there was a ticket about this by @amadio, but I didn't find anything. ## Describe the bug; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. ### How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. Now ROOT should find VDT, and add a `-I/my/include/directory/` to the compile command, which will accidentally include other parts of ROOT.; The problem is that it's difficult to provoke this error using only one header:; - All core includes are prepended to every compile command, so none of the core includes will be picked up wrongly.; - Library A will always find its own includes in the correct location, because it's also prepended. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/` (e.g. VDT), and `C` is *also* installed in those system includes. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```; Instead of picking up `C` from ROOT's build directory, it now comes from `/system/include/`. ### Expected behavior; ROOT picks up all its own includes first, and system includes last. This can be achieved with `-isystem ...`, so every `-I ...` is searched before `-isystem ...`.; In CMake, this means:; - Using imported targets when software comes from system directories (these are implicitly system includes); - Explicitly marking some include directories `SYSTEM`. ### Setup; Centos8; ROOT installed in `/data/software/`; ROOT configured with; `cmake -DCMAKE_PREFIX_PATH=/data/software ... <root>`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8708:304,echo,echo,304,https://root.cern,https://github.com/root-project/root/issues/8708,3,"['echo', 'error']","['echo', 'error']"
Availability,"- [ ] Implement batch eval for Chi2 test stat; - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401); - [x] Implement getWeightBatch() and getBatches() for RooDataHist; - [ ] Implement getBatch for RooTreeDataStore?; - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed.; - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation.; - [ ] Use batch evaluation & inverted CDF for toys; - [ ] Continue to improve interface with variadic templates; - [ ] Profile and optimise new Batch interface; - [ ] Modernise proxyList member of RooSimultaneous; - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.); - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous; - [ ] Implement analytical integration of RooJohnson.; - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense.; - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`.; - [ ] Use analytic integrals in RooBinSamplingPdf when available.; - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf.; - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304; - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits.; - [ ] Throw Gaussian & Poisson constraints into dedicated fast class.; - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface.; - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits.; - [ ] #7217, pythonisations for RooFit; - [ ] Vectorized generation of events. Unless specialised",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557:63,recover,recovery,63,https://root.cern,https://github.com/root-project/root/issues/6557,1,['recover'],['recovery']
Availability,"- [ checked] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8008:823,fault,fault,823,https://root.cern,https://github.com/root-project/root/issues/8008,1,['fault'],['fault']
Availability,"- [ x ] Checked for duplicates. ### Describe the bug; After I write out (part of) a geometry with; ```; writer->WriteGDMLfile ( gGeoManager, n, outname.c_str(),""vgf"");; ```; the main volume is named, e.g., `HcalBarrel0x0x55d87ec06500`. However, at the end of the file it still says; ```; <world ref=""HcalBarrel""/>.; ```; The result is that ROOT itself cannot read the file:; ```; Info in <TGeoManager::Import>: Reading geometry from file: [...]; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Error in <TGeoManager::Import>: Cannot open file; ```. ### Expected behavior; The function should return usable gdml. I tested that if I change by hand to ; ```; <world ref=""HcalBarrel0x0x55d87ec06500""/>; ```; the file is woorking and valid. ### To Reproduce; ```; root -l $ROOTSYS/tutorials/geom/rootgeom.C; TGeoNodeMatrix* m = (TGeoNodeMatrix*) gGeoManager->GetListOfNodes()->At(0);; TGeoNode* n = (TGeoNode*) m->GetNodes()->At(1);; TGDMLWrite *writer = new TGDMLWrite;; writer->SetG4Compatibility(true);; writer->WriteGDMLfile ( gGeoManager, n, ""test.gdml"",""vgf"");; .q; root -l; gGeoManager->Import(""test.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: test.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Error in <TGeoManager::Import>: Cannot open file; ```. A side bug, I cannot reproduce this with the Export option, and that; is because it doesn't recognize the f flag:; ```; root [1] gGeoManager->Export(""test.gdml"",""vgf""); Info in <TGeoManager::Export>: Exporting simple1 Simple geometry as gdml code; Info in <TGDMLWrite::WriteGDMLfile>: Potentially slow with incremental suffix naming convention set; ```. ### Setup; 1. 6.24.06; 2. singularity container running debian (on top of Scientific Linux 7); 3. Container maintainer installed it. ### Additional context; I can test in a variety of other environments, but this seems pretty cut and dry and OS-independent",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9310:540,Error,Error,540,https://root.cern,https://github.com/root-project/root/issues/9310,2,['Error'],['Error']
Availability,"- [ x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9309:954,down,download,954,https://root.cern,https://github.com/root-project/root/issues/9309,1,['down'],['download']
Availability,"- [ x] Checked for duplicates. ### Describe the bug. when trying to compile ROOT on the new arm64 platform of Apple I get the following error when running rootcling. [ 44%] Generating G__Core.cxx, ../lib/libCore.rootmap; error: unknown target triple 'unknown-apple-macosx10.16.0', please use -triple or -arch; Could not determine compiler target.; Compiler instance could not be created.; 0 rootcling_stage1 0x000000010439eb84 llvm::sys::PrintStackTrace(llvm::raw_ostream&) + 52; 1 rootcling_stage1 0x000000010439f0dc SignalHandler(int) + 460; 2 libsystem_platform.dylib 0x00000001974abc64 _sigtramp + 56; 3 rootcling_stage1 0x0000000102803048 RootClingMain(int, char**, bool) + 14852; 4 rootcling_stage1 0x0000000102810a00 ROOT_rootcling_Driver + 392; 5 rootcling_stage1 0x00000001027a18bc main + 76; 6 libdyld.dylib 0x00000001975a1418 start + 4; Stack dump:; 0.	Program arguments: /opt/fairsoft/source/nov20/build/Build/root/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -s /opt/fairsoft/source/nov20/build/Build/root/lib/libCore.so -excludePath /opt/fairsoft/source/nov20/build/Source/root -excludePath /opt/fairsoft/source/nov20/build/Build/root -rml libCore.so -rmf /opt/fairsoft/source/nov20/build/Build/root/lib/libCore.rootmap -I/opt/fairsoft/source/nov20/build/Source/root -I/opt/fairsoft/source/nov20/build/Build/root/etc/cling/ -I/opt/fairsoft/source/nov20/build/Build/root/include -I/opt/fairsoft/nov20/include -I/opt/local/include -I/opt/fairsoft/source/nov20/build/Source/root/core/base/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/base/v7/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/clib/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/cont/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/foundation/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/macosx/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/unix/inc -I/opt/fairsoft/source/nov20/build/Source/root/core/winnt/inc -I/opt/fairsoft/source/nov20/build/Source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6839:136,error,error,136,https://root.cern,https://github.com/root-project/root/issues/6839,2,['error'],['error']
Availability,"- [ x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; ### Describe the bug. When compiling some of my classes I got the following error message. The code was compiling before I removed some lines in one of the included header files. ```; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisSpectrum.cxx:78:1: error: redefinition of 'R__dummyintdefault78'; ClassImp(PairAnalysisSpectrum); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int _R__UNIQUE_(_NAME2_(R__dummyint,key)) __attribute__((unused)) = \; ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:456:27: note: expanded from macro '_R__UNIQUE_'; # define _R__UNIQUE_(X) _R__JOIN_(X,__LINE__); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:453:27: note: expanded from macro '_R__JOIN_'; # define _R__JOIN_(X,Y) _NAME2_(X,Y); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:435:33: note: expanded from macro '_NAME2_'; # define _NAME2_(name1,name2) name1##name2; ^; <scratch space>:81:1: note: expanded from here; R__dummyintdefault78; ^; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisHistos.h:78:1: note: previous definition is here; ClassImp(PairAnalysisHn); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10948:438,error,error,438,https://root.cern,https://github.com/root-project/root/issues/10948,2,['error'],['error']
Availability,"- [ y] Checked for duplicates. ### The bug; In TBrowser, SetShowProjectionY and then specifying the number of bins produces an error message and no projection.; Error in <TClingCallFunc::IFacePtr(kind)>: Attempt to get interface while invalid.; Error in <TClingCallFunc::Exec(address, interpVal)>: Called with no wrapper, not implemented!. ### Expected behavior; It should open a new window containing the projection. ### To Reproduce; Open a 2D histogram. Right-click on it. Select SetShowProjectionY. Click Ok on the popup window to confirm the number of bins. . ### Setup; Root 6.24/04; CentOS 8.5.2111 ; Built from source. ### Additional context; It worked fine under Redhat 7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9330:127,error,error,127,https://root.cern,https://github.com/root-project/root/issues/9330,3,"['Error', 'error']","['Error', 'error']"
Availability,"- [ √ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. If the parameter list of a function has a trailing comma (e.g. funct(int a, int b,){} ) then the second parameter cannot be specified from the command line (e.g. root 'funct.C(1,2)' ). ### Expected behavior. Both parameters should be usable. ### To Reproduce. /* Bug Report; * This works:; * root -b -q 'bug.C(""asdf"")'; * This does not:; * root -b -q 'bug.C(""asdf"",""xyzzy"")'; *; * You must remove the comma after param2 to fix this.; */. void bug(; 		 const Char_t *param1 = ""input Text 1"",; 		 const Char_t *param2 = ""input Text 2"", // The comma here breaks the code; ); {; cout << param1 << endl;; cout << param2 << endl;; }. ### Setup. 1. ROOT version; Version 5.34/38 12 March 2018 ; 3. Operating system; NAME=""Scientific Linux""; VERSION=""7.3 (Nitrogen)""; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Installed on rcas node at Brookhaven National Lab. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12840:1202,down,download,1202,https://root.cern,https://github.com/root-project/root/issues/12840,1,['down'],['download']
Availability,- [NFC][DF] Remove redundant virtual keyword: `final` implies `virtual`.; - [NFC][DF] Remove unnecessary pure virtual method: the line just re-declared a method from the RNodeBase base class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9506:19,redundant,redundant,19,https://root.cern,https://github.com/root-project/root/pull/9506,1,['redundant'],['redundant']
Availability,- [ROOT-5311] Make it much less verbose; - [ROOT-4060] Make it abort when invalid sample names are given; - [ROOT-8033] **Needs review** @lmoneta Switch default MC stat error constraint from Gaus to Poisson to follow HistFactory paper.; - [ROOT-9365] Make documentation a bit easier to find.; - Properly format documentation of RooWorkspace::factory(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5192:169,error,error,169,https://root.cern,https://github.com/root-project/root/pull/5192,1,['error'],['error']
Availability,"- [X] Checked for duplicates (checked with @pcanal ); <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; // write data out. // in the main tree, ""x"" counts 0, 1, 2; ROOT::RDataFrame(3); .DefineSlotEntry(""x"", [](unsigned, ULong64_t e) { return int(e); }); .Snapshot<int>(""main"", ""main.root"", {""x""});. // in the friend tree, ""x"" counts 0, 1, 3 (i.e. no entry with x == 2); ROOT::RDataFrame(3); .DefineSlotEntry(""x"",; [](unsigned, ULong64_t e) { return e == 2 ? 3 : int(e); }); .Snapshot<int>(""friend"", ""friend.root"", {""x""});; }. TFile fmain(""main.root"");; auto *main = fmain.Get<TTree>(""main"");; TFile ffriend(""friend.root"");; auto *fr = ffriend.Get<TTree>(""friend"");. fr->BuildIndex(""x"");; main->AddFriend(fr);. int xmain, xfriend;; main->SetBranchAddress(""x"", &xmain);; main->SetBranchAddress(""friend.x"", &xfriend);. for (int i = 0; i < 3; ++i) {; main->GetEntry(i);; std::cout << xmain << "" "" << xfriend << '\n';; }. return 0;; }; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. An error or warning should be printed if no indexed entry could be retrieved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7713:1486,error,error,1486,https://root.cern,https://github.com/root-project/root/issues/7713,1,['error'],['error']
Availability,"- [X] Checked for duplicates. ### Describe the bug. First seen on the forum (see [here](https://root-forum.cern.ch/t/typeerror-no-python-side-overrides-supported-failed-to-compile-the-dispatcher-code/53198)). The Python code below; ```python; import ROOT. class Fitter(ROOT.Fit.Fitter):; def __init__(self):; super().__init__(); ```; triggers the following error; ```; /tmp/ipykernel_2130/1942954617.py:1: RuntimeWarning: class ""ROOT::Fit::Fitter"" has no virtual destructor; class Fitter(ROOT.Fit.Fitter):; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[2], line 1; ----> 1 class Fitter(ROOT.Fit.Fitter):; 2 def __init__(self):; 3 super().__init__(). TypeError: no python-side overrides supported (failed to compile the dispatcher code); input_line_54:41:12: error: cannot initialize return object of type 'ROOT::Math::IBaseFunctionMultiDimTempl<double> *' with an rvalue of type 'const ROOT::Math::IMultiGenFunction *' (aka 'const IBaseFunctionMultiDimTempl<double> *'); return Fitter::ObjFunction();; ```. ### Setup; 1. ROOT version: fails both in 6.29/01 (Python 3.11), and 6.26/10 (Python 3.10); 2. Operating system: Linux x86_64. ### Additional context; The issue has been tracked down to the introduction of the `Fitter::ObjFunction()` in [commit 9d322a6a38fca106d0e5b6064bd09c8c6dbb979a](https://github.com/root-project/root/commit/9d322a6a38fca106d0e5b6064bd09c8c6dbb979a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12391:357,error,error,357,https://root.cern,https://github.com/root-project/root/issues/12391,3,"['down', 'error']","['down', 'error']"
Availability,"- [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```; ❯ ls static-root/lib/*.so | wc -l; 105; ❯ ls static-root/lib/*.a | wc -l; zsh: no matches found: static-root/lib/*.a; 0; ```. ### To Reproduce. ```; $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz ; $ mkdir root-build; $ cmake -S ./root-6.24.00/ -B root-build \; 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \; 	-DBUILD_SHARED_LIBS=off \; 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \; 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \; 	-Dfitsio=off -Dfftw3=off; $ cmake --build root-build -- -j 8; $ cmake --install root-build; ```. ### Setup; Manjaro using gcc 11.1, root version 6.24.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448:592,down,download,592,https://root.cern,https://github.com/root-project/root/issues/8448,1,['down'],['download']
Availability,"- [X] Checked for duplicates. ### Describe the bug; Although cling supports continuation for lines ending with `,` or `\`, it seems to fail in the ROOT prompt, i.e. ; ```; root [0] const char *s = ""string "" \; root (cont'ed, cancel with .@) [1]""literal""; ROOT_prompt_0:1:26: error: expected ';' at end of declaration; const char *s = ""string "" \; ^; ;; ```; This issue is closely related to JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The problem seems to be in `TRint.cxx`, which unconditionally inserts a `#line` PP directive before each input line. This is especially visible here:; ```; root [0] #define def(arg) printf(""%s\n"", \; root (cont'ed, cancel with .@) [1]arg);; ROOT_prompt_0:2:2: error: '#' is not followed by a macro parameter; #line 1 ""ROOT_prompt_1""; ^; ROOT_prompt_0:3:4: error: extraneous ')' before ';'; arg);; ```. ### Expected behavior; As discussed, `#line` directives should not be inserted if the last input line ends with `\`.; ```; root [0] const char *s = ""string "" \; root (cont'ed, cancel with .@) [1]""literal""; (const char *) ""string literal""; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8762:275,error,error,275,https://root.cern,https://github.com/root-project/root/issues/8762,3,['error'],['error']
Availability,"- [X] Checked for duplicates. ### Describe the bug; The source code build fails at build target G__Gviz3d with the following error messages:; ```; [ 96%] Built target G__Gviz3d; [ 96%] Building CXX object graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o; In file included from /opt/local/HEA/root/root-6.26.00/graf3d/gviz3d/src/TStructNodeEditor.cxx:21:; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:242:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 242 | ClassConvStreamerFunc_t fConvStreamerFunc; //Wrapper around this class custom conversion Streamer member function.; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:272:12: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 272 | mutable Longptr_t fOffsetStreamer; //!saved info to call Streamer; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: error: expected ‘;’ at end of member declaration; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; | ;; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ~ ^~~~~~; | ); /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared; 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);; | ^~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration; 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);; | ^; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:125,error,error,125,https://root.cern,https://github.com/root-project/root/issues/10155,3,['error'],['error']
Availability,"- [X] Checked for duplicates. ### Describe the bug; We have a long-running service which reads some information from ROOT files and we have noticed that this service regularly grows its memory use until it consumes all available memory and gets killed. I think I have tracked it down to reading one particular object type `TMap`. We have relatively large `TMap` object stored in files, the key in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={v",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11099:219,avail,available,219,https://root.cern,https://github.com/root-project/root/issues/11099,2,"['avail', 'down']","['available', 'down']"
Availability,"- [X] Checked for duplicates. ### Describe the bug; compile error with gcc11. ```; [ 70%] Generating G__valarrayDict.cxx, ../../lib/libvalarrayDict.rootmap; cd /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/clingutils && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/joe/local2/bench/mgarepo/roo\; t/BUILD/root-6.24.06/build/lib: /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__valarrayD\; ict.cxx -s /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.so -m libCore_rdict.pcm -excludePath /home/joe/local2/bench/mga\; repo/root/BUILD/root-6.24.06 -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/ginclude -excludePath /home/joe/local2/bench/mgarepo\; /root/BUILD/root-6.24.06/build/externals -excludePath /home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/builtins -rml libvalarrayDict.so -rmf /h\; ome/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/lib/libvalarrayDict.rootmap -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/build/inclu\; de -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clingutils/re\; s -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/interpreter/cling/include/cling/cint -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/bu\; ild/ginclude -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/base/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/foundatio\; n/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/cont/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/gui/inc -I/home/\; joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/meta/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06/core/clib/inc -I/home/joe/local2/be\; nch/mgarepo/root/BUILD/root-6.24.06/core/rint/inc -I/home/joe/local2/bench/mgarepo/root/BUILD/root-6.24.06",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9285:60,error,error,60,https://root.cern,https://github.com/root-project/root/issues/9285,1,['error'],['error']
Availability,"- [X] Checked for duplicates. With CMake >= 3.24 we get; ```; .../LZMA-prefix/src/LZMA-stamp/LZMA-build-Release.cmake:49 (message):; Command failed: 2. 'make'. See also. .../LZMA-prefix/src/LZMA-stamp/LZMA-build-*.log; ```; which has; ```; WARNING: 'aclocal-1.15' is missing on your system.; You should only need it if you modified 'acinclude.m4' or; 'configure.ac' or m4 files included by 'configure.ac'.; The 'aclocal' program is part of the GNU Automake package:; <http://www.gnu.org/software/automake>; It also requires GNU Autoconf, GNU m4 and Perl in order to run:; <http://www.gnu.org/software/autoconf>; <http://www.gnu.org/software/m4/>; <http://www.perl.org/>; make: *** [Makefile:514: aclocal.m4] Error 127; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11743:708,Error,Error,708,https://root.cern,https://github.com/root-project/root/issues/11743,1,['Error'],['Error']
Availability,"- [X] Checked for duplicates; ### Describe the bug; ```c++; namespace SG { typedef uint32_t sgkey_t; }; class X { SG::sgkey_t sgkey = 123; };; ```. Produces the same error: ""Field sgkey has unknown type SG::sgkey_t"". Cheers, Marcin. ### Setup; Using ROOT from `master` branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9202:166,error,error,166,https://root.cern,https://github.com/root-project/root/issues/9202,1,['error'],['error']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When plotting to SVG file the way; ```c++; hist->Draw();; gPad->Print(""hist.svg"");; ```. The produced SVG file is occasionally broken due to the newline character being inserted to the middle of the closing XML tag. The error might be caused by certain kind of 250-character-per-line limit. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The newline should be inserted somewhere before the closing XML tag. Please don't remove all the new lines just to workaround this bug. It is great to have readable SVG outputs. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Prepare the reproduction code; `Reproduce.C`; ```c++; #include<TCanvas.h>; #include<TPad.h>; #include<TFile.h>; #include<TH1.h>. void Reproduce(const char *pathFileIn=""hsimple.root"") {; TCanvas::MakeDefCanvas();; TFile *tfIn = TFile::Open(pathFileIn);; TH1* hpxLongTitle = static_cast<TH1*>(tfIn->Get<TH1>(""hpx"")->Clone(""hpxLongTitle""));; hpxLongTitle->SetTitle(""SupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeSesquipedalianTitleOnTheSupercalifragilisticexpialidociousHonorificabilitudinitatibusFloccinaucinihilipilificationFreeHist"");; hpxLongTitle->Draw();; gPad->Print(""hpxLongTitle.svg"");; tfIn->Close();; }. int main(int argc, char* argv[]) {; if ( argc > 1 ) {; Reproduce(argv[1]);; } else {; Reproduce();; }; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9514:603,error,error,603,https://root.cern,https://github.com/root-project/root/issues/9514,1,['error'],['error']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>; #include <iostream>; using namespace std;. void aa1(); {; cout<<""as""<<endl;; }. on Mac OS X 10.15; running with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no memb",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:941,error,error,941,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; * The `GetSize()` result of the `TClonesArray` fed to the (re)defining function are always 1000, not reflecting the correct value.; * Redefining a variable that was the type `TClonesArray` causes `GetColumnNames()` method to return a column name vector with repeated column names, and trying to snapshot against related names causes fatal errors. ### Expected behavior; * The `GetSize()` method of the input `TClonesArray` returns the correct size.; * `GetColumnNames()` produces unique column names.; * The redefined `TClonesArray` can be snapshot correctly. ### To Reproduce; 1. Place two ROOT macros in the same directory:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TClonesArray.h>; #include <TLorentzVector.h>. #include <string>; #include <cstdio>; #include <cstdlib>; #include <iostream>. Float_t gen_rand() {; 	return rand() / static_cast<Double_t>(RAND_MAX);; }. void gen_tree(const std::string pathFile = ""file_tcatlv.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of TClonesArrays of TLorentzVectors"");; 	auto *tcaTest = new TClonesArray(""TLorentzVector"", 8);; 	size_t nVar;; 	ttOut->Branch(""TestVar1"", tcaTest);; 	ttOut->Branch(""nTestVar1"", &nVar);; 	constexpr size_t nEntries = 10;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		tcaTest->Clear();; 		nVar = rand() % 8;; 		tcaTest->Expand(nVar);; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tsize: "" << tcaTest->GetSize() << std::endl;; 		for (size_t iVar = 0; iVar < nVar;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:722,error,errors,722,https://root.cern,https://github.com/root-project/root/issues/9240,1,['error'],['errors']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. A reproducer:. ```python; import ROOT; print(ROOT.gSystem.GetIncludePath()); ROOT.vector('int')(); print(ROOT.gSystem.GetIncludePath()); ```. prints . ```; -I$ROOTSYS/include -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc/"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc//cling"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/include/"" -I""/usr/include/python2.7""; -I$ROOTSYS/include -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc/"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/etc//cling"" -I""/home/eguiraud/ROOT/install_dbg_includepaths/include/"" -I""/usr/include/python2.7"" -I""/home/eguiraud/ROOT/build_dbg_includepaths/include""; ```. Note that the second line contains ` -I""/home/eguiraud/ROOT/build_dbg_includepaths/include""`, which wasn't there before a `ROOT.vector` was instantiated. That's problematic because the user might not have permissions to access the build directory (while it can access the install directory) leading to cling errors. This is with ROOT master@028fcca0fa , compiling ROOT with `cmake -DCMAKE_BUILD_TYPE=Debug -Dccache=ON -Ddev=ON -Droofit=OFF -Dtmva=OFF -Dtesting=ON -Droottest=ON ../root`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108:1420,error,errors,1420,https://root.cern,https://github.com/root-project/root/issues/7108,1,['error'],['errors']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures.; There are various possible failure modes -- the command above typically results in these kind of errors:. ```; 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+...; 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so; 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0); 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value; 1369: collect2: error: ld returned 1 exit status; 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366:570,failure,failures,570,https://root.cern,https://github.com/root-project/root/issues/7366,3,"['error', 'failure']","['errors', 'failure', 'failures']"
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The exit status of `root --help` is 1, not 0. The [exit status](https://en.wikipedia.org/wiki/Exit_status) usually indicates whether the process is successful or not. Zero means success, and non-zero values suggests an error. It doesn't affect any of the functionality, but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:677,error,error,677,https://root.cern,https://github.com/root-project/root/issues/11977,2,"['error', 'failure']","['error', 'failures']"
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. The following snippet causes a nullptr dereference (or a corresponding assertion failure in debug builds):. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main() {; auto df = ROOT::RDataFrame(10000);; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Snapshot(""Events"", ""A.root"", colNames, opts);; std::cout << c.GetValue() << std::endl;. return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7547:539,failure,failure,539,https://root.cern,https://github.com/root-project/root/issues/7547,1,['failure'],['failure']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. This runs fine:; ```; $ root --foobarbaz; ```; Virtually all unix command line tools error out if an invalid option is passed. It's surprising that `root` does not and can lead to problems:. ```; $ root --batch; ```; does _not_ start `root` in batch mode, because there is no long spelling for `-b`. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --nonexistingoption` should error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8850:543,error,error,543,https://root.cern,https://github.com/root-project/root/issues/8850,2,['error'],['error']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; /bin/sh: line 30: -m: command not found; gmake[3]: m: No such file or directory; /bin/sh: line 2: -m: command not found; gmake[3]: *** [Makefile:145: install.static] Error 127; ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7345:553,error,errors,553,https://root.cern,https://github.com/root-project/root/issues/7345,1,['error'],['errors']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Creating a branch in `TTree` with type `std::vector<A>` raises an internal error in ROOT, when class `A` inherits from a class that uses the old I/O system. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Branch should be created successfully (I don't know if this behavior is supposed to be supported) or ROOT should abort with a more descriptive error message. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile and run the following macro with `root -l -b -q T.C+`:; ```C++; #include <vector>; #include ""TTree.h"". #pragma link C++ class A;; #pragma link C++ class B+;; #pragma link C++ class std::vector<B>+;. struct A {; int x;; ClassDef(A, 1);; };; ClassImp(A);. struct B : A {; int y;; ClassDef(B, 1);; };; ClassImp(B);. void T() {; TTree* tree = new TTree(""T"", ""T"");; std::vector<B> bvec;; tree->Branch(""B"", &bvec);; }; ```; Macro aborts with the error: ; ```Fatal in <TBranchElement::InitializeOffsets>: Could not find the real data member 'B' when constructing the branch 'B' [Likely an internal error, please report to the developers].```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.22.08 (built myself), 6.26.00 (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10240:533,error,error,533,https://root.cern,https://github.com/root-project/root/issues/10240,2,['error'],['error']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ROOT produces a double free error on TGText.Clear() after calling TGText.AsString(). ### Setup; ROOT 6.22/06. ; OS: Linux Debian 10 Buster and Scientific Linux 7; Root is self-built on Debian. Official redhat release is used on Scientific Linux. <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; The problem can be traced to ```gui/gui/src/TGText.cxx:1250``` in ```TGText::AsString()```:. ```; char *txt = travel->GetText();; ret += txt;; delete [] txt;; ```. txt is deleted, however it points at the text buffer to a line as returned by TGTextLine::GetText(). That there is an override, TGTextLine::GetText(Ulong_t, Ulong_t), that does return an allocated string that needs to be deleted bu the caller. To fix the problem, only the 'delete' line needs to be deleted, but it's not good to have two methods with the same name that have different allocation behaviors on the return values. Another possible fix would be to have TGTextLine::GetText() also allocate a new string for its return value. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7460:486,error,error,486,https://root.cern,https://github.com/root-project/root/issues/7460,2,"['down', 'error']","['download', 'error']"
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When building with native LLVM (with CMake flag `-Dbuiltin_llvm=OFF`) with Nix and Nixpkgs, the builder tries to place `lib/cmake/cling/ClingConfig.cmake.tmp` under the read-only `/path/to/native/llvm/lib/`, and gets System Error. Not sure if this issue is reproducible on other platforms. Partial command line output:; ```; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; CMake Error: Could not open file for write in copy operation //nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:682,Error,Error,682,https://root.cern,https://github.com/root-project/root/issues/11920,1,['Error'],['Error']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When calling the `TH1::GetCumulative()` method, it should generate a cumulative histogram and with its error (`fSumw2`) set, and should not change the original histogram. However, it turns out that it doesn't set the error for the new histogram, but (incorrectly) modify the bin error of the original histogram into the value that should have been assigned to the generated histogram. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The `TH1::GetCumulative()` method generates the corresponding cumulative histogram with `fSumw2` set (when the original histogram has its `fSumw2` set) while keeping the original histogram intact. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; In the ROOT interactive prompt,; ```; root [0] TH1 *h1 = new TH1D(""h1"", ""h1"", 8, 0., 8.);; root [1] for (int i=0; i<8; ++i) h1->Fill(0.5 + i, 0.5);; root [2] for (int i=0; i<8; ++i) h1->Fill(0.5 + i, 0.5);; root [3] h1->GetBinError(1); (double) 0.70710678; root [4] h1->GetBinError(2); (double) 0.70710678; root [5] sqrt(2) / 2; (double) 0.70710678; root [6] TH1 *h1Cumu = h1->GetCumulative(false);; root [7] h1Cumu->GetBinError(1); (double) 0.0000000; root [8] h1Cumu->GetBinError(2); (double) 0.0000000; root [9] h1->GetBinError(1); (double) 2.0000000; root [10] h1->GetBinErro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11947:561,error,error,561,https://root.cern,https://github.com/root-project/root/issues/11947,3,['error'],['error']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When running an RDataFrame-based analysis macro with ~1000 histogram outputs (each of them has 20000 bins) on a 8-core laptop (16 logical processors), `EnableImplicitMT()` cause ROOT to use up the 32GB RAM and ~30GB swap space. This sometimes causes segmentation violation. Workaround: Drop the line `EnableImplicitMT()`. Related issue: #6676 . ### Expected behavior; Get a way to reduce/restrict the RAM usage of RDataFrame when `EnableImplicitMT()`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.25/01 built against revision 24ea49d4702ba0aa9b1ea5521950520154ee151c from the master branch; ```console; $ root --version; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```; 2. Operating system: NixOS, x86_64-linux; ```console; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.10.67, NixOS, 21.05.20210922.83413f4 (Okapi)`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.4pre20210908_3c56f62`; - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; Custom build from source with the Nix package manager. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9087:1815,down,download,1815,https://root.cern,https://github.com/root-project/root/issues/9087,1,['down'],['download']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; If attempting to create multiple snapshots simultaneously of some RDF's children nodes, ROOT crashes. This follows up on a discussion in the thread here:; https://root-forum.cern.ch/t/snapshot-shuffles-data-invisibly-with-implicitmt/43473/8?u=nmangane. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Expect that one event loop can be triggered with different nodes (downstream of filters, whether or not they produce exclusive sets of events) writing output to unique files via Snapshot. Without this capability, have to fall back to multiple event loops over extensive amounts of data to separate them into different files, which is not really expected. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; embedded in python script here; I first saw this issue in a more pythonic script (e.g. snapshot options set via cppyy rather than doing everything in the intepreter); ```; import ROOT; ROOT.gInterpreter.ProcessLine(""""""; ROOT::EnableImplicitMT(8);; auto df = ROOT::RDataFrame(10000).Define(""x"", ""rdfentry_"").Define(""y"", ""fabs(rdfentry_ - 5000)"").Define(""z"", ""rdfslot_"");; ROOT::RDF::RSnapshotOptions opts;; opts.fLazy = true;; auto colNames = df.GetColumnNames();; auto c = df.Count();; auto n1 = df.Filter(""x > 2000 && y < 0"").Snapshot(""Events"", ""A.root"", colNames, opts);; auto n4 = df.Filter(""z < 3 && y >= 0"").Snapshot(""Event",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7500:801,down,downstream,801,https://root.cern,https://github.com/root-project/root/issues/7500,1,['down'],['downstream']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When changing the window size of the gui_ex.py tutorial, the contents of the window do not scale. ### Expected behavior; The contents should adjust to the window size. ### To Reproduce; ```; cd $ROOTSYS/tutorials/pyroot; python -i gui_ex.py; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Arch Linux, compiled from latest source. ### Additional context; See [ROOT forum](https://root-forum.cern.ch/t/pyroot-gui-tutorial-examples-problems-6-22-06/43891)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7435:742,down,download,742,https://root.cern,https://github.com/root-project/root/issues/7435,1,['down'],['download']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ```C++; ROOT::VecOps::RVec v {2., 3., 1.};; auto firstTwo = Take(v, 2);; ```; causes error in the ROOT interactive environment for ROOT version 6.22/08 (released) and 6.25/01 (master). ### Expected behavior; The above expressions work in the interactive environment.; It should be guaranteed to work since it's documented as the example code in the [manual](https://root.cern/doc/master/group__vecops.html#gab314e8e57fba6274d8d3c652a24b2c52). ### To Reproduce; * On ROOT version 6.22/08; ```; $ root -l; root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};; root [1] Take(v, 2); (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }; root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);; root [3] firstTwo; (ROOT::VecOps::RVec<double> &) { 2.0000000, 3.0000000 }; root [4] auto firstTwo2 = Take(v, 2);; ROOT_prompt_4:1:1: error: Syntax error; auto firstTwo2 = Take(v, 2);; ^; FunctionDecl 0x3882650 <input_line_19:1:1, ROOT_prompt_4:3:1> input_line_19:1:6 __cling_Un1Qu38 'void (void *)'; |-ParmVarDecl 0x38825a0 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x38829e0 <col:42, ROOT_prompt_4:3:1>; | |-DeclStmt 0x38829b8 <line:1:1, col:28>; | | `-VarDecl 0x3882728 <col:1, col:27> col:6 firstTwo2 'auto' cinit; | | `-CallExpr 0x3882980 <col:18, col:27> '<dependent type>'; | | |-DeclRefExpr 0x38828f0 <col:18> '<dependent type>' lvalue Var 0x3882860 'Take' '<dependent type>'; | | |-DeclRefExpr 0x3882938 <col:23> 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>' lvalue Var 0x27808f8 'v' 'ROOT::VecOps::RVec<double>':'class ROOT::VecOps::RVec<double>'; | | `-IntegerLiteral 0x388296",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:468,error,error,468,https://root.cern,https://github.com/root-project/root/issues/9261,1,['error'],['error']
Availability,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. The interpreter's behavior w.r.t. putting `;` at the end of a line is inconsistent:. ```bash; ~ root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 30 2021, 13:01:03 |; | From heads/master@v6-25-01-813-g3ba13b74a1 |; | With c++ (GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; root [0] struct A {}; root [1] using namespace ROOT; ROOT_prompt_1:1:21: error: expected ';' after namespace name; using namespace ROOT; ^; ;; root [2] int a, b; root (cont'ed, cancel with .@) [3]; ```. I think if `;` is not required after `struct A {}`, it should not be required anywhere.; The issue with `int a, b` is tracked separately, as https://sft.its.cern.ch/jira/browse/ROOT-9202 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8064:985,error,error,985,https://root.cern,https://github.com/root-project/root/issues/8064,1,['error'],['error']
Availability,"- [X] Checked for duplicates; None found. ### Describe the bug; Since three nights (Jan 15th), the dev3 (ROOT-master) debug builds fail systematically with an error in; ```; clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int); ```; See for example [this](http://cdash.cern.ch/upload/2db1c74842498c34342939e8d67598ae973967d8/ROOT-HEAD-build.log) .; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; A successful build ;-) .; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; LCG nightlies (lcgcmake). Did not try yet in standalone.; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT master; 2. Operating system: centos7, centos8; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source (github). ### Additional context; None for the moment",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594:159,error,error,159,https://root.cern,https://github.com/root-project/root/issues/9594,2,"['down', 'error']","['download', 'error']"
Availability,"- [] Checked for duplicates. ### Describe the bug. Origin of the issue is from the forum discussion [here](https://root-forum.cern.ch/t/error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy/47178). During the event loop over the friend `TTree` with `ROOT.EnableImplicitMT()` enabled using `RDataFrame` at some point, many errors pop up:; `Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy.`. I couldn't reproduce this behavior with manually produced fresh root files, so I assume something might have gone wrong with a root file itself during the creation.. However, without using ""Friend"" `TTree` or with `TTree` with `ROOT.EnableImplicitMT()` disabled, the file is analized correctly without any errors. This makes me wonder is this is a bug, or what is an explanation for such a behavior?. ### Expected behavior. No errors should appear... ### To Reproduce. Run following code snippet:. ```; import ROOT; # Commenting MT line makes this example work; ROOT.EnableImplicitMT(). ch = ROOT.TChain(""lumical""); ch.Add(""test_default.root""); ch.AddFriend(""emv=lumical"", ""test_emv.root""); # Adding test_emv.root as the only one but not as a friend, also works...; # ch = ROOT.TChain(""lumical""); # ch.Add(""test_emv.root""). h_emv = ROOT.RDataFrame(ch).Filter(""if (rdfentry_ % 500000 == 0){cout<<rdfentry_<<endl;} return true;"")\; .Histo1D((""h_emv"", ""emv"", 100, -100, 100), ""emv.mc_cont_posy"" ); h_emv.Draw(); input(""wait""); ```. The links for the root files:; https://syncandshare.desy.de/index.php/s/2Lf6469S22sYt3T. ### Setup; Tested with:; `source /cvmfs/sft.cern.ch/lcg/views/LCG_100rc2/x86_64-centos7-gcc10-opt/setup.sh`. 1. ROOT version 6.24/00; 2. Operating system Centos7; 3. Python 3.8.6. ### Additional context. After stopping and killing the job which produces errors above, restarting the script can sometimes produce following error:; `Error in <TTreeReaderArrayBase::GetBranchAndLeaf()>: The tree does not have a branch called emv.mc_cont_posy. You could chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9106:136,error,error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy,136,https://root.cern,https://github.com/root-project/root/issues/9106,6,"['Error', 'error']","['Error', 'error', 'error-in-tcollectionlessstlreader-getcp-read-error-in-tbranchproxy', 'errors']"
Availability,"- [check ] Checked for duplicates; ### Describe the bug. With regard to the file; **interpreter/CMakeLists.txt**; commit 408de13e131818a3620ce44a7341892f4bdfc420; moved the line ; `get_directory_property(LLVM_DEFS DIRECTORY llvm/src COMPILE_DEFINITIONS)`; from inside; `if (builtin_llvm)`; to inside; `if (builtin_cling)`. Error looks like: . CMake Error at interpreter/CMakeLists.txt:452 (get_directory_property):; get_directory_property DIRECTORY argument provided but requested directory; not found. This could be because the directory argument was invalid or, it; is valid but has not been processed yet. ### Expected behavior; The previous method of handling this was to simply skip this procedure. The compile flags from the external LLVM would not be appended to CLING compile flags. The new logic always checks for this dir even if llvm is external. As a result, it no longer works with my external LLVM, which doesn't have a copy of the /src directory in its installation dir. My build system removes the source trees and build dirs to save space on disk. LLVM install dir does contain cmakefiles under lib/cmake/ and those were used to identify it correctly. . ### To Reproduce. ### Setup; obtained root from https://root.cern.ch/download/root_v6.24.00.source.tar.gz. ### Additional context; I am building with cmake and I have builtin_llvm OFF but builtin_cling ON because the internet told me I am not allowed to use my own cling, I have to use the one with root-patches. I am trying very hard to not use the builtin_llvm because it clashes with the other builds on my system so root either fails to build or just crashes, depending on the version. I am an easybuilder and if I can get this to work, lots of other easybuilders will be able to replicate my procedure and build ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8141:323,Error,Error,323,https://root.cern,https://github.com/root-project/root/issues/8141,3,"['Error', 'down']","['Error', 'download']"
Availability,"- [github] Checked for duplicates; ### Describe the bug; On the page. https://root.cern.ch/doc/master/classRooChi2Var.html. there is only one block:. PyROOT; Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. In the [source code](https://root.cern.ch/doc/master/RooChi2Var_8cxx_source.html) (and previous documentation versions, e.g. in my downloaded html documentation archive for v. 6.24 and v. 6.22), you can see that there is a lot of documentation for that class (at least more than can be seen now).; Which is funny, there is no reference to PyROOT in the docstrings. ### Expected behavior; Documentation should be present. ### To Reproduce; Visit documentation site.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8519:378,down,downloaded,378,https://root.cern,https://github.com/root-project/root/issues/8519,1,['down'],['downloaded']
Availability,"- [x ] Checked for duplicates. ### Describe the bug. ROOT 6.28.00 does not work correctly when $PWD is not accessible by the user. If I do:. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. it fails with:. ```bash; input_line_2:1:10: fatal error: cannot open file './cling/Interpreter/RuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/RuntimeUniverse.h""; ^; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; input_line_4:2:10: fatal error: cannot open file './TError.h': Permission denied; #include ""TError.h""; ^; input_line_5:1:10: fatal error: cannot open file './cling/Interpreter/DynamicLookupRuntimeUniverse.h': Permission denied; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ```. the same snippet works fine with 6.26.10. Notice things work fine with just the x bit set (i.e. chmod 100 . still works). ### Expected behavior. The standard root prompt without any error. ### To Reproduce. See above. ```bash; mkdir -p foo; cd foo; chmod 000 .; root; ```. ### Setup. ROOT 6.28.00, both el7 and ubuntu. ### Additional context. While this can look like a corner case, it reflects the way ALICE runs its online reconstruction jobs, so it's rather critical for us. I am in parallel trying to understand if the unaccessible cwd can be avoided, but this might have non trivial implications (and its for sure beyond my responsibilities).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12409:246,error,error,246,https://root.cern,https://github.com/root-project/root/issues/12409,4,['error'],['error']
Availability,"- [x ] Checked for duplicates. ### Describe the bug; I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:; Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]; Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. ; Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(); Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html; Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681); dot: compound.c:78: boxIntersectf: Assertion `0' failed.; Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot!. Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");; root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE.; Error in <THtml::MakeClass>: Unknown class 'TTree'!. root [6] TTree t;. works fine. ### Expected behavior; Should report no errors, should create TTree documentation. ### To Reproduce; My ~/.rootrc is. > \# THtml specific settings.; Root.Html.OutputDir: htmldoc/; Root.Html.SourcePrefix:; Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295:794,Error,Error,794,https://root.cern,https://github.com/root-project/root/issues/7295,1,['Error'],['Error']
Availability,"- [x ] Checked for duplicates. ### Describe the bug; In the documentation of [RooParametricStepFunction](https://root.cern.ch/doc/master/classRooParametricStepFunction.html) the last line of the example goes like. RooParametricStepFunction aPdf = (""aPdf"",""PSF"",*x, ; *list,limits,nbins);. where _x_ is undefined in that code sample. ### Expected behavior; Please write what _x_ in that example is (that is some RooAbsReal). ; Could you please also add the usage of this function? As I understand, it gets its values from a histogram (or does it fit a histogram), so it would be nice to introduce that histogram to the example.; I found no references to this class in tutorials. P.S. I couldn't run this code in ROOT v.6.22/06 because of the error. > error: reference to 'list' is ambiguous; *list,limits,nbins);; ^; ROOT_prompt_3:1:13: note: candidate found by name lookup is '__cling_N54::list'; RooArgList* list = new RooArgList(""list"");; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../include/c++/10.2.0/bits/stl_list.h:556:11: note: candidate found by name lookup is 'std::__cxx11::list'; class list : protected _List_base<_Tp, _Alloc>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7748:741,error,error,741,https://root.cern,https://github.com/root-project/root/issues/7748,2,['error'],['error']
Availability,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--. -->; segfault in build process. ; ### Expected behavior; <!--; -->; build process completes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; standard cmake build process, as described in the guide. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT v6-26-10 (@4dddea35); FreeBSD 13.2 RELEASE (clang 14.0.5), required dependencies installed from ports. ### Additional context; <!--; Add any other context about the problem here.; -->. a port exists v6-28-02 (development/root), installs in binary form (so somebody got it to compile, did not have too much time to test it thoroughly). In my case, however, the port also does not compile, craps out somewhere else. plus it hauls in too many dependencies so it is less than ideal.; I imagine getting it to work on FreeBSD would not end at fixing this issue here. The fbsd port maintainer has some patches which might help, but I have also seen that e.g. procfs is deprecated in new releases and libprocstat has to be used, etc, etc.; With that being said, it would be extremely nice to get ROOT to work on FreeBSD...; thanks,. ```; [ 52%] Built target rootcling_stage1; [ 52%] Generating G__Core.cxx, ../lib/Core.pcm; #0 0x000000000446e3d5 llvm::sys::PrintStackTrace(llvm::raw_ostream&) Signals.cpp:0:0; #1 0x000000000446c6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787:935,down,download,935,https://root.cern,https://github.com/root-project/root/issues/12787,1,['down'],['download']
Availability,"- [x ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `sudo root --notebook --log-level 10 --allow-root` works; `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds.; There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:; `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`; and noticed that the kernel freezes on line 57:; `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT Version: 6.22/02; 2. arch linux; 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6608:1042,down,download,1042,https://root.cern,https://github.com/root-project/root/issues/6608,1,['down'],['download']
Availability,"- [x] Checked for duplicates. ### Describe the bug. (@pcanal determined that it's JSON at fault here). Building with external nljson 3.11 causes CMake to emit an empty `-D` definition on the command line, breaking a root-cling call inside the build:; ```; cd /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/io/io && /opt/homebrew/Cellar/cmake/3.24.1/bin/cmake -E env LD_LIBRARY_PATH=/private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/lib: /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -s /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-src -excludePath /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/ginclude -excludePath /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/externals -excludePath /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/builtins -rml libRIO.so -rmf /private/var/folders/n9/mqnx20b929z469f6p3fbq7c40000gn/T/seth/spack-stage/spack-stage-root-6.26.06-htsa7u5mmwachooyld7p55v6t3ooncqo/spack-build-htsa7u5/lib/libRIO.rootmap -writeEmptyRootPCM -D -compilerI/Applications/Xcode.app/Contents/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11312:90,fault,fault,90,https://root.cern,https://github.com/root-project/root/issues/11312,1,['fault'],['fault']
Availability,"- [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds.; For instance, I trying to rebuild libAfterImage by executing in build directory:; ```; rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so ; ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:; ```; In file included from input_line_10:3:; In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:; In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:; In file included from /home/linev/build/webgui/include/Math/Util.h:28:; /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch; #include <Vc/Vc>; ^; /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'; [ 74%] Built target testInterpreterLock; [ 74%] Built target testImt; Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h); make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```; If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C; ```; % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnosti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7362:678,error,error,678,https://root.cern,https://github.com/root-project/root/issues/7362,1,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug. Error reading object from file. Please find a short example to reproduce below. . ### Minimal example to reproduce. Below I refer to it as **test.cpp**. #include ""map""; #include ""array""; #include ""iostream""; ; #include ""TObject.h""; #include ""TFile.h""; ; class TestClass : public TObject {; public:; TestClass(){; std::array<std::string, 2> test_array{""aaaa"", ""bbbbbb""};; test_map_[test_array] = ""cccc"";; }; ; void Print(Option_t *option="""") const {; for(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:52,Error,Error,52,https://root.cern,https://github.com/root-project/root/issues/8268,1,['Error'],['Error']
Availability,"- [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console; $ touch foo.h; $ rootcling -v2 -f foo.cxx foo.h; Warning: Unused class rule: foo; ```. ### To Reproduce. ```console; $ touch foo.h; $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ...; $ rootcling -v2 -f foo.cxx foo.h; error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'; error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'; Error: Parsing #pragma failed in memory; Warning: Unused class rule: foo; ```. ### Setup; ```; $ rootcling --version; LLVM (http://llvm.org/):; LLVM version 9.0.1; Optimized build with assertions.; Default target: x86_64-apple-darwin20.6.0; Host CPU: skylake; ```. Installed with Spack on macOS 11:; ```; ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuilti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524:644,error,error,644,https://root.cern,https://github.com/root-project/root/issues/9524,3,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates. ### Describe the bug. PyROOT related failures on s390x. Endian issus. ### Expected behavior. PyROOT should work on big endian without glitches. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for s390x; 2. run unut tests. ### Setup. 1. ROOT version: 6.28.00; 2. Fedora Linux s390x, RHEL+EPEL s390x; 3. Compilation from source. ### Additional context. The failing tests. #### pyunittests-pyroot-pyz-rtensor . This is an endian issue:. $ printf '%08x\n%08x\n' 16777216 1; 01000000; 00000001; ~~~; 109/1272 Test #62: pyunittests-pyroot-pyz-rtensor ......................................***Failed 2.92 sec; test_memoryAdoption (rtensor.ArrayInterface.test_memoryAdoption); Test correct adoption of different datatypes ... ok; test_memoryLayout (rtensor.ArrayInterface.test_memoryLayout); Test adoption of the memory layout ... ok; test_ownData (rtensor.ArrayInterface.test_ownData); Test ownership of adopted numpy array ... ok; test_dtypes (rtensor.AsRTensor.test_dtypes); Test adoption of numpy arrays with different data types ... ok; test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout ... FAIL; test_strides (rtensor.AsRTensor.test_strides); Test adoption of the strides ... ok; test_expandDims (rtensor.NumpyCompliance.test_expandDims); Test np.expand_dims vs RTensor::ExpandDims ... ok; test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape ... FAIL; test_slice (rtensor.NumpyCompliance.test_slice); Test slicing operations ... ok; test_squeeze (rtensor.NumpyCompliance.test_squeeze); Test np.squeeze vs RTensor::Squeeze ... ok; test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose ... FAIL; ======================================================================; FAIL: test_memoryLayout (rtensor.AsRTensor.test_memoryLayout); Test adoption of the memory layout; ------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:67,failure,failures,67,https://root.cern,https://github.com/root-project/root/issues/12429,1,['failure'],['failures']
Availability,"- [x] Checked for duplicates. ### Describe the bug. ROOT can't recognize components like `std::experimental::tuple` ( Maybe it is because there're two `tuple`, one in `std` and one in `std::experimental`, so ROOT is confused). ![image](https://user-images.githubusercontent.com/77525145/177772823-0411a239-ecd0-4845-a5f9-966d628d4bb0.png). ### Expected behavior; works fine. ### To Reproduce; type `std::experimental::tuple<int, double> T;` in the repl. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; * ROOT version: main; * Operating System: Ubuntu 22 LTS; * Build ROOT from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10924:566,down,download,566,https://root.cern,https://github.com/root-project/root/issues/10924,1,['down'],['download']
Availability,"- [x] Checked for duplicates. ### Describe the bug. ROOT script crashes when trying to read an SQLite file into an data frame:; ```; terminate called after throwing an instance of 'std::runtime_error'; what(): SQlite error: disk I/O error; ```. ### Expected behavior. Should not crash. ### To Reproduce. ```; root.exe -q 'generate_stats_plots.C+(""stats.db"", ""stats.root"")'; ```. ### Setup. ROOT 6.24/04. Linux lxcvmfs146.cern.ch 3.10.0-1160.36.2.el7.x86_64 #1 SMP Wed Jul 21 11:57:15 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux. ### Additional context. You can download the ROOT script and the SQLite database here: https://cernbox.cern.ch/index.php/s/JwjCMwnirmL8aX1. Thank you!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9231:217,error,error,217,https://root.cern,https://github.com/root-project/root/issues/9231,3,"['down', 'error']","['download', 'error']"
Availability,"- [x] Checked for duplicates. ### Describe the bug. Test failures in RNTuple on s390x. Endian issues.; There are way fewer failures in 6.28.00 than in earlier versions, this report is about remaining ones. ### Expected behavior. RNTuple should work for big-endian too. ### To Reproduce. 1. Build root 6.28.00 for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux on s390x, RHEL+EPEL on s390x; 3. Compilation from source. ### Additional context. The failing tests . #### gtest-tree-ntuple-v7-test-ntuple-basics. Fatal: nread == nbytes violated; ~~~; 474/1272 Test #421: gtest-tree-ntuple-v7-test-ntuple-basics .............................***Failed 63.64 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 17 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 13 tests from RNTuple; [ RUN ] RNTuple.ReconstructModel; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ReconstructModel (160 ms); [ RUN ] RNTuple.MultipleInFile; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experime",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:57,failure,failures,57,https://root.cern,https://github.com/root-project/root/issues/12426,2,['failure'],['failures']
Availability,"- [x] Checked for duplicates. ### Describe the bug. The following type of error appeared in the ATLAS analysis software (I believe...) when we switched to ROOT 6.26/08. Though when I now produced a standalone reproducer for it, I couldn't make it work with 6.24/06 either. (Which is what we used for a long time, apparently without this issue.). Take the following struct:. ```c++; struct ConfigType {; std::map<std::string, std::tuple<ConfigType, std::string> > m_children;; };; ```. When I build a (Reflex) dictionary for it, it seems to work fine. ```; [bash][atspot01]:self-reference > root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:74,error,error,74,https://root.cern,https://github.com/root-project/root/issues/12358,1,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug. The gtest-tree-ntuple-v7-test-ntuple-types test ends with a seg fault in the RNTuple.TClassEBO test. ### Expected behavior. Passing test. ### To Reproduce. 1. Compile root 6.28.00 for ix86.; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux 36/37/38/39, RHEL+EPEl 8/9; 3. How you obtained ROOT: compilation from source. ### Additional context. Log for the failing test. ~~~; 507/1318 Test #444: gtest-tree-ntuple-v7-test-ntuple-types ..............................***Failed 91.08 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 19 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 19 tests from RNTuple; [ RUN ] RNTuple.TypeName; [ OK ] RNTuple.TypeName (200 ms); [ RUN ] RNTuple.CreateField; [ OK ] RNTuple.CreateField (0 ms); [ RUN ] RNTuple.ArrayField; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.ArrayField (37 ms); [ RUN ] RNTuple.StdPair; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:116,fault,fault,116,https://root.cern,https://github.com/root-project/root/issues/12428,1,['fault'],['fault']
Availability,"- [x] Checked for duplicates. ### Describe the bug. When running the unit tests on s390x there are several failures:. ```; 97% tests passed, 34 tests failed out of 1232; Label Time Summary:; longtest = 572.89 sec*proc (27 tests); multithreaded = 889.21 sec*proc (2 tests); python_runtime_deps = 58.00 sec*proc (11 tests); tutorial = 4391.45 sec*proc (786 tests); Total Test time (real) = 2976.41 sec; The following tests FAILED:; 	 16 - pyunittests-pyroot-pyz-stl-vector (Failed); 	 57 - pyunittests-pyroot-pyz-rtensor (Failed); 	213 - gtest-roofit-histfactory-test-testHistFactory (Failed); 	219 - gtest-roofit-roofit-test-testRooCrystalBall (Failed); 	220 - gtest-roofit-roofit-test-testRooJohnson (Failed); 	223 - gtest-roofit-roofit-test-testSumW2Error (Failed); 	228 - gtest-roofit-roofitcore-test-testRooBinSamplingPdf (Failed); 	229 - gtest-roofit-roofitcore-test-testRooSimPdfBuilder (Failed); 	230 - gtest-roofit-roofitcore-test-testRooWrapperPdf (Failed); 	231 - gtest-roofit-roofitcore-test-testRooFitDriver (Failed); 	233 - gtest-roofit-roofitcore-test-testRooAbsPdf (Failed); 	237 - gtest-roofit-roofitcore-test-testRooProdPdf (Failed); 	241 - gtest-roofit-roofitcore-test-testTestStatistics (Failed); 	242 - gtest-roofit-roofitcore-test-testRooProductPdf (Failed); 	243 - gtest-roofit-roofitcore-test-testNaNPacker (Failed); 	244 - gtest-roofit-roofitcore-test-testRooSimultaneous (Failed); 	245 - gtest-roofit-roofitcore-test-testRooGradMinimizerFcn (Failed); 	247 - gtest-roofit-roofitcore-test-testLikelihoodSerial (Failed); 	248 - gtest-roofit-roofitcore-test-testRooRealL (Failed); 	249 - gtest-roofit-roofitcore-test-testGlobalObservables (Failed); 	252 - gtest-roofit-roostats-test-testSPlot (Failed); 	274 - test-stresshistogram (Failed); 	275 - test-stresshistogram-interpreted (Failed); 	296 - test-stresshistofit (Failed); 	297 - test-stresshistofit-interpreted (Failed); 	396 - gtest-tree-dataframe-test-datasource-ntuple (Failed); 	402 - gtest-tree-ntuple-v7-test-ntuple-bas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10409:107,failure,failures,107,https://root.cern,https://github.com/root-project/root/issues/10409,1,['failure'],['failures']
Availability,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11138:156,error,error,156,https://root.cern,https://github.com/root-project/root/issues/11138,4,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates. ### Describe the bug. While updating ATLAS's EDM, we tried to introduce some `std::vector<std::array<float, 3> >` variables into our output files. But was met with the following types of errors:. ```; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripOverlapSpacePointsAuxDyn.topStripCenter' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.bottomStripDirection' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.stripCenterDistance' [Likely missing ShowMember].; RAWtoALL 12:36:50 Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'ITkStripSpacePointsAuxDyn.topStripCenter' [Likely missing ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:217,error,errors,217,https://root.cern,https://github.com/root-project/root/issues/12007,4,"['Error', 'error']","['Error', 'errors']"
Availability,"- [x] Checked for duplicates. ### Describe the bug. tutorial-tree-drawsparse fails on s390x. ### Expected behavior. No failure. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root for 6.28.00 on s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora Linux s390x, RHEL+EPEL s390x; 3. How you obtained ROOT: build from source. ### Additional context. Output from failing test:; ~~~; 1008/1272 Test #1006: tutorial-tree-drawsparse ................................\; ............***Failed 0.97 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/tree/drawsparse.C...; /usr/include/c++/13/bits/stl_vector.h:1123: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12431:119,failure,failure,119,https://root.cern,https://github.com/root-project/root/issues/12431,3,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"- [x] Checked for duplicates. ### Describe the bug; ![image](https://user-images.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png); On a canvas with a histogram, if I zoom using right click, SetRangeUser, all works fine. If I zoom using the scroll wheel on the x-axis, it works well, too. If I zoom using press and hold, then release, I get an image artifact:. ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png); The artifact disappears after clicking once on the canvas. I do not get the artifact at all if I call at script beginning: `gStyle->SetCanvasPreferGL()`. It seems that the image artifact has exactly the same pattern as the semi-transparent fill-style zooming window. See here:. While Zooming:; ![image](https://user-images.githubusercontent.com/10653970/151596601-6749a23e-b22b-4000-a464-2b3cc3f9811d.png). After Zooming:; ![image](https://user-images.githubusercontent.com/10653970/151596998-b8aee660-4b45-48e1-97b6-bc4140897a8b.png). The pattern in the old labels is slightly different:; ![image](https://user-images.githubusercontent.com/10653970/151596825-6a40f470-724c-4c5f-afbc-31c32fb6442f.png). ### Expected behavior; No image artifact is shown. ### To Reproduce; - Download [test_zoom.zip](https://github.com/root-project/root/files/7954355/test_zoom.zip); - root -l test_zoom.cpp+; - Zoom between 0 and 3000 via mouse press and hold on X axis. ### Setup; The issue appears with:; - [x] Master / Ubuntu 18 and 20; - [x] 6.20.06 / Ubuntu 20; - [x] 6.13.08 / Ubuntu 18; - [x] 5.34.19 / Ubuntu 14 (over ssh). It does not appear with:; - [x] MacOS.; - [x] 5.34.18/Ubuntu 14 (over ssh); - [x] 5.32.04/Ubuntu 14 (over ssh). ### Additional context; https://github.com/root-project/root/commit/3787e53acb1a61970f7c033338922214bfbee4c5; https://github.com/root-project/root/issues/9740",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763:1281,Down,Download,1281,https://root.cern,https://github.com/root-project/root/issues/9763,1,['Down'],['Download']
Availability,"- [x] Checked for duplicates. ### Describe the bug; 1. Use `TChain` with >1 root files as an input for RDataFrame; 2. TChain should have objects like `XYZVector` or `vector <double>`, etc.; 3. Snapshot RDataFrame providing list of columns; 4. Warning `TChain::CopyAddresses:0: RuntimeWarning: Could not find branch named 'xxx' in tree named 'xxx'`appears; 5. Warning appears on the transition between files. ### Expected behavior; Expected no warning if it has no effect on the output.; Error, if it effects the output.; List of possible scenarios when it cause code to break?. ### To Reproduce; Compact reproducer:. ```; import ROOT. ROOT.gInterpreter.Declare(; '''; #include ""Math/Vector3D.h""; using namespace ROOT::Math;; '''). def test_warning():; # Create two files to read data from; # Warning appears only for cpp_vec and phys_vec branches; for i in range(2):; ROOT.RDataFrame(10).Define(""simple_number"", ""rdfentry_"")\; .Define(""cpp_vec"", ""std::vector<double>{-1, 42, -1}"")\; .Define(""phys_vec"", ""XYZVector(-1, 42, -1)"")\; .Snapshot(""test_tree"", ""file{}.root"".format(i)). ch = ROOT.TChain(""test_tree""); ; # Using only one file shows No warning...; # ch.Add(""./file1.root""); ch.Add(""./file[01].root""). df = ROOT.RDataFrame(ch).Filter('{cout<<""Event: ""<<rdfentry_<< endl;} return true;'); df = df.Define(""new_var"", ""phys_vec.Y()*cpp_vec[1]""). # Snapshoting w/o branch list shows no warning too; # df.Snapshot(""new_tree"", ""new_file.root""); df.Snapshot(""new_tree"", ""new_file.root"", [""new_var""]). test_warning(); ```. ### Setup; 1. ROOT 6.22/00 from /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc10-opt/bin/root; 2. Centos 7; 4. Python 3.7.6. ### Additional Information. This behaviour was spotted and discussed at ROOT forum:; https://root-forum.cern.ch/t/warning-in-tchain-copyaddresses-could-not-find-branch-named/35055; https://root-forum.cern.ch/t/tchain-0-warning-with-rdataframe-could-not-find-branch-named/44186",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7727:487,Error,Error,487,https://root.cern,https://github.com/root-project/root/issues/7727,1,['Error'],['Error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; Alma Linux 9 by default does not have `io_uring` support, even though its kernel version is recent enough (5.14). ROOT only checks if `io_uring` is present by checking if the `liburing` package is present (in [cmake/modules/Findliburing.cmake](https://github.com/root-project/root/blob/master/cmake/modules/Findliburing.cmake)), but not if `io_uring` is actually supported. ### Expected behavior; ~ROOT should not be able to build with the `uring` option if it is not supported by the kernel~ ; The presence of `io_uring` should be detected at runtime and a warning could be shown if ROOT was build with `uring` even though `io_uring` is not present. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; On a AL9 instance with `liburing` installed (`dnf install liburing`), run; ```; grep -i uring /boot/config-$(uname -r); ```; to verify that `io_uring` is indeed not supported. The output should be; ```; # CONFIG_IO_URING is not set; ```. Build and install ROOT with `-During=on`. Run; ```; root-config --has-uring; ```; to confirm ROOT was in fact built with this option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: master (but most likely every ROOT version that supports the `uring` option); OS: Alma Linux 9. ### Additional context; <!--; Add any other context about the problem here.; -->; A similar issue was opened (and subsequently fixed) in the ZFS repository: https://github.com/openzfs/zfs/issues/13648",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12701:1470,down,download,1470,https://root.cern,https://github.com/root-project/root/issues/12701,1,['down'],['download']
Availability,"- [x] Checked for duplicates. ### Describe the bug; Build fails due to one of these:; ```; FAILED: io/xml/G__XMLIO.cxx bin/libXMLIO_rdict.pcm bin/libXMLIO.rootmap E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/io/xml/G__XMLIO.cxx E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/libXMLIO_rdict.pcm E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/libXMLIO.rootmap ; cmd.exe /C ""cd /D E:\vcpkg_folders\new_master\buildtrees\root\x64-windows-dbg\io\xml && E:\vcpkg_cache\downloads\tools\cmake-3.25.1-windows\cmake-3.25.1-windows-i386\bin\cmake.exe -E env LD_LIBRARY_PATH=E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/lib: ROOTIGNOREPREFIX=1 E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/rootcling.exe -rootbuild -v2 -f G__XMLIO.cxx -s E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/libXMLIO.dll -m libRIO_rdict.pcm -excludePath E:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc -excludePath E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/ginclude -excludePath E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/externals -excludePath E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/builtins -rml libXMLIO.dll -rmf E:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/bin/libXMLIO.rootmap -IE:/vcpkg_folders/new_master/buildtrees/root/x64-windows-dbg/include -IE:/vcpkg_folders/new_master/installed/x64-windows/include -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/io/xml/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/winnt/inc -IE:/vcpkg_folders/new_master/installed/x64-windows/include -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/zstd/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/lz4/inc -IE:/vcpkg_folders/new_master/buildtrees/root/src/57b00fa7ea-10a10c16cc/core/lzma/inc -IE:/vcpkg_folders/new_master/buildtrees/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12738:512,down,downloads,512,https://root.cern,https://github.com/root-project/root/issues/12738,1,['down'],['downloads']
Availability,- [x] Checked for duplicates. ### Describe the bug; Builtin TBB has broken on MacOS M1 (reported [here](https://root-forum.cern.ch/t/help-on-compile-root-on-new-arm-macbook/42495/7)); ```; CMake Error at /Users/fermi/dev/root/build/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2; ‘make’ ‘compiler=clang’ ‘cpp0x=1’ ‘CXXFLAGS= -mno-rtm -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk’ ‘CPLUS=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++’ ‘CONLY=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc’ ‘LDFLAGS= -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk’; See also; /Users/fermi/dev/root/build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; make[2]: *** [TBB-prefix/src/TBB-stamp/TBB-build] Error 1; make[1]: *** [CMakeFiles/TBB.dir/all] Error 2; make: *** [all] Error [2](url); ```; with:; ```; unknown/unsupported architecture name for: -arch armv4t; ```. ### Available patch; https://github.com/oneapi-src/oneTBB/pull/258. ### Setup; ROOT on MacOS M1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6903:195,Error,Error,195,https://root.cern,https://github.com/root-project/root/issues/6903,5,"['Avail', 'Error']","['Available', 'Error']"
Availability,"- [x] Checked for duplicates. ### Describe the bug; Calling `Display` on an RDataFrame created from an RNTuple that contains user-defined classes causes ROOT to crash with an error message `No on-disk column information for for field X`, where `X` is a data member of the class in question. Other methods appear to be working correctly, as well as explicitly specifying which data member should be read (i.e. `df.Display({""electrons.pt""})`). ### Expected behavior; Nothing crashes and an `RDisplay` object is returned. ### To Reproduce; Minimal reproducer:; ```c++; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RNTupleModel.hxx>. #include <iostream>. using ROOT::Experimental::RNTupleModel;; using ROOT::Experimental::RNTupleWriteOptions;; using ROOT::Experimental::RNTupleWriter;. const std::string kNTupleName = ""N"";; const std::string kNTupleFileName = ""ntuple_electrons.root"";. struct Electron {; float pt = 0;; };. void write() {; auto model = RNTupleModel::Create();; auto fldElectrons = model->MakeField<Electron>(""electrons"");. auto ntuple = RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. fldElectrons->pt = 42.;; ntuple->Fill();; }. void read() {; auto df = ROOT::RDF::Experimental::FromRNTuple(kNTupleName, kNTupleFileName);; auto dfDef = df.Define(""ptSquared"", ""electrons.pt * electrons.pt"");. dfDef.Describe().Print();. auto dfDisp = df.Display();; dfDisp->Print();; }. void ntuple_rdf_custom_class() {; write();; read();; }; ``` . ### Setup; 1. ROOT version: master; 2. Operating system: Ubuntu 22",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12852:175,error,error,175,https://root.cern,https://github.com/root-project/root/issues/12852,1,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode.; Use it to initialize a `TF1`; nightly 6.27.01 outputs following:; (6.26.00 release crash immediately); ```; IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'!; You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'!; You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void); Maybe you need to load the corresponding shared library?; ```; Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately).; ### Expected behavior; `TF1` initialized with function pointer. ### To Reproduce; Detailed in description section. ### Setup; root nightly 6.27.01 32 bit and 64 bit; root release 6.26.00 32 bit; windows 64 bit os; installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context; Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10452:1780,down,download,1780,https://root.cern,https://github.com/root-project/root/issues/10452,1,['down'],['download']
Availability,"- [x] Checked for duplicates. ### Describe the bug; Distributed RDataFrame has support for friend trees, but it seems something is missing. See the gist at https://gist.github.com/vepadulano/b42343bff7297958c46675577bce46a9 :; 1. Two RDF are created and one column is filled; 2. They are both snapshotted to disk and merged into a single file through `hadd`; 3. A TChain is created with one column from the merged file and a friend TChain is attached to it with the second column from the merged file; 4. A distributed RDataFrame with spark is created using the TChain as input, then one histogram per column is booked and drawn to a canvas; 5. The operation fails with; ```; TypeError: Template method resolution failed:; none of the 4 overloaded methods succeeded. Full details:; ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void>::Histo1D(experimental::basic_string_view<char,char_traits<char> > vName) =>; runtime_error: Unknown column: myfriend.rnd; ```. ### Expected behavior; The program should not fail, in fact substituting the distributed rdataframe object with a plain rdataframe gives the correct output image. ### To Reproduce; 1. Source an environment with ROOT master; 2. download the linked gist; 3. `python friendtrees_spark.py`. ### Setup. Fedora 32; ROOT version: master; Built from source; ### Additional context; Thanks to @Zeguivert for originally reporting this issue",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7584:1251,down,download,1251,https://root.cern,https://github.com/root-project/root/issues/7584,1,['down'],['download']
Availability,"- [x] Checked for duplicates. ### Describe the bug; During compilation, I get the following error:; ```; [6/20] Running utility command for SofieCompileModels_PyTorch; Torch Version: 1.7.0; RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); RecursiveScriptModule(; original_name=Model; (fc1): RecursiveScriptModule(original_name=Linear); (relu): RecursiveScriptModule(original_name=ReLU); ); libc++abi: terminating with uncaught exception of type std::runtime_error: TMVA::SOFIE - Parsing PyTorch node onnx::Shape is not yet supported ; /bin/sh: line 1: 21308 Abort trap: 6 ./emitFromPyTorch; ```. ### Expected behavior; I expect this to just compile. I believe the problem may lie with the PyTorch version I had installed, 1.7.0. CMake should detect the version and disable incompatible tests. Indeed, installing PyTorch 1.9.1 makes the problem go away. ### To Reproduce; Install PyTorch 1.7.0 with conda or pip, make sure it's in your PATH so CMake detects it, and build the `SofieCompileModels_PyTorch` target. ### Setup; 1. ROOT version: master; 2. Operating system: macOS 11.6; 3. How you obtained ROOT: built it myself",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9079:92,error,error,92,https://root.cern,https://github.com/root-project/root/issues/9079,1,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; I've been using in my programs these constructs:; ```; TMutex myMutex;; //...; R__LOCKGUARD(myMutex); ```; (In analogy with https://en.cppreference.com/w/cpp/thread/lock_guard). Somehow, in one of my computers (not in the other, not sure if it is related with an update I did in ROOT or something similar), I get a compilation error. This error didn't appear before. ```; error: no matching function for call to ‘TLockGuard::TLockGuard(TMutex&)’; R__LOCKGUARD(fGuiMutex) // scoped mutex; ^; /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: candidate: TLockGuard::TLockGuard(TVirtualMutex*); TLockGuard(TVirtualMutex *mutex); ^~~~~~~~~~; /opt/root_src/core/base/inc/TVirtualMutex.h:76:4: note: no known conversion for argument 1 from ‘TMutex’ to ‘TVirtualMutex*’; error: expected ‘,’ or ‘;’ before. 72:4: note: candidate constructor not viable: no known conversion from 'TMutex' to 'const TLockGuard' for 1st argument. ```. ### Expected behavior; No error is produced as before. Or why are the others compiling well ?. Should I change instead to R__LOCKGUARD(&myMutex); ?; If yes, could this be added into the documentation ? Right now, it is not specified if it has to be a pointer or not. ### To reproduce; - Open a ROOT terminal; - TMutex fr; - R__LOCKGUARD(fr). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 08 2021, 11:17:13 |; | From heads/master@v6-25-01-1584-g068c20d159 |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9294:379,error,error,379,https://root.cern,https://github.com/root-project/root/issues/9294,5,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; If the external nhlohman json is used ROOT an error occurs if ROOTEve is used; ```; CMake Error at cmake/DD4hepBuild.cmake:625 (add_library):; Target ""DDEvePlugins"" links to target ""nlohmann_json::nlohmann_json"" but; the target was not found. Perhaps a find_package() call is missing for an; IMPORTED target, or an ALIAS target is missing?; Call Stack (most recent call first):; DDEve/CMakeLists.txt:43 (dd4hep_add_plugin); ```; (original discovery via lcg nightlies in DD4hep package build on top of root master. ### Expected behavior. ROOT targets resolve all their dependencies so that other CMake projects can use them without error or change to their cmake; `Find_dependency` added to e.g., ROOTConfig.cmake; or; this needs to be PRIVATE ?; https://github.com/linev/root/blob/88bdfd736f0b859b40973c457b75df9c73b0bbaf/graf3d/eve7/CMakeLists.txt#L139. ### To Reproduce; have a project with a library linking against ROOTEve; Assuming `cmake` is in the PATH (compiler and OS shouldn't matter); ```bash; wget http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/latest/ROOT-HEAD_db894-x86_64-centos7-gcc8-opt.tgz; tar xzf ROOT-HEAD_db894-x86_64-centos7-gcc8-opt.tgz; mkdir test; cd test; cat > CMakeLists.txt <<EOF; CMAKE_MINIMUM_REQUIRED(VERSION 3.12 FATAL_ERROR); PROJECT(myeve); find_package(ROOT REQUIRED); add_library(myeve SHARED myeve.cpp); TARGET_LINK_LIBRARIES(myeve ROOT::ROOTEve); EOF. cat > myeve.cpp <<EOF; int main (); {; return 1;; }; EOF; mkdir build; cd build. # assuming cmake is in the path; cmake -D ROOT_DIR=${PWD}/../../ROOT/HEAD/x86_64-centos7-gcc8-opt/cmake ..; ```. gives; ```; CMake Error at CMakeLists.txt:4 (add_library):; Target ""myeve"" links to target ""nlohmann_json::nlohmann_json"" but the; target was not found. Perhaps a find_package() call is missing for an; IMPORTED target, or an ALIAS target is missing?; ```. ### Setup. 1. ROOT master, `cmake ... -Dbuiltin_nlohmannjson=OFF ....`; 2. centos7; 3. build with LCGC",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6784:98,error,error,98,https://root.cern,https://github.com/root-project/root/issues/6784,3,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates. ### Describe the bug; In a divided canvas, after some filling and ""update"", I see some weird horizontal lines of the color palette reaching over a TH2:. ![image](https://user-images.githubusercontent.com/10653970/124624102-dec9a500-de7c-11eb-9784-d65c87d26679.png). ### Expected behavior; Palette lines stay were they were in the beginning.; ![image](https://user-images.githubusercontent.com/10653970/124624297-0e78ad00-de7d-11eb-82f8-a27d2d7222b3.png). ### To Reproduce; 1. Download [bugpalette.zip](https://github.com/root-project/root/files/6771012/bugpalette.zip); 2. Run as `root -l compton_reco.cpp+(2,0,true,true)`; 3. Click one on the ""next event arrow""; 4. Click again, artefact appears; 5. If you keep clicking, you will see that the lines move with the palette as the scale gets recalculated. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8618:506,Down,Download,506,https://root.cern,https://github.com/root-project/root/issues/8618,1,['Down'],['Download']
Availability,"- [x] Checked for duplicates. ### Describe the bug; In commit 63aeb0d65d3817e805b0edee2ab7b8f4aa20a190 (master) and commit c3e69067256263bfd5287794b4444e20da5b0f57 (v6.22) the bindings/pyroot/pythonizations/test/ttree_branch_attr.py was extended to include an additional test. This test fails on Intel 32 bit Fedora Linux: The error is: symbol '__atomic_fetch_add_8' unresolved. It does not fail on any other Fedora architectures including 32 bit arm. Fedora koji scratch build: https://koji.fedoraproject.org/koji/taskinfo?taskID=55575382. ```; 50/1028 Test #11: pyunittests-pyroot-pyz-ttree-branch-attr ............................***Failed 1.24 sec; test_alias_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_basic_type_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_char_array_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ntuples (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; test_struct_branch_leaflist (ttree_branch_attr.TTreeBranchAttr) ... ok; test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr) ... IncrementalExecutor::executeFunction: symbol '__atomic_fetch_add_8' unresolved while linking symbol '__cf_16'!; ERROR; test_vector_branch (ttree_branch_attr.TTreeBranchAttr) ... ok; ======================================================================; ERROR: test_ttree_subclass_in_namespace (ttree_branch_attr.TTreeBranchAttr); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.22.04/bindings/pyroot/pythonizations/test/ttree_branch_attr.py"", line 139, in test_ttree_subclass_in_namespace; t = ROOT.Foo.MyTree(); TypeError: Foo::MyTree constructor failed; ----------------------------------------------------------------------; Ran 9 tests in 0.509s; FAILED (errors=1); CMake Error at /builddir/build/BUILD/root-6.22.04/cmake/mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6813:327,error,error,327,https://root.cern,https://github.com/root-project/root/issues/6813,1,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; Opening a file containing a `TTree` and then typing a syntax error at the same time as reading the tree (i.e. using the name of the `TKey` to access it) triggers the `Must not nest within unloading transaction` assert and terminates `root.exe`. . ### Expected behavior; Interpreter recovers. . ### To Reproduce; #### Prepare a file; ```; $ root -l; root [0] TFile *file = new TFile(""foo.root"", ""RECREATE"");; root [1] TTree *foo = new TTree(""t"",""t"");; root [2] foo->Write(); root [3] file->Close(); root [4] .q; ```; Open the file and read the tree in conjunction with a syntax error:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(=); ROOT_prompt_1:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_1:1:11: error: expected expression; t->Print(=); ^; root.exe: /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/interpreter/cling/lib/Interpreter/Transaction.cpp:98: void cling::Transaction::addNestedTransaction(cling::Transaction*): Assertion `!m_Unloading && ""Must not nest within unloading transaction""' failed.; ```; ROOT terminates. . Note that when issuing a correct command first, the interpreter recovers fine:; ```; $ root -l foo.root ; root [0] ; Attaching file foo.root as _file0...; (TFile *) 0x55f9f7a3e860; root [1] t->Print(); .... correct output ...; root [2] t->Print(=); ROOT_prompt_2:1:10: error: expected expression; t->Print(=); ^; ROOT_prompt_2:1:11: error: expected expression; t->Print(=); ^; root [3]; ```. So the issue seems to happen when an object is not yet in memory, but implicitly read from disk by being accessed via the name of the `TKey`. . ### Setup; 1. ROOT version: 6.26/08; 2. Operating system: Gentoo Linux; 3. How you obtained ROOT: `emerge root` (i.e. via package manager).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11651:113,error,error,113,https://root.cern,https://github.com/root-project/root/issues/11651,8,"['error', 'recover']","['error', 'recovers']"
Availability,"- [x] Checked for duplicates. ### Describe the bug; ROOT 6.26/04 (https://github.com/root-project/root/tree/02b2af7af1be3430a3124236a7cdc6bb13cf90d2) fails to build with LLVM/Clang 14.0.6 with the following error from `rootcling`:. ```{Console}; [7221/9777] Generating G__Core.cxx, ../lib/Core.pcm; FAILED: core/G__Core.cxx lib/Core.pcm ...; <snip/>; rootcling_stage1: /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2799: unsigned int clang::ASTWriter::getSubmoduleID(clang::Module *): Assertion `(ID || !Mod) && ""asked for module ID for non-local, non-imported module""' failed.; #0 0x0000000003ee5514 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x0000000003ee32cc llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x0000000003ee5935 SignalHandler(int) Signals.cpp:0:0; #3 0x00007f1552225630 __restore_rt sigaction.c:0:0; #4 0x00007f1551316387 raise (/lib64/libc.so.6+0x36387); #5 0x00007f1551317a78 abort (/lib64/libc.so.6+0x37a78); #6 0x00007f155130f1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #7 0x00007f155130f252 (/lib64/libc.so.6+0x2f252); #8 0x0000000001d23bf3 clang::ASTWriter::WriteSubmodules(clang::Module*) ASTWriter.cpp:0:0; #9 0x0000000001d34a01 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*) ASTWriter.cpp:0:0; #10 0x0000000001d31700 clang::ASTWriter::WriteAST(clang::Sema&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) ASTWriter.cpp:0:0; #11 0x0000000001d7f347 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) GeneratePCH.cpp:0:0; #12 0x0000000001a4269c clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) MultiplexConsumer.cpp:0:0; #13 0x0000000001ba6284 clang::ParseAST(clang::Sema&, bool, bool) ParseAST.cpp:0:0; #14 0x00000000019f9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861:207,error,error,207,https://root.cern,https://github.com/root-project/root/issues/10861,1,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; ROOT sets `_HAS_CONDITIONAL_EXPLICIT=0` for MSVC's STL:; https://github.com/root-project/root/blob/2fc5e7a745ce898c80de820c624b4a4866756f74/interpreter/cling/lib/Interpreter/CIFactory.cpp#L811-L816. MSVC's STL (which I work on) has removed this codepath by merging https://github.com/microsoft/STL/pull/2796, which will ship in VS 2022 17.4 Preview 1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:482,error,error,482,https://root.cern,https://github.com/root-project/root/issues/10875,4,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; TChain doesn't recognise ROOT::VecOps::RVec<double> as a column type. ""Error in <TBranch::TLeaf>: Illegal data type for ..."". ### Expected behavior; I would expect TChain to recognize ROOT::VecOps::RVec<double>. ### To Reproduce; ```. bool flag = false;; struct vecMaker; {; 	std::vector<Double_t> operator()(); {; std::vector<Double_t> myVec{0,1,2,3,4,5};; return myVec;; }; };. ROOT::RDF::RNode ApplyDefines(ROOT::RDF::RNode df); {; 	if (flag); 	{; 		return df.Define(""y"", [](){ return gRandom->Rndm(); });; 	}; flag = true;; 	return ApplyDefines(df.Define(""RVecColumn"", vecMaker()));; }. void clipboard(); {; ROOT::EnableImplicitMT();; //first part of the ; auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };; auto vGen = [&](int len); {; ROOT::VecOps::RVec<Double_t> v(len);; std::transform(v.begin(), v.end(), v.begin(), unifGen);; return v;; };. ROOT::RDataFrame d(1024);; auto outDF = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }); .Define(""x"", vGen, {""len""});. //ApplyDefines forces RDataFrame to save a column as a ROOT::VecOps::RVec<double>; 	auto myNewDF = ApplyDefines(outDF);; myNewDF.Snapshot(""myDF"", ""mydf.root"");. 	TChain dEChain(""myDF"");; 	dEChain.Add(""mydf.root"");. 	ROOT::RDataFrame dEDF(dEChain);; 	dEDF.Snapshot(""analyzed"", ""newdf.root"");; }; ```. ### Setup; 1. ROOT version: 6.26/00; 2. Operating system: Ubuntu 20.04; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: built from source. ### Additional context; In the reproducer code, I forced RDataFrame to save a column as a ""ROOT::VecOps::RVec<double>"". This is a solution I am actually using in my code: https://root-forum.cern.ch/t/passing-arguments-to-function-called-by-define-in-rdataframe/42208/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10225:123,Error,Error,123,https://root.cern,https://github.com/root-project/root/issues/10225,2,"['Error', 'down']","['Error', 'download']"
Availability,- [x] Checked for duplicates. ### Describe the bug; The ROOT doxygen tag files posted in https://root.cern/reference/ contain full hard coded paths to `/home/sftnight/...` that are not available from outside users. ### Expected behavior; No hard-coded paths are shown there. ### To Reproduce; - Download the ROOT.tag from the link above; - grep sftnight ROOT.tag. Maybe playing with STRIP_FROM_PATH in the Doxyfile could solve this. ### Additional context; https://github.com/doxygen/doxygen/issues/9185,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10059:185,avail,available,185,https://root.cern,https://github.com/root-project/root/issues/10059,2,"['Down', 'avail']","['Download', 'available']"
Availability,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10759:171,error,errors,171,https://root.cern,https://github.com/root-project/root/issues/10759,2,"['down', 'error']","['download', 'errors']"
Availability,"- [x] Checked for duplicates. ### Describe the bug; There seem to be further XML errors when building the documentation. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/parsed_console/. I wonder if the issue is coming from this hard-coded `maxbuf` size:; https://github.com/root-project/root/master/xmlerr/io/xml/src/TXMLEngine.cxx#L1354. ### Expected behavior; - If that's the case, revert https://github.com/root-project/root/pull/10490 https://github.com/root-project/root/pull/10483 and change instead `maxbuf` size, increasing it sufficiently.; - If not, disable the still failing notebook so that jenkins build finishes correctly.; - In either case, it would be nice if `TXMLEngine::DisplayError` supports a third argument, namely the name of the file being parsed, so that it is printed together with the error. Right now, it is difficult to know which notebook is causing the issue, as the ""cout"" is messed up.; ; ![image](https://user-images.githubusercontent.com/10653970/166109520-34e0adf5-27c5-44f2-9fef-f325bf9434f4.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10497:81,error,errors,81,https://root.cern,https://github.com/root-project/root/issues/10497,2,['error'],"['error', 'errors']"
Availability,"- [x] Checked for duplicates. ### Describe the bug; Using pyRoot, preparing a selection string to use in TTree.GetEntries(const string * selection), it seems that a string of the type: `_value1_ <= _variable_ <= _value2_""`. should be working but insteads it returns an error: `TTreeFormula bad expression ""=_value2_""`. when other operators work just fine (no error), e.g.:. - `_value1_ < _variable_ < _value2_""`; - `_value1_ <= _variable_ < _value2_""`; - etc. I have tried with and without parentheses around the conditions. The only working solution (for now) to write: `_value1_ <= _variable_ && _variable_ <= _value2_""`. but this sensibly slows the code. ### Expected behavior; Using `_value1_ <= _variable_ <= _value2_""` should not return an error when trying to limit a variable to a closed interval, in the same way it works when limiting a variable to an open interval. ### To Reproduce; Steps to reproduce the behavior:; 1. The code that can reproduce the issue is the following:; ```; import itertools; import numpy as np; import ROOT as rt; paramList = { 'Variable_1' : np.linspace(0,1,4),; 'Variable_2' : np.linspace(0,3,5) }. boundaries = list(itertools.product(*[itertools.combinations(val,2) for val in paramList.values()])); for val in boundaries:; string = 'dmID_signal == <whatever ID for final particle>'; for bounds, key in enumerate(paramList.keys()):; string += "" && ({} <= {} <= {})"".format(val[bounds][0], key, key, val[bounds][1]); signal = sigData.GetEntries(string); ```. 2. I cannot really join a .root file here, but it is just a matter of changing _Variable_1_ and _Variable_2_ of _paramList_ for 2 variables of a TTree. Also, I start the selection string with a selection of dmID but that can be removed, you just need to modify the string so that it doesn't start with _&&_. 3. To run the code, write it in a python file or jupyter notebook and run it using Python 3. ### Setup; 1. JupyROOT 6.22/08; 2. Linux Mint 19.3 Cinnamon; 3. Installed Root using conda. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7986:269,error,error,269,https://root.cern,https://github.com/root-project/root/issues/7986,3,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; We are [testing](https://github.com/cms-sw/cmsdist/pull/8020) latest [ROOT changes](https://github.com/root-project/root/compare/cd992545ae...6018b5fd45) in CMSSW, and we are getting the following build error:; ```; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:3,; from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:1:; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h: In instantiation of 'constexpr std::pair::type>::__type, typename std::__strip_reference_wrapper::type>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::shared_ptr; _T2 = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11188:255,error,error,255,https://root.cern,https://github.com/root-project/root/issues/11188,1,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; When building CMS offline software stack with the ROOT commit 6f02c75fea, we get the following errors:; ```; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.29.01-8b1fb99c2f98c5fc80c3d3abd70c9452/etc/cling/std.modulemap:497:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" {; ^; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include // uninitialized_construct_using_alloc; ^; ```. ```; python3: /(...)/lcg/root/6.29.01-8b1fb99c2f98c5fc80c3d3abd70c9452/root-6.29.01/interpreter/llvm/src/tools/clang/lib/AST/DeclCXX.cpp:1499: clang::NamedDecl* getLambdaCallOperatorHelper(const clang::CXXRecordDecl&): Assertion `!Calls.empty() && ""Missing lambda call operator!""' failed.; *** Break *** abort; ```. We have previously tested ROOT commit 0bd51969ce, and did not get these errors. ### Expected behavior; No build errors. ### Setup; ROOT 6.29.01 / 6f02c75fea on AlmaLinux 8, built from source (gcc 11.2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12240:147,error,errors,147,https://root.cern,https://github.com/root-project/root/issues/12240,4,['error'],"['error', 'errors']"
Availability,"- [x] Checked for duplicates. ### Describe the bug; When importing NumPy in Python 3.11.2 after ROOT has been imported, a segmentation error is returned. ; ![image](https://github.com/root-project/root/assets/25668305/47651cbe-5113-410f-844c-17fd97ce4f03). There are no problems when importing numpy before importing ROOT:; ![image](https://github.com/root-project/root/assets/25668305/6d0baf18-2ada-4f94-91bd-c000c4bebdc7). ### To Reproduce; Steps to reproduce the behavior:; 1. Run the following code in Python 3.11.2; `import ROOT`; `import numpy`. ### Setup; 1. ROOT version: 6.29/01 ; 2. Operating system: Ubuntu 23.04, Python 3.11.2 ; 3. How you obtained ROOT: Build from source, pulled from the github today",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12874:135,error,error,135,https://root.cern,https://github.com/root-project/root/issues/12874,1,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; When root fails to load the dictionary payload it used to give a clear message that a header file couldn't be included.; ```; In file included from G__DDG4 dictionary payload:445:; In file included from /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4Config.h:100:; /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4TrackingAction.h:18:10: fatal error: 'G4VUserTrackInformation.hh' file not found; #include ""G4VUserTrackInformation.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:472,error,error,472,https://root.cern,https://github.com/root-project/root/issues/6791,7,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates. ### Describe the bug; When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior; This error should not appear as it points to wrong memory handling. ### To Reproduce; A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository; 2. run ""make""; 3. run the code with ./example . ### Setup; 1. Tested with ROOT 6.22.02 and 6.22.06; 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06); 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context; The error does not appear if the minimizer is called only once.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8946:239,error,error,239,https://root.cern,https://github.com/root-project/root/issues/8946,3,['error'],['error']
Availability,"- [x] Checked for duplicates. ### Describe the bug; Windows running on non utf-8 code page will see scramble text for non-ascii folders and files in the current new html `TBrowser` implementation, and fails selection and opening. Older `TRootBrowser` did not have this issue but does not support 64 bit on windows. ### Expected behavior; TBrowser can see files and folders, select files and folders normally. ### To Reproduce; Used non-ascii windows system (should already have some non-ascii text in filesystem already), install root. ### Setup; 1. ROOT version: 6.26/06; 2. Operating system: Windows; 3. How you obtained ROOT binary: download from cern site. ### Additional context; Should be self explanatory. ### Suggested fix:; A post-build step should fix this on newer windows systems, as this documentation says:; https://learn.microsoft.com/en-us/windows/apps/design/globalizing/use-utf8-code-page. Tested and works on my machine. Related forum topic:; https://root-forum.cern.ch/t/tbrowser-non-ascii-text-scrambles-on-windows/51899",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11519:636,down,download,636,https://root.cern,https://github.com/root-project/root/issues/11519,1,['down'],['download']
Availability,"- [x] Checked for duplicates. ### Describe the bug; ```; [ 1675s] [100%] Generating tutorials/hsimple.root; [ 1675s] cd /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/tutorials && LD_LIBRARY_PATH=/home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/bin/root.exe -l -q -b -n -x hsimple.C -e return; [ 1675s] ; [ 1675s] Processing hsimple.C...; [ 1675s] root.exe: /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/llvm/src/include/llvm/IR/User.h:216: void llvm::User::setNumHungOffUseOperands(unsigned int): Assertion `HasHungOffUses && ""Must have hung off uses to use this method""' failed.; ```. The `HasHungOffUses` member is initialized in the overloaded `clang::User::operator new`, which may trigger undefined behavior. See e.g.:. https://github.com/llvm/llvm-project/issues/47560; https://stackoverflow.com/questions/34892732/error-when-call-createphi-in-llvm. ### Expected behavior; Builtin libLLVM works correctly. Though this is an LLVM upstream issue, either force-disabling LTO, or adding a CMake option to pass this down to the LLVM build (similar to `LLVM_BUILD_TYPE`) might be an option. ### To Reproduce; CXXFLAGS=... -O2 -flto=auto; cmake -B _builddir -S .. && make. ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Tumbleweed; 3. build from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11135:922,error,error-when-call-createphi-in-llvm,922,https://root.cern,https://github.com/root-project/root/issues/11135,2,"['down', 'error']","['down', 'error-when-call-createphi-in-llvm']"
Availability,"- [x] Checked for duplicates. First reported as a problem in `RDataFrame.AsNumpy` [on the forum](https://root-forum.cern.ch/t/pyroot-read-tree-asnumpy/48426). The following code:. ```python; #!/usr/bin/env python3; import ROOT. vec = ROOT.std.vector['char'](['a','b','c']); for _ in vec:; pass; ```. produces:. ```; TypeError: function takes exactly 5 arguments (1 given). The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""/home/blue/Scratchpad/work/forum-pyroot-error/reproducer.py"", line 5, in <module>; for _ in vec:; SystemError: <cppyy.CPPOverload object at 0x7f0b0348c1c0> returned a result with an exception set; ```. Notably, _sometimes_ it seems to run without errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9632:525,error,error,525,https://root.cern,https://github.com/root-project/root/issues/9632,2,['error'],"['error', 'errors']"
Availability,"- [x] Checked for duplicates. When using clang trunk to build ROOT (main branch), it fails due to `case value is not a constant expression`. ```; ❯ clang --version; clang version 16.0.0 (https://github.com/llvm/llvm-project/ dde41c6c560b67165c7ac884815cd50fdce446f8); Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: /home/jun/opt/clang/bin; ```. cmake commands:; ```; cmake -DCMAKE_BUILD_TYPE=Debug \; -DCMAKE_EXPORT_COMPILE_COMMANDS=YES \; -DCMAKE_C_COMPILER=clang \; -DCMAKE_CXX_COMPILER=clang++ \; -DCMAKE_EXE_LINKER_FLAGS=""-fuse-ld=lld"" \; -GNinja .. ```; System info:; I have tried Ubuntu 22 and WSL (Ubuntu 20) and got the same results. Error message:; ```; FAILED: io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o ; /home/jun/opt/clang/bin/clang++ -I/home/jun/dev/root/io/io/inc -I/home/jun/dev/root/core/unix/inc -I/home/jun/dev/root/core/foundation/v7/inc -I/home/jun/dev/root/core/base/v7/inc -I/home/jun/dev/root/core/clingutils/inc -I/home/jun/dev/root/core/textinput/inc -I/home/jun/dev/root/core/thread/inc -I/home/jun/dev/root/core/zip/inc -I/home/jun/dev/root/core/rint/inc -I/home/jun/dev/root/core/clib/inc -I/home/jun/dev/root/core/meta/inc -I/home/jun/dev/root/core/gui/inc -I/home/jun/dev/root/core/cont/inc -I/home/jun/dev/root/core/foundation/inc -I/home/jun/dev/root/core/base/inc -I/home/jun/dev/root/Build/ginclude -I/home/jun/dev/root/core/clib/res -I/home/jun/dev/root/builtins -fcolor-diagnostics -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -fPIC -std=c++14 -MD -MT io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:664,Error,Error,664,https://root.cern,https://github.com/root-project/root/issues/11128,1,['Error'],['Error']
Availability,"- [x] Checked for duplicates. ```; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h: In member function 'llvm::Error cling::IncrementalJIT::RemovableObjectLinkingLayer::removeObject(llvm::orc::VModuleKey)':; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:118:49: error: 'std::map<long unsigned int, std::unique_ptr<llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject> > llvm::orc::LegacyRTDyldObjectLinkingLayer::LinkedObjects' is private within this context; [ 82s] = static_cast<const AccessSymbolTable*>(LinkedObjects[K].get());; [ 82s] ^~~~~~~~~~~~~; [ 82s] In file included from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:22:0,; [ 82s] from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:12:; [ 82s] /usr/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:475:55: note: declared private here; [ 82s] std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; [ 82s] ^~~~~~~~~~~~~; [ 82s] make[2]: *** [interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/build.make:125: interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/BackendPasses.cpp.o] Error 1; ```; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/cling/lib/Interpreter/IncrementalJIT.h#L111-L112. Patched version in ROOT:; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L473-L476. Upstream (LLVM 9.x):; https://github.com/llvm/llvm-project/blob/c1a0a213378a458fbea1a5c77b315c7dce08fd05/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L465; ```; private:; ExecutionSession &ES;. ResourcesGetter GetResources;; NotifyLoadedFtor NotifyLoaded;; NotifyFinalizedFtor NotifyFinalized;; NotifyFreedFtor Not",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11146:161,Error,Error,161,https://root.cern,https://github.com/root-project/root/issues/11146,2,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates: No duplicated found. Issue also reported here:; https://root-forum.cern.ch/t/importing-and-visualizing-gdml-with-tessellated-solids/40903. ### Describe the bug; Exporting a GDML file from GEANT4 (10.5) containing a tessellated object. This tessellated object is defined via vertex1 vertex2 vertex3, but does not add the ""type"" (absolute/relative) attribute if its in absolute coordinates (not 100% percent sure about this).; Loading this *.gdml file which contains a tessellated object results in a problem since the `AddTriangularFacet(bool relative)`; is not called due to the missing ""type"" statement in the if-else statement from TGDMLParse::Tessellated(4247) resulting in invalid boxed (dX/dY/dZ < 0):. ```; Error in <TGeoVolume::SortNodes>: Bounding box not valid; Error in <TGeoVolume::Voxelize>: Bounding box not valid; Error in <TGeoVolume::FindOverlaps>: Bounding box not valid; ```. and a following crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fb46acdc46c in waitpid () from /lib64/libc.so.6; #1 0x00007fb46ac59f62 in do_system () from /lib64/libc.so.6; #2 0x00007fb46f5e9524 in TUnixSystem::StackTrace() () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libCore.so; #3 0x00007fb46f5eb1ba in TUnixSystem::DispatchSignals(ESignals) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libCore.so; #4 <signal handler called>; #5 0x00007fb46db2607d in TViewer3DPad::AddObject(TBuffer3D const&, bool*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGpad.so; #6 0x00007fb451224035 in TGeoPainter::PaintShape(TGeoShape const&, char const*) const () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #7 0x00007fb4512261ad in TGeoPainter::PaintVolume(TGeoVolume*, char const*, TGeoMatrix*) () from /nf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6868:743,Error,Error,743,https://root.cern,https://github.com/root-project/root/issues/6868,3,['Error'],['Error']
Availability,"- [x] Checked for duplicates: seems to be similar to #10522 but this is unrelated to complex numbers. ### Describe the bug. Trying to declare a `std::vector<const char*>` from python fails in ROOT 6.26 (also tested in master) with:; ```; In [1]: import ROOT. In [2]: ROOT.gROOT.GetVersion(); Out[2]: '6.26/00'. In [3]: ROOT.gInterpreter.Declare('std::vector<const char*> test = {""hello""};'); Out[3]: True. In [4]: ROOT.test; Error pythonizing class std::vector<const char*>:; Traceback (most recent call last):; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke ; user_pythonizor(klass, fqn); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector ; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<const char*> at 0x78c6370> has no attribute 'value_type'. Full details:; type object 'vector<const char*>' has no attribute 'value_type'; 'std::vector<const char*>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-9dea63bfe1b1> in <module>; ----> 1 ROOT.test. /cvmfs/sft.cern.ch/lcg/views/LCG_102rc1/x86_64-centos7-gcc11-opt/lib/ROOT/_facade.py in _fallback_getattr(self, name); 193 if res:; 194 return res; --> 195 raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); 196; 197 def _finalSetup(self):. AttributeError: Failed to get attribute test from ROOT; ```. Creating the object directly from python does not work either:; ```; In [5]: t = ROOT.std.vector[""const char*""]([""hello""]); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-5-fac447a0dff2> in <module>; ----> 1 t = ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11581:425,Error,Error,425,https://root.cern,https://github.com/root-project/root/issues/11581,1,['Error'],['Error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. As reported at https://github.com/cms-sw/cmsdist/pull/6314#issuecomment-708839758; we now are getting error:; ```; An exception of category 'FatalRootError' occurred while; [0] Constructing the EventProcessor; [1] Constructing module: class=L2MuonProducer label='hltL2Muons'; Additional Info:; [a] Fatal Root Error: @SUB=TProtoClass::FindDataMember; data member with index 0 is not found in class tbb::internal::atomic_impl<unsigned long>; ```; due to some inconsistencies. ### Expected behavior; No error. ### To Reproduce; ```; scram p CMSSW_11_2_ROOT622_X_2020-10-15-1100; cd CMSSW_11_2_ROOT622_X_2020-10-15-1100/; cmsenv; runTheMatrix.py -l 11634.0; cd 11634.0_*; gdb --args cmsRun step2_DIGI_L1_DIGI2RAW_HLT.py; ```. ### Setup; ""the changes we are testing are root-project/root@d6156de...e4cd9d3 "". ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6666:485,error,error,485,https://root.cern,https://github.com/root-project/root/issues/6666,3,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. ROOT installed from the binary distribtution for Ubuntu 22 is broken and can't start, at least for 6.26.08 and 6.26.10 (N.B. this is using WSL2). ### Expected behavior. `root` should start normally. ### To Reproduce. - Install dependencies via `apt`; - N.B. `python` and `python-dev` do not exist on Ubuntu22; use `python3` and `python-is-python3` instead; likewise `libglew1.5-dev` should now be `libglew-dev`; - Download and unpack `root_v6.26.10.Linux-ubuntu22-x86_64-gcc11.3.tar.gz` in `/opt`; - `cd /opt/root; source bin/thisroot.sh`; - Then I get the following:. ```; ➜ which root; /opt/root/bin/root; ➜ root; input_line_1:1:2: fatal error: module file '/home/sftnight/build/ws/BUILDTYPE/Release/LABEL/ROOT-ubuntu2204/V/6-26/build/lib/libc.pcm' not found: module file not found; #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/opt/root/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; Module libc not found.; Failed to load module std; <<< cling interactive line includer >>>: fatal error: module file '/home/sftnight/build/ws/BUILDTYPE/Release/LABEL/ROOT-ubuntu2204/V/6-26/build/lib/libc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module '_Builtin_intrinsics' in '/opt/root/lib/_Builtin_intrinsics.pcm'; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:797,Down,Download,797,https://root.cern,https://github.com/root-project/root/issues/11901,1,['Down'],['Download']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```; TGeoManager::Import(""mother.gdml"");; ```. `mother.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define />; <solids>; <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />; </solids>; <structure>; <volume name=""world"">; <physvol>; <file name=""child.gdml"" />; </physvol>; <materialref ref=""world_material"" />; <solidref ref=""world_solid"" />; </volume>; </structure>; <setup name=""Default"" version=""1.0"">; <world ref=""world"" />; </setup>; </gdml>; ```. `child.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""; xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define>; <position name=""cube_v0"" unit=""mm"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9744:485,error,error-with-define,485,https://root.cern,https://github.com/root-project/root/issues/9744,1,['error'],['error-with-define']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. Trying to compile root 6.24r1 with binutils 2.36 or later fails if `builtin_afterImage=ON` with the following error. ```; CMake Error at .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make'. See also. .../root/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; ```. The mentioned logfiles show. ```; ar: libdeps specified more than once; make[5]: *** [libAfterImage.a] Error 1; ```. This is caused by a change to `ar` in [binutils 2.36](https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=blob_plain;f=binutils/NEWS;hb=refs/tags/binutils-2_36) so that the ""previously unused modifier l"" now has a meaning. . The fix is quite simple, one can just replace `ar clq` in the AfterImage Makefile with `ar cq`, see for example a similar problem in tightvnc: https://www.mail-archive.com/debian-bugs-dist@lists.debian.org/msg1789948.html. ### Expected behavior. Expected behavior is to compile successfully . ### To Reproduce. You need a system with binutils 2.36 installed (can be easily installed in a local prefix). ### Setup. * Ubuntu 18.04, ; * GCC 10.2,; * ROOT 6.24rc1 from https://github.com/root-project/root/archive/v6-24-00-rc1.tar.gz; * Compilation using `-Dasimage=ON -Dbuiltin_afterimage=ON`. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7558:493,error,error,493,https://root.cern,https://github.com/root-project/root/issues/7558,3,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to read and write a ROOT file via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:; ```; root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""); Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot ; Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18); Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data.; (TFile *) nullptr; ```; Leaving behind only a file with size 0. ### Expected behavior; I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - MinIO s3 object storage. - `~/.rootrc` file:; ```; Davix.Debug: 2; Davix.GSI.CACheck: y; Davix.GSI.CAdir: /etc/ssl/certs; Davix.S3.Alternate: y; ```; - and then interactively:; ```; $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.24/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |; | From tag , 1 September 2021 |; | With |; | Try '.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9584:737,Error,Error,737,https://root.cern,https://github.com/root-project/root/issues/9584,2,['Error'],['Error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. While hunting for some other problem using address sanitizer our unit tests ran into a heap-buffer-overflow in `TSpline2`:. ```; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1me left: 0 sec) ; Warning in <TH1::TH1>: nbins is <=0 - set to nbins = 1; =================================================================; ==903254==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020001549e0 at pc 0x7f530c576a66 bp 0x7ffc17738f20 sp 0x7ffc17738f18; READ of size 8 at 0x6020001549e0 thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8021:717,ERROR,ERROR,717,https://root.cern,https://github.com/root-project/root/issues/8021,1,['ERROR'],['ERROR']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. While running an application a following errors appears, which I can hardly link back to my code:; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549; 549 if (!fRealDataClass->InheritsFrom(cl)) {; (gdb) bt; #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", ; add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549; #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082; #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866; #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719; #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", ; add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620; #5 0x00007fffefba86af in TBranchElement::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:424,error,errors,424,https://root.cern,https://github.com/root-project/root/issues/9564,2,"['error', 'fault']","['errors', 'fault']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755:952,down,download,952,https://root.cern,https://github.com/root-project/root/issues/12755,1,['down'],['download']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Build master with `builtin_llvm=OFF` using system LLVM. CMake configuration fails with:. ```; -- Using LLVM external library - 13.0.1; -- Clang version: 13.0.1; -- Could NOT find Git (missing: GIT_EXECUTABLE) ; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/12:/usr/include/x86_64-linux-gnu/c++/12:/usr/include/c++/12/backward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:955,Error,Error,955,https://root.cern,https://github.com/root-project/root/issues/12151,1,['Error'],['Error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building git master with #12154 on top results in the following build error:. ```; FAILED: core/G__Core.cxx lib/Core.pcm /home/stephan/Projects/ROOT/builddir/core/G__Core.cxx /home/stephan/Projects/ROOT/builddir/lib/Core.pcm ; cd /home/stephan/Projects/ROOT/builddir/core && /usr/bin/cmake -E env LD_LIBRARY_PATH=/home/stephan/Projects/ROOT/builddir/lib: /home/stephan/Projects/ROOT/builddir/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__Core.cxx -cxxmodule -s /home/stephan/Projects/ROOT/builddir/lib/libCore.so -excludePath /home/stephan/Projects/ROOT -excludePath /home/stephan/Projects/ROOT/builddir/ginclude -excludePath /home/stephan/Projects/ROOT/builddir/externals -excludePath /home/stephan/Projects/ROOT/builddir/builtins -writeEmptyRootPCM -m _Builtin_intrinsics -mByproduct _Builtin_intrinsics -mByproduct ROOT_Foundation_Stage1_NoRTTI -mByproduct ROOT_Foundation_C -mByproduct ROOT_Rtypes -D__STDC_NO_COMPLEX__ -D__COMPLEX_H__ -D_COMPLEX_H -D__CLANG_STDATOMIC_H -compilerI/usr/include/c++/12 -compilerI/usr/include/x86_64-linux-gnu/c++/12 -compilerI/usr/include/c++/12/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/12/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/12/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/include -I/home/stephan/Projects/ROOT/builddir/include -I/usr/include -I/home/stephan/Projects/ROOT/builddir/ginclude -I/home/stephan/Projects/ROOT/core/base/inc -I/home/stephan/Projects/ROOT/core/base/v7/inc -I/home/stephan/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156:528,error,error,528,https://root.cern,https://github.com/root-project/root/issues/12156,1,['error'],['error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Building master (+ fix for #12151) with `builtin_llvm=OFF` results in this build error:. ```; [5940/8663] /usr/lib/ccache/c++ -I""/<<PKGBUILDDIR>>/core/dictgen/res"" -I""/<<PKGBUILDDIR>>/core/dictgen/src"" -I""/<<PKGBUILDDIR>>/core/foundation/res"" -I""/<<PKGBUILDDIR>>/core/clingutils/res"" -I""/<<PKGBUILDDIR>>/core/base/inc"" -I""/<<PKGBUILDDIR>>/core/clib/inc"" -I""/<<PKGBUILDDIR>>/core/meta/inc"" -I""/<<PKGBUILDDIR>>/core/foundation/inc"" -I""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/ginclude"" -I""/<<PKGBUILDDIR>>/interpreter/cling/include"" -isystem ""/<<PKGBUILDDIR>>/interpreter/llvm/src/tools/clang/include"" -isystem ""/<<PKGBUILDDIR>>/obj-x86_64-linux-gnu/interpreter/llvm/src/tools/clang/include"" -isystem /usr/lib/llvm-13/include -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fPIC -fvisibility-inlines-hidden -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -std=c++17 -fno-rtti -MD -MT core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o -MF core/dictgen/CMakeFiles/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:539,error,error,539,https://root.cern,https://github.com/root-project/root/issues/12152,1,['error'],['error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Creating a distributed RDataFrame with an in-memory-only TTree should not be possible. Currently, this case is untested and the following reproducer triggers a couple of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7788:637,error,errors,637,https://root.cern,https://github.com/root-project/root/issues/7788,1,['error'],['errors']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I currently cannot build the master branch due to the fact that the hardcoded SHA256 checksum in /builtins/xrootd/CMakeLists.txt is not the same checksum as the one obtained when downloading the file. There is a mismatch. There is a check that makes the build fail in this case. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The checksum in /builtins/xrootd/CMakeLists.txt is the same as the one obtained from the actually downloaded file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; git clone https://github.com/root-project/root.git; mkdir build; cd build; cmake ../root/ -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON -DCMAKE_IGNORE_PATH=""/home/zef/miniconda3/bin;/home/zef/miniconda3/include;/home/zef/miniconda3/lib"" -Dccache=ON -DPYTHON_EXECUTABLE=""/usr/bin/python3"" -Dbuiltin_fftw3=On; ```. Note that the checksum obtained by `sha256sum xrootd-5.4.2.tar.gz` is: 2b394270c55cb3d14f3c44b692311db99d2d25278882b513d4d564b68a58ed4a. The checksum hardcoded in the CMAKE file is: 84e8a9a2bcad116df479f94e985c287dd99fbac0613d4fbb61f4ccc0cef81fa3. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version: master branch as of now; Opera",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10503:637,down,downloading,637,https://root.cern,https://github.com/root-project/root/issues/10503,2,['down'],"['downloaded', 'downloading']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. In ROOT 6.29 (dev3 LCG nightly slot on cvmfs) RooMomentMorphND cause segmentation fault. . (there is no fault e.g. for ROOT 6.26/04 ( LCG_102 LCG slot on cvmfs); ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. No segmentation faults... . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. My oversimplified script in https://gist.github.com/VanyaBelyaev/2373dae80b24b74d75026420efde8043 . Usage on cvmsf, LCG dev3 nightly slot (ROOT 6.29/01) : . ( source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/${CMTCONFIG}/setup.sh ; python ./tst_morph.py ) . one gets segfaultt . while for LCG_102 slot on cevmfs (ROOT 6.26/04) everything is OK :. ( source /cvmfs/sft.cern.ch/lcg/views/LCG_102/${CMTCONFIG}/setup.sh ; python ./tst_morph.py ) . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. - ROOT 6.29/01; - lxplus @ CERN; - LCG dev3 nightly slot ; ; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12155:540,fault,fault,540,https://root.cern,https://github.com/root-project/root/issues/12155,4,"['down', 'fault']","['download', 'fault', 'faults']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. My PyROOT scripts uses `RooMomentMorphND` and I am using LCG dev3 nightly build ( ROOT version 6.29/01); Staring this morning it fails to get RooMomentMorphND, reporting . ```. AttributeError: Failed to get attribute RooMomentMorphND from ROOT. ```; . ### Expected behavior. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. LCG dev3 nightly slot at cvmfs . ```; import ROOT ; print ( ROOT.RooMomentMorphND); ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. LCG dev3 nightly slot at cvmfs ( ROOT version 6.29/01). <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12653:1349,down,download,1349,https://root.cern,https://github.com/root-project/root/issues/12653,1,['down'],['download']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I am getting this error when I try to make a cmake project with ROOT:; ```; C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and containe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:476,error,error,476,https://root.cern,https://github.com/root-project/root/issues/7982,2,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; If you pass a dictionary to the `Link` argument in the `RooDataSet` constructor, the pythonization actually tries to call `RooFit::Import`, then fails because `RooFit::Import` has a slightly different signature (`Import` takes a map from to string to either `TH1*`, `RooDataSet*` or `RooDataHist*`, `Link` takes a map from string to `RooAbsData*`). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The pythonization calls the correct `RooCmdArg`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.2)). data = g.generate({x}, NumEvents = 1000). data_2 = ROOT.RooDataSet('dataLinked', {x}, Link = {'useless': data}); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11496:1616,down,download,1616,https://root.cern,https://github.com/root-project/root/issues/11496,1,['down'],['download']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In RooStats::HypoTestInverterResult::FindIndex( x ), if x == 1 then the return value is always -1 rather than the index of that xvalue. The problem is on L571-573 (in current master) of HypoTestInverterResult.cxx where the following if statement is used:; <pre>; if ( (std::abs(xvalue) > 1 && TMath::AreEqualRel( xvalue, xpoint, tol) ) ||; (std::abs(xvalue) < 1 && TMath::AreEqualAbs( xvalue, xpoint, tol) ) ); return i; ; </pre>. Please change the first piece of one of these two statements to include xvalue==1 (i.e. from &gt; to &ge; or &lt; to &le;). I don't think it matters which is changed. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; FindIndex should return the index of requested xvalue in the internal results array. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; I am using ROOT 6.22/00 from LCG_98python3 but this is still in issue in the master branch (per online documentation). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8641:1635,down,download,1635,https://root.cern,https://github.com/root-project/root/issues/8641,1,['down'],['download']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; In TColor::GetColorTransparent() (see https://root.cern.ch/doc/master/classTColor.html#ae666674d7087b2b709abebde22667c50); a new color is defined each time a transparent color (with alpha channel) is requested. In graphics applications with many transparent objects this leads quickly to exhausting the available index space of colors. At some point the int returned turns negative and the colors displayed are not what they should be. . There does not seem to be a way to reset the entire color space in use by ROOT to simply start over. This would not fix the underlying problem but would at least provide a workaround. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected behavior is that transparent colors are re-used like any other color and no new color index is needed when requesting an already used transparent color again. ; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; type ; TColor::GetColorTransparent(1,0.1); repeatedly on the commandline in ROOT. Each time the function is called a higher integer is returned even though the same transparent color is wanted. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: 6.24/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10299:761,avail,available,761,https://root.cern,https://github.com/root-project/root/issues/10299,1,['avail'],['available']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; It seems that to sample a N-dimensional vector, we need to call this method N times. See log file:; ```; for (int j = 0; j < 20000; j++) {; hzmodel.Sample(&flux_real[0]);; if(j<10); std::cout<<j<<"" ""<<flux_real[0]<<"" ""<<flux_real[1]<<"" ""<<flux_real[2]<<std::endl;; ```; output. ```; 1 5.73992 4.99711 4.88; 2 5.73992 4.99711 5.26624; 3 5.72944 4.99459 5.25179; 4 5.34123 4.99459 5.25179; 5 5.34123 4.96792 5.25179; 6 5.34123 4.96792 5.2696; 7 5.26477 4.99232 5.52042; 8 5.59451 4.99232 5.52042; 9 5.59451 5.04631 5.52042; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; By calling `SampleMulti`, all components should be randomized. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; try [ROOT tutorial](https://root.cern/doc/master/unuranDemo_8C.html). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; tested on ; ubuntu 20.04 + ROOT v6.26.00 (wget); ubuntu 20.04 + ROOT v6.24.06 (wget); MacOS 10.15 + ROOT v6.26.00 (brew). ### Additional context; <!--; Add any other context about the problem here.; -->; N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10222:1612,down,download,1612,https://root.cern,https://github.com/root-project/root/issues/10222,1,['down'],['download']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; PyROOT is not able correctly resolve an `enum` when it is aliased in a struct. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Giving a different name to the `enum` should not cause PyROOT to fail to correctly resolve it. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; Python 3.9.6 (default, Sep 6 2021, 15:36:22) ; [GCC 11.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> gROOT = ROOT.gROOT; >>> gROOT.ProcessLine('enum Enum { a,b,c }'); 0; >>> ROOT.Enum; <class 'ROOT._facade.Enum'>; >>> ROOT.Enum.a; 0; >>> ROOT.Enum.b; 1; >>>> gROOT.ProcessLine('struct Track { using Type = Enum; }'); 0; >>> ROOT.Track.Type.a; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: type object 'int' has no attribute 'a'; >>> ROOT.Enum.a; 0; >>> ; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.24.06 from LCG101 on CentOS7 . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9246:1702,down,download,1702,https://root.cern,https://github.com/root-project/root/issues/9246,1,['down'],['download']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:1033,error,error,1033,https://root.cern,https://github.com/root-project/root/issues/10777,1,['error'],['error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Running `ROOT::GetImplicitMTPoolSize()` gives the error message; `ROOT_prompt_12:1:7: error: no member named 'GetImplicitMTPoolSize' in namespace 'ROOT'`.; Running `ROOT::GetThreadPoolSize()` instead works and gives the correct number of threads with MT enabled. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; In the source [`ROOT::GetImplicitMTPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L580) is defined just below [`ROOT::GetThreadPoolSize()`](https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L565) so both should exist and give the same result since the former calls the later internally. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Start an interactive session of ROOT.; Run `ROOT::GetImplicitMTPoolSize()`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Error reproduced in ROOT 6.26/00 (fedora 35, installed with dnf) and 6.24/07 (lxplus cc7, gcc10, via /cvmfs).; No error in version 6.20/07. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10413:508,error,error,508,https://root.cern,https://github.com/root-project/root/issues/10413,5,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L55",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7861:609,error,errors,609,https://root.cern,https://github.com/root-project/root/issues/7861,1,['error'],['errors']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The compilation fails with the following error:; ```; Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap; In file included from input_line_9:58:; In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:; C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence; this issue; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; static_cast<unsigned long>( ); CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9468:499,error,error,499,https://root.cern,https://github.com/root-project/root/issues/9468,2,['error'],['error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The exception occurs with `pytest` running the test code:; ```python; ============================================================================ FAILURES =============================================================================; _______________________________________________________________ test_data_frame_vec_of_vec_of_real ________________________________________________________________; RuntimeWarning: awkward::ListArray_63uTHafmYE: base class awkward::ArrayView has no streamer or dictionary it will not be saved. The above exception was the direct cause of the following exception:. tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). def test_data_frame_vec_of_vec_of_real(tmp_path):; filename = os.path.join(tmp_path, ""test-listarray.root""); ; ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); ; data_frame = ak.to_rdataframe({""x"": ak_array_in}); ; assert data_frame.GetColumnType(""x"").startswith(""awkward::ListArray_""); ; ak_array_out = ak.from_rdataframe(; data_frame,; columns=(""x"",),; ); assert ak_array_in.to_list() == ak_array_out[""x""].to_list(); ; #with pytest.raises(SystemError):; > data_frame.Snapshot(""ListArray"", filename, (""x"",)); E SystemError: ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:605,FAILURE,FAILURES,605,https://root.cern,https://github.com/root-project/root/issues/11602,1,['FAILURE'],['FAILURES']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The output file of TFileMerger is never deleted, thus all the merging can happen correctly.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master; Fedora 32; `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`; ### Additional context; <!--; Add any other context about the problem here.; -->; Stack trace of the reproducer; ```; Fill: Switching to new file: filemergerinput_1.root; Fill: Switching to new file: filemergerinpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:694,error,error,694,https://root.cern,https://github.com/root-project/root/issues/6640,3,"['error', 'fault']","['error', 'faulty']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When compiling with VecGeom enabled, I get this compile error:; ```; In file included from <builddir>/include/TObject.h:18,; from <builddir>/include/TNamed.h:25,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; <builddir>/include/TStorage.h: In static member function ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’:; <builddir>/include/TStorage.h:133:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 133 | bits |= kIsOnHeap;; | ~~~~~^~~~~~~~~~~~; <builddir>/include/TStorage.h:135:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 135 | bits &= ~kIsOnHeap;; | ~~~~~^~~~~~~~~~~~~; In file included from /usr/include/c++/11/memory:76,; from <builddir>/include/ROOT/TypeTraits.hxx:15,; from <builddir>/include/TString.h:30,; from <builddir>/include/TNamed.h:26,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; /usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<TInterpreterValue>; <template-parameter-2-2> = void; _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; std::nullptr_t = std::nullptr_t]’:; <builddir>/include/TInterpreter.h:280:85: required from here; /usr/include/c++/11/bits/unique_ptr.h:321:11: err",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984:514,error,error,514,https://root.cern,https://github.com/root-project/root/issues/10984,1,['error'],['error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7987:515,error,error,515,https://root.cern,https://github.com/root-project/root/issues/7987,3,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `GetValue` of an RDF complex type column gives the following error:; ```bash; Column type: _Complex double; <cppyy.gbl.ROOT.RDF.RResultPtr<vector<_Complex double> > object at 0x7fc929ee8430>; Error pythonizing class std::vector<_Complex double>:; Traceback (most recent call last):; File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke; user_pythonizor(klass, fqn); File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<_Complex double> at 0x7fc929c29e20> has no attribute 'value_type'. Full details:; type object 'vector<_Complex double>' has no attribute 'value_type'; 'std::vector<_Complex double>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; data_frame = ROOT.RDataFrame(10).Define(""x"", ""gRandom->Rndm()""); data_frame_xy = data_frame.Define(""y"", ""x*2 +1j""); data_frame_xy.Display().Print(); ```; ok so far.; ```python; column=""y",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10522:519,error,error,519,https://root.cern,https://github.com/root-project/root/issues/10522,2,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `ROOT` and latest` cppyy 3.0.1` cannot be used in the same virtual environment. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Please, consider back porting the feature needed from `cppyy 3.0.1`:; https://github.com/wlav/CPyCppyy/commit/6c7ca2547347b7bea8e49c7f2337fa9fb0455186. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12579:1184,down,download,1184,https://root.cern,https://github.com/root-project/root/issues/12579,1,['down'],['download']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10604:696,Error,Error,696,https://root.cern,https://github.com/root-project/root/issues/10604,1,['Error'],['Error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7393:484,error,error,484,https://root.cern,https://github.com/root-project/root/issues/7393,5,['error'],['error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; TKeys in a TFile with the same name as the requested RNTuple will be attempted to be parsed as an RNTuple, leading to internal parser errors later on. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The RNTupleReader should check the type of the TKey before parsing (and throw an exception if there's no RNTuple with the requested name).; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Create a TFile with a TKey with a certain name, then try to open that file as an RNTuple.; ```cpp; std::string filename = ""some_file.root"";; {; auto file = std::make_unique<TFile>(filename.c_str(), ""RECREATE"", """", 209);; auto tree = std::make_unique<TTree>(""Events"", """");; file->Write();; file->Close();; tree.release();; }. auto ntuple = RNTupleReader::Open(""Events"", filename);; ```; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; Root master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8284:517,error,errors,517,https://root.cern,https://github.com/root-project/root/issues/8284,2,"['down', 'error']","['download', 'errors']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Using a `std::pair` for a custom class inside another custom class seems to somehow break the dictionary load mechanism. In the [attached reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz), `OtherClass` contains a `std::pair<int, MyClass>`; for both custom classes a dictionary is created. Manually loading the dictionary in the Root shell seems to lead to an incomplete type state for `MyClass`, such that some assertions fail. The failure disappear if the same assertion is tested before on a class from the same dictionary and not encompassed in the `std::pair`. It thus seems that the presence of the `std::pair` somehow interferes with loading the dictionary for the contained class. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The presence of `std:::pair` should not interfere with the dictionary of its contained classes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. This [reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz) showcases the problem:; ```bash; $ rootcling -f dict.cpp MyClass.h OtherClass.h LinkDef.h; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ root; root [0] .L libDict.so; root [1] std::is_copy_assignable<MyClass>::value; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:847,failure,failure,847,https://root.cern,https://github.com/root-project/root/issues/10512,1,['failure'],['failure']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory; Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to ; materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce; Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel).; Also run a. make all. command in order to compile and bind the c++ library. ### Setup; ROOT 6.28/00; Windows 11 - WSL2 Ubuntu 22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12481:553,Error,Error,553,https://root.cern,https://github.com/root-project/root/issues/12481,3,"['Error', 'error']","['Error', 'error']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```; input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found; #include ""ROOT/TPyDispatcher.h""; ^~~~~~~~~~~~~~~~~~~~~~; Traceback (most recent call last):; File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>; m = ROOT.TPyDispatcher( MyDraw ); File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute TPyDispatcher from ROOT; ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02; 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04); 3. Python version: Python3.8; 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6579:500,error,error,500,https://root.cern,https://github.com/root-project/root/issues/6579,3,"['error', 'fault']","['error', 'fault']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When building root 6.26/04 with gcc 11.2.1 the build process fails while compiling REveBox.cxx:. [ 89%] Building CXX object graf3d/eve7/CMakeFiles/ROOTEve.dir/src/REveBox.cxx.o; In file included from /usr/src/root-6.26.04/graf3d/eve7/src/REveBox.cxx:18:; /usr/include/nlohmann/json.hpp:847:7: error: redeclared with 9 template parameters; 847 | class basic_json;; | ^~~~~~~~~~. This is under CentOS 7, using devtoolset-11 and cmake3 (3.17.5). ### Expected behavior; It should compile without errors. ### To Reproduce. wget https://root.cern/download/root_v6.26.04.source.tar.gz; tar xzvf root_v6.26.04.source.tar.gz; cd root-6.26.04; cd build; scl enable devtoolset-11 bash; cmake3 ..; make >& make.log. ### Setup; root 6.26.04; CentOS 7, devtoolset-11 (gcc 11.2.1), cmake3 (3.17.5); Building from source (https://root.cern/download/root_v6.26.04.source.tar.gz). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10814:676,error,error,676,https://root.cern,https://github.com/root-project/root/issues/10814,4,"['down', 'error']","['download', 'error', 'errors']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior; The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce; Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup; 1. ROOT version: 6.26.02; 2. Operating system: Ubuntu 20; 3. How you obtained ROOT: binary download and also built it. ### Additional context; <!--; Add any other context about the problem here.; -->; you may also notice that the headers list for 6.26.02 is considerably shorter:; ```; $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt; 2970 root-v6.24.06-headers.txt; 2840 root-v6.26.02-headers.txt; ```; Headers included in 6.24.06 but missing in 6.26.02:; ```; $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt; $ grep -c '^-\./' root-headers-diff.txt ; 238; ```; Headers missing in 6.24.06 but included in 6.26.02:; ```; $ grep -c '^+\./' root-headers-diff.txt ; 108; ```; Thank you!; ### Attachments; [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt); [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10539:478,down,downloads,478,https://root.cern,https://github.com/root-project/root/issues/10539,2,"['Down', 'down']","['Download', 'downloads']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. With runtime modules, `<filesystem>` can't be included:. ```; $ root -l; root [0] #include <filesystem>; /home/blue/ROOT/master/cmake-build-foo/etc//cling/std.modulemap:368:10: error: module 'std.codecvt' is incompatible with feature 'header_existence'; module ""codecvt"" {; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/../../../../include/c++/11.1.0/bits/fs_path.h:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <codecvt>; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9670:538,error,error,538,https://root.cern,https://github.com/root-project/root/issues/9670,1,['error'],['error']
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. Without runtime modules, there is a silent crash when cling tries to `printValue` a `path` object, and the interpreter exits with error code 11:. ```; $ root -l; root [0] #include <filesystem>; root [1] auto p = std::filesystem::path(""/some/path/foo.cpp"");; root [2] std::cout << p << '\n';; ""/some/path/foo.cpp""; root [3] p; /tmp echo $status; 11; ```. With runtime modules `<filesystem>` cannot be included, see https://github.com/root-project/root/issues/9670",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9672:491,error,error,491,https://root.cern,https://github.com/root-project/root/issues/9672,2,"['echo', 'error']","['echo', 'error']"
Availability,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; The bug is not reported. ### Describe the bug; <!--. -->; When I compile my code using TMVA reader, I got the following message. ld: warning: libguide.so, needed by /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found (try using -rpath or -rpath-link). Then, I execute my .exe file, and get:; error while loading shared libraries: libguide.so: cannot open shared object file: No such file or directory. ### Expected behavior; <!--; -->; No warning during compiling. No error when running. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->; #include <cstdlib>; #include <iostream>; #include ""TString.h""; #include ""TTree.h""; #include ""TGraph.h""; #include ""TFile.h""; #include <TMVA/Reader.h>; #include ""TF1.h""; using namespace std;; int main(int argc, char *argv[]){; int t_i = 19;; float mu, Delta, Ng, Ec, h, epsilon_c, ng, Gamma, L_M_5;; TMVA::Reader *reader = new TMVA::Reader(""!Color:!Silent"");; reader->AddVariable( ""mu"", &mu );; reader->AddVariable( ""Delta"", &Delta );; reader->AddVariable( ""Ng"", &Ng );; reader->AddVariable( ""Ec"", &Ec );; reader->AddVariable( ""h"", &h );; reader->AddVariable( ""epsilon_c"", &epsilon_c );; reader->AddVariable( ""ng"", &ng );; reader->AddVariable( ""Gamma"", &Gamma );; reader->AddVariable( ""L-5"", &L_M_5 );; reader->BookMVA( ""MLP method"", Form(""/eos/user/j/jfeng5/work/quantum_computing/mc/tmva/weights/qc_MLP_%d.weights.xml"",t_i ));; TFile tf_fi(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6904:683,error,error,683,https://root.cern,https://github.com/root-project/root/issues/6904,2,['error'],['error']
Availability,"- [y] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:587,down,down,587,https://root.cern,https://github.com/root-project/root/issues/12182,3,"['down', 'error']","['down', 'error']"
Availability,"- `SetUpWindows.cmake`: Remove the `-D_WIN32` and `-D_WIN64` compiler flags that are set internally by the compiler and can cause redefinition warnings (e.g. with roottest); - `TWinNTSystem.cxx`: Don't add dependencies on system DLLs from the `C:\Windows` directory, their import libraries might not be available (e.g. in debug mode)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13362:303,avail,available,303,https://root.cern,https://github.com/root-project/root/pull/13362,1,['avail'],['available']
Availability,"- add check if rms is NaN; - output value of rms (zero, negative, or NaN); - set rms to zero if it is NaN (before only done for zero or negative values). → I suspect the training will have problems in that situation anyway but **I think** it makes the message easier to digest:. before:; ```; …; <WARNING> <WARNING> : Dataset[Default] : <GetCorrelationMatrix> Zero variances for variables (0, 2) = -2.14875e-05; …; <HEADER> TFHandler_Factory : Variable Mean RMS [ Min Max ]; : ------------------------------------------------------------------------------------------------------------------; : LifeTime: 0.0011344 -nan [ 8.5046e-05 0.024133 ]. …; : Some more output; : -nan -nan -nan -nan -nan -nan; <FATAL> : <GetSeparation> signal and background histograms have different or invalid dimensions:; ***> abort program execution; terminate called after throwing an instance of 'std::runtime_error'; what(): FATAL error. ```; after; ```; …; <WARNING> <WARNING> : Dataset[Default] : <GetCorrelationMatrix> Zero variances for variables (0, 2) = -2.14875e-05; …; <WARNING> <WARNING> : Variable ""LifeTime"" has zero, negative, or NaN RMS^2: -nan ==> set to zero. Please check the variable content. ```; I.e. the nan does not appear in the table anymore (where I didn't spot it first) but the abnormal value gets pulled out into a WARNING message. (Where it also comes with variable name, as opposed to the long list of correlation matrix warning, which makes it non-trivial to understand which variables are problematic, if many, and comes w/o human readable names). tbh: I have not yet understood why NaN arrives there (… well a few lines before the √ of a negative number is computed … but I don't yet know why that arrived there. Still investigating, will follow up once I know more).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1669:912,error,error,912,https://root.cern,https://github.com/root-project/root/pull/1669,1,['error'],['error']
Availability,- core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing; - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:; axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5343:181,error,error,181,https://root.cern,https://github.com/root-project/root/pull/5343,2,['error'],['error']
Availability,- enclose min() and max() in parentheses to prevent the following compilation errors (min and max are defined as macros in Visual Studio):; error C2589: '(' : illegal token on right side of '::'; error C2059: syntax error : '::'; - implement the basic_string_view operator == (for const char *) (was somehow not resolved by Visual Studio). Thanks Axel for fixing it,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1089:78,error,errors,78,https://root.cern,https://github.com/root-project/root/pull/1089,4,['error'],"['error', 'errors']"
Availability,- fix an error message (text was misleading); - correclty initialize a data member; - allow initialHesse to be used with Minimizer option in fitTo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10053:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/10053,1,['error'],['error']
Availability,"- gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:2322,failure,failure,2322,https://root.cern,https://github.com/root-project/root/issues/16242,1,['failure'],['failure']
Availability,"- make get_tty_size() returning 0 when called without terminal (e.g. when redirecting output); - check for nonzero return value of `_isatty()`. According to the doc, `_isatty` returns a nonzero value if the descriptor is associated with a character device. Otherwise, `_isatty` returns 0.; - in `dataframe_helpers.cxx`, don't use `f1.root` and `f2.root`, they are already used in `dataframe_nodes.cxx` and might conflict when running tests concurrently. This fixes the following errors on Windows:; ```; unknown file: error: C++ exception with description ""string too long"" thrown in the test body.; [ FAILED ] RDFHelpers.ProgressHelper_Existence_ST (5009 ms); [ RUN ] RDFHelpers.ProgressHelper_Existence_MT; C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(77): error: Failed; Received unexpected diagnostic of severity 5000 at 'TFile::TFile' reading 'could not delete C:\ROOT-CI\build\tree\dataframe\test\f2.root (errno: 13) Permission denied'.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13489:479,error,errors,479,https://root.cern,https://github.com/root-project/root/pull/13489,3,['error'],"['error', 'errors']"
Availability,"- remove ""future"" from the list of STL includes on Windows (it generates many errors); - replace backslashes by forward slashes in paths",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1114:78,error,errors,78,https://root.cern,https://github.com/root-project/root/pull/1114,1,['error'],['errors']
Availability,- restructure the doc to avoid to much clicks; - fix many typos; - fix errors in the code examples; - delete useless files; - rename some .md files (index.md); - etc ...,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7118:71,error,errors,71,https://root.cern,https://github.com/root-project/root/pull/7118,1,['error'],['errors']
Availability,"- using references instead of const shared pointers in the constructors of filters, temporary branches and actions (thanks @karies); - the output of tdf001_introduction contained an error due to a branch name mismatch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/370:182,error,error,182,https://root.cern,https://github.com/root-project/root/pull/370,1,['error'],['error']
Availability,"- veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:1769,Error,Error,1769,https://root.cern,https://github.com/root-project/root/issues/10704,1,['Error'],['Error']
Availability,- warn rather than raising an error in case of empty list of handles; - run sequentially if IMT is not enabled. @vepadulano I'm not sure what is the right place where to insert an `import ROOT`?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13246:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/13246,1,['error'],['error']
Availability,"- webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:1584,Error,Error,1584,https://root.cern,https://github.com/root-project/root/issues/10704,1,['Error'],['Error']
Availability,"-----------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); root [1] f; (TFile *) nullptr; ```. ### Expected behavior; File is correctly open both with `TFile::Open` and the `TWebFile` constructor. ### Setup; ROOT 6.24/02 from conda, ROOT master built from source on a fedora34 machine. ### Additional context. I have noticed in the output error the presence of an extra `?` character at the end of the string, before the `:`. Might be nothing, not sure.; `Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8890:2096,Error,Error,2096,https://root.cern,https://github.com/root-project/root/issues/8890,3,"['Error', 'error']","['Error', 'error']"
Availability,"-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt/root_build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /opt/root_build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:476: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:31578: core/CMakeFiles/G__Core.dir/all] Error 2; gmake[1]: ** Esperando que outros processos terminem.; [ 78%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 78%] Built target MetaCling; gmake: *** [Makefile:156: all] Error 2; ```. ### Reproducer. ```; # The latest stable branch gets updated automatically on each release.; # You may update your local copy by issuing a `git pull` command from within `root_src/`.; $ git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; $ mkdir root_build root_install && cd root_build; $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src # && check cmake configuration output for warnings or errors; $ cmake --build . -- install -j4 # if you have 4 cores available for compilation; $ source ../root_install/bin/thisroot.sh # or thisroot.{fish,csh}; ```. ### ROOT version. Latest from github : `$ git clone --branch latest-stable --depth=1 https://github.com/root-project",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:3552,Error,Error,3552,https://root.cern,https://github.com/root-project/root/issues/13450,1,['Error'],['Error']
Availability,"-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:403:23: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:1581:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:1959:18: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1959 | COMMON/PAWC/NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC(5),LMAIN,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:205:19: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 205 | COMMON /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelco",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:3607,error,error,3607,https://root.cern,https://github.com/root-project/root/issues/11657,1,['error'],['error']
Availability,"-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure; Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure; Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure; Expected equality of these values:; 3000; *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(); Which is: 0; [ FAILED ] TClingDataMemberInfo.Offset (7 ms); [ RUN ] TClingDataMemberInfo.issue8553; [ OK ] TClingDataMemberInfo.issue8553 (4 ms); [----------] 4 tests from TClingDataMemberInfo (14 ms total); [----------] 5 tests from TClingMethodInfo; [ RUN ] TClingMethodInfo.Prototype; [ OK ] TClingMethodInfo.Prototype (0 ms); [ RUN ] TClingMethodInfo.ROOT10789; [ OK ] TClingMethodInfo.ROOT10789 (2 ms); [ RUN ] TClingMethodInfo.DerivedCtorROOT11010; [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms); [ RUN ] TClingMethodInfo.TemplateFun; [ OK ] TClingMethodInfo.TemplateFun (1 ms); [ RUN ] TClingMethodInfo.Ctors; [ OK ] TClingMethodInfo.Ctors (4 ms); [----------] 5 tests from TClingMethodInfo (90 ms total); [----------] Global test environment tear-down; [==========] 33 tests from 4 test suites ran. (7341 ms total); [ PASSED ] 32 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TClingDataMemberInfo.Offset; 1 FAILED TEST; YOU HAVE 1 DISABLED TEST; CMake Error at /builddir/build/BUILD/root-6.30.04/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. ### Reproducer. Build root 6.30.02 for s390x; Run tests. ### ROOT version. root 6.30.04. ### Installation method. build from source. ### Operating system. Fedora Linux 40 for s390x; Fedora Linux 39 for s390x; Fedora Linux 38 for s390x; RHEL 9 + EPEL 9 for s390x; RHEL 8 + EPEL 8 for s390x. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:4779,down,down,4779,https://root.cern,https://github.com/root-project/root/issues/14512,3,"['Error', 'down', 'error']","['Error', 'down', 'error']"
Availability,"-; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; ...; terminate called after throwing an instance of 'std::runtime_error'; what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user; CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; - The dataframe tests all fail with something like this; ```sh; Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so; /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0); /usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:3717,failure,failure,3717,https://root.cern,https://github.com/root-project/root/issues/7936,1,['failure'],['failure']
Availability,"-DCMAKE_CXX_STANDARD=11 -Dminimal=ON; ```; to reproduce the error below; ```; Consolidate compiler generated dependencies of target Foundation_Stage1; [ 18%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from /srv/root/src/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from /srv/root/src/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/bits/stl_algo.h:3467:5: note: ‘std::max’ declared here; 3467 | max(initializer_list<_Tp> __l, _Compare __comp); | ^~~; make[2]: *** [core/foundation/CMakeFiles/Found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8281:1075,error,error,1075,https://root.cern,https://github.com/root-project/root/issues/8281,1,['error'],['error']
Availability,"-DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://githu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:1425,failure,failures,1425,https://root.cern,https://github.com/root-project/root/issues/7936,1,['failure'],['failures']
Availability,"-Dpythia8=OFF""; ""-Drfio=OFF""; ""-Droot7=OFF""; ""-Dsqlite=OFF""; ""-Dssl=ON""; ""-Dtmva=ON""; ""-Dvdt=OFF""; ""-Dwebgui=OFF""; ""-Dxml=ON""; ""-Dxrootd=OFF""; ]; ++ lib.optional (stdenv.cc.libc != null) ""-DC_INCLUDE_DIRS=${lib.getDev stdenv.cc.libc}/include""; ++ lib.optionals stdenv.isDarwin [; ""-DOPENGL_INCLUDE_DIR=${OpenGL}/Library/Frameworks""; ""-DCMAKE_DISABLE_FIND_PACKAGE_Python2=TRUE"". # fatal error: module map file '/nix/store/<hash>-Libsystem-osx-10.12.6/include/module.modulemap' not found; # fatal error: could not build module '_Builtin_intrinsics'; ""-Druntime_cxxmodules=OFF""; ];. NIX_LDFLAGS = lib.optionalString (stdenv.isLinux && stdenv.isAarch64 && stdenv.cc.isGNU) ""-lgcc"";. postInstall = ''; for prog in rootbrowse rootcp rooteventselector rootls rootmkdir rootmv rootprint rootrm rootslimtree; do; wrapProgram ""$out/bin/$prog"" \; --set PYTHONPATH ""$out/lib"" \; --set ${lib.optionalString stdenv.isDarwin ""DY""}LD_LIBRARY_PATH ""$out/lib""; done. # Make ldd and sed available to the ROOT executable; wrapProgram ""$out/bin/root"" --prefix PATH : ""${lib.makeBinPath [; gnused # sed; stdenv.cc # c++ ld etc.; stdenv.cc.libc # ldd; ]}"". # Patch thisroot.{sh,csh,fish}. # The main target of `thisroot.sh` is ""bash-like shells"",; # but it also need to support Bash-less POSIX shell like dash,; # as they are mentioned in `thisroot.sh`. # `thisroot.sh` would include commands `lsof` and `procps` since ROOT 6.28.; # See https://github.com/root-project/root/pull/10332. patchRcPathPosix ""$out/bin/thisroot.sh"" ""${lib.makeBinPath [; coreutils # dirname tail; gnugrep # grep; gnused # sed; lsof # lsof # for ROOT (>=6.28); man # manpath; procps # ps # for ROOT (>=6.28); which # which; ]}""; patchRcPathCsh ""$out/bin/thisroot.csh"" ""${lib.makeBinPath [; coreutils; gnugrep; gnused; lsof # lsof # for ROOT (>=6.28); man; which; ]}""; patchRcPathFish ""$out/bin/thisroot.fish"" ""${lib.makeBinPath [; coreutils; man; which; ]}""; '';. setupHook = ./setup-hook.sh;; }; ```. `flake.nix`. ```Nix; {; inputs.flake-utils.url",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:7637,avail,available,7637,https://root.cern,https://github.com/root-project/root/issues/11920,1,['avail'],['available']
Availability,-Fix the correct dependency of sofie tests. No ned to depend on protobuf; - Use weight file for Linear tests from ROOT; - Test also the case where the weight file is not present but the session is enabled; - Produce a runtime error when a weight file is enabled but the Session is disabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11529:226,error,error,226,https://root.cern,https://github.com/root-project/root/pull/11529,1,['error'],['error']
Availability,"-build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'?; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^~~~~~~; Value; /home/root-build/etc/cling/Interpreter/Value.h:42:26: note: 'Value' declared here; class CLING_LIB_EXPORT Value {; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ~~~~~~~^; /home/root-build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:29: error: 'T' does not refer to a value; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:195:21: note: declared here; template <class T>; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:33: error: no member named 'value' in the global namespace; = std::is_reference<T>::value ?; ~~^; /home/root-build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:61: error: expected ')'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:30: note: to match this '('; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module '",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:4493,error,error,4493,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"-help|-h); ; Use -h for usage help, --help for detailed information. Arguments:; Specifying files and trees:; --files fname1 [fname2...]; The list of ROOT files to read from. --trees tname1 [tname2...]; The list of TTrees to read from the files.; If only one TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:1620,avail,available,1620,https://root.cern,https://github.com/root-project/root/pull/14039,1,['avail'],['available']
Availability,"-pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed!; 1874: __cxa_thread_call_dtors: dtr 0x824a907b0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x8231078f0 from unloaded dso, skipping; 1874: gmake[1]: *** [roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro.dir/build.make:70: roottest/root/meta/evolution/CMakeFiles/roottest-root-meta-evolution-data1-compile-macro] Error 1; 1874: gmake: *** [Makefile:25710: roottest-root-meta-evolution-data1-compile-macro/fast] Error 2; 1/1 Test #1874: roottest-root-meta-evolution-data1-build ...***Failed 5.71 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.86 sec. The following tests FAILED:; 1874 - roottest-root-meta-evolution-data1-build (Failed); Errors while running CTest; Output from these tests are in: /home/mkrzewic/build/root/Testing/Temporary/LastTest.log; Use ""--rerun-failed --output-on-failure"" to re-run the failed cases verbosely.; ```. ### Reproducer. ctest -j4 -R ""roottest-root-meta-evolution-data1-build"" -V. ### ROOT version. master. ### Installation method. source. ### Operating system. FreeBSD 13.2. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13080:2932,Error,Error,2932,https://root.cern,https://github.com/root-project/root/issues/13080,4,"['Error', 'failure']","['Error', 'Errors', 'failure']"
Availability,"-pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ""-Wno-deprecated-copy""); endif(); endforeach(); # Once we require at least cmake 3.11, target_include_directories will work for imported targets. ```. ### Additional context; Similar PR: #5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:5731,down,download,5731,https://root.cern,https://github.com/root-project/root/issues/7654,1,['down'],['download']
Availability,"-prefix/src/googletest/googletest/include/gtest/internal/gtest-death-test-internal.h:39:0,; from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-death-test.h:41,; from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest.h:64,; from /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/src/gtest-all.cc:38:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h: In static member function ‘static constexpr bool testing::internal::MatcherBase<T>::IsInlined()’:; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:12: error: ‘is_trivially_copy_constructible’ is not a member of ‘std’; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:50: error: expected primary-expression before ‘>’ token; std::is_trivially_copy_constructible<M>::value &&; ^; /user/pbos/project_atlas/root-20211202/cmake-build-release/googletest-prefix/src/googletest/googletest/include/gtest/gtest-matchers.h:414:51: error: ‘::value’ has not been declared; std::is_trivially_copy_constructible<M>::value &&; ^; ```; There is more, but I think this already indicates that one of the issues is the GCC version, since `is_trivially_copy_constructible` is available from GCC 5. ### Expected behavior; CMake should not configure successfully on GCC versions below 5 when configuring with `-Dtesting=ON`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9370:1112,error,error,1112,https://root.cern,https://github.com/root-project/root/issues/9370,1,['error'],['error']
Availability,". ### Description. Strange issue with Cling and TTree:Scan(), please see table in Reproducer. ### Reproducer. file `scan.C`; ```C++; #include ""TTree.h""; #include ""TRandom.h"". TTree *t = nullptr;. void scan() {; const Int_t kMax = 10;; Int_t n;; Float_t a[kMax];. t = new TTree(""t"", ""tree""); // in memory; t->Branch(""n"", &n, ""n/I"");; t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {; n = gRandom->Rndm()*(kMax-1);; for (Int_t j = 0; j < n; j++); a[j] = gRandom->Gaus(0, 1);; t->Fill();; }; // t->Scan(""a[0]"");; }; ```. <table>. <tr>; <td> Fedora 40, root master (2024-10-22)</td> <td> lxplus.cern.ch (RHEL 9.4), root v6.32.06 </td>; </tr>. <tr>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * 1.255e-41 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] t->Draw(""a[0]""); root [3] // draws correct all 5 values; ```. </td>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************; (long long) 5; root [2]. ```. </td>; </tr>. <tr>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************. *** Break *** segmentation violation; ```. </td>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16730:1041,ERROR,ERROR,1041,https://root.cern,https://github.com/root-project/root/issues/16730,1,['ERROR'],['ERROR']
Availability,". #include <array>; #include <vector>. struct INSTANTIATE_TYPES {; std::array<float, 3> arr1;; std::vector<std::array<float, 3> > vec1;; };. #pragma link C++ class std::vector<std::array<float, 3> >+;. #endif // ARRAYWRITE_LINKDEF_H; ```. - `arrayWrite.cpp`:. ```c++; // ROOT include(s).; #include <TFile.h>; #include <TError.h>; #include <TTree.h>. // System include(s).; #include <array>; #include <vector>; #include <memory>. /// Helper macro for creating a branch with error checking; #define MAKE_BRANCH(NAME, OBJ)					\; do {								\; TBranch* br = otree->Branch(NAME, &OBJ);			\; if (br == nullptr ) {					\; Error(APPNAME, ""Could not create branch \""%s\"""", NAME);	\; return 1;							\; }								\; } while(false). int main() {. // The name of the application.; static const char* APPNAME = ""arrayWrite"";. // Open the output file.; static const char* FILENAME = ""arrays.root"";; std::unique_ptr<TFile> ofile(TFile::Open(FILENAME, ""RECREATE""));; if ((!ofile) || ofile->IsZombie()) {; Error(APPNAME, ""Could not open output file \""%s\"""", FILENAME);; return 1;; }; Info(APPNAME, ""Opened output file \""%s\"""", FILENAME);. {; // Create a TTree in the output file.; auto otree = std::make_unique<TTree>(""arrays"", ""Tree with arrays"");; otree->SetDirectory(ofile.get());. // Add vectors of arrays to it.; std::array<float, 3> arr1;; MAKE_BRANCH(""arr1"", arr1);; std::vector<std::array<float, 3> > vec1;; MAKE_BRANCH(""vec1"", vec1);. // Fill a few entries into the tree.; for (Int_t i = 0; i < 10; ++i) {; vec1.clear();; arr1 = {static_cast<float>(i),; static_cast<float>(i + 1),; static_cast<float>(i + 2)};; for (Int_t j = 0; j < i; ++j) {; vec1.push_back({static_cast<float>(j),; static_cast<float>(j + 1),; static_cast<float>(j + 2)});; }; if (otree->Fill() <= 0) {; Error(APPNAME, ""Failed to record entry %i"", i);; return 1;; }; }. // Make sure that the tree is saved.; otree->AutoSave();; }; Info(APPNAME, ""Finished writing \""%s\"""", FILENAME);. // Return gracefully.; return 0;; }; ```. Building and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:4063,Error,Error,4063,https://root.cern,https://github.com/root-project/root/issues/12007,1,['Error'],['Error']
Availability,". Explicitly linked the core library against `libatomic`. This is necessary on some platforms in order to use the atomic operations performed by the library. ## Changes or fixes:. The current master branch, without the fix, produces the following build error on Raspberry Pi OS with GCC 11. (Though the exact GCC version doesn't matter much, just that it would not be the built-in GCC 6.3 coming with the OS.). ```; [100%] Linking CXX executable src/rootcling_stage1; ../foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o: In function `ROOT::Experimental::RLogManager::Emit(ROOT::Experimental::RLogEntry const&)':; RLogger.cxx:(.text+0x99c): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0x9c8): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0x9e8): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0xa08): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0xa30): undefined reference to `__atomic_fetch_add_8'; ../foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o:RLogger.cxx:(.text+0xa58): more undefined references to `__atomic_fetch_add_8' follow; collect2: error: ld returned 1 exit status; core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:242: recipe for target 'core/rootcling_stage1/src/rootcling_stage1' failed; make[3]: *** [core/rootcling_stage1/src/rootcling_stage1] Error 1; CMakeFiles/Makefile2:26106: recipe for target 'core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all' failed; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; CMakeFiles/Makefile2:26113: recipe for target 'core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/rule' failed; make[1]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/rule] Error 2; Makefile:8132: recipe for target 'rootcling_stage1' failed; make: *** [rootcling_stage1] Error 2; ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) - **Not applicable**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9987:1178,error,error,1178,https://root.cern,https://github.com/root-project/root/pull/9987,5,"['Error', 'error']","['Error', 'error']"
Availability,". This prints:. ```; Traceback (most recent call last):; File ""../examples/mainframerepro.py"", line 10, in <module>; window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); File ""../examples/mainframerepro.py"", line 6, in __init__; ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work; TypeError: none of the 2 overloaded methods succeeded. Full details:; Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>; TypeError: takes at most 1 arguments (3 given); Dispatcher1::Dispatcher1() =>; TypeError: takes at most 0 arguments (3 given); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++; namespace __cppyy_internal {; class Dispatcher1 : public ::TGMainFrame {; public:; virtual ~Dispatcher1() {}; using TGMainFrame::TGMainFrame;; using TGMainFrame::GetMWMinpString;; };; }. void tgmainframe_repro(); {; TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {; cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;; }; }; ```. This prints:. ```; ~Dispatcher1(); GetMWMinpString() const; Dispatcher1(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6578:2403,down,download,2403,https://root.cern,https://github.com/root-project/root/issues/6578,1,['down'],['download']
Availability,". When compiling ROOT from source, I got an error:. ```; /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx: In function ‘std::unique_ptr<TMVA::Experimental::SOFIE::ROperator> TMVA::Experimental::SOFIE::PyKeras::INTERNAL::MakeKerasSwish(PyObject*)’:; /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:23: error: ‘ROperator_Swish’ does not name a type; did you mean ‘ROperator_Slice’?; 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));; | ^~~~~~~~~~~~~~~; | ROperator_Slice; /opt/root/src/tmva/pymva/src/RModelParser_Keras.cxx:562:39: error: expected primary-expression before ‘float’; 562 | op.reset(new ROperator_Swish<float>(fLayerInputName, fLayerOutputName));; | ^~~~~; make[2]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/build.make:146: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o] Error 1; make[2]: *** Waiting for unfinished jobs....; make[1]: *** [CMakeFiles/Makefile2:42937: tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; make[1]: *** [CMakeFiles/Makefile2:44293: roofit/xroofit/CMakeFiles/RooFitXRooFit.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. Had to add a line. +++ b/tmva/pymva/src/RModelParser_Keras.cxx; @@ -18,6 +18,7 @@; **********************************************************************************/; ; #include ""TMVA/RModelParser_Keras.h""; +#include ""TMVA/ROperator_Swish.hxx"". I'm not sure the include had to be added in that file, but it worked. ### Reproducer. Clone ROOT repository, go to the build directory,. cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=../install ../src; cmake --build . -- install -j4. ### ROOT version. Most recent ROOT version from the master branch at that time. commit https://github.com/root-project/root/commit/870618f1bfa43376c73bc07fa4becc0a54caa9ed (HEAD -> master, origin/master, origin/HEAD). ### Installation method. built from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13102:1187,Error,Error,1187,https://root.cern,https://github.com/root-project/root/issues/13102,2,['Error'],['Error']
Availability,". ```Nix; {; inputs.flake-utils.url = ""github:numtide/flake-utils"";; inputs.nixpkgs.url = ""github:NixOS/nixpkgs/2787fc7d1e51404678614bf0fe92fc296746eec0"";. outputs = { flake-utils, nixpkgs, ... }: flake-utils.lib.eachDefaultSystem (system:; let; lib = nixpkgs.lib;; pkgs = nixpkgs.legacyPackages.${system};; root = with pkgs; callPackage ./. {; python = python3;; inherit (darwin.apple_sdk.frameworks) Cocoa CoreSymbolication OpenGL;; # https://github.com/NixOS/nixpkgs/issues/201254; stdenv = if stdenv.isLinux && stdenv.isAarch64 && stdenv.cc.isGNU then gcc11Stdenv else stdenv;; };; in; {; packages = {; default = root;; inherit root;; };; });; }; ```. `flake.lock`. ```JSON; {; ""nodes"": {; ""flake-utils"": {; ""locked"": {; ""lastModified"": 1667395993,; ""narHash"": ""sha256-nuEHfE/LcWyuSWnS8t12N1wc105Qtau+/OdUAjtQ0rA="",; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""rev"": ""5aed5285a952e0b949eb3ba02c12fa4fcfef535f"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""numtide"",; ""repo"": ""flake-utils"",; ""type"": ""github""; }; },; ""nixpkgs"": {; ""locked"": {; ""lastModified"": 1670507980,; ""narHash"": ""sha256-riNZa0xzM1it3pzxciwALeMs+0CsBMWIW2FqulzK8vM="",; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""2787fc7d1e51404678614bf0fe92fc296746eec0"",; ""type"": ""github""; },; ""original"": {; ""owner"": ""NixOS"",; ""repo"": ""nixpkgs"",; ""rev"": ""2787fc7d1e51404678614bf0fe92fc296746eec0"",; ""type"": ""github""; }; },; ""root"": {; ""inputs"": {; ""flake-utils"": ""flake-utils"",; ""nixpkgs"": ""nixpkgs""; }; }; },; ""root"": ""root"",; ""version"": 7; }; ```. 4. Run `nix --extra-experimental-features 'nix-command flakes' build --no-link --keep-failed --print-build-logs ./test-root-6.27#root`. If `nix` is not available, run `docker run -ti -v ""$PWD:/mnt"" -v /tmp:/tmp --rm nixos/nix nix --extra-experimental-features 'nix-command flakes' build --no-link --keep-failed --print-build-logs /mnt/test-root-6.27#root` instead.; 5. The remaining build directory can be found inside `/tmp`, with a folder name like `nix-build-root-6.27.00.drv-*`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:10305,avail,available,10305,https://root.cern,https://github.com/root-project/root/issues/11920,1,['avail'],['available']
Availability,"... and TCling__SplitAclicMode. The FileNotFound() method of TPPClingCallbacks is called via; Callbacks->FileNotFound(Filename, RecoveryPath) in; Preprocessor::HandleIncludeDirective(), allowing to compile code via; ACLiC when specifying #include ""myfile.C+"", and hence suppressing; preprocessor error message like:; input_line_23:1:10: fatal error: 'myfile.C+' file not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4:128,Recover,RecoveryPath,128,https://root.cern,https://github.com/root-project/root/pull/4,3,"['Recover', 'error']","['RecoveryPath', 'error']"
Availability,"... rootcling_stage1 ... G__Core.cxx ... ; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; In file included from input_line_2:1:; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:175:47: error: use of undeclared identifier 'std'; void copyArray(T* src, void* placement, std::size_t size) {; ^; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:176:14: error: use of undeclared identifier 'std'; for (std::size_t i = 0; i < size; ++i); ^; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; ninja: build stopped: subcommand failed.; ```. ### Reproducer. ```; cat /var/tmp/a.cxx ; void a(); {; fprintf(stdout, ""Running the script a.cxx\n"");; }. touch -m a -d '1969-12-31 18:00:00.000000000' /var/tmp/a.cxx . ls -l /var/tmp/a.cxx ; -rw-r--r-- 1 pcanal us_cms 63 Dec 31 1969 /var/tmp/a.cxx. root.exe -b -l -q /var/tmp/a.cxx . Processing /var/tmp/a.cxx...; input_line_8:1:10: fatal error: file '/var/tmp/a.cxx' modified since it was first processed; #include ""/var/tmp/a.cxx""; ^; ```. ### ROOT version. | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2024, 21:36:24 |; | From heads/master@9645b3aa |; | With g++ (Spack GCC) 13.1.0 |. ### Installation method. SPACK with build Cache (but technically any). ### Operating system. Linux but likely any. ### Additional context. The problem was introduced during the upgrade to LLVM 16.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372:1521,Error,Error,1521,https://root.cern,https://github.com/root-project/root/issues/14372,3,"['Error', 'error']","['Error', 'error']"
Availability,".............***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-math-exampleFunction-py. ReferenceError: attempt to access a null-pointer; ~~~; 1132/1272 Test #1132: tutorial-math-exampleFunction-py ....................................***Failed Error regular expression found in output. Regex=[Error in] 2.11 sec; Error in <ROOT::Math::Fitter::SetFCN>: FCN function has zero parameters ; Use Functor1D for wrapping one-dimensional function and compute integral of f(x) = x^2-1; integral-1D value = 5.999999999999999; Use Functor for wrapping a multi-dimensional function, the Rosenbrock Function r(x,y) and find its minimum; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/math/exampleFunction.py"", line 57, in <module>; fitter.Result().Print(ROOT.std.cout); ReferenceError: attempt to access a null-pointer; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_CNN_Classification-py. There are probably 6 thread, not 25769803776. (Zero-extended from 32 to 64 bits in the wrong direction.). $ printf '%016x\n' 25769803776; 0000000600000000. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1270/1272 Test #1267: t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:6940,Error,Error,6940,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Error'],['Error']
Availability,...; Error in <TList::Clear>: A list is accessing an object (0x558b19a500b0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b74080) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b76bf0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b80a80) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b80df0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b81320) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b817c0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b81b90) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b82030) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19b82260) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bacc50) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6580) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb6f70) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bb73d0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bbad50) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5b80) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc5eb0) already deleted (list name = TList); Error in <TList::Clear>: A list is accessing an object (0x558b19bc8710) already deleted (list name = TList); (TFile *) 0x558b199f9480; ```. ##,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793:931,Error,Error,931,https://root.cern,https://github.com/root-project/root/issues/14793,18,['Error'],['Error']
Availability,...and add tests and documentation for TTreeReader+TEntryList usage. The behavior of `TTreeReader` and `TTreeProcessorMT` is changed from always assuming that entry numbers stored in `TEntryList` are global entry numbers to treating them as `TTree`-local entry numbers if they come from sub-entrylists. This fixes ROOT-10753. - [x] do entry range -> entry-list entry range transformation once for all taks; - [x] fix test failures; - [ ] check what happens with sub-entrylists in shuffled order w.r.t. TTrees in a TChain,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5667:422,failure,failures,422,https://root.cern,https://github.com/root-project/root/pull/5667,1,['failure'],['failures']
Availability,"...because when GSL is not found, HistFactory is not built. Without this change, when GSL is not present ROOT builds fail with the following error:. ```; In file included from /home/eguiraud/ROOT/root/test/stressHistFactory_tests.cxx:25:0,; from /home/eguiraud/ROOT/root/test/stressHistFactory.cxx:26:; /home/eguiraud/ROOT/root/test/stressHistFactory_models.cxx:8:46: fatal error: RooStats/HistFactory/Measurement.h: No such file or directory; #include ""RooStats/HistFactory/Measurement.h""; ^; compilation terminated.; test/CMakeFiles/stressHistFactory.dir/build.make:62: recipe for target 'test/CMakeFiles/stressHistFactory.dir/stressHistFactory.cxx.o' failed; ```. @hageboeck this fixes the issue I was complaining about today :smile: . @amadio maybe you can think of a nicer fix, this PR is most of all a bug report.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3240:141,error,error,141,https://root.cern,https://github.com/root-project/root/pull/3240,2,['error'],['error']
Availability,...in the hope to get a clearer picture about the test failures; when jitting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1937:55,failure,failures,55,https://root.cern,https://github.com/root-project/root/pull/1937,1,['failure'],['failures']
Availability,"...ue in pyspark. From:. http://www.sealiesoftware.com/blog/archive/2017/6/5/Objective-C_and_fork_in_macOS_1013.html. > The rules for using Objective-C between fork() and exec() have changed; in macOS 10.13. Incorrect code that happened to work most of the time in; the past may now fail. Some workarounds are available. This led to issues within the Python language, tracked at; https://bugs.python.org/issue33725. Any application that makes use of; e.g. multiprocessing (or in any way ends up calling MacOS system `fork`; or `exec`) is affected. According to the Python bug tracker, this issue; has been fixed in Python 3.8. The XCode Python 3.8 version begs to differ. In a very specific usecase,; that boils down to this simple reproducer:; ```python; import pyspark. sparkconf = pyspark.SparkConf().setAll(; {""spark.app.name"": ""distrdf001_spark_connection"",; ""spark.master"": ""local[4]"", }.items()); sparkcontext = pyspark.SparkContext(conf=sparkconf). def imp(partition):; import cppyy; return 1. count = sparkcontext.parallelize(range(1)).map(imp).reduce(lambda x,y:; x+y); ```. the issue is still triggered. Installing any other 3.8+ Python; executable on a MacOS node doesn't show this behaviour, with the exact; same pyspark version (3.2.1). It is possible to workaround this problem, by setting the environment; variable OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES before running a test.; This effectively brings back the behaviour of MacOS10.12 and previous; versions. This commit uses this workaround, since we cannot directly; modify how the system XCode Python on MacOS works. To give an idea of the impact of this issue (and therefore the changes; in this commit), the situation where this occurs is as follows:. 1. A user wants to run RDataFrame in distributed mode.; 2. Their environment is MacOS 10.13+.; 3. The application creates a pyspark mock cluster on the local Mac machine and; the computations happen strictly in the single local node, not in a; distributed cluster. Thus, it pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9811:310,avail,available,310,https://root.cern,https://github.com/root-project/root/pull/9811,2,"['avail', 'down']","['available', 'down']"
Availability,"...wherever it's more readable, less error-prone than the alternatives.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3594:37,error,error-prone,37,https://root.cern,https://github.com/root-project/root/pull/3594,1,['error'],['error-prone']
Availability,"../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/stl_algobase.h> // std::copy, std::fill_n; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For mbstate_t; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: expected '{'; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:15: error: C++ requires a type specifier for all declarations; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:35: error: expected expression; namespace std _GLIBCXX_VISIBILITY(default); ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/postypes.h:68:43: error: expected ';' after top level declarator; namespace std _GLIBCXX_VISIBILITY(default); ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:41:10: note: submodule of top-level module 'std' implicitly imported here; #include <cwchar> // For WEOF, wmemmove, wmemset, etc.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:22173,error,error,22173,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"..; -->. `mcstudy.genParDataSet()` is empty despite setting `keepGenData=True`:; ```python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""); pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""); pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x)); mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(); print(""yes"" if gen_ds else ""no""); ```. This is still the case if an external constraint is used:; ```python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""); pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""); pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). mcstudy = r.RooMCStudy(pdf, r.RooArgSet(x), r.RooFit.ExternalConstraints(constraint)); mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(); print(""yes"" if gen_ds else ""no""); ```. This is not the case if an internal constraint is used:; ```python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); pdf1 = ws.factory(""Gaussian::pdf1(x, m[-1, 1], s[5, 10])""); pdf2 = ws.factory(""Gaussian::pdf2(x, m, s)""); pdf = ws.factory(""SUM::pdf(N1[0, 100] * pdf1, N2[0, 100] * pdf2)""). s = ws.var(""s""); constraint = ws.factory(""Gaussian::constraint(s, cm[7], cs[1])""). prodpdf = ws.factory(""PROD::prodpdf({pdf,constraint})""). mcstudy = r.RooMCStudy(prodpdf, r.RooArgSet(x), r.RooFit.Constrain(s)); mcstudy.generate(1, 1000, True). gen_ds = mcstudy.genParDataSet(); print(""yes"" if gen_ds else ""no""); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 6.24/06; macOS; conda-forge distribution. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9490:3192,down,download,3192,https://root.cern,https://github.com/root-project/root/issues/9490,1,['down'],['download']
Availability,"..; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8145:1159,Error,Error,1159,https://root.cern,https://github.com/root-project/root/issues/8145,1,['Error'],['Error']
Availability,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366:3963,down,download,3963,https://root.cern,https://github.com/root-project/root/issues/7366,2,"['down', 'failure']","['download', 'failure']"
Availability,.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:9494,error,error,9494,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,".26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:22:; In file included from /usr/include/sched.h:29:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:230:3: error: use of undeclared identifier 'memory_order_release'; io_uring_smp_store_release(cq->khead, *cq->khead + nr);; ^; /usr/include/liburing/barrier.h:72:10: note: expanded from macro 'io_uring_smp_store_release'; memory_order_release); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:20244,error,error,20244,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,".27759e-006 STRATEGY= 1 ERROR MATRIX ACCURATE; EXT PARAMETER STEP FIRST; NO. NAME VALUE ERROR SIZE DERIVATIVE; 1 p0 -3.92352e+004 3.69975e+005 4.36167e+000 -1.48093e-007; 2 p1 1.96154e+004 1.84897e+005 3.42375e+000 -3.06657e-007; <ROOT.TFitResultPtr object at 0x16B2CEE8>. ```; both p1 and p0 are BS. ### Reproducer. ```; import ROOT, numpy; x=numpy.array([1,2,3.0]); xerr=numpy.array([1,1,1.0]); yerr=numpy.array([0.1,0.1,0.1]); y=numpy.array([6.0,5,4]); a=ROOT.TGraphErrors(len(x),x,y,xerr,yerr); a.Fit(""pol1"", ""V""). ```; ### ROOT version. ```; ROOT Version 5.34/38 12 March 2018 (on WINDOWS); Python 2.7.16 (v2.7.16:413a49145e, Mar 4 2019, 01:30:55) [MSC v.1500 32 bit (Intel)] on win32; numpy in c:\python27\lib\site-packages (1.16.6); ```. ### Installation method. from package installer (windows) VS13. ### Operating system. Windows 11. ### Additional context. tested with; ROOT 6.26/10 complied from source on Ubuntu LTS 2022; Python 3.10.6 (main, May 29 2023, 11:10:38) [GCC 11.3.0] on linux; same error!. ```; a.Fit(""pol1"",""V""). **********. ** 10 **SET NOGRAD. **********. PARAMETER DEFINITIONS:. NO. NAME VALUE STEP SIZE LIMITS. 1 p0 -3.92352e+04 3.69975e+05 no limits. 2 p1 1.96154e+04 1.84897e+05 no limits. **********. ** 11 **SET ERR 1. **********. **********. ** 12 **SET PRINT 2. **********. **********. ** 13 **SET STR 1. **********. NOW USING STRATEGY 1: TRY TO BALANCE SPEED AGAINST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:1543,error,error,1543,https://root.cern,https://github.com/root-project/root/issues/13895,1,['error'],['error']
Availability,".28.04/core/meta/inc -I/home/maxnoe/Downloads/root-6.28.04/core/cont/inc -I/home/maxnoe/Downloads/root-6.28.04/core/gui/inc -I/home/maxnoe/Downloads/root-6.28.04/core/thread/inc -I/home/maxnoe/Downloads/root-6.28.04/core/foundation/inc -I/home/maxnoe/Downloads/root_build/ginclude -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -std=c++17 -fPIC -fdiagnostics-color=always -MD -MT core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -MF core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o.d -o core/textinput/CMakeFiles/TextInput.dir/src/Getline.cxx.o -c /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx; In file included from /usr/include/c++/13.2.1/cstring:42,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/Text.h:19,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/textinput/TextInputContext.h:20,; from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:19:; /usr/include/string.h:506:15: error: declaration of ‘size_t strlcpy(char*, const char*, size_t) noexcept’ has a different exception specifier; 506 | extern size_t strlcpy (char *__restrict __dest,; | ^~~~~~~; In file included from /home/maxnoe/Downloads/root-6.28.04/core/textinput/src/Getline.cxx:13:; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:26:8: note: from previous declaration ‘size_t strlcpy(char*, const char*, size_t)’; 26 | size_t strlcpy(char *dst, const char *src, size_t siz);; | ^~~~~~~; /usr/include/string.h:512:15: error: declaration of ‘size_t strlcat(char*, const char*, size_t) noexcept’ has a different exception specifier; 512 | extern size_t strlcat (char *__restrict __dest,; | ^~~~~~~; /home/maxnoe/Downloads/root-6.28.04/core/clib/inc/strlcpy.h:27:8: note: from previous declaration ‘size_t strlcat(char*, const char*, size_t)’; 27 | size_t strlcat(char *dst, const char *src, size_t siz);; | ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13529:1492,Down,Downloads,1492,https://root.cern,https://github.com/root-project/root/issues/13529,1,['Down'],['Downloads']
Availability,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:2763,down,download,2763,https://root.cern,https://github.com/root-project/root/issues/10777,1,['down'],['download']
Availability,".; -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>; #include <iostream>; using namespace std;. void aa1(); {; cout<<""as""<<endl;; }. on Mac OS X 10.15; running with ; `root aa1.cpp` OK. ; `g++ aa1.cpp 'root-config --libs --cflags' ` OK. ; but ; `root aa1.cpp+` not OK. ; ```; root[000000]:>; Processing aa1.cpp+...; Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so; In file included from input_line_9:6:; In file included from ././aa1.cpp:1:; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace; using ::signbit;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace; using ::fpclassify;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace; using ::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:1295,error,error,1295,https://root.cern,https://github.com/root-project/root/issues/8418,1,['error'],['error']
Availability,".; ```; In file included from G__DDG4 dictionary payload:445:; In file included from /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4Config.h:100:; /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4TrackingAction.h:18:10: fatal error: 'G4VUserTrackInformation.hh' file not found; #include ""G4VUserTrackInformation.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:1169,error,errorDev,1169,https://root.cern,https://github.com/root-project/root/issues/6791,1,['error'],['errorDev']
Availability,".SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**; ; Many thanks in advance for the fix that would be super helpful, ; In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),; Best, ; Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; ymin = 0. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:2664,error,error,2664,https://root.cern,https://github.com/root-project/root/issues/16070,1,['error'],['error']
Availability,".Snapshot(""atree"", ""sig.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""); r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""); fsig = r.TFile.Open(""sig.root""); tsig = fsig.atree; fbkg = r.TFile.Open(""bkg.root""); tbkg = fbkg.atree; foth = r.TFile.Open(""oth.root""); toth = foth.atree; fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""); dl.AddVariable(""v"", ""v"", """", ""F""); dl.AddVariable(""u"", ""u"", """", ""F""); dl.AddSpectator(""e"", ""entry number"", """"); dl.AddTree(tsig, ""sig""); dl.AddTree(tbkg, ""bkg""); dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""); fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""); fact.BookMethod(; dl,; r.TMVA.Types.kBDT,; ""BDT"",; r""!H:!V:nTrees=500:BoostType=Grad""; r"":UseBaggedGrad""; ); fact.TrainAllMethods(); fact.TestAllMethods(); fact.EvaluateAllMethods(). fout.Close(); model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""); ```; Ends with error:; ```; <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file; ***> abort program execution; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-cf70daeeb34f> in <module>; 34 ; 35 fout.Close(); ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:; RReader::RReader(TMVA::Experimental::RReader&&) =>; TypeError: could not convert argument 1; RReader::RReader(const string& path) =>; runtime_error: FATAL error; ```. ### Setup; ROOT 6.22/06; macOS; conda-forge",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7900:1758,error,error,1758,https://root.cern,https://github.com/root-project/root/issues/7900,2,['error'],['error']
Availability,".StdTuple; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:151: Failure; Expected equality of these values:; (alignof(std::tuple<char, int64_t, char>)); Which is: 4; otherField->GetAlignment(); Which is: 8; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ FAILED ] RNTuple.StdTuple (317 ms); [ --- ]; [----------] 18 tests from RNTuple (7848 ms total); [----------] Global test environment tear-down; [==========] 18 tests from 1 test suite ran. (7848 ms total); [ PASSED ] 16 tests.; [ FAILED ] 2 tests, listed below:; [ FAILED ] RNTuple.StdPair; [ FAILED ] RNTuple.StdTuple; 2 FAILED TESTS. ~~~. gtest-tree-ntuple-v7-test-ntuple-extended fails with:; Fatal: fWritePage[otherIdx].IsEmpty() violated. ~~~; 520/1318 Test #454: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 73.15 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:3029,down,down,3029,https://root.cern,https://github.com/root-project/root/issues/12427,1,['down'],['down']
Availability,".cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**; ```; Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized ; 481,078 context-switches # 0.004 M/sec ; 710 cpu-migrations # 0.005 K/sec ; 3,512,992 page-faults # 0.026 M/sec ; 456,851,617,713 cycles # 3.370 GHz ; 310,271,051,553 instructions # 0.68 insn per cycle ; 65,664,345,345 branches # 484.369 M/sec ; 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed; ```; **perf stat (after)**; ```; Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized ; 343,733 context-switches # 0.003 M/sec ; 327 cpu-migrations # 0.003 K/sec ; 1,567,401 page-faults # 0.014 M/sec ; 391,763,587,760 cycles # 3.382 GHz ; 273,699,878,762 instructions # 0.70 insn per cycle ; 57,799,809,349 branches # 498.961 M/sec ; 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed; ```; *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**; ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png); ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**; ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png); ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png); *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385:1116,fault,faults,1116,https://root.cern,https://github.com/root-project/root/pull/3385,1,['fault'],['faults']
Availability,".cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I currently cannot build the master branch due to the fact that the hardcoded SHA256 checksum in /builtins/xrootd/CMakeLists.txt is not the same checksum as the one obtained when downloading the file. There is a mismatch. There is a check that makes the build fail in this case. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The checksum in /builtins/xrootd/CMakeLists.txt is the same as the one obtained from the actually downloaded file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; git clone https://github.com/root-project/root.git; mkdir build; cd build; cmake ../root/ -Droofit_multiprocess=ON -Dminuit2=ON -Dtesting=ON -DCMAKE_IGNORE_PATH=""/home/zef/miniconda3/bin;/home/zef/miniconda3/include;/home/zef/miniconda3/lib"" -Dccache=ON -DPYTHON_EXECUTABLE=""/usr/bin/python3"" -Dbuiltin_fftw3=On; ```. Note that the checksum obtained by `sha256sum xrootd-5.4.2.tar.gz` is: 2b394270c55cb3d14f3c44b692311db99d2d25278882b513d4d564b68a58ed4a. The checksum hardcoded in the CMAKE file is: 84e8a9a2bcad116df479f94e985c287dd99fbac0613d4fbb61f4ccc0cef81fa3. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version: master branch as of now; Operating system: Pop!OS; Obtained root through git clone of master branch. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10503:1917,down,download,1917,https://root.cern,https://github.com/root-project/root/issues/10503,1,['down'],['download']
Availability,".ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. ```. ## Expected behavior; no FPE. ## To Reproduce. Code; ```. #include <TCanvas.h>; #include <TPad.h>; #include <TBox.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449:2564,mask,masks,2564,https://root.cern,https://github.com/root-project/root/issues/6449,1,['mask'],['masks']
Availability,".format(treeName)); print(""cutString = {}"".format(cutString)) . infile = RT.TFile.Open(infileName); dataframe = RT.RDataFrame(treeName, infile). histmodel = RT.RDF.TH1DModel(histName, histName, binning[0], binning[1], binning[2]). hist = dataframe.Filter(cutString).Histo1D(histmodel, distName) ; print(""-----""); print(""hist.GetEntries() = {}"".format(hist.GetEntries())); print(""hist.GetSumOfWeights()= {}"".format(hist.GetSumOfWeights())); print(""-----""); ```; I attached the test file on the ROOT forum (which only contains 3 entries on purpose); Please read the following strange observations that we made about it which to us do not make sense ; https://root-forum.cern.ch/t/rdataframe-and-createpoxy-ttreereadervalue-error-for-selection-on-string-branch-in-filter-method/43488. But I get the error; ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch sample contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```; With bigger files I get many times this error and the number of entries and integral of the histogram hist is 0 while it should not be . Since for the current file doing a scan of the tree I have:; ```; root -l Zee_Sh221-0.root ; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; (TFile *) 0x4418460; root [1] Nominal->Scan(""sample:MET""); ************************************; * Row * sample * MET *; ************************************; * 0 * Zl * 158.14303 *; * 1 * Zbl * 180.14964 *; * 2 * Zbl * 253.89321 *; ************************************; ```; This error only occurs when the selection in Filter function includes a branch of type string.; If I have a selection only on double, float and so on without string branch everything is fine. Would you know how to solve that ?; I also tried using python3 but same error occurs.; And using the corresponding TTree command works so it does not comes from the root file:; ```; root -l Zee_Sh221-0.root; root [0] ; Attaching file Zee_Sh221-0.root as _file0...; root [1] TTree *tre",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169:1911,error,error,1911,https://root.cern,https://github.com/root-project/root/issues/7169,1,['error'],['error']
Availability,.h ROOT/RFile.hxx /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06/io/io/inc/LinkDef.h; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:23:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/RtypesCore.h:28:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:8440,error,error,8440,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,".h defined here; module ""bits/stl_pair.h"" {; ^; /usr/include/c++/13/bits/memory_resource.h:46:11: note: '/usr/include/c++/13/bits/utility.h' included multiple times, additional include site in header from module 'std.memory_resource'; # include <bits/utility.h> // index_sequence; ^; /opt/root_build/etc/cling/std.modulemap:257:10: note: std.memory_resource defined here; module ""memory_resource"" [optional] {; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /opt/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /opt/root_build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:2033,error,error,2033,https://root.cern,https://github.com/root-project/root/issues/13450,1,['error'],['error']
Availability,.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:12220,error,error,12220,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,".h:66:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\ATLMFC\include\atlcore.h:25:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous; byte * pNetworkData,; ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'; enum class byte : unsigned char {};; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; root [1]; ```; To illustrate this, compiling this code:; ```; #include <iostream>; using namespace std;; #include <atlstr.h>. int main() {; std::cout << ""hello world!"" << std::endl;; return 0;; }; ```; is enough to generate the errors:; ```; C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx; atlstr.cxx; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```; And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:; ```; root [0] #include <atlst",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14602:2764,error,errors,2764,https://root.cern,https://github.com/root-project/root/issues/14602,1,['error'],['errors']
Availability,".rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]; 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]; 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:25665,error,error,25665,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,".rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]; 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]; 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:2493,error,error,2493,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,".rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]; 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]; 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]; 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]; 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\C",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:2990,error,error,2990,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### Reproducer. While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Cont,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16486:3122,error,error,3122,https://root.cern,https://github.com/root-project/root/issues/16486,1,['error'],['error']
Availability,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:2260,error,errors,2260,https://root.cern,https://github.com/root-project/root/issues/7982,1,['error'],['errors']
Availability,".txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:3175,error,errors,3175,https://root.cern,https://github.com/root-project/root/issues/7982,1,['error'],['errors']
Availability,"/*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:8470,error,error,8470,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"/../../include/c++/11.2.0/bits/stl_pair.h:391:3: note: in instantiation of template class 'std::__and_<std::is_copy_assignable<int>, std::is_copy_assignable<MyClass> >' requested here; __and_<is_copy_assignable<_T1>,; ^; ./OtherClass.h:9:27: note: in instantiation of template class 'std::pair<int, MyClass>' requested here; std::pair<int, MyClass> c;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1058:14: note: in instantiation of template class 'std::__is_copy_assignable_impl<MyClass, true>' requested here; : public __is_copy_assignable_impl<_Tp>::type; ^; ROOT_prompt_2:1:6: note: in instantiation of template class 'std::is_copy_assignable<MyClass>' requested here; std::is_copy_assignable<MyClass>::value; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1057:12: note: definition of 'std::is_copy_assignable<MyClass>' is not complete until the closing '}'; struct is_copy_assignable; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class MyClass with content:. #line 1 ""dict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""MyClass.h""; #include ""OtherClass.h"". #undef _BACKWARD_BACKWARD_WARNING_H. /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1060:7: error: static_assert failed ""template argument must be a complete class or an unbounded array""; static_assert(std::__is_complete_or_unbounded(__type_identity<_Tp>{}),; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ROOT_prompt_2:1:6: note: in instantiation of template class 'std::is_copy_assignable<MyClass>' requested here; std::is_copy_assignable<MyClass>::value; ^; root [3]; ```. ### Setup; 1. ROOT version: 6.22.08; 2. Operating system: Archlinux; 3. Self-built ROOT with GCC 11.2.0 using C++14 dialect; 4. Compiler for the reproducer code: GCC 11.2.0, Clang 13.0.1. ### Additional context; Verified also on CentOS 7 using GCC 7 from devtoolset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:6134,error,error,6134,https://root.cern,https://github.com/root-project/root/issues/10512,1,['error'],['error']
Availability,"//bugs.gentoo.org/879323. Important part of the build log is below.; ```. /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/jets.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/jets.C; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:767:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 767 | + ISTAT); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: ‘cfget_’ was previously declared here; 107 | void cfget_(int *lundes, int *medium, int *nwrec, int *nwtak, char *mbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:398:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 398 | CFSTAT = CFSTATI (NAME, INFO, LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type mismatch in parameter 4; 171 | int cfstati_(char *fname, int *info, int *lgname); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: ‘cfstati_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:386:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 386 | CALL CFOPEI (LUNDES,MEDIUM,NWREC,NVMODE,NBUF,NAME,ISTAT,LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type mismatch in parameter 9; 225 | void cfopei_(int *lundes, int *medium, int *nwrec, int *mode, int *nbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:965,error,error,965,https://root.cern,https://github.com/root-project/root/issues/11657,1,['error'],['error']
Availability,"//cling""; -I""/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.24.06-f0308/aarch64-centos7-gcc8-opt/include/""; -I""/cvmfs/sft.cern.ch/lcg/releases/Python/3.9.6-b0f98/aarch64-centos7-gcc8-opt/include""; -I""/home/sftnight/build/workspace/lcg_release_pipeline/build/projects/ROOT-6.24.06/src/ROOT-6.24.06-build/include""; -I""/data/sftnight/build/workspace/lcg_release_pipeline/install/Vc/1.4.2/aarch64-centos7-gcc8-opt/include""; -I""/data/sftnight/build/workspace/lcg_release_pipeline/install/zlib/1.2.11/aarch64-centos7-gcc8-opt/include""; -I""/data/sftnight/build/workspace/lcg_release_pipeline/install/jsonmcpp/3.9.1/aarch64-centos7-gcc8-opt/include""; -I""/home/sftnight/build/workspace/lcg_release_pipeline/build/projects/ROOT-6.24.06/src/ROOT-6.24.06-build/include/""; -I""/data/sftnight/build/workspace/lcg_release_pipeline/install/tbb/2020_U2/aarch64-centos7-gcc8-opt/include""'; ```; The first three elements are directly the contents of `$ROOT_INCLUDE_PATH` which in the that setup, which is . ```; $ echo $ROOT_INCLUDE_PATH; /cvmfs/sft.cern.ch/lcg/views/LCG_101arm/aarch64-centos7-gcc8-opt/include/Geant4:/cvmfs/sft.cern.ch/lcg/views/LCG_101arm/aarch64-centos7-gcc8-opt/include:/cvmfs/sft.cern.ch/lcg/releases/Python/3.9.6-b0f98/aarch64-centos7-gcc8-opt/include/python3.9; ```; ### To Reproduce; On an ARM64 system with CVMFS ; ```; $ source /cvmfs/sft.cern.ch/lcg/views/LCG_101arm/aarch64-centos7-gcc8-opt/setup.sh; $ python -c 'import ROOT; print(ROOT.gSystem.GetIncludePath())'; ```. ### Expected behavior. On a Centos7 system (e.g. lxplus.cern.ch), then list is different. ```; -I$ROOTSYS/include; -I""/cvmfs/sft.cern.ch/lcg/views/LCG_101/x86_64-centos7-gcc8-opt/include/Geant4""; -I""/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc8-opt/include""; -I""/cvmfs/sft.cern.ch/lcg/views/LCG_101/x86_64-centos7-gcc8-opt/src/cpp""; -I""/cvmfs/sft.cern.ch/lcg/views/LCG_101/x86_64-centos7-gcc8-opt/include""; -I""/cvmfs/sft.cern.ch/lcg/releases/Python/3.9.6-b0f98/x86_64-centos7-gcc8-opt/include/python3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9243:1801,echo,echo,1801,https://root.cern,https://github.com/root-project/root/issues/9243,1,['echo'],['echo']
Availability,"//github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Should build? :). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash; cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core; gh pr checkout 75166; brew install --build-from-source root; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context; <!--; Add any other context about the problem here.; -->. Full error:. ```; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:31:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required; using ::signbit;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:1392,error,error,1392,https://root.cern,https://github.com/root-project/root/issues/7881,1,['error'],['error']
Availability,"/13/bits/utility.h' included multiple times, additional include site in header from module 'std.memory_resource'; # include <bits/utility.h> // index_sequence; ^; /opt/root_build/etc/cling/std.modulemap:257:10: note: std.memory_resource defined here; module ""memory_resource"" [optional] {; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /opt/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /opt/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /opt/root_build/etc/cling/lib/clang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:2169,error,error,2169,https://root.cern,https://github.com/root-project/root/issues/13450,1,['error'],['error']
Availability,/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^. ### Reproducer. While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16486:2888,error,error,2888,https://root.cern,https://github.com/root-project/root/issues/16486,1,['error'],['error']
Availability,"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1685,error,errors,1685,https://root.cern,https://github.com/root-project/root/issues/14113,1,['error'],['errors']
Availability,"/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:11804,error,error,11804,https://root.cern,https://github.com/root-project/root/issues/12372,1,['error'],['error']
Availability,"/Interpreter/Value.h:15:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstdint> // for uintptr_t; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:152:23: error: use of undeclared identifier 'uintptr_t'; return (T) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:166:24: error: use of undeclared identifier 'uintptr_t'; return (T*) (uintptr_t) V.getAs<void*>();; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/Value.h:313:25: error: use of undeclared identifier 'uintptr_t'; return (void*)getAs<uintptr_t>();; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/couet/git/root-bin/include/Rtypes.h:23:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /Users/couet/git/root-bin/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/couet/git/root-bin/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/couet/git/root-bin/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:3581,error,error,3581,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:34:10: note: submodule of top-level module 'std' implicitly imported here; #include <typeinfo>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/couet/git/root-bin/include/Rtypes.h:197:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/include/TClassEdit.h:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string_view>; ^; /Users/couet/git/root-bin/include/TClassEdit.h:126:49: error: no type named 'string' in namespace 'std'; virtual bool ExistingTypeCheck(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:127:43: error: no type named 'string' in namespace 'std'; std::string & /*result*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEd",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:6948,error,error,6948,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1027:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/functional:518:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__functional/function.h:590:21: error: no template named 'is_trivially_destructible'; did you mean 'is_trivially_constructible'?; is_trivially_destructible<_Fun>::value> {};; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_constructible.h:22:29: note: 'is_trivially_constructible' declared here; struct _LIBCPP_TEMPLATE_VIS is_trivially_constructible; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:24944,error,error,24944,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 118 | template<class F, class INTEGER, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:116:60: note: ‘template<class SubC> template<class F, class Cond> std::vector<typename std::result_of<F()>::type> ROOT::TExecutorCRTP<SubC>::Map(F, unsigned int)’; 116 | template<class F, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:230:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 230 | auto TExecutorCRTP<SubC>::Map(F func, const std::vector<T> &args) -> std::vector<typename std::result_of<F(T)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11495:7024,error,error,7024,https://root.cern,https://github.com/root-project/root/issues/11495,2,['error'],['error']
Availability,"/TypeTraits.hxx TUnixSystem.h root_std_complex.h GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behav",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:7034,fault,fault,7034,https://root.cern,https://github.com/root-project/root/issues/11430,1,['fault'],['fault']
Availability,"/Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1088:24: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:131:57: note: expanded from macro 'atomic_store'; #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: error: expected parameter declarator; template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:81: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:81: note: expanded from macro 'atomic_exchange'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:7802,error,error,7802,https://root.cern,https://github.com/root-project/root/issues/6454,1,['error'],['error']
Availability,"/Users/pcanal/root_working/code/master/roottest/cling/return/./run.C:7:1: error: unknown type name 't02'; t02 t;; ^; ```. ### Reproducer. With the files in [trun.tar.gz](https://github.com/root-project/root/files/15279954/trun.tar.gz); we can set that the declaration in the `ProcessLine` are properly seen in the next lines. For example this version of `trun.C`:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing trun.C...; Assertion failed: (Node->getDependence() == ExprDependence::None), function VisitBinaryOperator, file DynamicLookup.cpp, line 628.; Abort trap: 6; ```. And weirdly:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; t_1 = 3;; }; ```; fails with:; ```; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: warning: declaration without the 'auto' keyword is deprecated: function '__cling_Un1Qu30' [-Wdeprecated-declaration",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15481:1417,error,error,1417,https://root.cern,https://github.com/root-project/root/issues/15481,1,['error'],['error']
Availability,"/Users/sftnight/build/release/include\ROOT/RDF/ActionHelpers.hxx:25:; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1434:36: error: use of undeclared identifier 'M_PI'; 1306: T DeltaPhi(T v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1455:68: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1473:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1491:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(T v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1510:113: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR2(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1524:112: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1537:54: error: use of undeclared identifier 'M_PI'; 1306: T DeltaR(T eta1, T eta2, T phi1, T phi2, const T c = M_PI); 1306: ^; 1306: Error in <ACLiC>: Executing 'C:\Users\sftnight\build\release\bin\rootcling -v0 ""--lib-list-prefix=C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_map"" -f ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_dict.cxx"" -rml test_ctors_C -rmf ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C.rootmap"" -DR__ACLIC_ROOTMAP -I%ROOTSYS%\include -IC:/Users/sftnight/build/release/roottest/root/dataframe -D__ACLIC__ ""C:/Users/sft",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6727:1947,error,error,1947,https://root.cern,https://github.com/root-project/root/pull/6727,1,['error'],['error']
Availability,"/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:; ```; JUPYTER_PATH=ROOTSYS/etc/notebook; JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook; ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; The correct environment variables would be; ```; JUPYTER_PATH=/usr/local/etc/root/notebook; JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook; ```; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; 1. Build and install `latest-stable` branch; 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51; 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`; 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT version: 6.24/00; 2. Operating system: openSUSE Tumbleweed -- release: 20210606; 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]; 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:; a. `gnuinstall=ON`; b. `imt=ON`; c. `minuit2=ON`; d. `rpath=ON`; e. `pyroot=ON`; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358); <!--; Add any other context about the problem h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8435:1475,error,error,1475,https://root.cern,https://github.com/root-project/root/issues/8435,1,['error'],['error']
Availability,"/build/jenkins/night/LABEL/mac1014/SPEC/cxxmod-noimt/root/test/testGenVectorVc.cxx:194:1: error: redefinition of 'Point' as different kind of symbol; using Point = ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<T>, ROOT::Math::DefaultCoordinateSystemTag>;; ^; In module 'Darwin' imported from /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/assert.h:42:; /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/MacTypes.h:538:8: note: previous definition is here; struct Point {; ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3605:90,error,error,90,https://root.cern,https://github.com/root-project/root/pull/3605,1,['error'],['error']
Availability,/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <THttpEngine::Create>: Starting HTTP server on port 127.0.0.1:9005; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt6WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTQt5WebDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Error in <TMacOSXSystem::FindDynamicLibrary>: libROOTCefDisplay[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /Users/build/lib:/Users/build/lib::.:/Users/build/lib:/usr/local/lib:/usr/X11R6/lib:/usr/lib:/lib:/lib/x86_64-linux-gnu:/usr/local/lib64:/usr/lib64:/lib64:; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Opening in existing browser session.; [2237:259:0425/163421.850831:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = efaidnbmnnnibpcajpcglclefdferfgrtgtt; [2237:259:0425/163422.333445:ERROR:extension_registrar.cc(539)] Failed to unregister service worker for extension efaidnbmnnnibpcajpcglclefdferfgrtg,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15340:2010,Error,Error,2010,https://root.cern,https://github.com/root-project/root/issues/15340,1,['Error'],['Error']
Availability,"/builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:143:26: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:196:40: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:243:47: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t {aka long unsigned int}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:265:79: warning: format '%p' expects argument of type 'void*', but argument 3 has type 'OM_uint32 {aka unsigned int}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:421:29: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:498:35: warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'gss_cred_id_t {aka gss_cred_id_desc_struct*}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:666:53: warning: format '%s' expects a matching 'char*' argument [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:733:72: warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka long unsigned int}' [-Wformat=]; /builddir/build/BUILD/root-6.08.04/net/globusauth/src/GlobusAuth.cxx:1013:47: error: format not a string literal and no format arguments [-Werror=format-security]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/376:1694,error,error,1694,https://root.cern,https://github.com/root-project/root/pull/376,1,['error'],['error']
Availability,"/builddir/build/BUILD/root-6.08.04/test/stressEntryList.cxx:616:42: error: 'function' is not a member of 'std'; using fcnCharPtrPair = std::pair<std::function<bool()>,const char*>;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/353:68,error,error,68,https://root.cern,https://github.com/root-project/root/pull/353,1,['error'],['error']
Availability,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o; ninja: build stopped: subcommand failed.; ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:4334,error,error,4334,https://root.cern,https://github.com/root-project/root/issues/7881,4,"['Error', 'error']","['Error', 'error']"
Availability,"/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:13109,error,error,13109,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"/home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:4175,error,error,4175,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"/home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; 12 errors generated.; [4730/6768] Building CXX object io/io/CMakeFiles/RIO.dir/src/TBufferJSON.cxx.o; ninja: build stopped: subcommand failed.; ```. In addition, I found that the last time I build ROOT using clang trunk (before version 16), it was fine. So I guess there're some changes in the upstream that trigger this failure. However, I'm not sure if is it a false positive of clang diagnostic or ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128:5607,error,error,5607,https://root.cern,https://github.com/root-project/root/issues/11128,1,['error'],['error']
Availability,"/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> // common_type_t, make_signed_t; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:63:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator_base_types.h:67:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits> // For __void_t, is_convertible; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:25996,error,error,25996,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:11660,error,error,11660,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"/libCling.so; 0x0000005502a31224 in TApplication::ExecuteFile(char const*, int*, bool) at TApplication.cxx:? from /mnt/root-build-ubuntu/lib/libCore.so; 0x00000055028712f0 in TRint::ProcessLineNr(char const*, char const*, int*) + 0x7c from /mnt/root-build-ubuntu/lib/libRint.so; 0x00000055028731ec in TRint::Run(bool) + 0x2d8 from /mnt/root-build-ubuntu/lib/libRint.so; 0x0000005500000fe8 in main + 0x54 from /mnt/root-build-ubuntu/bin/root.exe; 0x00000055030c73fc in <unknown> from /lib/aarch64-linux-gnu/libc.so.6; 0x00000055030c74cc in __libc_start_main + 0x98 from /lib/aarch64-linux-gnu/libc.so.6; 0x0000005500001070 in _start + 0x30 from /mnt/root-build-ubuntu/bin/root.exe; Root > make[2]: *** [CMakeFiles/hsimple.dir/build.make:79: tutorials/hsimple.root] Error 129; make[2]: Target 'CMakeFiles/hsimple.dir/build' not remade because of errors.; make[2]: Leaving directory '/mnt/root-build-ubuntu'; make[1]: *** [CMakeFiles/Makefile2:7589: CMakeFiles/hsimple.dir/all] Error 2; make[1]: Target 'all' not remade because of errors.; make[1]: Leaving directory '/mnt/root-build-ubuntu'; make: *** [Makefile:156: all] Error 2; make: Target 'default_target' not remade because of errors.; make: Leaving directory '/mnt/root-build-ubuntu'; ```. ### Reproducer. ```; # Enable multiarch support for docker (https://hub.docker.com/r/multiarch/qemu-user-static/); docker run --privileged --rm multiarch/qemu-user-static --reset --persistent yes; # Start ubuntu docker container ; docker run --platform linux/arm64/v8 --rm -it ubuntu:latest; # Install minimal dependencies; apt-get update; apt-get install build-essential git cmake python3; # Clone ROOT to commit just before problem; git clone https://github.com/root-project/root; git -C root reset --hard a886646; # Apply unrelated patch (see below); sed 's/^ \([^s].*\.cxx\)/ src\/\1/g' hist/hist/CMakeLists.txt; # Configure and build (took 10 hours); cmake -Broot-build -Sroot -Dasimage=OFF -Dclad=OFF -Ddataframe=OFF -Ddavix=OFF -Dfftw3=OFF -Dgdml=of",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845:3209,Error,Error,3209,https://root.cern,https://github.com/root-project/root/issues/13845,2,"['Error', 'error']","['Error', 'errors']"
Availability,"/nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce the issue with Nix. It can be proceed as long as `nix` or `docker` is available. Copyright notice: The `default.nix` is derived/taken from [pkgs/applications/science/misc/root/default.nix](https://github.com/NixOS/nixpkgs/blob/2787fc7d1e51404678614bf0fe92fc296746eec0/pkgs/applications/science/misc/root/default.nix) in [Nixpkgs](https",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2394,error,error,2394,https://root.cern,https://github.com/root-project/root/issues/11920,1,['error'],['error']
Availability,"/opt/root/cur) by calling THtml::SetInputDir(); Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html; Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681); dot: compound.c:78: boxIntersectf: Assertion `0' failed.; Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot!. Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");; root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE.; Error in <THtml::MakeClass>: Unknown class 'TTree'!. root [6] TTree t;. works fine. ### Expected behavior; Should report no errors, should create TTree documentation. ### To Reproduce; My ~/.rootrc is. > \# THtml specific settings.; Root.Html.OutputDir: htmldoc/; Root.Html.SourcePrefix:; Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {; THtml html;; html.CreateHierarchy();; html.MakeAll();; }. It produces the output I mentioned. . ### Setup; 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version).; 2. Arch Linux.; 3. Built from .tar.gz package. ### Additional context; TTree documentation exists on the site, but I very much want to have offline documentation.; First I wanted to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295:1533,Error,Error,1533,https://root.cern,https://github.com/root-project/root/issues/7295,1,['Error'],['Error']
Availability,"/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:230:3: error: use of undeclared identifier 'memory_order_release'; io_uring_smp_store_release(cq->khead, *cq->khead + nr);; ^; /usr/include/liburing/barrier.h:72:10: note: expanded from macro 'io_uring_smp_store_release'; memory_order_release); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:899:11: error: use of undeclared identifier 'memory_order_acquire'; khead = io_uring_smp_load_acquire(ring->sq.khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:935:9: error: use of undeclared identifier 'memory_order_acquire'; return io_uring_smp_load_acquire(ring->cq.ktail) - *ring->cq.khead;; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:941:15: error: unknown type name '_Bool'; static inline bool io_uring_cq_eventfd_enabled(const struct io_uring *ring); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stdbool.h:15:14: note: expanded from macro 'bool'; #define bool _Bool; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:954:11: error: unknown type name '_Bool'; bool enabled); ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:20667,error,error,20667,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o.d -o interpreter/llvm/src/tools/clang/lib/Lex/CMakeFiles/obj.clangLex.dir/Lexer.cpp.o -c /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp: In member function 'bool clang::Lexer::SkipBlockComment(clang::Token&, const char*, bool&)':; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:34: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected primary-expression before 'const'; 2549 | !vec_any_eq(*(const vector unsigned char*)CurPtr, Slashes)); | ^~~~~; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2549:28: error: expected ')' before 'const'; /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_ppc64le_gcc10/lcg/root/6.24.07-12a11ac5dbf21d7c2a6a8cef92c99bc0/root-6.24.07/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2550:21: error: expected ')' before ';' token; 2550 | CurPtr += 16;; | ^; | ); In file included from /scratch/cmsbuild/jenkins_b/workspace/ib-run-pr-tests/testBuildDir",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9424:5141,error,error,5141,https://root.cern,https://github.com/root-project/root/issues/9424,1,['error'],['error']
Availability,"/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/Value.h:17:10: note: submodule of top-level m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:2148,error,error,2148,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"/test/ntuple_serialize.cxx:121: Failure; Value of: err.what(); Expected: has substring ""CRC32""; Actual: 0x2aa065e7348 pointing to ""The RNTuple format is too new (version 256) (unchecked RResult access!)\nAt:\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t, uint32_t&) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:629]\n static RResult<unsigned int> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeEnvelope(const void*, uint32_t) [/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:646]\n"" (of type char const*); [ FAILED ] RNTuple.SerializeEnvelope (0 ms); [ RUN ] RNTuple.SerializeFrame; [ OK ] RNTuple.SerializeFrame (0 ms); [ RUN ] RNTuple.SerializeFeatureFlags; [ OK ] RNTuple.SerializeFeatureFlags (0 ms); [ RUN ] RNTuple.SerializeLocator; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_serialize.cxx:341: Failure; Failed; unsupported locator type should throw; [ FAILED ] RNTuple.SerializeLocator (0 ms); [ RUN ] RNTuple.SerializeEnvelopeLink; [ OK ] RNTuple.SerializeEnvelopeLink (0 ms); [ RUN ] RNTuple.SerializeClusterSummary; [ OK ] RNTuple.SerializeClusterSummary (0 ms); [ RUN ] RNTuple.SerializeClusterGroup; [ OK ] RNTuple.SerializeClusterGroup (0 ms); [ RUN ] RNTuple.SerializeEmptyHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.SerializeEmptyHeader (190 ms); [ RUN ] RNTuple.SerializeHeader; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:13155,Failure,Failure,13155,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Failure'],['Failure']
Availability,"/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:12384,error,error,12384,https://root.cern,https://github.com/root-project/root/issues/12429,1,['error'],['error']
Availability,"/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; TDavixFile* https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; KEY: TTree TreeS;1 TreeS; KEY: TTree TreeB;1 TreeB; KEY: TTree Sig;1 TreeS; KEY: TTree Bkg;1 TreeB; `. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; ROOT Version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155:1523,Error,Error,1523,https://root.cern,https://github.com/root-project/root/issues/8155,1,['Error'],['Error']
Availability,"/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwctype:56:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/wctype.h:68:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; #include <_wctype.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; #include <sys/_types/_mbstate_t.h>; ~~~~~~~~^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUnive",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:2953,error,error,2953,https://root.cern,https://github.com/root-project/root/issues/16498,1,['error'],['error']
Availability,"/usr/include/liburing.h:1007:19: error: use of undeclared identifier 'memory_order_acquire'; unsigned tail = io_uring_smp_load_acquire(ring->cq.ktail);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1010:9: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1023:10: error: assigning to 'struct io_uring_cqe *' from incompatible type 'void *'; cqe = NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:23729,error,error,23729,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1025:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1747:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/inplace_merge.h:26:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:51:41: error: no template named 'is_trivially_destructible'; {__incr(integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:55:45: error: no template named 'is_trivially_destructible'; {__set(__s, integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:59:49: error: no template named 'is_trivially_destructible'; {__process(__p, integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/Develop",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:13204,error,error,13204,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"/v1/string_view:1025:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/algorithm:1747:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/inplace_merge.h:26:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:51:41: error: no template named 'is_trivially_destructible'; {__incr(integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:55:45: error: no template named 'is_trivially_destructible'; {__set(__s, integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/destruct_n.h:59:49: error: no template named 'is_trivially_destructible'; {__process(__p, integral_constant<bool, is_trivially_destructible<_Tp>::value>());}; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Develo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:13442,error,error,13442,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,"/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1042:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1055:7: error: no matching function for call to '__io_uring_peek_cqe'; if (!__io_uring_peek_cqe(ring, cqe_ptr, NULL) && *cqe_ptr); ^~~~~~~~~~~~~~~~~~~; /usr/include/liburing.h:993:19: note: candidate function not viable: cannot convert argument of incomplete type 'void *' to 'unsigned int *' for 3rd argument; static inline int __io_uring_peek_cqe(struct io_uring *ring,; ^; /usr/include/liburing.h:1071:22: error: use of undeclared identifier 'memory_order_acquire'; unsigned int head = io_uring_smp_load_acquire(sq->khead);; ^; /usr/include/liburing/barrier.h:75:9: note: expanded from macro 'io_uring_smp_load_acquire'; memory_order_acquire); ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; /usr/include/liburing.h:1086:9: error: cannot initialize return object of type 'struct io_uring_sqe *' with an rvalue of type 'void *'; return NULL;; ^~~~; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:89:16: note: expanded from macro 'NULL'; # define NULL ((void*)0); ^~~~~~~~~~; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO3af69f19b2_dictUmbrella.h); make[2]: *** [io/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:25004,error,error,25004,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"0 indirect) bytes in 19,999 blocks are definitely lost in loss record 3,515 of 3,515; ==12320== at 0x4C2BE7F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==12320== by 0xAD090F2: gsl_rng_alloc (in /usr/lib/libgsl.so.23.0.0); ==12320== by 0x8223765: Allocate (GSLRngWrapper.h:99); ==12320== by 0x8223765: ROOT::Math::GSLMCIntegrator::GSLMCIntegrator(char const*, double, double, unsigned int) (GSLMCIntegrator.cxx:117); ==12320== by 0x108BF5: main (mcintegrator.cpp:8); ==12320==; ==12320== LEAK SUMMARY:; ==12320== definitely lost: 319,984 bytes in 19,999 blocks; ==12320== indirectly lost: 98,770,000 bytes in 19,754 blocks; ==12320== possibly lost: 1,225,000 bytes in 245 blocks; ==12320== still reachable: 340,874 bytes in 4,262 blocks; ==12320== suppressed: 0 bytes in 0 blocks; ==12320== Reachable blocks (those to which a pointer was found) are not shown.; ==12320== To see them, rerun with: --leak-check=full --show-leak-kinds=all; ==12320==; ==12320== For counts of detected and suppressed errors, rerun with: -v; ==12320== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0); ```. After fix:; ```; valgrind --tool=memcheck --leak-check=full --show-leak-kinds=definite \; --undef-value-errors=no ./mcintegrator. ==14294== Memcheck, a memory error detector; ==14294== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==14294== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info; ==14294== Command: ./mcintegrator; ==14294==; ==14294==; ==14294== HEAP SUMMARY:; ==14294== in use at exit: 335,858 bytes in 4,260 blocks; ==14294== total heap usage: 67,782 allocs, 63,522 frees, 101,539,078 bytes allocated; ==14294==; ==14294== LEAK SUMMARY:; ==14294== definitely lost: 0 bytes in 0 blocks; ==14294== indirectly lost: 0 bytes in 0 blocks; ==14294== possibly lost: 0 bytes in 0 blocks; ==14294== still reachable: 335,858 bytes in 4,260 blocks; ==14294== suppressed: 0 bytes in 0 blocks; ==14294== Reachable blocks (those to which a poi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/928:2750,error,errors,2750,https://root.cern,https://github.com/root-project/root/pull/928,3,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"0-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int); inline size_t recv (void *buf_, size_t len_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:625:23: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘void*’; /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int); inline bool recv (message_t *msg_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope; auto it = m_fds.find(fd);; ^~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’; auto it = m_fds.find(fd);; ^~~~~; m_free; Consolidate compiler generated dependencies of target obj.clingInterpreter; [ 73%] Built target obj.clingInterpreter; [ 73%] Built target clingInterpreter; [ 73%] Built target CLING; [ 73%] Built target clad; [ 73%] Built target LLVMRES; Consolidate compiler generated dependencies of target ClingUtils; roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed; make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1; make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors.; CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed; make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:2629,error,error,2629,https://root.cern,https://github.com/root-project/root/issues/10107,1,['error'],['error']
Availability,"0.300000 0.100000; Floating point exception (core dumped); ```. The same compilation with ``-O1`` produces a working executable. Please note that this code is a reproducer obtained from the TColor::RGB2HLS static function. ```; #include <iostream>; #include <stdlib.h>. #include <fenv.h>; #define Float_t float; #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. void FakeRGB2HL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:1480,mask,masks,1480,https://root.cern,https://github.com/root-project/root/issues/6677,1,['mask'],['masks']
Availability,00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx+; -- BEGIN TEST OUTPUT --. Processing /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx+...; Checking FromHumanReadableSize; Checking ToHumanReadableSize; Checking 1024 vs 1.024KiB an 1KB; Checking 2097152 vs 2.09715MiB an 2MB; Checking 4294967296 vs 4.29497GiB an 4GB; Checking 8796093022208 vs 8.79609TiB an 8TB; Checking 18014398509481984 vs 18.0144EiB an 16EB; Checking 16 vs 16B and 16B; Checking 24576 vs 24.576KiB and 24KB; Checking 3.77487e+07 vs 37.7487MiB and 36MB; Checking 5.79821e+10 vs 57.9821GiB and 54GB; Checking 8.90604e+13 vs 89.0604TiB and 81TB; Checking 1.36797e+17 vs 136.797EiB and 121.5EB; Checking 2.1012e+20 vs 210.12ZiB and 182.25ZB; Checking 3.22744e+23 vs 322.744YiB and 273.375YB; (int) 0. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core/assertHumanReadable_cxx.so; In file included from /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core/assertHumanReadable_cxx_ACLiC_dict.cxx:41:; In file included from /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx:1:; [NON-XML-CHAR-0x1B][1m/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/include/ROOT/StringConv.hxx:103:18: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;35mwarning: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1mimplicit conversion from 'long long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-int-float-conversion][NON-XML-CHAR-0x1B][0m; if (v < std::numeric_limits<T>::max()) {; [NON-XML-CHAR-0x1B][0;1;32m ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1m/mnt/build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4257:2456,ERROR,ERROR,2456,https://root.cern,https://github.com/root-project/root/pull/4257,1,['ERROR'],['ERROR']
Availability,"000-7fd6579a7000 r-xp 00000000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd6579a7000-7fd657ba6000 ---p 00008000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba6000-7fd657ba7000 r--p 00007000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba7000-7fd657ba8000 rw-p 00008000 08:02 80449 /usr/lib64/libcrypt-2.17.so; 7fd657ba8000-7fd657bd6000 rw-p 00000000 00:00 0 ; 7fd657bd6000-7fd657e0c000 r-xp 00000000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd657e0c000-7fd65800c000 ---p 00236000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd65800c000-7fd658028000 r--p 00236000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd658028000-7fd658035000 rw-p 00252000 08:02 344532 /usr/lib64/libcrypto.so.1.0.2k; 7fd658035000-7fd658039000 rw-p 00000000 00:00 0 ; 7fd658039000-7fd6580a0000 r-xp 00000000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6580a0000-7fd6582a0000 ---p 00067000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582a0000-7fd6582a4000 r--p 00067000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582a4000-7fd6582ab000 rw-p 0006b000 08:02 344534 /usr/lib64/libssl.so.1.0.2k; 7fd6582ab000-7fd6582c0000 r-xp 00000000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6582c0000-7fd6584bf000 ---p 00015000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584bf000-7fd6584c0000 r--p 00014000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584c0000-7fd6584c1000 rw-p 00015000 08:02 80883 /usr/lib64/libz.so.1.2.7; 7fd6584c1000-7fd6584c3000 r-xp 00000000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1; 7fd6584c3000-7fd6586c2000 ---p 00002000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1; 7fd6586c2000-7fd6586c3000 r--p 00001000 08:02 80878 /usr/lib64/libpcreposix.so.0.0.1bash-4.2$ ; ```. Obviously, the problem is the redefinition of UNITS; but if I comment out the draw statements, that the program can run smoothly, so it looks to me that somehow the draw method trigger the error.; And I can't reduce the definition of UNITS further, when I comment out any of the content, the error become 'double free or corruption'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256:15329,error,error,15329,https://root.cern,https://github.com/root-project/root/issues/8256,2,['error'],['error']
Availability,"00000064 = 100. Fatal: nread == nbytes violated; ~~~; 478/1272 Test #440: gtest-tree-ntuple-v7-test-ntuple-minifile ...........................***Failed 65.92 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 8 tests from MiniFile; [ RUN ] MiniFile.Raw; [ OK ] MiniFile.Raw (0 ms); [ RUN ] MiniFile.Stream; Error in <TFile::ReadBuffer>: error reading all requested bytes from file test_ntuple_minifile_stream.root, got 0 of 6816316; Error in <TFile::Init>: test_ntuple_minifile_stream.root failed to read the file header information at 1677721600 (size=6816316); /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_minifile.cxx:84: Failure; Value of: file; Actual: false; Expected: true; [ FAILED ] MiniFile.Stream (191 ms); [ RUN ] MiniFile.Proper; Fatal: nread == nbytes violated at line 1083 of `/builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTupl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:9500,Failure,Failure,9500,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Failure'],['Failure']
Availability,"00003ff088db50 in llvm::orc::ExecutionSession::OL_completeLookup(std::unique_ptr<llvm::orc::InProgressLookupState, std::default_delete<llvm::orc::InProgressLookupState> >, std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, std::; function<void (llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, ll; vm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&)>) () from /home/hacker/archrv/root/src/build/lib/libCling.so; #19 0x0000003ff088e09a in llvm::orc::InProgressFullLookupState::complete(std::unique_ptr<llvm::orc::InProgressLookupState, std::default_delete<llvm::orc::InProgressLookupState> >) () from /home/hacker/archrv/root/src/build/lib/libCling.so; #20 0x0000003ff087f864 in llvm::orc::ExecutionSession::OL_applyQueryPhase1(std::unique_ptr<llvm::orc::InProgressLookupState, std::default_delete<llvm::orc::InProgressLookupState> >, llvm::Error) () from /home/hacker/archrv/root/src/build/; lib/libCling.so; #21 0x0000003ff0887d20 in llvm::orc::ExecutionSession::lookup(llvm::orc::LookupKind, std::vector<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::allocator<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlag; s> > > const&, llvm::orc::SymbolLookupSet, llvm::orc::SymbolState, llvm::unique_function<void (llvm::Expected<llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detai; l::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol> > >)>, std::function<void (llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::Dense; MapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14509:5283,Error,Error,5283,https://root.cern,https://github.com/root-project/root/issues/14509,1,['Error'],['Error']
Availability,"039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]; 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]; 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]; 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]; 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:9559,error,error,9559,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]; 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]; 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:16075,error,error,16075,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", compRes=; 0x7ffd45beeafc: cling::Interpreter::kSuccess, result=0x7ffd45beeb00) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/metacling/src/TCling.cxx:2436; #38 0x00007f0602e683c4 in TCling::ProcessLine (this=0x20461a0, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.0; #39 0x00007f060aab78bf in TApplication::ProcessLine (this=0x200fe60, line=0x412ae70 ""#line 1 \""ROOT_prompt_0\""\n#include <LoKi/ParticleCuts.h>"", sync=false, err=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/proj; #40 0x00007f060b14a763 in TRint::ProcessLineNr (this=0x200fe60, filestem=0x7f060b15c757 ""ROOT_prompt_"", line=0x419af40 ""#include <LoKi/ParticleCuts.h>"", error=0x7ffd45beeedc) at /build/jenkins/workspace/lcg_release_pipeline/build/projec; #41 0x00007f060b149fa1 in TRint::HandleTermInput (this=0x200fe60) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:648; #42 0x00007f060b1477cd in TTermInputHandler::Notify (this=0x413b570) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:133; #43 0x00007f060b14c187 in TTermInputHandler::ReadNotify (this=0x413b570) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/rint/src/TRint.cxx:125; #44 0x00007f060ac58367 in TUnixSystem::CheckDescriptors (this=0x1fbd500) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:1322; #45 0x00007f060ac577bc in TUnixSystem::DispatchOneEvent (this=0x1fbd500, pendingOnly=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/core/unix/src/TUnixSystem.cxx:1077; #46 0x00007f060ab4290f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15511:10620,error,error,10620,https://root.cern,https://github.com/root-project/root/issues/15511,1,['error'],['error']
Availability,"1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`.; By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang.; When configuring:; ```; cmake ../root -Dall=On -Dbuiltin_glew=On; ```; There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```; Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:; Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build; Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx; clang: error: the clang compiler does not support '-march=native'; make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1; make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```; cmake ../root -Dall=On -Dbuiltin_glew=On; ```. It works fine",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9687:1320,avail,availability-new,1320,https://root.cern,https://github.com/root-project/root/issues/9687,4,"['Error', 'avail', 'error']","['Error', 'availability-new', 'error']"
Availability,1) Do not put the non-copiable ds in a header. It's very cumbersome; at runtime to expose it to the interpreter. The code is now in a string. 2) Make the test a death test. The static assert causes a non-recoverable; failure which should be handled by this kind of test and not with a try/catch; block.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1134:204,recover,recoverable,204,https://root.cern,https://github.com/root-project/root/pull/1134,2,"['failure', 'recover']","['failure', 'recoverable']"
Availability,1) Match only the custom columns of the node and not all when using regexpressions; 2) Prompt an understandable compile time error in case a cache of columns the type of which is non copyable is requested; 3) Test the ability of the data source to serve non copyable items,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1078:125,error,error,125,https://root.cern,https://github.com/root-project/root/pull/1078,1,['error'],['error']
Availability,"1. Always register custom ""rootcheme"" to the Qt WebEngine libs before starting any widget. Was missing when QApplication was created by user; 2. Correctly cleanup QApplication in qt5 - only when ROOT shutdown procedure started, it should be deleted. Requires special workaround to detect shutdown; 3. Fix c++20 compiler warnings in qtweb tutorial; 4. Show full qt version in error printouts",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13465:375,error,error,375,https://root.cern,https://github.com/root-project/root/pull/13465,1,['error'],['error']
Availability,"1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:1336,error,error,1336,https://root.cern,https://github.com/root-project/root/issues/10875,1,['error'],['error']
Availability,1. Do not expose special parameters to URL string - now in default HTML file special attributes can be inserted together with `JSROOT.ConnectWebWindow` call; 2. Correctly handle `#` in WebWindow URL. Such symbol used for routing inside webpage and will be often used with openui5; 3. Unify handling of URL options with RWebDisplayArgs. For now only `key` and `batch_mode` parameters are exposed to web window URL; 4. Update/extend doxygen docu; 5. Fix error in v7 CanvasPainter - v616 already fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3561:452,error,error,452,https://root.cern,https://github.com/root-project/root/pull/3561,1,['error'],['error']
Availability,"1. Equip TCanvas::Streamer to provide data members information for TBufferJSON/TBufferXML/TBufferSQL2 classes; 2. Fix problem with streamer infos reading from TXMLFile; 3. Fix error in TBufferXML/TBufferJSON/TBufferSQL2 when equipted streamers are used; Reported also here: http://root.cern.ch/phpBB3/viewtopic.php?f=3&t=18802; Error was introduced by modifications in I/O between 5-34/19 and 5-34/20; 4. Implement TBufferJSON::CheckObject(), enable correct storage of colors palete in JSON with TCanvas; 5. Provide missing documentation for some methods in TBufferXML/TBufferSQL2/TBufferJSON; 6. Modification in THttpServer class - one could now access any objects memeber; 7. Significant redesign of JSROOT - now everything can be redrawn and resize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/37:176,error,error,176,https://root.cern,https://github.com/root-project/root/pull/37,2,"['Error', 'error']","['Error', 'error']"
Availability,"1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values; 2. Protect GetMinimum method for case of log scale; 3. Improve pads options:; 3.1. Always ensure that subpad is clear when drawing stack histograms; 3.2. Reuse existing subpads, no need to divide canvas again; 3.3. Use TPad::Add() method to add histograms to subpads",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15931:3,Error,Errors,3,https://root.cern,https://github.com/root-project/root/pull/15931,1,['Error'],['Errors']
Availability,1. Fix error with copy and destroy of `TLatex::fTabSize`. Now it is `std::vector` and can be easily copied - if necessary. Also using as stack is much more convenient - just by using `emplace_back` and `pop_back`; 2. Fix bug in `TPie` copy constructor; 3. Fix memory leak with `TGaxis::fModLabs`. Array was never deleted and never copied properly. Extra problem because it may have pointer on list of labels from `TAxis`. Provide workaround for `TGaxis` objects stored before in ROOT files.; 4. Use stack variables while painting - no need to call `new/delete` for simple objects like `TLine` or `TMarker`; 5. Fix memory leak reading old version of TPolyLine; 6. Use `TString::Form` instead of `snprinf`; 7. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10843:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/10843,1,['error'],['error']
Availability,1. Fix error with normals production for TGeo shapes; 2. Catch exception in GluTess code; 3. Support TGeoNode with finders; 4. Provide geodemo.C macro with all supported shapes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3246:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/3246,1,['error'],['error']
Availability,1. Fixing several formatting errors preventing doxygen generation; 2. Rename files in `tutorials\webgui` to let correctly create doxygen; 3. Fix jsroot_importmap generation for `jsroot/geom` and `jsroot/three`; 4. Fix minimal error in JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16705:29,error,errors,29,https://root.cern,https://github.com/root-project/root/pull/16705,2,['error'],"['error', 'errors']"
Availability,1. Major memory leak in `TMathText` - renderer was never deleted; 2. `TMathTex`t copy constructor and assign operator; 3. `TLegend` assign operator; 4. `TPaveText` copy constructor and assign operator; 5. Errors in `TPaveText::GetLine` and `TPaveText::GetLineWidth`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10906:205,Error,Errors,205,https://root.cern,https://github.com/root-project/root/pull/10906,1,['Error'],['Errors']
Availability,"1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting ; 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists; 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable; 4. Improve `RLegend` to draw errors marker; 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8436:410,error,errors,410,https://root.cern,https://github.com/root-project/root/pull/8436,1,['error'],['errors']
Availability,"1. Support plain TBranch; 2. Fix error with item double-click; 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside; 4. Show warning message when double-click action takes too long time; 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7938:33,error,error,33,https://root.cern,https://github.com/root-project/root/pull/7938,1,['error'],['error']
Availability,1. Update name of in geopainter plugin; 2. Fix two errors in JSROOT; 3. Fix name of tree viewer in plugin; 4. Fix documentaion,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13867:51,error,errors,51,https://root.cern,https://github.com/root-project/root/pull/13867,1,['error'],['errors']
Availability,"1. it's natural for users to add const or reference qualifiers to the signature, but it does not work and results in errors that are hard to interpret for the user; 2. when using the generated functions from C++, it's not possible to pass temporaries in due to the non-const-ref signature. we could use const references instead, or generate an overload set of functions. ```python; import ROOT; import numpy as np. @ROOT.Numba.Declare([""const ROOT::VecOps::RVec<float>""], ""RVecF""); def const_messes_up_generated_code(v):; return v*np.array([1.,2.]).astype(np.float32). @ROOT.Numba.Declare([""RVec<float>&""], ""RVecF""); def the_extra_ampersand_turns_ref_into_rvalue_ref(v):; return v*np.array([1.,2.]).astype(np.float32). @ROOT.Numba.Declare([""RVecF""], ""RVecF""); def cannot_pass_temporaries(v):; return v*np.array([1.,2.]).astype(np.float32). if __name__ == ""__main__"":; ROOT.RDataFrame(10)\; .Define(""v"", ""ROOT::RVecF{1.f,2.f}"")\; .Define(""err1"", ""Numba::const_messes_up_generated_code(v)"")\; .Define(""err2"", ""Numba::the_extra_ampersand_turns_ref_into_rvalue_ref(v)"")\; .Define(""err3"", ""Numba::cannot_pass_temporaries(v[v > 0])"")\; .Sum(""sz"")\; .GetValue(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11294:117,error,errors,117,https://root.cern,https://github.com/root-project/root/issues/11294,1,['error'],['errors']
Availability,"1.1, there is no pymva folder generated after cmake commands, and for pytest version 6.2.5, pymva folder generated after cmake commands. Could you please help have a look at this issue? Thanks a lot!; ![image](https://user-images.githubusercontent.com/17844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:1366,error,error,1366,https://root.cern,https://github.com/root-project/root/issues/9487,2,['error'],"['error', 'errorlevel']"
Availability,"1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -exclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:13274,error,error,13274,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,1/include/g++-v12; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:26:; In file included from /usr/include/bits/types/struct_iovec.h:23:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:28:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:13:; In file included from /usr/include/sys/socket.h:33:; In file included from /usr/include/bits/socket.h:27:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/ROOT/RIoUring.hxx:17:; In file included from /usr/include/liburing.h:22:; In file included from /usr/include/sched.h:29:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; In file included from input_line_7:8:; In file inclu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:18593,error,error,18593,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #12 0x00007f586579633e in TEnv::Getvalue(char const*) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #13 0x00007f5865796c19 in TEnv::GetValue(char const*, char const*) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #14 0x00007f5865797e00 in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #15 0x00007f586584fb23 in ErrorHandler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #16 0x00007f58658504a8 in Warning(char const*, char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #17 0x00007f5865881acf in ROOT::TGenericClassInfo::TGenericClassInfo(char const*, int, char const*, int, std::type_info const&, ROOT::Internal::TInitBehavior const*, TClass* (*)(), TVirtualIsAProxy*, int, int) (); from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #18 0x00007f5861aadcae in ROOT::GenerateInitInstanceLocal(edm::Wrapper<edm::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11383:3972,Error,ErrorHandler,3972,https://root.cern,https://github.com/root-project/root/issues/11383,1,['Error'],['ErrorHandler']
Availability,"1098: tutorial-dataframe-df006_ranges-py ..................................***Failed 7.50 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/dataframe/df006_ranges.py"", line 44, in <module>; d_15_end_3 = d.Range(15, 0, 3); ^^^^^^^^^^^^^^^^^; TypeError: none of the 2 overloaded methods succeeded. Full details:; ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int end) =>; TypeError: takes at most 1 arguments (3 given); ROOT::RDF::RInterface<ROOT::Detail::RDF::RRange<ROOT::Detail::RDF::RLoopManager>,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Range(unsigned int begin, unsigned int end, unsigned int stride = 1) =>; runtime_error: Range: stride must be strictly greater than 0 and end must be greater than begin.; CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-fit-combinedFit-py. cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded.; ~~~; 1110/1272 Test #1115: tutorial-fit-combinedFit-py .........................................***Failed 1.71 sec; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/fit/combinedFit.py"", line 98, in <module>; fitter.Config().ParSettings(4).Fix(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; cppyy.gbl.std.out_of_range: none of the 2 overloaded methods succeeded. Full details:; const ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); ROOT::Fit::ParameterSettings& ROOT::Fit::FitConfig::ParSettings(unsigned int i) =>; out_of_range: vector::_M_range_check: __n (which is 0) >= this->size() (which is 0); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:5745,error,error,5745,https://root.cern,https://github.com/root-project/root/issues/12429,1,['error'],['error']
Availability,12.2.1/include/g++-v12/cstddef:50:; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:9038,error,error,9038,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"123 = t_1;; int j123 = t_2;; }; ```; works fine. Note that issuing on the prompt right after the `.x trun.C` the command `gROOT->SetDirLevel(t_1);` or `i123 = t_2;` works as well. But this version:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; gROOT->SetDirLevel(t_1);; }; ```; mysteriously fails with:; ```; Processing trun.C...; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: error: cannot initialize an array element of type 'void *' with an rvalue of type 'TROOT *(*)()'; gROOT->SetDirLevel(t_1);; ^~~~~; /Users/pcanal/root_working/builds/master-pr/include/TROOT.h:407:16: note: expanded from macro 'gROOT'; #define gROOT (ROOT::GetROOT()); ^~~~~~~~~~~~~; ```; The error seems to indicate that the parser is 'prefixing' to `gROOT` something related to `array of void*` and initialization. Similarly; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; i123 = t_2;; }; ```; fails with:; ```; Processing trun.C...; Assertion failed: (Node->getDependence() == ExprDependence::None), function VisitBinaryOperator, file DynamicLookup.cpp, line 628.; Abort trap: 6; ```. And weirdly:; ```; {; gROOT->ProcessLine("".L t1.C"");; gROOT->ProcessLine("".L t2.C"");; int i123 = t_1;; int j123 = t_2;; t_1 = 3;; }; ```; fails with:; ```; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: warning: declaration without the 'auto' keyword is deprecated: function '__cling_Un1Qu30' [-Wdeprecated-declarations]; t_1 = 3;; ^~~; auto ; input_line_11:2:3: error: reference to 't_1' is ambiguous; (t_1); ^; /Users/pcanal/root_working/code/master/roottest/cling/return/t1.C:1:5: note: candidate found by name lookup is 't_1'; int t_1 = 3;; ^; /Users/pcanal/root_working/code/master/roottest/cling/return/./trun.C:7:1: note: candidate found by name lookup is '__cling_N50::t_1'; t_1 = 3;; ^; input_line_11:2:3: error: unknown type name 't_1'; (t_1); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15481:2553,error,error,2553,https://root.cern,https://github.com/root-project/root/issues/15481,2,['error'],['error']
Availability,"1303:1 [opt]; frame #20: 0x00000001344dc2bc libCling.6.22.06.so`::CreateInterpreter(interpLibHandle=<unavailable>, argv=<unavailable>) at TCling.cxx:616 [opt]; frame #21: 0x0000000110404e06 libCore.6.22.06.so`TROOT::InitInterpreter(this=0x0000000110637928) at TROOT.cxx:2051:19 [opt]; frame #22: 0x0000000110404d20 libCore.6.22.06.so`ROOT::Internal::GetROOT2() at TROOT.cxx:385:22 [opt]; frame #23: 0x000000011042f4ef libCore.6.22.06.so`TEnv::Getvalue(this=0x00007b1000001340, name=""Root.ErrorIgnoreLevel"") const at TEnv.cxx:454:30 [opt]; frame #24: 0x000000011042fc2e libCore.6.22.06.so`TEnv::GetValue(this=<unavailable>, name=<unavailable>, dflt=""Print"") const at TEnv.cxx:537:27 [opt]; frame #25: 0x0000000110430b9d libCore.6.22.06.so`DefaultErrorHandler(level=4000, abort_bool=<unavailable>, location=""TUnixSystem::DispatchSignals"", msg=""segmentati; on violation"") at TError.cxx:132:33 [opt]; frame #26: 0x000000011043128a libCore.6.22.06.so`::ErrorHandler(level=4000, location=""TUnixSystem::DispatchSignals"", fmt=""%s"", ap=0x00007ffee94e0ff0) at TError.cxx; :0:7 [opt]; frame #27: 0x0000000110431667 libCore.6.22.06.so`Break(location=<unavailable>, fmt=<unavailable>) at TError.cxx:314:4 [opt]; frame #28: 0x0000000110549699 libCore.6.22.06.so`TUnixSystem::DispatchSignals(this=0x00007b5800000000, sig=kSigSegmentationViolation) at TUnixSystem.cxx:3645:10 [o; pt]; frame #29: 0x000000011095ac60 libclang_rt.tsan_osx_dynamic.dylib`__tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, bool, int, __sanitizer::__sanitize; r_siginfo*, void*) + 640; frame #30: 0x00000001109712ca libclang_rt.tsan_osx_dynamic.dylib`rtl_sighandler(int) + 378; frame #31: 0x00007fff2047fd7d libsystem_platform.dylib`_sigtramp + 29; frame #32: 0x00007fff2047d5d3 libsystem_platform.dylib`_platform_strlen + 19; frame #33: 0x000000011095b56d libclang_rt.tsan_osx_dynamic.dylib`wrap_strlen + 253; frame #34: 0x000000011481cae5 libO2DebugGUI.dylib`ImGui::TextEx(char const*, char const*, int) + 85; ```. ### Expec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7418:4138,Error,ErrorHandler,4138,https://root.cern,https://github.com/root-project/root/issues/7418,1,['Error'],['ErrorHandler']
Availability,"13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 'std'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <new>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Failed to extract C++ standard library version.; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Extraction of runtime standard library version was: ''; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime' imported from input_line_2:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime_Extra' imported from /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/etc/cling/Interpreter/RuntimeUniverse.h:27:; ```. ### Reproducer. Simply compiling ROOT is enough. ### ROOT versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:12655,error,error,12655,https://root.cern,https://github.com/root-project/root/issues/16449,1,['error'],['error']
Availability,"1874: Processing /home/mkrzewic/src/root/roottest/scripts/build.C(""/home/mkrzewic/src/root/roottest/root/meta/evolution/data1.C"","""","""")...; 1874: Info in <TUnixSystem::ACLiC>: creating shared library /home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82394b8f0 from unloaded dso, skipping; 1874: __cxa_thread_call_dtors: dtr 0x82ce907b0 from unloaded dso, skipping; 1874: sh: Syntax error: Unterminated quoted string; 1874: Error in <ACLiC>: Executing 'cd ""/home/mkrzewic/build/root/roottest/root/meta/evolution"" ; c++ -fPIC -c -g -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -D_REENTRANT -pipe -W -Woverloaded-virtual -fsigned-char -pthread -DClingWorkAroundTClassUpdateDouble32 -I/usr/local/include/root -I/home/mkrzewic/build/root/roottest/root/meta/evolution -I""/usr/home/mkrzewic/build/root/etc/"" -I""/usr/home/mkrzewic/build/root/etc//cling"" -I""/usr/home/mkrzewic/build/root/etc//cling/plugins/include"" -I""/usr/home/mkrzewic/build/root/include/"" -I""/usr/home/mkrzewic/build/root/include"" -I""/home/mkrzewic/build/root/roottest/root/meta/evolution"" -D__ACLIC__ ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.cxx"" ; c++ -g ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C_ACLiC_dict.o"" -shared -rdynamic ""-lRint"" ""-lCore"" ""-L/usr/local/lib/root"" ""[vdso] -o ""/home/mkrzewic/build/root/roottest/root/meta/evolution/data1_C.so""' failed!; 1874: __cxa_thread_cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13080:1323,error,error,1323,https://root.cern,https://github.com/root-project/root/issues/13080,2,"['Error', 'error']","['Error', 'error']"
Availability,"19;; float mu, Delta, Ng, Ec, h, epsilon_c, ng, Gamma, L_M_5;; TMVA::Reader *reader = new TMVA::Reader(""!Color:!Silent"");; reader->AddVariable( ""mu"", &mu );; reader->AddVariable( ""Delta"", &Delta );; reader->AddVariable( ""Ng"", &Ng );; reader->AddVariable( ""Ec"", &Ec );; reader->AddVariable( ""h"", &h );; reader->AddVariable( ""epsilon_c"", &epsilon_c );; reader->AddVariable( ""ng"", &ng );; reader->AddVariable( ""Gamma"", &Gamma );; reader->AddVariable( ""L-5"", &L_M_5 );; reader->BookMVA( ""MLP method"", Form(""/eos/user/j/jfeng5/work/quantum_computing/mc/tmva/weights/qc_MLP_%d.weights.xml"",t_i ));; TFile tf_fi(Form(""/afs/cern.ch/work/j/jfeng/private/quantum_computing/analysis/tmva/regression/t_%d.root"",t_i));; TF1 * tf = (TF1*) tf_fi.Get(""tf"");; double var_mean[8] = {-700, 250, 0.1, 100, 400, 6000, 0.1, 0.8};; mu = -700;; Delta = 250;; Ng = 0.1;; Ec = 100;; h = 400;; epsilon_c = 6000;; ng = 0.1;; Gamma = 0.8;. double MLP = reader->EvaluateMVA( ""MLP method"" );; double PI = tf->Eval(MLP);; cout << ""MLP = "" << MLP << endl;; cout << ""PI = "" << PI << endl;; //TFile fo(Form(""%10d.root"",irun), ""recreate"");; //fo.Close();; return 0;; }. In the MakeFile:. CXX=$(shell root-config --cxx); ROOTLIB=$(shell root-config --libs --glibs); ROOTLIB += -lRFIO -lMinuit -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT; FLIBS := -lifcore -static-libgcc -static-libstdc++ -std=c++11. all: generate; generate: ; $(CXX) generate.C -D__ROOTSHAREDLIBRARY__ -I$(ROOTSYS)/include -I./ $^ -o $@.exe $(ROOTLIB) $(FLIBS) -lMathMore -lCling; dump:; @echo $(ROOTSYS); clean: rm *.exe. I run it like:; make;; ./generate.exe. ### Setup; <!--; 1. ROOT version; 2. Operating system ; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: root6-14-04-icc19; Operating system: cc7 in lxplus7.cern.ch machines; ROOT is at /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6904:2937,echo,echo,2937,https://root.cern,https://github.com/root-project/root/issues/6904,2,"['down', 'echo']","['download', 'echo']"
Availability,"1: note: previous declaration is here; signbit(_A1 __lcpp_x) _NOEXCEPT; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:3369,error,error,3369,https://root.cern,https://github.com/root-project/root/issues/7881,1,['error'],['error']
Availability,"2.28/x86_64-slc6/bin/ld: ../../lib/libgslcblas.a(zsyrk.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgslcblas.a(ztrmm.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgslcblas.a(ztrmv.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgslcblas.a(ztrsm.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgslcblas.a(ztrsv.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: ../../lib/libgslcblas.a(xerbla.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC; /cvmfs/sft.cern.ch/lcg/contrib/bintuils/2.28/x86_64-slc6/bin/ld: final link failed: Nonrepresentable section on output; collect2: error: ld returned 1 exit status; make[3]: *** [lib/libMathMore.so] Error 1; make[2]: *** [math/mathmore/CMakeFiles/MathMore.dir/all] Error 2; make[1]: *** [math/mathmore/CMakeFiles/MathMore.dir/rule] Error 2; make: *** [MathMore] Error 2; ```. This came from trying to build the master branch in the way that we build ROOT for the ATLAS analysis releases (https://gitlab.cern.ch/atlas/atlasexternals/blob/1.0/External/ROOT/CMakeLists.txt), using a command like:. ```; cmake -Dall=ON -Dbuiltin_gsl=ON -Dbuiltin_freetype=ON -Dbuiltin_fftw3=ON -Dbuiltin_lzma=ON -DCMAKE_BUILD_TYPE=Release -Dcxx14=ON -Dxrootd=ON -Ddcache=ON -Ddavix=ON -Dbuiltin_veccore=ON ../root/; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1996:43191,error,error,43191,https://root.cern,https://github.com/root-project/root/pull/1996,5,"['Error', 'error']","['Error', 'error']"
Availability,"2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:14205,error,error,14205,https://root.cern,https://github.com/root-project/root/issues/9595,1,['error'],['error']
Availability,"2/root_install/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke; user_pythonizor(klass, fqn); File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<_Complex double> at 0x7fc929c29e20> has no attribute 'value_type'. Full details:; type object 'vector<_Complex double>' has no attribute 'value_type'; 'std::vector<_Complex double>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; data_frame = ROOT.RDataFrame(10).Define(""x"", ""gRandom->Rndm()""); data_frame_xy = data_frame.Define(""y"", ""x*2 +1j""); data_frame_xy.Display().Print(); ```; ok so far.; ```python; column=""y""; data_frame_rnode = cppyy.gbl.ROOT.RDF.AsRNode(data_frame_xy); column_type = data_frame_rnode.GetColumnType(column); print(""Column type:"", column_type); result_ptrs = data_frame_rnode.Take[column_type](column); cpp_reference = result_ptrs.GetValue(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. locally built ROOT-master from 21.04.20222. ; ```bash; cmake -DCMAKE_INSTALL_PREFIX=../root_install -Dbuiltin_glew=ON -Dclad=OFF -Dtmva-pymva=OFF -DCMAKE_CXX_STANDARD=17 ../root_src; ```; 2. MacOS 11.63. ; 3. Python 3.10.1 (main, Jan 10 2022, 12:04:16) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10522:2371,down,download,2371,https://root.cern,https://github.com/root-project/root/issues/10522,1,['down'],['download']
Availability,"22\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:260:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:260:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:610:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:610:16: note: previous definition is here; typedef struct __crt_locale_data_public; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt.h:617:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from C:/root-dev/root\include\TGeoExtension.h:15:; In file inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14335:1798,error,error,1798,https://root.cern,https://github.com/root-project/root/pull/14335,2,['error'],['error']
Availability,"2320== by 0xAD090F2: gsl_rng_alloc (in /usr/lib/libgsl.so.23.0.0); ==12320== by 0x8223765: Allocate (GSLRngWrapper.h:99); ==12320== by 0x8223765: ROOT::Math::GSLMCIntegrator::GSLMCIntegrator(char const*, double, double, unsigned int) (GSLMCIntegrator.cxx:117); ==12320== by 0x108BF5: main (mcintegrator.cpp:8); ==12320==; ==12320== LEAK SUMMARY:; ==12320== definitely lost: 319,984 bytes in 19,999 blocks; ==12320== indirectly lost: 98,770,000 bytes in 19,754 blocks; ==12320== possibly lost: 1,225,000 bytes in 245 blocks; ==12320== still reachable: 340,874 bytes in 4,262 blocks; ==12320== suppressed: 0 bytes in 0 blocks; ==12320== Reachable blocks (those to which a pointer was found) are not shown.; ==12320== To see them, rerun with: --leak-check=full --show-leak-kinds=all; ==12320==; ==12320== For counts of detected and suppressed errors, rerun with: -v; ==12320== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0); ```. After fix:; ```; valgrind --tool=memcheck --leak-check=full --show-leak-kinds=definite \; --undef-value-errors=no ./mcintegrator. ==14294== Memcheck, a memory error detector; ==14294== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==14294== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info; ==14294== Command: ./mcintegrator; ==14294==; ==14294==; ==14294== HEAP SUMMARY:; ==14294== in use at exit: 335,858 bytes in 4,260 blocks; ==14294== total heap usage: 67,782 allocs, 63,522 frees, 101,539,078 bytes allocated; ==14294==; ==14294== LEAK SUMMARY:; ==14294== definitely lost: 0 bytes in 0 blocks; ==14294== indirectly lost: 0 bytes in 0 blocks; ==14294== possibly lost: 0 bytes in 0 blocks; ==14294== still reachable: 335,858 bytes in 4,260 blocks; ==14294== suppressed: 0 bytes in 0 blocks; ==14294== Reachable blocks (those to which a pointer was found) are not shown.; ==14294== To see them, rerun with: --leak-check=full --show-leak-kinds=all; ==14294==; ==14294== For counts of detected and suppressed errors, re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/928:2957,error,errors,2957,https://root.cern,https://github.com/root-project/root/pull/928,1,['error'],['errors']
Availability,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428:6324,error,error,6324,https://root.cern,https://github.com/root-project/root/issues/16428,2,['error'],['error']
Availability,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]; 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]; ```; **Error log:**; [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:26217,error,error,26217,https://root.cern,https://github.com/root-project/root/issues/11787,3,"['Error', 'error']","['Error', 'error']"
Availability,"26.00/core/meta/inc/TClass.h:289:47: error: expected ‘)’ before ‘faddr’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ~ ^~~~~~; | ); /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:387:63: error: ‘Longptr_t’ has not been declared; 387 | void BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient = kFALSE);; | ^~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:413:105: error: ‘TMethod* TClass::GetClassMethod(const char*, const char*, Bool_t)’ conflicts with a previous declaration; 413 | TMethod *GetClassMethod(const char *name, const char *params, Bool_t objectIsConst = kFALSE);; | ^; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared; 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);; | ^~~~~~~~~~~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 583 | static DictFuncPtr_t GetDict (const char *cname);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 584 | static DictFuncPtr_t GetDict (const std::type_info &info);; | ^~~~~~~~~~~~~; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:2050,error,error,2050,https://root.cern,https://github.com/root-project/root/issues/10155,1,['error'],['error']
Availability,"2695 v4 @ 2.10GHz (x86_64); Build type Release; Compiler GNU 6.3.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both""; ```; As far as I can tell, gcc6.3.0 should have full c++14 capability. However, eventually I get the following errors:. ```; Consolidate compiler generated dependencies of target Dictgen; Consolidate compiler generated dependencies of target ClingUtils; Consolidate compiler generated dependencies of target MetaCling; [ 78%] Built target ClingUtils; [ 78%] Built target Dictgen; Consolidate compiler generated dependencies of target rootcling_stage1; [ 78%] Built target rootcling_stage1; [ 78%] Built target MetaCling; [ 78%] Generating G__Core.cxx, ../lib/Core.pcm; [ 78%] Linking CXX shared library ../../../lib/libCling.so; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:1308,error,error,1308,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"26]: (style) Array index 'ia' is used before limits check.; [math/mathcore/src/TMath.cxx:830]: (style) Array index 'ib' is used before limits check.; [math/mathcore/src/triangle.c:15434]: (style) Array index 'aspectindex' is used before limits check.; [roofit/roofit/src/RooIntegralMorph.cxx:375]: (style) Array index 'igapHigh' is used before limits check. [core/winnt/src/TWinNTSystem.cxx:5035]: (style) Statements following return, break, continue, goto or throw will never be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:587]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:2041,error,error,2041,https://root.cern,https://github.com/root-project/root/pull/1343,1,['error'],['error']
Availability,"29aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]; 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:7476,error,error,7476,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:30217,down,download,30217,https://root.cern,https://github.com/root-project/root/issues/10528,1,['down'],['download']
Availability,"2b74b31cd79dc51b; which modifies the `TFileMerger` class. . The slow down affect ROOT versions `>= 6.22.08`. The problem is the call of the ; ```; else; dirtodelete.Add(result);; ```. When hadding files, those two lines are called for each object found in a TDirectory. ; So for instance if you store histograms in a TDirectory the directory is going to be added to `dirtodelete` as many times as you have histograms in that directory. And this slows down condiderably the hadd command as previously there was not such thing done. The deletion is called several times over the same object as well which is also inneficient. . With some inputs containing several TDirectories, hadding with ROOT version `6.22.06` takes around 1 hour on lxplus ; whereas with ROOT version `>= 6.22.08` it would take more than a day... I can provide inputs files to illustrate the problem that are stored here ; /eos/user/b/bouquet/VHbbcc_results/testHadd_3periods/; (3 files of size ~5GB each they contain ~640 TDirectory each one containing around 6000 histograms) . Or available thanks to the following link ; https://cernbox.cern.ch/index.php/s/FBryG2p5Lshp6Lx; (in practive you can download just one file and replicate it 2 times to have 3 files to hadd and do tests) . I can tell the hadd is much slower as the names of Tdirectory processed are printed out and the difference in time to process only just one TDirectory is large depending on the ROOT version used it takes few seconds (`v6.22.06`) versus 10-15 minutes (`>= v6.22.08`). . This bug needs to be absolutely fixed as it would affect many analyses and it needs backported to all the root versions starting from `6.22.08`. . I made a test commenting the two lines with the following gitlab repository https://gitlab.cern.ch/robouque/haddtests; ```; else; dirtodelete.Add(result);; ```; the speed is restored even using `ROOT 6.22.08`. So the problem really comes from adding the directory many times to that list. Many thanks in advance, ; Best, ; Romain",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9939:1323,avail,available,1323,https://root.cern,https://github.com/root-project/root/issues/9939,2,"['avail', 'down']","['available', 'download']"
Availability,"3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=2, Sum(w^2)=2.5; axis 0: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 1: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 2: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 3: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 4: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 5: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 6: Sum(w*x)=3.5, Sum(w*x^2)=6.5; axis 7: Sum(w*x)=3.5, Sum(w*x^2)=6.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 2; THnSparseT<TArrayD> (*0x57c3b10): ""hs"" ""CASE 2""; 8 dimensions, 2 entries in 2 filled bins; axis 0 """": 10 bins (-5..10), variable bin sizes; axis 1 """": 10 bins (-10..70), variable bin sizes; axis 2 """": 5 bins (-1000..3000), variable bin sizes; axis 3 """": 30 bins (-3..3), variable bin sizes; axis 4 """": 10 bins (0..5), variable bin sizes; axis 5 """": 4 bins (0..2), variable bin sizes; axis 6 """": 18 bins (0..2), variable bin sizes; axis 7 """": 12 bins (0..5), variable bin sizes; with error calculation; Sum(w)=0.5, Sum(w^2)=0.25; axis 0: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 1: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 2: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 3: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 4: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 5: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 6: Sum(w*x)=0.5, Sum(w*x^2)=0.5; axis 7: Sum(w*x)=0.5, Sum(w*x^2)=0.5; coordinates stored in 1 chunks of 16384 entries; 3.07559e-09 of bins filled using 6.61576e-05 of memory compared to an array; Bin at (5,2,2,21,3,3,10,3) = 0.5 (+/- 0.5); Bin at (5,2,2,26,5,5,19,5) = 1.5 (+/- 1.5); 0.5; ```. ### Setup. 1. ROOT versions: tested 6.06.00, 6.12.07, 6.24.07 (all have the bug); 2. Scientific Linux 7.9, AlmaLinux 8.6; 4. From CMSSW on cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11333:2247,error,error,2247,https://root.cern,https://github.com/root-project/root/issues/11333,1,['error'],['error']
Availability,"3):. **perf stat (before)**; ```; Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized ; 481,078 context-switches # 0.004 M/sec ; 710 cpu-migrations # 0.005 K/sec ; 3,512,992 page-faults # 0.026 M/sec ; 456,851,617,713 cycles # 3.370 GHz ; 310,271,051,553 instructions # 0.68 insn per cycle ; 65,664,345,345 branches # 484.369 M/sec ; 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed; ```; **perf stat (after)**; ```; Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized ; 343,733 context-switches # 0.003 M/sec ; 327 cpu-migrations # 0.003 K/sec ; 1,567,401 page-faults # 0.014 M/sec ; 391,763,587,760 cycles # 3.382 GHz ; 273,699,878,762 instructions # 0.70 insn per cycle ; 57,799,809,349 branches # 498.961 M/sec ; 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed; ```; *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**; ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png); ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**; ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png); ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png); *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to get it flushed out. We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage.*",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385:1738,down,down,1738,https://root.cern,https://github.com/root-project/root/pull/3385,1,['down'],['down']
Availability,"3/dist-packages/nbconvert/exporters/exporter.py"", line 139, in from_notebook_node; nb_copy, resources = self._preprocess(nb_copy, resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess; nbc, resc = preprocessor(nbc, resc); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__; return self.preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess; nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess; nb.cells[index], resources = self.preprocess_cell(cell, resources, index); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell; raise CellExecutionError.from_cell_and_msg(cell, out); nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:; ------------------; parser = argparse.ArgumentParser(); parser.add_argument(""--lumi-scale"", type=float, default=0.001,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True); if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1; else: lumi_scale = args.lumi_scale; lumi = 10064.0; print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430:2376,error,error,2376,https://root.cern,https://github.com/root-project/root/issues/10430,1,['error'],['error']
Availability,"3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘const class RooExpPoly’ has no member named ‘x’; did you mean ‘RooRealProxy RooExpPoly::_x’? (not accessible from this context); 448 | elem[""x""] << pdf->x().GetName();; | ^; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘const class RooExpPoly’ has no member named ‘lowestOrder’; did you mean ‘int RooExpPoly::_lowestOrder’? (not accessible from this context); 453 | for (int i = 0; i < pdf->lowestOrder(); ++i) {; | ^~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context); 456 | for (const auto &coef : pdf->coefList()) {; | ^~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; ```. Tried to change method names to those with underscores, got another error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context; 448 | elem[""x""] << pdf->_x().GetName();; | ^~; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:1240,error,error,1240,https://root.cern,https://github.com/root-project/root/issues/13101,1,['error'],['error']
Availability,"30-alice10/cint/cint/src/expr.cxx:1071; #26 0x00007fba33262efe in G__process_cmd (line=line; entry=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", prompt=prompt; entry=0xe550a8 """", more=more; entry=0xe550a0, err=err; entry=0x7ffcac8e070c, rslt=rslt; entry=0x7ffcac8e0710) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/pause.cxx:2331; #27 0x00007fba37e4b1c0 in TCint::ProcessLine (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:549; #28 0x00007fba37e46687 in TCint::ProcessLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:959; #31 0x00007fba37817692 in TRint::Run (this=this; entry=0x1464300, retrn=retrn; entry=false) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/rint/src/TRint.cxx:417; #32 0x0000000000401ee2 in main (argc=<optimized out>, argv=0x7ffcac8e3658) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ALIROOT/aliroot.cxx:152; ===========================================================. The lines below might hint at the cause of the crash.; If they do not help you then please submit a bug report at; http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to any",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:7202,error,error,7202,https://root.cern,https://github.com/root-project/root/issues/6977,1,['error'],['error']
Availability,"306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDataFrame.hxx:20:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDF/RInterface.hxx:15:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDF/ActionHelpers.hxx:25:; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1434:36: error: use of undeclared identifier 'M_PI'; 1306: T DeltaPhi(T v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1455:68: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1473:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1491:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(T v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1510:113: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR2(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1524:112: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1537:54: error: use of undeclared identifier 'M_PI'; 1306: T DeltaR(T eta1, T eta2, T phi1, T phi2, const T c = M_PI); 1306: ^; 1306: Error in <ACLiC>: Executing 'C:\Users\sftnight\build\release\bin\rootcling -v0 ""--lib-list-prefix=C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_map"" -f ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_dict.cxx"" -rml t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6727:1757,error,error,1757,https://root.cern,https://github.com/root-project/root/pull/6727,1,['error'],['error']
Availability,35:9: error: unknown type name '__PTRDIFF_TYPE__'; typedef __PTRDIFF_TYPE__ ptrdiff_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/inc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:9206,error,error,9206,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"3a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]; 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]; 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]; 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]; 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:15572,error,error,15572,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"40, line="".X /opt/build/root_builds/master.debug/tutorials/thread/./threadsh2.C+"", error=0x00007fff5fbfd694) at TCling.cxx:2170; frame #53: 0x0000000103984436 libCling.so`TCling::ProcessLineSynch(this=0x0000000100a0de40, line="".X /opt/build/root_builds/master.debug/tutorials/thread/./threadsh2.C+"", error=0x00007fff5fbfd694) at TCling.cxx:3044; frame #54: 0x00000001001f3133 libCore.so`TApplication::ExecuteFile(file=""threadsh2.C+"", error=0x00007fff5fbfd694, keep=false) at TApplication.cxx:1143; frame #55: 0x00000001001f19e0 libCore.so`TApplication::ProcessFile(this=0x0000000100b113e0, file=""threadsh2.C+"", error=0x00007fff5fbfd694, keep=false) at TApplication.cxx:1015; frame #56: 0x00000001001f138f libCore.so`TApplication::ProcessLine(this=0x0000000100b113e0, line="".x threadsh2.C+"", sync=false, err=0x00007fff5fbfd694) at TApplication.cxx:988; frame #57: 0x000000010009878d libRint.so`TRint::ProcessLineNr(this=0x0000000100b113e0, filestem=""ROOT_cli_"", line="".x threadsh2.C+"", error=0x00007fff5fbfd694) at TRint.cxx:756; frame #58: 0x0000000100097daf libRint.so`TRint::Run(this=0x0000000100b113e0, retrn=false) at TRint.cxx:416; frame #59: 0x00000001000027a4 root.exe`main(argc=1, argv=0x00007fff5fbff780) at rmain.cxx:30; frame #60: 0x00007fffaafdb235 libdyld.dylib`start + 1. thread #12; frame #0: 0x00007fffab109bf2 libsystem_kernel.dylib`__psynch_cvwait + 10; frame #1: 0x00007fffab1f57fa libsystem_pthread.dylib`_pthread_cond_wait + 712; frame #2: 0x00007fffa9b734cd libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 47; frame #3: 0x0000000100f76b6f libThread.so`void std::__1::condition_variable_any::wait<std::__1::unique_lock<std::__1::mutex> >(this=0x0000000122753a28, __lock=0x0000700009f18898) at condition_variable:202; frame #4: 0x0000000100f697b4 libThread.so`ROOT::TReentrantRWLock<std::__1::mutex, ROOT::Internal::RecurseCounts>::WriteLock() [inlined] void std::__1::condition_variable_any::wait<std::__1::unique_lock<std::__1::mutex",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573:10116,error,error,10116,https://root.cern,https://github.com/root-project/root/pull/1573,1,['error'],['error']
Availability,"40435, ROOT I/O annotation can be moved from the comments to using `C++ attributes` (in particular because support for the comment is implemented internally through the same mechanics). To quote the referred pull request:. The way dictionary information are propagated from the `C++` code or `XML` dictionaries to reflex and cling is rather roundabout:. - a; - `<field name=""data_"" comment=""!""/>` tags `XML` dictionaries are parsed by `genreflex` and injected into the `LLVM AST` of the corresponding `C++` code as comments `//!`;; - `C++` comments like `//!` or `//[size_]` are converted by `genreflex/rootcling` into `LLVM AST` annotations; cling parses the `LLVM` annotations and uses them to generate the desired behavior in the dictionaries. This approach does not work well with macro-generated data members:. - macros cannot generate comments, so `//!` or `//[size_]` cannot be used directly;; - macros cannot easily be used to generate the `class_def.xml` file, requiring manual intervention for their implementation and maintenance. However, it turns out that dictionaries can bypass the comments and use LLVM annotations directly within the C++ code. So; ```; private:; int size_;; float* data_; //[size_]; float* transient_; //!; ```; can be also expressed as; ```; private:; int size_;; float* data_ [[clang::annotate(""[size_]"")]];; float* transient_ [[clang::annotate(""!"")]];; ```; and annotations can be generated by macros. In order to avoid spurious warnings when compiling the header, we should offer a (set of) macro(s), eg:. - `ROOT_IO_TRANSIENT` can be used to annotate transient data members, like `//!; - `ROO_IO_SIZE(SIZE)` can be used to annotate dynamic arrays, like `//[SIZE]`; or. - `ROOT_IO_ANNOTATE` that can be used with `ROOT_IO_ANNOATE(""!"")` and `ROOT_IO_ANNOTATE(""[size]"")`. The advantage of the earlier case would be to (possibly) allow simplification of the internal parsing, by using:; ```; float* data_ [[rootio::size(""size_"")]];; float* transient_ [[rootio::tran",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12012:1077,mainten,maintenance,1077,https://root.cern,https://github.com/root-project/root/issues/12012,1,['mainten'],['maintenance']
Availability,43/_h_env/include/cling/module.modulemap' not found; <<< cling interactive line includer >>>: fatal error: could not build module '_Builtin_intrinsics'; Error: Module '_Builtin_intrinsics' failed to load.; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; fatal error: module map file '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/_h_env/include/cling/module.modulemap' not found; Error: Error loading the default rootcling header files.; make[3]: *** [core/CMakeFiles/G__Core.dir/build.make:481: core/G__Core.cxx] Error 1; make[3]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[2]: *** [CMakeFiles/Makefile2:6505: core/CMakeFiles/G__Core.dir/all] Error 2; make[2]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make[1]: *** [CMakeFiles/Makefile2:6484: core/CMakeFiles/Core.dir/rule] Error 2; make[1]: Leaving directory '/home/conda/feedstock_root/build_artifacts/debug_1613296575343/work/build-dir'; make: *** [Makefile:762: Core] Error 2; ```. ## How cling was built. Cling is being built from https://github.com/vgvassilev/cling/tree/upgrade_llvm90 with two patches added:. * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/use-findpackage.patch (see #7176); * https://github.com/chrisburr/cling-feedstock/blob/8359ffc4aafde1fcd09ffa2caeae93600449d439/recipe/Always-install-ClingTargets.patch. ## Reproducer. This should work on any machine with docker installed:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git -b llvm9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7206:7176,Error,Error,7176,https://root.cern,https://github.com/root-project/root/issues/7206,1,['Error'],['Error']
Availability,"49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]; 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]; 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:25162,error,error,25162,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"4d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]; 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]; 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]; 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]; 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:14540,error,error,14540,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"4d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]; 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]; 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:5977,error,error,5977,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"4ec. It can reproduce on latest version on master branch. Could you please help look at this issue? I think these errors are due to the clang-tblgen.exe and llvm-tblgen.exe being ran. How to disable run these two exes. Thanks in advance. Versions and configuration; OS: Windows Server 2022 Datacenter; VS: Visual Studio 2019(16.11.20). **Repro steps:**; 1. Open a VS 2019 x64 Native Tools Command Prompt; 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64; 3. git clone hhttps://github.com/root-project/root F:\root; 4. cd F:\root; 5. mkdir build_arm64ec_a && cd build_arm64ec_a; 6. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -Droofit=off -Dtesting=OFF -Droottest=OFF -DCMAKE_BUILD_TYPE=Release .. ; 7. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. **Error info:**; ```; Line 10784: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandInfo.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandInfo.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 10786: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentHTMLNamedCharacterReferences.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:999,Error,Error,999,https://root.cern,https://github.com/root-project/root/issues/11881,1,['Error'],['Error']
Availability,"4ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]; 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]; 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]; 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]; 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:20490,error,error,20490,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"4ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]; 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]; 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_runtime_wrapper.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__stddef_max_align_t.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_aes.h.rule;F:\root\build_arm64ec\CMakeFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:21979,error,error,21979,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8487:14151,error,error,14151,https://root.cern,https://github.com/root-project/root/issues/8487,1,['error'],['error']
Availability,"5.79821e+10 vs 57.9821GiB and 54GB; Checking 8.90604e+13 vs 89.0604TiB and 81TB; Checking 1.36797e+17 vs 136.797EiB and 121.5EB; Checking 2.1012e+20 vs 210.12ZiB and 182.25ZB; Checking 3.22744e+23 vs 322.744YiB and 273.375YB; (int) 0. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core/assertHumanReadable_cxx.so; In file included from /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/roottest/root/core/assertHumanReadable_cxx_ACLiC_dict.cxx:41:; In file included from /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx:1:; [NON-XML-CHAR-0x1B][1m/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/build/include/ROOT/StringConv.hxx:103:18: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;35mwarning: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1mimplicit conversion from 'long long' to 'double' changes value from 9223372036854775807 to 9223372036854775808 [-Wimplicit-int-float-conversion][NON-XML-CHAR-0x1B][0m; if (v < std::numeric_limits<T>::max()) {; [NON-XML-CHAR-0x1B][0;1;32m ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][1m/mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/roottest/root/core/assertHumanReadable.cxx:9:29: [NON-XML-CHAR-0x1B][0m[NON-XML-CHAR-0x1B][0;1;30mnote: [NON-XML-CHAR-0x1B][0min instantiation of function template specialization 'ROOT::FromHumanReadableSize<long long>' requested here[NON-XML-CHAR-0x1B][0m; auto parseResult = ROOT::FromHumanReadableSize(input,res);; [NON-XML-CHAR-0x1B][0;1;32m ^; [NON-XML-CHAR-0x1B][0m1 warning generated. -- END TEST ERROR --; CMake Error at /mnt/build/wsincrv6-18-00-patches/LABEL/ROOT-ubuntu1804-clangHEAD/SPEC/noimt/root/cmake/modules/RootTestDriver.cmake:179 (message):; Unexpected error output",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4257:4003,ERROR,ERROR,4003,https://root.cern,https://github.com/root-project/root/pull/4257,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 __strcmp_avx2 () at ../sysdeps/x86_64/multiarch/strcmp-avx2.S:115; #12 0x00005620a5400eba in handle_notebook_option (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:39; #13 0x00005620a540109c in main (argc=7777040, argv=0x5620a7f7f780) at /opt/root_src/main/src/rmain.cxx:78; ===========================================================. Root > .q; ```. - If compiled, there is no crash, but you get a cryptic error:; ```; root -l main.cpp+; root [0] ; Processing main.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./main_cpp.so; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ```; - If one uses `void main` instead of `int main`, you get this error:; ```; /tmp/main.cpp:2:1: error: 'main' must return 'int'; void main(); ^~~~; int; ```; - If one uses an unnamed macro, the problem is not there. ### Expected behavior; An error should be printed if the user tries to execute such kind of named macros, rather than the current crashes or error messages. ### To Reproduce; - Write a file called `main.cpp` with the content `int main() { return 0;}`; - root -l main.cpp. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From hea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707:3218,error,error,3218,https://root.cern,https://github.com/root-project/root/issues/11707,1,['error'],['error']
Availability,"55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this; entry=0x55ed2cc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:15350,error,error,15350,https://root.cern,https://github.com/root-project/root/issues/9595,1,['error'],['error']
Availability,6.22 PyROOT seg faults when accessing array members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:16,fault,faults,16,https://root.cern,https://github.com/root-project/root/issues/6468,1,['fault'],['faults']
Availability,"6.22.02 build error on mac OS 10.15. Building 6.22.02 from source on macOS fails. Note I maintain the ROOT6 port in MacPorts, and my ultimate aim here is to update that build to 6.22.02 (currently 6.22.00). We use a number additional options and dependencies, hence the cmake configure command is a bit long (apologies). 6.22.00 builds just fine using the exact same configuration, so the issue is new to 6.22.02. I have attached the output from the configure and build steps (as outlined below). [configure.log](https://github.com/root-project/root/files/5231518/configure.log). [build.log](https://github.com/root-project/root/files/5231520/build.log). Unfortunately the build log error messages aren't hugely helpful (at least to me) in pointing to the issue, so I am hoping someone can offer suggestions as to where to look. First indication of a problem is; ```; [ 74%] Linking CXX shared library ../lib/libCore.so; <snip>; make[1]: *** read jobs pipe: Resource temporarily unavailable. Stop.; make[1]: *** Waiting for unfinished jobs....[ 74%] Linking CXX shared library ../lib/libCore.so; ```. ## Expected behavior; Builds OK. ## To Reproduce; ```; git clone git@github.com:root-project/root.git; cd root; git checkout v6-22-02; cd ..; mkdir install build; cd build; cmake -G ""CodeBlocks - Unix Makefiles"" -DCMAKE_BUILD_TYPE=MacPorts -DCMAKE_INSTALL_PREFIX=""/opt/local"" -DCMAKE_INSTALL_NAME_DIR=""/opt/local/lib"" -DCMAKE_SYSTEM_PREFIX_PATH=""/opt/local;/usr"" -DCMAKE_C_COMPILER=""$CC"" -DCMAKE_CXX_COMPILER=""$CXX"" -DCMAKE_POLICY_DEFAULT_CMP0025=NEW -DCMAKE_POLICY_DEFAULT_CMP0060=NEW -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_COLOR_MAKEFILE=ON -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_MAKE_PROGRAM=/usr/bin/make -DCMAKE_MODULE_PATH=""/opt/local/share/cmake/Modules"" -DCMAKE_PREFIX_PATH=""/opt/local/share/cmake/Modules"" -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON -DCMAKE_INSTALL_RPATH=""/opt/local/lib"" -Wno-dev -Dgnuinstall=ON -Drpath=ON -DCMAKE_INSTALL_PREFIX=""/opt/local/libex",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6366:14,error,error,14,https://root.cern,https://github.com/root-project/root/issues/6366,2,['error'],['error']
Availability,6.22.02 build error on macOS 10.15,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6366:14,error,error,14,https://root.cern,https://github.com/root-project/root/issues/6366,1,['error'],['error']
Availability,6.22.02 build failure with -Dx11=OFF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6368:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/issues/6368,1,['failure'],['failure']
Availability,"6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:8458,down,download,8458,https://root.cern,https://github.com/root-project/root/issues/7249,1,['down'],['download']
Availability,"6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/libstdc++.so.6; #9 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10920:1210,avail,available,1210,https://root.cern,https://github.com/root-project/root/issues/10920,1,['avail'],['available']
Availability,6.26.04 Build failure on Ubuntu 22.04 amd64,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/issues/10777,1,['failure'],['failure']
Availability,6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:46:9: error: unknown type name '__SIZE_TYPE__'; typedef __SIZE_TYPE__ size_t;; ^; /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/etc/cling/lib/clang/9.0.1/include/stddef.h:74:9: error: unknown type name '__WCHAR_TYPE__'; typedef __WCHAR_TYPE__ wchar_t;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:28:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/strtok.h:6:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:75:1: error: unknown type name '_GLIBCXX_BEGIN_NAMESPACE_VERSION'; _GLIBCXX_BEGIN_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:9329,error,error,9329,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"6.28.04 with C++20 standard. It seems that the c++ standard gets downgraded during the compilation, because while compiling the `RRangeCast.hxx` it no longer recognize `std::span`. I am able to compile short C++ code involving `std::span`. This is the full error i get:. ```; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:186:27: error: ‘span’ is not a member of ‘std’; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~~~; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:186:32: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:186:33: error: expected unqualified-id before ‘>’ token; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:225:26: error: ‘span’ is not a member of ‘std’; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~~~; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:225:31: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^; /opt/root6/root-6.28.04_src/core/foundation/inc/ROOT/RRangeCast.hxx:225:32: error: expected unqualified-id before ‘>’ token; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; make[2]: *** [core/imt/CMakeFiles/Imt.dir/build.make:132: core/imt/CMakeFiles/Imt.dir/src/RTaskArena.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:32924: core/imt/CMakeFiles/Imt.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```. ### Reproducer. My [CMakeCache.txt](https://github.com/root-project/root/files/12080083/CMakeCache.txt) used for the build. ### ROOT version. ROOT 6.28.04. ### Installation method. build from source. ### Operating system. Ubuntu 20.04 running under WSL2. ### Additional context. Trying to build from source ROOT 6.28",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13270:1058,error,error,1058,https://root.cern,https://github.com/root-project/root/issues/13270,1,['error'],['error']
Availability,"64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1077:33: error: expected parameter declarator; template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:134:55: note: expanded from macro 'atomic_load'; #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1077:33: error: expected ')'; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:134:55: note: expanded from macro 'atomic_load'; #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST); ^; <built-in>:16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1077:33: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:134:46: note: expanded from macro 'atomic_load'; #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:4452,error,error,4452,https://root.cern,https://github.com/root-project/root/issues/6454,1,['error'],['error']
Availability,68713: removed dead statement; 67156: set an uninitialised class member fNBins; 67100: set an uninitialised class member fNBins; 67054: copy paste error fixed; 63262: uninitialised class member fFuncPtr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/399:147,error,error,147,https://root.cern,https://github.com/root-project/root/pull/399,1,['error'],['error']
Availability,7/602 Test #11: mathcore-testSampleQuantiles ...............................***Failed 2.24 sec; Test ordered data ....; Testing for type 7 :		.............	 OK !; Testing for type 1 :		.............	 OK !; Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7; .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5; Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8; ....; Test Failed for type 2; Testing for type 3 :		.............	 OK !; Testing for type 4 :		.............	 OK !; Testing for type 5 :		.............	 OK !; Testing for type 6 :		.............	 OK !; Testing for type 7 :		.............	 OK !; Testing for type 8 :		.............	 OK !; Testing for type 9 :		.............	 OK !; Test data in random order....; Testing for type 7 :		.............	 OK !; Testing for type 1 :		.............	 OK !; Testing for type 2 :		.... Failed for prob = 0.3 - R gives 0.85 TMath gives 0.7; .. Failed for prob = 0.6 - R gives 1.65 TMath gives 1.5; Failed for prob = 0.7 - R gives 1.9 TMath gives 1.8; ....; Test Failed for type 2; Testing for type 3 :		.............	 OK !; Testing for type 4 :		.............	 OK !; Testing for type 5 :		.............	 OK !; Testing for type 6 :		.............	 OK !; Testing for type 7 :		.............	 OK !; Testing for type 8 :		.............	 OK !; Testing for type 9 :		.............	 OK !; Test sample quantiles FAILED ; CMake Error at /builddir/build/BUILD/root-6.08.04/cmake/modules/RootTestDriver.cmake:196 (message):; error code: 255. The PR implements the same check for type < 4 that is done later in the else clause for type >= 4. So this treats all types the same and the test failure goes away.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/359:1404,Error,Error,1404,https://root.cern,https://github.com/root-project/root/pull/359,3,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"70/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behav",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2388,failure,failures,2388,https://root.cern,https://github.com/root-project/root/issues/7936,1,['failure'],['failures']
Availability,72fe06a437ff45b98fd4f96cd1ded502b3914f5e inadvertently changed the default from v2 (warnings) to v1 (errors). The former was the; effective default while the later was the default described only in comments/docs (i.e. the doc was wrong).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5011:101,error,errors,101,https://root.cern,https://github.com/root-project/root/pull/5011,1,['error'],['errors']
Availability,"77%] Built target clingMetaProcessor; [ 77%] Built target CLING; [ 77%] Built target LLVMRES; [ 77%] Built target ClingUtils; [ 77%] Built target Dictgen; [ 77%] Built target rootcling_stage1; [ 77%] Built target MetaCling; [ 77%] Generating G__Core.cxx, ../lib/Core.pcm; [ 77%] Linking CXX shared library ../../../lib/libCling.so; [ 77%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; While building module '_wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:; While building module '__wctype' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:; In file included from <module-includes>:1:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/___wctype.h:72:10: fatal error: cyclic dependency in module 'std': std -> _wctype -> __wctype -> std; #include <ctype.h>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/_wctype.h:36:10: fatal error: could not build module '__wctype'; #include <_types/_wctrans_t.h>; ~~~~~~~~^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:1:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/algorithm:1804:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/__algorithm/find.h:31:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/c++/v1/cwchar:112:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:1092,error,error,1092,https://root.cern,https://github.com/root-project/root/issues/16498,1,['error'],['error']
Availability,"7844901/147636210-34c8102b-8380-4b92-828d-097a6af7829d.png). C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: The command ""setlocal [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: .\emitFromPyTorch [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmEnd [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & goto :cmDone [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmErrorLevel [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: exit /b %1 [F:\gitP\root-project\root\build_amd64\tmva\pymva\test\SofieCompileModels_PyTorch.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(155,5): error MSB3073: :cmDone [F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9487:1632,error,error,1632,https://root.cern,https://github.com/root-project/root/issues/9487,1,['error'],['error']
Availability,"7d431bb3c767 in cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #22 0x00007d431bb3e1d9 in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #23 0x00007d431bb27790 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #24 0x00007d431b7e903e in HandleInterpreterException (metaProcessor=0x5ab8d59e1470, input_line=0x5ab8d6536800 "".X /tmp/./badcast.cpp"", compRes=; 0x7fffe3dd2650: cling::Interpreter::kSuccess, result=0x7fffe3dd26a0) at /opt/root_src/core/metacling/src/TCling.cxx:2438; ===========================================================; ```. root -l badcast.cpp+. ```; root [0] ; Processing badcast.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp//tmp/./badcast_cpp.so; In file included from input_line_9:6:; ././badcast.cpp:3:1: error: non-void function does not return a value [-Werror,-Wreturn-type]; }; ^; In file included from /tmp//tmp/badcast_cpp_ACLiC_dict.cxx:41:; /tmp/./badcast.cpp: In function ‘int badcast()’:; /tmp/./badcast.cpp:3:1: warning: no return statement in function returning non-void [-Wreturn-type]; 3 | }; | ^; In file included from /tmp//tmp/badcast_cpp_ACLiC_dict.cxx:41:; /tmp/./badcast.cpp: In function ‘int badcast()’:; /tmp/./badcast.cpp:3:1: warning: no return statement in function returning non-void [-Wreturn-type]; 3 | }; | ^; (int) 1116738714; root [1] ; ```. ### ROOT version. ```; ROOT v6.33/01; Built for linuxx8664gcc on May 10 2024, 07:02:39; From heads/cdoxy@v6-31-01-1881-g0b545d9b06; With g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0; Binary directory: /home/user/build/build-root-Desktop-Debug/bin; ```. ### Installation method. From source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15537:2422,error,error,2422,https://root.cern,https://github.com/root-project/root/issues/15537,1,['error'],['error']
Availability,"7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ...; 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]; 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]; 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]; 	Line 9722: 187>C:\Program Files (x86)\Micro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:24521,error,error,24521,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"8 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Set",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:4090,error,errors,4090,https://root.cern,https://github.com/root-project/root/issues/7982,1,['error'],['errors']
Availability,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:3334,error,error,3334,https://root.cern,https://github.com/root-project/root/pull/6143,6,"['Error', 'error']","['Error', 'error']"
Availability,"8. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c8868c |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8582:3602,Down,Download,3602,https://root.cern,https://github.com/root-project/root/issues/8582,1,['Down'],['Download']
Availability,"8.so.1.0; #13 0x00007fd99fc28783 in run_mod () from /lib64/libpython3.8.so.1.0; #14 0x00007fd99fb149ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0; #15 0x00007fd99fb14186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0; #16 0x00007fd99fb0b351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0; #17 0x00007fd99fbfb969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0; #18 0x00007fd99fde1042 in __libc_start_main () from /lib64/libc.so.6; #19 0x0000564fd09cf07e in _start (); ===========================================================; ```; This not only segfaults, but it reprints values from the first entry before doing that instead of the second entry, suggesting the array access results in some sort of memory corruption. . Running valgrind (with ROOT suppressions) suggests that cppyy is reading some unallocated memory:; ```$ valgrind --suppressions=/usr/share/root/valgrind-root.supp python breaks.py ; ==774799== Memcheck, a memory error detector; ==774799== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==774799== Using Valgrind-3.16.0 and LibVEX; rerun with -h for copyright info; ==774799== Command: python breaks.py; ==774799== ; 0; 0.9989327176093981; -0.43476438941434026; 0.7817962561955079; 0; 0.9989327176093981; ==774799== Invalid read of size 8; ==774799== at 0x13851E15: ??? (in /usr/lib64/root/libcppyy3_8.so.6.22.02); ==774799== by 0x4B9AD26: _PyObject_GenericGetAttrWithDict (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B8E712: _PyEval_EvalFrameDefault (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B8CD53: _PyEval_EvalCodeWithName (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4C07E78: PyEval_EvalCodeEx (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4C07E3A: PyEval_EvalCode (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4C29067: ??? (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4C28782: ??? (in /usr/lib64/libpython3.8.so.1.0); ==774799== by 0x4B149CD: PyRun_FileExFlags (in /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:4528,error,error,4528,https://root.cern,https://github.com/root-project/root/issues/6468,1,['error'],['error']
Availability,"86-64/ROOT/v6-28-04-14/lib/libCling.so; #16 0x00007fa76b142c97 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/tdietel/alice/sw/slc7_x86-64/ROOT/v6-28-04-14/lib/libCling.so; #17 0x00007fa76af8a0bc in HandleInterpreterException (metaProcessor=0x243df60, input_line=0x7fff0771e079 ""sortbug()"", compRes=; 0x7fff0771e03c: cling::Interpreter::kSuccess, result=0x7fff0771e170) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:2460; #18 0x00007fa76afa4749 in TCling::ProcessLine (this=0x16e7bc0, line=<optimized out>, error=0x7fff0771f04c) at /jenkins/workspace/build-any-ib/sw/20156516; /1/slc7_x86-64/GCC-Toolchain/v12.2.0-alice1-5/include/c++/12.2.0/bits/unique_ptr.h:191; #19 0x00007fa76afa4b02 in TCling::ProcessLineSynch (this=0x16e7bc0, line=0x16e8930 "".X /home/tdietel/alice/data/ole/./sortbug.C+"", error=0x7fff0771f04c); at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:3554; #20 0x00007fa7711777e7 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fff0771f04c, keep=<optimized out>) at /jenkins/workspace/build-any-ib; /sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TApplication.cxx:1661; #21 0x00007fa77172040c in TRint::ProcessLineNr (this=0x16b4f60, filestem=<optimized out>, line=0x7fff0771f060 "".x sortbug.C+"", error=0x7fff0771f04c) at /; jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:820; #22 0x00007fa771721fc6 in TRint::Run (this=this; entry=0x16b4f60, retrn=retrn; entry=false) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:461; #23 0x00000000004011dd in main (argc=<optimized out>, argv=0x7fff077211e8) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-0; 4/main/src/rmain.cxx:84; ```. I assume the bug can be triggered with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:8697,error,error,8697,https://root.cern,https://github.com/root-project/root/issues/13314,1,['error'],['error']
Availability,"86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator_base_types.h:67:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits> // For __void_t, is_convertible; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/ext/type_traits.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/move.h:57:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> // Brings in std::declval too.; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:70:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:27075,error,error,27075,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:12382,error,error,12382,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,"89f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]; 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]; 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]; 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:10067,error,error,10067,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"8:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wctype.h:31:10: fatal error: could not build module '_wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <_wctype.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 'std'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <new>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Failed to extract C++ standard library version.; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Extraction of runtime standard library version was: ''; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime' imported from input_line",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:12424,error,error,12424,https://root.cern,https://github.com/root-project/root/issues/16449,1,['error'],['error']
Availability,"8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:14636,error,error,14636,https://root.cern,https://github.com/root-project/root/issues/9595,1,['error'],['error']
Availability,"90 is 64 bytes inside a block of size 72 alloc'd; operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so); TStorage::ReAlloc(void*, unsigned long, unsigned long) (TStorage.cxx:238); TOrdCollection::SetCapacity(int) (TOrdCollection.cxx:387); TOrdCollection::AddAt(TObject*, int) (TOrdCollection.cxx:66); TOrdCollection::AddLast(TObject*) (TOrdCollection.cxx:102); TSeqCollection::Add(TObject*) (TSeqCollection.h:38); TSystem::AddTimer(TTimer*) (TSystem.cxx:476); TUnixSystem::AddTimer(TTimer*) (TUnixSystem.cxx:2974); TTimer::TurnOn() (TTimer.cxx:247); TGCommandPlugin::TGCommandPlugin(TGWindow const*, unsigned int, unsigned int) (TGCommandPlugin.cxx:110); MainWindow::MainWindow(TGWindow const*, unsigned int, unsigned int, PulseSurfer*, unsigned int, unsigned int, bool) (MainWindow.cpp:616); main (main.cxx:86); ```. and several more can be seen in helgrind.log in the forum post, or in helgrind.xml attached here. [helgrind.xml.zip](https://github.com/root-project/root/files/6612569/helgrind.xml.zip). When opening the XML with QtCreator, they are rendered nicely:; ![image](https://user-images.githubusercontent.com/10653970/121102408-7e870b00-c7cb-11eb-8436-816dd434bdf3.png). ### Expected behavior; No data races are found. Or they are added to helgrind-root.supp. ### To Reproduce; 0. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 1. Download https://root-forum.cern.ch/uploads/short-url/z59x8uBIVMEE5S46EWUUHyyO3df.zip and unzip it, cd into it; 2. mkdir build && cd build; 3. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 4. make; 5. valgrind --xml=yes --xml-file=helgrind.xml --tool=helgrind --suppressions=/pathtoDebugROOT/etc/helgrind-root.supp --log-file=helgrind.log gui/runGUI --prbs 3 -q. ### Setup; 1. ROOT master; 2. Ubuntu 18; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/14; https://github.com/root-project/root/issues/8297",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365:5851,Down,Download,5851,https://root.cern,https://github.com/root-project/root/issues/8365,1,['Down'],['Download']
Availability,"94f70) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 cling::IncrementalExecutor::executeWrapper (this=0x174094f70, function=..., returnValue=0x7fffd51c7cb0) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #17 0x00007fff9a39b964 in cling::Interpreter::RunFunction (this=0x1740192b0, FD=<optimized out>, res=res; entry=0x7fffd51c7cb0) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fff9a3a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffd51c7cb0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #19 0x00007fff9a24178c in TCling::Calc (this=0x174039100, line=0x174e16fa0 ""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., error=0x7fffd51c7de8) at /usr/include/c++/8/bits/basic_string.h:256; #20 0x00007fffa32551c8 in ROOT::Internal::RDF::<lambda(const string&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""...) at /usr/include/c++/8/bits/basic_string.h:2294; #21 ROOT::Internal::RDF::InterpreterCalc (code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., context=""RLoopManager::Run"") at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RDFUtils.cxx:357; #22 0x00007fffa326c338 in ROOT::Detail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:23362,error,error,23362,https://root.cern,https://github.com/root-project/root/issues/12372,1,['error'],['error']
Availability,"9cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]; 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]; 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]; 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]; 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\C",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:12058,error,error,12058,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"9e6; 91f3ae56. ### Expected behavior. Passing test on s390x. ### To Reproduce. 1. Build root for s390x; 2. Run unit tests. ### Setup. 1. ROOT version: 6.28.00; 2. Operating system: Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestPr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1298,Failure,Failure,1298,https://root.cern,https://github.com/root-project/root/issues/12430,1,['Failure'],['Failure']
Availability,": '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:103:29: error: expected ';' at end of declaration list; const char* name() const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:110:5: error: unknown type name '_GLIBCXX23_CONSTEXPR'; _GLIBCXX23_CONSTEXPR; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:111:50: error: expected ';' at end of declaration list; bool operator==(const type_info& __arg) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:114:50: error: expected ';' at end of declaration list; bool operator!=(const type_info& __arg) const _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:165:41: error: expected ';' at end of declaration list; bool __equal(const type_info&) const _GLIBCXX_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:223:15: error: expected ';' at end of declaration list; bad_cast() _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:11513,error,error,11513,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o ti,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:1301,error,error,1301,https://root.cern,https://github.com/root-project/root/pull/5054,5,['error'],['error']
Availability,: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:6686,error,error,6686,https://root.cern,https://github.com/root-project/root/pull/5054,1,['error'],['error']
Availability,": Bad Request (400); ```; The error is triggered [here](https://github.com/root-project/root/blob/5d536b29d7ce437aad79ff046788735a33fb1dbe/net/net/src/TWebFile.cxx#L866). Curiously, with 6.24 the equivalent `TFile::Open` doesn't error; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.24/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 03 2021, 08:02:00 |; | From tag , 28 June 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; root [1] f->GetName(); (const char *) ""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root""; ```. But it still errors with the latest master@59e754a; ```cpp; $: root; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 23 2021, 13:49:23 |; | From heads/master@v6-25-01-1831-g61575a3f47 |; | With c++ (GCC) 11.2.1 20210728 (Red Hat 11.2.1-1) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f = TFile::Open(""https://github.com/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root"");; Error in <TWebFile::GetFromWeb10>: https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root?: Bad Request (400); root [1] f; (TFile *) nullptr; ```. ### Expected behavior; File is correctly open both with `TFile::Open` and the `TWebFile` constructor. ### Setup; ROOT 6.24/02 from conda, ROOT master built from source on a fedora34 machine. ### Additional context. I have not",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8890:1441,error,errors,1441,https://root.cern,https://github.com/root-project/root/issues/8890,1,['error'],['errors']
Availability,": Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling; Maybe you need to load the corresponding shared library?; root [1]; ```; A really interesting observation is that `root.exe` includes and links to the CUDA SDK by default when it is available. ```C++; $ root.exe ; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); (cudaError_t) (cudaSuccess) : (unsigned int) 0; root [1] ; ``` ; I think this is related to TMVA using the CUDA library. Unfortunately this is not enough, because without `-xcuda` root cannot compile CUDA specific things like kernel ( `__global__ void kernel(){}`). ### Environment. * Ubuntu 20.04.2; * GCC 10.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:14484,avail,available,14484,https://root.cern,https://github.com/root-project/root/issues/7518,1,['avail'],['available']
Availability,": Subprocess aborted; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-rdf. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 491/1272 Test #431: gtest-tree-ntuple-v7-test-ntuple-rdf ................................***Failed 74.39 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 1 test from 1 test suite.; [----------] Global test environment set-up.; [----------] 1 test from RNTuple; [ RUN ] RNTuple.RDF; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Error in <TFile::Init>: file test_ntuple_rdf.root has an incorrect header length (1677721600) or incorrect end of file length (-4176807177076801536); *** Break *** segmentation violation; [ --- ]; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 139; ~~~; #### gtest-tree-ntuple-v7-test-ntuple-serialize. Endian issue: 256 = 0x0100, expected 0x0001 = 1.; ~~~; 457/1272 Test #432: gtest-tree-ntuple-v7-test-ntuple-serialize ..........................***Failed 0.24 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 14 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 14 tests from RNTuple; [ RUN ] RNTuple.SerializeInt; [ OK ] RNTuple.SerializeInt (0 ms); [ R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:10872,Error,Error,10872,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Error'],['Error']
Availability,": declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ~~~~~~~~~~~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘RooListProxy RooExpPoly::_coefList’ is protected within this context; 456 | for (const auto &coef : pdf->_coefList()) {; | ^~~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:45: error: no match for call to ‘(const RooListProxy {aka const RooCollectionProxy<RooArgList>}) ()’; 456 | for (const auto &coef : pdf->_coefList()) {; | ~~~~~~~~~~~~~~^~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:44184: roofit/hs3/CMakeFiles/RooFitHS3.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; ```. Commented the body of the whole function. Got another error. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:63: warning: unused parameter ‘func’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~~~~~~~~^~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:444:79: warning: unused parameter ‘elem’ [-Wunused-parameter]; 444 | bool exportObject(RooJSONFactoryWSTool *, const RooAbsArg *func, JSONNode &elem) const override; | ~~~~~~~~~~^~~~; [ 98%] Linking CXX shared library ../../lib/libRooFitHS3.so; /usr/bin/ld: CMakeFiles/RooFitHS3.dir/src/JSONFactories",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:3854,Error,Error,3854,https://root.cern,https://github.com/root-project/root/issues/13101,1,['Error'],['Error']
Availability,": error: reference to __device__ function '__nvvm_atom_sys_add_gen_f' in __host__ function; return __nvvm_atom_sys_add_gen_f(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:201:10: note: '__nvvm_atom_sys_add_gen_f' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: error: reference to __device__ function '__nvvm_atom_xchg_gen_i' in __host__ function; __nvvm_atom_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:205:7: note: '__nvvm_atom_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: error: reference to __device__ function '__nvvm_atom_cta_xchg_gen_i' in __host__ function; __nvvm_atom_cta_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:209:7: note: '__nvvm_atom_cta_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: error: reference to __device__ function '__nvvm_atom_sys_xchg_gen_i' in __host__ function; __nvvm_atom_sys_xchg_gen_i((int *)__p, __nv_float_as_int(__v)));; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:213:7: note: '__nvvm_atom_sys_xchg_gen_i' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:244:16: error: static declaration of '__finite' follows non-static declaration; __DEVICE__ int __finite(double __a) { return __nv_isfinited(__a); }; ^; cling: /usr/include/x86_64-linux-gnu/bits/mathca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:8968,error,error,8968,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,": error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1581 | CALL VZERO(JNAMES,20); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:2184:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 2184 | CALL VZERO(I1,37); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: ‘vzero’ was previously declared here; 105 | SUBROUTINE VZERO (A,N); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:105:22: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/hbook.f:1959:18: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 1959 | COMMON/PAWC/NWPAW,IXPAWC,IHDIV,IXHIGZ,IXKU,FENC(5),LMAIN,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:205:19: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 205 | COMMON /PAWC/ NWPAW,IXPAWC,IHBOOK,IXHIGZ,IXKU,IFENCE(5); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: ‘pawc’ was previously declared here; 278 | common/pawc/paw(nwpaw); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/main/src/g2root.f:278:18: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/ntuple1.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/ntuple1.C; [ 56%] Copying /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C; /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/parallelcoord.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/par",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:3826,error,error,3826,https://root.cern,https://github.com/root-project/root/issues/11657,1,['error'],['error']
Availability,": ‘template<class SubC> template<class F, class INTEGER, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 132 | template<class F, class INTEGER, class R, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:130:69: note: ‘template<class SubC> template<class F, class R, class Cond> typename std::result_of<F()>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, unsigned int, R)’; 130 | template<class F, class R, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:270:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::initializer_list<T>, R)’; 270 | auto TExecutorCRTP<SubC>::MapReduce(F func, std::initializer_list<T> args, R redfunc) -> typename std::result_of<F(T)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class C",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11495:11994,error,error,11994,https://root.cern,https://github.com/root-project/root/issues/11495,2,['error'],['error']
Availability,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:1042,error,errors,1042,https://root.cern,https://github.com/root-project/root/pull/11808,1,['error'],['errors']
Availability,":/Users/sftnight/build/release/include\ROOT/RVec.hxx:1455:68: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1473:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1491:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(T v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1510:113: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR2(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1524:112: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1537:54: error: use of undeclared identifier 'M_PI'; 1306: T DeltaR(T eta1, T eta2, T phi1, T phi2, const T c = M_PI); 1306: ^; 1306: Error in <ACLiC>: Executing 'C:\Users\sftnight\build\release\bin\rootcling -v0 ""--lib-list-prefix=C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_map"" -f ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_dict.cxx"" -rml test_ctors_C -rmf ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C.rootmap"" -DR__ACLIC_ROOTMAP -I%ROOTSYS%\include -IC:/Users/sftnight/build/release/roottest/root/dataframe -D__ACLIC__ ""C:/Users/sftnight/git/roottest/root/dataframe/test_ctors.C"" ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_linkdef.h""' failed!; ```. So let's re-introduce `#include <math.h>` and `_USE_MATH_DEFINES` on Windows if `M_PI` is not defi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6727:2195,error,error,2195,https://root.cern,https://github.com/root-project/root/pull/6727,1,['error'],['error']
Availability,":128:51: error: no type named 'string' in namespace 'std'; virtual void GetPartiallyDesugaredName(std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:129:63: error: no type named 'string' in namespace 'std'; virtual bool IsAlreadyPartiallyDesugaredName(const std::string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:8024,error,error,8024,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,":1455:68: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1473:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1491:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(T v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1510:113: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR2(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1524:112: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaR(const RVec<T>& eta1, const RVec<T>& eta2, const RVec<T>& phi1, const RVec<T>& phi2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1537:54: error: use of undeclared identifier 'M_PI'; 1306: T DeltaR(T eta1, T eta2, T phi1, T phi2, const T c = M_PI); 1306: ^; 1306: Error in <ACLiC>: Executing 'C:\Users\sftnight\build\release\bin\rootcling -v0 ""--lib-list-prefix=C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_map"" -f ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_dict.cxx"" -rml test_ctors_C -rmf ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C.rootmap"" -DR__ACLIC_ROOTMAP -I%ROOTSYS%\include -IC:/Users/sftnight/build/release/roottest/root/dataframe -D__ACLIC__ ""C:/Users/sftnight/git/roottest/root/dataframe/test_ctors.C"" ""C:\Users\sftnight\build\release\roottest\root\dataframe\test_ctors_C_ACLiC_linkdef.h""' failed!; ```. So let's re-introduce `#include <math.h>` and `_USE_MATH_DEFINES` on Windows if `M_PI` is not defined, trying not to break the C++ modules on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6727:2441,error,error,2441,https://root.cern,https://github.com/root-project/root/pull/6727,2,"['Error', 'error']","['Error', 'error']"
Availability,":16:26: note: expanded from here; #define __ATOMIC_SEQ_CST 5; ^; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1099:33: note: to match this '('; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:63: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class MyClass with content:. #line 1 ""libMyLibrary dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""MyClass.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ROOT_prompt_0:1:1: error: must use 'class' tag to refer to type 'MyClass' in this scope; MyClass c;; ^; class ; ROOT_prompt_0:1:1: note: class 'MyClass' is hidden by a non-type declaration of 'MyClass' here; ROOT_prompt_0:1:9: error: variable has incomplete type 'MyClass'; MyClass c;; ^; libMyLibrary dictionary forward declarations' payload:5:62: note: forward declaration of 'MyClass'; class __attribute__((annotate(""$clingAutoload$MyClass.h""))) MyClass;; ^; root [1]; ```. ## Expected behavior. When using the same demonstrator code on Linux, everything goes as expected. ```; [bash][Legolas]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] MyClass c;; root [1]; ```. ## To Reproduce. Just take the demonstrator code from https://github.com/krasznaa/root-boost-dictionary-error, tweak its [Makefile](https://github.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:9824,error,error,9824,https://root.cern,https://github.com/root-project/root/issues/6454,2,['error'],['error']
Availability,":321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:9162,error,error,9162,https://root.cern,https://github.com/root-project/root/issues/15738,1,['error'],['error']
Availability,":33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:227:22: error: expected primary-expression before ‘>’ token; 227 | return std::span<U>(arr, arr + N);; | ^; make[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/main.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/main.dir/all] Error 2; make: *** [Makefile:91: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11587:1620,error,error,1620,https://root.cern,https://github.com/root-project/root/issues/11587,6,"['Error', 'error']","['Error', 'error']"
Availability,":75: error: no type named 'value' in the global namespace; did you mean 'Value'?; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^~~~~~~; Value; /home/root-build/etc/cling/Interpreter/Value.h:42:26: note: 'Value' declared here; class CLING_LIB_EXPORT Value {; ^; /home/root-build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ~~~~~~~^; /home/root-build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:29: error: 'T' does not refer to a value; = std::is_reference<T>::value ?; ^; /home/root-build/etc/cling/Interpreter/Value.h:195:21: note: declared here; template <class T>; ^; /home/root-build/etc/cling/Interpreter/Value.h:198:33: error: no member named 'value' in the global namespace; = std::is_reference<T>::value ?; ~~^; /home/root-build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:61: error: expected ')'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/root-build/etc/cling/Interpreter/Value.h:199:30: note: to match this '('; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include <cling/Interpreter/RuntimeUniverse.h>; ~~~~~~~~^; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:4721,error,error,4721,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,":93: note: ‘template<class SubC> template<class F, class INTEGER, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, ROOT::TSeq<INTEGER>, R)’; 132 | template<class F, class INTEGER, class R, class Cond = noReferenceCond<F, INTEGER>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:130:69: note: ‘template<class SubC> template<class F, class R, class Cond> typename std::result_of<F()>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, unsigned int, R)’; 130 | template<class F, class R, class Cond = noReferenceCond<F>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:102:7: note: ‘class ROOT::TExecutorCRTP<SubC>’ defined here; 102 | class TExecutorCRTP {; | ^~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:284:1: error: no declaration matches ‘typename std::result_of<F(INTEGER)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 284 | auto TExecutorCRTP<SubC>::MapReduce(F func, std::vector<T> &args, R redfunc) -> typename std::result_of<F(T)>::type; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:142:70: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, const std::vector<T*>&)’; 142 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:140:70: note: ‘template<class SubC> template<class F, class T, class Cond> T* ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T*>&)’; 140 | template<class F, class T,class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:138:81: note: ‘template<class SubC> template<class F, class T, class R, class Cond> typename std::result_of<F(INTEGER, ...)>::type ROOT::TExecutorCRTP<SubC>::MapReduce(F, std::vector<T>&, R)’; 138 | template<class F, class T, class R, class Cond = noR",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11495:14796,error,error,14796,https://root.cern,https://github.com/root-project/root/issues/11495,2,['error'],['error']
Availability,"::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. 8 errors detected in the compilation of ""/build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu"".; ```. The missing functions were [deprecated in cuDNN 8.0](https://docs.nvidia.com/deeplearning/cudnn/archives/cudnn-897/api/index.html#cudnnRNNForwardTraining) and [removed in cuDNN 9.0](https://docs.nvidia.com/deeplearning/cudnn/latest/api/overview.html#id1). ### Reproducer. Build from source with cuDNN 9.0 or newer. ### ROOT version. 6.30.06. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:7459,error,errors,7459,https://root.cern,https://github.com/root-project/root/issues/15413,1,['error'],['errors']
Availability,"::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &, bool) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(545): error: identifier ""cudnnRNNBackwardData"" is undefined; cudnnStatus_t status = cudnnRNNBackwardData(; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::RNNDescriptors_t &, TMVA::DNN::TCudnn<AFloat>::RNNWorkspace_t &) [with AFloat=Double_t]"" at line 44 of /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn.cu. /build/root/src/root-6.30.06/tmva/tmva/src/DNN/Architectures/Cudnn/RecurrentPropagation.cu(571): error: identifier ""cudnnRNNBackwardWeights"" is undefined; status = cudnnRNNBackwardWeights(cudnnHandle, rnnDesc, seqLength, desc.xDesc.data(), x.GetDataPointer(),; ^; detected during instantiation of ""void TMVA::DNN::TCudnn<AFloat>::RNNBackward(const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t &, const TMVA::DNN::TCudnn<AFloat>::Tensor_t ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15413:5487,error,error,5487,https://root.cern,https://github.com/root-project/root/issues/15413,1,['error'],['error']
Availability,"::__type = RooTemplateProxy; typename std::__strip_reference_wrapper::type>::__type = std::shared_ptr]':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/interface/RooFitFunction.h:56:37: required from 'root::RooFitFunction::RooFitFunction(const char*, const char*, const Expr&, RooAbsReal&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&, RooAbsReal&, funct::Parameter&) [with X = funct::X; Expr = funct::Expression]'; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_12_5_ROOT6_X_2022-08-14-2300/src/PhysicsTools/Utilities/test/testRooFitFunction.cpp:30:77: required from here; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:572:14: error: no matching function for call to 'std::pair, RooTemplateProxy >::pair(std::shared_ptr, RooTemplateProxy)'; 572 | return __pair_type(std::forward<_T1>(__x), std::forward<_T2>(__y));; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/gcc/10.3.0-84898dea653199466402e67d73657f10/include/c++/10.3.0/bits/stl_pair.h:452:9: note: candidate: 'template std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = std::shared_ptr; _T2 = RooTemplateProxy]'; 452 | pair(tuple<_Args1...>&, tuple<_Args2...>&,; | ^~~~; ```. Note that root master commit https://github.com/root-project/root/commit/cd992545ae works fine. ### Expected behavior; Build should not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forg",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11188:1798,error,error,1798,https://root.cern,https://github.com/root-project/root/issues/11188,1,['error'],['error']
Availability,"::isfinite;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace; using ::isinf;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run you",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:2260,Error,Error,2260,https://root.cern,https://github.com/root-project/root/issues/8418,1,['Error'],['Error']
Availability,"::message_t>’ to ‘void*’; /usr/include/zmq.hpp:635:21: note: candidate: bool zmq::socket_t::recv(zmq::message_t*, int); inline bool recv (message_t *msg_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:635:21: note: no known conversion for argument 1 from ‘std::reference_wrapper<zmq::message_t>’ to ‘zmq::message_t*’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: error: ‘m_fds’ was not declared in this scope; auto it = m_fds.find(fd);; ^~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:231:14: note: suggested alternative: ‘m_free’; auto it = m_fds.find(fd);; ^~~~~; m_free; Consolidate compiler generated dependencies of target obj.clingInterpreter; [ 73%] Built target obj.clingInterpreter; [ 73%] Built target clingInterpreter; [ 73%] Built target CLING; [ 73%] Built target clad; [ 73%] Built target LLVMRES; Consolidate compiler generated dependencies of target ClingUtils; roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build.make:89: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o' failed; make[2]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/src/ZeroMQPoller.cpp.o] Error 1; make[2]: Target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/build' not remade because of errors.; CMakeFiles/Makefile2:35161: recipe for target 'roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all' failed; make[1]: *** [roofit/roofitZMQ/CMakeFiles/RooFitZMQ.dir/all] Error 2; (...); ```; It seems that the problem is related to the system provided ""`libzmq`"".; The configuration step says:; `-- ZeroMQ not found. Switching on builtin_zeromq option`; but it also finds:; `pkgcfg_lib_PC_LIBZMQ_zmq:FILEPATH=/usr/lib/x86_64-linux-gnu/libzmq.so`; and then it uses the system provided `/usr/include/zmq.hpp` (from the ""`libzmq3-dev 4.2.5-1ubuntu0.2`"" package).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:3398,Error,Error,3398,https://root.cern,https://github.com/root-project/root/issues/10107,3,"['Error', 'error']","['Error', 'errors']"
Availability,"::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", 2 , false, false ) ;; process_tree(""Example 2"", 2 , true, false ) ;; process_tree(""Example 3"", 2 , false, true ) ;; process_tree(""Example 4"", 2 , true, true ) ;. process_tree(""Example 5"", 1 , false, false ) ;; process_tree(""Example 6"", 1 , true, false ) ;; process_tree(""Example 7"", 1 , false, true ) ;; process_tree(""Example 8"", 1 , true, true ) ;; }; ```. Output:; ```; Starting example...; Processing of 'Example 1' took 1770 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 2' took 1539 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 3' took 781 milliseconds, (nFiles=2, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 4' took 851 milliseconds, (nFiles=2, GetEntries=1, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Processing of 'Example 5' took 661 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 6' took 639 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=0) Result: avg=0.499192, # Errors: 0; Processing of 'Example 7' took 269 milliseconds, (nFiles=1, GetEntries=0, DeactivateBranches=1) Result: avg=0.499192, # Errors: 0; Error! No bytes were read!; Error! No bytes were read!; Error! No bytes were read!; Omiting to print further errors ...; Processing of 'Example 8' took 182 milliseconds, (nFiles=1, GetEntries=1, DeactivateBranches=1) Result: avg=0.333333, # Errors: 2500000; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7567:3078,Error,Errors,3078,https://root.cern,https://github.com/root-project/root/issues/7567,1,['Error'],['Errors']
Availability,":Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression) =>; runtime_error: ; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression) =>; runtime_error: ; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Define(basic_string_view<char,char_traits<char> > name, basic_string_view<char,char_traits<char> > expression) =>; runtime_error: ; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state.; ```. ### Expected behavior. Expected behavior that identical branch names don't interfere as they accessed with different tree aliases `cluster.vec` and `vertex.vec` and should be distinguished with the following output:. ```; 10.0; 20.0; 30.0; ```. ### Setup; 1. ROOT version 6.22/00 from /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc9-opt/bin/root; 2. OS: RedHat CentOS 7.9.2009; 3. Python 3.7.6 from /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc9-opt/bin/python. ### Additional context; 1) **With** Cluster tree attached as a friend `df.GetColumnType(""vertex.vec"")` yields :; ```; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944:5437,error,error,5437,https://root.cern,https://github.com/root-project/root/issues/6944,1,['error'],['error']
Availability,":PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “A P X Y0 S ; Z ; 5 s=0.5 ; 3” which means the graph is drawn with Axes, Markers, no Errors on X, no errors on points with y = 0 and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with lines without anything on their tip. The second error dimension (Point to Point Systematics) is drawn with boxes of half the width of the X-Errors. The third error dimension (Common Systematics) is drawn as an filled error band. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Getter and Setter functions for full TAttFill and TAttLine objects to get / set all attributes at once. To keep full compatibility with TGraphAsymmErrors by default the TAttFill and TAttLine attributes of the object are being used for all error dimensions. To activate using the individual ones add the Draw option “S” to the first block of the Draw options like in my example. I hope you find my class as useful as I do and vote for it to become part of ROOT in the future. :smile: . I tried to run the tests, but they failed at files having nothing to do with my implementation. There seem to be a few problem in the master branch which would explain why the nightly build failed. I will try to investigate more. If you encounter any ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:4873,error,error,4873,https://root.cern,https://github.com/root-project/root/pull/3449,2,['error'],['error']
Availability,":PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can specify x0 or y0 to skip points with x = 0 or y = 0 The Draw option s=%f can be used to multiply the corresponding x errors with %f. This is useful in combination with e.g. option 2 if the boxes are supposed to have only half the width of the bin, in this case the option would be s=0.5. Per default the Fill and Line Styles of the Graph are being used for all error dimensions. To use the specific ones add the draw option s to the first block.; In my example plot the drawing options are “a p s ; ; 5 s=0.5” which means the graph is drawn with Axes, Markers and individual Fill and Line attributes for all error dimensions for the general part. The first error dimension (statistical errors) is drawn with default settings. The second error dimension (systematic errors) is drawn with boxes of half the width of the X-Errors. **Individual Fill and Line Attributes for each error dimension**; This is being realized by overloading the Getter and Setter functions of TAttFill and TAttLine with an additional dimension parameter. Furthermore there are Gett",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:3326,error,errors,3326,https://root.cern,https://github.com/root-project/root/pull/3452,1,['error'],['errors']
Availability,":Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.assertEqual(v.data(), ''.join(elems)); AssertionError: '' != 'abc'; + abc; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:3410,error,error,3410,https://root.cern,https://github.com/root-project/root/issues/12429,1,['error'],['error']
Availability,":TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> >, std::hash<std::__cxx11::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::unique_ptr<ROOT::Internal::TNamedBranchProxy, std::default_delete<ROOT::Internal::TNamedBranchProxy> > > > >::operator[]' requested here; fProxies[bpName].reset(p);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:915:12: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; void _M_rehash_aux(size_type __n, std::true_type);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/hashtable.h:918:12: note: candidate function not viable: no known conversion from 'integral_constant<[...], true aka true>' to 'integral_constant<[...], false>' for 2nd argument; void _M_rehash_aux(size_type __n, std::false_type);; ^; Error: /home/jhahnfel/ROOT/build/bin/rootcling: compilation failure (/home/jhahnfel/ROOT/build/lib/libTreePlayer8033212c3f_dictUmbrella.h); ```; and; ```; FAILED: montecarlo/pythia8/G__EGPythia8.cxx lib/EGPythia8.pcm; [...]; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:601:2: error: no matching member function for call to '_M_move_assign'; _M_move_assign(std::move(__x), __bool_constant<__move_storage>());; ^~~~~~~~~~~~~~; /usr/include/Pythia8/LHEF3.h:212:25: note: in instantiation of member function 'std::vector<Pythia8::XMLTag *, std::allocator<Pythia8::XMLTag *> >::operator=' requested here; tags.back()->tags = findXMLTags(tags.back()->contents, &leftovers);; ^; /usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/stl_vector.h:1677:7: note: candidate function not viable: no known conversion from 'integral_constant<...>' to 'integral_constant<...>' for 2nd argument; _M_move_assign(vector&& __x, std::true_type) noexcep",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8642:4309,Error,Error,4309,https://root.cern,https://github.com/root-project/root/issues/8642,2,"['Error', 'failure']","['Error', 'failure']"
Availability,":Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentation violation; ===========================================================; There was a crash (#8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fff89ef2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fff89e5a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fff8ac49ad8 in system_compat () from /lib64/glibc-hwcaps/power9/libpthread-2.28.so; #3 0x00007fff7c7a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::Sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:26230,failure,failures,26230,https://root.cern,https://github.com/root-project/root/issues/12372,1,['failure'],['failures']
Availability,":\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:617:16: error: redefinition of '__crt_locale_pointers'; typedef struct __crt_locale_pointers; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:603:16: note: previous definition is here; typedef struct __crt_locale_pointers; ^; In file included from libGeom dictionary payload:17:; In file included from D:/ROOT/root_v6.30.02.win64.vc17\include\TGeoExtension.h:15:; In file included from C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h:625:16: error: redefinition of '_Mbstatet'; typedef struct _Mbstatet; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt.h:611:16: note: previous definition is here; typedef struct _Mbstatet; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class gGeoManager with content:. #line 1 ""libGeom dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""TGDMLMatrix.h""; #include ""TGeoArb8.h""; #include ""TGeoAtt.h""; #include ""TGeoBBox.h""; #include ""TGeoBoolNode.h""; #include ""TGeoBranchArray.h""; #include ""TGeoBuilder.h""; #include ""TGeoCache.h""; #include ""TGeoCompositeShape.h""; #include ""TGeoCone.h""; #include ""TGeoElement.h""; #include ""TGeoEltu.h""; #include ""TGeoExtension.h""; #include ""TGeoGlobalMagField.h""; #include ""TGeoHalfSpace.h""; #include ""TGeoHelix.h""; #include ""TGeoHype.h""; #include ""TGeoManager.h""; #include ""TGeoMaterial.h""; #include ""TGeoMatrix.h""; #include ""TGeoMedium.h""; #include ""TGeoNavigator.h""; #include ""TGeoNode.h""; #include ""TGeoOpticalSurface.h""; #include ""TGeoPara.h""; #include ""TGeoParaboloid.h""; #include ""TGeoParallelWorld.h""; #include ""TGeoPatternFinder.h""; #include ""TGeoPcon.h""; #include ""TGeoPgon.h""; #include ""TGeoPhysicalConst",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14302:3021,Error,Error,3021,https://root.cern,https://github.com/root-project/root/issues/14302,2,['Error'],['Error']
Availability,":\root\interpreter\llvm\src\tools\clang\include\clang\Parse\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 10820: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\2d94291ae923dd90fd692d0cf898f153\DiagnosticGroups.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\24908a452b92963474e9dfba6fa5a31f\ClangDiagnosticGroups.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Basic\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 10840: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\2d94291ae923dd90fd692d0cf898f153\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\24908a452b92963474e9dfba6fa5a31f\ClangDiagnosticCommon.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\Basic\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]; 	Line 10842: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandList.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandList.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]; 	Line 10860: 217>C:\Program",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:4704,error,error,4704,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,":length_error'; '; what(): what(): vector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insertvector::_M_fill_insert; terminate called after throwing an instance of '. terminate called after throwing an instance of 'std::length_errorstd::length_error'. '; what(): what(): vector::_M_fill_insert; vector::_M_fill_insert; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of 'terminate called after throwing an instance of 'std::length_errorstd::length_errorstd::length_error'; what(): vector::_M_fill_insert; what(): vector::_M_fill_insert; '; '; what(): vector::_M_fill_insert what(): ; vector::_M_fill_insert; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; what(): vector::_M_fill_insert; terminate called after throwing an instance of 'std::length_error'; terminate called after throwing an instance of ' what(): vector::_M_fill_insert; std::length_error'; terminate called after throwing an instance of 'std::length_error what(): terminate called after throwing an instance of ''; terminate called after throwing an instance of 'vector::_M_fill_insertstd::length_error; '; std::length_error'; what(): vector::_M_fill_insert; what(): vector::_M_fill_insert; what(): vector::_M_fill_insert; RooRealMPFE::evaluate(nll_exp_expData_55d734b4c5e0_MPFE0) ERROR: unexpected message from server process: 8; ```. At the same time, either setting `BatchMode(0)` or reducing the number of requested CPU cores allows to avoid this misbehavior. I have also encountered a case (with a complex simultanous fit) where the `BatchMode(1)` alone was leading to this terminate even ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9406:3034,ERROR,ERROR,3034,https://root.cern,https://github.com/root-project/root/issues/9406,1,['ERROR'],['ERROR']
Availability,":path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574:1595,error,error,1595,https://root.cern,https://github.com/root-project/root/issues/13574,2,"['Error', 'error']","['Error', 'error']"
Availability,":string & /*nondef*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:130:63: error: no type named 'string' in namespace 'std'; const std::string & /*nameLong*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:131:47: error: no type named 'string' in namespace 'std'; virtual bool IsDeclaredScope(const std::string & /*base*/, bool & /*isInlined*/) = 0;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:8318,error,error,8318,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"; ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) ; ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**; ; Many thanks in advance for the fix that would be super helpful, ; In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),; Best, ; Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndErrorSize(10). nPoints = 10; # Set ymin and ymax on purpose so that some error bars should be go beyon this range ; ymax = 4; ymin = 0. # Data x, y; data_x = array('d', list(range(nPoints))); data_y = array('d', [2.]*nPoints). # x and y up/down errors ; # Increasing y-error for each points; unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]); unc_x_lo = array('d', [0]*nPoints); unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom ; data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(); pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9); pad.Draw(); pad.cd(). xminFrame = min(data_x) - 0.5 ; xmaxFrame = max(data_x) + 0.5 ; yminFrame = ymin; ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi); gr.SetMarkerColor(2); gr.SetLineColor(ROOT.kRed); gr.SetMarkerStyle(20); gr.SetMarkerColor(ROOT.kBlue); gr.SetMarkerSize(1.5); gr.SetLineWidth(3); gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""); ```. **testErrorGraph_v2**; ```Python; import ROOT ; from array import array. ROOT.gROOT.SetBatch(True); ROOT.gStyle.SetEndError",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:2831,down,down,2831,https://root.cern,https://github.com/root-project/root/issues/16070,3,"['down', 'error']","['down', 'error', 'errors']"
Availability,"; ""_libintl_bind_textdomain_codeset"", referenced from:; __locale_bind_textdomain_codeset in libpython3.10.a(_localemodule.o); ""_libintl_bindtextdomain"", referenced from:; __locale_bindtextdomain in libpython3.10.a(_localemodule.o); ""_libintl_dcgettext"", referenced from:; __locale_dcgettext in libpython3.10.a(_localemodule.o); ""_libintl_dgettext"", referenced from:; __locale_dgettext in libpython3.10.a(_localemodule.o); ""_libintl_gettext"", referenced from:; __locale_gettext in libpython3.10.a(_localemodule.o); ""_libintl_setlocale"", referenced from:; __locale_setlocale in libpython3.10.a(_localemodule.o); __locale_localeconv in libpython3.10.a(_localemodule.o); ""_libintl_textdomain"", referenced from:; __locale_textdomain in libpython3.10.a(_localemodule.o); ld: symbol(s) not found for architecture x86_64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libPyMVA.so] Error 1; make[1]: *** [tmva/pymva/CMakeFiles/PyMVA.dir/all] Error 2; make: *** [all] Error 2; ```. ### Reproducer. `cmake --build mybuild --target install -j4 -v`. ### ROOT version. master branch from 12.02.2024:. ```; root -b -q ; ------------------------------------------------------------------------------; | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Feb 13 2024, 09:47:07 |; | From heads/ianna/call_to_implicitly-deleted_copy_constructor_fix@5d76922a0f |; | With Apple clang version 13.0.0 (clang-1300.0.29.30) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------------------. ```. ### Installation method. fixation step-by-step instructions. ### Operating system. MacOS 11.6. ### Additional context. Python's build is detecting `libintl` but not using necessary linker flags when compiling. For example, fix for my local build is to add `-L/usr/local/lib -lintl`. ```; Python 3.10.1 (m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14672:1165,Error,Error,1165,https://root.cern,https://github.com/root-project/root/issues/14672,2,['Error'],['Error']
Availability,"; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:5093,error,error-skeleton,5093,https://root.cern,https://github.com/root-project/root/issues/10676,1,['error'],['error-skeleton']
Availability,"; ++j) {; vec1.push_back({static_cast<float>(j),; static_cast<float>(j + 1),; static_cast<float>(j + 2)});; }; if (otree->Fill() <= 0) {; Error(APPNAME, ""Failed to record entry %i"", i);; return 1;; }; }. // Make sure that the tree is saved.; otree->AutoSave();; }; Info(APPNAME, ""Finished writing \""%s\"""", FILENAME);. // Return gracefully.; return 0;; }; ```. Building and running this example gets me:. ```; [bash][celeborn]:arrayWrite > make; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include -c -o arrayWrite.o arrayWrite.cpp; rootcint -f Dictionary.cpp LinkDef.h; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with __GLIBCXX__ '20220324'; Extraction of runtime standard library version was: '20220421'; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include -c -o Dictionary.o Dictionary.cpp; c++ -pthread -std=c++17 -m64 -I/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/include arrayWrite.o Dictionary.o -L/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -Wl,-rpath,/home/krasznaa/software/root/6.26.06/x86_64-ubuntu2204-gcc11-opt/lib -pthread -lm -ldl -rdynamic -o arrayWrite; [bash][celeborn]:arrayWrite > ./arrayWrite ; Info in <arrayWrite>: Opened output file ""arrays.root""; Error in <TBranchElement::InitializeOffsets>: Could not find the real data member '_M_elems[3]' when constructing the branch 'vec1' [Likely missing ShowMember].; Info in <arrayWrite>: Finished writing ""arrays.root""; [bash][celeborn]:arrayWrite >; ```. ### Setup. Tried it with ROOT 6.26/06 and 6.24/06. With both the ""LCG version"" on `x86_64-centos7-gcc11-opt` and with hand-built versions on Ubuntu 22.04. ### Additional context. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:6266,Error,Error,6266,https://root.cern,https://github.com/root-project/root/issues/12007,1,['Error'],['Error']
Availability,"; -excludePath=<string> - Do not store the <path> in the dictionary.; -f - Overwrite <file>s.; -failOnWarnings - Fail if there are warnings.; -inlineInputHeader - Does not generate #include <header> but expands the header content.; -interpreteronly - Generate minimal dictionary for interactivity (without IO information).; -m=<string> - The list of dependent modules of the dictionary.; -multiDict - If this library has multiple separate LinkDef files.; -noIncludePaths - Do not store include paths but rely on the env variable ROOT_INCLUDE_PATH.; -p - Deprecated, legacy flag which is ignored.; -rmf=<string> - Generate a rootmap file with the specified name.; -rml=<string> - Generate rootmap file.; -s=<string> - The path to the library of the built dictionary.; -selSyntaxOnly - Check the selection syntax only.; -split - Split the dictionary into two parts: one containing the IO (ClassDef)information and another the interactivity support.; Choose verbosity level:; -v - Show errors (default).; -v0 - Show only fatal errors.; -v1 - Show errors (the same as -v).; -v2 - Show warnings.; -v3 - Show notes.; -v4 - Show information.; ```; ; This patch deprecates:; 1) +P, +V, +STUB, -gccxml, -cint, -reflex -- they are old CINT legacy options which had no meaning in rootcling.; 2) -p, -c -- remove old options used by rootcling -generate-pch as now the build system does not export its lists of flags directly to roocling.; ; The implementation of 2) was quite permissive as it tried to send all possible unknown options directly to rootcling. As a side effect of reworking of 2) we can restrict the options being sent and unknown options are not sent to rootcling anymore, improving encapsulation.; ; If there is a need to do so please contact us or use the EXTRA_CLING_ARGS env option. PS: The end goal is fixing the incremental builds when -Druntime_cxxmodules=On. We will have something like `rootcling --bare-cling=""-fmodules -fno-implicit-module-maps -fmodule-map-file=... -emit-module=std`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171:2196,error,errors,2196,https://root.cern,https://github.com/root-project/root/pull/4171,2,['error'],['errors']
Availability,"; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include ""cling/Interpreter/RuntimeUniverse.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:29:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:19501,error,error,19501,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:36:10: note: submodule of top-level module 'std' implicitly imported here; #include <initializer_list>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/range_access.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <type_traits> // common_type_t, make_signed_t; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator.h:63:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/cpp_type_traits.h>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_iterator_base_types.h:67:11: note: submodule of top-level module 'std' implicitly imported here; # include <type_traits> // For __void_t, is_convertible; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:25472,error,error,25472,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:119:9: warning: 'FOREGROUND_RED' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_RED 4; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:37:9: note: previous definition is here; 151: #define FOREGROUND_RED 0x0004 // text color contains red.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:120:9: warning: 'FOREGROUND_INTENSITY' macro redefined [-Wmacro-redefined]; 151: #define FOREGROUND_INTENSITY 8; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:38:9: note: previous definition is here; 151: #define FOREGROUND_INTENSITY 0x0008 // text color is intensified.; 151: ^; 151: In file included from input_line_10:1:; 151: C:\Users\sftnight\git\master\test\stressHistoFit.cxx:124:19: error: functions that differ only in their return type cannot be overloaded; 151: bool __stdcall SetConsoleTextAttribute(void *, unsigned int);; 151: ^; 151: C:\Program Files (x86)\Windows Kits\10\Include\10.0.17134.0\um\consoleapi2.h:245:1: note: previous declaration is here; 151: SetConsoleTextAttribute(; 151: ^; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranContDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: #define HAVE_CONFIG_H 1; 151: #endif; 151:; 151: #define _BACKWARD_BACKWARD_WARNING_H; 151: #include ""TUnuran.h""; 151: #include ""TUnuranBaseDist.h""; 151: #include ""TUnuranContDist.h""; 151: #include ""TUnuranDiscrDist.h""; 151: #include ""TUnuranEmpDist.h""; 151: #include ""TUnuranMultiContDist.h""; 151: #include ""TUnuranSampler.h""; 151:; 151: #undef _BACKWARD_BACKWARD_WARNING_H; 151:; 151: Error in <TInterpreter::AutoParse>: Error parsing payload code for class TUnuranDiscrDist with content:; 151:; 151: #line 1 ""libUnuran dictionary payload""; 151:; 151: #ifndef HAVE_CONFIG_H; 151: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3312:1923,error,error,1923,https://root.cern,https://github.com/root-project/root/pull/3312,1,['error'],['error']
Availability,; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(531): Labeled axis w/o title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:7394,error,error,7394,https://root.cern,https://github.com/root-project/root/pull/5054,1,['error'],['error']
Availability,; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(469): error: Expected: caxis.CompareBinLabels(RAxisLabels(one_extra_label)); 77: Which is: 0; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset; 77: Which is: 2; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(477): error: Expected: caxis.CompareBinLabels(RAxisLabels(changed_one_label)); 77: Which is: 1; 77: To be equal to: RAxisLabels::kLabelsCmpSubset | RAxisLabels::kLabelsCmpSuperset; 77: Which is: 3; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with title; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(484): error: Expected: caxis.CompareBinLabels(RAxisLabels(swapped_labels)); 77: Which is: 4; 77: To be equal to: RAxisLabels::kLabelsCmpSuperset | RAxisLabels::kLabelsCmpDisordered; 77: Which is: 6; 77: Google Test trace:; 77: C:\Users\bellenot\git\master\hist\histv7\test\axis.cxx(537): Labeled axis with,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5054:7766,error,error,7766,https://root.cern,https://github.com/root-project/root/pull/5054,5,['error'],['error']
Availability,"; A clear and concise description of what you expected to happen.; -->; The presence of `std:::pair` should not interfere with the dictionary of its contained classes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. This [reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz) showcases the problem:; ```bash; $ rootcling -f dict.cpp MyClass.h OtherClass.h LinkDef.h; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ root; root [0] .L libDict.so; root [1] std::is_copy_assignable<MyClass>::value; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:139:14: error: base class has incomplete type; : public conditional<_B1::value, _B2, _B1>::type; ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_pair.h:391:3: note: in instantiation of template class 'std::__and_<std::is_copy_assignable<int>, std::is_copy_assignable<MyClass> >' requested here; __and_<is_copy_assignable<_T1>,; ^; ./OtherClass.h:9:27: note: in instantiation of template class 'std::pair<int, MyClass>' requested here; std::pair<int, MyClass> c;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1058:14: note: in instantiation of template class 'std::__is_copy_assignable_impl<MyClass, true>' requested here; : public __is_copy_assignable_impl<_Tp>::type; ^; ROOT_prompt_1:1:6: note: in instantiation of template class 'std::is_copy_assignable<MyClass>' requested here; std::is_copy_assignable<MyClass>::value; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_traits:1057:12: note: definition of 'std::is_copy_assignable",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:2055,error,error,2055,https://root.cern,https://github.com/root-project/root/issues/10512,1,['error'],['error']
Availability,"; File ""c:\python39-32\lib\runpy.py"", line 197, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""c:\python39-32\lib\runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 137, in <module>; main(); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 134, in main; IPKernelApp.launch_instance(kernel_class=ROOTKernel); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 844, in launch_instance; app.initialize(argv); File ""c:\python39-32\lib\site-packages\traitlets\config\application.py"", line 87, in inner; return method(app, *args, **kwargs); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 637, in initialize; self.init_kernel(); File ""c:\python39-32\lib\site-packages\ipykernel\kernelapp.py"", line 489, in init_kernel; kernel = kernel_factory(parent=self, session=self.session,; File ""c:\python39-32\lib\site-packages\traitlets\config\configurable.py"", line 537, in instance; inst = cls(*args, **kwargs); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\rootkernel.py"", line 67, in __init__; self.magicloader = MagicLoader(self); File ""C:\Users\bellenot\build\x86\release\bin\JupyROOT\kernel\utils.py"", line 73, in __init__; raise Exception(""Error importing Magic: %s""%module_path); Exception: Error importing Magic: JupyROOT.kernel.magics.magics\cppmagic; ```; And these ones in `bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py`:; ```; input_line_37:1:10: fatal error: 'dlfcn.h' file not found; ^~~~~~~~~; input_line_41:2:24: error: use of undeclared identifier 'RTLD_NOW'; (dlopen(""libRint.so"", RTLD_NOW)); ^; ```. * Update bindings/jupyroot/python/JupyROOT/kernel/utils.py. * Apply suggestion from Vincenzo + fix indentation. ---------. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12951:2254,Error,Error,2254,https://root.cern,https://github.com/root-project/root/pull/12951,4,"['Error', 'error']","['Error', 'error']"
Availability,"; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\Ole2.h:37:; In file included from C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\objbase.h:16:; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h:962:6: error: reference to 'byte' is ambiguous; byte * pNetworkData,; ^. [...]. C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef:28:12: note: candidate found by name lookup is 'std::byte'; enum class byte : unsigned char {};; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; root [1]; ```; To illustrate this, compiling this code:; ```; #include <iostream>; using namespace std;; #include <atlstr.h>. int main() {; std::cout << ""hello world!"" << std::endl;; return 0;; }; ```; is enough to generate the errors:; ```; C:\Users\bellenot\rootdev>cl -nologo -MD -GR -EHsc -Zc:__cplusplus -std:c++17 atlstr.cxx; atlstr.cxx; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(192): error C2872: 'byte': ambiguous symbol; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(962): error C2872: 'byte': ambiguous symbol; C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\rpcndr.h(191): note: could be 'unsigned char byte'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\cstddef(28): note: or 'std::byte'. [...]. ```; And when removing the `using namespace std;` line, there is no error. ### Reproducer. On Windows:; ```; root [0] #include <atlstr.h>; ```. ### ROOT version. Any. ### Installation method. build from source. ### Operating system. Windows. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14602:2962,error,error,2962,https://root.cern,https://github.com/root-project/root/issues/14602,3,['error'],['error']
Availability,"; Run with `root -l ExampleMacro.C`. Output, marking the higher than expected averages with `<--`:; ```; root [0] ; Processing ExampleMacro.C... RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:NumericIntegration -- RooRealIntegral::init(func_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x). i, f(i), f(i+0.1), avg[i,i+0.1]. 10, 0.004, 0.00404, 0.00402; 10.1, 0.00404, 0.00408, 0.02456 <--; 10.2, 0.00408, 0.00412, 0.0041; 10.3, 0.00412, 0.00416, 0.02464 <--; 10.4, 0.00416, 0.0042, 0.00418; 10.5, 0.0042, 0.00424, 0.00422; 10.6, 0.00424, 0.00428, 0.02576 <--; 10.7, 0.00428, 0.00432, 0.0043; 10.8, 0.00432, 0.00436, 0.02584 <--; 10.9, 0.00436, 0.0044, 0.00438; 11, 0.0044, 0.00444, 0.00442; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT Version: 6.24/06; Built for linuxx8664gcc; From tags/v6-24-06@v6-24-06; Installed manually within WSL Ubuntu 20.04. ### Additional context; <!--; Add any other context about the problem here.; -->; I first encountered this behaviour when calculating the chi^2 between a fitted RooCurve and data, where the data had bin sizes of 0.1, and the RooCurve was taking steps of 1. The chi^2 value of the RooCurve far exceeded what could be expected based on the fit residuals with respect to the data. Increasing the amount of curve points by increasing the precision of the `plotOn()` call resolved this issue. A potential fix for this bug could be to check to see if the `xFirstPt` and `xLastPt` used for averaging remain within the averaging interval when shifting them upwards or downwards, leading to inversion of the averaging boundaries. If this occurs taking the interpolated y-value at the violated boundary instead of the shifted value might ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9838:2988,down,download,2988,https://root.cern,https://github.com/root-project/root/issues/9838,1,['down'],['download']
Availability,"; ```; And I get the following while building cling errors:; ```; [ 76%] Generating G__Core.cxx, ../lib/Core.pcm; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier 'std'; std::string m_Result;; ^; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/couet/git/root-bin/etc/cling/Interpreter/RuntimeUniverse.h:27:; /Users/couet/git/root-bin/etc/cling/std_darwin.modulemap:61:10: error: header 'coroutine' not found; header ""coroutine""; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:12:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /Users/couet/git/root-bin/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std'; std::string m_Type;; ^; While bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:1158,error,error,1158,https://root.cern,https://github.com/root-project/root/issues/16451,1,['error'],['error']
Availability,"; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000998;; cout << t1.getVal() << endl;; // returns 0.001 since it's outside the range specified; t1 = 0.000999;; cout << t1.getVal() << endl;; // should also return 0.001, since it's outside the range; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000999;; cout << t1.getVal() << endl;; // returns 0.000999; // lest this be attributed to some floating point arithmetic:; t1 = 0.0009990000;; cout << t1.getVal() << endl;; // yields 0.000999 but; t1 = 0.0009999999;; cout << t1.getVal() << endl;; // yields 0.0001 as expected; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.26/10; 2. Ubuntu 22.04 (but the result is independent of OS as far as I can tell, I've tried it on MacOS and RedHat 7); 3. Built from source. ### Additional context; <!--; Add any other context about the problem here.; -->; The reason this is important for my work is that I am importing data from a TTree, running sPlot to generate weights, the writing a new TTree with the sPlot weights as a new branch. The new tree will have fewer entries than the old one, since the import step excludes values which are out of range. In practice, some values which C++ comparisons would call out of range make it through RooFit's comparison, which causes a mismatch between the expected number of events written and what is actually written. This mismatch causes the number of events with weights to be larger than the number of events to be written, so at some point in my writing loop, an event is skipped by a C++ comparison but not by Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954:2968,down,download,2968,https://root.cern,https://github.com/root-project/root/issues/11954,1,['down'],['download']
Availability,"; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:2204,avail,available,2204,https://root.cern,https://github.com/root-project/root/issues/6421,1,['avail'],['available']
Availability,"; from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; #2 0x00007f1332c451a3 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (); from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; #3 0x00007f1332c45b1a in cling::Interpreter::evaluate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value&) () from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; #4 0x00007f1332a74e9d in TCling::Calc (this=0x56290befde40, ; line=0x7f12fa0f8290 ""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., error=0x7f131ad40bdc); at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:3556; #5 0x00007f132bf6da60 in operator() (__closure=0x7f131ad40bc0, ; codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""...); at /home/vpadulan/programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:340; #6 0x00007f132bf6def9 in ROOT::Internal::RDF::InterpreterCalc (; code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f130be1a880), new const char*[1]{\""b1\""}, 1, 1, ""..., context=""RLoopManager::Run""); ```. Which as a first instinct hints at some possible contention between the different things cling is doing in the two threads. For the moment I cannot come up with an easier reproducer, see next section for more details. # How to reproduce. Here is the patch to",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:10815,error,error,10815,https://root.cern,https://github.com/root-project/root/issues/11515,1,['error'],['error']
Availability,"; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; Extraction of runtime standard library version was: ''; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:; In file included from <module-includes>:1:; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; /Users/josiahlee/WORK/Tools/root_build_release/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):; 0 rootcling_stage1 0x0000000107881888 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 56; 1 rootcling_stage1 0x00000001078807fc llvm::sys::RunSignalHandlers() + 64; 2 rootcling_stage1 0x0000000107881ea4 SignalHandler(int) + 292; 3 libsystem_platform.dylib 0x0000000187a44184 _sigtramp + 56; 4 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 5 rootcling_stage1 0x00000001050ba940 clang::Parser::ParseCompoundStatementBody(bool) + 316; 6 rootcling_stage1 0x00000001050b30e4 clang::Parser::ParseStatementOrDeclarationAfterAttributes(llvm::SmallVector<clang::Stmt*, 32u>&, clang::Parser::ParsedStmtContext, clang::SourceLocation*, clang::ParsedAttributes&, clang::ParsedAttributes&) + 2072; 7 rootcling_stage1 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:4002,error,error,4002,https://root.cern,https://github.com/root-project/root/issues/16498,1,['error'],['error']
Availability,"; typedef basic_string_view<wchar_t> wstring_view;; ^; /home/root-build/include/ROOT/RStringView.hxx:54:45: error: unknown type name 'size_t'; inline double stod(std::string_view str, size_t *pos); ^; /home/root-build/include/ROOT/RStringView.hxx:56:39: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:51: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return std::stod(std::string(str.data(), str.size()),pos);; ~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:56:29: error: no member named 'string' in namespace 'std'; return std::stod(std::string(str.data(), str.size()),pos);; ~~~~~^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/include/ROOT/RStringView.hxx:71:13: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:71:37: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:73:28: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:73:42: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:9419,error,error,9419,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['error']
Availability,"; where (starting at some point) it is invalidated at each entry *and* the basket; from the previous cluster boundary up to some entry number less than the current; entry are loaded over and over again (until the entry number reaches the next cluster; boundary).; ; In a case encountered by CMS, a TTree has a recorded cluster size of 165 events. However the TTree; appears to not have been clustered; most basket size are the same and seem to be flushed at 139 events; interval. A few branches are flushed less frequently, for example EventAuxiliary is flushed every 459; entries.; ; As a consequence when entry 417 is requested, the cluster boundary is calculated as 330 and; the first end as 495. Then all basket containing entries in that range are loaded, including; EventAuxiliary's basket containing entries 459 to 917. Then 917 is the highest available (partial); entry available. Thus the next time the TTreeCache is invalidated is when entry 918 is requested.; As that point the cluster boundary is calculated as 845 and the first end as 495, however; (with the small enough TTreeCache size), the cache is full as soon as the basket for EventAuxiliary; is added. This resulted in a 'valid' range for this cache of 845 to 917 and lead to the reading; all the baskets added so far ... and thus eventhough none of them would be used for reading; and they already had been read once in memory. Then for entry 919, the exact same behavior; repeated.; ; The solution consist on marking the 'minimum' valid range as being 'at least' one cluster wide.; ; Thus in the example above for entry 918 through 989, **only** the missing baskets are read; individually resulting in 'degraded' performance but **not** a wild over-read.; ; A future enhancement would be, in those cases, restart the next buffer from the last valid; entry + 1 rather than the previous event boundary. This would result in a 'slightly' over-read; (some baskets might be read twice) rather than the wild useless over-read we had.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1778:1903,degraded,degraded,1903,https://root.cern,https://github.com/root-project/root/pull/1778,1,['degraded'],['degraded']
Availability,";; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:456:36: error: ‘const class RooExpPoly’ has no member named ‘coefList’; did you mean ‘RooListProxy RooExpPoly::_coefList’? (not accessible from this context); 456 | for (const auto &coef : pdf->coefList()) {; | ^~~~~~~~; /opt/root/install/include/RooExpPoly.h:38:17: note: declared protected here; 38 | RooListProxy _coefList;; | ^~~~~~~~~; make[2]: *** [roofit/hs3/CMakeFiles/RooFitHS3.dir/build.make:132: roofit/hs3/CMakeFiles/RooFitHS3.dir/src/JSONFactories_RooFitCore.cxx.o] Error 1; ```. Tried to change method names to those with underscores, got another error about a protected field:. ```; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx: In member function ‘virtual bool {anonymous}::RooExpPolyStreamer::exportObject(RooJSONFactoryWSTool*, const RooAbsArg*, RooFit::Detail::JSONNode&) const’:; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:25: error: ‘RooRealProxy RooExpPoly::_x’ is protected within this context; 448 | elem[""x""] << pdf->_x().GetName();; | ^~; In file included from /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:20:; /opt/root/install/include/RooExpPoly.h:37:17: note: declared protected here; 37 | RooRealProxy _x;; | ^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:448:27: error: no match for call to ‘(const RooRealProxy {aka const RooTemplateProxy<RooAbsReal>}) ()’; 448 | elem[""x""] << pdf->_x().GetName();; | ~~~~~~~^~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:32: error: ‘int RooExpPoly::_lowestOrder’ is protected within this context; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ^~~~~~~~~~~~; /opt/root/install/include/RooExpPoly.h:39:8: note: declared protected here; 39 | int _lowestOrder;; | ^~~~~~~~~~~~; /opt/root/src/roofit/hs3/src/JSONFactories_RooFitCore.cxx:453:44: error: expression cannot be used as a function; 453 | for (int i = 0; i < pdf->_lowestOrder(); ++i) {; | ~~~~~~~~~~~~~~~~~^~; /o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13101:2111,error,error,2111,https://root.cern,https://github.com/root-project/root/issues/13101,1,['error'],['error']
Availability,"< ""via unique_ptr: "" << basePtr->func() << std::endl;; }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&; !std::is_lvalue_reference_v<T>>>; void foo(T&& t) {; std::cout << ""via template func: "" << t.func() << std::endl;; }. } // namespace repro; """"""; ). from ROOT import repro. c = repro.Derived(123); repro.foo(ROOT.std.move(c)); ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console; $ python repro.py; via template func: 123; ```. However, with the updated cppyy I get:; ```console; $ python repro.py ; input_line_42:6:92: error: call to deleted constructor of 'std::unique_ptr<repro::Base, std::default_delete<repro::Base> >'; ((void (&)(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >))repro::foo)(*(std::unique_ptr<repro::Base, std::default_delete<repro::Base> >*)args[0]);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:468:7: note: 'unique_ptr' has been explicitly marked deleted here; unique_ptr(const unique_ptr&) = delete;; ^; ```. Which is in principle correct, but I don't understand why it chooses that overload in the first place, as it should use the templated function instead. Curiously, one thing that makes things ""work"" with the current master branch is to change; ```diff; - void foo(std::unique_ptr<Base> basePtr) {; + void foo(std::unique_ptr<Base>&& basePtr) {; ```; However, that changes behavior slightly because now this calls the `unique_ptr` overload instead:; ```console; $ python repro.py ; via unique_ptr: 123; ```; Additionally, this change breaks with root 6.30.04 leading to a segmentation because it also tries to call the wrong overload.; <details>; <summary>stack trace</summary>. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:1960,error,error,1960,https://root.cern,https://github.com/root-project/root/issues/15117,1,['error'],['error']
Availability,"<!--; A clear and concise description of what the wrong behavior is.; -->. Hi ROOTers!. I've recently encountered some issues with using TMVA in JupyROOT ([here is an example notebook](https://nbviewer.jupyter.org/github/iml-wg/tmvatutorials/blob/master/TMVAinJupyter_FullTutorial.ipynb), I haven't found much documentation besides this). I'm basically able to follow the structure of this example, but I run into issues when calling `TMVA.DataLoader.AddSignalTree()`. Since I'm working with a Jupyter notebook, I'll provide a plaintext version of the code below, followed by the error, but I'm also including links to the relevant files for running this -- the input file, the notebook file, and Yaml and plaintext files detailing the `conda` setup used to create the environment. I can set up a Notebook Viewer if that would be helpful, though I think that requires hosting the notebook somewhere like in a GitHub repo. **Files:**; [Input file](https://drive.google.com/file/d/1j-oDBQo4RlSvzS4Ved7oRWTpetGBzgF1/view?usp=sharing); [Notebook file](https://drive.google.com/file/d/1se_HHE1YcwhwEsrihEeFq2llPNtEo9xc/view?usp=sharing); [YAML file for conda](https://drive.google.com/file/d/1cFovrs1n3A3ap-n9TDjvcJCXtQvNkRSY/view?usp=sharing) (made via `conda env export --name ENVNAME > envname.yml`); [TXT file for conda](https://drive.google.com/file/d/1vi96YXfesiLvO9lvm7fPix8CY3s4JDlS/view?usp=sharing) (made via `conda list --explicit > pkgs.txt`, so this is OS-specific). **Text version of code:**; ```; import ROOT as rt; # ipywidgets for nice visualizations, as per tutorial setup; !jupyter nbextension enable --py widgetsnbextension; # now let's enable JsMVA; %jsmva on. outputFile = rt.TFile( ""TMVA.root"", 'RECREATE' ); rt.TMVA.Tools.Instance(); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:580,error,error,580,https://root.cern,https://github.com/root-project/root/issues/6657,1,['error'],['error']
Availability,"<TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still prints the header not found message; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```; (That the XML file isn't there doesn't matter, the argument has to be filled). ### Setup. 1. ROOT master, 6.22.00; 2. centos7; 3. lcg install. ### Additional context. This isn't really high priority, as a work around is available, but from; https://sft.its.cern.ch/jira/browse/ROOT-11029?focusedCommentId=110376&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-110376; where @Axel-Naumann said; > I'm still a bit unhappy about the quality of the diagnostics;. I figured this is worth an issue. Originally discovered in: https://github.com/key4hep/EDM4hep/issues/42#issuecomment-721167821",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:2466,avail,available,2466,https://root.cern,https://github.com/root-project/root/issues/6791,1,['avail'],['available']
Availability,"<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; TypeError: takes at least 3 arguments (2 given); ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; TypeError: takes at least 3 arguments (2 given); ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame.; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame.; ```. However, this works:; ```; import ROOT; import numpy as np; rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}); rdf = rdf.Redefine(""bar"", ""bar + 1""); rdf.Snapshot(""output"", ""output.root"", [""bar""]); ```. ROOT Version: 6.26/00 (conda install), 6.27/01 (swan bleeding edge)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10233:2263,Error,Error,2263,https://root.cern,https://github.com/root-project/root/issues/10233,1,['Error'],['Error']
Availability,"<locals>.dask_mapper at 0x7f0cdae1a320>, (<function apply at 0x7f0cfa133910>, <class 'DistRDF.Ranges.TreeRangePerc'>, (), (<class 'dict'>, [['id', 1], ['treenames', ['myTree']], ['filenames', ['2clusters.root']], ['first_file_idx', 0], ['last_file_idx', 1], ['first_tree_start_perc', 0.5], ['last_tree_end_perc', 1], ['friendinfo', None]])))); kwargs: {}; Exception: ""RuntimeError('C++ exception thrown:\\n\\truntime_error: \\nAn error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash\\nAll RDF objects that have not run their event loop yet should be considered in an invalid state.\\n')""; ```. The Python `RuntimeError` in turn is just a wrapper of the C++ `std::runtime_error` which comes from [this function](https://github.com/root-project/root/blob/bc6c4d327bf0b6c78aff0e9622f959441c480d8e/tree/dataframe/src/RDFUtils.cxx#L335-L342) in the RDF machinery. That error suggests a failure in `TInterpreter::Calc`, which should be visible with some kind of output to stderr showing the compilation error. Unfortunately, stderr is completely empty, no error is shown by `TInterpreter`. By adding a bunch of print statements here and there, we can get to see some more details of this issue (the patch will be attached). ```; Failure in cling::IncrementalExecutor::jitInitOrWrapper: PID=31643,funcname=_Z16__cling_Un1Qu340Pv. Failure at /home/vpadulan/programs/rootproject/rootsrc/interpreter/cling/lib/Interpreter/Interpreter.cpp:1438 with ExecutionResult=3. Failure in Interpreter::EvaluateInternal: PID=31643,evalres=1; The process was evaluating: ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Histo1D, Int_t>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x7f0cc988e7d0), new const char*[1]{""b1""}, 1, 1, reinterpret_cast<shared_ptr<TH1D>*>(0x7f0cd043c1f0), reinterpret_cast<std::weak_ptr<ROOT::Internal::RDF::RJittedAction>*>(0x7f0cc94b3830), reinterpret_cast<ROOT::Internal::RDF::RColum",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:1585,error,error,1585,https://root.cern,https://github.com/root-project/root/issues/11515,3,"['error', 'failure']","['error', 'failure']"
Availability,"<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:7529,ERROR,ERROR,7529,https://root.cern,https://github.com/root-project/root/issues/7249,2,['ERROR'],['ERROR']
Availability,"= 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.proxied_node.value; assert isinstance(histo, ROOT.TH1D); assert histo.GetEntries() == nentries; assert histo.GetMean() == 42. os.remove(filename). def main():; test_rungraphs_sparkanddask_3histos(*connection()). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And here is a bash script that runs the previous Python script in a loop until it fails; ```; counter=0; while test $? -eq 0; do ; counter=$(($counter+1)); echo -e ""\nRunning test $counter\n""; CLING_DEBUG=1 python test.py; done. # Remove leftover file from the test when it fails; rm 2clusters.root; ```. ### Setup. ROOT [master@b13756d](https://github.com/root-project/root/commit/b13756d544d91803e31c7b6aa0c32ae05481e7f8); Python 3.10.7; Java 19; pyspark 3.3.0; dask/distributed 2022.7.1. ROOT built with:; ```; cmake -GNinja -Dccache=ON -Dminimal=ON -Dtesting=ON -Droottest=ON -Dpyroot=ON -Ddataframe=ON -Dxrootd=ON -Dtest_distrdf_pyspark=ON -Dtest_distrdf_dask=ON -DCMAKE_BUILD_TYPE=Debug -Dimt=ON; ```. ### Additional context. I am tentatively assigning this also to @Axel-Naumann @vgvassilev @jalopezg-r00t who may have an easier time at understanding the output from gdb and help in creating a simpler reproducer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:14461,echo,echo,14461,https://root.cern,https://github.com/root-project/root/issues/11515,1,['echo'],['echo']
Availability,"= 80', the comparison 'flag' is always true.; [misc/table/src/TFileIter.cxx:467] -> [misc/table/src/TFileIter.cxx:468]: (warning) Identical condition 'thisRunNumber<runNumber', second condition is always false. [math/mathcore/src/TMath.cxx:826]: (style) Array index 'ia' is used before limits check.; [math/mathcore/src/TMath.cxx:830]: (style) Array index 'ib' is used before limits check.; [math/mathcore/src/triangle.c:15434]: (style) Array index 'aspectindex' is used before limits check.; [roofit/roofit/src/RooIntegralMorph.cxx:375]: (style) Array index 'igapHigh' is used before limits check. [core/winnt/src/TWinNTSystem.cxx:5035]: (style) Statements following return, break, continue, goto or throw will never be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:1790,error,error,1790,https://root.cern,https://github.com/root-project/root/pull/1343,1,['error'],['error']
Availability,"= typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:93:83: error: expected ',' or '>' in template-parameter-list; template <class T, class = typename std::enable_if<std::is_integral<T>::value>::type>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:95:14: error: use of undeclared identifier 'std'; return std::is_signed<T>::value; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:94:35: error: no return statement in constexpr function; static constexpr EStorageType determineStorageTypeT(T*) {; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:198:11: error: use of undeclared identifier 'std'; = std::is_reference<T>::value ?; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:40: error: use of undeclared identifier 'std'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: expected a qualified name after 'typename'; determineStorageTypeT((typename std::remove_reference<T>::type**)nullptr); ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/Value.h:199:66: error: unknown type name 'type'; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_2:1:10: fatal error: could not build module 'Cling_Runtime'; #include ""cling/Interpreter/RuntimeUniverse.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypeInfo.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:18172,error,error,18172,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"===; FAIL: test_reshape (rtensor.NumpyCompliance.test_reshape); Test np.reshape vs RTensor::Reshape; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 218, in test_reshape; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ======================================================================; FAIL: test_transpose (rtensor.NumpyCompliance.test_transpose); Test np.transpose vs RTensor::Transpose; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/rtensor.py"", line 151, in test_transpose; self.assertEqual(x.GetMemoryLayout(), 1); AssertionError: 16777216 != 1; ----------------------------------------------------------------------; Ran 11 tests in 2.036s; FAILED (failures=3); CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### pyunittests-pyroot-pyz-stl-vector; ~~~; 61/1272 Test #18: pyunittests-pyroot-pyz-stl-vector ...................................***Failed 0.84 sec; test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string ... FAIL; test_vec_const_char_p (stl_vector.STL_vector.test_vec_const_char_p); Test that creating a std::vector<const char*> does not raise any ... ok; ======================================================================; FAIL: test_vec_char_data (stl_vector.STL_vector.test_vec_char_data); Test that calling std::vector<char>::data() returns a Python string; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/bindings/pyroot/pythonizations/test/stl_vector.py"", line 19, in test_vec_char_data; self.asser",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:3296,failure,failures,3296,https://root.cern,https://github.com/root-project/root/issues/12429,2,"['Error', 'failure']","['Error', 'failures']"
Availability,"==================================; #8 0x0000000000000000 in ?? (); #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25; ===========================================================; ```. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following gist:; https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT master; 2. Fedora 32; 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist.; Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):; ```; (gdb) p tbmfile.get(); $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750; (gdb) p tree.GetCurrentFile(); $5 = (TFile *) 0x1f0e750; (gdb) p tree.GetDirectory() ; $6 = (TDirectory *) 0x1f0e750; (gdb) p tbmfile.get()->GetName(); $7 = 0x1eca1f0 ""tbuffermerger_sequential.root""; (gdb) p tree.GetDirectory()->GetName(); $8 = 0x1eca1f0 ""tbuffermerger_sequential.root""; (gdb) p tree.GetCurrentFile()->GetName(); $9 = 0x1eca1f0 ""tbuffermerger_sequential.root""; ```; But after the event loop the TTree changes files twice and the latest file it p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6523:3849,down,download,3849,https://root.cern,https://github.com/root-project/root/issues/6523,1,['down'],['download']
Availability,"=yes -Dimt=yes -Dlibcxx=no -Dmathmore=yes -Dminimal=OFF -Dminuit2=yes -Dminuit=yes -Dmlp=yes -Dmonalisa=OFF -Dmpi=yes -Dmysql=yes -Dodbc=yes -Dopengl=yes -Doracle=yes -Dpgsql=yes -Dpyroot=yes -Dpyroot_legacy=OFF -Dpythia6=yes -Dpythia8=yes -Dqt5web=yes -Dqt6web=OFF -Dr=no -Droofit=yes -Droofit_multiprocess=OFF -Droot7=yes -Drootbench=OFF -Droottest=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_dask=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=no -Dtmva-sofie=OFF -Dunuran=yes -During=yes -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dx11=yes -Dxml=yes -Dxrootd=yes -Dvdt=ON -Dveccore=OFF -Druntime_cxxmodules=OFF -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06; ```. Error with runtime_cxxmodules=OFF; ```; [ 76%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m libCore_rdict.pcm -m libThread_rdict.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -rml libRIO.so -rmf /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.rootmap -writeEmptyRootPCM -D -compilerI/usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:3851,Error,Error,3851,https://root.cern,https://github.com/root-project/root/issues/11381,1,['Error'],['Error']
Availability,"> 1261 - tutorial-rcanvas-df104-py (Failed). This failure seems to be linked to memory limitation. On my node there is 48 cores but the `ulimit` is set to 16Gb. When reducing the number of cores down to 35 cores then the test starts to sometimes complete sometimes fails.; The error output sometimes contains:; ```; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; RDataFrame::Run: event loop was interrupted; ```; and always contains:; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tutorials/rcanvas/df104.py"", line 89, in <module>; ROOT.RDF.RunGraphs([hists[s] for s in [""ggH"", ""VBF"", ""data""]]); cppyy.gbl.std.bad_alloc: unsigned int ROOT::RDF::RunGraphs(vector<ROOT::RDF::RResultHandle>) =>; bad_alloc: std::bad_alloc; ```. **And indeed, the process easily reaches 16Gb. With 32 cores, the peak is 15Gb.**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16252:50,failure,failure,50,https://root.cern,https://github.com/root-project/root/issues/16252,3,"['down', 'error', 'failure']","['down', 'error', 'failure']"
Availability,"@cern.ch>; Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is now fixed.; + gcc --version; gcc (GCC) 12.0.1 20220413 (Red Hat 12.0.1-0); Copyright (C) 2022 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. + cmake -GNinja -S source -B build -Dxrootd=OFF; (...skip...); -- ROOT Configuration. System Linux-5.16.9-200.rog.fc35.x86_64; Processor 8 core AMD Ryzen 7 5800HS with Radeon Graphics (x86_64); Build type Release; Install path /usr/local; Compiler GNU 12.0.1; Compiler flags:; C -fdiagnostics-color=always -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -fdiagnostics-color=always -std=c++17",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:1938,toler,tolerance,1938,https://root.cern,https://github.com/root-project/root/issues/10478,2,"['error', 'toler']","['error', 'tolerance']"
Availability,@etejedor This seems to fix the problem with attaching a property to the class definition. I do not understand why we get an `bad argument to internal function` if we skip the proxy function ... Edit: These are the test failures: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=604404,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3170:220,failure,failures,220,https://root.cern,https://github.com/root-project/root/pull/3170,1,['failure'],['failures']
Availability,"@pcanal @bbockelm . This pull request fix the bug here https://sft.its.cern.ch/jira/browse/ROOT-8468. The fist error is due to the dangling pointer. ""buffer"" never gets to be allocated in the function GetUnzipBuffer. The second error is deallocating the memory ""ptr"" point to. Therefore, fUnzipChunks[idxtounzip] becomes null pointer. It should work now. To test the parallel unzipping, simply random generate events and read them. /PATH/TO/TEST/eventexe 1000 6 99 1 1000 (generate 1000 events with zlib); /PATH/TO/TEST/eventexe 1000 6 99 20 1000 (unzip and read 1000 events in sequential manner); /PATH/TO/TEST/eventexe 1000 6 99 21 1000 (unzip and read 1000 events in parallel)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/319:111,error,error,111,https://root.cern,https://github.com/root-project/root/pull/319,2,['error'],['error']
Availability,"@vepadulano @dpiparo . This PR fixes. - https://github.com/root-project/root/issues/7196. This issue is very case-dependent.; When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:; `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree; - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```; const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;; host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;; ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. This PR implements the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```; Int_t fMemAvailable; // available RAM in MB; Int_t fMemCached; // cached RAM in MB; Int_t fMemBuffer; // buffer RAM in MB; Int_t fMemShared; // shared RAM in MB; Int_t fSwapCached; // cached swap in MB; Int_t fSReclaimable // slab that might be reclaimed; ```. Results:. ```; ➜ ROOT free -h; total used free shared buff/cache available; Mem: 23Gi 3.4Gi 7.4Gi 214Mi 12Gi 19Gi; Swap: 7.6Gi 2.1Gi 5.5Gi; ```. ```; ➜ ROOT root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 23877 2786 7562; root [2] ; ```; Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14695:1304,avail,available,1304,https://root.cern,https://github.com/root-project/root/pull/14695,2,['avail'],['available']
Availability,"@vgvassilev, here is the PR so solve the LLVM library conflicts when interfacing ROOT with Julia. I've limited the change to the interpreter package. I have 25 out of the 2140 tests that fail. It's likely to be due to my local environment. If it can easily be tested with the jenkins system, it will be faster that me trying to investigate the test failures. . Note. The parallel compilation is not working properly, independently of my changes: it fails many times and need to be restarted or build some package in single process mode. Is it a know problem ?. # This Pull request:. ## Changes or fixes:. Adds -Bsymbolic linker option for libCling.so in order get the symbols resolved internally; ; This is expected to solve conflicts when interfacing with other software using LLVM, like Julia. See https://github.com/JuliaHEP/ROOT.jl/issues/17#issuecomment-882719292. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717:349,failure,failures,349,https://root.cern,https://github.com/root-project/root/pull/8717,1,['failure'],['failures']
Availability,"A `@pythonization` decorator was already being used internally in ROOT to register pythonizor functions for ROOT classes. Such decorator has been redesigned and made available to users via the ROOT module to pythonize their classes. The decorator accepts two parameters: the target of the pythonization (a string or an iterable of strings) and - optionally - a boolean that says if the string(s) are full class names or prefixes. Let's see this better with examples. If I want to pythonize class `C`, I can define a pythonizor function like this:; ```python; from ROOT import pythonization. @pythonization(""C""); def pythonizor_C(klass, name):; ...; ```; where `klass` is the Python proxy class for `C` and `name` is the name of the class (i.e. ""C""). The reason I kept `name` as parameter is for convenience for the user, since she might want to do some more complex filtering than what the decorator offers (this will be more useful in the examples for prefixes below). If I want to apply the same pythonizor to more than one class, e.g. `C` and `B`, I can do:; ```python; @pythonization([ ""C"", ""B"" ]); def pythonizor_C_B(klass, name):; ...; ```; Note that classes in namespaces also work, e.g. `@pythonization(""NS1::C"")` or `@pythonization([""NS1::C"", ""NS1::NS2::B""])` are also valid. Regarding prefixes, I wanted to provide an option to match multiple classes without specifying their names one by one. This can be useful, for instance, for templated classes, since we might want to apply the same pythonizor to any instantiation of the templated class no matter with what type it was instantiated (note that pythonizors are not applied to templates but to classes). So it is also possible to do (this time picking a real example from ROOT):; ```python; @pythonization(""ROOT::VecOps::RVec<"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```; The `is_prefix` argument (`False` by default) tells that I want to match anything that starts with `ROOT::VecOps::RVec<`, e.g. `ROOT::VecOps::RVec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128:166,avail,available,166,https://root.cern,https://github.com/root-project/root/pull/9128,1,['avail'],['available']
Availability,"A commit from earlier this year (https://github.com/root-project/root/commit/3d545273d7763e09aa85449ba86be5d2493f7f13) adjusted the handling of default units in ROOT's geometry system. Although this commit is an ostensible improvement, reducing points of maintenance, there are some consequences that were maybe not anticipated. I refer to the [units README file](https://github.com/root-project/root/blob/master/geom/geom/README_units.md). In that file it states:. > To ensure backwards compatibility ROOT's default system of units is - as it was before - based on centimeters, seconds and GigaElectronVolts, ie. the defaults are equivalent to:; > ; > ```c++; > TGeoManager::SetDefaultUnits(kRootUnits);; > ```. Unfortunately, this statement is not true. As you see from the definition of the `TGeoManager::fgDefaultUnits` static data member https://github.com/root-project/root/blob/49d0be0b9455e026e6d68e2e651113af3f1e4654/geom/geom/src/TGeoManager.cxx#L302 the default units are G4 units, which it has been for some time (perhaps the beginning?). There was thus an inconsistency with the default units and with those assumed by TGDMLParse, which, before the above commit, made an unconditional assumption of ROOT units. The above commit addresses this inconsistency, but the neutrino community at Fermilab (specifically the LArSoft project and the experiments it supports) experienced an [unintended consequence](https://github.com/LArSoft/larcorealg/pull/18)--the default units are now honored by the TGDML parser, but they are simply G4 units instead of ROOT units. In order to make ROOT units the default, we use the workaround:. ```c++; TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);; TGeoManager::LockDefaultUnits(true);; ```. as the units are locked upon library load: https://github.com/root-project/root/blob/612b68ea1f70c3f5ce7deb8a6b664b8a08987991/geom/geom/src/TGeoManager.cxx#L304. This issue requests two things:. - Please correct the RE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8695:255,mainten,maintenance,255,https://root.cern,https://github.com/root-project/root/issues/8695,1,['mainten'],['maintenance']
Availability,"A few fixes concerning the AsNumpy functionality, related to the iteration of a `vector<string>` and the use of stl strings as keys of Python dictionaries. This should fix the AsNumpy test failure here:; https://github.com/root-project/root/pull/5036#issuecomment-588256573",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5048:189,failure,failure,189,https://root.cern,https://github.com/root-project/root/pull/5048,1,['failure'],['failure']
Availability,"A follow-up from the [discussion on #12664](https://github.com/root-project/root/pull/12664#discussion_r1175726403). The main questions are:. 1. Is a ""dense representation"" (bit vector + default constructed elements for non-available items) really needed; 2. Where is the break-even for the dense representation vs. the sparse representation; 3. Does a ""modified dense"" representation make sense? The modified dense representation would skip creating unavailable items. In order to avoid counting all the 1-bits from the start of the cluster, this representation would need to additionally store the cumulative number of 1 bits per page, e.g. in the page meta-data or in a separate column. To help answer the question, we should fill a table with size figures for the following tests with a few MB of data:. - Nullable field of `bool`, `char`, `float`, `double`, `struct` of a few tens of bytes; - Fill levels 0%, 10%, 50%, 90%, 100%; - Using sparse, dense, modified dense representation; - zstd compressed and uncompressed. For typical compression ratios, the data should follow a typical distribution, e.g. Gauss.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12842:224,avail,available,224,https://root.cern,https://github.com/root-project/root/issues/12842,1,['avail'],['available']
Availability,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7343:198,alive,alive,198,https://root.cern,https://github.com/root-project/root/pull/7343,1,['alive'],['alive']
Availability,A function-static does not guarantee the lifetime to be sufficiently; extended - at least on CentOS7. Use a unique_ptr which guarantees the; reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7. (cherry picked from commit 80c14bb948df53d54596cbbabe725e6ef0acc8e8),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7349:198,alive,alive,198,https://root.cern,https://github.com/root-project/root/pull/7349,1,['alive'],['alive']
Availability,"A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/8/. This PR temporarily disables those failing tests for the experimental PyROOT builds, and they will be re-enabled progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3255:17,failure,failures,17,https://root.cern,https://github.com/root-project/root/pull/3255,1,['failure'],['failures']
Availability,"A number of test failures have to be fixed in the experimental PyROOT builds:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/9/. This PR temporarily flags those tests as ""will fail"" for the experimental PyROOT builds, and they will be restored progressively as they are fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3260:17,failure,failures,17,https://root.cern,https://github.com/root-project/root/pull/3260,1,['failure'],['failures']
Availability,"A one-line fix, but should be backported!. If the parameter was negative, it was slipping past this line and causing nan error to come back from the function!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12838:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/12838,1,['error'],['error']
Availability,"A previous commit dropped the use of PyROOT_PyUnicode_AsStringChecked, which in Py2 corresponds to PyString_AsString, which accepts unicode objects. This PR should fix this test failure seen in the nightlies:; http://cdash.cern.ch/testSummary.php?project=1&name=roottest-python-JupyROOT-simpleCppMagic_notebook&date=2019-09-10",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4372:178,failure,failure,178,https://root.cern,https://github.com/root-project/root/pull/4372,1,['failure'],['failure']
Availability,"A recent refactoring in RDF introduced an incompatibility with gcc; 7.5.0: clang and that gcc version disagree on the address of the; std::map argument passed to InitColumnReaders.; RCustomColumn<...>::InitSlot, the _jitted_ caller, sees the correct; address, but InitColumnReaders<...>, the _compiled_ callee, sees a; different address. For reasons known only to gcc 7.5.0, ~~moving the first function; argument to the last position~~ reducing the number of function; arguments (by aggregating some of them in a helper struct) resolves; the ABI incompatibility.; Valgrind could see an access to invalid memory before, and it does; not anymore. This should fix [this crash](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/94/testReport/junit/projectroot.root/dataframe/roottest_root_dataframe_test_snapshot/) in the conda nightly builds and [these test failures](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2614/) in ROOT's nightlies on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6231:881,failure,failures,881,https://root.cern,https://github.com/root-project/root/pull/6231,1,['failure'],['failures']
Availability,"A reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 42; });; df.Snapshot(""t"", ""f.root"");; df.Snapshot(""fr"", ""fr.root"");; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; TFile frf(""fr.root"");; auto *fr = frf.Get<TTree>(""fr"");; t->AddFriend(fr);; ROOT::RDataFrame df(*t);; df.Filter(""x > 0 && fr.x > 0"").Count().GetValue();; }; ```. errors out with:. ```; input_line_32:2:67: error: use of undeclared identifier 'fr'; auto func0(const Int_t var0, const Int_t var1){return var0 > 0 && fr.var0 > 0; ^; ```. The reason is that in this case we substitute column names with `var0`, `var1` placeholder names starting with `""x""`, resulting in the broken expression with `fr.var0`. I think a possible fix is to perform these substitutions from the longest to the shortest column names. First reported at https://root-forum.cern.ch/t/rdataframe-string-filter-question/50872 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11002:411,error,errors,411,https://root.cern,https://github.com/root-project/root/issues/11002,2,['error'],"['error', 'errors']"
Availability,A very common source of confusion for users is compilation errors coming from ROOT when the C++ standard they use to compile their application is different from the C++ standard with which ROOT was compiled. Some examples:. - https://root-forum.cern.ch/t/solution-for-rstringview-hxx37-error/44639; - https://mattermost.web.cern.ch/root/pl/xiyid5urd7nqtgt381czew1wso; - https://root-forum.cern.ch/t/compiler-error-related-to-c-17-string-view-with-gcc9-1/34727. It would be nice if we could catch this case in a frequently-included header or similar and provide a human-friendly error message instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8063:59,error,errors,59,https://root.cern,https://github.com/root-project/root/issues/8063,4,['error'],"['error', 'error-related-to-c-', 'errors']"
Availability,ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library.; ; The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files.; ; This patch teaches cling to work with the -fmodule-map-file= flag.; ; ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3850:437,avail,available,437,https://root.cern,https://github.com/root-project/root/pull/3850,2,"['avail', 'resilien']","['available', 'resilient']"
Availability,"AMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; root [2] TTreeReaderValue<double> rv(r, ""NUD_total_ADC.nud_total_adc"");; root [3] r.Next(); (bool) true; root [4] *rv; (double) -999.00000; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `TTreeReader` should support the same set of ""valid branch names"" that `TTree::Draw` supports. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Reproduced with 6.22/02 and master@4ea4d8943 . ### Additional context; <!--; Add any other context about the problem here.; -->. This looks similar to https://sft.its.cern.ch/jira/browse/ROOT-7984 and it is (at least part of) the cause of https://sft.its.cern.ch/jira/browse/ROOT-9558 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:1725,Error,Error,1725,https://root.cern,https://github.com/root-project/root/issues/6881,2,"['Error', 'down']","['Error', 'download']"
Availability,"AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior; The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce; Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup; 1. ROOT version: 6.26.02; 2. Operating system: Ubuntu 20; 3. How you obtained ROOT: binary download and also built it. ### Additional context; <!--; Add any other context about the problem here.; -->; you may also notice that the headers list for 6.26.02 is considerably shorter:; ```; $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt; 2970 root-v6.24.06-headers.txt; 2840 root-v6.26.02-headers.txt; ```; Headers included in 6.24.06 but missing in 6.26.02:; ```; $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt; $ grep -c '^-\./' root-headers-diff.txt ; 238; ```; Headers missing in 6.24.06 but included in 6.26.02:; ```; $ grep -c '^+\./' root-headers-diff.txt ; 108; ```; Thank you!; ### Attachments; [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt); [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/root-v6.26.02-headers.txt); [root-headers-diff.txt](https://github.com/root-project/root/files/8646803/root-headers-diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10539:1154,down,download,1154,https://root.cern,https://github.com/root-project/root/issues/10539,1,['down'],['download']
Availability,Access of deleted object during hadd tear down.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9017:42,down,down,42,https://root.cern,https://github.com/root-project/root/issues/9017,1,['down'],['down']
Availability,"According to https://github.com/root-project/root/issues/9137, we get bogus data if a friend is shorter than the main tree. The `datasetspec` test acknowledges this, but still checks the results in the MT case. This miraculously seems to work most of the time, but we sometimes see failures in the nightlies, especially on macOS, so remove it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12025:282,failure,failures,282,https://root.cern,https://github.com/root-project/root/pull/12025,1,['failure'],['failures']
Availability,"According to the [documentation](https://en.cppreference.com/w/cpp/container/list/merge), the lists need to be sorted before merging them. This fixes a `Debug Assertion Failed! Expression sequence not ordered` error on Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13262:210,error,error,210,https://root.cern,https://github.com/root-project/root/pull/13262,1,['error'],['error']
Availability,"According to the [documentation](https://en.cppreference.com/w/cpp/container/list/merge), the lists need to be sorted merging them. This fixes a Runtime Check Error on Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13260:159,Error,Error,159,https://root.cern,https://github.com/root-project/root/pull/13260,1,['Error'],['Error']
Availability,"According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8921:104,error,errors,104,https://root.cern,https://github.com/root-project/root/issues/8921,1,['error'],['errors']
Availability,"According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved; The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8917:54,failure,failure,54,https://root.cern,https://github.com/root-project/root/issues/8917,3,"['error', 'failure']","['error', 'failure']"
Availability,"According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8922:54,failure,failure,54,https://root.cern,https://github.com/root-project/root/issues/8922,1,['failure'],['failure']
Availability,According to the list of changes in Python 3.11:. https://docs.python.org/3.11/whatsnew/3.11.html. types defined with the Py_TPFLAGS_HAVE_GC flag set but with no traverse function (PyTypeObject.tp_traverse) will cause an error. The above is true for a few types that are defined in cppyy. This commit removes the aforementioned flag from those type definitions with no traverse function. It also sets the right flags for the nonified object type; this fixes the teardown GC crashes observed when the internal memory management of ROOT was involved (e.g. the garbage collection of a tree that belongs to a file). This PR fixes https://github.com/root-project/root/issues/10799,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11457:221,error,error,221,https://root.cern,https://github.com/root-project/root/pull/11457,1,['error'],['error']
Availability,According to the list of changes in Python 3.11:; ; https://docs.python.org/3.11/whatsnew/3.11.html; ; types defined with the Py_TPFLAGS_HAVE_GC flag set but with no; traverse function (PyTypeObject.tp_traverse) will cause an error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11713:226,error,error,226,https://root.cern,https://github.com/root-project/root/issues/11713,1,['error'],['error']
Availability,"Add a new option in PyKeras to select the number of running threads when running keras with tensorflow. If nothing is specified, tensor flow normally runs by default on all available cores",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2566:173,avail,available,173,https://root.cern,https://github.com/root-project/root/pull/2566,1,['avail'],['available']
Availability,"Add a number of functions that could replace the way user interacts with the C++ elements of the distributed, fully pythonic RDF analysis, so that this is more natural and clear as well as less error prone compared to the previous method. ; The new functions are: ; - DeclareHeaders; - DeclareSharedLibs ; - DeclareFiles ; - DeclareCppCode. The functions work with both Spark and Dask backends. . The tests are introduced in roottest PR: https://github.com/root-project/roottest/pull/1177",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16309:194,error,error,194,https://root.cern,https://github.com/root-project/root/pull/16309,1,['error'],['error']
Availability,Add detailed error message if RNTupleWriter::Write() fails,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14677:13,error,error,13,https://root.cern,https://github.com/root-project/root/pull/14677,1,['error'],['error']
Availability,Add error message for failing TGrid::Connect issues,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16426:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/16426,1,['error'],['error']
Availability,"Add error message for overflow in converting double to ULong64_t. ## Changes or fixes:; This routine returns now an unsigned 64 bit integer; For large values, larger than 1.84e+19, we print an error message; advising to use the Trandom::PoissonD for such large values,; and return the max value UINT64_MAX. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #6927",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14668:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/14668,2,['error'],['error']
Availability,Add link for the instructions for standalone builds of Minuit2 using cmake. . Remove deadline to download old tar file version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9897:97,down,download,97,https://root.cern,https://github.com/root-project/root/pull/9897,1,['down'],['download']
Availability,"Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934); Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` ; and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5989:9,error,error-checking,9,https://root.cern,https://github.com/root-project/root/pull/5989,1,['error'],['error-checking']
Availability,"Add null checks to some important high-level RNTuple APIs. In general, they are not the most complicated errors but it would be nice to be completely segfault free. e.g.; ```cpp; auto model = RNTupleModel::Create();; model->AddField(nullptr);; ```. Before: ; ```; *** Break *** segmentation violation; ```; After: ; ```; C++ exception with description ""null field; At:; void ROOT::Experimental::RNTupleModel::AddField(std::unique_ptr<ROOT::Experimental::Detail::RFieldBase>) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RNTupleModel.cxx:56]; "" thrown in the test body.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7751:105,error,errors,105,https://root.cern,https://github.com/root-project/root/pull/7751,1,['error'],['errors']
Availability,Add redundant 'virtual' destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14093:4,redundant,redundant,4,https://root.cern,https://github.com/root-project/root/pull/14093,1,['redundant'],['redundant']
Availability,"Add the concept of column representations to fields. Every fields can have a set of possible column representations for writing and additional column representations for reading. When reading, the column representation is fixed by the on-disk data. On writing, there is a default column representation but the user can pick a different one. This provides the framework to store data in different encodings (e.g., split, unsplit) and to load data from ""compatible columns"", e.g. `kInt32` column into `std::int64` type. As an example, the PR adds support for split and unsplit storage of `double`s. Follow-up PRs will complete the available encodings and select split encode as the default for writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12133:629,avail,available,629,https://root.cern,https://github.com/root-project/root/pull/12133,1,['avail'],['available']
Availability,Add the fact TMathText rendering is not available for PDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5372:40,avail,available,40,https://root.cern,https://github.com/root-project/root/pull/5372,1,['avail'],['available']
Availability,Add the physical column ID to the error message shown when a different compression setting than expected is encountered. This should help in locating potential bugs/mistakes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15654:34,error,error,34,https://root.cern,https://github.com/root-project/root/pull/15654,1,['error'],['error']
Availability,"Add tree inference backend using jitted evaluation of the forest. Preliminary benchmarks look promising and show a clear improvement due to the jitting (100 trees, depth 3, 100k events):. ```; XGB: 2.30692 microsec/event; BranchlessForest: 0.962279 microsec/event; BranchlessJittedForest: 0.67292 microsec/event; ```. WIP: Still needs some error-handling and doxygen markup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4476:340,error,error-handling,340,https://root.cern,https://github.com/root-project/root/pull/4476,1,['error'],['error-handling']
Availability,Add up and down arrow keys handling (resolves #7180),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7220:11,down,down,11,https://root.cern,https://github.com/root-project/root/pull/7220,1,['down'],['down']
Availability,"Add yet another fence in TClass::GetClass to avoid lookups and memory consumption. This PR aims to fix #9029. Give the sophisticated implementation of TClass::GetClass, perhaps it would be good to collect some feedback, especially by @pcanal . # This Pull request:; This PR avoids lookups and parsing in some cases.; One of the principles of the TClass::GetClass method implementation is to avoid as much as possible. . ## Changes or fixes:; This commit adds yet another fence in TClass::GetClass, checking if the name in input is the name of a known fundamental type or typedef to it.; In order to avoid code duplication, a routine previously available within the implementation of TClassEdit has been made available with a public API. ## Checklist:. - [v ] tested changes locally; - [v ] updated the docs (if necessary). This PR fixes #9029",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341:644,avail,available,644,https://root.cern,https://github.com/root-project/root/pull/13341,2,['avail'],['available']
Availability,"Added 'nproc' for the processing units available, needed during the build process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5079:39,avail,available,39,https://root.cern,https://github.com/root-project/root/pull/5079,1,['avail'],['available']
Availability,Added class TGraphMultiErrors for graph with multidimensional y-Errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:64,Error,Errors,64,https://root.cern,https://github.com/root-project/root/pull/3452,1,['Error'],['Errors']
Availability,Added missing newline in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/832:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/832,1,['error'],['error']
Availability,"Added new features to GeoCad library. - New features are used to export partial geometries to STEP files.; - Added 3 new member functions TGeoToStep::CreatePartialGeometry taking; different arguments.; - The first takes a file_name and a max_level, and defaults to the; previous (default arguments) behavior. The max_level sets the node depth; that will be exported in the STEP file.; - The second version, in addition to the previous version, has a part_name argument.; This is the name of a volume that is associated with a level 1 node.; Only this node and its children down to max_level will be exported.; - Similarly, a third version takes a map of part_name/max_level key/value pairs.; This allows the multiple level 1 nodes to be selected and exported to; different max_levels. 	modified: geom/geocad/inc/TGeoToStep.h; 	modified: geom/geocad/inc/TOCCToStep.h; 	modified: geom/geocad/src/TGeoToStep.cxx; 	modified: geom/geocad/src/TOCCToStep.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1442:573,down,down,573,https://root.cern,https://github.com/root-project/root/pull/1442,1,['down'],['down']
Availability,Address [cling] shutdown issues/tear-down-ordering challenges,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4399:37,down,down-ordering,37,https://root.cern,https://github.com/root-project/root/pull/4399,2,['down'],['down-ordering']
Availability,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11621:37,failure,failures,37,https://root.cern,https://github.com/root-project/root/pull/11621,3,['failure'],"['failure', 'failures']"
Availability,Address gcc9 warning about redundant move.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3944:27,redundant,redundant,27,https://root.cern,https://github.com/root-project/root/pull/3944,2,['redundant'],['redundant']
Availability,"Address: https://github.com/root-project/root/pull/12650#issuecomment-1517450219. From @hahnjo:. Hi @pcanal, our AddressSanitizer build reports a heap-buffer-overflow: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit https://github.com/root-project/root/commit/2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does TMath::BinarySearch return in case the element is not found?. Answer: yep it was missing the error handling (return value of -1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12695:476,error,error,476,https://root.cern,https://github.com/root-project/root/pull/12695,2,['error'],['error']
Availability,"Addresses one of the issues on https://github.com/root-project/root/issues/8365. Namely, TThread::Printf() causing a data race with TApplication::Run(). ```; TApplication::IsRunning() const (TApplication.h:148); TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1029); This conflicts with a previous write of size 1 by thread #1; TApplication::Run(bool) (TApplication.cxx:1622); ```. After this fix, the error disappears from helgrind.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8379:418,error,error,418,https://root.cern,https://github.com/root-project/root/pull/8379,1,['error'],['error']
Availability,Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7260:92,avail,available,92,https://root.cern,https://github.com/root-project/root/pull/7260,1,['avail'],['available']
Availability,"Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for; - unified access to files, either local or remote; - Automatic handling of UNIX and Windows line breaks ; - Control of the I/O buffer mechanism. Current todos:; - [ ] Use upcoming `RStatus` / `RException` based error handling; - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation ; - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX; - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030:609,error,error,609,https://root.cern,https://github.com/root-project/root/pull/3030,1,['error'],['error']
Availability,"Adds a new constructor to the RNTuple RDF data source that takes an ntuple name and a list of files. The data source then treats these files as a chain. Slightly simplifies the prototype construction in the RNTuple data source: instead of constructing full column reader prototypes, only the corresponding field prototypes are constructed. Multi-threaded work scheduling is as follows:. - As long as there are more files than slots: every slots get a file; - For the tail: slots get distributed over the remaining files and align on cluster boundaries. Some optimizations for follow-up PRs:. - Load the next ranges in the background. In particular that would open the next batch of files in the backgound; - Clone page sources without reopening the file; - The next set of ranges currently gives up to number of slots ranges. However, it would make more sense to use resource constraints such as available memory or number of open file descriptors as a limit and let slots work on more ranges at a time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13329:896,avail,available,896,https://root.cern,https://github.com/root-project/root/pull/13329,1,['avail'],['available']
Availability,"Adds a new static method, `RFieldBase::Check()`, that produces a support status report of a type wrt. to RNTuple I/O. The method uses `RFieldBase::Create()` internally. Instead of throwing an exception when a (sub) type fails to be constructed, in the case of `Check()` an `RInvalidField` is inserted in the field tree instead. The invalid fields are then collected to produce a report of failures. @Dr15Jones FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14906:389,failure,failures,389,https://root.cern,https://github.com/root-project/root/pull/14906,1,['failure'],['failures']
Availability,"Adds a nullable field as a base class for unique pointer support. A follow-up PR will add `std::optional` support using the same base class. The nullable field is usually stored like a collection that can have zero or one element per entry. Optionally, nullable fields can be stored in ""dense mode"", with a bitmap mask and default-constructed values for the null entries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12664:314,mask,mask,314,https://root.cern,https://github.com/root-project/root/pull/12664,1,['mask'],['mask']
Availability,"Adjust test for failures on aarch64, ppc64le and s390x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14164:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/pull/14164,1,['failure'],['failures']
Availability,"Adjust the spec.json file used for the test accordingly. Note that RDataFrame does not error out if a number beyond the last entry available is specified, it just interrupts the event loop early. This issue is; tracked at #13800.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13801:87,error,error,87,https://root.cern,https://github.com/root-project/root/pull/13801,2,"['avail', 'error']","['available', 'error']"
Availability,Adresses most issues from #7426. * Check nullptr in proposed places; * Mark `// NOLINT` when return static members ; * Use references in several loops like `for (auto &entry : arr)`; * Fix potential logic error in `TStreamerElement::GetSequenceType`; * Use std::vector<std::string> for tokens in `TDataMember::ExtractOptionsFromComment`; * Use static std::string in `TCling::TypeName` instead of self-maintained char buffer; * Fix potential leak when calling `TClass::AdoptMemberStreamer`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7444:205,error,error,205,https://root.cern,https://github.com/root-project/root/pull/7444,1,['error'],['error']
Availability,"After #10005 is merged, the test `tutorial-fit-minuit2GausFit` will fail due to a `stack-use-after-scope`:; ```; 505: READ of size 8 at 0x7fa73033ca68 thread T0; 505: #0 0x7fa71035ba11 in ROOT::Minuit2::MnFcn::ErrorDef() const /home/jhahnfel/ROOT/src/math/minuit2/src/MnFcn.cxx:36:11; 505: #1 0x7fa71031298f in ROOT::Minuit2::InitialGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /home/jhahnfel/ROOT/src/math/minuit2/src/InitialGradientCalculator.cxx:63:30; 505: #2 0x7fa7103e185a in ROOT::Minuit2::Numerical2PGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /home/jhahnfel/ROOT/src/math/minuit2/src/Numerical2PGradientCalculator.cxx:39:27; 505: #3 0x7fa710305d22 in ROOT::Minuit2::FumiliGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const::$_0::operator()(std::ostream&) const /home/jhahnfel/ROOT/src/math/minuit2/src/FumiliGradientCalculator.cxx:98:29; 505: #4 0x7fa7103059ff in decltype((fp0(fp)) , ((void)())) ROOT::Minuit2::MnPrint::HandleLambda<ROOT::Minuit2::FumiliGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const::$_0>(std::ostream&, ROOT::Minuit2::FumiliGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const::$_0 const&, int) /home/jhahnfel/ROOT/src/math/minuit2/inc/Minuit2/MnPrint.h:171:7; 505: #5 0x7fa7103059ce in void ROOT::Minuit2::MnPrint::StreamArgs<ROOT::Minuit2::FumiliGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const::$_0>(std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >&, ROOT::Minuit2::FumiliGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const::$_0 const&) /home/jhahnfel/ROOT/src/math/minuit2/inc/Minuit2/MnPrint.h:187:7; 505: #6 0x7fa71030576b in void ROOT::Minuit2::MnPrint::Log<ROOT::Minuit2::FumiliGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const::$_0>(ROOT::Minuit2::MnPrint::Verbosity, ROOT::Minuit2::FumiliGra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10014:210,Error,ErrorDef,210,https://root.cern,https://github.com/root-project/root/issues/10014,1,['Error'],['ErrorDef']
Availability,After #9673 compilation in `dev` mode is broken - warnings are converted to errors. Plus update Oracle code to use namespace clearly - should help for Doxygen documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9674:76,error,errors,76,https://root.cern,https://github.com/root-project/root/pull/9674,1,['error'],['errors']
Availability,"After [those changes](https://github.com/root-project/root/commit/060e8d7afd8c47f61eee9f72004388b1a60d77f2), related to C++ modules on Windows, the following tests:. roottest-root-dataframe-writeFcc (Failed); roottest-root-dataframe-test_readFcc (Failed); roottest-root-dataframe-regression_snapshot (Failed); roottest-root-dataframe-test_glob (Failed); roottest-root-dataframe-test_reduce (Failed); roottest-root-dataframe-ctors (Failed). Are failing with the following errors:. ```; 1306: Processing C:/Users/sftnight/git/roottest/root/dataframe/test_ctors.C+...; 1306: Info in <TWinNTSystem::ACLiC>: creating shared library C:/Users/sftnight/build/release/roottest/root/dataframe/test_ctors_C.dll; 1306: In file included from input_line_9:9:; 1306: In file included from C:/Users/sftnight/git/roottest/root/dataframe/test_ctors.C:4:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDataFrame.hxx:20:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDF/RInterface.hxx:15:; 1306: In file included from C:/Users/sftnight/build/release/include\ROOT/RDF/ActionHelpers.hxx:25:; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1434:36: error: use of undeclared identifier 'M_PI'; 1306: T DeltaPhi(T v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1455:68: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1473:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(const RVec<T>& v1, T v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1491:55: error: use of undeclared identifier 'M_PI'; 1306: RVec<T> DeltaPhi(T v1, const RVec<T>& v2, const T c = M_PI); 1306: ^; 1306: C:/Users/sftnight/build/release/include\ROOT/RVec.hxx:1510:113: error: use of undeclared identifier 'M_PI'; 1306: RVec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6727:471,error,errors,471,https://root.cern,https://github.com/root-project/root/pull/6727,1,['error'],['errors']
Availability,"After applying all updates on CentOS 8 Stream, `roottest-root-treeformula-stl-make` started crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output; ```; Processing runmapvector.C...; Warning in <TClass::Init>: no dictionary for class MyEvent is available; ***********************************; * Row * Instance * data.firs *; ***********************************; * 0 * 0 * 3 *; ***********************************; ***********************************; * Row * Instance * data.seco *; ***********************************; * 0 * 0 * 5 *; * 0 * 1 * 7 *; ***********************************; free(): invalid next size (fast); ```. ### Backtrace; ```; #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6; #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6; #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6; #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 ; #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 ; #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 ; #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 ; #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 ; #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 ; #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543:297,avail,available,297,https://root.cern,https://github.com/root-project/root/issues/9543,1,['avail'],['available']
Availability,"After calling the RDataFrame.Redefine method, saving the Snapshot containing the redefined column will raise an error. . Reproducer:; ```; import ROOT; import numpy as np; rdf = ROOT.RDF.MakeNumpyDataFrame({""bar"": np.arange(0, 10, 1)}); rdf = rdf.Redefine(""bar"", ""bar + 1""); rdf.Snapshot(""output"", ""output.root""); ```. This gives:; ```; TypeError: Template method resolution failed:; none of the 3 overloaded methods succeeded. Full details:; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, initializer_list<string> columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; TypeError: takes at least 3 arguments (2 given); ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; TypeError: takes at least 3 arguments (2 given); ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, basic_string_view<char,char_traits<char> > columnNameRegexp = """", const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; logic_error: Error: column ""bar"" was passed to Snapshot twice. This is not supported: only one of the columns would be readable with RDataFrame.; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Snapshot(bas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10233:112,error,error,112,https://root.cern,https://github.com/root-project/root/issues/10233,1,['error'],['error']
Availability,"After ending Python 2 support, the build configuration can be simplified further:. * don't use the deprecated `PYTHONLIBS_FOUND` (https://cmake.org/cmake/help/latest/module/FindPythonLibs.html). * remove unused `FundNumPy.cmake` (the `FindPython` takes care of that). * remove some unnessecary aliases. * avoid redundant printouts and checks in CMake. * profit from targets like `Python3::Python` and `Python3::NumPy`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15401:311,redundant,redundant,311,https://root.cern,https://github.com/root-project/root/pull/15401,1,['redundant'],['redundant']
Availability,"After https://sft.its.cern.ch/jira/browse/ROOT-10849 is fixed, we are now left with three test failures:. * projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead; * projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead; * projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6331:95,failure,failures,95,https://root.cern,https://github.com/root-project/root/issues/6331,1,['failure'],['failures']
Availability,"After iterating over the shape factors and filling a temporary vector of; `ParamHistFunc` pointers that all point to args in the proto workspace,; there was another iteration over this vector, importing the objects; again into the workspace that are already in it. The problem was that the original objects were then deleted, but since; they were already in the workspace the workspace contents were deleted,; which caused segfaults down the line. Needs to be backported to 6.26. Second commit unrelated to the bugfix, just some code modernizations. Closes #10687.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10740:433,down,down,433,https://root.cern,https://github.com/root-project/root/pull/10740,1,['down'],['down']
Availability,"After merging #12380, @Nowakus noticed issues when trying to fill entries for a model that includes the ATLAS' `DataVector<T>` type.; This is because a proxied collection, notably those deriving from `TGenCollectionProxy`, apparently rely on an active object also for using iterators. This PR should fix the error below.; ```; TGenCollectionProxy FATAL Size> Logic error - no proxy object set.; ```. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12466:308,error,error,308,https://root.cern,https://github.com/root-project/root/pull/12466,2,['error'],['error']
Availability,"After recent change I get compiler error with `-Ddev=On` option like:. ```; tmva/sofie/inc/TMVA/ROperator_Conv.hxx: In instantiation of ‘std::vector<std::vector<long unsigned int> > TMVA::Experimental::SOFIE::ROperator_Conv<T>::ShapeInference(std::vector<std::vector<long unsigned int> >) [with T = float]’:; /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:89:37: required from here; /home/linev/git/webgui/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:99:19: error: comparison of unsigned expression in ‘< 0’ is always false [-Werror=type-limits]; 99 | if (fDim < 0 || fDim > 2) {; | ~~~~~^~~; ```. Looking in the code, and error message `std::runtime_error(""TMVA SOFIE Conv Op Shape inference only accept tensor with 3, 4 or 5 dimensions"")`, I suspect that these checks are wrong. One should have `if (fDim < 1 || fDim > 3)`. But while `fDim` is unsigned integer, one better ; checks original size `if (input[i].size() < 3 || input[i].size() > 5)`. Please fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9453:35,error,error,35,https://root.cern,https://github.com/root-project/root/issues/9453,3,['error'],['error']
Availability,"After recent fixes on the interaction between Python and AddressSanitizer (https://github.com/root-project/root/pull/11621), there is now a `global-buffer-overflow` reported for `tutorial-rcanvas-df104-py`:; ```; 1148: ==4075620==ERROR: AddressSanitizer: global-buffer-overflow on address 0x7f7b0e15ea65 at pc 0x7f7b14df7aaa bp 0x7fff988d9ab0 sp 0x7fff988d9258; 1148: READ of size 156 at 0x7f7b0e15ea65 thread T0; 1148: #0 0x7f7b14df7aa9 in __asan_memcpy (/usr/lib64/clang/14.0.6/lib/linux/libclang_rt.asan-x86_64.so+0x101aa9) (BuildId: e896d268897cea67bde300bc334ab7b2bfb702db); 1148: #1 0x7f7b0fa19ba1 in TString::Replace(int, int, char const*, int) /home/jhahnfel/ROOT/src/core/base/src/TString.cxx:1069:16; 1148: #2 0x7f7b0e2d9e7d in TString::Append(char const*) /home/jhahnfel/ROOT/src/core/base/inc/TString.h:565:10; 1148: #3 0x7f7b0e2d9e7d in TBufferJSON::JsonWriteBasic(bool) /home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:3963:11; 1148: #4 0x7f7b0e2d9e7d in TBufferJSON::WriteBool(bool) /home/jhahnfel/ROOT/src/io/io/src/TBufferJSON.cxx:3724:4; 1148: #5 0x7f7b0e5a62bc in operator<<(TBuffer&, bool) /home/jhahnfel/ROOT/src/core/base/inc/TBuffer.h:361:60; 1148: #6 0x7f7b0e5a62bc in int TStreamerInfoActions::WriteBasicType<bool>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/jhahnfel/ROOT/src/io/io/src/TStreamerInfoActions.cxx:253:11; 1148: #7 0x7f7b0e21d31d in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const /home/jhahnfel/ROOT/src/io/io/inc/TStreamerInfoActions.h:123:17; 1148: #8 0x7f7b0e21d31d in TBufferText::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) /home/jhahnfel/ROOT/src/io/io/src/TBufferText.cxx:91:10; 1148: #9 0x7f7b0e21e1c1 in TBufferText::WriteClassBuffer(TClass const*, void*) /home/jhahnfel/ROOT/src/io/io/src/TBufferText.cxx:211:4; 1148: #10 0x7f7ae6a268ba in TFormula::Streamer(TBuffer&) /home/jhahnfel/ROOT/src/hist/hist/src/TFormula.cxx:3901:9; 1148: #11 0x7f7b0e2278c8 in TClass::Streamer(voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11629:230,ERROR,ERROR,230,https://root.cern,https://github.com/root-project/root/issues/11629,1,['ERROR'],['ERROR']
Availability,"After removing globbing in core module, if to fetch a fresh master; some headers were not able to get a valid relative path causing next error:; -- /home/oksana/CERN_sources/root/builds/include/TArrayF.h; CMake Error at cmake/modules/RootNewMacros.cmake:292 (message):; Header path '/home/oksana/CERN_sources/root/builds/include/TArrayF.h'; TArrayF.h is not relative!; Call Stack (most recent call first):; core/base/CMakeLists.txt:232 (ROOT_GENERATE_DICTIONARY); Adding extra replacement pattern, matching - $CMAKE_BUILD_DIR/include, fixes issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2554:137,error,error,137,https://root.cern,https://github.com/root-project/root/pull/2554,2,"['Error', 'error']","['Error', 'error']"
Availability,"After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:; ```; Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll; Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73; ```; So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6647:81,error,error,81,https://root.cern,https://github.com/root-project/root/pull/6647,1,['error'],['error']
Availability,"After the latest LLVM upgrade, changes in cling's symbol resolution; logic cause some unresolved symbol failures in RDF jitting. Adding RJittedAction to the rootmap should help cling autoloading; and work around the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7586:104,failure,failures,104,https://root.cern,https://github.com/root-project/root/pull/7586,2,['failure'],['failures']
Availability,"After the upgrade to LLVM 13, the test `roottest-root-meta-tclass-execInitOrder` will *crash* with AddressSanitizer instrumentation:; ```; 2187: Processing /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx+...; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Derived is found to inherit from TObject; 2187:; 2187: *** Break *** segmentation violation; 2187:; 2187:; 2187:; 2187: ===========================================================; 2187: There was a crash.; 2187: This is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:235,Error,Error,235,https://root.cern,https://github.com/root-project/root/issues/11867,8,"['Error', 'avail']","['Error', 'available']"
Availability,"After updating Visual Studio 2019 to the version `16.10.0`, there is a `fatal error C1001: Internal compiler error` when compiling `G__MathCore.cxx`; See the bug report at Microsoft: [[v16.10.0] Fatal error C1001: Internal compiler error](https://developercommunity.visualstudio.com/t/v16100-fatal-error-c1001-internal-compiler-error/1437980?from=email&viewtype=all); And the proposed workaround:. 1. Remove the `auto` return type from `FunctorGradHandler::Clone()`. This function is the cause of the ICE and replacing `auto` with `ImplFunc*` will resolve the issue.; 2. Only if fixing the source is not an option, add `/d1deducedReturnEncoding-` to your build. This will disable the recent compiler work around deduced return types. Keep in mind that this option should only be used as a last resort because it is not a permanent switch. Interestingly enough, the `auto` return type was introduced as a workaround for another compiler error with `VS 2019 (16.4.3)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8327:78,error,error,78,https://root.cern,https://github.com/root-project/root/pull/8327,7,['error'],"['error', 'error-']"
Availability,"All actions and transformations now use the same method to decide what columns to act no: `ROOT::Internal::TDF::SelectColumnNames`. The method picks the necessary number of default columns if the user-provided list is absent. Throws in case of error. The two separate old mechanisms to achieve the same (`PickBranchNames` and `GetBranchNames`+`GetDefaultBranchNames`) have been completely removed. This PR does not introduce conflicts with #764, also related to TDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/768:244,error,error,244,https://root.cern,https://github.com/root-project/root/pull/768,1,['error'],['error']
Availability,"All the RooFit tutorials were replicated in the `root/roofitcore/test` directory to be used as tests, which are never run as part of the unit tests. Actually, the RooFit tutorials made their way into a unit test in the `stressRooFit` test suite, which is run by `ctest` also in the CI. That means the tutorial files in `root/roofitcore/test` are redundant, and also badly out of sync with the actual tutorials and stressRooFit because they are never tested automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11361:346,redundant,redundant,346,https://root.cern,https://github.com/root-project/root/pull/11361,1,['redundant'],['redundant']
Availability,"Allocate (GSLRngWrapper.h:99); ==12320== by 0x8223765: ROOT::Math::GSLMCIntegrator::GSLMCIntegrator(char const*, double, double, unsigned int) (GSLMCIntegrator.cxx:117); ==12320== by 0x108BF5: main (mcintegrator.cpp:8); ==12320==; ==12320== LEAK SUMMARY:; ==12320== definitely lost: 319,984 bytes in 19,999 blocks; ==12320== indirectly lost: 98,770,000 bytes in 19,754 blocks; ==12320== possibly lost: 1,225,000 bytes in 245 blocks; ==12320== still reachable: 340,874 bytes in 4,262 blocks; ==12320== suppressed: 0 bytes in 0 blocks; ==12320== Reachable blocks (those to which a pointer was found) are not shown.; ==12320== To see them, rerun with: --leak-check=full --show-leak-kinds=all; ==12320==; ==12320== For counts of detected and suppressed errors, rerun with: -v; ==12320== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0); ```. After fix:; ```; valgrind --tool=memcheck --leak-check=full --show-leak-kinds=definite \; --undef-value-errors=no ./mcintegrator. ==14294== Memcheck, a memory error detector; ==14294== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==14294== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info; ==14294== Command: ./mcintegrator; ==14294==; ==14294==; ==14294== HEAP SUMMARY:; ==14294== in use at exit: 335,858 bytes in 4,260 blocks; ==14294== total heap usage: 67,782 allocs, 63,522 frees, 101,539,078 bytes allocated; ==14294==; ==14294== LEAK SUMMARY:; ==14294== definitely lost: 0 bytes in 0 blocks; ==14294== indirectly lost: 0 bytes in 0 blocks; ==14294== possibly lost: 0 bytes in 0 blocks; ==14294== still reachable: 335,858 bytes in 4,260 blocks; ==14294== suppressed: 0 bytes in 0 blocks; ==14294== Reachable blocks (those to which a pointer was found) are not shown.; ==14294== To see them, rerun with: --leak-check=full --show-leak-kinds=all; ==14294==; ==14294== For counts of detected and suppressed errors, rerun with: -v; ==14294== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/928:3012,error,error,3012,https://root.cern,https://github.com/root-project/root/pull/928,4,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"Allow to select the system of units in TGeo at run-time and allow to switch to; Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:; ```; #include ""TGeant4SystemOfUnits.h""; ....; TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units); ```; Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:; ```; #include ""TGeoSystemOfUnits.h""; ....; TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits); ```; Please note: ; 1) This code is not necessary. If users do nothing the behavior stays as it is now.; 2) Units have to be set *before* the first TElement or TMaterial constructor is called,; Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4006:649,error,error,649,https://root.cern,https://github.com/root-project/root/pull/4006,1,['error'],['error']
Availability,Allow user-defined safety to be drawn in TGeoManager::CheckPoint,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14851:54,CheckPoint,CheckPoint,54,https://root.cern,https://github.com/root-project/root/pull/14851,1,['CheckPoint'],['CheckPoint']
Availability,"Allow users to adjust the number of entries per cluster and the number of elements per page using `RNTupleWriteOptions`. ; I also took the opportunity to fix some whitespace errors in `RNTupleOptions.hxx`. Fixes #7853. Usage (see tests as well): ; ```cpp; RNTupleWriteOptions opt;; opt.SetNClusterEntries(100000);; opt.SetNElementsPerPage(40000);; auto ntuple = RNTupleWriter::Recreate(; std::move(model), ""ntuple"", fileGuard.GetPath(), opt; );; ```. As was pointed out in https://github.com/root-project/root/pull/7112#issue-564081466, there are some `NElementsPerPage` inputs that could cause compression problems (i.e. those where the total page memory is larger than `0xffffff`). Should we have some error checking at the `RNTupleWriteOptions` level? Or maybe this should be considered a bug on the compression side of things. cc @jalopezg-r00t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8113:174,error,errors,174,https://root.cern,https://github.com/root-project/root/pull/8113,2,['error'],"['error', 'errors']"
Availability,"Allows for direct processing of sqlite files under HTTP(S) URLs provided that Davix is available. Replaces #2578. I think it would be nice to have a unit test for reading of remote files. Unfortunately, Davix does not understand the `http:///path/to/file` trick to use a URL on local paths. Can we upload tree/dataframe/test/RSqliteDS_test.sqlite to https://root.cern.ch/... for testing?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2608:87,avail,available,87,https://root.cern,https://github.com/root-project/root/pull/2608,1,['avail'],['available']
Availability,"Allows to change label on the axis by the value. It is more robust method, ; which continue working when zooming or axis limits or just canvas resolution changes.; Example is following:; ```; axis->ChangeValueLabel(30.,-1,-1,-1,kBlue,-1,""value of 30"");; ```. Old `TAxis::ChangeLabel` method using index is working as before. Use `strlcpy` instead of `strncpy` where it makes sense, update tutorial and release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13468:60,robust,robust,60,https://root.cern,https://github.com/root-project/root/pull/13468,1,['robust'],['robust']
Availability,"Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7341:113,avail,available,113,https://root.cern,https://github.com/root-project/root/pull/7341,1,['avail'],['available']
Availability,Also now verify all downloaded software before installing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1253:20,down,downloaded,20,https://root.cern,https://github.com/root-project/root/pull/1253,1,['down'],['downloaded']
Availability,Also provide improved solution for THttpServer shutdown - handling of websocket close done async and does not block civetweb threads. Improves reliability of cleanup process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1371:143,reliab,reliability,143,https://root.cern,https://github.com/root-project/root/pull/1371,1,['reliab'],['reliability']
Availability,"Also support the `Offset(""bin"")` feature in simultaneous fits with the; legacy evaluation backend (e.g., the old test statistic classes). In this case, The top-level `RooNLLVar` actually doesn't do anything; but contains pointers to the NLLs for the individual channels. The; function call to enable the offsetting must be delegated to those. A unit test that covers this is also implemented. Note that for the new CPU evaluation backend, this is working already. A second commit in this PR is fixing a copy-paste error in the functions that define the evaluation backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13890:514,error,error,514,https://root.cern,https://github.com/root-project/root/pull/13890,1,['error'],['error']
Availability,"Also, throw an exception with a helpful error message if the user attempts to use `RooFit::Slice()` with a comma-separates list of category states, which is not supported. This addresses a question on the forum:; https://root-forum.cern.ch/t/plotting-two-categories-of-simultaneous-fit-in-a-single-plot/56250",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13637:40,error,error,40,https://root.cern,https://github.com/root-project/root/pull/13637,1,['error'],['error']
Availability,"An attempt to build ROOT against the system Python3 on MacOS11/12 results in a build with no errors, but with some test failures:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12,SPEC=soversion,V=master/3084/. The following is the relevant error:. ```; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/mac12/SPEC/soversion/V/master/build/lib/libROOTTPython.6.25.02.so, 0x0009): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; ```. According to:. ```; $ otool -l lib/libROOTTPython.so | grep -C2 Python3; cmd LC_LOAD_DYLIB; cmdsize 72; name @rpath/Python3.framework/Versions/3.8/Python3 (offset 24); time stamp 2 Thu Jan 1 01:00:02 1970; current version 3.8.0; --; cmd LC_RPATH; cmdsize 104; path /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib (offset 12); Load command 20; cmd LC_FUNCTION_STARTS; ```. RPATH is set, but the dylib load directive doesn't match.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9793:93,error,errors,93,https://root.cern,https://github.com/root-project/root/issues/9793,3,"['error', 'failure']","['error', 'errors', 'failures']"
Availability,"An empty list of linked libraries was interpreted as failure to extract; the list of linked libraries; the default ""-lCore -lRint..."" was taken instead.; When running python, no libs show up as linked. That caused ""-lRint"" to be claimed; as linked, which was preventing gSystem.Load(""libRint"") within python, claiming; that it is already loaded (as it is linked). Instead, if the library signaling the end of linked libraries is seen, and so far; no libraries have been found as linked, set the list-of-linked-libraries to "" "",; i.e. not empty, triggering the ""success"" path in TSystem::GetLibraries(), and correctly; reporting the linked libraries. This fixes JupyROOT-cppcompleter-doctest, JupyROOT-ROOT-kernel-notebook not finding; TTabCom::TTabCom() because loadling libRint was mistakenly a no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5864:53,failure,failure,53,https://root.cern,https://github.com/root-project/root/pull/5864,1,['failure'],['failure']
Availability,An error when using Minuit in tutorial_tmva_TMVARegression,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6773:3,error,error,3,https://root.cern,https://github.com/root-project/root/issues/6773,1,['error'],['error']
Availability,"Another little change, this makes some nice features available in python such as ```""var"" in collection```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8177:53,avail,available,53,https://root.cern,https://github.com/root-project/root/pull/8177,1,['avail'],['available']
Availability,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9103:122,Failure,Failure,122,https://root.cern,https://github.com/root-project/root/pull/9103,1,['Failure'],['Failure']
Availability,"Apple has switched to high-resolution timing for APFS, giving mu second resolution.; Ninja supports that since 1.9.0. BUT the binutils by Apple just write out zeros,; causing wrong time stamps and causing re-build events. CMake has worked around that by touching the library generated by Apple binutils,; to update its timestamp. That means:; On Apple (assuming Apple filesystem), with a recent Ninja, CMake has to be >= 3.14.4. This will be toned down to a WARNING message later - but for now, until we find the; CI nodes suffering from this, keep it as a FATAL_ERROR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6196:448,down,down,448,https://root.cern,https://github.com/root-project/root/pull/6196,1,['down'],['down']
Availability,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14011:694,redundant,redundant-string-cstr,694,https://root.cern,https://github.com/root-project/root/pull/14011,2,['redundant'],['redundant-string-cstr']
Availability,"Apply changes suggested in the `Notes` section of the `isspace` [C++ standard](https://en.cppreference.com/w/cpp/string/byte/isspace) This fixes the following error when reading the character `'ò' (-14 )` in stressgraphics:; ```; Debug Assertion Failed!; Program:; C:\root-dev\build\x86\debug_test\test\Debug\stressGraphics.exe; File: minkernel\crts\ucrt\src\appcrt\convert\isctype.cpp; Line 36; Expression c > = -1 && c < = 255; ```. From `isspace((Int_t)c)`, in `core\base\src\Stringio.cxx`, in `std::istream& TString::ReadToken(std::istream& strm)`:; ```; while ((wid == 0 || Length() < (Int_t)wid) &&; strm.get(c).good() && (hitSpace = isspace((Int_t)c)) == 0) {; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13584:159,error,error,159,https://root.cern,https://github.com/root-project/root/pull/13584,1,['error'],['error']
Availability,Apply fixes for when RooFitMore (MathMore) is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4920:50,avail,available,50,https://root.cern,https://github.com/root-project/root/pull/4920,1,['avail'],['available']
Availability,Apply fixes for when RooFitMore (MathMore) is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4919:50,avail,available,50,https://root.cern,https://github.com/root-project/root/pull/4919,1,['avail'],['available']
Availability,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12559:347,error,error,347,https://root.cern,https://github.com/root-project/root/issues/12559,11,"['Error', 'error']","['Error', 'error']"
Availability,"As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`; 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python; import ROOT; from ROOT import TDirectory. with TDirectory.TContext():; # Open some file here; file = ROOT.TFile(...); # Retrieve contents from the file; histo = file.Get(""myhisto""); ```; where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python; import ROOT; from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""); file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):; histo = ROOT.TH1F(...); histo.Write(); ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10167:1885,alive,alive,1885,https://root.cern,https://github.com/root-project/root/pull/10167,1,['alive'],['alive']
Availability,"As discussed in #12376, the release candidate tag was to be bumped to RC2 after late model extension + split encoding is available. In principle, it's safe to do it now. ## Checklist:; - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13566:121,avail,available,121,https://root.cern,https://github.com/root-project/root/pull/13566,1,['avail'],['available']
Availability,"As discussed in ROOT-8011, TPython can't work with the ROOT C++; kernel for Jupyter because the current implementation relies; on a plain shared library to run the cell code and capture; its output and error. In particular, a crash happens when; the library, libJupyROOT, tries to get the __main__ module; in TPython's initialization. Turning libJupyROOT into a C extension module makes TPython's; initialization succeed, since Python is fully operational. This PR also fixes an issue when setting the CPPYY_BACKEND_LIBRARY variable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5334:202,error,error,202,https://root.cern,https://github.com/root-project/root/pull/5334,1,['error'],['error']
Availability,"As discussed in https://github.com/root-project/root/issues/9362#issuecomment-985632761, keep wired output; of candle plot which appears for low statistic - it should indicate large errors. Plus exclude some calculations when scaling options disabled for violin and/or candle plots",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9385:182,error,errors,182,https://root.cern,https://github.com/root-project/root/pull/9385,1,['error'],['errors']
Availability,"As explained in https://github.com/root-project/root/issues/8745, if we look up the `Detail` namespace first and then define something else in it, there is an assertion failure. That crash does not happen if there is no prior lookup. Example:. ```; root [0] auto c = TClass::GetClass(""Detail""); (TClass *) @0x7fffd0908fc0; root [1] namespace Detail { int i; }; root.exe: /home/etejedor/root/fork/root/interpreter/llvm/src/include/llvm/Support/Casting.h:105: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::TagType; From = clang::Type]: Assertion `Val && ""isa<> used on a null pointer""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828:169,failure,failure,169,https://root.cern,https://github.com/root-project/root/issues/8828,1,['failure'],['failure']
Availability,"As found here:; https://gitlab.kitware.com/cmake/cmake/-/issues/21947. we need to specify:; target_link_options(target-name PRIVATE ${Python3_LINK_OPTIONS}). so that libROOTTPython and libPyMVA are linked with the right; RPATH, when linking against the XCode Python(3) on MacOS(11,12). Otherwise, the following error appears when loading the libraries:; cling::DynamicLibraryManager::loadLibrary():; dlopen(.../mac12/SPEC/soversion/V/master/build/lib/libROOTTPython.6.25.02.so, 0x0009):; Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Fixes #9793 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9802:311,error,error,311,https://root.cern,https://github.com/root-project/root/pull/9802,1,['error'],['error']
Availability,"As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh; $ root; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; ------------------------------------------------------------------; | Welcome to ROOT 6.26/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |; | From tags/v6-26-02@v6-26-02 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556:470,ERROR,ERROR,470,https://root.cern,https://github.com/root-project/root/issues/10556,1,['ERROR'],['ERROR']
Availability,As mentioned in the Python docs:; https://docs.python.org/3.11/whatsnew/3.11.html. Already available upstream in:; https://github.com/wlav/CPyCppyy/commit/a8f41df0618f40ecc9a2a0b5a51fd12ddf2e6673,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12514:91,avail,available,91,https://root.cern,https://github.com/root-project/root/pull/12514,1,['avail'],['available']
Availability,"As noted in #14593, the build fails during a `rootcling` execution when setting `CLING_DEBUG=1` in the environment with; ```; error: invalid integral value '0 -fno-omit-frame-pointer' in '-O0 -fno-omit-frame-pointer'; ```. Upon investigation, it only works in the ROOT prompt because TCling turns on basic `-O1` unless in `rootcling`. This overrides the (misformed) `""-O0 -fno-omit-frame-pointer""`. Split the argument in two entries and move it after inserting the user-provided arguments to properly apply also on the prompt by now taking precedence over `-O1`. Closes #14593",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14667:126,error,error,126,https://root.cern,https://github.com/root-project/root/pull/14667,1,['error'],['error']
Availability,"As per Jira ticket ROOT-8483:. Creating a TTreeReaderValue after having looped over a TTreeReader prompts an error message at runtime. This error mentions calling `TTreeReader::Reset` as a solution, but said method does not exist.; Assuming `TTreeReader::Restart` was meant, the patch is trivial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/304:109,error,error,109,https://root.cern,https://github.com/root-project/root/pull/304,2,['error'],['error']
Availability,"As pointed out by @bellenot , we need to cover the case in which the specified flags are (wrongly) `-Dpyroot=OFF` and `-Dpyroot_legacy=ON`. The proposed solution in this PR shows a fatal error message saying ""please reconfigure with pyroot=ON too"". Alternatively, we could automatically enable `pyroot` if `pyroot_legacy` has been set to ON. To be discussed with the reviewers. This assumes:; 1. `-Dpyroot=ON` means ""build me PyROOT"".; 2. `-Dpyroot_legacy=ON` means ""from the PyROOTs you have, build me the old one!"". So (1) activates PyROOT and (2) selects which PyROOT to build. Please shout if you have a different point of view.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5790:187,error,error,187,https://root.cern,https://github.com/root-project/root/pull/5790,1,['error'],['error']
Availability,"As pointed out by a user in this forum post:; https://root-forum.cern.ch/t/pyroot-6-and-gvirtualx-eeventtype-etc/28702/9; and explained in:; https://sft.its.cern.ch/jira/browse/ROOT-9364; importing gVirtualX from PyROOT leads to an error. This PR fixes the issue, which is due to gVirtualX being added to the list of globals with a wrong type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1887:232,error,error,232,https://root.cern,https://github.com/root-project/root/pull/1887,1,['error'],['error']
Availability,"As reported [on the Forum](https://root-forum.cern.ch/t/build-error-in-the-v6-26-00-patches-branch-fails-to-build-on-ubuntu-18-04/49149):; This is Ubuntu 18.04 LTS / x86_64 / gcc, g++, gfortran 7.5.0 / cmake 3.20.3 here. The building of the current “v6-26-00-patches” branch (as of 2022.03.12) generates an error (“--std=c++14”):; ```; (...); In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQSvc.cpp:14:0:; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: In member function ‘void ZmqLingeringSocketPtrDeleter<PERIOD>::operator()(zmq::socket_t*)’:; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:24: error: ‘class zmq::socket_t’ has no member named ‘set’; did you mean ‘send’?; socket->set(zmq::sockopt::linger, PERIOD);; ^~~; send; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:60:33: error: ‘zmq::sockopt’ has not been declared; socket->set(zmq::sockopt::linger, PERIOD);; ^~~~~~~; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h: At global scope:; /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:79:36: error: ‘unique_ptr’ in namespace ‘std’ does not name a template type; using ZmqLingeringSocketPtr = std::unique_ptr<zmq::socket_t, ZmqLingeringSocketPtrDeleter<PERIOD>>;; ^~~~~~~~~~; (...); /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:103:6: error: no matching function for call to ‘zmq::socket_t::recv(std::reference_wrapper<zmq::message_t>&, int&)’; In file included from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQSvc.h:17:0,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/res/RooFit_ZMQ/ZeroMQPoller.h:17,; from /tmp/ROOT/v6-26-00-patches/roofit/roofitZMQ/src/ZeroMQPoller.cpp:14:; /usr/include/zmq.hpp:625:23: note: candidate: size_t zmq::socket_t::recv(void*, size_t, int); inline size_t recv (void *buf_, size_t len_, int flags_ = 0); ^~~~; /usr/include/zmq.hpp:625:23: note: no known conv",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10107:62,error,error-in-the-,62,https://root.cern,https://github.com/root-project/root/issues/10107,4,['error'],"['error', 'error-in-the-']"
Availability,"As reported at https://github.com/root-project/roottest/pull/946#issuecomment-1519645135 and can be seen in the test; `roottest-root-meta-race-12552-exec_dlopenrace-auto`. The relevant output is below and the problem is a (real) quirk of the test. It linked to the repeated unload and loading of the same library in parallel. During the unloading and loading cycle the TClass object representing the user classes (from that library) are created and deleted and it seems that the pointer value is captured and used outside the main lock (and this is done concurrently we the deletion). This needs to be fixed but is unlikely to happen in the wild. ```; ==1544443==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000617c20 at pc 0x7f8857c557ae bp 0x7f88265b3e60 sp 0x7f88265b3e50; READ of size 4 at 0x616000617c20 thread T1; #0 0x7f8857c557ad in TClass::Size() const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8; #1 0x7f8851923388 in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:1605:25; #2 0x7f8851cc28c1 in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7f8851cc28c1 in int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short)), &(TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int))>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7f8851931ee7 in TStreamerInfoActions::TConfigu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:663,ERROR,ERROR,663,https://root.cern,https://github.com/root-project/root/issues/12715,1,['ERROR'],['ERROR']
Availability,"As reported at: https://github.com/cms-sw/cmssw/issues/36908#issuecomment-1036397481. The problem is the rules are applied to a data member nested inside an object nested inside an STL collection that is a new data member of the class reco::HaloClusterCandidateHCAL, since it is a ""new"" member compared to the layout on file, none of the objects; from the new member down to the object on which the rules need to be run) are actually streamed and the code gathering the information to run the rule got a bit lost ; it is likely (I am checking as we speak) that in previous release the rule was not even attempted to be run ... which might actually be the desired behavior in this specific case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9899:367,down,down,367,https://root.cern,https://github.com/root-project/root/issues/9899,1,['down'],['down']
Availability,"As reported by CMSSW tests (for example: https://github.com/cms-sw/cmsdist/pull/6314#issuecomment-713547097) where the data appear odd/corrupted, there is an issue in TStreamerInfo::GenerateInfoForPair (which is almost always used for std::pair in the tip of v6.22 and master). The problem is when calculating the offset of the second data member, TStreamerInfo::GenerateInfoForPair uses (unwittingly, of course :) ), the value zero for the size of the enums. In addition (see https://github.com/root-project/root/issues/6725), the TEnum size information is no yet available in rootpcm files. (i.e. a fix to this bug will work only for default size enums until #6725 is fixed).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6726:565,avail,available,565,https://root.cern,https://github.com/root-project/root/issues/6726,1,['avail'],['available']
Availability,"As reported in ROOT-9463, the result of GetColumnNames is redundant. A simple reproducer:; ```; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int a;; t.Branch(""a"", &a);; a = 42;; t.Fill();; t.Write();; f.Close();; ROOT::RDataFrame df(""t"", ""f.root"");. for (auto x : df.GetColumnNames()); std::cout <<x <<std::endl;; ```. This redundancy is now not exposed to the user. **It would be nice** to have more tests on real use cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2443:58,redundant,redundant,58,https://root.cern,https://github.com/root-project/root/pull/2443,1,['redundant'],['redundant']
Availability,"As reported in https://root-forum.cern.ch/t/pure-virtual-method-called-on-hadding-tfiles-with-tfriendelements/46836/6; (see there for reproducer), hadd at tear down accesses already deleted objects. In version of ROOT equal or newer than v6.22/08 and v6.24/00, the problem appears only in a slow merge. (for example `hadd -f0 output.root testroot_1,root testroot_2.root`) . The resulting stack trace is:. ```; ==1241== Process terminating with default action of signal 6 (SIGABRT); ==1241== at 0x5BB618B: raise (raise.c:51); ==1241== by 0x5B9592D: abort (abort.c:100); ==1241== by 0x58C2910: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE38B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE3F6: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CF154: __cxa_pure_virtual (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x551449A: TCollection::RecursiveRemove(TObject*) (TCollection.cxx:579); ==1241== by 0x4A345D0: TTree::RecursiveRemove(TObject*) (TTree.cxx:7857); ==1241== by 0x551F16F: TList::RecursiveRemove(TObject*) (TList.cxx:813); ==1241== by 0x5518879: THashList::RecursiveRemove(TObject*) (THashList.cxx:354); ==1241== by 0x543C003: TROOT::RecursiveRemove(TObject*) (TROOT.cxx:2455); ==1241== by 0x496B26E: ROOT::CallRecursiveRemoveIfNeeded(TObject&) (TROOT.h:398); ==1241== by 0x5512E61: TCollection::~TCollection() (TCollection.cxx:189); ==1241== by 0x5506D19: TSeqCollection::~TSeqCollection() (TSeqCollection.h:37); ==1241== by 0x551BE8E: TList::~TList() (TList.cxx:92); ==1241== by 0x551BEAD: TList::~TList() (TList.cxx:95); ==1241== by 0x4A1DE02: TTree::~TTree() (TTree.cxx:975); ==1241== by 0x4A1E2C7: TTree::~TTree() (TTree.cxx:1023); ==1241== by 0x4A308E9: TTree::Merge(TCollection*, TFileMergeInfo*) (TTree.cxx:6908); ==1241== by 0x4960BA2: ROOT::merge_TTree(void*, TCollection*, TFileMergeInfo*) (G__Tree.cxx:4209); ==1241== by 0x4E739D6: TFileMerger::MergeOne(TDirectory*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9017:160,down,down,160,https://root.cern,https://github.com/root-project/root/issues/9017,1,['down'],['down']
Availability,"As reported in https://root-forum.cern.ch/t/very-large-errors-when-using-roofit-asymptoticerror/52003 some large errors are obtained when using `RooFit::AsymptoticError`. Other problems have been reported when using extended fits, see [ROOT-10827](https://sft.its.cern.ch/jira/browse/ROOT-10827) Missing contribution of extended term in the error Correction for extended weighted likelihood fits. Or when computing the derivatives needed for the asymptotic correction, see [ROOT-10866](https://sft.its.cern.ch/jira/browse/ROOT-10866) Numerical instabilities when calculating the derivatives for the asymptotically correct errors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11660:55,error,errors-when-using-roofit-asymptoticerror,55,https://root.cern,https://github.com/root-project/root/issues/11660,4,['error'],"['error', 'errors', 'errors-when-using-roofit-asymptoticerror']"
Availability,"As seen (and worked around) in https://github.com/root-project/root/pull/12503 reading a file containing a class containing a `std::unique_ptr<std::vector<double>>` leads to an error like:; ```; TStreamerInfo::BuildOld: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; ```; This is technically due to the fact that `TStreamerInfo::Build` calculates (incorrectly) the data member type to be `kAnyp` while `BuildOld` calculates (correctly) it to be `kSTLp`. Reproducer:. ```; // MyClass.h. #ifndef MyClass_h; #define MyClass_h. #include <memory>; #include <vector>. class MyClass; {; public:; std::unique_ptr<std::vector<int>> _vec;; ClassDef(MyClass, 1);; };. #endif; ```; ```; // readMyClass.C. void readMyClass(); {; TFile f(""f.root"", ""read"");; auto obj = f.Get<MyClass>(""obj"");. for(int x : *obj->_vec) {; std::cout << x << std::endl;; }; }; ```; ```; // writeMyClass.C. void writeMyClass(); {; MyClass obj;; obj._vec = std::make_unique<std::vector<int>>();; obj._vec->push_back(1);; obj._vec->push_back(2);; obj._vec->push_back(3);. TFile f(""f.root"", ""recreate"");; f.WriteObject(&obj, ""obj"");; }; ```; ```; root.exe -l -q -e '.L MyClass.h+' -e '.x writeMyClass.C'; root.exe -l -q -e '.L MyClass.h+' -e '.x readMyClass.C'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12684:177,error,error,177,https://root.cern,https://github.com/root-project/root/issues/12684,1,['error'],['error']
Availability,"As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:; ```; {; auto cls = TClass::GetClass(""std::vector<int>"");; auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);; auto args = meth->GetListOfMethodArgs();; auto methArg = dynamic_cast<TMethodArg*>(args->First());; cout << args->GetEntries() << endl;; cout << methArg->GetTypeName() << endl;; }; ```; print; ```; 1; vector<TClass*>::size_type; ```; where one would expect; ```; 1; vector<int>::size_type; ```; This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7955:990,error,error,990,https://root.cern,https://github.com/root-project/root/issues/7955,1,['error'],['error']
Availability,"As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14048:55,error,error,55,https://root.cern,https://github.com/root-project/root/pull/14048,2,['error'],['error']
Availability,"As seen in https://github.com/cms-sw/cmssw/issues/33361, in some normal usage circumstances, TTreeCache::FillBuffer will issue an Error message (turned into an exception by CMSSW):; ```; fCurrentClusterStart=11348 fEntryCurrent=11392 fNextClusterStart=11394; but fEntryCurrent should not be in between the two ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8048:130,Error,Error,130,https://root.cern,https://github.com/root-project/root/issues/8048,1,['Error'],['Error']
Availability,"As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/3440/LABEL=ROOT-centos9,SPEC=noimt,V=master/testReport/junit/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1 : ; ```; hadd Target file: hsimple401.root; hadd compression setting for all output: 401; hadd Source file 1: hsimple.root; hadd Target path: hsimple401.root:/; -- TEST COMMAND -- ; cd /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/roottest/root/io/filemerger; /usr/bin/timeout -s USR2 270s /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/bin/root.exe -q -l -b /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7); -- BEGIN TEST OUTPUT --. Processing /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/roottest/root/io/filemerger/testSimpleFile.C(""hsimple401.root"",25000,401,418980,7)...; Checking hsimple401.root; (int) 1000. -- END TEST OUTPUT --; -- BEGIN TEST ERROR --; Error in <testSimpleFile>: Disk size of hsimple401.root should have been 418980 but is 418988 (tolerance 7 bytes). -- END TEST ERROR --; CMake Error at /home/sftnight/build/night/LABEL/ROOT-centos9/SPEC/noimt/V/master/build/RootTestDriver.cmake:186 (message):; got exit code 255 but expected 0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12438:1057,ERROR,ERROR,1057,https://root.cern,https://github.com/root-project/root/issues/12438,5,"['ERROR', 'Error', 'toler']","['ERROR', 'Error', 'tolerance']"
Availability,"As seen in https://root-forum.cern.ch/t/draw-short-integers-as-numbers-not-characters/52530/10,; in that case we get:; ```; Error in <TTreeReaderArrayBase::CreateContentProxy()>: The branch Jet_idx contains data of type char. It cannot be accessed by a TTreeReaderArray<signed char>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11837:124,Error,Error,124,https://root.cern,https://github.com/root-project/root/issues/11837,1,['Error'],['Error']
Availability,As seen in https://root-forum.cern.ch/t/ttreereaderarray-with-enum-type/54283:; ```; TTreeReaderArray<someEnum> test_someEnum ...; ```; leads to error like; ```; Error in <TTreeReaderArrayBase::CreateProxy()>: The template argument type T of T accessing branch test_struct.e1 (which contains data of type Int_t) is not known to ROOT. You will need to create a dictionary for it.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12661:145,error,error,145,https://root.cern,https://github.com/root-project/root/issues/12661,2,"['Error', 'error']","['Error', 'error']"
Availability,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11686:62,error,error-rint-pcm-is-out-of-date-cannot-read-module-signature,62,https://root.cern,https://github.com/root-project/root/issues/11686,6,"['Error', 'error']","['Error', 'error', 'error-rint-pcm-is-out-of-date-cannot-read-module-signature']"
Availability,As shown in the code attached in https://root-forum.cern.ch/t/error-on-fitresult-scan/51014; one cannot use FitResult::Scan when the Fitter class has been deleted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11154:62,error,error-on-fitresult-scan,62,https://root.cern,https://github.com/root-project/root/issues/11154,1,['error'],['error-on-fitresult-scan']
Availability,As suggested in:. https://sft.its.cern.ch/jira/browse/ROOT-9915. we implemented a way to raise an error when a file is opened (for reading) using TFile constructor or TFile::Open().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4493:98,error,error,98,https://root.cern,https://github.com/root-project/root/pull/4493,1,['error'],['error']
Availability,"As the title reads: TChain Add does not properly resolve globs with `?#`. Consider:; ```cpp; auto dfWriter0 = ROOT::RDataFrame(5).Define(""z"", ""42"");; dfWriter0.Snapshot<int>(""tree"", ""specTestFile0.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile00.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile000.root"", {""z""});. TChain c{};; c.Add(""specTestFile0*.root?#tree"");; for(auto i = 0u; i < c.GetEntries(); ++i); 	c.GetEntry(i);. gSystem->Unlink((""specTestFile0.root""));; gSystem->Unlink((""specTestFile00.root""));; gSystem->Unlink((""specTestFile000.root""));; ```; Current behaviour --> invalid parsing:; ```; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile0.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile00.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile000.root#tree; ```; ; @vepadulano and I just saw [here](https://root.cern/doc/master/classTChain.html#a78a896924ac6c7d3691b7e013bcbfb1c) that the question mark is a valid wildcard in the glob expansion of `Add`. Note that in this particular minimal reproducer, I can alternatively use:; ```cpp; TChain c{""tree""};; c.Add(""specTestFile0*.root"");; ```; I used precisely this example in order to show that even a single `Add` results in undesired behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11483:631,Error,Error,631,https://root.cern,https://github.com/root-project/root/issues/11483,3,['Error'],['Error']
Availability,"As there is one RLoopManager per computation graph, when aliases; were managed by RLoopManager they were computation-graph-wide.; It is desirable to make Alias definitions behave coherently with; Defines instead, i.e. have Aliases be only accessible in the branch; of the computation graph in which they were defined, and only in; nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph; branch, not globally"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9519:346,down,downstream,346,https://root.cern,https://github.com/root-project/root/pull/9519,1,['down'],['downstream']
Availability,"As there is one RLoopManager per computation graph, when aliases; were managed by RLoopManager they were computation-graph-wide.; It is desirable to make Alias definitions behave coherently with; Defines instead, i.e. have Aliases be only accessible in the branch; of the computation graph in which they were defined, and only in; nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph; branch, not globally"". In particular, in this commit:; - move alias management from RLoopManager to RBookedColumns; - remove alias-managing logic from RLoopManager; - refactor several functions so they only take RBookedColumns as input; rather than a list of defined names plus a map of aliases; (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,; GetValidatedColumnNames, BookFilterJit, FindUsedColumns,; ParseRDFExpression); - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function; - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that; relied on this global definition of Aliases. We expect this to be an; exceedingly rare usecase, and if such code exists it will produce a; clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9496:346,down,downstream,346,https://root.cern,https://github.com/root-project/root/pull/9496,2,"['down', 'error']","['downstream', 'error']"
Availability,Assertion failure in TMVA `can't dereference value-initialized vector iterator`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13498:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/issues/13498,1,['failure'],['failure']
Availability,Assertion failure in TMVA with `vector iterators incompatible` error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13497:10,failure,failure,10,https://root.cern,https://github.com/root-project/root/issues/13497,2,"['error', 'failure']","['error', 'failure']"
Availability,"Assuming that `page_size` is a power of 2, the calculation of the base address of the page can be simplified and avoid a division. According to POSIX, either `MS_SYNC` or `MS_ASYNC` must be specified when calling `msync()`. Failure to include one of these flags will cause `msync()` to fail on some systems. When `msync()` returns -1, the pointer is only considered invalid when errno is set to `ENOMEM`. In principle, the other possible values for errno won't happen, but if they do, that should be considered an error, hence the assert condition needed an update. `EBUSY` shouldn't happen since we do not add `MS_INVALIDATE` to flags, and `EINVAL` shouldn't happen because we always pass a multiple of the page size to msync(). `EFAULT` is only used in Linux 2.4.18 and earlier instead of `ENOMEM`. See #4136 for more information.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4159:224,Failure,Failure,224,https://root.cern,https://github.com/root-project/root/pull/4159,2,"['Failure', 'error']","['Failure', 'error']"
Availability,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10970:268,avail,available,268,https://root.cern,https://github.com/root-project/root/issues/10970,2,['avail'],['available']
Availability,"At some point in `RooGenProdProj::createIntegral()`, an intermediate integral object that should only live during the scope of the function is accidentally put in the `saveSet` output parameter. This needs to be fixed. Thanks to the following forum post for noticing this: https://root-forum.cern.ch/t/error-inputarguments-rooargset-error-argument-with-name-is-already-in-this-set-in-roomcstudy/57571",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14253:302,error,error-inputarguments-rooargset-error-argument-with-name-is-already-in-this-set-in-roomcstudy,302,https://root.cern,https://github.com/root-project/root/pull/14253,1,['error'],['error-inputarguments-rooargset-error-argument-with-name-is-already-in-this-set-in-roomcstudy']
Availability,"At the very end of the build, there is a problem with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12820:173,error,error,173,https://root.cern,https://github.com/root-project/root/issues/12820,4,"['Error', 'error']","['Error', 'error']"
Availability,"Attribute lookup of the `RDF` property of the `ROOTFacade` class can; potentially lead to issues with the facade not being initialised yet at; that moment. This can happen since creation of the distributed RDataFrame; module is also part of the logic of the `RDF` property. An example of such issues can be reproduced by adding the line; `from DistRDF import CppWorkflow` to the `__init__.py` file. Without; this commit, it would trigger this error:. ```python; >>> import DistRDF; Traceback (most recent call last):; File "".../lib/ROOT/_facade.py"", line 326, in RDF; ns.Experimental.Distributed = _create_rdf_experimental_distributed_module(ns.Experimental); File "".../lib/ROOT/_facade.py"", line 65, in _create_rdf_experimental_distributed_module; return DistRDF.create_distributed_module(parent); AttributeError: partially initialized module 'DistRDF' has no attribute 'create_distributed_module' (most likely due to a circular import). During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File "".../lib/DistRDF/__init__.py"", line 20, in <module>; from DistRDF import CppWorkflow; File "".../lib/DistRDF/CppWorkflow.py"", line 16, in <module>; RunGraphs = ROOT.RDF.RunGraphs; File "".../lib/ROOT/_facade.py"", line 328, in RDF; raise Exception('Failed to pythonize the namespace RDF'); Exception: Failed to pythonize the namespace RDF; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10069:443,error,error,443,https://root.cern,https://github.com/root-project/root/pull/10069,1,['error'],['error']
Availability,Avoid Snapshot errors when updating directories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4964:15,error,errors,15,https://root.cern,https://github.com/root-project/root/pull/4964,1,['error'],['errors']
Availability,Avoid failure of v7/line.cxx tutorial in such case. Disable headless in CEF and QWebEngine plugins.; Both do not provide any functionality without X-server running,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4880:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/pull/4880,1,['failure'],['failure']
Availability,Avoid generating gif output files in tutorials. Gif might not be available on some machine snd if a tutorial generates a gif it will produce an error when generating the doxygen documentation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9588:65,avail,available,65,https://root.cern,https://github.com/root-project/root/pull/9588,2,"['avail', 'error']","['available', 'error']"
Availability,Avoid redundant read (both unzipping and unstreaming in case basket are not perfectly aligned and same size),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4568:6,redundant,redundant,6,https://root.cern,https://github.com/root-project/root/pull/4568,1,['redundant'],['redundant']
Availability,Avoid spurrious errors message about iteration not set in ClassInfo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1300:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/1300,1,['error'],['errors']
Availability,Avoid template instantiation during tear down.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5462:41,down,down,41,https://root.cern,https://github.com/root-project/root/pull/5462,1,['down'],['down']
Availability,"Avoid using forward-declared class as default template arguments in; `RooMinimizer` and `MinuitFcnGrad`. This is the fix for the following test failures in the nightlies:. ```; projectroot.roottest.python.cling.roottest_python_cling_class; projectroot.roottest.python.cling.roottest_python_cling_api; projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy; projectroot.roottest.python.cling.roottest_python_cling_cling; projectroot.roottest.root.meta.enumPayloadManipulation.roottest_root_meta_enumPayloadManipulation_checkEnumFwdDecl; ```. For sure we know that these failures got introduced by; root-project#8700. The failures that we see since [root-project#8700](root-project#8700), here are the comments where the bot reported them first:; First Ubuntu 16 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). First Windows 10 fail:; [root-project#8700 (comment)](root-project#8700 (comment)). I narrowed down the origin of this regression to a small part of the; diff of the full PR. The bad guy is some change in one of these files:. * roofit/roofitcore/inc/RooMinimizer.h; * roofit/roofitcore/test/CMakeLists.txt; * roofit/roofitcore/test/TestStatistics/testLikelihoodSerial.cxx. What was fishy in `RooMinimizer.h` was the usage of a forward-declared; class as default template argument. The default template arguments are; commented out now, because these will only become relevant in later; developments by @egpbos.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8997:144,failure,failures,144,https://root.cern,https://github.com/root-project/root/pull/8997,4,"['down', 'failure']","['down', 'failures']"
Availability,"Axel has observed a flaky test on fedora30, which collects too late objects being already out of scope and the fails the test of the refcounts. I've put invokations of the GC now always before we test refcounts to prevent such failures.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6127:227,failure,failures,227,https://root.cern,https://github.com/root-project/root/pull/6127,1,['failure'],['failures']
Availability,Back-port [Fix build errors with clang-tblgen in Debug mode using MSVC 2019 v16.6](https://github.com/llvm/llvm-project/commit/28a6713e107); After updating MSVS19 from v16.4 to v16.6 I faced with a build errors compiling in Debug mode.; It complains on clang-tblgen.exe and llvm-tblgen.exe cmd line args.; VS compiler had a bug. It dynamically creates an object with constexpr ctor in Debug mode. This bug was fixed in VS2019 v16.5.; A workaround was implemented for that and everything works until v16.5 comes.; The workaround became irrelevant since v16.5 and caused build errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6125:21,error,errors,21,https://root.cern,https://github.com/root-project/root/pull/6125,3,['error'],['errors']
Availability,Back-port a fix for build errors with clang-tblgen in Debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6125:26,error,errors,26,https://root.cern,https://github.com/root-project/root/pull/6125,1,['error'],['errors']
Availability,Backport in 6.20 the fix the support in TMVA for GPU (Cuda) when cuDNN is not available (ROOT-10597),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5103:78,avail,available,78,https://root.cern,https://github.com/root-project/root/pull/5103,1,['avail'],['available']
Availability,Backport of RVec mask fix (v6.26),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12596:17,mask,mask,17,https://root.cern,https://github.com/root-project/root/pull/12596,1,['mask'],['mask']
Availability,"Backport of https://github.com/root-project/root/pull/8364. The downsteam code, -- like RooAddPdf::getValV for example -- assume; that a nullptr is passed when no normalization is requested. The case of; an empty norm set is not handled correctly in RooAddPdf::getValV,; leading to wrong results. However, some calling code passes an empty norm set to; RooAbsReal::getVal instead of a `nullptr` in an attempt to disable; normalization. This commit suggests to solve this ambiguity at the highest possible; level: right at the beginning of RooAbsReal::getVal. If the; normalization set is empty, the pointer pointing to it will be set to; `nullptr`. This fixes issue #8307. To give some context: the code in RooAddPdf that doesn't handle the ambiguity correctly was introduced in f6d1543, which was also backported to 6.24. Hence, a backport to 6.24 is necessary also for this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8372:64,down,downsteam,64,https://root.cern,https://github.com/root-project/root/pull/8372,1,['down'],['downsteam']
Availability,Backport of the following PR to fix 6.28 nightly failures:. * https://github.com/root-project/root/pull/13533,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13778:49,failure,failures,49,https://root.cern,https://github.com/root-project/root/pull/13778,1,['failure'],['failures']
Availability,Backport: correct for Logx when drawing histogram errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5358:50,error,errors,50,https://root.cern,https://github.com/root-project/root/pull/5358,1,['error'],['errors']
Availability,"Backporting some PRs to avoid test failures in the nightlies:; * https://github.com/root-project/root/pull/12693; * https://github.com/root-project/root/pull/13712; * https://github.com/root-project/root/pull/13718; * https://github.com/root-project/root/pull/13765; * https://github.com/root-project/root/pull/13524; * https://github.com/root-project/root/pull/13525; * https://github.com/root-project/root/pull/13613. After these trivial backports, the only PR that needs to be backported to fix the remaining failures is this one:; * https://github.com/root-project/root/pull/13533. However, this would not be a simple conflict-less backport because the changes interact with new feature development for ROOT 6.30. It's maybe better if @lmoneta takes care of this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13777:35,failure,failures,35,https://root.cern,https://github.com/root-project/root/pull/13777,2,['failure'],['failures']
Availability,"Backports of recent fixes and improvements for the release. In particular, fixes unused variable warnings and makes the build system more robust.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15531:138,robust,robust,138,https://root.cern,https://github.com/root-project/root/pull/15531,1,['robust'],['robust']
Availability,Bad error handling with pyroot template instantiations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854:4,error,error,4,https://root.cern,https://github.com/root-project/root/issues/11854,1,['error'],['error']
Availability,"BarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:7203,Error,Error,7203,https://root.cern,https://github.com/root-project/root/issues/11430,2,['Error'],['Error']
Availability,"Base classes for attributes defined in gpad, but also some classes like; RPad uses line or fill attributes. Later attributes can be extracted; into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3702:201,error,error,201,https://root.cern,https://github.com/root-project/root/pull/3702,1,['error'],['error']
Availability,"Based on the following patch by @wlav :; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/signaltrycatch.diff. Adds a new exception handler used by cppyy to provide a better debugging experience in presence of errors:; https://cppyy.readthedocs.io/en/latest/debugging.html. It also adds SIGABRT and provides support for signal handling on Windows. The original cppyy patch has been modified to make it backwards compatible, since it eliminated the use of gApplication for exception handling in Unix. In this version, if there is an exception handler (e.g. we are using PyROOT, which defines it via cppyy) we will rely on that handler to treat the exception,; otherwise we fall back to the previous behaviour which relied on gApplication. Windows-related changes to be reviewed by @bellenot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4671:227,error,errors,227,https://root.cern,https://github.com/root-project/root/pull/4671,1,['error'],['errors']
Availability,"Basic refactoring of test/stressMathCore.cxx to be smaller, more manageable files, and to use Google Test. The functionality is the same, but is now using Google Test for assertions instead of doing logical operations on an integer as the test result. Ping @lmoneta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/594:252,Ping,Ping,252,https://root.cern,https://github.com/root-project/root/pull/594,1,['Ping'],['Ping']
Availability,"Basically, the problem was twofold:; 1. Using the number of entries for scaling the basket size can be really incorrect -- rather, we want the cluster size. This is only available it OptimizeBaskets is called via AutoFlush.; 2. We only need to set aside extra metadata if there is an entry offset buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1998:170,avail,available,170,https://root.cern,https://github.com/root-project/root/pull/1998,1,['avail'],['available']
Availability,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7839:453,ping,ping,453,https://root.cern,https://github.com/root-project/root/pull/7839,1,['ping'],['ping']
Availability,Be explicit about reason for error in distributed execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14633:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/14633,1,['error'],['error']
Availability,"Because RDataFrame is not available on 32bit, we have to disable the; experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3957:26,avail,available,26,https://root.cern,https://github.com/root-project/root/pull/3957,1,['avail'],['available']
Availability,"Because of limited flaoting point precision, an error message was issued; on 32 bit architectures. The concerned check for equality check is now; a bit more forgiving.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4212:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/4212,1,['error'],['error']
Availability,"Because of limited floating point precision, an error message was issued; on 32 bit architectures. The concerned check for equality is now; a bit more forgiving. (cherry picked from commit b8235e91725d94dc6231e8006e2de53dc1b2671e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4218:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/4218,1,['error'],['error']
Availability,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5946:17,error,errors,17,https://root.cern,https://github.com/root-project/root/pull/5946,2,['error'],['errors']
Availability,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```. @hageboeck i'm not sure whether this interferes with #5938",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5943:17,error,errors,17,https://root.cern,https://github.com/root-project/root/pull/5943,1,['error'],['errors']
Availability,Because the XOR mode was not properly implemented on Cocoa the fit panel range di not work.; This problem was mentioned here: https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. An issue was opened there: https://github.com/root-project/root/issues/7340. The fix was provided by Timur,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7492:168,error,errors-when-trying-to-fit-a-histogram,168,https://root.cern,https://github.com/root-project/root/pull/7492,1,['error'],['errors-when-trying-to-fit-a-histogram']
Availability,"Because the new dataframe tutorial use xrootd to read the files remotely, we have to veto them if xrootd is not found.; This should fix the failures on cdash from last night.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2828:140,failure,failures,140,https://root.cern,https://github.com/root-project/root/pull/2828,1,['failure'],['failures']
Availability,"Befor we switched JSROOT to the local instances of the JS libraries, we could use jupyter with all features right after sourcing `thisroot.*`. Due to the switch, the path to the JS libraries was broken, which is now fixed by this PR. This makes `root --notebook` redundant in this case. Still to be added is the correct behaviour when ROOT is installed. I'll line out here how it should be done:. 1. We should abandon the `.rootnb` folder in `HOME` and use the default `.jupyter` folder.; 2. There, we have to add our config to the `jupyter_notebook_config.py` file, which is basically nothing else than `c.NotebookApp.extra_static_paths.append('/path/to/root/js')`.; 3. I think we should just get rid of the custom css things, which would be made default if installed into `.jupyter`.; 4. Install the ROOT kernel in `/usr/share/jupyter/kernels/root`, such as all other kernels. I would go first with this PR, which only improves the current behaviour. Next I'll have a look into a proper installation of our jupyter related files, but I'll make another PR for that. **Edit:** I've fixed the installation to a prefix. This just fixes the current issues but keeps the old installation/sourcing behaviour of jupyroot. We can refactor in another RP later!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6155:263,redundant,redundant,263,https://root.cern,https://github.com/root-project/root/pull/6155,1,['redundant'],['redundant']
Availability,"Before this commit, in single-thread event loops RDF was throwing; in case TTreeReader had an error flag at the end of the loop.; Now multi-thread loops perform the same check at the end of each task.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8748:94,error,error,94,https://root.cern,https://github.com/root-project/root/pull/8748,1,['error'],['error']
Availability,"Before this commit, whenever a function was constructing a node; of the computation graph it had to ""remember"" to also register; that node with the RLoopManager, which needs to know which nodes; are around so it can tell them e.g. to execute task initialization; and task finalization logic.; Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and; deregistration in the destructor of a node, i.e. this logic is; where a reader might expect it to be and new code does not have; to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,; RJittedDefine) don't need to register themselves with the; RLoopManager: the _concrete_ nodes will be registered right; before the event loop, at jitting time, and that is good enough.; RJittedFilter is an exception: RLoopManager needs to know what; filters have been booked even before the event loop (i.e. before; concrete filters are instantiated by jitted code) in order to; return a correct list from RLoopManager::GetFiltersNames().; So RJittedFilters register themselves with RLoopManager at; construction time and deregister themselves in; RJittedFilter::SetFilter, i.e. when they can be sure that the; concrete filter has been instantiated in jitted code and it has; been registered with RLoopManager, making the RJittedFilter; registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10653:1401,redundant,redundant,1401,https://root.cern,https://github.com/root-project/root/pull/10653,1,['redundant'],['redundant']
Availability,"Before this patch RDF would first, eagerly, declare a dummy lambda; that contained the user-defined expression to check verify the cling; could understand it; then, lazily, the actual lambda variable used; by the nodes of the computation graph was jitted, together with all; other declarations required by RDF, just before the event loop. With this patch, the first declaration serves both purposes: it checks; that the expression is just-in-time compilable _and_ jits precisely the; definition that will be required during the event loop. This removes; redundant logic and results in strictly less work required of the; interpreter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5487:554,redundant,redundant,554,https://root.cern,https://github.com/root-project/root/pull/5487,1,['redundant'],['redundant']
Availability,Before this patch we skipped running CleanUpTask if the status; of the TTreeReader after a single-thread event loop over ROOT data; encountered an error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8337:147,error,error,147,https://root.cern,https://github.com/root-project/root/pull/8337,2,['error'],['error']
Availability,"Before this patch, RCustomColumnBase's destructor could access; RLoopManager after deletion in some cases, e.g. when jitting code after; the computation graph was already out of scope or when the RLoopManager; was kept alive only by another node's shared_ptr to it. I think we never; saw a crash due to this bug because the use is _right after_ deletion,; and there is never an allocation between deletion and use. Valgrind; still sees it though. Thanks to the previous commit, all the logic that entangled RLoopManager; and RCustomColumns can actually be removed, and in particular; RCustomColumnBase's destructor does not need to access RLoopManager; anymore, fixing the use after delete. A minimal reproducer for the use after delete:. ```cpp; auto f = ROOT::RDataFrame(1).Filter([] { return true; });; ```. Before RFilter is destructed, it deletes its fPrevNode (shared_ptr to; the previous node), which triggers destruction of RLoopManager. Later,; RFilterBase is destructed, which triggers destruction of its registered; custom columns (in this case, the default ""rdfentry_"" or ""rdfslot_""; columns) and ~RCustomColumnBase tries to access RLoopManager.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5544:219,alive,alive,219,https://root.cern,https://github.com/root-project/root/pull/5544,1,['alive'],['alive']
Availability,"Before this patch, each node in the computation graph was; re-creating or re-requesting column readers for datasource and TTree/TChain; columns separately. We now create column readers for datasource and TTree/TChain columns early and; store them in RLoopManager which then gives out pointers to the; same RColumnReaderBase objects to all nodes. This is the first part of a series of changes aimed at; centralizing ownership and creation of all kinds of column; readers (defines and variations will come in a subsequent PR).; Sharing column readers among nodes of the computation; graph saves some redundant work and it is a pre-requisite for bulk; processing at the level of RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10793:598,redundant,redundant,598,https://root.cern,https://github.com/root-project/root/pull/10793,1,['redundant'],['redundant']
Availability,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8529:480,avail,available,480,https://root.cern,https://github.com/root-project/root/pull/8529,2,['avail'],['available']
Availability,"Before this patch, given a TTree with a branch with name _different_; from its leaf, e.g. like this:. ```; *Br 0 :NUD_total_ADC : nud_total_adc/D; ```. RDataFrame only added ""branchname.leafname"" to the list of available; columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts; just ""NUD_total_ADC"" as it assumes that the desired leaf is the; first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid; column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7918:211,avail,available,211,https://root.cern,https://github.com/root-project/root/pull/7918,1,['avail'],['available']
Availability,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5488:946,alive,alive,946,https://root.cern,https://github.com/root-project/root/pull/5488,1,['alive'],['alive']
Availability,"Before this patch, in order to assert that the column type; returned by a Vary expression matched the type of the column we; always asked cling to provide a type id for the existing column; via TypeName2TypeID(GetColumnType(colName)). That failed if the; column had a type not known to the interpreter, e.g. because it; was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the; RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10602:467,avail,available,467,https://root.cern,https://github.com/root-project/root/pull/10602,1,['avail'],['available']
Availability,"Before, ""make version"" needed to have ROOT built to run root.exe, to then rebuild ROOT. Cut down on rebuilds during releases by relying on a python script instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5095:92,down,down,92,https://root.cern,https://github.com/root-project/root/pull/5095,1,['down'],['down']
Availability,"Before, MetaParser might have pointed to a StringRef whose storage; was gone, see asan failure in roottest/cling/other/runfileClose.C below. This was caused by recursive uses of MetaParser; see stack trace below:; the inner recursion returned, but as the same MetaParser object was used; by both frames, the objects cursor now pointed to freed memory. Instead, create a MetaParser (and MetaLexer) object per input. That way,; their lifetime corresponds to the lifetime of their input.; ```; =================================================================; ==529104==ERROR: AddressSanitizer: stack-use-after-return on address 0x7ffff3afd82a at pc 0x7fffea18df6d bp 0x7fffffff8170 sp 0x7fffffff8168; READ of size 1 at 0x7ffff3afd82a thread T0; [Detaching after fork from child process 529183]; #0 0x7fffea18df6c in cling::MetaLexer::Lex(cling::Token&) src/interpreter/cling/lib/MetaProcessor/MetaLexer.cpp:58:11; #1 0x7fffea190d7c in cling::MetaParser::lookAhead(unsigned int) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:89:15; #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5; #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9; #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12; #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33; #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24; #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8041:87,failure,failure,87,https://root.cern,https://github.com/root-project/root/pull/8041,2,"['ERROR', 'failure']","['ERROR', 'failure']"
Availability,"Before, cling used the first specialization, which is often incorrect. Instead pass the ""current"" specialization as context down to the relevant functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124:124,down,down,124,https://root.cern,https://github.com/root-project/root/pull/8124,1,['down'],['down']
Availability,"Before, if one wanted to slice over mulitple categories in; `RooAbsReal::plotOn`, one had to repeatedly use the Slice command; argument. This is problematic for the keyword pythonizations in pyROOT,; because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command; arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as; we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8406:478,error,error,478,https://root.cern,https://github.com/root-project/root/pull/8406,1,['error'],['error']
Availability,"Before:; ```; Segmentation fault; ```. After:; ```; rootcling_stage1 0x000000010ea2ba98 llvm::sys::PrintStackTrace(llvm::raw_ostream&) + 40; 1 rootcling_stage1 0x000000010ea2ad46 llvm::sys::RunSignalHandlers() + 86; 2 rootcling_stage1 0x000000010ea2bffe SignalHandler(int) + 270; 3 libsystem_platform.dylib 0x00007fff65610b3d _sigtramp + 29; 4 rootcling_stage1 0x000000010c7b68dd clang::operator==(clang::QualType const&, clang::QualType const&) + 29; 5 rootcling_stage1 0x000000010d531b20 clang::Preprocessor::getModuleHeaderToIncludeForDiagnostics(clang::SourceLocation, clang::Module*, clang::SourceLocation) + 48; 6 rootcling_stage1 0x000000010d95bfc7 clang::Sema::diagnoseMissingImport(clang::SourceLocation, clang::NamedDecl*, clang::SourceLocation, llvm::ArrayRef<clang::Module*>, clang::Sema::MissingImportKind, bool) + 535; 7 rootcling_stage1 0x000000010d95b6eb clang::Sema::diagnoseMissingImport(clang::SourceLocation, clang::NamedDecl*, clang::Sema::MissingImportKind, bool) + 395; 8 rootcling_stage1 0x000000010d95b199 clang::Sema::diagnoseTypo(clang::TypoCorrection const&, clang::PartialDiagnostic const&, clang::PartialDiagnostic const&, bool) + 441; 9 rootcling_stage1 0x000000010d95af83 clang::Sema::diagnoseTypo(clang::TypoCorrection const&, clang::PartialDiagnostic const&, bool) + 51; 10 rootcling_stage1 0x000000010d6f0a39 clang::Sema::DiagnoseUnknownTypeName(clang::IdentifierInfo*&, clang::SourceLocation, clang::Scope*, clang::CXXScopeSpec*, clang::OpaquePtr<clang::QualType>&, bool) + 985; 11 rootcling_stage1 0x000000010d57ef20 clang::Parser::ParseImplicitInt(clang::DeclSpec&, clang::CXXScopeSpec*, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::ParsedAttributesWithRange&) + 2288; 12 rootcling_stage1 0x000000010d579427 clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3586:27,fault,fault,27,https://root.cern,https://github.com/root-project/root/pull/3586,1,['fault'],['fault']
Availability,"Benchmarks.cxx:1:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx: In instantiation of ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::UpdateCArraysPtrs(unsigned int, ColTypes& ..., std::index_sequence<S ...>) [with long unsigned int ...S = {}; ColTypes = {}; std::index_sequence<S ...> = std::integer_sequence<long unsigned int>]’:; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1747:27: required from ‘void ROOT::Internal::RDF::SnapshotHelperMT<ColTypes>::Exec(unsigned int, ColTypes& ...) [with ColTypes = {}]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:104:19: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::CallExec(unsigned int, Long64_t, ROOT::TypeTraits::TypeList<ColTypes ...>, std::index_sequence<_Ind ...>) [with ColTypes = {}; long unsigned int ...S = {}; Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int; std::index_sequence<_Ind ...> = std::integer_sequence<long unsigned int>]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:112:18: required from ‘void ROOT::Internal::RDF::RAction<Helper, PrevNode, ColumnTypes_t>::Run(unsigned int, Long64_t) [with Helper = ROOT::Internal::RDF::SnapshotHelperMT<>; PrevNode = ROOT::Detail::RDF::RLoopManager; ColumnTypes_t = ROOT::TypeTraits::TypeList<>; Long64_t = long long int]’; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/RAction.hxx:108:9: required from here; /home/rembserj/spaces/master/root/src/build/include/ROOT/RDF/ActionHelpers.hxx:1760:40: error: parameter ‘slot’ set but not used [-Werror=unused-but-set-parameter]; 1760 | void UpdateCArraysPtrs(unsigned int slot, ColTypes &... values, std::index_sequence<S...> /*dummy*/); ```. I'm sure similar warnings also pop up in other places, but I just; happened to notice them in `rootbench`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14044:2059,error,error,2059,https://root.cern,https://github.com/root-project/root/pull/14044,1,['error'],['error']
Availability,Better errors on failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14514:7,error,errors,7,https://root.cern,https://github.com/root-project/root/pull/14514,2,"['error', 'failure']","['errors', 'failures']"
Availability,"Both on CentOS 8 Stream and Arch Linux, when compiling with Clang 13.0.0, there are a number of RooFit test failures due to crashes. Example crash when running `tutorials/roofit/rf201_composite.C`:; ```; root.exe: /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113: std::size_t RooSTLRefCountList<RooAbsArg>::size() const [T = RooAbsArg]: Assertion `_storage.size() == _refCount.size()' failed.; ```. ### Backtrace; ```; #0 0x00007ffff66c2a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6695db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff6695c89 in __assert_fail_base.cold.0 () from /lib64/libc.so.6; #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6; #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113; #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153; #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211; #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:108,failure,failures,108,https://root.cern,https://github.com/root-project/root/issues/9547,1,['failure'],['failures']
Availability,Break segmentation violation error when merging the jobs on the grid,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:29,error,error,29,https://root.cern,https://github.com/root-project/root/issues/6977,1,['error'],['error']
Availability,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5660:6,down,down,6,https://root.cern,https://github.com/root-project/root/pull/5660,2,"['down', 'failure']","['down', 'failures']"
Availability,Browser will read all data and all scripts from HTML file directly - ; no need to manage access to file system. Make more robust batch mode of web canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16643:122,robust,robust,122,https://root.cern,https://github.com/root-project/root/pull/16643,1,['robust'],['robust']
Availability,Bug reports: https://gitlab.kitware.com/cmake/cmake/-/issues/19662; and; https://github.com/microsoft/vcpkg/pull/7967. -- Looking for GLEW; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:520 (message):; Please enable builtin Glew due bug in latest CMake (use cmake option; -Dbuiltin_glew=ON).; Call Stack (most recent call first):; CMakeLists.txt:168 (include),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5238:146,Error,Error,146,https://root.cern,https://github.com/root-project/root/pull/5238,1,['Error'],['Error']
Availability,Build and test failures on RHEL+EPEL 8 ppc64le,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/issues/12372,1,['failure'],['failures']
Availability,Build can not recover from partial 'cleanup',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16227:14,recover,recover,14,https://root.cern,https://github.com/root-project/root/issues/16227,1,['recover'],['recover']
Availability,Build error after upgrading to macOS 15 Sequoia,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:6,error,error,6,https://root.cern,https://github.com/root-project/root/issues/16449,1,['error'],['error']
Availability,"Build error with ""nlohmann/json.hpp: No such file or directory"" in spack (unit tests build, with --test=root option)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14769:6,error,error,6,https://root.cern,https://github.com/root-project/root/issues/14769,1,['error'],['error']
Availability,"Build fails on Fedora 27 (gcc 7.3.1):; ```; /builddir/build/BUILD/root-6.14.00/tmva/tmva/test/TestRandomGenerator.cxx: In function 'void test_example()':; /builddir/build/BUILD/root-6.14.00/tmva/tmva/test/TestRandomGenerator.cxx:88:9: error: 'shuffle' is not a member of 'std'; std::shuffle(v.begin(), v.end(), rng);; ^~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2267:235,error,error,235,https://root.cern,https://github.com/root-project/root/pull/2267,1,['error'],['error']
Availability,Build failure in Ubuntu 22.04 due to OpenSSL 3.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10518:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/issues/10518,1,['failure'],['failure']
Availability,Build failure on Ubuntu22.04 wsl2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/issues/14062,1,['failure'],['failure']
Availability,"Build failure on Ubuntu22.04, when ROOT builds FTGL itself",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11239:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/issues/11239,1,['failure'],['failure']
Availability,Build failure with TBB on Ubuntu 22.10,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11931:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/issues/11931,1,['failure'],['failure']
Availability,Build failure with nlohmann/json 3.11,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11312:6,failure,failure,6,https://root.cern,https://github.com/root-project/root/issues/11312,1,['failure'],['failure']
Availability,"Building ROOT with gcc 11.2.0 on a centos7 system with the following configuration:. cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DCMAKE_INSTALL_PREFIX=/opt/root/v6-26-02_gc112_c17 -GNinja ../src. fails with the following error:; ```; [2542/9705] Performing download step (download, verify and extract) for 'XROOTD'; FAILED: builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; cd /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src && /bld4/opt/cmake/3.22.2/bin/cmake -P /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /bld4/opt/cmake/3.22.2/bin/cmake -E touch /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download; CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message):; Command failed: 1. '/bld4/opt/cmake/3.22.2/bin/cmake' '-Dmake=' '-Dconfig=' '-P' '/bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release-impl.cmake'. ```. attached are the XROOTD-download-err.log and XROOTD-download-out.log; [XROOTD-download-err.log](https://github.com/root-project/root/files/8624870/XROOTD-download-err.log); [XROOTD-download-out.log](https://github.com/root-project/root/files/8624872/XROOTD-download-out.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10527:235,error,error,235,https://root.cern,https://github.com/root-project/root/issues/10527,16,"['Error', 'down', 'error']","['Error', 'download', 'download-Release', 'download-Release-impl', 'download-err', 'download-out', 'error']"
Availability,"Building external applications that use ROOT oftentimes fail if there is a mismatch in the C++ standard between ROOT and the application. To make this visible, diagnose if there is a mismatch in the value of the `__cplusplus` macro w.r.t. when ROOT was configured.; The check is performed in `RConfigure.h`, a common header also included in backports, e.g. RStringView.hxx. ## Changes or fixes:; - Generated `RConfigure.h` during build defines `ROOT__cplusplus`, which contains the value of the `__cplusplus` macro at the time ROOT was configured.; - Because `RConfigure.h` is included from many ROOT headers (e.g., backports), it seems a viable candidate to also add the mismatch check.; On mismatch, emit a warning (should it be an `#error` instead?). ## Checklist:; - [X] tested changes locally. This PR fixes #8063.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10517:736,error,error,736,https://root.cern,https://github.com/root-project/root/pull/10517,1,['error'],['error']
Availability,Building fails with `builtin_llvm=OFF`: CommandLine Error: Option 'W' registered more than once!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156:52,Error,Error,52,https://root.cern,https://github.com/root-project/root/issues/12156,1,['Error'],['Error']
Availability,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Additional context; Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash.; ```; root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |; | From heads/master@v6-25-01-1189-g1ca221f010 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'; for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ^~~~; ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'; for(auto& p : pn9) cout << std::bitset<14>(p) << endl;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here; int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;; ^; /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here; inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {; ^; root [1] .q; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8389:1909,error,error,1909,https://root.cern,https://github.com/root-project/root/issues/8389,2,['error'],['error']
Availability,Bundling base class and derived class in same dictionary can lead to failure in recursive parsing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:69,failure,failure,69,https://root.cern,https://github.com/root-project/root/issues/13034,1,['failure'],['failure']
Availability,Bus error when trying to draw TH1F on macos 14.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15129:4,error,error,4,https://root.cern,https://github.com/root-project/root/issues/15129,1,['error'],['error']
Availability,By default QWebEngine does not process download actions.; Required when png image created directly from JSROOT code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4131:39,down,download,39,https://root.cern,https://github.com/root-project/root/pull/4131,1,['down'],['download']
Availability,By default the TMultiGraph was handling differently than a TGraphErrors or TGraphAsymmErrors the point data error options when fitting.; Now same behavior as fitting a single TGraph is applied . This fixes ROOT-10706,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5456:108,error,error,108,https://root.cern,https://github.com/root-project/root/pull/5456,1,['error'],['error']
Availability,"By defining `TString::kNPOS` out of class, the symbol is materialized properly also with LLVM>=13. Related to https://github.com/cms-sw/cmssw/issues/43077. Using the snippet at https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1781108225 , these are the numbers reported by different ROOT versions:. ```; $: for n in `ls *.log`; do echo $n; grep openat $n | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; done; master-2023-12-18-knpos-constexpr-run.log; 2579; master-2023-12-18-knpos-out-of-class-run.log; 307; master-2023-12-18-run.log; 2577; v6-26-14-run.log; 293; v6-28-00-knpos-constexpr-run.log; 2578; v6-28-00-knpos-out-of-class-run.log; 304; v6-28-00-run.log; 2798; ```. Note specifically `v6-28-00-knpos-out-of-class-run.log` and `master-2023-12-18-knpos-out-of-class-run.log` which correspond to respectively a 6.28 and a master build **with** this patch applied. In those cases, the number of `openat` calls falls back down to 6.26 levels. For completennes, @Axel-Naumann suggested to try defining `TString::kNPOS` as `static constexpr Ssiz_t kNPOS{::kNPOS};` inside the class body directly. The numbers are slightly better than the reference, but still quite worse than the case of defining the member variable out of class. See specifically `v6-28-00-knpos-constexpr-run.log` and `master-2023-12-18-knpos-out-of-class-run.log`. . Also, note that after this patch:; ```; $: nm $ROOTSYS/lib/*.so | grep _ZN7TString5kNPOSE | wc -l; 52; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261:340,echo,echo,340,https://root.cern,https://github.com/root-project/root/pull/14261,2,"['down', 'echo']","['down', 'echo']"
Availability,"By leveraging std::max_align_t, insure that the return addressed (offset-ed; compared to the address allocated by TStorage::ObjectAlloc) is still well; aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing; in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""); TH1 *h=new TH1F(""test"",""test"",100,-5,5); h->Fill (0); h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating; the TMethodCall, the address returned was aligned on a 16 bit; boundary but the memory counting over-allocating was shifting; the address by 'only' 8 bits, leading to a mis-aligned access; by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11172:391,fault,fault,391,https://root.cern,https://github.com/root-project/root/pull/11172,1,['fault'],['fault']
Availability,By setting an axis range underflow/overflow can also be included in the; cumulative histograms. This fixes ROOT-10832. Fix also computation of errors in case of a weighted histogram.; Note that the computed error on the cumulative histogram will be correlated with the previous bins.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6284:143,error,errors,143,https://root.cern,https://github.com/root-project/root/pull/6284,2,['error'],"['error', 'errors']"
Availability,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. ## Changes or fixes:; The way the value of a std::ntuple is printed. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # ; Nothing, it reduces the overall maintenance cost of the root codebase by simplifying it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13619:25,avail,available,25,https://root.cern,https://github.com/root-project/root/pull/13619,2,"['avail', 'mainten']","['available', 'maintenance']"
Availability,"By using std::apply, now available after moving to C++17, the implementation can be greatly simplified. # This Pull request:. This is a BP of https://github.com/root-project/root/pull/13619. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13887:25,avail,available,25,https://root.cern,https://github.com/root-project/root/pull/13887,1,['avail'],['available']
Availability,"C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class; has explicitly defaulted or deleted constructors. This fixes the following; compilation error:. ```; cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’; 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);; | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8414:170,error,error,170,https://root.cern,https://github.com/root-project/root/pull/8414,1,['error'],['error']
Availability,"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xmemory:16:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.291 10\\include\xutility:15:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; !_Is_implicitly_default_constructible<_Uty1>::value || !_Is_implicitly_default_constructible<_Uty2>::value); ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(137,9): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:136:23: note: to match this '('; constexpr explicit(; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:1476,error,error,1476,https://root.cern,https://github.com/root-project/root/pull/6143,2,['error'],['error']
Availability,"CB: ROOT::Experimental::Detail::RFieldBase::CommitCluster() (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/lcg/root/6.31.01-184a5ee42f3c094c02e1b303c901e8e4/lib/libROOTNTuple.so); ==1855575== by 0x4D24A3C: ROOT::Experimental::RNTupleWriter::CommitCluster(bool) (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/lcg/root/6.31.01-184a5ee42f3c094c02e1b303c901e8e4/lib/libROOTNTuple.so); ==1855575== by 0x4D24D9D: ROOT::Experimental::RNTupleWriter::~RNTupleWriter() (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/lcg/root/6.31.01-184a5ee42f3c094c02e1b303c901e8e4/lib/libROOTNTuple.so); ==1855575== by 0x459E52: cce::tf::RNTupleOutputer::~RNTupleOutputer() (in /uscms_data/d2/cdj/build/temp/rntuple/root_serialization/build-root-serialization/threaded_io_test); ==1855575== by 0x4114AE: main (in /uscms_data/d2/cdj/build/temp/rntuple/root_serialization/build-root-serialization/threaded_io_test); ```. I see the same valgrind error when just storing one `std::vector<int>` and one `std::vector<float>` to RNTuple. In this case, the job completes without the error from 'free'. ```; ==1920683== Invalid write of size 1; ==1920683== at 0x4046BE3: memmove (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/external/valgrind/3.22.0-e989c977f8949fc48f1bc1206f1f87c8/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==1920683== by 0x700C7DA: ??? (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/external/xz/5.2.5-6f3f49b07db84e10c9be594a1176c114/lib/liblzma.so.5.2.5); ==1920683== by 0x7011C2F: ??? (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/external/xz/5.2.5-6f3f49b07db84e10c9be594a1176c114/lib/liblzma.so.5.2.5); ==1920683== by 0x700CB55: lzma_code (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/external/xz/5.2.5-6f3f49b07db84e10c9be594a1176c114/lib/liblzma.so.5.2.5); ==1920683== by 0x596A683: R__zipLZMA (in /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02821/el8_amd64_gcc12/lcg/root/6.31.01-1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14508:13420,error,error,13420,https://root.cern,https://github.com/root-project/root/issues/14508,1,['error'],['error']
Availability,"CES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:2460; #18 0x00007fa76afa4749 in TCling::ProcessLine (this=0x16e7bc0, line=<optimized out>, error=0x7fff0771f04c) at /jenkins/workspace/build-any-ib/sw/20156516; /1/slc7_x86-64/GCC-Toolchain/v12.2.0-alice1-5/include/c++/12.2.0/bits/unique_ptr.h:191; #19 0x00007fa76afa4b02 in TCling::ProcessLineSynch (this=0x16e7bc0, line=0x16e8930 "".X /home/tdietel/alice/data/ole/./sortbug.C+"", error=0x7fff0771f04c); at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:3554; #20 0x00007fa7711777e7 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fff0771f04c, keep=<optimized out>) at /jenkins/workspace/build-any-ib; /sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TApplication.cxx:1661; #21 0x00007fa77172040c in TRint::ProcessLineNr (this=0x16b4f60, filestem=<optimized out>, line=0x7fff0771f060 "".x sortbug.C+"", error=0x7fff0771f04c) at /; jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:820; #22 0x00007fa771721fc6 in TRint::Run (this=this; entry=0x16b4f60, retrn=retrn; entry=false) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:461; #23 0x00000000004011dd in main (argc=<optimized out>, argv=0x7fff077211e8) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-0; 4/main/src/rmain.cxx:84; ```. I assume the bug can be triggered with other data sets in plain ROOT. If needed, I could try to strip things down, but I don't know if this is the most efficient use of my time. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 10 2023, 10:38:00 |; | From tags/v6-28-04@v6-28-04 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:9201,error,error,9201,https://root.cern,https://github.com/root-project/root/issues/13314,1,['error'],['error']
Availability,"CE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:77:3: error: expected unqualified-id; using ::memchr;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:122:1: error: unknown type name '_GLIBCXX_END_NAMESPACE_VERSION'; _GLIBCXX_END_NAMESPACE_VERSION; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/cstring:123:1: error: expected unqualified-id; } // namespace; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:31:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/type_traits:35:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/c++0x_warning.h:32:2: error: This file requires compiler and library support for the ISO C++ 2011 standard. This support must be enabled with the -std=c++11 or -std=gnu++11 compiler; options.; #error This file requires compiler and library support \; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: error: redefinition of 'exception'; class exception; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/new:41:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:34:10: note: '/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h' included multiple times, additional include site here; #include <bits/exception.h>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:61:9: note: unguarded header; consider using #ifdef guards or #pragma once; class exception; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:10044,error,error,10044,https://root.cern,https://github.com/root-project/root/issues/11381,1,['error'],['error']
Availability,CMS build errors for ROOT 6.28/master,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:10,error,errors,10,https://root.cern,https://github.com/root-project/root/issues/12771,1,['error'],['errors']
Availability,CMake Error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11819:6,Error,Error,6,https://root.cern,https://github.com/root-project/root/issues/11819,1,['Error'],['Error']
Availability,"CMake versions 2.4 and below silently removed leading and trailing; whitespace from libraries linked with code. This was raising an error; for newer CMake versions, according to new CMake policy CMP004; https://cmake.org/cmake/help/v3.0/policy/CMP0004.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/219:132,error,error,132,https://root.cern,https://github.com/root-project/root/pull/219,1,['error'],['error']
Availability,"CMakeFiles/MetaCling.dir/TClingDeclInfo.cxx.o; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingDiagnostics.cxx.o; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMemberIter.cxx.o; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodArgInfo.cxx.o; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 75%] Built target ClingUtils; [ 75%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 75%] Linking CXX executable src/rootcling_stage1; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; [ 75%] Built target rootcling_stage1; [ 75%] Generating G__Core.cxx, ../lib/Core.pcm; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/Interpreter/DynamicExprInfo.h:40:7: error: use of undeclared identifier '",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:13925,error,error,13925,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"CSV datasource can now handle empty entries in the input csv files.; Empty entries of type double become `nan`.; Empty entries of type Long64_t become `0`.; Empty entries of type boolean become `false`. Allow user to interact with the fColTypes attribute.; This attribute is a map (now unordered), that stores the column types -; keys are the column names, values are the corresponding types.; User can now pass this argument in the RCsvDS constructor and the; MakeCsvDataFrame function, so that they specify their custom types. Edge case appear when user specify a column name, which is not present; in the csv file - corresponding run time error thrown.; Another edge case is user asking to make the column of type different; than the ones specified by ColType_t. Again, there is an error in this; case. Specifying custom type is especially useful when the csv file contains; empty cells. Since only doubles has actual `nan` type, one can get the; desired `nan`-s by specifying the column type to double. This PR fixes #9561",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9988:642,error,error,642,https://root.cern,https://github.com/root-project/root/pull/9988,2,['error'],['error']
Availability,"Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python; import array; import ROOT. def create():; f = ROOT.TFile(""dummy.root"", 'RECREATE'); t = ROOT.TTree(""tree"", 'A tree'); a = array.array('f', [42]); br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):; a[0] = x; t.Fill(). t.Write(); f.Close(). def test(typecode='f'):; f = ROOT.TFile(""dummy.root"", 'READ'); t = f.Get('tree'); a = array.array(typecode, [0]); status = t.SetBranchAddress('a', a); print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):; t.GetEntry(i); print(""a = %s"" % (a[0], )). create(); test(""f""); test(""d""); ```. Before this commit, the output would be like this:; ```txt; Status = 4; a = 21.0; a = 42.0; a = 1337.0; Status = 4; a = 5.442276803e-315; a = 5.483722033e-315; a = 5.690664868e-315; ```. With this commit, you get a clear error:; ```txt; Status = 0; a = 21.0; a = 42.0; a = 1337.0; Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a; Status = -2; a = 0.0; a = 0.0; a = 0.0; ```. Closes the following JIRA ticket:; https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16171:1373,error,error,1373,https://root.cern,https://github.com/root-project/root/pull/16171,2,"['Error', 'error']","['Error', 'error']"
Availability,"CallFunc.FunctionWrapperSharedPtr (33 ms); [ RUN ] TClingCallFunc.ROOT_6523; [ OK ] TClingCallFunc.ROOT_6523 (7 ms); [----------] 15 tests from TClingCallFunc (56 ms total); [----------] 4 tests from TClingDataMemberInfo; [ RUN ] TClingDataMemberInfo.UsingDecls; [ OK ] TClingDataMemberInfo.UsingDecls (1 ms); [ RUN ] TClingDataMemberInfo.Lookup; [ OK ] TClingDataMemberInfo.Lookup (0 ms); [ RUN ] TClingDataMemberInfo.Offset; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:230: Failure; Value of: 1 == *(int*)(ROOT::GetROOT())->GetGlobal(""var1"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:233: Failure; Value of: -2 == *(int*)(ROOT::GetROOT())->GetGlobal(""var2"")->GetAddress(); Actual: false; Expected: true; /builddir/build/BUILD/root-6.30.04/core/metacling/test/TClingDataMemberInfoTests.cxx:242: Failure; Expected equality of these values:; 3000; *(int*)(ROOT::GetROOT())->GetGlobal(""kError"")->GetAddress(); Which is: 0; [ FAILED ] TClingDataMemberInfo.Offset (7 ms); [ RUN ] TClingDataMemberInfo.issue8553; [ OK ] TClingDataMemberInfo.issue8553 (4 ms); [----------] 4 tests from TClingDataMemberInfo (14 ms total); [----------] 5 tests from TClingMethodInfo; [ RUN ] TClingMethodInfo.Prototype; [ OK ] TClingMethodInfo.Prototype (0 ms); [ RUN ] TClingMethodInfo.ROOT10789; [ OK ] TClingMethodInfo.ROOT10789 (2 ms); [ RUN ] TClingMethodInfo.DerivedCtorROOT11010; [ OK ] TClingMethodInfo.DerivedCtorROOT11010 (81 ms); [ RUN ] TClingMethodInfo.TemplateFun; [ OK ] TClingMethodInfo.TemplateFun (1 ms); [ RUN ] TClingMethodInfo.Ctors; [ OK ] TClingMethodInfo.Ctors (4 ms); [----------] 5 tests from TClingMethodInfo (90 ms total); [----------] Global test environment tear-down; [==========] 33 tests from 4 test suites ran. (7341 ms total); [ PASSED ] 32 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TClingDataMemberInfo.Offset; 1 FAILED TEST; YOU HAVE 1 DISABLED T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14512:3906,Failure,Failure,3906,https://root.cern,https://github.com/root-project/root/issues/14512,1,['Failure'],['Failure']
Availability,"Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker; errors, because it accesses a static data member. That's unsupported; across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8437:72,error,errors,72,https://root.cern,https://github.com/root-project/root/pull/8437,2,['error'],['errors']
Availability,"Can we enable diagnostics for value printing, to be more helpful in case of errors?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/679:76,error,errors,76,https://root.cern,https://github.com/root-project/root/pull/679,1,['error'],['errors']
Availability,"Casting the matrices from double to float create small rounding; errors of the order of 1e-06 in the reference matrices themselves,; so when they are multiplied the sum over long rows/columns accumulates; many rounding errors and make the test fail. Using TMatrixT of float; as the reference to begin with eliminates this problem. **Note:** _This is a backport of the same fix to master, but with 3 commits combined into a single one._. Reference: http://cdash.cern.ch/testSummary.php?project=1&name=TMVA-DNN-Arithmetic-Cpu&date=2017-04-21",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/518:65,error,errors,65,https://root.cern,https://github.com/root-project/root/pull/518,2,['error'],['errors']
Availability,"Catch-all printValue implementation changed to enable correct invocation if only parent type overload exists (ex. if there is no overload for TF1*, compiler invokes the overload to its best parent overload match, in the worst case void*). Argument changed from reference to pointer to support this.; isEnumType Coverity bug changed from if to assert (coding, not runtime error); Changed the way printValue is invoked in order to correctly cast Value to the needed value (e.g. LL -> short). Extracted value stays in scope while we execute printValue, because we use the address.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/78:371,error,error,371,https://root.cern,https://github.com/root-project/root/pull/78,1,['error'],['error']
Availability,"Change ""TTreeReader::Reset"" to ""Restart"" in error message",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/304:44,error,error,44,https://root.cern,https://github.com/root-project/root/pull/304,1,['error'],['error']
Availability,"Change the cv qualification of the const vector passed to `span`. Previously, the constructor `span(std::vector<typename; std::remove_cv<T>::type> const& v) noexcept` was producing an error for invalid conversion from `const long int*` to `std::__ROOT::span<long int>::pointer` {aka `long int*`} [-fpermissive]. Corresponding test added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9818:184,error,error,184,https://root.cern,https://github.com/root-project/root/pull/9818,1,['error'],['error']
Availability,"Changes are not yet functional. I did my best at finishing all I could, but there are still some errors I couldn't correct in time. Because of these errors, I also wasn't able to test the changes with the fit.cxx file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6103:97,error,errors,97,https://root.cern,https://github.com/root-project/root/pull/6103,2,['error'],['errors']
Availability,"Changes:; - Clean-up coding style and add comments; - Add error-handling for the cases; - No method booked before calling `Evaluate` (`methodName` is empty string, prevents segfault which is hard to interpret for users); - No `Evaluate` run before calling `GetResults` (map size of ROCs is zero). @lmoneta @omazapa Only merge if nobody is currently working on this code! The coding style fixes will make merging horrible ;)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/281:58,error,error-handling,58,https://root.cern,https://github.com/root-project/root/pull/281,1,['error'],['error-handling']
Availability,"Changing the definition of infinity in RooFit from `1e30` to `std::numeric_limits<double>::infinity()`, and making some other changes that ensure no evaluation errors are logged with this new definition. * Code-format RooNumber.h and RooNumber.cxx; * Inline infinity constant and checks in `RooNumber`; * Make `TMath::AreEqualAbs()` return `true` when comparing `inf`; * Define infinity as `std::numeric_limits<double>::infinity()`; * RooTruthModel: local `xmin` and `xmax` to make code more readable; * Avoid `sin` or `cos` of infinity in RooTruthModel integral code; * Note change of infinity definition in RooFit. More details in the commit descriptions. With the increased use of inlined code and simpler comparisons in `RooNumber`, this is also speeding up RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12016:160,error,errors,160,https://root.cern,https://github.com/root-project/root/pull/12016,1,['error'],['errors']
Availability,"Check duplicate issues. - [ ] Checked for duplicates. ### Description. Strange issue with Cling and TTree:Scan(), please see table in Reproducer. ### Reproducer. file `scan.C`; ```C++; #include ""TTree.h""; #include ""TRandom.h"". TTree *t = nullptr;. void scan() {; const Int_t kMax = 10;; Int_t n;; Float_t a[kMax];. t = new TTree(""t"", ""tree""); // in memory; t->Branch(""n"", &n, ""n/I"");; t->Branch(""a"", a, ""a[n]/F"");. for (Int_t i = 0; i < 5; i++) {; n = gRandom->Rndm()*(kMax-1);; for (Int_t j = 0; j < n; j++); a[j] = gRandom->Gaus(0, 1);; t->Fill();; }; // t->Scan(""a[0]"");; }; ```. <table>. <tr>; <td> Fedora 40, root master (2024-10-22)</td> <td> lxplus.cern.ch (RHEL 9.4), root v6.32.06 </td>; </tr>. <tr>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * 1.255e-41 *; ERROR leaf:a, len=22 and max=8; * 1 * 1.3911939 *; ERROR leaf:a, len=22 and max=8; * 2 * 1.1125664 *; ERROR leaf:a, len=22 and max=8; * 3 * 2.0609021 *; ERROR leaf:a, len=22 and max=8; * 4 * -0.182436 *; ************************; (long long) 5; root [2] t->Draw(""a[0]""); root [3] // draws correct all 5 values; ```. </td>; <td>. ```C++; $ root scan.C; root [0]; Processing scan.C...; root [1] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************; (long long) 5; root [2]. ```. </td>; </tr>. <tr>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; ************************; * 0 * -0.434764 *; * 1 * 1.3911939 *; * 2 * 1.1125664 *; * 3 * 2.0609021 *; * 4 * -0.182436 *; ************************. *** Break *** segmentation violation; ```. </td>; <td>. ```C++; $ root; root [0] .L scan.C; root [1] scan(); root [2] t->Scan(""a[0]""); ************************; * Row * a[0] *; *****************",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16730:990,ERROR,ERROR,990,https://root.cern,https://github.com/root-project/root/issues/16730,1,['ERROR'],['ERROR']
Availability,Check if fFile pointer still available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13561:29,avail,available,29,https://root.cern,https://github.com/root-project/root/pull/13561,1,['avail'],['available']
Availability,Check if fFile pointer still available. Fixes #13503,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13559:29,avail,available,29,https://root.cern,https://github.com/root-project/root/pull/13559,1,['avail'],['available']
Availability,"CheckTObjectHashConsistencyEvE14recurseBlocker, _ZN7TObjectC2Ev, _ZN8TVectorTIfED1Ev, _ZStanSt12memory_orderSt23__memory_order_modifier, _ZNK8TVectorTIfE27CheckTObjectHashConsistencyEv, _ZNKSt13__atomic_baseIhEcvhEv, _ZTS8TVectorTIfE, _ZN8TVectorTIfE5ClearEPKc, _ZNK7TObject9GetOptionEv }) }; cling JIT session error: Failed to materialize symbols: { (main, { _ZGVL5myvec }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_307_, __orc_init_func.cling-module-307, _ZN12__cling_N51516__cling_Un1Qu314EPv, $.cling-module-307.__inits.0 }) }; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-306 }) }; Traceback (most recent call last):; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 12, in <module>; raise SystemExit(main()); ^^^^^^; File ""/afs/cern.ch/user/v/vpadulan/repro_libphysics.py"", line 9, in main; print(ROOT.myvec); ^^^^^^^^^^; File ""/cvmfs/sft.cern.ch/lcg/views/LCG_106/x86_64-el9-gcc13-opt/lib/ROOT/_facade.py"", line 164, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute myvec from ROOT; ```. ### ROOT 6.30.02 (LCG105); ```; [vpadulan@lxplus959 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_105/x86_64-el9-gcc13-opt/setup.sh; [vpadulan@lxplus959 ~]$root --version; ROOT Version: 6.30/02; Built for linuxx8664gcc on Dec 20 2023, 18:59:44; From heads/master@tags/v6-30-02; [vpadulan@lxplus959 ~]$python repro_libphysics.py; Name: TVectorT<float> Title:; ```. ### Reproducer. ```python; import ROOT. def main():; ROOT.gInterpreter.Declare('''; #include <TVectorT.h>; //R__LOAD_LIBRARY(libMatrix); // Uncomment to make the error disappear; const auto myvec = TVectorT<float>();; '''); print(ROOT.myvec). if __name__ == ""__main__"":; raise SystemExit(main()); ```. ### ROOT version. 6.32.*. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601:3457,error,error,3457,https://root.cern,https://github.com/root-project/root/issues/16601,1,['error'],['error']
Availability,"Checked for duplicates: not found. Discussion started here:; https://root-forum.cern.ch/t/validity-health-checking-for-a-tfile-content-tfile-ok-but-ttree-corrupted-and-no-error/47304. ### Describe the bug; Using from python:; A TFile not isZombie() and not TestBit(ROOT.TFile.kRecovered) throw these error when parsing a TTree:; ```; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 6787763, fKeylen = 72, fObjlen = 7622608, noutot = 0, nout=0, nin=6787691, nbuf=7622608; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:240631153, branch:fZ, entry:0, badread=1, nerrors=1, basketnumber=0; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 6787763, fKeylen = 72, fObjlen = 7622608, noutot = 0, nout=0, nin=6787691, nbuf=7622608; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:240631153, branch:fZ, entry:1905651, badread=1, nerrors=2, basketnumber=0; Error in unzip ZSTD. Type = Corrupted block detected . Code = 18446744073709551596; Error in <TBasket::ReadBasketBuffers>: fNbytes = 5760784, fKeylen = 74, fObjlen = 7615836, noutot = 0, nout=0, nin=5760710, nbuf=7615836; Error in <TBranch::GetBasket>: File: broken_AO2D.root at byte:460579199, branch:fSnp, entry:0, badread=1, nerrors=3, basketnumber=0; ```. ### Expected behavior; Any catch-able error either at TFile opening or at least when parsing and error is encounter ...; At this point i cannot check and asses the health of the file from within python. ### To Reproduce; https://gist.github.com/adriansev/5274de723333cd0afff774cb4d48d202; a test file can be provided through private communication. ### Setup; fedora 34/ ROOT git v6-24-00-patches @5af1fa4d3d; manual build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154:171,error,error,171,https://root.cern,https://github.com/root-project/root/issues/9154,13,"['Error', 'error']","['Error', 'error']"
Availability,"Clad currently has problems with some new headers in `MacOSX15.0.sdk` and crashes / errors due to `__builtin_pow`. Disable it for now while a solution is worked on, so we can upgrade the nodes and keep the build green.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15910:84,error,errors,84,https://root.cern,https://github.com/root-project/root/pull/15910,1,['error'],['errors']
Availability,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16176:1229,failure,failure,1229,https://root.cern,https://github.com/root-project/root/pull/16176,1,['failure'],['failure']
Availability,"Clang complains:; ```; warning: 'RNTupleModelChangeset' defined as a struct here but previously declared as a class; this is valid, but may result in linker errors under the Microsoft C++ ABI [-Wmismatched-tags]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12689:157,error,errors,157,https://root.cern,https://github.com/root-project/root/pull/12689,1,['error'],['errors']
Availability,"Clarifies the behavior of `wgtError` in `RooDataSet::add`, which is rather unintuitive. (See [this post in the forum](https://root-forum.cern.ch/t/unexpected-behavior-in-roodataset-weight-errors/35576).)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4167:188,error,errors,188,https://root.cern,https://github.com/root-project/root/pull/4167,1,['error'],['errors']
Availability,Class TGraphMultiErrors for Graphs with multidimensional y-Errors (e.g. statistic / systematic errors),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:59,Error,Errors,59,https://root.cern,https://github.com/root-project/root/pull/3449,2,"['Error', 'error']","['Errors', 'errors']"
Availability,"Class.h:289:23: note: previous declaration ‘TMethod* TClass::GetClassMethod’; 289 | TMethod *GetClassMethod(Longptr_t faddr);; | ^~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:424:4: error: ‘Longptr_t’ does not name a type; did you mean ‘Long64_t’?; 424 | Longptr_t GetDataMemberOffset(const char *membername) const;; | ^~~~~~~~~; | Long64_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:488:4: error: ‘ClassConvStreamerFunc_t’ does not name a type; did you mean ‘ClassStreamerFunc_t’?; 488 | ClassConvStreamerFunc_t GetConvStreamerFunc() const;; | ^~~~~~~~~~~~~~~~~~~~~~~; | ClassStreamerFunc_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:569:43: error: ‘ClassConvStreamerFunc_t’ has not been declared; 569 | void SetConvStreamerFunc(ClassConvStreamerFunc_t strm);; | ^~~~~~~~~~~~~~~~~~~~~~~; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:583:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 583 | static DictFuncPtr_t GetDict (const char *cname);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; /opt/local/HEA/root/root-6.26.00/core/meta/inc/TClass.h:584:11: error: ‘DictFuncPtr_t’ does not name a type; did you mean ‘VoidFuncPtr_t’?; 584 | static DictFuncPtr_t GetDict (const std::type_info &info);; | ^~~~~~~~~~~~~; | VoidFuncPtr_t; make[2]: *** [graf3d/gviz3d/CMakeFiles/Gviz3d.dir/build.make:95: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/src/TStructNodeEditor.cxx.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:32806: graf3d/gviz3d/CMakeFiles/Gviz3d.dir/all] Error 2; make: *** [Makefile:171: all] Error 2; ```. ### To Reproduce; Steps to reproduce the behavior:; 1. I am building root through the CMake program with the command as recommended:; ```; $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src ; $ cmake --build .; ```. ### Setup; 1. ROOT version = 6.26.00; 3. Operating system = Debian Bullseye, gcc 10.2.1, cmake 3.18.4; 4. Downloaded source code tar.gz file from https://root.cern/releases/release-62600/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10155:2980,error,error,2980,https://root.cern,https://github.com/root-project/root/issues/10155,5,"['Down', 'Error', 'error']","['Downloaded', 'Error', 'error']"
Availability,Clean up all accumulated redundant files over the llvm upgrades.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1296:25,redundant,redundant,25,https://root.cern,https://github.com/root-project/root/pull/1296,1,['redundant'],['redundant']
Availability,"Cling has already basic support for CUDA: ; The CUDA mode is enable by `cling -xcuda`. A option for root is missing. I tried to start `root.exe` in CUDA mode with the following command: `EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe`. However, the initialization process failed with an error that does not crash root itself. ```C++; $ EXTRA_CLING_ARGS=""-xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35"" root.exe; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: error: reference to __device__ function '__nvvm_vote_all' in __host__ function; __DEVICE__ int __all(int __a) { return __nvvm_vote_all(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:49:40: note: '__nvvm_vote_all' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: error: reference to __device__ function '__nvvm_vote_any' in __host__ function; __DEVICE__ int __any(int __a) { return __nvvm_vote_any(__a); }; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:50:40: note: '__nvvm_vote_any' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:51:52: error: reference to __device__ function '__nvvm_vote_ballot' in __host__ function; __DEVICE__ unsigned int __ballot(int __a) { return __nvvm_vote_ballot(__a); }; ^; cling: /home/seh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:419,error,error,419,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,"ClingWorkAroundUnnamedDetection2 -compilerI/usr/i; nclude/c++/9 -compilerI/usr/include/x86_64-linux-gnu/c++/9 -compilerI/usr/include/c++/9/backward -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/; usr/include/x86_64-linux-gnu -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-linux-gnu/9/include -compilerI/usr/local/include -compilerI/usr/include/x86_64-linux-gnu -compilerI/usr/i; nclude -I/home/pcanal/root_working/build/master-debug/include -I/home/pcanal/root_working/code/root/roottest -I/home/pcanal/root_working/code/root/roottest/root/meta/MakeProject -I/home/p; canal/root_working/build/master-debug/etc/cling /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h /home/pcanal/root_working/code/root/roottest/root; /meta/MakeProject/stl_makeproject_test_linkdef.h; In file included from input_line_10:36:; /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Imt.pcm' is out ; of date and needs to be rebuilt: could not read module signature; #include ""TH1D.h""; ^; /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'MathCore' in '/home/pcanal/root_working/build/master-debug/rootte; st/root/meta/MakeProject/MathCore.pcm'; /home/pcanal/root_working/code/root/roottest/root/meta/MakeProject/stl_makeproject_test.h:10:2: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/roottest/r; oot/meta/MakeProject/Hist.pcm'; Error: /home/pcanal/root_working/build/master-debug/bin/rootcling: compilation failure (/home/pcanal/root_working/build/master-debug/roottest/root/meta/MakeProject/stl_makeproject_testb1a; 3e30369_dictUmbrella.h); ```. and indeed, `libHist` has not been build yet. So it seem that `roottest/root/meta/MakeProject/stl_makeproject_test.cxx` is missing a dependency on `libHist`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9600:2127,error,error,2127,https://root.cern,https://github.com/root-project/root/issues/9600,3,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"Closed the previous pull request and creating a new one after rebasing. All changes are pertaining to plotting changes within RooFit. @cburgard's comments from the previous MR ; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects.; However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas).; However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit.; With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4507:731,error,error,731,https://root.cern,https://github.com/root-project/root/pull/4507,1,['error'],['error']
Availability,"Closed the previously opened MR as I had messed up something with the branch. @cburgard's description of the changes:; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects.; However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas).; However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit.; With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4533:672,error,error,672,https://root.cern,https://github.com/root-project/root/pull/4533,1,['error'],['error']
Availability,Collection of two commits:; - Make errors for RooDataSet more obvious to users when reading from ascii.; - Strip down unnecessary includes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4967:35,error,errors,35,https://root.cern,https://github.com/root-project/root/pull/4967,2,"['down', 'error']","['down', 'errors']"
Availability,"Columns in Pandas dataframes are *not* guaranteed to be contiguous; arrays, so we need the same workaround as in the `MakeNumpyDataFrame`; method, first copying the array to contiguous memory if it was not; contiguous. Also, veto the tutorial test if `pandas` is not available. This should fixes test failures on Windows. Pinging @dpiparo, since this follows up on your PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14997:267,avail,available,267,https://root.cern,https://github.com/root-project/root/pull/14997,3,"['Ping', 'avail', 'failure']","['Pinging', 'available', 'failures']"
Availability,"Combines the two cases in `TFileMerger::MergeRecursive` when a `TObject` declares a `Merge` method. The method can either be:; 1. `SomeClass::Merge(TCollection* inputs, TFileMergeInfo* info)` or; 2. `SomeClass::Merge(TCollection* inputs)`. These cases were combined because they are nearly identical, and only differ in what arguments are passed to the; `TObject::Execute` call using `listHargs`. Concretely, the call is:. `obj->Execute(""Merge"", listHargs.Data(), &error);`. For option 1, `listHargs` has the parameter types `TCollection*` and; `TFileMerge*` info.; For option 2, `listHargs` only holds `TCollection*`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6073:465,error,error,465,https://root.cern,https://github.com/root-project/root/pull/6073,1,['error'],['error']
Availability,"Command set variable in parent scope which is identical with variable in local scope. I suspect, that sometime `cmake` makes failure. In principle, it is the only place in roottest - we could just avoid usage of that variable at all. . Trying to fix sporadic problem like [here](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81406/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tclass_methods_libgen_build/). Output is:; ```; Generating tclass_methods.cxx, tclass_methods.rootmap; Building CXX object roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o; clang: error: no such file or directory: '/Users/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/multicore/tclass_methods.cxx'; clang: error: no input files; make[1]: *** [roottest/root/multicore/CMakeFiles/roottest-root-multicore-tclass_methods-libgen.dir/tclass_methods.cxx.o] Error 1; make: *** [roottest-root-multicore-tclass_methods-libgen/fast] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5585:125,failure,failure,125,https://root.cern,https://github.com/root-project/root/pull/5585,5,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,Comments and refactorings (hidden -> masked) in the TextInput.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/82:37,mask,masked,37,https://root.cern,https://github.com/root-project/root/pull/82,1,['mask'],['masked']
Availability,"Commit 4ee93a229f (""[rootcling] Allow users to specify byproduct modules."") added explicit options to specify expected byproducts, but removed the implicit check for system modules. This worked a bit by accident because the interpreter includes `<new>` upon startup which already triggered building of `std.pcm` and `libc.pcm` before `rootcling` registered its error handler. This model breaks now with Apple splitting their modules, so add a new option that we specify during building of `Core.pcm` to allow implicit building of any system module. ---. This revives https://github.com/root-project/root/pull/14903",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16315:361,error,error,361,https://root.cern,https://github.com/root-project/root/pull/16315,1,['error'],['error']
Availability,"Commit 4ee93a229f (""[rootcling] Allow users to specify byproduct modules."") added explicit options to specify expected byproducts, but removed the implicit check for system modules. This worked a bit by accident because the interpreter includes `<new>` upon startup which already triggered building of `std.pcm` and `libc.pcm` before `rootcling` registered its error handler. This model breaks now with libc++ splitting `std` into one per public header (e.g. `std_vector`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903:361,error,error,361,https://root.cern,https://github.com/root-project/root/pull/14903,1,['error'],['error']
Availability,"Commit a74454ae2d moved `rootcling_stage1` before the other directories, which broke sanitized builds because `core/sanitizer` defines the library `ROOTStaticSanitizerConfig` that `ROOT_EXECUTABLE` links in - if available. Solve this by moving `add_subdirectory(sanitizer)` first in the list.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12128:212,avail,available,212,https://root.cern,https://github.com/root-project/root/pull/12128,1,['avail'],['available']
Availability,Commit c8c0ea7c59 made the step and job fail in case of a test error. We still want the results to be uploaded to show them on GitHub.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12822:63,error,error,63,https://root.cern,https://github.com/root-project/root/pull/12822,1,['error'],['error']
Availability,"Compared with latest dev version, new fixes:. 1. Fix v7 hist updates, repair draw_mt.cxx tutorial; 2. Fix TH2 col drawing (small bins were not shown at all); 3. Fix text drawing in TPave - not always draw completion was done properly; 4. Fix axes context menu in the frame; 5. Small performance optimization. Only JavaScript code, therefore skipping CI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6652:70,repair,repair,70,https://root.cern,https://github.com/root-project/root/pull/6652,1,['repair'],['repair']
Availability,Compilation error on CentOS 7 of root V6.22.02 c++17,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6731:12,error,error,12,https://root.cern,https://github.com/root-project/root/issues/6731,1,['error'],['error']
Availability,Compilation error on arch using gcc 13.2.1: strlcopy has a different exception specifier,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13529:12,error,error,12,https://root.cern,https://github.com/root-project/root/issues/13529,1,['error'],['error']
Availability,Compilation error on redhat 8.3 / no internet,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:12,error,error,12,https://root.cern,https://github.com/root-project/root/issues/8292,1,['error'],['error']
Availability,Compilation error while compile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12209:12,error,error,12,https://root.cern,https://github.com/root-project/root/issues/12209,1,['error'],['error']
Availability,"Compilation failure in branch v6-26-00-patches with gcc11, el8 and amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12110:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/issues/12110,1,['failure'],['failure']
Availability,Compilation failure on Centos7 due to xrootd5 in v6.18,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/issues/6779,1,['failure'],['failure']
Availability,Compilation failure with g++ 12.2 and C++20,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12037:12,failure,failure,12,https://root.cern,https://github.com/root-project/root/issues/12037,1,['failure'],['failure']
Availability,Compiler failure in `tmva/sofie/inc/TMVA/ROperator_Conv.hxx`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9453:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/issues/9453,1,['failure'],['failure']
Availability,"Compiling Interpreter.cpp allows RunFunction and friends to be actually seen during stack unwind after an; exception has been thrown, directly or indirectly, by interpreter code. This allows for the RAII objects to be; properly tear down. In particular, without this patch, EnterUserCodeRAII was not tear down and thus the callbacks were not executed.; Consequently the ""Restore the ROOT global Mutex"" callback was not executed leaving the Mutex in an invalid state. In case of ART application, in most cases, they customize the ROOT error handler to throw an exception. This; resulted (without this fix) in crash when import a GDML file with an error in it. In practice what we have is:. call to TGeo Import; which calls the interpreter for some of its functionality; which calls gdml code; which reports an error; which leads the error handler to thrown an exception.; ... some of the stack are properly unwound ... some are not (because they were not compiled with exception support on) ....; ... so the ROOT Mutex goes into an incorrect state ...; ... unwinding continues; ... unwinding reached a frame that Unlock the mutex; Mutex notices it is an incorrect state.; so it reports the Error; the Error handler throw an exception ....... and because this exception is being thrown during the unwind, it is fatal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4892:233,down,down,233,https://root.cern,https://github.com/root-project/root/pull/4892,8,"['Error', 'down', 'error']","['Error', 'down', 'error']"
Availability,Compiling from source: [26%] error: ‘numeric_limits’ is not a member of ‘std’ root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8610:29,error,error,29,https://root.cern,https://github.com/root-project/root/issues/8610,1,['error'],['error']
Availability,"Conn.cxx:47:0:; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘entity’ [-Wunused-parameter]; 01:46:28 virtual bool PostProcess(XrdSecEntity &entity,; 01:46:28 ^; 01:46:28 /usr/include/xrootd/XrdSec/XrdSecInterface.hh:611:25: warning: unused parameter ‘einfo’ [-Wunused-parameter]; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdClientMessage* XrdProofConn::SendRecv(XPClientRequest*, const void*, char**)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:41: error: ‘LowWrite’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:551:46: error: ‘kOK’ was not declared in this scope; 01:46:28 if (LowWrite(req, reqData, reqDataLen) != kOK) {; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: At global scope:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:777:1: error: ‘XReqErrorType’ does not name a type; 01:46:28 XReqErrorType XrdProofConn::LowWrite(XPClientRequest *req, const void* reqData,; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx: In member function ‘XrdProofConn::ESrvType XrdProofConn::DoHandShake(XrdClientPhyConnection*)’:; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:4: error: ‘ServerResponseType’ was not declared in this scope; 01:46:28 ServerResponseType type;; 01:46:28 ^; 01:46:28 /mnt/build/jenkins/night/LABEL/ROOT-centos7/SPEC/noimt/V/6-18/root/proof/proofd/src/XrdProofConn.cxx:1005:23: error: expected ‘;’ before ‘type’; 01:46:28 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6779:1563,error,error,1563,https://root.cern,https://github.com/root-project/root/issues/6779,1,['error'],['error']
Availability,"Consider the following code snippet:. nbkg = 10000; nsig = 100; masses = [125,400]; ; import ROOT; ws = ROOT.RooWorkspace(""workspace""); m = ws.factory(""m[0,1000]""); bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""); bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)); ; bkgdata = bkg.generate(m,nbkg); bkgdata.SetName(""asimov_0""); ws.Import(bkgdata); ; funcs = ROOT.RooArgList(); funcs.add(bkg); for i in range(0,len(masses)):; sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)); sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)); funcs.add(sig); mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3; [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7965:849,ERROR,ERROR,849,https://root.cern,https://github.com/root-project/root/issues/7965,5,"['ERROR', 'avail']","['ERROR', 'ERRORS', 'available']"
Availability,"Consider the following code; ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. Before this PR, the output would be:; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```. After this PR:; ```; $: python test.py; [...]; File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Dask/Backend.py"", line 155, in dask_mapper; return mapper(current_range); File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 116, in distrdf_mapper; raise RuntimeError(f""C++ exception thrown:\n\t{type(e).__name__}: {e.what()}""); RuntimeError: C++ exception thrown:; 	runtime_error: Graph was applied to a mix of scalar values and collections. This is not supported.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11047:1165,Error,Error,1165,https://root.cern,https://github.com/root-project/root/pull/11047,3,"['Error', 'error']","['Error', 'error']"
Availability,"Consider this python script:. ```; import ROOT; v = ROOT.vector(float)(); for i in range(50000):; s = repr(v); if i%1000 == 0:; print (i, flush=True); ```. Using ROOT from a dev4 nightly:. /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-opt. This runs for about 12 minutes and then starts printing errors:. ```; 21000; cling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; Error in Interpreter::toString: the input *((std::string*)0x7ffed5ef1580) = cling::printValue((std::vector<float>*)0x9c5a040); cannot be evaluatedcling JIT session error: Cannot allocate memory; ...; ```. Meanwhile, with root 6.26.08:. /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/sw/lcg/releases/LCG_102b_ATLAS_19/ROOT/6.26.08/x86_64-centos7-gcc11-opt. The same script completes normally in about two seconds. See also ATEAM-885.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12817:345,error,errors,345,https://root.cern,https://github.com/root-project/root/issues/12817,6,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"Constructing a `std::span<T>` from a pair of `std::vector<T>::iterator` fails in Apple clang with libc++. Revert to the pointer/pointer constructor, which should work in both GCC/clang and libstdc++/libc++. See also: https://stackoverflow.com/questions/72935737/stdspan-on-apple-clang-cant-be-constructed. This fixes the following error seen in the nighlies for cxx20 builds.; ```; std::span<const DescriptorId_t> fieldList{onDiskFields.begin() + fieldListOffset, onDiskFields.end()};; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:405:41: note: candidate constructor not viable: no known conversion from 'std::__wrap_iter<const unsigned long long *>' to 'std::span<const unsigned long long, 18446744073709551615>::pointer' (aka 'const unsigned long long *') for 1st argument; _LIBCPP_INLINE_VISIBILITY constexpr span(pointer __ptr, size_type __count) : __data{__ptr}, __size{__count} {}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:406:41: note: candidate constructor not viable: no known conversion from 'std::__wrap_iter<const unsigned long long *>' to 'std::span<const unsigned long long, 18446744073709551615>::pointer' (aka 'const unsigned long long *') for 1st argument; _LIBCPP_INLINE_VISIBILITY constexpr span(pointer __f, pointer __l) : __data{__f}, __size{static_cast<size_t>(distance(__f, __l))} {}; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:424:19: note: candidate template ignored: requirement '__is_span_compatible_container<std::__wrap_iter<const unsigned long long *>, const unsigned long long, void>::value' was not satisfied [with _Container = std::__wrap_iter<const unsigned long long *>]; constexpr span( _Container& __c,; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/usr/include/c++/v1/span:430:19: note: candidate template ignored: requirement '__is_span_compatible_container<const std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12697:331,error,error,331,https://root.cern,https://github.com/root-project/root/pull/12697,1,['error'],['error']
Availability,"Continuation of #9260, closes #9253. Successfully compiles and launches with both musl and glibc, however the affected features were **not** specifically tested so please make sure to review carefully. With musl, compilation only succeeds without builtin XRootD and TBB and without SSL support - the former need to be fixed in the respective projects, the latter would probably require a little more effort as the `ruserok` function used by `net/rpdutils/src/rpdutils.cxx` is not available in musl - this implies `-Dxrootd=OFF -Dimt=OFF -Dssl=OFF` `cmake` options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9288:480,avail,available,480,https://root.cern,https://github.com/root-project/root/pull/9288,1,['avail'],['available']
Availability,"Convert back slashes into forward slashes. This fixes the following errors on Windows:; input_line_12(12,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\GSL\2.5\include"",; ^~; input_line_12(13,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\libxml2\2.7.8\include"",; ^~; CUSTOMBUILD : error : .\bin\rootcling: compilation failure (./allDictd5c5124b81_dictContent.h) [C:\Users\bellenot\build\release\onepcm.vcxproj]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4376:68,error,errors,68,https://root.cern,https://github.com/root-project/root/pull/4376,5,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,"Convert the backslashes into forward slashes in the include path for rootcling on Windows. This fixes the following errors:; input_line_12(12,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\GSL\2.5\include"",; ^~; input_line_12(13,4): error G954FC62D: \U used with no following hex digits [C:\Users\bellenot\build\release\onepcm.vcxproj]; ""C:\Users\bellenot\libs\libxml2\2.7.8\include"",; ^~; CUSTOMBUILD : error : .\bin\rootcling: compilation failure (./allDictd5c5124b81_dictContent.h) [C:\Users\bellenot\build\release\onepcm.vcxproj]. And (when using ACLiC):; Info in <TWinNTSystem::ACLiC>: creating shared library C:/Users/bellenot/build/debug/core/dictgen/test/myextramacro_C.dll; input_line_12:7:4: error: \U used with no following hex digits; ""C:\Users\bellenot\build\debug\include"",; ^~; Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4381:116,error,errors,116,https://root.cern,https://github.com/root-project/root/pull/4381,7,"['Error', 'error', 'failure']","['Error', 'error', 'errors', 'failure']"
Availability,"Copy constructor and assign operators for TGeoVolume, TGeoNode, TGeoVoxelFinder have ownership problem. Anyway it is not recommended to use these methods with TGeo classes,; therefore just remove error-prone implementations completely and forbid them. Can have side effect, if there are any user code with classes derived from TGeoVolume or TGeoNode",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4170:196,error,error-prone,196,https://root.cern,https://github.com/root-project/root/pull/4170,1,['error'],['error-prone']
Availability,Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration; begin(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here; template<typename _Tp> _Tp* begin(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration; begin(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here; template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration; end(valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here; template<typename _Tp> _Tp* end(valarray<_Tp>&);; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:79:; /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration; end(const valarray<_Tp>& __va) noexcept; ^; /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here; template<typename _Tp> const _Tp* end(const valarray<_Tp>&);; ^; input_line_1:1:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; Wh,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:1725,error,error,1725,https://root.cern,https://github.com/root-project/root/issues/14062,1,['error'],['error']
Availability,Could NOT find Vdt error when using 6.32.02 docker image,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038:19,error,error,19,https://root.cern,https://github.com/root-project/root/issues/16038,1,['error'],['error']
Availability,"Crash report:; ```; 382: [ RUN ] RDFSnapshotMore.MissingSizeBranch; 382: RDataFrame::Run: event loop was interrupted; 382: =================================================================; 382: ==1908070==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000fc64c8 at pc 0x00000072c4d3 bp 0x7ffd3dbf1940 sp 0x7ffd3dbf1930; 382: WRITE of size 1 at 0x616000fc64c8 thread T0; 382: #0 0x72c4d2 in ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:1612:92; 382: #1 0x72c4d2 in std::_Function_handler<void (unsigned int, ROOT::RDF::RSampleInfo const&), ROOT::Internal::RDF::SnapshotHelper<ROOT::VecOps::RVec<float> >::GetSampleCallback()::'lambda'(unsigned int, ROOT::RDF::RSampleInfo const&)>::_M_invoke(std::_Any_data const&, unsigned int&&, ROOT::RDF::RSampleInfo const&) /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:297:2; 382: #2 0x7f0554a2f5ac in std::function<void (unsigned int, ROOT::RDF::RSampleInfo const&)>::operator()(unsigned int, ROOT::RDF::RSampleInfo const&) const /usr/bin/../lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/bits/std_function.h:687:14; 382: #3 0x7f0554a2f5ac in ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters(unsigned int, long long) /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:660:10; 382: #4 0x7f0554a30ca8 in ROOT::Detail::RDF::RLoopManager::RunTreeReader() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:568:10; 382: #5 0x7f0554a3ace0 in ROOT::Detail::RDF::RLoopManager::Run() /home/jhahnfel/ROOT/src/tree/dataframe/src/RLoopManager.cxx:846:32; 382: #6 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::TriggerRun() /home/jhahnfel/ROOT/src/tree/dataframe/inc/ROOT/RResultPtr.hxx:383:18; 382: #7 0x5ecb22 in ROOT::RDF::RResultPtr<ROOT::RDataFrame>::Get(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11222:206,ERROR,ERROR,206,https://root.cern,https://github.com/root-project/root/issues/11222,1,['ERROR'],['ERROR']
Availability,"Create a struct holding the flag, `HANDLE`, and `WIN32_FIND_DATA` used by `OpenDirectory`, `GetDirEntry`, and `FreeDirectory`, so each thread creates its own instance of it. This fixes randome failures in mutithreaded applications on Windows, like for example in the `R__USE_IMT` part of the `datasource-root` test:; ```; [ RUN ] TRootTDS.DefineSlotMT; Error in <TFile::TFile>: file C:/root-dev/build/x64/debug/tree/dataframe/test/G__NTupleStruct.vcx does not exist; [ OK ] TRootTDS.DefineSlotMT (191 ms); [ RUN ] TRootTDS.FromARDFMT; Error in <TFile::Init>: C:/root-dev/build/x64/debug/tree/dataframe/test/INSTALL.vcxproj not a ROOT file; C:\root-dev\git\master\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 23; [ FAILED ] TRootTDS.FromARDFMT (6 ms); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13472:193,failure,failures,193,https://root.cern,https://github.com/root-project/root/pull/13472,4,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11178:96,error,error,96,https://root.cern,https://github.com/root-project/root/pull/11178,2,"['error', 'mask']","['error', 'mask']"
Availability,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit https://github.com/root-project/root/commit/ac36d879629fd67cf6fc9e955923ec9f98a2361c. An alternative solution appears to be replacing `EProperty` (which refers; to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. This PR fixes #11128",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11148:96,error,error,96,https://root.cern,https://github.com/root-project/root/pull/11148,2,"['error', 'mask']","['error', 'mask']"
Availability,"Current behavior:. ```; root [0] TFile f(""root://eospublic.cern.ch//eos/root-eos/benchmark/Run2012B_SingleMu.root""); Error in <TFile::TFile>: file /eos/root-eos/benchmark/Run2012B_SingleMu.root does not exist; (TFile &) Name: /eos/root-eos/benchmark/Run2012B_SingleMu.root Title:; ```. Desirable behavior:. ```; root [0] TFile f(""root://eospublic.cern.ch//eos/root-eos/benchmark/Run2012B_SingleMu.root""); Error in <TFile::TFile>: please use TFile::Open to access remote files:; auto f = std::unique_ptr<TFile>{TFile::Open(""root://eospublic.cern.ch//eos/root-eos/benchmark/Run2012B_SingleMu.root"")} ; (TFile &) Name: /eos/root-eos/benchmark/Run2012B_SingleMu.root Title:; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10039:117,Error,Error,117,https://root.cern,https://github.com/root-project/root/issues/10039,2,['Error'],['Error']
Availability,Current histfactory is optional (it requires xml is to enable/available) but the test depending on it are run nonetheless. So with; ```; $ grep xml CMakeCache.txt ; ...; //Enable support for XML (requires libxml2); xml:BOOL=OFF; ...; ```; In particular tutorial-roostats-CreateExampleFile is ran but fails:; ```; Output:; ----------------------------------------------------------. Processing /home/pcanal/root_working/code/root/tutorials/roostats/CreateExampleFile.C...; sh: 1: prepareHistFactory: not found; sh: 1: hist2workspace: not found; <end of output>; ```; The following tutorial then fails; ```; 702:tutorial-roostats-OneSidedFrequentistUpperLimitWithBands; 703:tutorial-roostats-StandardBayesianMCMCDemo; 704:tutorial-roostats-StandardBayesianNumericalDemo; 705:tutorial-roostats-StandardFeldmanCousinsDemo; 706:tutorial-roostats-StandardFrequentistDiscovery; 707:tutorial-roostats-StandardHistFactoryPlotsWithCategories; 708:tutorial-roostats-StandardHypoTestDemo; 709:tutorial-roostats-StandardHypoTestInvDemo; 710:tutorial-roostats-StandardProfileInspectorDemo; 711:tutorial-roostats-StandardProfileLikelihoodDemo; 712:tutorial-roostats-StandardTestStatDistributionDemo; 713:tutorial-roostats-TwoSidedFrequentistUpperLimitWithBands; ```; most (if not all) due to the missing root file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6911:62,avail,available,62,https://root.cern,https://github.com/root-project/root/issues/6911,1,['avail'],['available']
Availability,"Current v7 canvas cannot be stored in the file - I/O for shared_ptr<> not working. Because of that remove transfer of Pad/Canvas to the clients.; Actually, it was not required at all.; Also adjust extraction of attributes (line color) from the drawables. Repair all relevant macros in tutorials/v7. Update JSROOT, which now supports LZ4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1647:255,Repair,Repair,255,https://root.cern,https://github.com/root-project/root/pull/1647,1,['Repair'],['Repair']
Availability,"Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7; Compiler: GCC 9.3; ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math); ```; #8 <signal handler called>; #9 0x000010081a5b0038 in ?? (); #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so; #11 0x000001000c853a50 in ?? (); ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log); ```; root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed.; ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297:369,error,error,369,https://root.cern,https://github.com/root-project/root/issues/9297,2,['error'],['error']
Availability,"Curve::shiftCurveToZero()`; cf98956266 [RF] Add exceptions to setter methods for non-existing objects; 1cc5ec46c8 [RF] Forbid resetting RooFormula; b483747192 [RF] Only register actual vars as server in `RooFormulaVar`/`GenericPdf`; b537cbb93d [RF] Add the CHEP'23 AD results as a RooFit test; 40ab6a4d89 [RF] Fix code generation issues with RooAdd* classes; 3dcea7036a [RF] Support simultaneous fits in NLL code generation; a470a3d85e [RF] Remove internal `RooFormula` from public RooFit interface; 3d01cd2e8f [RF] Remove deprecated RooAbsString; 059af6d55a [RF] Remove RooAbsRootFinder; bdc19e090e [RF] Get rid of RooScaledFunc; 88dbb6ad17 [RF] Make RooGenProdProj private; 94ee158ddc [RF] Remove deprecated RooCatType; d46e5fc087 [RF] Remove some unused class rules in roofitcore LinkDef.h; f78558eb0a [RF] Mark template specialization as inline; ca29ccf161 [RF] Some cleanup of public `roofitcore` classes; 9357c9842a [RF] Unify RooAbsSelfCachedPdf and RooAbsSelfCachedReal code; 2e2309327e [RF] Fix ambiguity errors in `CodeSquashContext::buildArg()` overloads; 05e993cf92 [RF] Avoid code duplication in `testRooFuncWrapper`; 47a5c001ea [RF] Add AD support for Roo[RealSumPdf, RealSumFunc, ConstraintSum].; 13479ab9cd [RF] Remove the old BatchMode code path inside RooNLLVar; 16497ee8c4 [RF] Add code generation support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12971:2535,error,errors,2535,https://root.cern,https://github.com/root-project/root/pull/12971,3,['error'],['errors']
Availability,Cut & paste error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1244:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/1244,1,['error'],['error']
Availability,"D:=$(shell root-config --ld); LDLIBS:=$(shell root-config --libs); LINK.o = $(LINK.cc). # Set up all explicit targets.; all: arrayWrite. arrayWrite: arrayWrite.o Dictionary.o. Dictionary.cpp: LinkDef.h; 	rootcint -f $@ LinkDef.h. clean:; 	rm -f Dictionary*; 	rm -f *.o; 	rm -f arrayWrite. distclean: clean; 	rm -f *~; 	rm -f arrays.root; ```. - `LinkDef.h`:. ```c++; #ifndef ARRAYWRITE_LINKDEF_H; #define ARRAYWRITE_LINKDEF_H. #include <array>; #include <vector>. struct INSTANTIATE_TYPES {; std::array<float, 3> arr1;; std::vector<std::array<float, 3> > vec1;; };. #pragma link C++ class std::vector<std::array<float, 3> >+;. #endif // ARRAYWRITE_LINKDEF_H; ```. - `arrayWrite.cpp`:. ```c++; // ROOT include(s).; #include <TFile.h>; #include <TError.h>; #include <TTree.h>. // System include(s).; #include <array>; #include <vector>; #include <memory>. /// Helper macro for creating a branch with error checking; #define MAKE_BRANCH(NAME, OBJ)					\; do {								\; TBranch* br = otree->Branch(NAME, &OBJ);			\; if (br == nullptr ) {					\; Error(APPNAME, ""Could not create branch \""%s\"""", NAME);	\; return 1;							\; }								\; } while(false). int main() {. // The name of the application.; static const char* APPNAME = ""arrayWrite"";. // Open the output file.; static const char* FILENAME = ""arrays.root"";; std::unique_ptr<TFile> ofile(TFile::Open(FILENAME, ""RECREATE""));; if ((!ofile) || ofile->IsZombie()) {; Error(APPNAME, ""Could not open output file \""%s\"""", FILENAME);; return 1;; }; Info(APPNAME, ""Opened output file \""%s\"""", FILENAME);. {; // Create a TTree in the output file.; auto otree = std::make_unique<TTree>(""arrays"", ""Tree with arrays"");; otree->SetDirectory(ofile.get());. // Add vectors of arrays to it.; std::array<float, 3> arr1;; MAKE_BRANCH(""arr1"", arr1);; std::vector<std::array<float, 3> > vec1;; MAKE_BRANCH(""vec1"", vec1);. // Fill a few entries into the tree.; for (Int_t i = 0; i < 10; ++i) {; vec1.clear();; arr1 = {static_cast<float>(i),; static_cast<float>(i + 1),; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:3546,error,error,3546,https://root.cern,https://github.com/root-project/root/issues/12007,2,"['Error', 'error']","['Error', 'error']"
Availability,"DEDIR=include""; ""-Dbuiltin_llvm=OFF""; ""-Dbuiltin_nlohmannjson=OFF""; ""-Dbuiltin_openui5=OFF""; ""-Dalien=OFF""; ""-Dbonjour=OFF""; ""-Dcastor=OFF""; ""-Dchirp=OFF""; ""-Dclad=OFF""; ""-Ddavix=ON""; ""-Ddcache=OFF""; ""-Dfail-on-missing=ON""; ""-Dfftw3=OFF""; ""-Dfitsio=OFF""; ""-Dfortran=OFF""; ""-Dimt=ON""; ""-Dgfal=OFF""; ""-Dgviz=OFF""; ""-Dhdfs=OFF""; ""-Dhttp=ON""; ""-Dkrb5=OFF""; ""-Dldap=OFF""; ""-Dmonalisa=OFF""; ""-Dmysql=OFF""; ""-Dodbc=OFF""; ""-Dopengl=ON""; ""-Doracle=OFF""; ""-Dpgsql=OFF""; ""-Dpythia6=OFF""; ""-Dpythia8=OFF""; ""-Drfio=OFF""; ""-Droot7=OFF""; ""-Dsqlite=OFF""; ""-Dssl=ON""; ""-Dtmva=ON""; ""-Dvdt=OFF""; ""-Dwebgui=OFF""; ""-Dxml=ON""; ""-Dxrootd=OFF""; ]; ++ lib.optional (stdenv.cc.libc != null) ""-DC_INCLUDE_DIRS=${lib.getDev stdenv.cc.libc}/include""; ++ lib.optionals stdenv.isDarwin [; ""-DOPENGL_INCLUDE_DIR=${OpenGL}/Library/Frameworks""; ""-DCMAKE_DISABLE_FIND_PACKAGE_Python2=TRUE"". # fatal error: module map file '/nix/store/<hash>-Libsystem-osx-10.12.6/include/module.modulemap' not found; # fatal error: could not build module '_Builtin_intrinsics'; ""-Druntime_cxxmodules=OFF""; ];. NIX_LDFLAGS = lib.optionalString (stdenv.isLinux && stdenv.isAarch64 && stdenv.cc.isGNU) ""-lgcc"";. postInstall = ''; for prog in rootbrowse rootcp rooteventselector rootls rootmkdir rootmv rootprint rootrm rootslimtree; do; wrapProgram ""$out/bin/$prog"" \; --set PYTHONPATH ""$out/lib"" \; --set ${lib.optionalString stdenv.isDarwin ""DY""}LD_LIBRARY_PATH ""$out/lib""; done. # Make ldd and sed available to the ROOT executable; wrapProgram ""$out/bin/root"" --prefix PATH : ""${lib.makeBinPath [; gnused # sed; stdenv.cc # c++ ld etc.; stdenv.cc.libc # ldd; ]}"". # Patch thisroot.{sh,csh,fish}. # The main target of `thisroot.sh` is ""bash-like shells"",; # but it also need to support Bash-less POSIX shell like dash,; # as they are mentioned in `thisroot.sh`. # `thisroot.sh` would include commands `lsof` and `procps` since ROOT 6.28.; # See https://github.com/root-project/root/pull/10332. patchRcPathPosix ""$out/bin/thisroot.sh"" ""${lib.makeBinPath ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:7164,error,error,7164,https://root.cern,https://github.com/root-project/root/issues/11920,1,['error'],['error']
Availability,"DE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include"". CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:47 (message):; Stopping after outputting logs. gmake[2]: *** [interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make:92: interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:44491: interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/all] Error 2; gmake: *** [Makefile:166: all] Error 2; ```. ### Reproducer. cmake ../../src/root -Droottest=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo; cmake --build . ### ROOT version. master@0afffc6fc9. ### Installation method. source. ### Operating system. FreeBSD 14.0-RELEASE. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:2493,Error,Error,2493,https://root.cern,https://github.com/root-project/root/issues/14492,5,['Error'],['Error']
Availability,"DO:. - [ ] Decide on explicit-implicit MT execution modes' interactions; - [ ] Rename TPoolManager; - [ ] Decide if allowing change of the number of threads when calling several times EnableImplicitMT(x) with a varying x without an intermediate call to DisableImplicitMT(); - [ ] Add warnings . ***********************************************************************************. # Previous behaviour; Previous to this PR, the number of threads was limited during the lifetime of the tbb scheduler, kept alive by TPoolManager as a ```std::shared_ptr``` as long as references to it existed, to the value set on its initialization. ```cpp; //We initialize the scheduler with 4 threads; ROOT::EnableIMT(4);; { ; //The scheduler is active, so the value passed to TThreadExecutor; //is overriden with the number of threads the scheduler has been; //initialized with (4); TThreadExecutor executor(9);; }; ROOT::DisableIMT();. //The scheduler is not alive at this point, ; //so we initialize it with 2 threads; ROOT::EnableIMT(2);; ROOT::TThreadExecutor executor(8);; ROOT::DisableIMT();. executor.MapReduce(...); //Runs on two threads!. ROOT::EnableIMT(3);; //Still two threads! TThreadExecutor instance was keeping the scheduler alive; ```; This also implies that given two co-existent instances of TThreadExecutor initialized with a different number of threads, the first one to be initialized forces on the second one the number of threads to work with. ```cpp; ROOT::TThreadExecutor executor(4);; ROOT::TThreadExecutor executor2(8); //will run limited to two threads!!; ```; This setup was useful [to avoid undefined behaviours between the implicit and explicit parallelism modes of ROOT](https://indico.cern.ch/event/607814/contributions/2466931/attachments/1409778/2155811/TScheduler.pdf). . # New behaviour; With this PR, we can separate this two modes of execution. We support the co-existance of several TThreadExecutors, each handling a different number of threads, by initializing the scheduler ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389:1268,alive,alive,1268,https://root.cern,https://github.com/root-project/root/pull/2389,1,['alive'],['alive']
Availability,"DS.cxx(145): error C2668: 'std::make_unique': ambiguous call to overloaded function [TreePlayer.vcxproj]; C:\Users\bellenot\build\master-check\include\ROOT/RMakeUnique.hxx(26): note: could be 'std::unique_ptr<ROOT::Experimental::TDF::TRootDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TRootDS,std::string_view&,std::string_view&>(std::string_view &,std::string_view &)'; with; [; _Ty=ROOT::Experimental::TDF::TRootDS; ]; C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.11.25503\include\memory(2436): note:; or 'std::unique_ptr<ROOT::Experimental::TDF::TRootDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TRootDS,std::string_view&,std::string_view&,void>(std::string_view &,std::string_view &)'; with; [; _Ty=ROOT::Experimental::TDF::TRootDS; ]; TRootDS.cxx(145): note: while trying to match the argument list '(std::string_view, std::string_view)'; TRootDS.cxx(145): error C2512: 'ROOT::Experimental::TDataFrame::TDataFrame': no appropriate default constructor available [TreePlayer.vcxproj]; TTrivialDS.cxx; TTrivialDS.cxx(82): error C2668: 'std::make_unique': ambiguous call to overloaded function [TreePlayer.vcxproj]; C:\Users\bellenot\build\master-check\include\ROOT/RMakeUnique.hxx(26): note: could be 'std::unique_ptr<ROOT::Experimental::TDF::TTrivialDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TTrivialDS,ULong64_t&>(ULong64_t &)'; with; [; _Ty=ROOT::Experimental::TDF::TTrivialDS; ]; C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.11.25503\include\memory(2436): note:; or 'std::unique_ptr<ROOT::Experimental::TDF::TTrivialDS,std::default_delete<_Ty>> std::make_unique<ROOT::Experimental::TDF::TTrivialDS,ULong64_t&,void>(ULong64_t &)'; with; [; _Ty=ROOT::Experimental::TDF::TTrivialDS; ]; TTrivialDS.cxx(82): note: while trying to match the argument list '(ULong64_t)'; TTrivialDS.cxx(82): error C2512: 'ROOT::Experimental::TDataFrame::TDataFrame': no ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1151:991,error,error,991,https://root.cern,https://github.com/root-project/root/pull/1151,2,"['avail', 'error']","['available', 'error']"
Availability,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7354:267,error,error,267,https://root.cern,https://github.com/root-project/root/pull/7354,1,['error'],['error']
Availability,"Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3828:56,error,errors,56,https://root.cern,https://github.com/root-project/root/pull/3828,1,['error'],['errors']
Availability,Deadlock in ErrorHandler when invoked at library initialization time.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11383:12,Error,ErrorHandler,12,https://root.cern,https://github.com/root-project/root/issues/11383,1,['Error'],['ErrorHandler']
Availability,"Dear ROOT experts. I have produced some neural network output score, which I exported to ROOT histograms using uproot (as I am more familiar with that than pyROOT), so that I could set limits using the Higgs Combine tool. However in the Higgs Combine tool I encountered errors due to these histograms having nan integral. I presumed this problem may just have been caused by me outputting the histogram incorrectly, however when I investigated one of these histograms I found it had the property that hist.Integral(100, 100) gives nan, but hist.GetBinContent(100) gives 0.0, when I would assume these should always give the same result. What is the difference between these, please, and can anyone advise on where I might be going wrong?. Thank you. Dominic Stafford",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6427:270,error,errors,270,https://root.cern,https://github.com/root-project/root/issues/6427,1,['error'],['errors']
Availability,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12458:393,error,error,393,https://root.cern,https://github.com/root-project/root/issues/12458,8,['error'],['error']
Availability,"Dear ROOTers,. I suspect there is a bug in ROOT while I read trees created with an old version (let say 5.34.36) using a new one (6.22.06). I bet that wasn't spotted because nobody really uses `int8_t` (maybe one needs to use internal ROOT types instead). But interestingly enough, that if I use the same old version of ROOT, everything looks fine. So I write a value in a tree like that:; ```; int j;; TFile f (file_name.c_str (), ""RECREATE"", ""test uint8_t"",; ROOT::CompressionSettings (ROOT::kLZMA, 7));; TTree t (""tree"", ""test int8_t"");; t.Branch (""i"", &i, ""i/B"");; ```; and read like that:; ```; int8_t i;; TFile f (file_name.c_str ());; TTree *t = (TTree*)f.Get (""tree"");; t->SetBranchAddress (""i"", &i);; ```; and it works perfectly fine with 5.34.36, but fails to read if I compile the last code with 6.22.06 with error; ```; The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; ```. If you want to try to reproduce the possible bug, please download my example here: [br.tar.gz](https://github.com/root-project/root/files/6157333/br.tar.gz). You need to have two versions of ROOT: 5, and 6, and set up your Makefile accordingly. My compiler is gcc version 4.9.2 20150212 (Red Hat 4.9.2-6) (GCC) running on CentOS 7 (Linux kernel 3.10.0-1160.15.2.el7.x86_64). When I run the test on my host I see the following (I removed make output):; ```; Test with the same ROOT version: /root/x86-64/5.34.36/system/root; Test Ok. Test with different ROOT versions: /root/x86-64/5.34.36/system/root /root/x86-64/6.22.06/system/root. Error in <TTree::SetBranchAddress>: The pointer type given ""SignedChar_t"" (22) does not correspond to the type needed ""Char_t"" (1) by the branch: i; Read is corrupt: 0!=0 ; Read is corrupt: 0!=1 ; Read is corrupt: 0!=2 ; Read is corrupt: 0!=3 ; Read is corrupt: 0!=4 ; ...; Test failed.; ```. Best regards; Andrei",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7565:820,error,error,820,https://root.cern,https://github.com/root-project/root/issues/7565,3,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,"Dear all, . I found out an extreme slow down affecting for instance the `hadd` command that was introduced by the following commit ; https://github.com/root-project/root/commit/06b9878fd946ed717f64cb85810f4552accd8ab7#diff-765b2bfb5aed033baddbf7036ddda5a103b3b82fa5456b462b74b31cd79dc51b; which modifies the `TFileMerger` class. . The slow down affect ROOT versions `>= 6.22.08`. The problem is the call of the ; ```; else; dirtodelete.Add(result);; ```. When hadding files, those two lines are called for each object found in a TDirectory. ; So for instance if you store histograms in a TDirectory the directory is going to be added to `dirtodelete` as many times as you have histograms in that directory. And this slows down condiderably the hadd command as previously there was not such thing done. The deletion is called several times over the same object as well which is also inneficient. . With some inputs containing several TDirectories, hadding with ROOT version `6.22.06` takes around 1 hour on lxplus ; whereas with ROOT version `>= 6.22.08` it would take more than a day... I can provide inputs files to illustrate the problem that are stored here ; /eos/user/b/bouquet/VHbbcc_results/testHadd_3periods/; (3 files of size ~5GB each they contain ~640 TDirectory each one containing around 6000 histograms) . Or available thanks to the following link ; https://cernbox.cern.ch/index.php/s/FBryG2p5Lshp6Lx; (in practive you can download just one file and replicate it 2 times to have 3 files to hadd and do tests) . I can tell the hadd is much slower as the names of Tdirectory processed are printed out and the difference in time to process only just one TDirectory is large depending on the ROOT version used it takes few seconds (`v6.22.06`) versus 10-15 minutes (`>= v6.22.08`). . This bug needs to be absolutely fixed as it would affect many analyses and it needs backported to all the root versions starting from `6.22.08`. . I made a test commenting the two lines with the following g",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9939:40,down,down,40,https://root.cern,https://github.com/root-project/root/issues/9939,3,['down'],['down']
Availability,"Dear all,. **Description :**; I have come across an issue in my analysis. I have been using **RDF** and **multithread** for my analysis.; I was **previously storing** the output of my analysis as **1D and 2D histograms root files**. ; I changed the method and started storing the results using snapshot.; **After storing the TTree/TChain** by using **snapshot** now, I have a separate script which creates the required plots.; Since I have converted to using the output of snapshot I have noticed, I have **lost significant number of events in the plots ** of some of the datasets.; I also noticed that the **same affected datasets** **print out** the following errors:. Error in <TTreeReaderValueBase::CreateProxy()>: The tree does not have a branch called HLT_Trimuon2_Upsilon5_Muon. You could check with TTree::Print() for available branches. The ""missing TBranch"" error is also repeated across the bugged datasets with different branches. It is important to note that I **don't even use any of those ""missing TBranches"" in my analysis** nor am trying to plot them.; When I use the **report**, the **output shows that all events have been reached and all the filters are applied correctly**, . **What seems to have correct behaviour**:; 1. Reading events TTree/TChain.; 2. Running across the script since the previous version which is stored as plots directly look fine even though those files has missing TBranches too, have used multithread and RDF.; 3. Report function, the output of the script stored as plots and the snapshot are same (as far as I recall). **Suspected bug:**; Could it be If there is a missing TBranch across some files, The snapshot can't handle the TTree/TChain and those events are not stored (i.e. rejected from the storage)?. Could anyone please help me with this issue and clarify of the behaviour of snapshot in case of inconsistent branches?. **Expected behaviour:**; 1.Snapshot will be able to at least store other branches and not be affected by missing tbranches.; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366:662,error,errors,662,https://root.cern,https://github.com/root-project/root/issues/9366,4,"['Error', 'avail', 'error']","['Error', 'available', 'error', 'errors']"
Availability,"Dear all,. after . git clone https://github.com/root-project/root.git; cd root; git checkout -b v6-28-02 v6-28-02; mkdir root_build; cd root_build; cmake ../root; cmake --build -j4. I get:; ...; [ 75%] Built target rootcling_stage1; [ 75%] Generating G__Core.cxx, ../lib/Core.pcm; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:4:; In file included from /usr/include/c++/13/bitset:52:; In file included from /usr/include/c++/13/string:47:; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: error: redefinition of '__distance'; __distance(_InputIterator __first, _InputIterator __last,; ^; /usr/include/c++/13/bits/stl_iterator_base_funcs.h:81:5: note: previous definition is here; __distance(_InputIterator __first, _InputIterator __last,; ^; ... This is under opensuse Tumbleweed with latest updates. The default compiler is gcc-13. . It looks similar to an previous issue with gcc-12: https://github.com/root-project/root/issues/10478. The last time I built root (v6.26.10 in December 2022) I had no problems but I don't know what the gcc version was back then. ; Could you please have a look?; Thanks & Cheers,; --Sven",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12659:580,error,error,580,https://root.cern,https://github.com/root-project/root/issues/12659,1,['error'],['error']
Availability,"Dear all,. while root-6.28.03 compiled with the patch provided in response to issue #12659 a similar problem is back now in root-6.28.04 (retrieved via latest-stable from github today). I just did (on suse TW):; ```; git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; mkdir root_build; cd root_build; cmake ../root_src -j4; ```. and this produced:; ```; ...; [ 76%] Built target ClingUtils; [ 76%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o; [ 76%] Linking CXX shared library ../../../lib/libCling.so; [ 76%] Linking CXX executable src/rootcling_stage1; [ 76%] Built target rootcling_stage1; [ 76%] Generating G__Core.cxx, ../lib/Core.pcm; [ 76%] Built target Cling; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:52:; In file included from /usr/include/c++/13/memory_resource:60:; In file included from /usr/include/c++/13/bits/memory_resource.h:46:; /usr/include/c++/13/bits/utility.h:219:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp>>'; inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;; ^; ./usr/include/c++/13/bits/stl_pair.h:62:11: note: '/usr/include/c++/13/bits/utility.h' included multiple times, additional include site in header from module 'std.bits/stl_pair.h'; # include <bits/utility.h> // for std::tuple_element, std::tuple_size; ^; ..; ```. It's not the exact same error message as in #12659 but seems rather close in nature ...; Could you please have look if the patch from 6.28.03 needs further additions to address this in 6.28.04?. Thanks & Cheers,; --Sven",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12897:1079,error,error,1079,https://root.cern,https://github.com/root-project/root/issues/12897,2,['error'],['error']
Availability,"Dear developers,. I was trying to build ROOT v6-26-10 in debug mode, to be able to debug my custom projects that use the ROOT libraries. At the moment of the compilation, I got the following error. ```; In file included from /path/to/root_debug/root_src/graf3d/eve7/src/REveBoxSet.cxx:20:; /path/to/root_debug/root_src/builtins/nlohmann/json.hpp:2149:46: error: wrong number of template arguments (10, should be at least 0); 2149 | AllocatorType, JSONSerializer, BinaryType>; | ^; ```; After this, there were a bunch of other errors and warnings, until the compilation was not crashed. Here are the cmake flags I used; ```; cmake -DCMAKE_BUILD_TYPE:STRING=Debug -G ""Unix Makefiles"" -DCMAKE_CXX_STANDARD:STRING=17 -DCMAKE_INSTALL_PREFIX:PATH=../root_debug/install -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON ../root_debug/root_src; ```. I have installed nlohmann-json3-dev of version 3.7.3-1 in my machine. Also, I compiled the same version of ROOT in release mode and it works. Can you help me to build the root in debug mode, please?; With best regards,; Denys.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492:191,error,error,191,https://root.cern,https://github.com/root-project/root/issues/12492,3,['error'],"['error', 'errors']"
Availability,"Debug assertion failure ""cannot seek vector iterator after end"" in RTensor.hxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13325:16,failure,failure,16,https://root.cern,https://github.com/root-project/root/issues/13325,1,['failure'],['failure']
Availability,"Declarations without the auto keyword are not part of standard C++. Even though it is a nice feature to have, it requires a patch on top of clang and is one of the hurdles preventing us from using the upstream clang. Implicit auto injection is currently only supported at the prompt (and only in the top-most function-level scope). So it should ideally not break other features. There are a few GitHub and JIRA issues related to this feature that can also be closed if we completely remove it. For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). EDIT:; Glancing through JIRA issues, these are the issues that can be closed (list might not be exhaustive):. https://its.cern.ch/jira/browse/ROOT-10309; https://its.cern.ch/jira/browse/ROOT-10593; https://its.cern.ch/jira/browse/ROOT-10284; https://its.cern.ch/jira/browse/ROOT-8828; https://its.cern.ch/jira/browse/ROOT-8538; https://its.cern.ch/jira/browse/ROOT-7970. # This Pull request:; Requires https://github.com/root-project/roottest/pull/1056 to be merged for tests to pass. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645:637,error,error,637,https://root.cern,https://github.com/root-project/root/pull/14645,1,['error'],['error']
Availability,Deleted two empty files that were just including the header and made; some cosmetic changes to root/multiproc and TPool derived classes:; - #include reordering.; - standarize the use of TError::Error as the way of throwing error; messages instead of mixing it with std::cerr here and there.; - added missing copyright notices and module identification lines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/164:194,Error,Error,194,https://root.cern,https://github.com/root-project/root/pull/164,2,"['Error', 'error']","['Error', 'error']"
Availability,"Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; .dot file generated with RooAbsArg::graphVizTree produces an invalid .dot file if the graph title contains spaces. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; RooAbsArg::graphVizTree should produce a valid .dot file even when the names of the elements contain spaces. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ROOT macro, save to graphvizMWE.C and run with `root graphvizMWE.C`:; ```; void graphvizMWE(void){; // Create a simple dependency tree; RooRealVar x{};; RooRealVar sigma{};; RooRealVar mu{};. RooGaussian Gaussian(""my_gaussian"", ""Gaussian"", x, mu, sigma);; RooGaussian GaussianWithSpace(""my gaussian"", ""Gaussian"", x, mu, sigma);. // Create GraphViz trees; Gaussian.graphVizTree(""tree_example.dot"");; GaussianWithSpace.graphVizTree(""tree_example2.dot""); // Produces invalid output; }; ```; Then attempt to convert the produced `.dot` files to images using; `dot -Tpng tree_example.dot -o example1.png # Produces an image`; `dot -Tpng tree_example2.dot -o example2.png # Error!`. The first of these will produce a .png image, the second will fail with a message like: `Error: tree_example2.dot: syntax error in line 1 near 'gaussian'`. Can be fixed by enclosing the graph title in quotes: i.e. changing line 1 of `tree_example2.dot` from; `digraph my gaussian{`; to; `digraph ""my gaussian""{`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT built from source. ROOT Version: 6.23/01; Built for linuxx8664gcc on Jun 05 2020, 15:06:16; From heads/master@v6-23-01-229-gd4ac502837. Ubuntu 18.04.5 LTS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7067:1732,Error,Error,1732,https://root.cern,https://github.com/root-project/root/issues/7067,4,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,"Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgSet(sqrtPdf, hpdf), frac);; ; auto frame = x.frame();; p.plotOn(frame);; frame->Draw();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7, ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11482:2209,down,download,2209,https://root.cern,https://github.com/root-project/root/issues/11482,1,['down'],['download']
Availability,Dictionary compilation error with TString + string literal + std::string,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8524:23,error,error,23,https://root.cern,https://github.com/root-project/root/issues/8524,1,['error'],['error']
Availability,"Differently from `Evaluate()`, `ProcessLine()` returns a `Longptr_t` value and errors must be checked by passing a second argument. The old check would fail when assigning 0 to a member.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16463:79,error,errors,79,https://root.cern,https://github.com/root-project/root/pull/16463,1,['error'],['errors']
Availability,"Dirty flag propagation appeared to be unnecessary in the batch mode; because the RooFitDriver manages the evaluation of nodes, but some nodes; have internal computation graphs that rely on the dirty flag; propagation, notably the integrals of a RooAbsAnaConvPdf. This fixes some stressRooFit tests wit the RooFit batchmode:; ```; Test 21 : Conditional use of per-event error p.d.f. F(t|dt)......OK; Test 28 : P.d.f. marginalization through integration.............OK; ```. The only tests that still needs to be fixed now is:; ```; Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)...............FAILED; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9458:369,error,error,369,https://root.cern,https://github.com/root-project/root/pull/9458,2,['error'],['error']
Availability,Disable Oracle on OS X to prevent linking errors.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/563:42,error,errors,42,https://root.cern,https://github.com/root-project/root/pull/563,1,['error'],['errors']
Availability,"Disable rf316_llratioplot.py which is failing on Windows with the following error:; ```; Unhandled exception at 0x55176657 (libcppyy3_8.pyd) in python.exe: 0xC00000FD: Stack overflow (parameters: 0x00000000, 0x01002000); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8679:76,error,error,76,https://root.cern,https://github.com/root-project/root/pull/8679,1,['error'],['error']
Availability,"Disable the rcanvas/rbox.py test which is failing with the following errors:; ```; Start 993: tutorial-rcanvas-rbox-py. 993: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python39-32/python.exe^C:/Users/bellenot/git/master/tutorials/launcher.py^C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"" ""-DSYS=C:/Users/bellenot/build/release"" ""-DENV=ROOTSYS=C:/Users/bellenot/build/release#PYTHONPATH=C:/Users/bellenot/build/release/bin#PYTHIA8DATA=C:/Users/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:69,error,errors,69,https://root.cern,https://github.com/root-project/root/pull/9035,1,['error'],['errors']
Availability,"Disabled not-allowed methods in derived classes (TH2,TH3) by making them protected, this will avoid calling them at run time and now one gets a compile error instead of a run time error as before. ; Unfortunately one cannot prevent calling these methods when using a base class pointer (e.g. TH1 for a TH2). IN that case a run time error will be produced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4427:152,error,error,152,https://root.cern,https://github.com/root-project/root/pull/4427,3,['error'],['error']
Availability,"Discovered when running `stressGUI`:; - Fix a couple of PATHs in `stressGUI.cxx`; - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`; - Fix the following error with `tutorials/gui/Slider3Demo.C`:; ```; tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8388:213,error,error,213,https://root.cern,https://github.com/root-project/root/pull/8388,2,['error'],['error']
Availability,Distrdf histoxd nomodel error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10368:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/10368,1,['error'],['error']
Availability,Distributed RDataFrame test failures on Mac/ARM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10061:28,failure,failures,28,https://root.cern,https://github.com/root-project/root/issues/10061,1,['failure'],['failures']
Availability,"Do not allow to start sandbox or zygote processes, disable extensions.; Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8420:165,error,errors,165,https://root.cern,https://github.com/root-project/root/pull/8420,1,['error'],['errors']
Availability,Do not diagnose instantiation failures during function lookup.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/940:30,failure,failures,30,https://root.cern,https://github.com/root-project/root/pull/940,1,['failure'],['failures']
Availability,Do not draw error bars when they are smaller than the marker.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16372:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/16372,1,['error'],['error']
Availability,"Doing in a empty build directory; ```; cmake -Dminimal=ON $ROOT_SRC_DIR; cmake -Dbuiltin_xrootd=ON .; ```; fails with:; ```; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:924 (target_link_libraries):; The link interface of target ""XRootD"" contains:. OpenSSL::SSL. but the target was not found. Possible reasons include:. * There is a typo in the target name.; * A find_package call is missing for an IMPORTED target.; * An ALIAS target is missing. Call Stack (most recent call first):; CMakeLists.txt:305 (include); ```; while on the same machine and in another empty directory doing just:; ```; cmake -Dbuiltin_xrootd=ON .; ```. The difference between the two case is that the `ssl` variable usually default to `ON` but in the minimal case it default to `OFF` and turning on `builtin_xrootd` does not turn `ssl` back on. The reason why this matters is that `find_package` defaults to declaring its results only inside the parent_scope. In practice we see `find_package` works properly in the top level `CMakeList.txt` and in one level of indirection (typically `cmake/modules/SearchInstalledSoftware.cmake`) but a second level of direction (i.e. inside the `add_subdirectory(builtins/xrootd)` inside `SearchInstalledSoftware.cmake`), it does not work. From https://cmake.org/cmake/help/latest/command/find_package.html we read:. > New in version 3.24: Specifying the GLOBAL keyword will promote all imported targets to a global scope in the importing project. Alternatively, this functionality can be enabled by setting the [CMAKE_FIND_PACKAGE_TARGETS_GLOBAL](https://cmake.org/cmake/help/latest/variable/CMAKE_FIND_PACKAGE_TARGETS_GLOBAL.html#variable:CMAKE_FIND_PACKAGE_TARGETS_GLOBAL) variable. So there is 3 possible solution. 1. Require `CMake` version `3.24` and add the `GLOBAL` keyword where needed (or set the variable); 2. Make sure that `builtin_xrootd` (and any other similar components) to turn `ssl` ON when turned ON; 3. Move the `find_package(OpenSSL) from inside `builti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16374:131,Error,Error,131,https://root.cern,https://github.com/root-project/root/issues/16374,1,['Error'],['Error']
Availability,"Doing:; ```; ctest -R tmva -j 32; ```; will result in an arbitrary result (sometimes pass sometime fail) for; ```; gtest-tmva-pymva-TestRModelParserKeras; gtest-tmva-pymva-TestRModelParserPyTorch ; ```; re-running just those tests (whether they succeeded or not) will lead to both of them failing.; The failure report is indicate that they 'now' need the BLAS library (which is not available on the system). As a possible clue (or not), the following 3 test fails systemically on the system due to the missing BLAS library:; ```; 996 - tutorial-tmva-TMVA_SOFIE_GNN_Application (Failed); 1000 - tutorial-tmva-TMVA_SOFIE_RDataFrame (Failed); 1002 - tutorial-tmva-TMVA_SOFIE_RSofieReader (Failed); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16719:303,failure,failure,303,https://root.cern,https://github.com/root-project/root/issues/16719,2,"['avail', 'failure']","['available', 'failure']"
Availability,"Don't check the Minos output code, because if the Minos errors are; at the limit, Minuit2 will return nonzero, unlike Minuit 1.; This case where the errors are at limit should not cause a failure; though. The `stressRooStats` test suite actively provokes it, by fitting; a dataset with a single observed value that corresponds to a best-fit; parameter value at the limit. With these changes, the `stressRooStats` suite will also pass with; Minuit2 and BatchMode, which is now added as a unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13925:56,error,errors,56,https://root.cern,https://github.com/root-project/root/pull/13925,3,"['error', 'failure']","['errors', 'failure']"
Availability,"Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7342:103,error,error,103,https://root.cern,https://github.com/root-project/root/pull/7342,2,['error'],['error']
Availability,Double delete error with TTree::ChangeFile and a TFile on the stack,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6527:14,error,error,14,https://root.cern,https://github.com/root-project/root/issues/6527,1,['error'],['error']
Availability,"Due to a change on Mac, [ and ] in the names of RooFit objects had to be; replaced by \\[ and \\] to be used in regexes. This will fix the failures in the nightlies that suddenly popped up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6508:139,failure,failures,139,https://root.cern,https://github.com/root-project/root/pull/6508,1,['failure'],['failures']
Availability,"Due to a pythonization not yet carried from old to experimental PyROOT, multiple calls of the same object from a TFile done e.g in the usual way `file.object` used to retrieve copies of the same object, leading to the failure of a test.; The pythonization of the TDirectoryFile:Get() method was thus added; in this way, also the TFile class inherits it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4148:218,failure,failure,218,https://root.cern,https://github.com/root-project/root/pull/4148,1,['failure'],['failure']
Availability,"Due to faulty logic, we were using different RDefine objects for; each systematic variation even if the define itself did not depend; on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10622:7,fault,faulty,7,https://root.cern,https://github.com/root-project/root/pull/10622,1,['fault'],['faulty']
Availability,Due to pymva being automatically built with tmva and depending on numpy it was possible to configuration due to missing the package (and fail-on-missing being enabled). This patch introduces a switch in the cmake configuration to allow independently disabling pymva. Warning: Did _not_ try building yet (hoping the CI system will take care of that). Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=off`:; ```; -- Looking for python; -- Looking for numpy (python package); -- TMVA: numpy not found for python /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python. Switching off tmva-pymva option; ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=on -Dfail-on-missing=on`:; ```; -- Looking for python; -- Looking for numpy (python package); CMake Error at cmake/modules/SearchInstalledSoftware.cmake:467 (message):; TMVA: numpy python package not found and tmva-pymva component required; (python executable:; /Users/ashlaban/.local/share/virtualenvs/root-conf-test-qZnOX_ZL/bin/python); ```. Relevant output for `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=on` and `cmake ../root-src -DPYTHON_EXECUTABLE=$(which python) -Dtmva-pymva=off -Dfail-on-missing=off`:; ```; ```. Meaning in these cases it configures without issue.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2972:872,Error,Error,872,https://root.cern,https://github.com/root-project/root/pull/2972,1,['Error'],['Error']
Availability,"Due to the way it works by default, sourcing a root version built with; current pyroot was failing, due to the fact that operations such as:. for pyroot_libs_dir in ${old_rootsys}/lib/python*. were performed both in experimental and current. In zsh, if a path specified with '*' is not found, an error like the; following is raised:. clean_environment:20: no matches found: zsh_build/lib/python*. and the program aborts, without sourcing anything. With these change, such loops are performed only if root is built with; pyroot experimental.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4693:296,error,error,296,https://root.cern,https://github.com/root-project/root/pull/4693,1,['error'],['error']
Availability,"Dummy test PR to check if we can reproduce the same test failures in https://github.com/root-project/root/pull/4592 , which seem unrelated to the PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4595:57,failure,failures,57,https://root.cern,https://github.com/root-project/root/pull/4595,1,['failure'],['failures']
Availability,Duplicating Cling_Runtime and Cling_Runtime_Extra in both module.modulemap; and module.modulemap.build causes redefinition errors if -Dbuiltin_clang=Off.; We should not duplicate the cling runtime modules in both modulemaps.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3587:123,error,errors,123,https://root.cern,https://github.com/root-project/root/pull/3587,1,['error'],['errors']
Availability,"E.g. if we have Fedora36 with no-imt and Fedora37 with imt, we see a failure in 37, we want to confirm that Fedora 36 work (or not) with imt. Ideally `/build on Fedora36 with -Dimt-Off` (or whatever bot syntax)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12465:69,failure,failure,69,https://root.cern,https://github.com/root-project/root/issues/12465,1,['failure'],['failure']
Availability,"E.g.; ```python; df.Display(..., variations=[""nominal"", ""pt:up"", ""pt:down""]); ```; could display. ```; pt | pt (pt:up) | pt (pt:down) |; -------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9894:69,down,down,69,https://root.cern,https://github.com/root-project/root/issues/9894,2,['down'],['down']
Availability,"EDIT: to merge if nightlies are green for master. This resolves ROOT-9456, ""[Jenkins][DF] Sporadic failures in test_snapshotNFiles"". The issue is due to interleaved TBB task execution in the same thread. When nested task spawning is present (i.e. when TBB tasks spawn other; TBB tasks and the thread pool contains at least three threads), the TBB; task stealing mechanism makes it possible that a thread starts executing; a new instance of the ""parent"" tasks before it finishes the execution of; the previous parent task (this happens when the thread is waiting for a; ""stolen"" child task to finish, so it steals another threads' parent; task). In the case of a multi-thread snapshot, one needs to write at least two; branches for the multi-thread branch writing to kick in and have nested; task spawning. The crash was caused by a new parent task overwriting the output TTree; of the previous parent task in a given thread. When the previous parent; task resumed execution, it ended up trying to flush out the contents of; the deleted output TTree. The solution adopted is to use thread-local stacks of output TTrees (as; opposed to single output TTrees), that tasks push and pop when they; start and finish respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2228:99,failure,failures,99,https://root.cern,https://github.com/root-project/root/pull/2228,1,['failure'],['failures']
Availability,"EP/Root/build/include/RtypesCore.h:28:10: note: submodule of top-level module 'std' implicitly imported here; #include <cstddef> // size_t, NULL; ^; In file included from input_line_3:2:; /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:29:; In file included from <module-includes>:1:; /home/razorr/Softwares/Installed/HEP/Root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/string_view:40:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/char_traits.h:39:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/stl_algobase.h> // std::copy, std::fill_n; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:20600,error,error,20600,https://root.cern,https://github.com/root-project/root/issues/10528,1,['error'],['error']
Availability,"EXPECT_EQ(A, B) gives more informative errors on failures than EXPECT_TRUE(A == B).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14514:39,error,errors,39,https://root.cern,https://github.com/root-project/root/pull/14514,2,"['error', 'failure']","['errors', 'failures']"
Availability,"E_WEBSOCKET -DUSE_X_DOM_SOCKET -DNO_SSL -DHTTP_WITHOUT_FASTCGI -compilerI/usr/include/c++/14.1.1 -compilerI/usr/include/c++/14.1.1/x86_64-pc-linux-gnu -compilerI/usr/include/c++/14.1.1/backward -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include -compilerI/usr/local/include -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/include-fixed -compilerI/usr/include -I/root/builddir/include -I/usr/include -I/root/net/http/inc -I/root/core/unix/../clib/res -I/root/core/unix/inc -I/usr/include -I/root/core/zstd/inc -I/root/core/lz4/inc -I/root/core/lzma/inc -I/root/core/zip/inc -I/root/core/thread/inc -I/root/core/textinput/src -I/root/core/textinput/inc -I/root/core/rint/inc -I/root/core/meta/inc -I/root/core/gui/inc -I/root/core/foundation/res -I/root/core/foundation/v7/inc -I/root/core/foundation/inc -I/root/core/cont/inc -I/root/core/clingutils/res -I/root/core/clingutils/inc -I/root/core/clib/inc -I/root/core/base/v7/inc -I/root/core/base/inc -I/root/builddir/ginclude -I/root/io/io/v7/inc -I/root/io/io/inc -I/root/core/clib/res THttpCallArg.h THttpEngine.h THttpServer.h THttpWSHandler.h TRootSniffer.h TRootSnifferStore.h /root/net/http/inc/LinkDef.h; Segmentation fault; ```; I haven't tried with `lld` to see if it also doesn't build. This is certainly not very important, but I'm reporting here in case someone else finds this. EDIT: `lld` works fine for me. ### Reproducer; ``` bash; # Install mold and have it available in PATH, for example in /usr/bin; export LDFLAGS=""-fuse-ld=mold""; # from the root source; mkdir builddir; cd builddir; cmake .. DCMAKE_CXX_STANDARD=20 -Dminimal=ON -G Ninja; ninja; ```. ### ROOT version. master, any recent one also doesn't work. ### Installation method. Build from source. ### Operating system. Linux (Arch). ### Additional context. I'm compiling with GCC 13 and 14",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15473:2122,fault,fault,2122,https://root.cern,https://github.com/root-project/root/issues/15473,2,"['avail', 'fault']","['available', 'fault']"
Availability,"Each module has a set of identifier tables which aid lookup. Based on this information clang decides if it needs a declaration to be deserialized. Namespace partitions and other C++ entities may have semantically the same identifier lookup tables across multiple modules. Since lookup is a heavily used operation in compilers clang tries to optimize it as much as possible. In case it sees more than 4 such lookup tables it merges them together into a single table aiming to keep the lookup algorithmic complexity of O(1). This logic approach has several assumptions:; * The progam will use only a small superset of the modules it needs;; * The program will be compiled in multiple TUs and merging of tables will not be called often;. In the interpreter context where we make all module available the merging of such tables becomes CPU intense operation at runtime which produces a lot of temporary reallocations. Moreover, we have seen a lot of profiles where the merging operation dominates (by around 18%). This patch tries to make the merging far less often. On some short benchmarks ran locally we get (70-80%) runtime improvement and ~10% reduction in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4761:787,avail,available,787,https://root.cern,https://github.com/root-project/root/pull/4761,1,['avail'],['available']
Availability,"Each module has a set of identifier tables which aid lookup. Based on this; information clang decides if it needs a declaration to be deserialized. Namespace partitions and other C++ entities may have semantically the same; identifier lookup tables across multiple modules. Since lookup is a heavily used; operation in compilers clang tries to optimize it as much as possible. In case; it sees more than 4 such lookup tables it merges them together into a single; table aiming to keep the lookup algorithmic complexity of O(1). This logic approach has several assumptions:; * The progam will use only a small superset of the modules it needs;; * The program will be compiled in multiple TUs and merging of tables will not; be called often;. In the interpreter context where we make all module available the merging of; such tables becomes CPU intense operation at runtime which produces a lot of; temporary reallocations. Moreover, we have seen a lot of profiles where the; merging operation dominates (by around 18%). This patch tries to make the merging far less often. On some short benchmarks ran; locally we get (70-80%) runtime improvement and ~10% reduction in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4774:793,avail,available,793,https://root.cern,https://github.com/root-project/root/pull/4774,1,['avail'],['available']
Availability,Edited grammatical errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1792:19,error,errors,19,https://root.cern,https://github.com/root-project/root/pull/1792,1,['error'],['errors']
Availability,"Either the interpreter knows them, or we alias them to `void`.; Just as before, the end result is that if users return a type; that is unknown to the interpreter from a Define, and then try; to read that Define'd column from jitted RDF nodes, the interpreter; (and consequently RDF) errors out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3539:283,error,errors,283,https://root.cern,https://github.com/root-project/root/pull/3539,2,['error'],['errors']
Availability,"Either the interpreter knows them, or we alias them to `void`.; Just as before, the end result is that if users return a type; that is unknown to the interpreter from a Define, and then try; to read that Define'd column from jitted RDF nodes, the interpreter; (and consequently RDF) errors out. This is missing a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3542:283,error,errors,283,https://root.cern,https://github.com/root-project/root/pull/3542,1,['error'],['errors']
Availability,"Enable `-Wredundant-parens`, to warn about redundant parentheses in declarators whose parsing might not match the user intent, e.g.; ```; root [0] int i = 1;; root [1] (bool)i; (bool) true; root [2] bool(i); ROOT_prompt_1:1:5: redundant parentheses surrounding declarator [-Wredundant-parens]; bool(i); ^~~; (bool) false; ```. For more information see the discussion [here](http://github.com/root-project/issues/8304).; This PR fixes issue #8304.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8555:43,redundant,redundant,43,https://root.cern,https://github.com/root-project/root/pull/8555,2,['redundant'],['redundant']
Availability,Enable again the usage of ROOT error messages (TError) in Minuit2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6059:31,error,error,31,https://root.cern,https://github.com/root-project/root/pull/6059,1,['error'],['error']
Availability,"Enabled when configured with `root --web` or `root --web=on`; It tries to use local displays like CEF or Qt6 or Qt5 first. ; If not available, try to use detected ""native"" browsers like Chrome or Firefox. ; All these display kinds provides comfortable window management which are very like to normal windows.; Only if none of this will work default system web browser will be started - as it was up to now. Extend TROOT::SetWebDisplay() docu and `root --help` output",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15313:132,avail,available,132,https://root.cern,https://github.com/root-project/root/pull/15313,1,['avail'],['available']
Availability,End axis value passed as attribute in Shape is included. So a +1 was missing when computing the output tensor length. This PR should fix the failure observed in the TestCustomModelFromONNX,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11389:141,failure,failure,141,https://root.cern,https://github.com/root-project/root/pull/11389,1,['failure'],['failure']
Availability,"Enrico originally reported that the following macro; ```c++; #include <map>; #include <string>. void repro_modules_crash() {; std::map<std::string, bool> m{{""foo"", true}, {""bar"", false}};; }; ```; when executed as `root -l repro_modules_crash.C` gives the following errors with a `Debug` build on Arch Linux:; ```; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:256:12: error: instantiation of 'std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, bool> >' is different in different modules; struct _Rb_tree_iterator; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:315:7: error: redefinition of 'operator=='; operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_tree.h:1102:24: note: in instantiation of template class 'std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char>, bool> >' requested here; _M_insert_unique_(end(), *__first, __an);; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_map.h:232:14: note: in instantiation of function template specialization 'std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, bool>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, bool> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, bool> > >::_M_insert_range_unique<const std::pair<const std::__cxx11::basic_string<char>, bool> *>' requested here; { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }; ^; /home/blue/Scratchpad/work/forum_rvec_crash_2/repro_modules_crash.C:2:31: note: in instantiation of member function 'std::map<std::__cxx11::basic_string<char>, bool, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10291:266,error,errors,266,https://root.cern,https://github.com/root-project/root/issues/10291,3,['error'],"['error', 'errors']"
Availability,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12644:640,error,error,640,https://root.cern,https://github.com/root-project/root/issues/12644,7,"['Error', 'error']","['Error', 'error']"
Availability,Error 400 while creating a `TWebFile`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8890:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/8890,1,['Error'],['Error']
Availability,Error at the prompt may lead to the JIT not finding std::basic_ostream symbol,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14788:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/14788,1,['Error'],['Error']
Availability,Error compile with gcc14 on spack,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16384:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/16384,1,['Error'],['Error']
Availability,Error creating SqliteDataFrame,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9231:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/9231,1,['Error'],['Error']
Availability,Error in <TCollectionLessSTLReader::GetCP()> in the multithreaded loop over Friend column with RDataFrame,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9106:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/9106,1,['Error'],['Error']
Availability,Error in <TGLWidget::CreateWindow>: No good OpenGL visual found!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6774:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/6774,1,['Error'],['Error']
Availability,Error in REveBox.cxx while building root 6.26.04,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10814:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/10814,1,['Error'],['Error']
Availability,Error in `TInterpreter::Calc` with no output stack in seemingly random distributed rdf test execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/11515,1,['Error'],['Error']
Availability,Error in modulemap.overlay,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8157:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/8157,1,['Error'],['Error']
Availability,Error in navigation with tessellated volumes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13039:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/13039,1,['Error'],['Error']
Availability,Error message when opening a GDML with TEveManager,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7987:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/7987,1,['Error'],['Error']
Availability,Error opening remote root file LCG_100,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/8155,1,['Error'],['Error']
Availability,"Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result; * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:; https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11768:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/11768,1,['Error'],['Error']
Availability,Error parsing payload for dictionary with std::pair,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/15221,1,['Error'],['Error']
Availability,Error pickling derived class in PyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8438:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/8438,1,['Error'],['Error']
Availability,"Error reading custom class object from file with ROOT 6.22,24",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/8268,1,['Error'],['Error']
Availability,Error value and context of call to FT_Set_Char_Size in TTF::SetTextSize should be in error message,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14592:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/14592,2,"['Error', 'error']","['Error', 'error']"
Availability,Error when building ROOT v6.26.00 from source:; ```; <<< cling interactive line includer >>>: fatal error: module file '/Users/Paul/Documents/local/src/rootBuild/lib/Rint.pcm' is out of date and needs to be rebuilt: could; not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/Users/Paul/Documents/local/src/rootBuild/lib/MathCore.pcm'; ```; See the description given [on the forum](https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/10),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10271:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/10271,3,"['Error', 'error']","['Error', 'error', 'error-rint-pcm-is-out-of-date-cannot-read-module-signature']"
Availability,Error when opening/creating new file via Davix-S3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9584:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/9584,1,['Error'],['Error']
Availability,Error when using a specific pattern of conditional inclusion of <span> with C++17,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13032:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/13032,1,['Error'],['Error']
Availability,Error while building module 'std' imported from input_line_1:1:...,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/issues/13450,1,['Error'],['Error']
Availability,Error() on an invalid SetEntriesRange().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1258:0,Error,Error,0,https://root.cern,https://github.com/root-project/root/pull/1258,1,['Error'],['Error']
Availability,Errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7256:0,Error,Errors,0,https://root.cern,https://github.com/root-project/root/issues/7256,1,['Error'],['Errors']
Availability,Errors during the generation of html docs; no TTree docs generated,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295:0,Error,Errors,0,https://root.cern,https://github.com/root-project/root/issues/7295,1,['Error'],['Errors']
Availability,Errors with chi2FitTo in a new RooFit version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15196:0,Error,Errors,0,https://root.cern,https://github.com/root-project/root/issues/15196,1,['Error'],['Errors']
Availability,Eve-7: Improvements in error handling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9492:23,error,error,23,https://root.cern,https://github.com/root-project/root/pull/9492,1,['error'],['error']
Availability,"Eve7: fix compiler warning, fix in JS error checks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2924:38,error,error,38,https://root.cern,https://github.com/root-project/root/pull/2924,1,['error'],['error']
Availability,"Even for the ErrorOut case the Transaction should be flagged as beyond; kCompleted, to prevent it from being asserted on as ""we have transaction; without errors that was not committed"" in ~IncrementalParser().",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5732:13,Error,ErrorOut,13,https://root.cern,https://github.com/root-project/root/pull/5732,2,"['Error', 'error']","['ErrorOut', 'errors']"
Availability,"Even though cloning the constraint term is technically only required when the computation graph is changed because global observables are taken from data, it is safer to clone the constraint model in general to reset the normalization integral caches and avoid ASAN build failures (the PDF of the main measurement is cloned too anyway, so not much overhead). This can be reconsidered after the caching of normalization sets by pointer is changed to a more memory-safe solution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11669:272,failure,failures,272,https://root.cern,https://github.com/root-project/root/pull/11669,1,['failure'],['failures']
Availability,"Even though it's build and can be found in the build directory, it's not installed anymore. xrdcp is the default way to download files through the CLI, so I'd vote for having it back as part of the ROOT installation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7441:120,down,download,120,https://root.cern,https://github.com/root-project/root/issues/7441,1,['down'],['download']
Availability,Example failure:. 562/1224 Test #541: tutorial-gl-gltf3 ...................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.36 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/gl/gltf3.C...; Error in <TList::Delete>: A list is accessing an object (0x7fffd1c959a0) already deleted (list name = Functions); Error in <TList::Delete>: A list is accessing an object (0x7fffd1c95750) already deleted (list name = Functions). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10310:8,failure,failure,8,https://root.cern,https://github.com/root-project/root/pull/10310,5,"['Error', 'failure']","['Error', 'failure']"
Availability,"Example with TH1F, for reproducibility, but happens for any class accessed via ROOT. >>> class MyClass(ROOT.TH1F):; ... ""My Class""; ... ; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; KeyError: 'UpdateBinContent'. The variable with the KeyError is always the variable last in the list of private data members. ; This error appears on lxplus, CentOS Linux 7 (Core), gcc version 7.3.0, CXXFLAGS=-fPIC -g -O2 -std=c++17. This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856:344,error,error,344,https://root.cern,https://github.com/root-project/root/issues/6856,2,['error'],['error']
Availability,Executables that are compiled with fPIE means they are compiled in a position independent manner and are almost indistinguishable from the shared objects. A reasonably reliable way to find if this was a `pie executable` is to check the `DF_1_PIE` in the dynamic section of ELF. The pseudo-code is:; ```; if DT_FLAGS_1 dynamic section entry is present; if DF_1_PIE is set in DT_FLAGS_1:; print pie executable; else; print shared object; ```; ; See https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/34522357#34522357. Fixes #7366. Patch by Alexander Penev (@alexander-penev),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9404:168,reliab,reliable,168,https://root.cern,https://github.com/root-project/root/pull/9404,1,['reliab'],['reliable']
Availability,"Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:280: Failure; Expected equality of these values:; 42; *fieldCast; Which is: 180388626432; [ FAILED ] RNTuple.Casting (56 ms); [ RUN ] RNTuple.TClass; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:19537,Failure,Failure,19537,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Failure'],['Failure']
Availability,Explicitly include `arrow/testing/builder.h` to make sure ArrayFromVector is available. Probably it was being included implicitly before.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11575:77,avail,available,77,https://root.cern,https://github.com/root-project/root/pull/11575,2,['avail'],['available']
Availability,"Export RooSimultaneous channels as dictionary of names instead of having; the full pdf specification as the value. This change is done because all pdfs should be specified in the; top-level `pdf` structure. The code of the `RooJSONFactoryWSTool` is also refactored such that; `exportObject` doesn't need to take the node where is should put the; object. It's better if it figures out itself to avoid errors when; calling it. Also, I suggest to not strip the `model_` prefix of the name from the; pdf that specifies a HistFactory channel. Otherwise, the name values in; the RooSimultaneous don't match anymore, which is a problem now that we; use names as values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10791:400,error,errors,400,https://root.cern,https://github.com/root-project/root/pull/10791,1,['error'],['errors']
Availability,"Extra checks for nullptr, exclude unused variables.; Last commit - bugfix in error code handling; Closing #7425",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7442:77,error,error,77,https://root.cern,https://github.com/root-project/root/pull/7442,1,['error'],['error']
Availability,"F1(const char* name, double xmin, double xmax, int npar, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2 (a float is required); TF1::TF1(const char* name, const char* formula, double xmin = 0, double xmax = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault, bool vectorize = false) =>; TypeError: could not convert argument 2 (expected string or Unicode object, function found); TF1::TF1(const char* name, ROOT::Math::ParamFunctorTempl<double> f, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(Double_t*,Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; TF1::TF1(const char* name, Double_t(*)(const Double_t*,const Double_t*) fcn, double xmin = 0, double xmax = 1, int npar = 0, int ndim = 1, TF1::EAddToList addToGlobList = EAddToList::kDefault) =>; TypeError: could not convert argument 2; Failed to instantiate ""TF1(std::string,function,int,double)""; ``` . <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. dev3ptython2 LCG slot (ROOT v6.25/01) ; 2. lxplus.cern.ch ; 3. ; ```; ( source /cvmfs/sft.cern.ch/lcg/views/LCG_100/${CMTCONFIG}/setup.sh ; python test.py ); ```. ### Additional context; <!--; Add any other context about the problem here.; -->. It worked for all previous versions of ROOT in all released LCG slots; and it works also for dev3 and decv3python39 LCG slots",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152:3222,down,download,3222,https://root.cern,https://github.com/root-project/root/issues/8152,1,['down'],['download']
Availability,"F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]; 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]; 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]; 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]; 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:8037,error,error,8037,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,Failure in `TClass::GetMethodWithPrototype`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11930:0,Failure,Failure,0,https://root.cern,https://github.com/root-project/root/issues/11930,1,['Failure'],['Failure']
Availability,Failure to build master branch due to xrootd SHA256 checksum mismatch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10503:0,Failure,Failure,0,https://root.cern,https://github.com/root-project/root/issues/10503,1,['Failure'],['Failure']
Availability,Failure to build/run when MACOSX_DEPLOYMENT_TARGET is set to 11 or higher,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524:0,Failure,Failure,0,https://root.cern,https://github.com/root-project/root/issues/9524,1,['Failure'],['Failure']
Availability,"Failure to write std::vector<std::array<T, N> > into a tree/branch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12007:0,Failure,Failure,0,https://root.cern,https://github.com/root-project/root/issues/12007,1,['Failure'],['Failure']
Availability,"Failures due to ""incompatible ASan runtimes""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10017:0,Failure,Failures,0,https://root.cern,https://github.com/root-project/root/issues/10017,1,['Failure'],['Failures']
Availability,Failures with root 6.24.00 on Fedora 33 ppc64le,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072:0,Failure,Failures,0,https://root.cern,https://github.com/root-project/root/issues/8072,1,['Failure'],['Failures']
Availability,"Fatal error after running ""make install"" when built against LLVM 9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6,error,error,6,https://root.cern,https://github.com/root-project/root/issues/7055,1,['error'],['error']
Availability,Fatal error during std::stable sort of TTreeReaderArray,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:6,error,error,6,https://root.cern,https://github.com/root-project/root/issues/13314,1,['error'],['error']
Availability,Faulty logic in TMVA::DataLoader::AddDataset,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14433:0,Fault,Faulty,0,https://root.cern,https://github.com/root-project/root/issues/14433,1,['Fault'],['Faulty']
Availability,Fedora 32 test failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6331:15,failure,failures,15,https://root.cern,https://github.com/root-project/root/issues/6331,1,['failure'],['failures']
Availability,"Fields with collections (e.g., vectors) need to be resized from event to event. The exact semantics of that operations needs to be refined for collections with complex objects. Some thoughts:. - Existing elements in a collection are overwritten by reading the data of the next event. They are not destructed and recreated.; - If the collection shrinks, the left-over elements need to be destructed to prevent memory leaks at the end of the event loop; - If the collection grows, the new elements need to be default constructed; the collection may need to move to a new memory location, in which case we should find a way to call copy/move constructor of the complex elements.; - For efficiency, `RField` should know whether its type is trivially destructible and whether there is a copy/move constructor available . See also: https://github.com/root-project/root/pull/8770#issuecomment-1106514234",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10520:804,avail,available,804,https://root.cern,https://github.com/root-project/root/issues/10520,1,['avail'],['available']
Availability,"FileExtension> > > const&, bool, cling::Interpreter const*) () from /home/geonwoo/root/lib/libCling.so; #16 0x00007fd7ce21b224 in TCling::TCling(char const*, char const*, char const* const*) () from /home/geonwoo/root/lib/libCling.so; #17 0x00007fd7ce21ceea in CreateInterpreter () from /home/geonwoo/root/lib/libCling.so; #18 0x00007fd7d1edeb13 in TROOT::InitInterpreter() () from /home/geonwoo/root/lib/libCore.so.6.22; #19 0x00007fd7d1edf00f in ROOT::Internal::GetROOT2() () from /home/geonwoo/root/lib/libCore.so.6.22; #20 0x00007fd7d1eebdcd in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/geonwoo/root/lib/libCore.so.6.22; #21 0x00007fd7d2263f0f in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/geonwoo/root/lib/libRint.so.6.22; #22 0x0000561a6211b174 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; i installed root from homepage, ; ```; $ wget https://root.cern/download/root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ tar -xzvf root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ source root/bin/thisroot.sh # also available: thisroot.{csh,fish,bat}; ```; i finished these steps and finally i had tried to excute root by $root and then this error message had poped up . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1.latest version 2. oracle VM VirtualBox in window 10 3.i don't know i just followed steps from cern homepage. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859:9603,down,download,9603,https://root.cern,https://github.com/root-project/root/issues/6859,4,"['avail', 'down', 'error']","['available', 'download', 'error']"
Availability,Filter doesn't display command line option `-js` and `-nodraw` in the description anymore. Tutorials now use `gROOT->GetTutorialsDir()` to access tutorial files. converttonotebooks now displays an error message that is picked up by jenkins when nbconvert fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/209:197,error,error,197,https://root.cern,https://github.com/root-project/root/pull/209,1,['error'],['error']
Availability,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11207:947,error,error,947,https://root.cern,https://github.com/root-project/root/issues/11207,2,['error'],['error']
Availability,"First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp; #include <TFile.h>; #include <TNtuple.h>; #include <iostream>. int main() {; TFile f0(""o1.root"");; TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");; std::cout << ""No clone:\n"";; B2L->GetEntry(0);; std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue; TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());; f1.cd();; std::cout << ""Clone:\n"";; B2Lc->GetEntry(0);; std::cout << ""done\n"";; return 0;; }; ```; prints; ```; No clone:; done; Clone:; Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero; Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero; Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0; done; ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9757:592,Error,Error,592,https://root.cern,https://github.com/root-project/root/issues/9757,5,"['Error', 'recover']","['Error', 'recover']"
Availability,"First reported here: https://bugs.gentoo.org/793002. To reproduce, it should be enough to configure with; ```; $ cmake .. -DCMAKE_C_COMPILER=gcc-11.1.0 -DCMAKE_CXX_COMPILER=g++-11.1.0 -DCMAKE_CXX_STANDARD=11 -Dminimal=ON; ```; to reproduce the error below; ```; Consolidate compiler generated dependencies of target Foundation_Stage1; [ 18%] Building CXX object core/foundation/CMakeFiles/Foundation_Stage1.dir/src/RConversionRuleParser.cxx.o; In file included from /srv/root/src/root/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h:545,; from /srv/root/src/root/core/foundation/inc/ROOT/RStringView.hxx:26,; from /srv/root/src/root/core/foundation/inc/TClassEdit.h:65,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:18:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h: In member function ‘constexpr std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::size_type std::experimental::__ROOT::basic_string_view<_CharT, _Traits>::max_size() const’:; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:87: error: expected primary-expression before ‘>’ token; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^; /srv/root/src/root/core/foundation/inc/ROOT/libcpp_string_view.h:275:90: error: ‘::max’ has not been declared; did you mean ‘std::max’?; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~; | std::max; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/11.1.0/include/g++-v11/algorithm:62,; from /srv/root/src/root/core/foundation/res/TSchemaRuleProcessor.h:15,; from /srv/root/src/root/core/foundation/src/RConversionRuleParser.cxx:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8281:244,error,error,244,https://root.cern,https://github.com/root-project/root/issues/8281,1,['error'],['error']
Availability,"First reported on the forum at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639 . Minimal reproducer:. ```cpp; #include <Math/Vector4D.h>; #include <ROOT/RDataFrame.hxx>. float TakeMVector(ROOT::Math::PtEtaPhiMVector &) { return 4.2; }. int main() {; ROOT::RDataFrame df(""Tree"", ""example_file.root"");. df.Define(""unused"", ""L""); // the failure disappears if this is commented out, even if ""unused"" is never used. auto dff4 = df.Define(""x"", TakeMVector, {""L""});; dff4.Max<float>(""x"").GetValue();; }; ```. with the input file at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639/3?u=eguiraud . The program errors out with:. ```; The branch L contains data of type ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >. It cannot be accessed by a TTreeReaderValue<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >>; ```. (so TTreeReaderValue cannot read a `LorentzVector<PtEtaPhiM4D<Double32_t>>` as a `LorentzVector<PtEtaPhiM4D<double>>`). The following patch by @Axel-Naumann seems to fix the problem:. ```diff; diff --git a/tree/treeplayer/src/TTreeReaderValue.cxx b/tree/treeplayer/src/TTreeReaderValue.cxx; index 2323cffee4..6d938f1b14 100644; --- a/tree/treeplayer/src/TTreeReaderValue.cxx; +++ b/tree/treeplayer/src/TTreeReaderValue.cxx; @@ -554,7 +554,8 @@ void ROOT::Internal::TTreeReaderValueBase::CreateProxy() {; auto branchActualTypeAsClass = dynamic_cast<TClass*>(branchActualType);; auto inheritance = dictAsClass && branchActualTypeAsClass && branchActualTypeAsClass->InheritsFrom(dictAsClass);. - if (fDict != branchActualType && !inheritance) {; + if (fDict != branchActualType && !inheritance; + && dictAsClass->GetTypeInfo() != branchActualTypeAsClass->GetTypeInfo()) {; TDataType *dictdt = dynamic_cast<TDataType*>(fDict);; TDataType *actualdt = dynamic_cast<TDataType*>(branchActualType);; bool complainAboutMismatch = true;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12334:369,failure,failure,369,https://root.cern,https://github.com/root-project/root/issues/12334,2,"['error', 'failure']","['errors', 'failure']"
Availability,"Fits using bin integrals or fits of ThnSparse where not working in multi-thread mode due to a usage of the non thread-safe function BinData::BinUpEdge; This was showing by failures of bin integral fits and thnsparse fits in the stressHIstoFit.cxx when running with ROOT MT. . This PR fixes this issues. Improvements have been done also for stressHIstoFit such as adding an option ""-t"" to run the tes in MT mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5626:172,failure,failures,172,https://root.cern,https://github.com/root-project/root/pull/5626,1,['failure'],['failures']
Availability,Fix (hopefully) a compilation error of TCsvDS.cxx on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1203:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/1203,1,['error'],['error']
Availability,Fix CMake error with the latest version of Arrow,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11681:10,error,error,10,https://root.cern,https://github.com/root-project/root/pull/11681,1,['error'],['error']
Availability,Fix CMake errors on non-english systems (ROOT-8917).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/780:10,error,errors,10,https://root.cern,https://github.com/root-project/root/pull/780,1,['error'],['errors']
Availability,"Fix Cocoa GUI for MacOS14 and Clang15. . The following collection of patches was provided by Timur Pocheptsoff <tpochep@mail.ru>. - [x] Fix TBrowser ""white window""; - [x] Fix TBrowser text editor (it does not echo text until the window is resized); - [x] Fix the OpenGL viewer. Fixes https://github.com/root-project/root/issues/13834",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13885:209,echo,echo,209,https://root.cern,https://github.com/root-project/root/pull/13885,1,['echo'],['echo']
Availability,Fix CompressionTests compilation errors on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1289:33,error,errors,33,https://root.cern,https://github.com/root-project/root/pull/1289,1,['error'],['errors']
Availability,Fix CoreBaseTests failure on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7265:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/7265,1,['failure'],['failure']
Availability,Fix Error Descriptor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1491:4,Error,Error,4,https://root.cern,https://github.com/root-project/root/pull/1491,1,['Error'],['Error']
Availability,Fix Error Descriptor in `TTreeReaderValue::Get()` Function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1491:4,Error,Error,4,https://root.cern,https://github.com/root-project/root/pull/1491,1,['Error'],['Error']
Availability,Fix Error Location on TH1.cxx Error Statements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1504:4,Error,Error,4,https://root.cern,https://github.com/root-project/root/pull/1504,2,['Error'],['Error']
Availability,Fix Error/Info/Warning Descriptors on TGraph/TH1/TMultiGraph,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1496:4,Error,Error,4,https://root.cern,https://github.com/root-project/root/pull/1496,2,['Error'],['Error']
Availability,Fix IncrementalExecutor error with TExecutor::GetPoolSize() on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7037:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/7037,1,['error'],['error']
Availability,Fix Mac compilation error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8563:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/8563,1,['error'],['error']
Availability,Fix Math tutorials when libMathmore is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8288:43,avail,available,43,https://root.cern,https://github.com/root-project/root/pull/8288,1,['avail'],['available']
Availability,"Fix ROOT-10837 (and technically it is a completion of the fix for ROOT-9393).; See allow commit f8897bb49c2fc81e875a7fd70dec9f1f714e6398 and 6ad1a98455bec01ccfce6ea9ddde62154bedf1a4. Seen with CMS NanoAOD files: https://root-forum.cern.ch/t/merge-nanoaod-root-files/39707/13; When the files have several array branches using the same ""leaf count"" branch and the maximum array size increase from file to file, only the memory allocated for the ""first"" array is extended. This results in memory error for the other arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5844:493,error,error,493,https://root.cern,https://github.com/root-project/root/pull/5844,1,['error'],['error']
Availability,"Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever; there was a problem reading the StreamerInfo record and; introduces a useless attempt to read from file in the case; of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread; scalability the override ability of TFile::GetStreamerInfoList; is replaced by an override of TFile::GetStreamerInfoListImp with; updated return type and arguments. If a class override; TFile::GetStreamerInfoList you will now see a compilation error like:; {code}; /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function; virtual TList *GetStreamerInfoList();; ^; /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here; virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl; ^; {code}. Instead you need to override the protected method:. {code}; InfoListRet GetStreamerInfoListImpl(bool lookupSICache);; {code}. which can be implemented as; {code}; InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {; ROOT::Internal::RConcurrentHashColl::HashValue hash;; TList *infolist = nullptr;; //; // Body of the former Derived::GetStreamerInfoList with the; // return statement replaced with something like:. // The second element indicates success or failure of the load.; // (i.e. {nullptr, 0, hash} indicates the list has already been processed; // {nullptr, 1, hash} indicates the list failed to be loaded; return {infolist, 0, hash};; }; {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2725:603,error,error,603,https://root.cern,https://github.com/root-project/root/pull/2725,3,"['error', 'failure']","['error', 'failure']"
Availability,Fix RVec masking,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12400:9,mask,masking,9,https://root.cern,https://github.com/root-project/root/pull/12400,1,['mask'],['masking']
Availability,Fix RVec masking (v6.28),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12411:9,mask,masking,9,https://root.cern,https://github.com/root-project/root/pull/12411,1,['mask'],['masking']
Availability,Fix [this issue](https://github.com/root-project/root/issues/9514). The change inserts a new line in the SVG file before the <\text> tag. This avoids the syntax error the user sees when inserting a very long text.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14590:161,error,error,161,https://root.cern,https://github.com/root-project/root/pull/14590,1,['error'],['error']
Availability,"Fix `mt201_parallelHistoFill.C` failing with the following error:; ```; 779: Processing C:/root-dev/git/master/tutorials/multicore/mt201_parallelHistoFill.C...; 779: [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { ?_Swap@?$_Ptr_base@VTH1F@@@std@@IEAAXAEAV12@@Z,; [...]; 779: [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __orc_init_func.cling-module-9 }) }; 779: cling JIT session error: Failed to materialize symbols: { (main, { ?mt201_parallelHistoFill@@YAHXZ }) }; 779: CMake Error at C:/root-dev/build/x64/debug/RootTestDriver.cmake:232 (message):; 779: error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14786:59,error,error,59,https://root.cern,https://github.com/root-project/root/pull/14786,8,"['Error', 'error']","['Error', 'error']"
Availability,Fix `rf204b_extendedLikelihood_rangedFit.C` error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6009:44,error,error,44,https://root.cern,https://github.com/root-project/root/pull/6009,1,['error'],['error']
Availability,Fix a bug in computation of Minos errors when a parameter is bounded,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5899:34,error,errors,34,https://root.cern,https://github.com/root-project/root/pull/5899,1,['error'],['errors']
Availability,Fix a compilation error on Win64,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11478:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/11478,1,['error'],['error']
Availability,"Fix a crash with `test-stressmathmore-interpreted` and fix the following `gtest-tree-ntuple-v7-test-ntuple-types` error on Windows with VS 2022:; ```; 361: [ RUN ] RNTuple.UnsupportedStdTypes; 361: C:\Users\sftnight\git\master\tree\ntuple\v7\test\ntuple_types.cxx(68): error: Value of: err.what(); 361: Expected: has substring ""std::pair<int,float> is not supported""; 361: Actual: 0E870D50 pointing to ""pair<int,float> is not supported\nAt:\n __thiscall ROOT::Experimental::RClassField::RClassField(class std::basic_string_view<char,struct std::char_traits<char> >,class std::basic_string_view<char,struct std::char_traits<char> >,class TClass *) [C:\\Users\\sftnight\\git\\master\\tree\\ntuple\\v7\\src\\RField.cxx:773]\n"" (of type char const *); 361: [ FAILED ] RNTuple.UnsupportedStdTypes (3 ms); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9813:114,error,error,114,https://root.cern,https://github.com/root-project/root/pull/9813,2,['error'],['error']
Availability,"Fix a debug assertion failure ""can't decrement vector iterator before begin""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13324:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/13324,1,['failure'],['failure']
Availability,"Fix a debug assertion failure `can't dereference value-initialized vector iterator` ; With and empty vector, `vector::begin() == vector::end()` and one cannot dereference end(), [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13322:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/13322,1,['failure'],['failure']
Availability,Fix a debug assertion failure on Windows when running stressgraphics,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13584:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/13584,1,['failure'],['failure']
Availability,"Fix a debug assertion failure with `vector iterators incompatible` error on Windows in debug mode.; In `std::vector<Float_t>::const_iterator it = ev->GetValues().begin()`, `it` is initialised to `GetValues().begin()` and is then compared by `!=` to `GetValues().end()`. But `getValue()` returns a vector by value, not by reference, so it returns a copy, which means that every time we call `getValue()`, we get a different vector, so we get incompatible iterators. For the compiler, this does not make any difference. Type safety does not help, two iterators which belong to different container instances have the same type, so the code compiles. At run time, however, additional checks are made to ensure that two iterators that are being compared really belong to the same container object. (As explained [here](https://stackoverflow.com/questions/32978410/debug-assertion-vector-iterators-incompatible-c))",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13321:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/13321,2,"['error', 'failure']","['error', 'failure']"
Availability,Fix a streaming error in TRandom1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8948:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/8948,1,['error'],['error']
Availability,Fix according to: https://root-forum.cern.ch/t/redundant-argument-in-tgraphpolar/40368,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6067:47,redundant,redundant-argument-in-tgraphpolar,47,https://root.cern,https://github.com/root-project/root/pull/6067,1,['redundant'],['redundant-argument-in-tgraphpolar']
Availability,Fix an access violation error when using `fscanf` on Windows 64 bit:; ```; 243: Processing C:/Users/sftnight/git/master/test/stressGraphics.cxx...; 243: **********************************************************************; 243: * Starting Graphics - S T R E S S suite *; 243: **********************************************************************; 243: * Starting Basic Graphics - S T R E S S *; 243: **********************************************************************; 243: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:227 (message):; 243: error code: Access violation; 243:; 243:; 1/1 Test #243: test-stressgraphics-interpreted ...***Failed 4.33 sec; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9959:24,error,error,24,https://root.cern,https://github.com/root-project/root/pull/9959,3,"['Error', 'error']","['Error', 'error']"
Availability,Fix an assertion failure on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13321:17,failure,failure,17,https://root.cern,https://github.com/root-project/root/pull/13321,1,['failure'],['failure']
Availability,Fix an error when generating the Unuran dictionary on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2910:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/2910,1,['error'],['error']
Availability,Fix another assertion failure on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13322:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/13322,1,['failure'],['failure']
Availability,Fix assertion failure on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7326:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/pull/7326,1,['failure'],['failure']
Availability,Fix client error if event is switched while elements were previously selected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9175:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/9175,1,['error'],['error']
Availability,Fix compilation error C2131: expression did not evaluate to a constan…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1805:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/1805,1,['error'],['error']
Availability,Fix compilation error due to a change merged before.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5349:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/5349,1,['error'],['error']
Availability,Fix compilation error in rbrowsable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12126:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/12126,1,['error'],['error']
Availability,Fix compilation error of TBB with the coming soon Visual Studio 2022 (using MSBuild instead of devenv) and silence a couple of deprecation warnings with `-std:c++17`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9084:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/9084,1,['error'],['error']
Availability,Fix compilation error of ntuple_types on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10839:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/10839,1,['error'],['error']
Availability,Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11782:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/11782,1,['error'],['error']
Availability,Fix compilation error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1150:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/1150,6,['error'],['error']
Availability,Fix compilation error on Windows (sleep is _sleep),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1602:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/1602,1,['error'],['error']
Availability,Fix compilation error with -std:c++20,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12643:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/12643,1,['error'],['error']
Availability,Fix compilation error with the `/permissive-` flag on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9630:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/9630,1,['error'],['error']
Availability,Fix compilation errors and disable JupyROOT on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1118:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/1118,1,['error'],['errors']
Availability,Fix compilation errors in win32gdk (typos) and winnt (interface changes),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1093:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/1093,1,['error'],['errors']
Availability,Fix compilation errors of ROOT v7 on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1252:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/1252,1,['error'],['errors']
Availability,Fix compilation errors on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1092:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/1092,5,['error'],['errors']
Availability,Fix compilation errors on windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9037:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/9037,1,['error'],['errors']
Availability,Fix compilation errors with -std:c++20 on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12474:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/12474,1,['error'],['errors']
Availability,Fix compilation errors with the `/permissive-` compiler flag on Windo…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9613:16,error,errors,16,https://root.cern,https://github.com/root-project/root/pull/9613,1,['error'],['errors']
Availability,"Fix compilation of dataframe-resptr test on RHEL/EPEL 7 using the default compiler (gcc 4.8.5) and the gtest library provided by the system (gtest 1.6.0) instead of the bundled one. Error message with the original sources:; ````; In file included from /usr/include/gtest/gtest.h:57:0,; from /builddir/build/BUILD/root-6.14.00/tree/dataframe/test/dataframe_resptr.cxx:2:; /builddir/build/BUILD/root-6.14.00/tree/dataframe/test/dataframe_resptr.cxx: In member function 'virtual void RResultPtr_ImplConv_Test::TestBody()':; /builddir/build/BUILD/root-6.14.00/tree/dataframe/test/dataframe_resptr.cxx:48:4: error: no matching function for call to 'testing::AssertionResult::AssertionResult(ROOT::RDF::RResultPtr<TH1D>&)'; EXPECT_TRUE(m);; ^; /builddir/build/BUILD/root-6.14.00/tree/dataframe/test/dataframe_resptr.cxx:48:4: note: candidates are:; In file included from /builddir/build/BUILD/root-6.14.00/tree/dataframe/test/dataframe_resptr.cxx:2:0:; /usr/include/gtest/gtest.h:271:12: note: testing::AssertionResult::AssertionResult(bool); explicit AssertionResult(bool success) : success_(success) {}; ^; /usr/include/gtest/gtest.h:271:12: note: no known conversion for argument 1 from 'ROOT::RDF::RResultPtr<TH1D>' to 'bool'; /usr/include/gtest/gtest.h:269:3: note: testing::AssertionResult::AssertionResult(const testing::AssertionResult&); AssertionResult(const AssertionResult& other);; ^; /usr/include/gtest/gtest.h:269:3: note: no known conversion for argument 1 from 'ROOT::RDF::RResultPtr<TH1D>' to 'const testing::AssertionResult&'; ````",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2263:182,Error,Error,182,https://root.cern,https://github.com/root-project/root/pull/2263,2,"['Error', 'error']","['Error', 'error']"
Availability,"Fix compile error (happening with `DEV=on` due to missing include):. ```; /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'; TIter next(arr);; ^ ~~~; /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument; TIter(const TCollection *col, Bool_t dir = kIterForward); ^; /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument; TIter(TIterator *it) : fIterator(it) { }; ^; /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument; TIter(const TIter &iter);; ^; /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided; TIter() : fIterator(nullptr) { }; ^; /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]; delete arr;; ^ ~~~; /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'; class TObjArray;; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16072:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/16072,3,['error'],['error']
Availability,Fix compile error in GenVector,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1692:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/1692,1,['error'],['error']
Availability,Fix documentation error (Bytecount in RootFile layout),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3252:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/3252,1,['error'],['error']
Availability,Fix doxygen errors for code complete.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/204:12,error,errors,12,https://root.cern,https://github.com/root-project/root/pull/204,1,['error'],['errors']
Availability,Fix doxygen errors or inconsistencies,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9593:12,error,errors,12,https://root.cern,https://github.com/root-project/root/pull/9593,1,['error'],['errors']
Availability,Fix either (in `RelWithDebInfo` mode):; ```; datasource_more.cxx : fatal error C1001: Internal compiler error.; ```; Or (in `Debug` mode):; ```; datasource_more.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10141:73,error,error,73,https://root.cern,https://github.com/root-project/root/pull/10141,3,['error'],['error']
Availability,Fix error handling in pyroot for python 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1005:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/1005,1,['error'],['error']
Availability,Fix error in TGaxis::ChangeLabelByValue docu macro [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15009:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/15009,2,['error'],['error']
Availability,Fix error in python version of principal,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1475:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/1475,1,['error'],['error']
Availability,Fix error message in Brent root finder algorithm ( used by TF1::GetX),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5076:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/5076,1,['error'],['error']
Availability,Fix error with auto-enabled builtin GLEW with CMake 3.15 and above,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4158:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/4158,1,['error'],['error']
Availability,Fix error: . `/usr/local/include/module.modulemap:14:8: error: redefinition of module ROOT_Config. module ROOT_Config [system] {`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4512:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/4512,2,['error'],['error']
Availability,Fix error: redefinition of module 'TSAXParser.h' for cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2668:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/2668,1,['error'],['error']
Availability,Fix error: reference VecOps is ambiguous in cxxmodules (clang 5.0.1),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2706:4,error,error,4,https://root.cern,https://github.com/root-project/root/pull/2706,1,['error'],['error']
Availability,Fix errors due to unresolved GetPoolSize,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/7033,1,['error'],['errors']
Availability,Fix errors in THttpServer tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3489:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/3489,1,['error'],['errors']
Availability,Fix errors in documentation about dictionary generations [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8164:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/8164,1,['error'],['errors']
Availability,Fix errors with GCC 6.1.1 and Python 3.5,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/173:4,error,errors,4,https://root.cern,https://github.com/root-project/root/pull/173,1,['error'],['errors']
Availability,Fix execution policy error when IMT is OFF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/871:21,error,error,21,https://root.cern,https://github.com/root-project/root/pull/871,1,['error'],['error']
Availability,Fix faulty behaviour with cloned varied actions and filters,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13161:4,fault,faulty,4,https://root.cern,https://github.com/root-project/root/pull/13161,1,['fault'],['faulty']
Availability,Fix for ROOT-9030 - Several notebook tutorials show errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1485:52,error,errors,52,https://root.cern,https://github.com/root-project/root/pull/1485,1,['error'],['errors']
Availability,Fix for error if include_directories are empty,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1808:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/1808,1,['error'],['error']
Availability,Fix for failing test (too strict tolerances for floating point values),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/511:33,toler,tolerances,33,https://root.cern,https://github.com/root-project/root/pull/511,1,['toler'],['tolerances']
Availability,Fix for problem reported on the [forum](https://root-forum.cern.ch/t/tformula-error-while-importing-gdml-file-in-root6/30345),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2574:78,error,error-while-importing-gdml-file-in-,78,https://root.cern,https://github.com/root-project/root/pull/2574,1,['error'],['error-while-importing-gdml-file-in-']
Availability,"Fix for stressGraphics.ref. On RHEL/EPEL 7:; ```; Test 10: TLatex 4 (Greek letters).................................. OK; PDF output................................................ OK; GIF output......................................... 10 FAILED; Result = 13517; Reference = 14622; Error = 1105 (was 1100); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; ```; On Fedora 24:; ```; Test 10: TLatex 4 (Greek letters).................................. OK; PDF output................................................ OK; GIF output......................................... 10 FAILED; Result = 13509; Reference = 14622; Error = 1113 (was 1100); JPG output................................................ OK; PNG output................................................ OK; C file result............................................. OK; ```; The results were off by just 5 and 13 bytes more, respectively, than the current allowed limit. For Fedora 25, 26 and 27 no error was triggered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/659:283,Error,Error,283,https://root.cern,https://github.com/root-project/root/pull/659,3,"['Error', 'error']","['Error', 'error']"
Availability,Fix format warnings/errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/376:20,error,errors,20,https://root.cern,https://github.com/root-project/root/pull/376,1,['error'],['errors']
Availability,"Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5; Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7392:94,error,error,94,https://root.cern,https://github.com/root-project/root/pull/7392,1,['error'],['error']
Availability,Fix gSystem->Load() failure caused by recent macOS default,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1360:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/1360,1,['failure'],['failure']
Availability,Fix gcc13 errors in llvm and cling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12086:10,error,errors,10,https://root.cern,https://github.com/root-project/root/pull/12086,1,['error'],['errors']
Availability,"Fix generation of `G__NetxNG.cxx` in paths with special characters, as described on the forum:; https://root-forum.cern.ch/t/6-26-04-build-error-in-debian-bullseye/50412",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10900:139,error,error-in-debian-bullseye,139,https://root.cern,https://github.com/root-project/root/pull/10900,1,['error'],['error-in-debian-bullseye']
Availability,Fix global name not defined errors during documentation generation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/310:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/310,1,['error'],['errors']
Availability,Fix handling of data points error option for a TMultiGraph,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5456:28,error,error,28,https://root.cern,https://github.com/root-project/root/pull/5456,1,['error'],['error']
Availability,Fix hard error when checking if non-common_range is printable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14968:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/14968,1,['error'],['error']
Availability,Fix in tmva-sofie some warnings and compilation errors found with g++ 11,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8691:48,error,errors,48,https://root.cern,https://github.com/root-project/root/pull/8691,1,['error'],['errors']
Availability,Fix installation error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3094:17,error,error,17,https://root.cern,https://github.com/root-project/root/pull/3094,1,['error'],['error']
Availability,"Fix intermittent nightly test failures such as:. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/264/LABEL=ROOT-ubuntu18.04,SPEC=python3/testReport/junit/projectroot.bindings.pyroot_experimental.PyROOT/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4442:30,failure,failures,30,https://root.cern,https://github.com/root-project/root/pull/4442,1,['failure'],['failures']
Availability,Fix invalid pointer error in TRintTests.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8975:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/8975,1,['error'],['error']
Availability,Fix leading whitespace CMake error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/219:29,error,error,29,https://root.cern,https://github.com/root-project/root/pull/219,1,['error'],['error']
Availability,Fix long long error in findBuiltinType,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11388:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/11388,1,['error'],['error']
Availability,Fix long long error in findBuiltinType in v6.24,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11392:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/11392,1,['error'],['error']
Availability,Fix long long error in findBuiltinType in v6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11391:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/11391,1,['error'],['error']
Availability,Fix lookup of Visual Studio directories + improve error messages,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2678:50,error,error,50,https://root.cern,https://github.com/root-project/root/pull/2678,1,['error'],['error']
Availability,Fix mathtext warnings/errors on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13132:22,error,errors,22,https://root.cern,https://github.com/root-project/root/pull/13132,1,['error'],['errors']
Availability,Fix memory allocation failure in Oracle,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4927:22,failure,failure,22,https://root.cern,https://github.com/root-project/root/pull/4927,1,['failure'],['failure']
Availability,Fix minor redundant code in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6253:10,redundant,redundant,10,https://root.cern,https://github.com/root-project/root/pull/6253,1,['redundant'],['redundant']
Availability,Fix off-by-one error in the histogram v7 bin iterator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5958:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/5958,1,['error'],['error']
Availability,Fix ownership error in TTreeFormula,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4152:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/4152,1,['error'],['error']
Availability,Fix potential compilation errors on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10141:26,error,errors,26,https://root.cern,https://github.com/root-project/root/pull/10141,1,['error'],['errors']
Availability,Fix potential startup error messages on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5627:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/5627,1,['error'],['error']
Availability,Fix remaining CI test failures [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12544:22,failure,failures,22,https://root.cern,https://github.com/root-project/root/pull/12544,1,['failure'],['failures']
Availability,Fix roofit compilation errors with std:c++17 on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8789:23,error,errors,23,https://root.cern,https://github.com/root-project/root/pull/8789,1,['error'],['errors']
Availability,Fix rootcling error on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4381:14,error,error,14,https://root.cern,https://github.com/root-project/root/pull/4381,1,['error'],['error']
Availability,Fix several errors found with `eslint` static code analyzer ; Plus many other syntax changes.; Plus important fix for member-wise streamer in std::map,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13581:12,error,errors,12,https://root.cern,https://github.com/root-project/root/pull/13581,1,['error'],['errors']
Availability,Fix std::make_unique compilation errors on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1151:33,error,errors,33,https://root.cern,https://github.com/root-project/root/pull/1151,1,['error'],['errors']
Availability,Fix stressHistogram and ErrorIntegral tutorial for MT (IsImplicitMTEnabled).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5702:24,Error,ErrorIntegral,24,https://root.cern,https://github.com/root-project/root/pull/5702,1,['Error'],['ErrorIntegral']
Availability,Fix stressRooFit #4 avoiding an integral error in fitting. Fixes ROOT-10834,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5860:41,error,error,41,https://root.cern,https://github.com/root-project/root/pull/5860,1,['error'],['error']
Availability,Fix string_view compilation errors on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1089:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/1089,1,['error'],['errors']
Availability,Fix stupid token delimiter error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/330:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/330,1,['error'],['error']
Availability,"Fix test error:; https://epsft-jenkins.cern.ch/job/root-exp-pyroot/62/LABEL=mac1014,SPEC=default/testReport/junit/projectroot.bindings.pyroot_experimental.PyROOT/test/pyunittests_pyroot_pyz_roodatahist_ploton/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3517:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/3517,1,['error'],['error']
Availability,Fix test failure on ppc64le and aarch64 with gcc 12,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9601:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/9601,1,['failure'],['failure']
Availability,Fix test failure on ppc64le and s390x,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15734:9,failure,failure,9,https://root.cern,https://github.com/root-project/root/pull/15734,1,['failure'],['failure']
Availability,Fix test failures observed in TMVA for DNN/GRU,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5327:9,failure,failures,9,https://root.cern,https://github.com/root-project/root/pull/5327,1,['failure'],['failures']
Availability,Fix test tolerance to avoid some failures observed in the last nightly builds ; Do not build cudnn full test for simple RNN when cudnn is not available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5380:9,toler,tolerance,9,https://root.cern,https://github.com/root-project/root/pull/5380,3,"['avail', 'failure', 'toler']","['available', 'failures', 'tolerance']"
Availability,Fix that rootcling magically passes with 256 errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/898:45,error,errors,45,https://root.cern,https://github.com/root-project/root/pull/898,1,['error'],['errors']
Availability,Fix the HistFactory HS3 implementation such that we don't need a large tolerance in the fit result comparisons anymore. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13173:71,toler,tolerance,71,https://root.cern,https://github.com/root-project/root/pull/13173,1,['toler'],['tolerance']
Availability,"Fix the `ntpl002_vector.C`, `ntpl005_introspection.C`, `ntpl006_friends.C`, and `ntpl007_mtFill.C` tutorials failing with the following errors:; ```; Processing ntpl002_vector.C...; IncrementalExecutor::executeFunction: symbol '_Smtx_unlock_shared' unresolved while linking [cling interface function]!; You are probably missing the definition of _Smtx_unlock_shared; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_Smtx_lock_shared' unresolved while linking [cling interface function]!; You are probably missing the definition of _Smtx_lock_shared; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10262:136,error,errors,136,https://root.cern,https://github.com/root-project/root/pull/10262,1,['error'],['errors']
Availability,"Fix the case of using KS test when one of the histogram has zero errors (i.e is a function). Improve KS test adding possibility to specify number of toys by using option ""X=number"" for example ""X=1000"". This PR fixes the issue #13697",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13822:65,error,errors,65,https://root.cern,https://github.com/root-project/root/pull/13822,1,['error'],['errors']
Availability,Fix the compilation error C3493: 'everyN' cannot be implicitly captured because no default capture mode has been specified,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1806:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/1806,1,['error'],['error']
Availability,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10839:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/10839,3,['error'],['error']
Availability,"Fix the following compilation error on Win64:; ```; Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap; In file included from input_line_9:58:; In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:; C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence; this issue; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; static_cast<unsigned long>( ); CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9387:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/9387,5,"['error', 'failure']","['error', 'failure']"
Availability,"Fix the following compilation error on Win64:; ```; ReadSpeed.cxx(334,89): error C2398: Element '1': conversion from 'unsigned __int64' to 'T' requires a narrowing conversion; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11478:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/11478,2,['error'],['error']
Availability,Fix the following compilation error on Windows 64 bit:; ```; hist\histv7\test\constructors.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9255:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/9255,2,['error'],['error']
Availability,Fix the following compilation error on Windows 64:; ```; dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10710:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/10710,2,['error'],['error']
Availability,"Fix the following compilation error on Windows:; ```; testHistFactory.obj : error LNK2019: unresolved external symbol ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl RooFit::tmpPath(void)"" (?tmpPath@RooFit@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V$allocator@D@2@@std@@XZ) referenced in function ""public: virtual void __cdecl HFFixture_ModelProperties_Test::TestBody(void)"" (?TestBody@HFFixture_ModelProperties_Test@@UEAAXXZ); testHistFactory.exe : fatal error LNK1120: 1 unresolved externals; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9640:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/9640,3,['error'],['error']
Availability,Fix the following compilation error with the `-Wpedantic` compiler flag; ```; [81%] Building... ... ... ... error: extra ';' [-Wpedantic]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13888:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/13888,2,['error'],['error']
Availability,"Fix the following compilation errors on Windows:; ```; rfield_vector.obj : error LNK2019: unresolved external symbol ""public: static int ComplexStruct::gNCallConstructor"" (?gNCallConstructor@ComplexStruct@@2HA) referenced in function ""private: virtual void __thiscall RNTuple_ComplexVector_Test::TestBody(void)"" (?TestBody@RNTuple_ComplexVector_Test@@EAEXXZ); rfield_vector.obj : error LNK2019: unresolved external symbol ""public: static int ComplexStruct::gNCallDestructor"" (?gNCallDestructor@ComplexStruct@@2HA) referenced in function ""private: virtual void __thiscall RNTuple_ComplexVector_Test::TestBody(void)"" (?TestBody@RNTuple_ComplexVector_Test@@EAEXXZ); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9155:30,error,errors,30,https://root.cern,https://github.com/root-project/root/pull/9155,3,['error'],"['error', 'errors']"
Availability,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8789:30,error,errors,30,https://root.cern,https://github.com/root-project/root/pull/8789,7,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"Fix the following compilation errors with `-std:c++20` on Windows:; ```; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)' [found using argument-dependent lookup] [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *>,const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *&&)': cannot convert argument 1 from 'const char [5]' to 'const std::basic_format_string<wchar_t,const std::uni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:30,error,errors,30,https://root.cern,https://github.com/root-project/root/pull/12523,2,['error'],"['error', 'errors']"
Availability,"Fix the following error messages displayed when starting ROOT compiled with a different version of Visual Studio than the one installed on the system:; ```; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: error: redefinition of '_CrtEnableIf<true, _Ty>'; struct _CrtEnableIf<true, _Ty>; ^~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:142:12: note: previous definition is here; struct _CrtEnableIf<true, _Ty>; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h:517:16: error: redefinition of '__crt_locale_data_public'; typedef struct __crt_locale_data_public; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\crtdefs.h:10:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:10: note: 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt.h' included multiple times, additional include; site here; ^; In file included from input_line_3:38:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.25.28610\\include\cassert:9:; In file included from C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\assert.h:12:; C:\Program Files (x86)\Window",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5627:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/5627,4,['error'],['error']
Availability,"Fix the following error on Windows:. In file included from input_line_10:1:; C:\Users\sftnight\git\master\tutorials\roofit\rf204b_extendedLikelihood_rangedFit.C:71:13: error: call to constructor of 'RooRealVar' is ambiguous; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0);; ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/sftnight/build/release\include\RooRealVar.h:41:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t minValue,; ^; C:/Users/sftnight/build/release\include\RooRealVar.h:43:3: note: candidate constructor; RooRealVar(const char *name, const char *title, Double_t value,; ^; CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; error code: 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6009:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/6009,4,"['Error', 'error']","['Error', 'error']"
Availability,Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:; ```; RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10672:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/10672,2,['error'],['error']
Availability,"Fix the following error with ACLiC:. input_line_12:8:38: error: use of undeclared identifier 'IC'; ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",; ^; Error in <ACLiC>: Dictionary generation failed!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5222:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/5222,3,"['Error', 'error']","['Error', 'error']"
Availability,Fix the following error with Visual Studio 2019:; ```; error C2440: 'initializing': cannot convert from 'int' to 'std::byte'; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15787:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/15787,2,['error'],['error']
Availability,"Fix the following error with the `/permissive-` compiler flag on Windows; ```; gui\webdisplay\src\RWebDisplayHandle.cxx(288,66): error C2440: 'initializing': cannot convert from 'TString' to 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9630:18,error,error,18,https://root.cern,https://github.com/root-project/root/pull/9630,2,['error'],['error']
Availability,Fix the following errors on Windows:; ```; 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist; 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms); 362: [ RUN ] TOffsetGeneration.primitiveTest; 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied; 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode; 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms); 362: [ RUN ] TOffsetGeneration.elementsTest; 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied; 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode; 362: [ OK ] TOffsetGeneration.elementsTest (136 ms); 362: [----------] 3 tests from TOffsetGeneration (3293 ms total); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9320:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/9320,2,"['Error', 'error']","['Error', 'errors']"
Availability,Fix the following errors when using wilcards in program arguments:; ```; C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root; hadd Target file: hsimple.root; hadd compression setting for all output: 1; hadd Source file 1: hsimple.*.root; Error in <TFile::TFile>: file C:\Users\bellenot\rootdev\hsimple.*.root does not exist; Error in <TFileMerger::AddFile>: cannot open file hsimple.*.root; hadd exiting due to error in hsimple.*.root; ```; and; ```; C:\Users\bellenot\rootdev>root -l *.root; Warning in <TApplication::GetOptions>: file *.root not found; root: unrecognized option '*.root'; Try 'root --help' for more information.; ```. After this fix:; ```; C:\Users\bellenot\rootdev>hadd hsimple.root hsimple.*.root; hadd Target file: hsimple.root; hadd compression setting for all output: 1; hadd Source file 1: hsimple.1.root; hadd Source file 2: hsimple.2.root; hadd Source file 3: hsimple.3.root; hadd Target path: hsimple.root:/; ```; and; ```; C:\Users\bellenot\rootdev>root -l *.root; root [0]; Attaching file hsimple.1.root as _file0...; (TFile *) 0x174a53a6c70; Attaching file hsimple.2.root as _file1...; (TFile *) 0x17499413340; Attaching file hsimple.3.root as _file2...; (TFile *) 0x174a5ecd910; root [3]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9660:18,error,errors,18,https://root.cern,https://github.com/root-project/root/pull/9660,8,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:; ```; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:26,error,error,26,https://root.cern,https://github.com/root-project/root/pull/10247,4,['error'],['error']
Availability,"Fix the isssue with the static constexpr class members of RColor not being properly exported, even with `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS`, and causing the following kind of error, for example when trying to execute the root7 box.cxx macro:; ```; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6157:174,error,error,174,https://root.cern,https://github.com/root-project/root/pull/6157,1,['error'],['error']
Availability,Fix the support in TMVA for GPU (Cuda) when cuDNN is not available (ROOT-10597),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5090:57,avail,available,57,https://root.cern,https://github.com/root-project/root/pull/5090,1,['avail'],['available']
Availability,"Fix this error:; ```; $ python3.12 build/misc/argparse2help.py; /home/blue/ROOT/master-py312/build/misc/argparse2help.py:57: SyntaxWarning: invalid escape sequence '\ '; options = ""\ "".join(listOptions); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12910:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/12910,1,['error'],['error']
Availability,Fix this kind of error message on Windows:; 155: input_line_18:2:19: error: invalid digit 'B' in octal constant; 155: *((std::string*)0B8DCA20) = cling::printValue((int*)0xeff520);*((std::string*)0B8DB9E0) = cling::printValue((int*)0xb8c1250);*((std::string*)0B8DB9F8) = cling::printValue((int*)0xb8c1254);*((std::string*)0B8DBA10) = cling::printValue((int*)0xb8c1258);*((std::string*)0B8DCA50) = cling::printValue((double*)0xeff530);,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2760:17,error,error,17,https://root.cern,https://github.com/root-project/root/pull/2760,2,['error'],['error']
Availability,Fix two CMake errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16465:14,error,errors,14,https://root.cern,https://github.com/root-project/root/pull/16465,1,['error'],['errors']
Availability,Fix type conversion failure in TBufferFile::ReadObjectAny.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8222:20,failure,failure,20,https://root.cern,https://github.com/root-project/root/pull/8222,1,['failure'],['failure']
Availability,"Fix typo in `CompressionSettings()` function declaration to match definition in `Compression.cxx`. Many thanks for reporting @mnowakgit!. This typo caused the following to fail:; ```; root [0] auto c = ROOT::RCompressionSetting::EAlgorithm::kZSTD;; root [1] CompressionSettings(c, 5);; input_line_10:2:3: error: no matching function for call to 'CompressionSettings'; (CompressionSettings(((*(enum ROOT::RCompressionSetting::EAlgorithm::EValues*)0x7f02285f4010)), 5)); ^~~~~~~~~~~~~~~~~~~; /home/jalopezg/_build/include/Compression.h:124:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'RCompressionSetting::EAlgorithm' for 1st argument; int CompressionSettings(RCompressionSetting::EAlgorithm algorithm, int compressionLevel);; ^; /home/jalopezg/_build/include/Compression.h:126:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'ROOT::ECompressionAlgorithm' for 1st argument; int CompressionSettings(ROOT::ECompressionAlgorithm algorithm, int compressionLevel);; ^; ```. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11054:305,error,error,305,https://root.cern,https://github.com/root-project/root/pull/11054,1,['error'],['error']
Availability,"Fix using correct minimizer when computing the profiled nuisance parameters in the FrequentistCalculator. The Frequentist calculator needs to compute , before generating the toys, the profiled values of the nuisances for the nukll and alt case. RooProfileLL is used but the default (Minuit) minimizer was used.; Change now to use the static default value, which can be changed and also give possibility to control printlevel.; With this change we can now consistently use stressRooStats with Minuit2 minimizer. - Increase also tolerance of stressRooStats tests when using toys. This is needed in case a different minimizer is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6195:527,toler,tolerance,527,https://root.cern,https://github.com/root-project/root/pull/6195,1,['toler'],['tolerance']
Availability,Fix y-error bars for TGraphAsymmErrors(TH1),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/880:6,error,error,6,https://root.cern,https://github.com/root-project/root/pull/880,1,['error'],['error']
Availability,Fix yet another assertion failure on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13324:26,failure,failure,26,https://root.cern,https://github.com/root-project/root/pull/13324,1,['failure'],['failure']
Availability,Fixed a compile error corresponding to the addition of the class TGraphMultiErrors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4698:16,error,error,16,https://root.cern,https://github.com/root-project/root/pull/4698,1,['error'],['error']
Availability,"Fixed a faulty loop condition in RooAddModel that lead to a crash in; RoofitUnBinnedBenchmark.; Further, fix the definition of basis functions in RooBMixDecay, which; lead to an info message about not using a parameter in a RooFormulaVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4790:8,fault,faulty,8,https://root.cern,https://github.com/root-project/root/pull/4790,1,['fault'],['faulty']
Availability,Fixed demos.C redefinition error of dirName,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2940:27,error,error,27,https://root.cern,https://github.com/root-project/root/pull/2940,1,['error'],['error']
Availability,"Fixed one missing header error, limited parallel reduction to floats and doubles ¯_(ツ)_/¯",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/279:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/279,1,['error'],['error']
Availability,Fixed redifinition error on 'Compare',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/398:19,error,error,19,https://root.cern,https://github.com/root-project/root/pull/398,1,['error'],['error']
Availability,Fixed several covert errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/384:21,error,errors,21,https://root.cern,https://github.com/root-project/root/pull/384,1,['error'],['errors']
Availability,"Fixed three leaks here:; - TSystem; - Metacling; - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):; [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:; [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:; Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :; Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way.; I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,; - you switch off the mempool; - track down the leak; - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7904:1100,down,down,1100,https://root.cern,https://github.com/root-project/root/pull/7904,1,['down'],['down']
Availability,Fixes #11581 . `std::vector<const char*>` does not provide a `value_type` attribute. This PR makes the pythonization of `std::vector<char>` resilient to the absence of such attribute.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11592:140,resilien,resilient,140,https://root.cern,https://github.com/root-project/root/pull/11592,1,['resilien'],['resilient']
Availability,"Fixes #14157. When building minuit2 standalone with root 6.30/02 (-Dminuit2_standalone=ON), cmake errors out when looking for the version file 'RVersion.hxx' in 'core/foundation/inc/ROOT/RVersion.hxx' whereas it is copied to the top-level dir (i.e. 'math/minuit2/'). This is because the variable VERSION_FILE is incorrectly set to the file path matching the full path of the file. Fixed by setting the parent dir path of 'RVersion.hxx' as the `SOURCE` in `copy_standalone()` so that `VERSION_FILE` is set to just the base file name. # This Pull request:. ## Changes or fixes: commit 27082fb. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #14157",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14160:98,error,errors,98,https://root.cern,https://github.com/root-project/root/pull/14160,1,['error'],['errors']
Availability,Fixes #6743 ROOT crashes with no helpful error messages if a TApplication is not present and tree->StartViewer() is called. Now it prints the following warning:; ```; Warning in <TTreePlayer::StartViewer>: The tree viewer cannot run in batch mode; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6752:41,error,error,41,https://root.cern,https://github.com/root-project/root/pull/6752,1,['error'],['error']
Availability,"Fixes #8750 . To support this usecase we need to send the distributed workers also the names of the subtrees in the main chain. At this point we might want to think of a bit of a reworking of the data structures like `ChainCluster` and `FileAndIndex`, plus I would like to make the function `get_clusters` return less redundant info (currently each cluster also reports the name of the file, the name of the tree and the number of entries which are all the same for clusters belonging to the same file). These improvements are left for the next PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8858:318,redundant,redundant,318,https://root.cern,https://github.com/root-project/root/pull/8858,1,['redundant'],['redundant']
Availability,"Fixes #8828; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16540:166,Error,Error,166,https://root.cern,https://github.com/root-project/root/pull/16540,1,['Error'],['Error']
Availability,Fixes Windows patch error.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12833:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/12833,1,['error'],['error']
Availability,Fixes [ROOT-8741](https://sft.its.cern.ch/jira/browse/ROOT-8741). The error happens when the source directory is a symlink.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1523:70,error,error,70,https://root.cern,https://github.com/root-project/root/pull/1523,1,['error'],['error']
Availability,"Fixes [these](http://cdash.cern.ch/testDetails.php?test=51845718&build=557493) kind of build errors due to missing file. @Axel-Naumann Are the tutorial as well run in the CI/ nightlies? Since the file has 1.5GB, this could create some traffic to http://root.cern.ch/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2562:93,error,errors,93,https://root.cern,https://github.com/root-project/root/pull/2562,1,['error'],['errors']
Availability,"Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:; - using GCC 13.2.0 on Ubuntu 24.04; - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`; - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests.; If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16141:999,error,error,999,https://root.cern,https://github.com/root-project/root/pull/16141,1,['error'],['error']
Availability,"Fixes a previously fatal runtime error when trying to initialize a `cudaMatrix` with zeroes. The previous implementation was trying to assign directly into a raw pointer to device memory, which is undefined behavior. The fixed implementations creates the array of zeroes in host memory and then copies to device.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2208:33,error,error,33,https://root.cern,https://github.com/root-project/root/pull/2208,1,['error'],['error']
Availability,"Fixes a segfault that surfaced during #6008 (trying to merge `RNTuple` objects). . `RNTuple` doesn't inherit from `TObject`, so `ReadObj` ends up passing a null pointer to `ReadObjectAny`. ; We add a null check to `ReadObjectAny` and return `0` if `ReadObj` is called on classes that don't inherit from `TObject`. . Before: ; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/. *** Break *** segmentation violation; ```. After:; ```shell; ../bin/hadd -f merged.root ntuple1.root ntuple2.root; hadd Target file: merged.root; hadd compression setting for all output: 1; hadd Source file 1: ntuple1.root; hadd Source file 2: ntuple2.root; hadd Sources and Target have different compression levels; hadd merging will be slower; hadd Target path: merged.root:/; Error in <TKey::ReadObj>: class ROOT::Experimental::RNTuple does not derive from TObject, call ReadObjectAny instead; Info in <TFileMerger::MergeRecursive>: could not read object for key {ntuple, }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6016:1033,Error,Error,1033,https://root.cern,https://github.com/root-project/root/pull/6016,1,['Error'],['Error']
Availability,Fixes compilation with xrootd v4:. ```; /Users/veprbl/root/net/netxng/src/TNetXNGFile.cxx:670:26: error: no member named 'GetDataServer' in 'XrdCl::File'; URL dataServer(fFile->GetDataServer());; ~~~~~ ^; 1 error generated.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/54:98,error,error,98,https://root.cern,https://github.com/root-project/root/pull/54,2,['error'],['error']
Availability,Fixes error about missing dictionary for function type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5515:6,error,error,6,https://root.cern,https://github.com/root-project/root/pull/5515,1,['error'],['error']
Availability,"Fixes for Python 3.7. * PyROOT_PyUnicode_AsString changed return type from char* to const char*; * Using _PyObject_GC_TRACK results in linking error:; undefined reference to `_PyGC_generation0'; The python documentation says this about _PyObject_GC_TRACK:; ""A macro version of PyObject_GC_Track(). It should not be used for extension modules.""; So it should not be used. Calling PyObject_GC_Track instead avoids the undefined symbol. I also removed the #ifndef R__WIN32 since the comment indicates that this was added to avoid the same issue on windows. Calling PyObject_GC_Track instead of using the _PyObject_GC_TRACK macro should fix the undefined symbol probelem on windows too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2276:143,error,error,143,https://root.cern,https://github.com/root-project/root/pull/2276,1,['error'],['error']
Availability,"Fixes for bug ROOT-1036 (FitResult::Scan); When fitting histograms a shared_pointer of FitData must be passed to the Fitter class, in Fitter::Fit( data,...) functions instead of a row pointer !; This fixes the shared ownership of the fitting data between the Fitter and the FitResult classes and avoid that the data are deleted when exiting TH1::Fit. ; One can then use FitResult::Scan , FitResult::Contour or FitResult::GetConfidenceIntervals.; Before the data were accidentally not deleted, when multi-thread wad not enabled, because in that case a reference for the data was kept in the global TVirtualFitter class, available only in non-mt mode/. This PR also fixes the case of bin integral fit in multithreading. The problem was caused by using the GSL integrator from Mathmore. . testFit has been improved by adding test for FitResult::Scan and tests for multi-threading fitting",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4557:619,avail,available,619,https://root.cern,https://github.com/root-project/root/pull/4557,1,['avail'],['available']
Availability,Fixes for the following test failures:; https://github.com/root-project/root/pull/4766#issuecomment-573859694,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4795:29,failure,failures,29,https://root.cern,https://github.com/root-project/root/pull/4795,1,['failure'],['failures']
Availability,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z) [C:\; root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z) [C:\root-dev\build\x86\release\co; re\metacling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z) [C:\root-dev\build\x86\release\core\met; acling\src\Cling.vcxproj]; libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z) [C:; \root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals [C:\root-dev\build\x86\release\core\metacling\src\Cling.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15860:87,error,errors,87,https://root.cern,https://github.com/root-project/root/pull/15860,6,['error'],"['error', 'errors']"
Availability,"Fixes https://github.com/root-project/root/issues/15336; Fix the following compilation errors with Visual Studio v17.10 on x86; ```; libCling.exp : error LNK2001: unresolved external symbol ""char const * __cdecl __std_find_trivial<char const ,char>(char const *,char const *,char)"" (??$__std_find_trivial@$$CBDD@@YAPBDPBD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""char * __cdecl __std_find_trivial<char,char>(char *,char *,char)"" (??$__std_find_trivial@DD@@YAPADPAD0D@Z); libCling.exp : error LNK2001: unresolved external symbol ""int * __cdecl __std_find_trivial<int,int>(int *,int *,int)"" (??$__std_find_trivial@HH@@YAPAHPAH0H@Z); libCling.exp : error LNK2001: unresolved external symbol ""unsigned int * __cdecl __std_find_trivial<unsigned int,int>(unsigned int *,unsigned int *,int)"" (??$__std_find_trivial@IH@@YAPAIPAI0H@Z); C:\root-dev\build\x86\release\bin\libCling.dll : fatal error LNK1120: 4 unresolved externals; ```. **To be backported to 6.32**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15855:87,error,errors,87,https://root.cern,https://github.com/root-project/root/pull/15855,6,['error'],"['error', 'errors']"
Availability,"Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6582:144,error,error,144,https://root.cern,https://github.com/root-project/root/pull/6582,1,['error'],['error']
Availability,"Fixes https://github.com/root-project/root/issues/6616. While looking into this, I noticed that the `newcomp` variable is passed down the line to `TFileMerger::OutputFile`, which is declared at https://github.com/root-project/root/blob/master/io/io/inc/TFileMerger.h#L115 with a wrongly named parameter `compressionLevel`. That is in fact the full compression setting integer. Maybe the logic in `hadd` was misguided by the parameter name, I can take care of that in a separate PR. Sibling roottest PR at https://github.com/root-project/roottest/pull/1074",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14873:129,down,down,129,https://root.cern,https://github.com/root-project/root/pull/14873,1,['down'],['down']
Availability,"Fixes https://github.com/root-project/root/issues/8850. May still need polishing, will add test if logic is approved. With this commit, when `root` receives an unrecognized options it prints an error (similar to other linux commands errors) and exits before showing the prompt. ```; $ root --nonexistingoption; Error in <TApplication::GetOptions>: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; $ cp --nonexistingoption; cp: unrecognized option '--nonexistingoption'; Try 'cp --help' for more information.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8868:194,error,error,194,https://root.cern,https://github.com/root-project/root/pull/8868,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,Fixes importing `JupyROOT` when `CMAKE_INSTALL_PYTHONDIR` is set to the standard site-packages directory. Fixes the failure seen in this build of the conda nightly:. https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/99/console. The builds after 100 include this patch and work as expected. (The new failure in [`roottest_python_JupyROOT_ROOT_kernel_notebook`](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/101/testReport/projectroot.python/JupyROOT/roottest_python_JupyROOT_ROOT_kernel_notebook/) is a bug in `metakernel` that is fixed by https://github.com/Calysto/metakernel/pull/214.),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6248:116,failure,failure,116,https://root.cern,https://github.com/root-project/root/pull/6248,2,['failure'],['failure']
Availability,"Fixes issue #8284 where TKeys with the same name as the requested RNTuple; would be attempted to be parsed as an RNTuple, leading to internal; parser assert failures later on. e.g.; ```cpp; // actually holds a TTree named ""Events""; auto reader = RNTupleReader::Open(""Events"", ""test80X_NANO.root"");; ```. Internal error before: ; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```. Exception thrown after: ; ```; C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8285:157,failure,failures,157,https://root.cern,https://github.com/root-project/root/pull/8285,2,"['error', 'failure']","['error', 'failures']"
Availability,"Fixes probably (**!**) the failure here: http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=494701. I've enforced `unsigned long` as type for `index_sequence_for`, which seems not to hold true on 32bit. `std::size_t` should resolve to the correct type on all systems ([Doc](http://en.cppreference.com/w/cpp/utility/integer_sequence)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1914:27,failure,failure,27,https://root.cern,https://github.com/root-project/root/pull/1914,1,['failure'],['failure']
Availability,Fixes some of the test failures of the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2885:23,failure,failures,23,https://root.cern,https://github.com/root-project/root/pull/2885,1,['failure'],['failures']
Availability,"Fixes the errors currently seen when building for conda. After the build `pyc` files are generated and this step fails for some of the tutorials with the following errors:; ```; compiling .pyc files...; File ""tutorials/pyroot/gui_ex.py"", line 20; print 'returning 0'; ^; SyntaxError: Missing parentheses in call to 'print'. Did you mean print('returning 0')?. File ""tutorials/pyroot/parse_CSV_file_with_TTree_ReadStream.py"", line 92; print ""Outputting %s -> %s"" % (afile, output_ROOT_file_name); ^; SyntaxError: invalid syntax. Sorry: TabError: inconsistent use of tabs and spaces in indentation (ROOTwriter.py, line 63); File ""tutorials/histfactory/makeQuickModel.py"", line 114; print ""It seems that pyROOT isn't properly configured""; ^; SyntaxError: Missing parentheses in call to 'print'. Did you mean print(""It seems that pyROOT isn't properly configured"")?. Sorry: TabError: inconsistent use of tabs and spaces in indentation (writer.py, line 123); number of files: 6175; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4752:10,error,errors,10,https://root.cern,https://github.com/root-project/root/pull/4752,2,['error'],['errors']
Availability,"Fixes the following error on Windows with macros containing Windows line endings (CR/LF):; ```; Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",; file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7326:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/7326,1,['error'],['error']
Availability,"Fixes the following error when building:; ```; /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx: In member function ‘void TClingCallFunc::exec(void*, void*)’:; /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TClingCallFunc.cxx:1539:20: error: ‘this’ pointer is null [-Werror=nonnull]; 1539 | ::Error(""TClingCallFunc::exec(void*)"",; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 1540 | ""Invalid type '%s'"", BT->getTypeClassName());; ```. Co-authored-by: Vassil Vassilev <v.g.vassilev@gmail.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11257:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/11257,3,"['Error', 'error']","['Error', 'error']"
Availability,Fixes the following potential error when building clad:; ```; Command failed: 2; ‘/usr/local/bin/cmake’ ‘–build’ ‘.’ ‘–config’ ‘.’; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16247:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/16247,1,['error'],['error']
Availability,Fixes the following test failures. The following tests FAILED:; 	 71 - mathcore-SparseDataComparer (Failed); 	 72 - mathcore-SparseFit4 (Failed); 	 73 - mathcore-SparseFit3 (Failed); 	149 - test-stresshistogram (Failed); 	150 - test-stresshistogram-interpreted (Failed); 	169 - test-stresshistofit (Failed); 	170 - test-stresshistofit-interpreted (Failed); Errors while running CTest,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5159:25,failure,failures,25,https://root.cern,https://github.com/root-project/root/pull/5159,2,"['Error', 'failure']","['Errors', 'failures']"
Availability,"Fixes the following warning with CMake 3.24:; ```; CMake Warning (dev) at /usr/share/cmake/Modules/ExternalProject.cmake:3071 (message):; The DOWNLOAD_EXTRACT_TIMESTAMP option was not given and policy CMP0135 is; not set. The policy's OLD behavior will be used. When using a URL; download, the timestamps of extracted files should preferably be that of; the time of extraction, otherwise code that depends on the extracted; contents might not be rebuilt if the URL changes. The OLD behavior; preserves the timestamps from the archive instead, but this is usually not; what you want. Update your project to the NEW behavior or specify the; DOWNLOAD_EXTRACT_TIMESTAMP option with a value of true to avoid this; robustness issue.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11231:280,down,download,280,https://root.cern,https://github.com/root-project/root/pull/11231,4,"['down', 'robust']","['download', 'robustness']"
Availability,Fixes the issue raised in the [forum](https://root-forum.cern.ch/t/error-bars-drawn-in-wrong-place-if-setlogx/37507?u=mwilkins) where error bars were drawn in the wrong place if using a log scale in x.; Resolves the [JIRA task](https://sft.its.cern.ch/jira/browse/ROOT-10505).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4755:67,error,error-bars-drawn-in-wrong-place-if-setlogx,67,https://root.cern,https://github.com/root-project/root/pull/4755,2,['error'],"['error', 'error-bars-drawn-in-wrong-place-if-setlogx']"
Availability,"Fixes the method-independent macros available from TMVAGui.C to work with cling. Correlation scatter plots are still broken because of "")"" in strings passed to other macros (reported to D. Piparo)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/53:36,avail,available,36,https://root.cern,https://github.com/root-project/root/pull/53,1,['avail'],['available']
Availability,"Fixes the nightly failure. I could not have anticipated this, because the PR tests of the PR that caused the regression were just fine:; https://github.com/root-project/root/actions/runs/8426692299. It seems the build configuration of the scheduled builds in inconsistent with the PR builds: it misses `mathmore=ON`. Follows up on https://github.com/root-project/root/pull/14743.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15058:18,failure,failure,18,https://root.cern,https://github.com/root-project/root/pull/15058,1,['failure'],['failure']
Availability,Fixes the redefinition symbol error for 'Point' for cxxmodules(macosx),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3605:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/3605,1,['error'],['error']
Availability,"Fixing compiler warning:; ```; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx: In member function ‘virtual void TProofDrawHist::SlaveBegin(TTree*)’:; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:51: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:789:30: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:784:60: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:783:38: error: dangling pointer to an unnamed temporary may be used [-Werror=dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; /home/linev/git/root6/proof/proofplayer/src/TProofDraw.cxx:782:62: note: u",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11433:229,error,error,229,https://root.cern,https://github.com/root-project/root/pull/11433,2,['error'],['error']
Availability,Fixing failures in stress-test:; `; Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm; `,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3733:7,failure,failures,7,https://root.cern,https://github.com/root-project/root/pull/3733,2,"['Error', 'failure']","['Error', 'failures']"
Availability,Fixing requirement that all ROOT be available for Minuit2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1658:36,avail,available,36,https://root.cern,https://github.com/root-project/root/pull/1658,1,['avail'],['available']
Availability,"Fixing:; `[ 98%] Generating G__PyROOT.cxx, ../../lib/libPyROOT_rdict.pcm, ../../lib/libPyROOT.rootmap, ../../lib/PyROOT.pcm; In file included from input_line_13:10:; /home/oksana/CERN_sources/root/builds/include/TTreeAsFlatMatrix.h:17:10: remark: building module 'ROOTDataFrame' as '/home/oksana/CERN_sources/root/builds/lib/ROOTDataFrame.pcm' [-Rmodule-build]; #include ""ROOT/RDataFrame.hxx""; ^; Error: Had to build non-system module ROOTDataFrame implicitly.`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2802:397,Error,Error,397,https://root.cern,https://github.com/root-project/root/pull/2802,1,['Error'],['Error']
Availability,"Follow-up from https://github.com/root-project/root/pull/13238#issuecomment-1645247274, see also the three points raised in the linked comment. From a user perspective, a `#pragma link C++ enum` currently produces neither an error nor a warning if the `enum` is not found (this is going to change with LLVM 16). As far as I can tell, `typedef`s to unnamed `enum`s are currently not considered (this was the pattern addressed in https://github.com/root-project/root/pull/13238), it is not clear if they should.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13303:225,error,error,225,https://root.cern,https://github.com/root-project/root/issues/13303,1,['error'],['error']
Availability,"Following #12389, we should also change the `EXPECT_EQ`s in the two `EventSections` test cases in `testRooAbsL` to `EXPECT_DOUBLE_EQ`. The same explanation as for that case applies to them and should be added as a comment to the tests:. ```; // We cannot EXPECT_EQ in this test, because we compare actually different; // calculations. The multiple additions and FMA operations involved in the; // calculation of the multiple parts introduces different rounding errors; // on the CPU level than the single calculation over all events at once.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12832:461,error,errors,461,https://root.cern,https://github.com/root-project/root/issues/12832,1,['error'],['errors']
Availability,Following problems with Pythia8: https://root-forum.cern.ch/t/error-when-compiling-macro-pythia8-analysis-h-file-not-found/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5416:62,error,error-when-compiling-macro-,62,https://root.cern,https://github.com/root-project/root/pull/5416,1,['error'],['error-when-compiling-macro-']
Availability,"Following simple code crashes:. ```cpp; TClass *cl = gROOT->GetClass(""ROOT::Experimental::RBox"");; TDataMember *m = cl->GetDataMember(""fAttrBorder"");; printf(""offset = %d\n"", (int) m->GetOffsetCint());; ```. Method is crucial, while used in PyROOT. ; Error trace:; ```; #7 0x00007f261b3a1bc7 in cling::DeclCollector::HandleInterestingDecl(clang::DeclGroupRef) () from /home/linev/build/json/lib/libCling.so; #8 0x00007f261bb1b661 in clang::ASTReader::PassInterestingDeclsToConsumer() () from /home/linev/build/json/lib/libCling.so; #9 0x00007f261bb02876 in clang::ASTReader::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #10 0x00007f261bbf3038 in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName(clang::DeclContext const*, clang::DeclarationName) () from /home/linev/build/json/lib/libCling.so; #11 0x00007f261d7d8e5a in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #12 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #13 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #14 0x00007f261d7c5ccf in clang::TagDecl::getMostRecentDeclImpl() () from /home/linev/build/json/lib/libCling.so; #15 0x00007f261d7d8da2 in clang::DeclContext::lookup(clang::DeclarationName) const () from /home/linev/build/json/lib/libCling.so; #16 0x00007f261baa4c68 in clang::ASTReader::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #17 0x00007f261bbf2e00 in clang::MultiplexExternalSemaSource::CompleteRedeclChain(clang::Decl const*) () from /home/linev/build/json/lib/libCling.so; #18 0x00007f261bafa0cf in clang::ASTReader::FinishedDeserializing() [clone .part.0] () from /home/linev/build/json/lib/libCling.so; #19 0x00007f261bbf330d in clang:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8547:251,Error,Error,251,https://root.cern,https://github.com/root-project/root/issues/8547,1,['Error'],['Error']
Availability,"Following up on https://github.com/root-project/root/pull/6832#pullrequestreview-533638738. The downside for this is that `textutil` will be a requirement for macOS, even if ROOT is not being packaged on that computer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6845:96,down,downside,96,https://root.cern,https://github.com/root-project/root/pull/6845,1,['down'],['downside']
Availability,"Follows up on:. https://github.com/root-project/root/pull/12545. To fix the errors seen here, for example:; https://github.com/root-project/root/pull/12955#issuecomment-1592735649",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13029:76,error,errors,76,https://root.cern,https://github.com/root-project/root/pull/13029,1,['error'],['errors']
Availability,For Ubuntu 22.04 we will otherwise get a build error.; See https://github.com/xrootd/xrootd/issues/1666. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10322:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/10322,1,['error'],['error']
Availability,For Ubuntu 22.04 we will otherwise get a build error.; See https://github.com/xrootd/xrootd/issues/1666. (cherry picked from commit f4bd8e740a99828d1232494b9d92a25fe2c39f65). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10374:47,error,error,47,https://root.cern,https://github.com/root-project/root/pull/10374,1,['error'],['error']
Availability,"For call chains where an inner function returns an `RResult` of a different template than the outer `RResult` return type, we cannot use `R__FORWARD_RESULT`. Instead we need to test the inner type for an error state and can, in case of an error, use `return R__FORWARD_ERROR`. Discussed in #5934. The PR also comes with a minor simplification for `RResult<T>::Forward()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6039:204,error,error,204,https://root.cern,https://github.com/root-project/root/pull/6039,2,['error'],['error']
Availability,"For example when a user defines a function with the name ""f1gaus"" and then reuses that name it could cause in same case an error parsing the expression.; Example :; ```; TF1 f1(""f1gaus"",""gaus"");; TF1 f2(""f2gaus"",""f1gaus+gaus(3)"");; ```; If the function name is for example ""fgaus"" it was working before, but not if a character number is used before the pre-defined function name such as ""f1gaus"". Add also a test for parsing these cases in TFormulaParsingTest. This commit fixes ROOT-10815",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5872:123,error,error,123,https://root.cern,https://github.com/root-project/root/pull/5872,1,['error'],['error']
Availability,"For example:. class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };. This leads to a compilation error when doing. THashConsistencyHolder<name>. and lead to. error: template argument for template type parameter must be a type. because in that context the data member hid the class name; So we now do. THashConsistencyHolder<decltype(*this)>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1207:188,error,error,188,https://root.cern,https://github.com/root-project/root/pull/1207,2,['error'],['error']
Availability,"For now just add a test for the specific scenario, see description in the commit message. The test will likely fail on many platforms, for reference I leave a log with the RDataFrame verbosity turned up. [many_threads.log](https://github.com/root-project/root/files/15387003/many_threads.log). Look for the lines with `Jitting and executing the following code`, there will be (at least) one like; ```; Info in <[ROOT.RDF] Debug /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RDFUtils.cxx:329 in Long64_t ROOT::Internal::RDF::InterpreterCalc(const std::string &, const std::string &)>: Jitting and executing the following code:. Info in <[ROOT.RDF] Info /Users/vpadulan/Programs/rootproject/rootsrc/tree/dataframe/src/RLoopManager.cxx:917 in void ROOT::Detail::RDF::RLoopManager::Run(bool)>: Finished event loop number 0 (0s CPU, 0.000169039s elapsed).; ```. Note that after the line there is an empty space. This means that the thread is trying to JIT an empty string, which will trigger an exception, as it boils down to doing; ```; root [0] TInterpreter::EErrorCode errorCode(TInterpreter::kNoError);; root [1] gInterpreter->Calc("""", &errorCode);; root [2] errorCode; (TInterpreter::EErrorCode) (TInterpreter::kDangerous) : (unsigned int) 2; ```; And RDF throws always unless the return code is `kNoError`. **Note**: I will introduce the commit with the fix after a first round of failing tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15578:1031,down,down,1031,https://root.cern,https://github.com/root-project/root/pull/15578,4,"['down', 'error']","['down', 'errorCode']"
Availability,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16750:1150,robust,robust,1150,https://root.cern,https://github.com/root-project/root/pull/16750,1,['robust'],['robust']
Availability,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603:413,failure,failures,413,https://root.cern,https://github.com/root-project/root/pull/5603,4,['failure'],['failures']
Availability,"For some reason root-config calls on macOS 10.13.2 are extremely slow (not sure if this is related to the meltdown / spectre mitigations). ```bash; [O2/latest] ~/work/active/sw/BUILD/ROOT-latest/ROOT %> time root-config --version; 6.13/01; root-config --version 0.24s user 1.06s system 131% cpu 0.989 total; ```. which than means that whatever dependent project using `FindROOT.cmake` is slowed down quite a lot when trying to do incremental builds. This is because of the multiple `root-config` invocations in such a macro, which are also not cached so they get done on any `make` invocation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1569:395,down,down,395,https://root.cern,https://github.com/root-project/root/pull/1569,1,['down'],['down']
Availability,"For the minimization, the RooMinimizer sets the error logging mode; temporarily to `CollectErrors`, which collects all error messages in; strings. This results in a HUGE overhead, which is completely; unnecessary if evaluation error printing is disabled. In that case, the; error evaluation mode should be set to counting only, which is what this; commit implements. This speeds up fits with frequent evaluation errors a lot, for example; the `testNaNPacker` tests are sped up by 25x.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12328:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/12328,5,['error'],"['error', 'errors']"
Availability,Found by the conda nightly . ```; 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'; 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16043:191,error,error,191,https://root.cern,https://github.com/root-project/root/pull/16043,1,['error'],['error']
Availability,"From SemaDeclCXX.cpp:; ```; C++ [namespace.unnamed]p1. An unnamed-namespace-definition behaves as if it; were replaced by; namespace unique { /* empty body */ }; using namespace unique;; namespace unique { namespace-body }; where all occurrences of 'unique' in a translation unit are replaced by the same; identifier and this identifier differs from all other identifiers in the entire; program.; ```; Thus, the first declaration of an unnamed namespace creates an implicit UsingDirectiveDecl that makes the names available in the parent DC. This pull request resets the anonymous namespace for the parent DeclContext when such first declaration is unloaded, so that the implicit UsingDirectiveDecl is created again when parsing the next anonymous namespace. ## Changes or fixes:; - Reset the anonymous namespace for the parent DeclContext for the case described above. ## Checklist:; - [X] tested changes locally. This PR fixes #7483.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9998:514,avail,available,514,https://root.cern,https://github.com/root-project/root/pull/9998,1,['avail'],['available']
Availability,From Sergey: Try to fix compilation error,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2738:36,error,error,36,https://root.cern,https://github.com/root-project/root/pull/2738,1,['error'],['error']
Availability,"From V.Vasilev, it fixes:; [ 72%] Building CXX object interpreter/llvm/src/tools/clang/lib/CodeGen/CMakeFiles/clangCodeGen.dir/CodeGenModule.cpp.o; While building module 'Cling_Interpreter' imported from /.../root/core/clingutils/src/RStl.cxx:25:; In file included from <module-includes>:5:; /.../root/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:13:2: error: ""This file must not be included by compiled programs.""; #error ""This file must not be included by compiled programs.""; ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3600:370,error,error,370,https://root.cern,https://github.com/root-project/root/pull/3600,2,['error'],['error']
Availability,"From https://root-forum.cern.ch/t/segmentation-error-when-i-try-to-draw-a-histogram/47392. Opening https://root-forum.cern.ch/uploads/short-url/vue07kduqCLe9dhZ3MGW8pLWja0.root shows. ```; root [0] ; Attaching file file05.root as _file0...; Warning in <TStreamerInfo::Build>: unique_ptr<TH1F,default_delete<TH1F> >: __uniq_ptr_data<TH1F,default_delete<TH1F>,true,true> has no streamer or dictionary, data member ""_M_t"" will not be saved; Warning in <TClass::Init>: no dictionary for class __compressed_pair<TH1F*,default_delete<TH1F> > is available; Warning in <TClass::Init>: no dictionary for class __compressed_pair_elem<TH1F*,0,false> is available; Warning in <TClass::Init>: no dictionary for class __compressed_pair_elem<default_delete<TH1F>,1,true> is available; (TFile *) 0x5617370bbe70; ```; That's on Ubuntu 20.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9188:47,error,error-when-i-try-to-draw-a-histogram,47,https://root.cern,https://github.com/root-project/root/issues/9188,4,"['avail', 'error']","['available', 'error-when-i-try-to-draw-a-histogram']"
Availability,"From the release notes of `glibc` 2.34 [[1]]:. > The deprecated memory allocation hooks __malloc_hook, __realloc_hook,; __memalign_hook and __free_hook are now removed from the API. Compatibility; symbols are present to support legacy programs but new applications can no; longer link to these symbols. These hooks no longer have any effect on glibc; functionality. The malloc debugging DSO libc_malloc_debug.so currently; supports hooks and can be preloaded to get this functionality back for older; programs. However this is a transitional measure and may be removed in a; future release of the GNU C Library. Users may port away from these hooks by; writing and preloading their own malloc interposition library. As a consequence, building root 6.24/06 against glibc 2.34 (for example on openSUSE Tumbleweed which already has the updated glibc) fails with the following errors:. ~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void* (* TMemStatHook::GetMallocHook())(size_t, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:51:11: error: '__malloc_hook' was not declared in this scope; [ 2135s] 51 | return __malloc_hook;; [ 2135s] | ^~~~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void (* TMemStatHook::GetFreeHook())(void*, const void*)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:64:11: error: '__free_hook' was not declared in this scope; [ 2135s] 64 | return __free_hook;; [ 2135s] | ^~~~~~~~~~~; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx: In static member function 'static void TMemStatHook::SetMallocHook(TMemStatHook::MallocHookFunc_t)':; [ 2135s] /home/abuild/rpmbuild/BUILD/root-6.24.06/misc/memstat/src/TMemStatHook.cxx:77:4: error: '__malloc_hook' was not declared in this scope; [ 2135s]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9031:873,error,errors,873,https://root.cern,https://github.com/root-project/root/issues/9031,1,['error'],['errors']
Availability,"Full bug report is at https://bugs.gentoo.org/879323. Important part of the build log is below.; ```. /usr/bin/cmake -E copy_if_different /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/tutorials/tree/jets.C /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08_build/tutorials/tree/jets.C; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/zebra.f:767:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 767 | + ISTAT); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: ‘cfget_’ was previously declared here; 107 | void cfget_(int *lundes, int *medium, int *nwrec, int *nwtak, char *mbuf,; | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:107:6: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:398:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 398 | CFSTAT = CFSTATI (NAME, INFO, LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type mismatch in parameter 4; 171 | int cfstati_(char *fname, int *info, int *lgname); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: type ‘void’ should match type ‘long int’; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:171:5: note: ‘cfstati_’ was previously declared here; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/kernlib.f:386:72: error: type of <E2><80>-Werror=lto-type-mismatch][]]; 386 | CALL CFOPEI (LUNDES,MEDIUM,NWREC,NVMODE,NBUF,NAME,ISTAT,LGN); | ^; /var/tmp/portage/sci-physics/root-6.26.08/work/root-6.26.08/misc/minicern/src/cernlib.c:225:6: note: type mismatch in parameter 9; 225 | void cfopei_(int *lundes, int *medium, int *nwrec, int *mode, int *nbuf,; | ^; /var/tmp/portage/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:403,error,error,403,https://root.cern,https://github.com/root-project/root/issues/11657,1,['error'],['error']
Availability,Functionality not backported to 614 was showcased.; This fixes all these failures: http://cdash.cern.ch/testDetails.php?test=45078185&build=514176,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2101:73,failure,failures,73,https://root.cern,https://github.com/root-project/root/pull/2101,1,['failure'],['failures']
Availability,"GCC 4.9 only defines '__cplusplus' to the value 201300L and not to; 201402L as expected for C++14. This makes the check for the available; C++ standards in the interpreter fail to enable C++14 (which in turn; means that ROOT cannot be compiled with GCC 4.9 if C++14 was enabled in; Cmake). Similarly, for C++17 apart from the proper value 201703L other; values seems to be floating around (e.g. 201406L as defined by the; version of LLVM included with ROOT). The requirement for '__cplusplus_'; to enable certain C++ standards in the interpreter is made less strict; and just needs to be larger than the previous final value. This basically reinstates commit; 0a62e34aa86b812651cfcf9526ba03b975adaa5c which was undone by commit; 702298d9ad83866d0be62f0422c03ac8ea6687f1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/549:128,avail,available,128,https://root.cern,https://github.com/root-project/root/pull/549,1,['avail'],['available']
Availability,"Gen\GlobalISel\GIMatchDag.cpp(51,18): message : Constructor for class 'std::locale' is declared 'explicit' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : while trying to match the argument list '(const char [5], const std::unique_ptr<llvm::GIMatchDagInstr,std::default_delete<llvm::GIMatchDagInstr>> *)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(51,11): message : note: qualification adjustment (const/volatile) may be causing the ambiguity [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\utils\TableGen\GlobalISel\GIMatchDag.cpp(85,11): error C2666: 'llvm::format': overloaded functions have similar conversions [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; interpreter\llvm\src\include\llvm/Support/Format.h(124,29): message : could be 'llvm::format_object<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *> llvm::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const char *,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>> *const &)' [C:\Users\bellenot\build\x64\release\interpreter\llvm\src\utils\TableGen\GlobalISel\LLVMTableGenGlobalISel.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\format(3526,20): message : or 'std::wstring std::format<const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_delete<llvm::GIMatchDagPredicate>>*>(const std::basic_format_string<wchar_t,const std::unique_ptr<llvm::GIMatchDagPredicate,std::default_de",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12523:6113,error,error,6113,https://root.cern,https://github.com/root-project/root/pull/12523,1,['error'],['error']
Availability,Generate an error at the end of XML file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10483:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/10483,1,['error'],['error']
Availability,"GeoElement.cxx:895; 8: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:895; 9: Assuming 'br' is >= field 'fLimitRatio' in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 10: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:897; 11: Value assigned to field 'fDaughter' in /opt/root_src/geom/geom/src/TGeoElement.cxx:900; 12: Value assigned to field 'fElem' in /opt/root_src/geom/geom/src/TGeoElement.cxx:901; 13: Returning from 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 14: Assuming the condition is false in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 15: Assuming pointer value is null in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 16: Taking false branch in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 17: Assuming 'i' is < 'nd' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 18: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 19: Calling 'TGeoElemIter::Down' in /opt/root_src/geom/geom/src/TGeoElement.cxx:913; 20: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoElement.cxx:894; /opt/root_src/geom/geom/src/TGeoEltu.cxx:184:16: warning: Value stored to 'safr' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safr' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoEltu.cxx:184; /opt/root_src/geom/geom/src/TGeoEltu.cxx:382:4: warning: Value stored to 'safr' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safr' is never read in /opt/root_src/geom/geom/src/TGeoEltu.cxx:382; /opt/root_src/geom/geom/src/TGeoEltu.cxx:382:11: warning: Although the value stored to 'safz' is used in the enclosing expression, the value is never actually read from 'safz' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'safz' is used in the enclosing expression, the value is never actually read from 'safz' in /opt/root_src/geom/geom/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:35192,Down,Down,35192,https://root.cern,https://github.com/root-project/root/issues/7428,1,['Down'],['Down']
Availability,"GetClonedTree();; ```; This works well for smaller datasets, but for my huge dataset I get the following error:; ```; Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::WriteByteCount>: bytecount too large (more than 1073741822); Error in <TBufferFile::CheckByteCount>: object of class TObjArray read too many bytes: 1600049012 instead of 526307188; Warning in <TBufferFile::CheckByteCount>: TObjArray::Streamer() not in sync with data, fix Streamer(); Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=4216542 pointer will be 0; Error in <TExMap::Remove>: key 2005325560 not found at 371; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=2005325560 pointer will be 0; Error in <TExMap::Remove>: key 364036325 not found at 135; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=364036325 pointer will be 0; Error in <TExMap::Remove>: key 1061746196 not found at 217; Warning in <TBufferFile::CheckObject>: reference to an unavailable class, pointers of that type will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12710:282,error,error,282,https://root.cern,https://github.com/root-project/root/issues/12710,6,"['Error', 'error']","['Error', 'error']"
Availability,GetCollectionProxy during the setting of fCollProxy calls; TBranchElement::GetInfoImp that in some cases sets fCollProxy; and ends up recording it (sometimes) in the action sequence.; When GetCollectionProxy sets it too (i.e. change it) there is; now a disconnect between the branch and the action sequences that; lead to the action sequence to used an unset collection proxy:. Fatal in <TGenCollectionProxy>: Size> Logic error - no proxy object set.; aborting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2834:422,error,error,422,https://root.cern,https://github.com/root-project/root/pull/2834,2,['error'],['error']
Availability,"GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The compilation fails with the following error:; ```; Generating G__RooFitCore.cxx, ../../bin/libRooFitCore_rdict.pcm, ../../bin/libRooFitCore.rootmap; In file included from input_line_9:58:; In file included from C:/Users/bellenot/build/x64/release/include\RooChi2Var.h:22:; C:/Users/bellenot/build/x64/release/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:/Users/bellenot/build/x64/release/include/RooDataHist.h:282:35: note: insert an explicit cast to silence; this issue; mutable unsigned long _curIndex{std::numeric_limits<std::size_t>::max()}; // Current index; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; static_cast<unsigned long>( ); CUSTOMBUILD : error : C:/Users/bellenot/build/x64/release/bin/rootcling.exe: compilation failure (C:/Users/bellenot/build/x64/release/bin/libRooFitCoreda5a37c58a_dictUmbrella.h) [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'C:\Users\bellenot\build\x64\release\CMakeFiles\c53a70ca69b459bf8b1aa731202f2a45\G__RooFitCore.cxx.rule' exited with code 1. [C:\Users\bellenot\build\x64\release\roofit\roofitcore\G__RooFitCore.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9468:1451,error,error,1451,https://root.cern,https://github.com/root-project/root/issues/9468,3,"['error', 'failure']","['error', 'failure']"
Availability,"Give gaussian constrained parameters an initial error, and don't create lumi constraint if there is no error on it",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13528:48,error,error,48,https://root.cern,https://github.com/root-project/root/pull/13528,2,['error'],['error']
Availability,"Give more informative member names to avoid confusion (e.g. eveId, elementId, eve_id); Remove redundant member in object3d: eveId and mstrId, which can be accessed ad eve_el.fElementId, and eve_el.fMasterId. This PR is not a design change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4810:94,redundant,redundant,94,https://root.cern,https://github.com/root-project/root/pull/4810,1,['redundant'],['redundant']
Availability,"Given a tree with a branch of type `map<string, bool>`, like the one [in this forum post](https://root-forum.cern.ch/t/sample-splitting-using-rdataframe-not-working-for-the-trees-which-contains-vector-branches/49377), reading it with TTreeReader just yields a crash, while reading it with TTree first prints an error about the missing dictionary, _then_ crashes. ### TTreeReader. ```cpp; void repro_treereader() {; TFile f(""flatntuple_MC_.root"");; auto *t = f.Get<TTree>(""ntuplizer/tree"");; R__ASSERT(t != nullptr);; TTreeReader r(t);; TTreeReaderValue<std::map<std::string, bool>> rv(r, ""HLT_BPH_isFired"");; r.Next();; *rv;; }; ```; ```cpp; $ root -l repro_treereader.C; root [0]; Processing repro_treereader.C... *** Break *** segmentation violation; Root > .qqqqq; Info in <TRint::ProcessLine>: Bye... (try '.qqqqqqq' if still running). *** Break *** segmentation violation; Root > .qqqqqqq; ```. ### TTree. ```cpp; void repro_tree() {; TFile f(""flatntuple_MC_.root"");; auto *t = f.Get<TTree>(""ntuplizer/tree"");; R__ASSERT(t != nullptr);; std::map<std::string, bool> *m = nullptr;; t->SetBranchAddress(""HLT_BPH_isFired"", &m);; t->GetEntry(0);; }; ```; ```; $ root -l -b -q repro_tree.C. Processing repro_tree.C...; Error in <TTree::SetBranchAddress>: The class requested (map<string,bool>) for the branch ""HLT_BPH_isFired"" is an instance of an stl collection and does not have a compiled CollectionProxy. Please generate the dictionary for this collection (map<string,bool>) to avoid to write corrupted data. *** Break *** segmentation violation; Root >; *** Break *** segmentation violation; ```. The TTreeReader version should also print the error, so users [don't get confused](https://root-forum.cern.ch/t/sample-splitting-using-rdataframe-not-working-for-the-trees-which-contains-vector-branches/49377).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10254:311,error,error,311,https://root.cern,https://github.com/root-project/root/issues/10254,3,"['Error', 'error']","['Error', 'error']"
Availability,Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16002:133,error,error,133,https://root.cern,https://github.com/root-project/root/pull/16002,1,['error'],['error']
Availability,"Given; ```cpp; // tree_with_pair.cpp; void tree_with_pair() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; //t.Branch(""topbranch"", &x, ""a/I:b/I""); t.Branch(""topbranch"", &x);; t.Fill();; t.Scan();; }; ```. , without this patch the output is:. ```; Error in <HandleInterpreterException>: Trying to dereference null pointer or trying to call routine taking non-null arguments; Execution of your code was aborted.; In module 'Core':; /home/blue/ROOT/dev/cmake-build-foo/include/TClass.h:635:38: warning: null passed to a callee that requires a non-null argument [-Wnonnull]; size_t hint_offset = ((char*)&(p->second)) - (char*)p;; ^; ```. with this patch:. ```; Processing tree_with_pair.cpp...; ************************************; * Row * topbranch * topbranch *; ************************************; * 0 * 42 * 84 *; ************************************; ```. This fixes #11215 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11227:257,Error,Error,257,https://root.cern,https://github.com/root-project/root/pull/11227,1,['Error'],['Error']
Availability,Gracefully error out if application compiling against ROOT is using a different C++ standard than the one with which ROOT was built,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8063:11,error,error,11,https://root.cern,https://github.com/root-project/root/issues/8063,1,['error'],['error']
Availability,Grammatical error fixes in ALittleC++.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3800:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/3800,1,['error'],['error']
Availability,Graph Errorbar Offsets for new Marker Styles and Thick Markers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9015:6,Error,Errorbar,6,https://root.cern,https://github.com/root-project/root/pull/9015,1,['Error'],['Errorbar']
Availability,Graph: non correct display of error bars when exceeding y-range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16070:30,error,error,30,https://root.cern,https://github.com/root-project/root/issues/16070,1,['error'],['error']
Availability,"GraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFiles/G__Graf.dir/G__Graf.cxx.o -Wl,-rpath,/home/graemes/tmp/root-build-nobrotli/lib: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a /usr/lib/x86_64-linux-gnu/libz.so ../../lib/libmathtext.a ../../lib/libHist.so ../../lib/libMatrix.so ../../lib/libMathCore.so ../../lib/libImt.so ../../lib/libMultiProc.so ../../lib/libNet.so ../../lib/libRIO.so ../../lib/libThread.so ../../lib/libCore.so; 	/usr/bin/ld: ../../FREETYPE-prefix/src/FREETYPE/objs/.libs/libfreetype.a(sfnt.o): in function `sfnt_init_face':; 	sfnt.c:(.text+0x1173a): undefined reference to `BrotliDecoderDecompress'; 	collect2: error: ld returned 1 exit status; ```. If I re-run the link manually adding `/usr/lib/x86_64-linux-gnu/libbrotlicommon.so` it succeeds. The error is avoided entirely if the FTGL libraries are found on the system (specifically for Ubuntu by installing the `libfgtl-dev` package). Naively, it seems there is probably a missing library in `graf2d/graf/CMakeLists.txt`. ### To Reproduce. Try to build ROOT 6.26/06 on an Ubuntu 22.04 machine where FTGL is not natively installed and ROOT self-builds it (`builtin_ftgl` is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11239:2603,error,error,2603,https://root.cern,https://github.com/root-project/root/issues/11239,2,['error'],['error']
Availability,"Greek letter epsilon not rendered correctly using TLatex with OpenGL.CanvasPreferGL option, segmentation fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6755:105,fault,fault,105,https://root.cern,https://github.com/root-project/root/issues/6755,1,['fault'],['fault']
Availability,"HTTPS seems to be supported just fine for this domain, but there's no 301/302 redirect from HTTP, so as-is this is simply enforcing plaintext on everyone who uses CMake to build, which is... not ideal. The use of SHA256 checksums is a 👍, but doesn't nullify every benefit of using HTTPS where available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1499:293,avail,available,293,https://root.cern,https://github.com/root-project/root/pull/1499,1,['avail'],['available']
Availability,"Handle unknown feature and/or option, addressing the issue #7662 on Windows. Gives something like:; ```; C:\Users\sftnight>root-config --flags; --flags: Unknown option or argument!. Usage: root-config [options]. --arch Print the architecture (compiler/OS); --platform Print the platform (OS); --libs Print regular ROOT libraries; --glibs Print regular + GUI ROOT libraries; --evelibs Print regular + GUI + Eve libraries; --cflags Print compiler flags and header path; --bindir Print the executable directory; --libdir Print the library directory; --incdir Print the header directory; --etcdir Print the configuration directory; --tutdir Print the tutorials directory; --srcdir Print the top of the original source directory; --auxlibs Print auxiliary libraries; --config Print arguments used for configuration with CMake; --features Print list of all supported features; --has-<feature> Test if <feature> is compiled in; --version Print the ROOT version; --git-revision Print the ROOT git revision number; --python-version Print the Python version used by ROOT; --python2-version Print the Python2 version used by PyROOT; --python3-version Print the Python3 version used by PyROOT; --ncpu Print number of available (hyperthreaded) cores; --cc Print alternative C compiler specified when ROOT was built; --cxx Print alternative C++ compiler specified when ROOT was built; --f77 Print alternative Fortran compiler specified when ROOT was built; --ld Print alternative Linker specified when ROOT was built; --help Print this message. C:\Users\sftnight>root-config --has-feet; --has-feet: unknown feature!. C:\Users\sftnight>root-config --has-feet --has-pyroot; --has-feet: unknown feature! yes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7663:1205,avail,available,1205,https://root.cern,https://github.com/root-project/root/pull/7663,1,['avail'],['available']
Availability,Handling modulemap files may issue parsing errors or not found errors and our diagnostics client should be prepared for it. This patch fixes an assertion in clang when we see duplicate modulemap files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5176:43,error,errors,43,https://root.cern,https://github.com/root-project/root/pull/5176,2,['error'],['errors']
Availability,"Happens when try to find and execute static class method without arguments and which returns `void`. First detected with `TPluginHandler`. This is only plugin handler which defined with 0 arguments:; ```; gPluginMgr->AddHandler(""TGeoManagerEditor"", ""*"", ""TGeoManagerEditor"", ""GeomBuilder"", ""LoadLib()"");; ```; ROOT crashes when executed this plugin.; Problem can be cooked down to the reproducer - code which is executed by plugin handler:; ```; {; TClass *cl = TClass::GetClass(""TGeoManagerEditor"");. TString fCtor = ""LoadLib()"";. TString method = fCtor(0, fCtor.Index(""(""));; TString proto = fCtor(fCtor.Index(""("")+1, fCtor.Index("")"")-fCtor.Index(""("")-1);. auto fMethod = cl->GetMethodWithPrototype(method, proto);. auto fCallEnv = new TMethodCall;; fCallEnv->Init(fMethod);. fCallEnv->SetParams();. Longptr_t ret = 0;; fCallEnv->Execute(ret);; }. ```; It crashed when `fCallEnv->Execute` is called. . There is simple workaround:; ```; if (proto.Length() == 0) proto = ""()"";; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11930:373,down,down,373,https://root.cern,https://github.com/root-project/root/issues/11930,1,['down'],['down']
Availability,"Harmless change to circumvent errors like these when building RooFit standalone:. ```; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 1 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooAddPdf!; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> >; Error in <CreateRealData>: Cannot find data member # 0 of class tuple<TreeReadBuffer*,default_delete<TreeReadBuffer> > for parent RooPolynomial!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15733:30,error,errors,30,https://root.cern,https://github.com/root-project/root/pull/15733,7,"['Error', 'error']","['Error', 'errors']"
Availability,"Having that bit set on TBranches causes _a lot_ of thread; contention (~TBranch -> ~TNamed -> RecursiveRemove).; Similarly for leaves. This mitigates performance issues with MT runs on certain samples; where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10729:366,down,down,366,https://root.cern,https://github.com/root-project/root/pull/10729,1,['down'],['down']
Availability,"Hello!. ROOT-R is now supported with JupyROOT, the problem was a message from ; R ""error c stack usage is too close to the limit"".; It was fixed using module resource from python to set unlimited stack size in multithread execution,; anyway the stack in OS will be the limit. ""see ulimit -s"" for Gnu/Linux. Best.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/139:83,error,error,83,https://root.cern,https://github.com/root-project/root/pull/139,1,['error'],['error']
Availability,"Hello, . When displaying several 3D objects the same canvas there is a problem, ; it was reported in old versions of ROOT ; https://root-forum.cern.ch/t/multiple-tgraph2d-in-a-single-plot/7409; and seems to be still there in the most recent versions. From my understanding, when two 3D objects do not have the same range hence axis when displaying them on the same canvas ROOT does not adapt them. ; Below is an example of something going wrong, I plot the parabola `x^2 + y^2` and as you can see on the plot the parabola takes negative values which is not possible. . <img width=""400"" alt=""frame_parabola"" src=""https://user-images.githubusercontent.com/29270790/99190276-e9a4bd80-2765-11eb-97e5-016d018dd6c6.png"">. This wrong display is because I plotted the TGraph2D on top of a frame with `z` values going from -10 to 10. ; But same would happen displaying two TGraph2D with different range I think as reported in the root forum. . Below is the code to reproduce the error, I execute it doing `root -l test_tgraph2d.cpp+`; ```C++; #include ""TStyle.h"" ; #include ""TH1.h""; #include ""TH2.h""; #include ""TH3F.h"" . #include ""TGraph.h"" ; #include ""TGraph2D.h"" ; #include ""TCanvas.h"" ; #include ""TView3D.h""; #include ""TAxis3D.h"" . #include<iostream> ; #include<vector> . double f( const double & x, const double & y); {; //return 1/(1+std::exp(-x)) * 1/(1+std::exp(-y)) ; . return x*x + y*y ; ; }. std::vector<double> linspace(; const double & vmin , ; const double & vmax , ; const unsigned int & npoints); {; // regular linspace ; double dx = (vmax - vmin)/double(npoints-1.) ; ; std::vector<double> vlinspace = {} ; ; for (unsigned int i = 0 ; i < npoints ; i++); {; vlinspace.push_back( vmin + double(i) * dx ) ; ; }. return vlinspace ;; }. void test_tgraph2d(); {; std::vector<double> ; vect_x , ; vect_y ;. vect_x = linspace(0.,10,100) ; ; vect_y = linspace(0.,10,100) ; . // nominal ; TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ; ; gr->SetDirectory(0) ; . unsigned int iPoints= 0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6811:970,error,error,970,https://root.cern,https://github.com/root-project/root/issues/6811,1,['error'],['error']
Availability,"Hello, Everyone!. My name is Sergey and I am a GSOC student this year. The aim of my project is to implement Multi-Target Regression algorithms to TMVA and to extend the capability of existing ones to handle multiple targets. In this commit I have modified the DecisionTree, allowing it to solve regression problems for multiple targets. The idea was inspired by how it is done in Clus package. (The variance of each subset resulting from a split is simply summed up from variances for each target). I have also extended the capability of BDT method to handle multiple targets (The only boosting method available for it right now is Bagging, but I am planning to implement Multi-target gradient descent based on the paper Boosted multi-task learning (2010) by Olivier Chapelle; Pannagadatta Shivaswamy.; ·",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/681:603,avail,available,603,https://root.cern,https://github.com/root-project/root/pull/681,1,['avail'],['available']
Availability,"Hello,. First of all sorry for all the mess I made with these pull requests. This is my first try and I did not really understood how GitHub works therefore my previous pull request was this messy and I decided to withdraw it and clean everything up before I request it again. And here we are, I ran some additional bugfixing and the ROOT tests which succeeded. Furthermore I tested my new class and everything I tried worked so I think now it's time to request the pull again. **Explanation**; My implementation is named TGraphMultiErrors and is basically a TGraphAsymmErrors with the possibility to include an unlimited amount of different types of y-Errors.; The whole functionality and naming convention of my class is strongly based on the TGraphAsymmErrors class. All functionalities of the TGraphAsymmErrors have been reimplemented. Furthermore like any other TGraph class it inherits from TGraph and has therefore all of it’s functionalities. I attached an example plot as a png picture. It's macro to be produced is included in the description part of the TGraphPainter class. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:653,Error,Errors,653,https://root.cern,https://github.com/root-project/root/pull/3452,1,['Error'],['Errors']
Availability,"Hello,. I'm sorry my new classed crashed root.; It seems to me that the error was due to the usauge of C-style variable length arrays that are only supported under g++ and not c++.; The changes I implemented should fix the bug. All the best,; Simon Spies",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4698:72,error,error,72,https://root.cern,https://github.com/root-project/root/pull/4698,1,['error'],['error']
Availability,"Hello,. My implementation is named TGraphMultiErrors and is basically a TGraphAsymmErrors with the possibility to include an unlimited amount of different types of y-Errors.; The whole functionality and naming convention of my class is strongly based on the TGraphAsymmErrors class. All functionalities of the TGraphAsymmErrors have been reimplemented. Furthermore like any other TGraph class it inherits from TGraph and has therefore all of it’s functionalities. I attached an example plot as a png picture. Unfortunatly I cannot upload the C macro here, but if you are interested you can find it on the forum: [https://root-forum.cern.ch/t/tgraphmultierrors-class-for-graphs-with-asymmetric-errors-and-multiple-different-y-error-types-e-g-statistic-and-systematic-errors/32784](https://root-forum.cern.ch/t/tgraphmultierrors-class-for-graphs-with-asymmetric-errors-and-multiple-different-y-error-types-e-g-statistic-and-systematic-errors/32784). Since the class reimplements all functionalities of TGraphAsymmErrors, you can refer to it’s documentation for most functionalities: https://root.cern.ch/doc/master/classTGraphAsymmErrors.html. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:166,Error,Errors,166,https://root.cern,https://github.com/root-project/root/pull/3449,3,"['Error', 'error']","['Errors', 'errors-and-multiple-different-y-error-types-e-g-statistic-and-systematic-errors']"
Availability,"Hello,. The `TCollection.h` header file cannot be included at the same time as the standard `span` header file. This bug impacts all the headers that include `TCollection.h` including `TCanvas.h`. Here is a minimal example to reproduce the bug when compiled with GCC 12.2.0 in C++20, with ROOT 6.26.06:. ```cpp; #include <span>; #include <TCollection.h>; ```. and here is the output:. ```; Consolidate compiler generated dependencies of target main; [ 50%] Building CXX object CMakeFiles/main.dir/main.cpp.o; In file included from /usr/include/TCollection.h:33,; from /tmp/scratchpad/main.cpp:2:; /usr/include/ROOT/RRangeCast.hxx:186:33: error: template argument 3 is invalid; 186 | RRangeCast<T, false, std::span<U>> RangeStaticCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeStaticCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:188:16: error: reference to ‘span’ is ambiguous; 188 | return std::span<U>(arr, arr + N);; | ^~~~; In file included from /usr/include/ROOT/RSpan.hxx:33,; from /usr/include/ROOT/RRangeCast.hxx:17:; /usr/include/ROOT/span.hxx:155:7: note: candidates are: ‘template<class T> class std::__ROOT::span’; 155 | class span {; | ^~~~; In file included from /tmp/scratchpad/main.cpp:1:; /usr/include/c++/12.2.0/span:56:11: note: ‘template<class _Type, long unsigned int _Extent> class std::span’; 56 | class span;; | ^~~~; /usr/include/ROOT/RRangeCast.hxx:188:22: error: expected primary-expression before ‘>’ token; 188 | return std::span<U>(arr, arr + N);; | ^; /usr/include/ROOT/RRangeCast.hxx: At global scope:; /usr/include/ROOT/RRangeCast.hxx:225:32: error: template argument 3 is invalid; 225 | RRangeCast<T, true, std::span<U>> RangeDynCast(U (&arr)[N]); | ^~; /usr/include/ROOT/RRangeCast.hxx: In function ‘int ROOT::RangeDynCast(U (&)[N])’:; /usr/include/ROOT/RRangeCast.hxx:227:16: error: reference to ‘span’ is ambiguous; 227 | return std::span<U>(arr, arr + N);; | ^~~~; /usr/include/ROOT/span.hxx:155:7: note: candidates are",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11587:638,error,error,638,https://root.cern,https://github.com/root-project/root/issues/11587,2,['error'],['error']
Availability,"Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:; ```; >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd33",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:102,error,errors,102,https://root.cern,https://github.com/root-project/root/issues/11765,2,['error'],"['error', 'errors']"
Availability,"Hello,. We are trying to build root branch [v6-26-00-patches](https://github.com/root-project/root/compare/v6-26-00-patches), but it does not compile after commit 80c1ab6b6dab02c46d8cc66262686fd718b57ece. Here the stacktrace:; ```; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:184:16: error: 'std::string TDirectoryLevelIter::GetContent(const string&)' marked 'override', but does not override; 184 | std::string GetContent(const std::string &kind) override; | ^~~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx: In member function 'std::string TDirectoryLevelIter::GetContent(const string&)':; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:186:11: error: 'GetContentKind' was not declared in this scope; did you mean 'GetContent'?; 186 | if (GetContentKind(kind) == kFileName); | ^~~~~~~~~~~~~~; | GetContent; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:186:35: error: 'kFileName' was not declared in this scope; 186 | if (GetContentKind(kind) == kFileName); | ^~~~~~~~~; /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.26.11-214c85d364498a3e137a3783af2e7b69/root-6.26.11/gui/browsable/src/TDirectoryElement.cxx:187:17: error: 'fFileName' was not declared in this scope; 187 | return fFileName;; | ^~~~~~~~~; ```; It successfully build up to commit https://github.com/root-project/root/commit/58c6a86fbe840a0f7fdd95d710755e925300120f. We are targeting `el8`, `amd64` and `gcc11`. Could you",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12110:425,error,error,425,https://root.cern,https://github.com/root-project/root/issues/12110,1,['error'],['error']
Availability,"Hello,. following https://root-forum.cern.ch/t/option-texte-for-1d-histograms/48277/4, would it be possible to have a new drawing option for TH1s where, in addition to the error bar and bin content text, we also have the bin error text (as illustrated in red in the attached picture)?. Thank you!; Best,; Mateus. <img width=""949"" alt=""Screenshot 2022-01-06 at 12 53 14"" src=""https://user-images.githubusercontent.com/18140784/148404609-fdea8d38-d99e-4cde-b328-8135bfd91342.png"">",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9505:172,error,error,172,https://root.cern,https://github.com/root-project/root/issues/9505,2,['error'],['error']
Availability,"Hello,. the bug this PR is adressing could be seen by random failures of the test gtest-hist-hist-test-TGraphMultiErrorsTests:; - https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74654/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/; - https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74449/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/; - https://epsft-jenkins.cern.ch/job/root-pullrequests-build/73886/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/. I have to apologize for this bug. It was caused by using an attribute to allocate an array before its value had been updated. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4780:61,failure,failures,61,https://root.cern,https://github.com/root-project/root/pull/4780,1,['failure'],['failures']
Availability,"Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>; `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```; Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script.; at JSRoot.core.js:325:21; at JSRoot.core.js:3:77; at JSRoot.core.js:5:3; ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed?. To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```; <!DOCTYPE html>; <html>; <head>; <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>; </head>; <body>; </body>; </html>. ```. Cheers,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10727:351,error,error,351,https://root.cern,https://github.com/root-project/root/issues/10727,1,['error'],['error']
Availability,"Hello. I have a multigraph displayed in a Web browser using ROOT JS and I have noticed many complains from the JS engine when I'm hovering mouse pointer above the multigraph object. I think the errors come from the function that is supposed to display tooltips because they do not appear as this happens for a histogram object. Here is the stack trace of such an error:. `JSRoot.more.js:1502 Uncaught TypeError: Cannot read properties of undefined (reading 'second_x'); at SVGGElement.<anonymous> (JSRoot.more.js:1502); at Pn.each (d3.min.js:2); at TGraphPainter.extractTooltip (JSRoot.more.js:1484); at TGraphPainter.processTooltipEvent (JSRoot.more.js:1576); at JSRoot.gpad.js:2960; at Array.forEach (<anonymous>); at TCanvasPainter.TPadPainter.processPadTooltipEvent (JSRoot.gpad.js:2959); at TFramePainter.processFrameTooltipEvent (JSRoot.interactive.js:56); at SVGSVGElement.<anonymous> (d3.min.js:2)`. Cheers,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8964:194,error,errors,194,https://root.cern,https://github.com/root-project/root/issues/8964,2,['error'],"['error', 'errors']"
Availability,"Hello. I noticed a weird feature in root 6.24.00, when trying to fit a model using a RooSimultaneous pdf. . Am I doing something forbidden in root 6.24.00 ?. Best,. Jean-Baptiste. ### Describe the bug; I have a model with a single category, describing the shape of a distribution, with three unconstrained nuisance parameters, one constrained nuisance parameter and one parameter of interest. The three unconstrained NP describe the shape of the background and the background yield. The poi is proportional to the signal yield. The dataset is a background only dataset. . I can do the fit with as pdf : model_had1A = RooProdPdf (fsb_had1A, constbias_had1A) where; fsb = ns x fs + nb x fb, fs and fb are signal and background pdf, ns contains the poi, nb is free floating. It runs; smoothly even if we are close to the unphysical region (poi < 0). (Probably many error messages from the exploration of the unphysical region have been removed from the output.); I can also try a fit with the pdf : simPdf = RooSimultaneous (indexCat=had1A, had1A=model_had1A) : this is virtually the same pdf, but this time embeded in a RooSimultaneous object. The fit fails. Between the two root versions, one things that appeared weird to me is that fsb_had1A does not seem to be; normalized when embeded in the RooSimultaneous in root 6.24.00. Maybe that is fine, but this is different from; what I see in root 6.22.02. ### Expected behavior; I would expect exactly the same results in both fits, with a best fit poi = 0 and a reasonable uncertainty.; This is what I see in root-6.22.02. In root 6.24.00 the fit with a RooSimultaneous fails. . ### To Reproduce; I put the code here /afs/cern.ch/user/j/jdevivi/public/ISSUEROOFIT. In root-6.24.00, I just do ; root.exe testWSsimulvsprod.C. In root-6.22.02, I do; root.exe load.C testWSsimulvsprod.C; since I use a RooCrystalBall from root-6.24 and did not put the code in the workspace. Log files can be found in the same directory. ### Setup; ROOT version : 6.24.00; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8307:862,error,error,862,https://root.cern,https://github.com/root-project/root/issues/8307,1,['error'],['error']
Availability,"Hello: . I came across a problem with ROOT recently, though the program gives the expected result, it ends with the 'corrupted size vs. prev_size' error. Here I show the minimum code that can reproduce the code. Running conditions:; * OS: Linux_CentOS7.7.1908-x86_64-gcc5.2.0; * ROOT: 6.08.00; * GCC: 5.2.0; ; code: ; file1: inc.cxx; ```cpp; #include <map>. // extern std::map<std::string, const double> UNITS;; std::map<std::string, const double> UNITS;; ```; file2: test.cxx; ```cpp; #include <map>. #include ""TGraphErrors.h""; #include ""TH1F.h""; #include ""TCanvas.h"". std::map<std::string, const double> UNITS = {; {"""",	1},; {""mm"", 1e-3},; };. int main() {; 	double value[] = {1, 2, 3, 4, 5};; TCanvas *c = new TCanvas(""c"", ""c"", 1200, 900);; 	TH1F *h = new TH1F(""h"", ""h"", 5, 0.5, 5.5);; 	TGraphErrors *g = new TGraphErrors();; 	for(int i=0; i<5; i++) {; 		g->SetPoint(i, i+1, value[i]);; 		h->Fill(value[i]);; 	}. 	g->SetMarkerStyle(20);; 	g->Draw(""AP"");; 	// h->Draw(""HIST"");; 	c->Print(""test.png"");. return 0;; }; ```; compiling:; * g++ -std=c++11 -fPIC --shared -o inc.so inc.cxx; * g++ -std=c++11 -o test test.cxx inc.so `root-config --libs --glibs --cflags` && ./test; ; result:; ```; ======= Backtrace: =========; /lib64/libc.so.6(+0x80f87)[0x7fd6589a6f87]; /lib64/libc.so.6(+0x8155e)[0x7fd6589a755e]; /lib64/libfreetype.so.6(+0x3ea1c)[0x7fd65771ea1c]; /lib64/libfreetype.so.6(+0x3fa02)[0x7fd65771fa02]; /lib64/libfreetype.so.6(+0x1fd4c)[0x7fd6576ffd4c]; /lib64/libfreetype.so.6(FT_Done_Face+0xa1)[0x7fd6576ffe51]; /root/6.08.00/lib/libGraf.so.6.08(_ZN3TTF7CleanupEv+0x5e)[0x7fd65bb62a7e]; /lib64/libc.so.6(__cxa_finalize+0x9a)[0x7fd65896000a]; /root/6.08.00/lib/libGraf.so.6.08(+0x638a3)[0x7fd65baef8a3]; ======= Memory map: ========; 00400000-0040b000 r-xp 00000000 00:2e 3242707291 /work/test/test; 0060a000-0060b000 r--p 0000a000 00:2e 3242707291 /work/test/test; 0060b000-0060c000 rw-p 0000b000 00:2e 3242707291 /work/test/test; 01644000-02e78000 rw-p 00000000 00:00 0 [heap]; 7fd63800000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8256:147,error,error,147,https://root.cern,https://github.com/root-project/root/issues/8256,1,['error'],['error']
Availability,"Hello; Build failure with master branch commit 02b857a47e on Ubuntu 21.04 (gcc 10.3.0, cmake 3.18.4):. ~~~~; cmake ${ROOT_SOURCES} -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dsoversion=ON -Droofit=yes; make -j8; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooPullVar.cxx.o; In file included from /home/frankland/software/sources/root/tree/treeplayer/inc/TBranchProxy.h:22,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReaderUtils.h:26,; from /home/frankland/software/sources/root/tree/treeplayer/inc/TTreeReader.h:26,; from /home/frankland/software/sources/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:45,; from /home/frankland/software/sources/root/tree/dataframe/src/RDFActionHelpers.cxx:11:; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:97:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 97 | virtual TClass::ObjectPtr NewObject() const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:101:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 101 | virtual TClass::ObjectPtr NewObject(void *arena) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:114:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 114 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements) const {; | ^~~~~~~~~; /home/frankland/software/sources/root/core/cont/inc/TVirtualCollectionProxy.h:118:20: error: ‘ObjectPtr’ in ‘class TClass’ does not name a type; 118 | virtual TClass::ObjectPtr NewObjectArray(Int_t nElements, void *arena) const {; | ^~~~~~~~~; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedFrame.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooQuasiRandomGenerator.cxx.o; [ 92%] Building CXX object gui/ged/CMakeFiles/Ged.dir/src/TGedMarkerSelect.cxx.o; [ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooRatio.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8178:13,failure,failure,13,https://root.cern,https://github.com/root-project/root/issues/8178,2,"['error', 'failure']","['error', 'failure']"
Availability,"Here is a reproducer:. ```cpp; #include <TH1D.h>; #include <TApplication.h>. int main() {; TApplication app(""app"", nullptr, nullptr);. TH1::AddDirectory(false);; TH1D h1(""h"", ""h"", 100, 0, 3);; h1.Fill(1, 10);; TH1D h2(""h"", ""h"", 100, 0, 30);; h2.Fill(10, 20);; TH1D h3(""h"", ""h"", 100, 0, 50);; h3.Fill(20, 30);. h1.GetXaxis()->SetRange(-1, 200);; h1.GetXaxis()->SetRangeUser(-1, 50);; h1.Draw(""HIST"");; h2.Draw(""SAME"");; h3.Draw(""SAME"");. app.Run();; }; ```. The range is unchanged but no warning or error is printed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9917:498,error,error,498,https://root.cern,https://github.com/root-project/root/issues/9917,1,['error'],['error']
Availability,"Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**; ```; Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized ; 481,078 context-switches # 0.004 M/sec ; 710 cpu-migrations # 0.005 K/sec ; 3,512,992 page-faults # 0.026 M/sec ; 456,851,617,713 cycles # 3.370 GHz ; 310,271,051,553 instructions # 0.68 insn per cycle ; 65,664,345,345 branches # 484.369 M/sec ; 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed; ```; **perf stat (after)**; ```; Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized ; 343,733 context-switches # 0.003 M/sec ; 327 cpu-migrations # 0.003 K/sec ; 1,567,401 page-faults # 0.014 M/sec ; 391,763,587,760 cycles # 3.382 GHz ; 273,699,878,762 instructions # 0.70 insn per cycle ; 57,799,809,349 branches # 498.961 M/sec ; 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed; ```; *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**; ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png); ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**; ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png); ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png); *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385:354,fault,faults,354,https://root.cern,https://github.com/root-project/root/pull/3385,2,['fault'],['faults']
Availability,"Hi All,. In the ROOT [release binary list](https://root.cern/releases/release-62406/), for windows, I see there is only root_v6.24.06.**win32**.vc16.exe/zip but no x64 binary. And I have follow below steps to build root project on Windows with VS 2019 to generate x64 binary, but hit below error, so I wonder if ROOT support generate x64 binary on windows? Could you please help have a look, thanks a lot!. 1. Open a x64 Native Tools Command Prompt for VS 2019; 2. git clone --branch master https://github.com/root-project/root.git; 3. cd root; 3. mkdir build_amd64 && cd build_amd64; 4. cmake -G ""Visual Studio 16 2019"" -A x64 -DCMAKE_SYSTEM_VERSION=10.0.18362.0 ..; 5. cmake --build . --config Release. Hit below error when build:; F:/root-project/root/build_amd64/include/RooDataHist.h(282,35): error GE639D5E5: constant expression evaluates to 18446744073709551615 which cannot be narrowed to type 'unsigned long' [-Wc++11-narrowing] [F:\root-project\root\build_amd64\roofit\roofitcore\G__RooFitCore.vcxproj]. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9389:290,error,error,290,https://root.cern,https://github.com/root-project/root/issues/9389,3,['error'],['error']
Availability,"Hi ROOTers!. ### Description; When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce; I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt.; ```; import sys, ROOT as rt; def main(args):; c = rt.TCanvas('c','c',800,600); pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'); pave.AddText('This line is in black.'); # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default); pave.AddText('This line is in red.'); pave.GetListOfLines().Last().SetTextColor(rt.kRed); pave.AddText('This line is in white.'); pave.GetListOfLines().Last().SetTextColor(rt.kWhite); pave.Draw(); c.Draw(); c.SaveAs('color_pave.png'); return; if __name__ == '__main__':; main(sys.argv); ```. ### Output; [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup; ROOT version: 6.22/02 (built from source); Operating system: macOS 10.14.6. ---------------------------------------------; Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6593:277,error,error,277,https://root.cern,https://github.com/root-project/root/issues/6593,2,"['error', 'redundant']","['error', 'redundant']"
Availability,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:362,error,errors,362,https://root.cern,https://github.com/root-project/root/pull/11808,1,['error'],['errors']
Availability,"Hi all! This is my first PR, please be gentle 🙂 . The PR is meant to trigger a discussion on the feature described in the title, rather than being a request that it should go in as-is. ### Description ; Add `-l` and `-e` command line options for passing a list of objects to `TFileMerger::AddObjectNames` and setting the `TFileMerger::kSkipListed` or `TFileMerger::kOnlyListed` flags. ### Purpose ; Allows to merge only certain objects from the list of input files. ### Use case; Merging single directories/trees into separate root files. More concrete: when producing nTuples (on the WLCG) with common LHCb tools, one sometimes wants to run different selections on the same input stream and write out a tree for each of the selections. All these trees end up in the same root file. ### Shortcomings; - All directories will be copied in allowlist mode, but the ones not on the allowlist will be empty. I didn't look further into this, but it could be that this would have to be changed in `TFileMerger` rather than `hadd`.; - The code is not rigorously tested. If the feature should be added, I am available to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5995:1098,avail,available,1098,https://root.cern,https://github.com/root-project/root/pull/5995,1,['avail'],['available']
Availability,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:708,down,download,708,https://root.cern,https://github.com/root-project/root/issues/8292,2,['down'],['download']
Availability,"Hi there,. Running root-based reading analysis jobs in ATLAS, we are having problems trying to understand why some jobs fail on certain sites at file open when reading remote files with xrootd. We are using ROOT version 6.18/04. (I don't think that we have problems with 6.16/00, and a few tests indicate that 6.20/06 also had this problem.) . What we see is that for a file open:. std::unique_ptr< TFile > ifile( TFile::Open( file.c_str(), ""READ"" ) );. on a grid site node, the job exits with status code 139, which I believe is SIGURG - Urgent condition on socket (4.2BSD). ; The status code from TApplication::HandleException is 128 + root enum, and 11 is kSigUrgent. ; See:; https://root.cern.ch/doc/master/TApplication_8cxx_source.html#l00602; https://root.cern.ch/doc/master/TSysEvtHandler_8h_source.html#l00107. Running the same program interactively on the same file works fine. And it seems that only some sites with remote reading are failing. So we would like to ask for help in trying to track this down. Currently, there is no stack trace to help understand things, and a simple 'print' just after TFile::Open is not printed. . I tried to add:. gApplication->ExitOnException( TApplication::kDontExit );. thinking that https://root.cern.ch/doc/master/TApplication_8cxx_source.html#l00602. void TApplication::HandleException might throw an exception, but this does not work. So suggestions would be welcome. Is there a way to get a stack trace or more information on what is going on in the I/O part of this file open?. I don't know how to add in watchers for people in ATLAS, or a mailing list. But I did find @krasznaa. thanks much, RD",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948:1011,down,down,1011,https://root.cern,https://github.com/root-project/root/issues/6948,1,['down'],['down']
Availability,"Hi! I have been trying to run several rooFit tutorials in Swan and also locally with ROOT v6.22.08 in MacOS. I am getting errors with some functions. There are multiple, but on example is `gauss.plotOn(xframe, LineColor=""r"")` and it doesn't seem to accept the `LineColor` argument. I get:. ```; TypeError: RooAbsPdf::plotOn got an unexpected keyword argument 'LineColor'; ```. I tried copying the code and running them in a cmslpc cluster and in my mac but I get the same error like in Swan.; I haven't seen any solution so far to this problem. Are there any updated sets of tutorials?. One can quickly reproduce the problem/s, by running some Swan notebooks. For example: https://root.cern.ch/doc/master/rf101__basics_8py.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8973:122,error,errors,122,https://root.cern,https://github.com/root-project/root/issues/8973,2,['error'],"['error', 'errors']"
Availability,"Hi, . A regression was introduced in TMutiGraph with a log scale; I found a commit that seems to be linked to my problem [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604). my OS is debian10 x86_64 with gcc8.3. here is sample script to reproduce the bug :. ```; void multigraph(); {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; c1->SetLogx();; c1->SetLogy();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1); {; 		x1.push_back(E);; 		sig1.push_back(10*pow(E,-0.1));; 		sig2.push_back(15*pow(E,-0.15));; 		}; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->GetXaxis()->CenterTitle(true);; mg->GetYaxis()->CenterTitle(true);; mg->Draw(""AL"");; c1->SaveAs(""multigraph.pdf"");; }; ```. It works fine on versions 6.14.08, 6.18.04 and 6.20.06; TMultiGraph scale is wrong with versions 6.22.08, 6.24.06.; There is also an error message at the console (negative value for log scale). ```; Processing multigraph.C...; Error in <THistPainter::PaintInit>: log scale requested with a negative argument (-1.720339); Info in <TCanvas::Print>: pdf file multigraph.pdf has been created; ```. I remove the patch [https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604](https://github.com/osschar/root/commit/d087f000322c7958f02c8e9ddce2a302502c8604) on version 6.24.06 and it works again. thanks in advance",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9011:1181,error,error,1181,https://root.cern,https://github.com/root-project/root/issues/9011,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143:713,Error,Error,713,https://root.cern,https://github.com/root-project/root/issues/7143,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, I am running nightly tests of COOL which is built using PyROOT, and since the 10th September, one test is failing when using ROOT master branch on all the platforms we test (slc6 with gcc8 and centos7 with gcc8-10 and clang10).; I suspect one commit from Sep 9, 2020 to be responsible for this change of behaviour. Here is the error and backtrace:; ```; python: /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/include/llvm/Support/Casting.h:106: static bool llvm::isa_impl_cl<To, const From*>::doit(const From*) [with To = clang::UsingDecl; From = clang::Decl]: Assertion `Val && ""isa<> used on a null pointer""' failed.; *** Break *** abort; ===========================================================; There was a crash (#7 0x00007facdfe876c8 in SigHandler(ESignals) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:407).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007facdeaa889e in waitpid () from /lib64/libc.so.6; #1 0x00007facdea3a4e9 in do_system () from /lib64/libc.so.6; #2 0x00007facdfe8b434 in TUnixSystem::Exec(char const*) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007facdfe8bc6a in TUnixSystem::StackTrace() () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007facdc599248 in (anonymous namespace)::do_trace(int) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #5 0x00007facdc5992c1 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #6 0x00007facdfe8f519 in TUnixSystem::DispatchSignals(ESignals) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:3644; #7 0x00007facdfe876c8 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359:331,error,error,331,https://root.cern,https://github.com/root-project/root/issues/6359,1,['error'],['error']
Availability,"Hi,. After touch a header file in `io/io/inc` and running **only** `ninja RIO` then running `root.exe -b -l -q` I get:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:172,error,error,172,https://root.cern,https://github.com/root-project/root/issues/7704,2,['error'],['error']
Availability,"Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output; ```cmake; -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log; [ 0%] No update step for 'TBB'; [ 0%] No patch step for 'TBB'; [ 0%] No configure step for 'TBB'; [ 0%] Performing build step for 'TBB'; CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get; ```cmake; -- Found TBB: /opt/homebrew; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):; if given arguments:. ""VERSION_LESS"" ""2018""; ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one?. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10370:315,down,download,315,https://root.cern,https://github.com/root-project/root/issues/10370,4,"['Error', 'down']","['Error', 'download']"
Availability,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092:901,echo,echo,901,https://root.cern,https://github.com/root-project/root/issues/8092,1,['echo'],['echo']
Availability,"Hi,. This has been bugging me for a while now. 😛. ROOT has been exporting a CMake configuration for downstream projects (using ROOT) for a while now. But the exported/imported library targets at the moment can't be used with code like:. ```cmake; find_package( ROOT 6.10 REQUIRED ); add_executable( MyExecutable test.cxx ); target_link_libraries( MyExecutable ROOT::Core ); ```. In this case the build would complain that it can't find the ROOT headers that `test.cxx` may want to use. Even though the expectation against imported targets **is** that they would carry all information with them to compile any client code correctly. While the latter sentiment can take us quite far, as one could even argue that imported libraries should carry whatever compiler definitions/options the client may need with themselves, unfortunately this is not super easy to do with CMake at the moment. (For instance I don't know of a good way in which the imported library could impose the same C++ standard on the client project that ROOT was built with. While allowing the client project to use an even newer standard if needed.). So for now I'll just be satisfied making sure that at least the include directory needed by the ROOT libraries would be automatically propagated to clients wanting to link against them. This update takes care of that. Cheers,; Attila",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466:100,down,downstream,100,https://root.cern,https://github.com/root-project/root/pull/1466,1,['down'],['downstream']
Availability,"Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:; ```; Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found; Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine.; ```; A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:; ```; root[0] .L path_to_celeritas_build/libceleritas_root.so; ```; leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:; ```; std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);; ```; for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162:180,error,errors,180,https://root.cern,https://github.com/root-project/root/issues/10162,12,"['Error', 'avail', 'down', 'error']","['Error', 'available', 'down', 'error', 'errors']"
Availability,"Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into; ```; In file included from v6-22-06/install/include/Math/Vector4D.h:12:; v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup; return sqrt(mm);; ^; v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here; fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,; Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7905:222,error,error,222,https://root.cern,https://github.com/root-project/root/issues/7905,1,['error'],['error']
Availability,"Hi,; I am trying to download the ROOT VM from the https://cernbox.cern.ch/index.php/s/ZF5pffhZuZjwgAI, but there is an UNKNOWN ERROR while entering this link. would you please help me on this error?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12158:20,down,download,20,https://root.cern,https://github.com/root-project/root/issues/12158,3,"['ERROR', 'down', 'error']","['ERROR', 'download', 'error']"
Availability,"Hi,; I'm trying to use lambda expressions to define TF1 objects.; Inside python I run the following code:; `from ROOT import TF1`; `f = TF1('f', lambda x: x[0], 0, 1)`; `f.Draw()`. but I get a blank canvas and this error:; ```; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/daniel/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-06-13/lib/ROOT/_application.py"", line 68, in displayhook; gInterpreter.EndOfLineAction(); TypeError: void TInterpreter::EndOfLineAction() =>; TypeError: callable was deleted; ```. I'm using pyroot inside the AliPhysics environment. I tested these lines on 4 different machines that use different versions of python: 3.6, 3.7, 3.8 and 3.9. Only with the two older versions it runs as expected. For python 3.8 and 3.9 the error message is the same. Do you know what might be the cause of this behavior with newer versions of python?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9465:215,error,error,215,https://root.cern,https://github.com/root-project/root/issues/9465,2,['error'],['error']
Availability,"Hi,; The example in https://root.cern/manual/io_custom_classes/ has MyClass inside quotes. That gives errors and misleads people trying to follow the manual.; BR, ; Jan",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12869:102,error,errors,102,https://root.cern,https://github.com/root-project/root/issues/12869,1,['error'],['errors']
Availability,"Hi,; We are trying to test latest ROOT 6.28 patches (commit 36349764e9) and ROOT master (commit 84d6328434) branch changes in cmssw. Though root itself builds fine in both cases but we get CMSSW build errors [a]. Note that we did not see such errors with ROOT 6.28-patches commit b684439239. Looks like rootcling and `c++20` issue. Is it a known issue?. [a] ; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-394617/32404/build.log; ```; >> Checking EDM Class Version for src/DataFormats/L1GlobalCaloTrigger/src/classes_def.xml in libDataFormatsL1GlobalCaloTrigger.so; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/cling/std.modulemap:554:10: error: module 'std.bits/uses_allocator_args.h' requires feature 'cplusplus20'; module ""bits/uses_allocator_args.h"" [optional] {; ^; /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/memory_resource:42:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/uses_allocator_args.h> // uninitialized_construct_using_alloc; ^; ```. this is the stack trace we see when this error occurs; ```; ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00002b4bd10da72b in waitpid () from /lib64/libc.so.6; #1 0x00002b4bd103bcf7 in do_system () from /lib64/libc.so.6; #2 0x00002b4bd1d2345c in TUnixSystem::Exec (this=0x7472d0, shellcmd=0xc1f5720 ""/pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/etc/gdb-backtrace.sh 43811 1>&2"") at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:201,error,errors,201,https://root.cern,https://github.com/root-project/root/issues/12771,3,['error'],"['error', 'errors']"
Availability,"Hi,; i try to t install root, i get the cMakelists.text issue; CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11819:69,Error,Error,69,https://root.cern,https://github.com/root-project/root/issues/11819,1,['Error'],['Error']
Availability,Hit CMake Error when build root with msvc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9347:10,Error,Error,10,https://root.cern,https://github.com/root-project/root/issues/9347,1,['Error'],['Error']
Availability,Hit errors when build ROOT with msvc on AddressSanitizer mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445:4,error,errors,4,https://root.cern,https://github.com/root-project/root/issues/9445,1,['error'],['errors']
Availability,"How to compile code see Readme in gui/canvaspainter. Code is not yet used - I will provide another patch after this PR and #717 are merged. CEF-related makefile should be improved. ; One can use **cefsimple** cmake files as an example. https://bitbucket.org/chromiumembedded/cef/src/8e69e3dcea8b/tests/cefsimple/?at=master. **cefsimple** has some specialization for linux, mac and windows. ; I used only linux till now. One could try mac - for that one should include simple_handler_mac.mm into compilation instead of simple_handler_linux.cxx. Same is for cef_main.cxx. Formally one need to create separate versions for mac, linux and windows.; You can see example also in **cefsimple**. These are different platform-specific error handlers. Building of Qt5 part is not called from makefile. I hope, one can add it into makefile when qt5-webengine is discovered. Also rootqt5 executable should be moved into $ROOTSYS/bin directory",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/721:726,error,error,726,https://root.cern,https://github.com/root-project/root/pull/721,1,['error'],['error']
Availability,"How to resolve ""Warning in TClass::Init: no dictionary for class is available""?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9123:68,avail,available,68,https://root.cern,https://github.com/root-project/root/issues/9123,1,['avail'],['available']
Availability,"Hub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7861:1713,down,download,1713,https://root.cern,https://github.com/root-project/root/issues/7861,1,['down'],['download']
Availability,"I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was; ```; $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:95,failure,failures,95,https://root.cern,https://github.com/root-project/root/issues/7936,1,['failure'],['failures']
Availability,"I am refactoring the old code of ROOT I/O for compression. Some part of the code are up to 30 years old and from my experience that the C style code that is used is prone to errors for developers that are not familiar with the code. Since one of the goals of ROOT is to be maintainable, I think that this can be very helpful.; Nonetheless, even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes that have been done so far are the following:. ### Removed pointers https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer. Also, the irep now is a reference rather than a pointer. However, I think that it would be better to make the function not void and instead of using irep just return a value. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be const unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060:174,error,errors,174,https://root.cern,https://github.com/root-project/root/pull/4060,2,['error'],['errors']
Availability,"I am trying to refactor the old code of ROOT I/O for compression but the even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes of this PR are based on top of another PR https://github.com/root-project/root/pull/3947 for adding support for ZSTD so for our goal just focus on the following commits. ### Removed pointers and unsigned chars https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer.; Also there is a mess in the compression algorithms since consider the buffers as unsigned chars, and other as chars. The type does not matter since we are only working with bytes but we should use only one to avoid all the casting that we find across the code base. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - What is the current value of maintaining the legacy algorithm (from 1990) of ROOT compression? If it is maintained it would be nice to make it more readable and follow the same structure and naming as the rest of compression algorithm.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4037:1214,error,errors,1214,https://root.cern,https://github.com/root-project/root/pull/4037,1,['error'],['errors']
Availability,"I am using root version 5. My code ran on the cern grid (PID 2095060486) successfully and it did not give me any errors. But when I try to merge all the jobs (changed the command ""full"" into ""terminate""), it gives me the following error. ; ```; PIDResponse: Initialising AliAnalysisTaskPIDResponse; ==============================================================================; E-AddTaskTender: No supply added to tender, so tender not created. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fba2e69317c in waitpid () from /lib64/libc.so.6; #1 0x00007fba2e610e52 in do_system () from /lib64/libc.so.6; #2 0x00007fba37e843f9 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0xe50280) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/unix/src/TUnixSystem.cxx:2172; #3 TUnixSystem::StackTrace (this=0xe50280) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/unix/src/TUnixSystem.cxx:2419; #4 0x00007fba37e8638c in TUnixSystem::DispatchSignals (this=0xe50280, sig=kSigSegmentationViolation) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/unix/src/TUnixSystem.cxx:1294; #5 <signal handler called>; #6 0x00007fba36ddb793 in AliAnalysisTask::SetUsed (this=0x27a9980, flag=flag; entry=true) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisTask.cxx:540; #7 0x00007fba36dc471a in AliAnalysisManager::InitAnalysis (this=0x24a9f30) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisManager.cxx:1633; #8 0x00007fba36df65e1 in G__G__ANALYSIS_215_0_109 (result7=result7; entry=0x7ffcac8c2c90, funcname=funcname; entry=0x249df80 """", libp=libp; entry=0x7ffcac8c2cd0, hash=hash; entry=0) at /home/gnp78160/alice/sw/BUILD/ec8cb744704e066b1ec26fcf535125d0830c6a08/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:113,error,errors,113,https://root.cern,https://github.com/root-project/root/issues/6977,2,['error'],"['error', 'errors']"
Availability,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:163,fault,faults,163,https://root.cern,https://github.com/root-project/root/issues/8474,2,['fault'],"['fault', 'faults']"
Availability,"I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```; RooRealVar alpha(""alpha"",""alpha"",-5,5);; RooRealVar nom(""nom"",""nom"",10);; RooRealVar up(""up"",""up"",11);; RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});; pi.setAllInterpCodes(5);; TGraph gr;; alpha = -3;; while (alpha.getVal()<3) {; gr.AddPoint(alpha.getVal(),pi.getVal());; alpha.setVal(alpha.getVal()+0.1);; }; gr.Draw(""ALP"");; ```; ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16169:352,down,down,352,https://root.cern,https://github.com/root-project/root/pull/16169,4,['down'],['down']
Availability,"I don't understand `error: expected is not a library`, just re-use `error: file not found` when the file doesn't exist, and continue to be helpful (""maybe you meant..."") if the file can be found through `HeaderSearch`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7509:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/7509,2,['error'],['error']
Availability,"I encountered the following inconcistent behaviour in the `TTreeReader`; ```cpp; auto dfWriter0 = RDataFrame(3).Define(""x"", [] { return 1; });; dfWriter0.Snapshot<int>(""treeA"", ""file0.root"", {""x""});; auto chain = std::make_shared<TChain>(""treeA"");; chain->Add(""file0.root"");; TTreeReader r(chain.get(), chain->GetEntryList());; r.SetEntriesRange(4, 5);; ```; this produces: `Error in <TTreeReader::SetEntriesRange()>: Error setting first entry 4: one of the readers was not successfully initialized`, which is good (as expected). On the other hand, if the range becomes `r.SetEntriesRange(3, 5)` - start is now the last index + 1, there is no error produced or etc. Using gdb, I saw that there is a call in `SetEntriesRange` to `SetEntry(beginEntry - 1)` (https://github.com/root-project/root/blob/f841b96e634b7f7136b0c80da0f9394e8e370314/tree/treeplayer/src/TTreeReader.cxx#L438). `SetEntry` however, calls `SetEntryBase`, which modifies `fEntry`. Hence, the quickfix to call `SetEntry(beginEntry)` is obviously dangerous. CC: @eguiraud @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10774:375,Error,Error,375,https://root.cern,https://github.com/root-project/root/issues/10774,3,"['Error', 'error']","['Error', 'error']"
Availability,"I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```; [ 51%] Linking CXX shared library ../../lib/libGraf.so; 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1; 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11239:14,failure,failure,14,https://root.cern,https://github.com/root-project/root/issues/11239,2,"['error', 'failure']","['error', 'failure']"
Availability,I get this error in one of my builds. Maybe a typo?; ```; /home/vpadulan/Programs/rootproject/root/hist/hist/src/TKDE.cxx:538:21: error: suggest parentheses around assignment used as truth value [-Werror=parentheses]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7145:11,error,error,11,https://root.cern,https://github.com/root-project/root/pull/7145,2,['error'],['error']
Availability,"I got these errors while building from master on Fedora 32 with the following command `cmake -GNinja -Ddev=ON -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=Release` . ```; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx: In member function ‘virtual void ROOT::Experimental::RWebBrowserImp::BrowseObj(TObject*)’:; /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:89:31: error: invalid use of incomplete type ‘class TSeqCollection’; 89 | if (gROOT->GetListOfFiles()->FindObject(obj)); | ^~; In file included from /home/vpadulan/Programs/rootproject/root/gui/browserv7/src/RWebBrowserImp.cxx:15:; /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:59:7: note: forward declaration of ‘class TSeqCollection’; 59 | class TSeqCollection;; | ^~~~~~~~~~~~~~; ninja: build stopped: subcommand failed.; ```. Not sure if it's the right fix, but I thought it was worth mentioning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8255:12,error,errors,12,https://root.cern,https://github.com/root-project/root/pull/8255,2,['error'],"['error', 'errors']"
Availability,"I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode.; Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick; also in batch mode.; This allows for propagating information about evaluation errors to the; minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7266:151,recover,recovery,151,https://root.cern,https://github.com/root-project/root/pull/7266,3,"['error', 'recover']","['errors', 'recovery']"
Availability,"I had to run the tests to check the fix for the `-fPIE` issue, and decided it may be useful to report on the other test failures that I observe. The full command line I used for the configuration is below; ```; $ cmake -DCMAKE_CXX_FLAGS=""-O2 -march=native -pipe"" -DPYTHON_EXECUTABLE=""/usr/bin/python3.9"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dclad=""OFF"" -Dclingtest=""ON"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddaos=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmonalisa=""OFF"" -Dr=""OFF"" -Droofit_multiprocess=""OFF"" -Droottest=""ON"" -Dtest_distrdf_dask=""OFF"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvecgeom=""OFF"" /srv/root/src/root; ```; I am attaching here the [CMake configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:120,failure,failures,120,https://root.cern,https://github.com/root-project/root/issues/9436,1,['failure'],['failures']
Availability,I have debugged the code up till the evaluate() method and it seems ok. So the errors are maybe at the analytical integral...,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4440:79,error,errors,79,https://root.cern,https://github.com/root-project/root/pull/4440,1,['error'],['errors']
Availability,"I have installed [xfitter](https://www.xfitter.org/xFitter/) package using ROOT. Installation was completed successfully ; but when I want to run some examples I encounter this error:. ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f80c2812dba in __GI___wait4 (pid=139255, stat_loc=stat_loc; entry=0x7fff1886c568, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f80c2812d7b in __GI___waitpid (pid=<optimised out>, stat_loc=stat_loc; entry=0x7fff1886c568, options=options; entry=0) at waitpid.c:38; #2 0x00007f80c27820e7 in do_system (line=<optimised out>) at ../sysdeps/posix/system.c:172; #3 0x00007f817cab0c47 in TUnixSystem::StackTrace() () from /home/mamali/Packages/root_install/lib/libCore.so; #4 0x00007f817caadef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/mamali/Packages/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007fff1886f330 in ?? (); #7 0x00005639fcd3b4e6 in init_theory_modules () at init_theory.f:13; #8 0x00005639fcd03ddc in xfitter () at main.f:72; #9 0x00005639fccfb53d in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fff1886f330 in ?? (); #7 0x00005639fcd3b4e6 in init_theory_modules () at init_theory.f:13; #8 0x00005639fcd03ddc in xfitter () at main.f:72; #9 0x00005639fccfb53d in main (); ====================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9179:177,error,error,177,https://root.cern,https://github.com/root-project/root/issues/9179,1,['error'],['error']
Availability,"I have question. Does `roottest` runs `cmake --build . --target cling-test` when the cling interpreter code is changed? From time to time I see, that commits are merged regardless of whether the CI fails.; If I understand Cling's workflow correctly, changes are integrated and tested in ROOT and automatically streamed down to Cling after the merge in ROOT. So, if `roottest` does not run the integrated tests in cling, it is possible that the Cling CI is bypassed, or I'm wrong?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6957:319,down,down,319,https://root.cern,https://github.com/root-project/root/issues/6957,1,['down'],['down']
Availability,I hope all errors could be resolved.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1422:11,error,errors,11,https://root.cern,https://github.com/root-project/root/pull/1422,1,['error'],['errors']
Availability,"I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15973:131,error,error,131,https://root.cern,https://github.com/root-project/root/pull/15973,3,['error'],['error']
Availability,"I initially reported this on the [root forum](https://root-forum.cern.ch/t/roodllsignificancemcsmodule-merge-error/42702). ### Describe the bug; RooAbsMCStudyModule::finalizeRun() returning a RooDataSet sometimes causes a merge error which is difficult to avoid.; Caused by RooMCStudy::_fitParData and RooAbsMCStudyModule data being different sizes. ### Expected behavior; RooMCStudy and RooAbsMCStudyModule data merging correctly,; OR; A way to consistently make the datasets the same size. ### To Reproduce; Run included macro. ```. #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooConstVar.h""; #include ""RooAddPdf.h""; #include ""RooMCStudy.h""; #include ""RooFFTConvPdf.h""; #include ""RooArgusBG.h""; #include ""RooDLLSignificanceMCSModule.h"". using namespace RooFit;; const double xmin = 4.3, xmax = 4.55, bratio = 0.3, m0 = 4.482;; const int nevents = 100;. void min_mcsign_error() {; 	RooRealVar x(""mresp"", ""x"", 4.3, 4.55);. 	// signal; 	RooRealVar mean_res(""#mean_{gauss}"", ""mean_res"", 4.47);; 	RooRealVar sigma_res(""#sigma_{gauss}"", ""sigma_res"", 0.05);; 	RooGaussian sig(""gs_res"", ""gs_res"", x, mean_res, sigma_res);. 	// background; 	RooRealVar argpar(""shape"", ""argus shape parameter"", -7);; 	RooRealVar power(""power"", ""argus power parameter"", 0.75);; 	RooArgusBG bkg(""bkg"", Form(""Background ARGUS, m_{0} = %.3f"", m0), x, RooConst(m0), argpar, power);. 	// generating distribution; 	RooRealVar nsig(""nsig"", ""signal number"", bratio);; 	RooRealVar nbg(""nbg"", ""bg number"", 1.-bratio); ; 	RooAddPdf mcdist(""distribution"", ""BW+a"", RooArgList(sig, bkg), RooArgList(nsig, nbg));. 	// signal used in model; 	RooRealVar fitmean_res(""#mean_{gauss}"", ""mean_res"", 4.2, 4., 5.);; 	RooRealVar fitsigma_res(""#sigma_{gauss}"", ""sigma_res"", 0.1, 0., 1.);; 	RooGaussian fitsig(""gs_res"", ""gs_res"", x, fitmean_res, fitsigma_res);; 	; 	// background used in model; 	RooRealVar fitargpar(""shape"", ""fit argus shape parameter"", -6.5, -8, -6);; 	RooRealVar fitpower(""power"", ""fit argus power parameter"", 0.5, 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6949:109,error,error,109,https://root.cern,https://github.com/root-project/root/issues/6949,2,['error'],['error']
Availability,I installed root via this video [https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30](https://www.youtube.com/watch?v=pmfM4Zq6OQU&list=PLLybgCU6QCGWLdDO4ZDaB0kLrO3maeYAe&index=30) . To build a starlight ; ![Screenshot 2022-10-23 133107](https://user-images.githubusercontent.com/116489914/197387186-122e8d49-1751-4152-bc5c-c9ce70a8f60a.png); I tried a lot to fix this error ; ![Screenshot 2022-10-22 220723](https://user-images.githubusercontent.com/116489914/197386889-d40c094c-b457-4e2c-a549-caf0d6d39a61.png) . Please help me,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11626:409,error,error,409,https://root.cern,https://github.com/root-project/root/issues/11626,1,['error'],['error']
Availability,"I know there's ""add debug output"" - but this is something we'll want to have available anyway, without having to re-run. I'm not dumping `env` because that can trigger the log grepper (not too concerned by tokens - GH is doing a good job at hiding those).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12581:77,avail,available,77,https://root.cern,https://github.com/root-project/root/pull/12581,1,['avail'],['available']
Availability,I manage to reproduce error on my docker and seems to be `--headless=new` is a solution. Let see,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14774:22,error,error,22,https://root.cern,https://github.com/root-project/root/pull/14774,1,['error'],['error']
Availability,"I may be missing something but I seem to be unable to compile ROOT 6.28/04 with c++14. I use. ```; cmake ../root/root-6.28.04/ -DCMAKE_CXX_VERSION=14; ```. And get the following confirmation at the end of the cmake output. ```; System Linux-3.10.0-1160.88.1.el7.x86_64; Processor 36 core Intel(R) Xeon(R) CPU E5-2695 v4 @ 2.10GHz (x86_64); Build type Release; Compiler GNU 6.3.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both""; ```; As far as I can tell, gcc6.3.0 should have full c++14 capability. However, eventually I get the following errors:. ```; Consolidate compiler generated dependencies of target Dictgen; Consolidate compiler generated dependencies of target ClingUtils; Consolidate compiler generated dependencies of target MetaCling; [ 78%] Built target ClingUtils; [ 78%] Built target Dictgen; Consolidate compiler generated dependencies of target rootcling_stage1; [ 78%] Built target rootcling_stage1; [ 78%] Built target MetaCling; [ 78%] Generating G__Core.cxx, ../lib/Core.pcm; [ 78%] Linking CXX shared library ../../../lib/libCling.so; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:741,error,errors,741,https://root.cern,https://github.com/root-project/root/issues/13453,1,['error'],['errors']
Availability,I observed these building on macOS 13.2.1 and XCode 14.2. - Construction of `std::span` from vector iterators directly fails to compile due to not finding a conversion. This can be worked around by passing in a pointer and a size.; - Warning about C++20 preferring symmetric equality operators (this is not a failure (yet)).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12617:309,failure,failure,309,https://root.cern,https://github.com/root-project/root/pull/12617,1,['failure'],['failure']
Availability,"I realized this was broken when updating the VecCore version to 0.4.1. The new version now downloads Vc and UME::SIMD from LCG packages repository, and uses http instead of https, in order to avoid problems in systems in which curl has no support for https. I also took the oportunity to fix a few warnings due to wrong indentation of the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/598:91,down,downloads,91,https://root.cern,https://github.com/root-project/root/pull/598,1,['down'],['downloads']
Availability,"I resolved the issue described in [this](https://github.com/root-project/root/issues/6748) issue. Instead of throwing an error in . ```; root [0] Ssiz_t n = -5;; root [1] TString *a = new TString(""a"", n);; ```; It now creates an empty String by doing this:; ```; char *data = Init(0, 0);; memcpy(data, """", 0);; return;; ```; Is this correct?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7024:121,error,error,121,https://root.cern,https://github.com/root-project/root/pull/7024,1,['error'],['error']
Availability,"I see some import failures from `ROOT.RVec` in #5310, added a test here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5361:18,failure,failures,18,https://root.cern,https://github.com/root-project/root/pull/5361,1,['failure'],['failures']
Availability,"I suspect that this is the cause of the error:; ```; Resource limits are not supported and ignored on cgroups V1 rootless systems; aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407; Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup; Error: Docker start fail with exit code 125; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14146:40,error,error,40,https://root.cern,https://github.com/root-project/root/pull/14146,6,"['Error', 'error']","['Error', 'error']"
Availability,"I think `if (demangledEnumName)` was meant here, but it is redundant, because behaviour of `free`ing a null pointer is defined and it is no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/248:59,redundant,redundant,59,https://root.cern,https://github.com/root-project/root/pull/248,1,['redundant'],['redundant']
Availability,"I think there's a potentially nasty backward incompatibility issue arising from this commit: https://github.com/root-project/root/commit/90ba866a65bd44e74a995aa330e0a950114443d6#diff-896028fd27621f8bfe9d0774c5529e27df523e5bd7fcfe2ac54f6fd1ced316f9. Details of how the problem appeared to me are below, but I will say that the problem went away when I compiled 6.22 branch with the `_value` data member removed (since it masks the RooAbsReal one). I am guessing here that a RooConstVar version 2 written to disk isn't properly loaded as a RooConstVar version 1. But what is odd is that under some circumstances it seems that the const var value is correctly loaded -- it seems connected to if the arg is ""dirty"" or not. Sorry for being a bit vague, I dont fully understand why it is sometimes a problem and sometimes not but the problem goes away when the above commit is effectively ported back into 6.22. The issue first appeared for me when I opened a workspace (I wanted to attach to this issue but it wont let me attach a root file) created in 6.23.01 in 6.22.00 ... the only warning I get is: . ```; Warning in <TStreamerInfo::BuildOld>: Cannot convert RooRealVarSharedProperties::_altBinning from type: unordered_map<string,RooAbsBinning*> to type: RooLinkedList, skip element; ```. But when I tried to evaluate the pdf in the workspace like this:. ```; RooWorkspace* w = f1.Get<RooWorkspace>(""Test"");; auto func = w->pdf(""SR_model"");; auto obs = w->var(""obs_x_SR"");; func->getVal(*obs);; ```. I got this:. ```; message : p.d.f normalization integral is zero or negative: 0; server values: !funcList=(L_x_bkg_SR_overallSyst_x_StatUncert = 47.1,L_x_sig_SR_overallSyst_x_StatUncert = 3.82), !coefList=(binWidth_obs_x_SR_0 = 5.5,binWidth_obs_x_SR_1 = 5.5); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7646:420,mask,masks,420,https://root.cern,https://github.com/root-project/root/issues/7646,1,['mask'],['masks']
Availability,"I think these files are fine to remove, but maybe even removing only the ROOT 5 ones would be already enough (they can be recovered from the older version tarballs in any case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3202:122,recover,recovered,122,https://root.cern,https://github.com/root-project/root/pull/3202,1,['recover'],['recovered']
Availability,I tried to rebuild epel8 testing version of root and it failed one test case (three times so this is not just random failure). 150/1107 Test #109: gtest-io-io-test-RIoUring ...........................................***Failed 0.58 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix. Looks like this test is not proper. No problem with previous versions so this is new failure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8895:117,failure,failure,117,https://root.cern,https://github.com/root-project/root/issues/8895,2,['failure'],['failure']
Availability,"I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’; 238 | branch->ResetBit(kMustCleanup);; | ^~; In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’; 239 | TObjArray *subBranches = branch->GetListOfBranches();; | ^~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’; 241 | TObjArray *leaves = branch->GetListOfLeaves();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10752:69,error,error,69,https://root.cern,https://github.com/root-project/root/pull/10752,4,['error'],['error']
Availability,"I was trying to make a skim from multiple files in the following way ; ```; fChain = ROOT.TChain(""Events""); ; for f in filelist:; fChain.Add(f); events_df = ROOT.RDataFrame(fChain); events_out = events_df .Filter(...; outVars = ....; events_out.Snapshot(""Events"", out, outVars); ```. Unfortunately, I've found that in a limited number of cases I had files that did not have all the required branches. Which threw the following error ; ```; TypeError: could not convert argument 3; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; runtime_error: Column ""HLT_AK8PFJet500"" is not in a dataset and is not a custom column been defined.; Failed to instantiate ""Snapshot(std::string,std::string,std::vector<string>*)""; ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Snapshot(basic_string_view<char,char_traits<char> > treename, basic_string_view<char,char_traits<char> > filename, const vector<string>& columnList, const ROOT::RDF::RSnapshotOptions& options = ROOT::RDF::RSnapshotOptions()) =>; runtime_error: Column ""HLT_AK8PFJet500"" is not in a dataset and is not a custom column been defined.; ```. Is there a way around this? Curiously I've also accidentally tried it in an older env with `6.18` which displayed an error, but created the output file anyway. `Error in <TTreeReader::SetEntryBase()>: There was an error while notifying the proxies` I am not sure about the specific branches, but the file as a whole was still readable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7084:427,error,error,427,https://root.cern,https://github.com/root-project/root/issues/7084,4,"['Error', 'error']","['Error', 'error']"
Availability,"I was trying to quickly check something in the ROOT prompt and just realized that I cannot use errno to check what kind of error some library function call gives, because ROOT somehow always brings errno's value to be 2 after the prompt:. ```; $ root.exe -l; root [0] #include <errno.h>; root [1] errno; (int) 2; root [2] errno = 0; errno; (int) 0; root [3] errno = 0; (int) 0; root [4] errno; (int) 2; root [5] .q; $ errno 2; ENOENT 2 No such file or directory; ```. Not sure this can even be fixed, but if `errno` is `ENOENT` after each prompt, it makes it useless to try to use it interactively. With strace I see the following:; ```; root [1] errno; newfstatat(AT_FDCWD, ""/home/amadio/input_line_9"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_9"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""/home/amadio/input_line_10"", 0x7ffe2d76cea0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_10"", 0x7ffe2d76d140, 0) = -1 ENOENT (No such file or directory); (int) 2; root [2] errno = 0; newfstatat(AT_FDCWD, ""/home/amadio/input_line_11"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_11"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory); (int) 0; root [3] errno; newfstatat(AT_FDCWD, ""/home/amadio/input_line_12"", 0x7ffe2d76d1f0, 0) = -1 ENOENT (No such file or directory); newfstatat(AT_FDCWD, ""input_line_12"", 0x7ffe2d76d490, 0) = -1 ENOENT (No such file or directory); (int) 2; root [4] ; ```; So ROOT is trying to open a file named `intput_line_N` in the home directory and the current directory. Why?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12462:123,error,error,123,https://root.cern,https://github.com/root-project/root/issues/12462,1,['error'],['error']
Availability,I would prefer not to have my private mail address online available to everyone.; Please change it to my office mail address.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4709:58,avail,available,58,https://root.cern,https://github.com/root-project/root/pull/4709,1,['avail'],['available']
Availability,I'd like to start testing again the case highlighted by https://github.com/root-project/root/issues/13361. Note at the beginning: the issue arose with `runtime_cxxmodules=OFF` and I'm not sure we have that in the CI so we might not see errors right away,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15749:236,error,errors,236,https://root.cern,https://github.com/root-project/root/pull/15749,1,['error'],['errors']
Availability,"I'm creating a TTree with a class that inherits from a base class, without a problem. However, in the same program a couple lines later,; ```; TClass branchClass(c->GetBranch(""event"")->GetClassName());; if (branchClass.InheritsFrom(""dicttest::EventDis"") {....}; ```; fails with; ```; Warning in <TClass::TClass>: no dictionary for class dicttest::EventPythia is available; Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); Error in <TObjArray::At>: index 0 out of bounds (size: 1, this: 0x127faed70); ```. It works fine interactively but not when compiled. I have a demonstrator that's pretty minimal here:; https://github.com/kkauder/rootbreaker. This behavior is new to root 6.24, tested on Apple M1 and Ubuntu. The same code worked fine in root 6.20.04; I haven't been able to test other versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8250:362,avail,available,362,https://root.cern,https://github.com/root-project/root/issues/8250,3,"['Error', 'avail']","['Error', 'available']"
Availability,"I'm looking into the facade to fix [ROOT-10629](https://sft.its.cern.ch/jira/browse/ROOT-10629). However, we can improve in the lookup logic. Especially to throw more meaningful error messages. In short: Imho, stacking `try` blocks is not a good idea. The behaviour now:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 171, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 144, in _fallback_getattr; raise AttributeError(""Failed to import {} from ROOT"".format(name)); AttributeError: Failed to import foo from ROOT; ```. The behaviour before:. ```bash; >>> import ROOT; >>> ROOT.foo; Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 137, in _fallback_getattr; return getattr(gbl_namespace, name); AttributeError: <namespace cppyy.gbl at 0x5641444c41f0> has no attribute 'foo'. Full details:; type object '' has no attribute 'foo'; 'foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 140, in _fallback_getattr; return getattr(gbl_namespace.ROOT, name); AttributeError: <namespace cppyy.gbl.ROOT at 0x564145da5680> has no attribute 'foo'. Full details:; type object 'ROOT' has no attribute 'foo'; 'ROOT::foo' is not a known C++ class; 'foo' is not a known C++ template; 'foo' is not a known C++ enum. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_facade.py"", line 173, in _getattr; return getattr(self, name); File ""/home/stefan/builds/root-dev/lib/python3.8/ROOT/_fac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5187:178,error,error,178,https://root.cern,https://github.com/root-project/root/pull/5187,1,['error'],['error']
Availability,"I'm seeing an error when building an application with root 6.26.06, gcc 11.2 and Kokkos 3.7. I didn't see this when building the same source against root 6.24.00, Kokkos 3.4 with gcc 9.3. Nothing in the source is explicitly calling TExecutorCRTP. . Before I start playing with all permutations of root / gcc / kokkos to see where the issue starts, I'm wondering if anyone has seen this before or has some advice. This is the error I see:. ```; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:191:1: error: no declaration matches ‘std::vector<typename std::result_of<F(INTEGER)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, ROOT::TSeq<INTEGER>)’; 191 | auto TExecutorCRTP<SubC>::Map(F func, ROOT::TSeq<INTEGER> args) -> std::vector<typename std::result_of<F(INTEGER)>::type>; | ^~~~~~~~~~~~~~~~~~~~; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:124:72: note: candidates are: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, const std::vector<T>&)’; 124 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:122:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::vector<T>&)’; 122 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:120:72: note: ‘template<class SubC> template<class F, class T, class Cond> std::vector<typename std::result_of<F(INTEGER, ...)>::type> ROOT::TExecutorCRTP<SubC>::Map(F, std::initializer_list<T>)’; 120 | template<class F, class T, class Cond = noReferenceCond<F, T>>; | ^ ; /opt/root/v6-26-06_gcc112_c17/include/ROOT/TExecutorCRTP.hxx:118:84: note: ‘template<class SubC> template<class F, class INTEGER, class Cond> std::vector<typename std::result_of<F(INTEGER",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11495:14,error,error,14,https://root.cern,https://github.com/root-project/root/issues/11495,3,['error'],['error']
Availability,"I'm trying to build root (v6.24.06) with nvc++ from NVIDIA's nvhpc project (ver 21.9), as I get runtime segfaults when I build a project with nvc++ and link it against root built with gcc 9.3.0. However, building root fails during cmake (3.21.3) with; ```; CMake Warning at cmake/modules/CheckCompiler.cmake:12 (message):; Unsupported compiler: NVHPC.; Call Stack (most recent call first):; CMakeLists.txt:130 (include). nvc++-Error-Unknown switch: -; CMake Error at cmake/modules/CheckCompiler.cmake:129 (if):; if given arguments:. ""STRGREATER"" ""201703L"". Unknown arguments specified; Call Stack (most recent call first):; CMakeLists.txt:130 (include); ```. so it looks like nvc++ doesn't know about the `__cplusplus` macro. If I hack around this, cmake finishes, but then the compilation dies with ; ```; [ 27%] Building CXX object interpreter/llvm/src/lib/Support/CMakeFiles/LLVMSupport.dir/GraphWriter.cpp.o; ""/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/Support/ErrorHandling.cpp"", line 116: error: the global scope has no ""write""; ssize_t written = ::write(2, MessageStr.data(), MessageStr.size());; ^; ```; and; ```; NVC++-F-0000-Internal compiler error. get_call_sptr(): indirect call not via LDA/ACON 154 (/bld4/atlas/root/src_6.24/interpreter/llvm/src/lib/DebugInfo/DWARF/DWARFContext.cpp: 193); NVC++/x86-64 Linux 21.9-0: compilation aborted; make[2]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/DWARFContext.cpp.o] Error 2; make[2]: *** Waiting for unfinished jobs....; [ 52%] Built target obj.clang-tblgen; make[1]: *** [interpreter/llvm/src/lib/DebugInfo/DWARF/CMakeFiles/LLVMDebugInfoDWARF.dir/all] Error 2; CMake Error at /bld4/atlas/root/bld.v6-24-06_nvhpc_c17/TBB-prefix/src/TBB-stamp/TBB-build-Release.cmake:49 (message):; Command failed: 2. 'make' 'cpp0x=1' 'CXXFLAGS= -mno-rtm' 'CPLUS=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc++' 'CONLY=/opt/nvidia/hpc_sdk/Linux_x86_64/21.9/compilers/bin/nvc' 'LDFLAGS='; ```. Has anyone tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036:427,Error,Error-Unknown,427,https://root.cern,https://github.com/root-project/root/issues/9036,3,['Error'],"['Error', 'Error-Unknown', 'ErrorHandling']"
Availability,"I'm trying to compile ROOT v6.24/06 on Void Linux with musl libc, however the build fails with the following error message:; ```cc; /builddir/root-6.24.06/core/clib/src/mmapsup.c:47:15: error: conflicting types for 'getpagesize'; 47 | extern size_t getpagesize PARAMS ((void));; | ^~~~~~~~~~~; In file included from /builddir/root-6.24.06/core/clib/res/mmprivate.h:56,; from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:; /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here; 163 | int getpagesize(void);; | ^~~~~~~~~~~; ```. The relevant part of `mmapsup.c` is:; ```c; #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \; || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)); extern size_t getpagesize PARAMS ((void));; #else; extern int getpagesize PARAMS ((void));; #endif; ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253:109,error,error,109,https://root.cern,https://github.com/root-project/root/issues/9253,2,['error'],['error']
Availability,"I'm trying to fit a 2d histogram with a 2d gaussian using pyroot, but I get an error telling me that instead of a 2d function the fit is trying to use a 1d function.; This is the function I have:. ```; class gauss2d_function:; def __init__(self):; self.n1 = 1.0 # normalization 1; self.m1 = 60. # mean 1; self.s1 = 1.0 # sigma 1; self.m2 = 60.0 # mean 2; self.s2 = 1.0 # sigma 2. def __call__(self, x, parameters):; import math; n1 = parameters[0] # normalization 1; m1 = parameters[1] # mean 1; s1 = parameters[2] # sigma 1; m2 = parameters[3] # mean 2; s2 = parameters[4] # sigma 2. x1 = x[0]; y1 = math.exp(-(x1-m1)*(x-m1)/(s1*s1)/2.); x2 = x[1]; y2 = math.exp(-(x2-m2)*(x-m2)/(s2*s2)/2.). retval = n1*math.exp(-0.5*(y1*y1+y2*y2)); ; return retval. ```. and here it is the code:. ```; hscat = ROOT.TH2F('scat', 'scatter plot', 3000, xmin, xmax, 200, \; tmin, tmax); .; .; .; . func2d = gauss2d_function(); gaus2d = ROOT.TF2('gauss2d', func2d, xmin, xmax, tmin, tmax, 5); hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit). ```; the error is the following:. ```; Traceback (most recent call last):; File ""python/crosstalk.py"", line 447, in <module>; main(); File ""python/crosstalk.py"", line 436, in main; doAnalysis(dbcon, path, filename, channel, photon); File ""python/crosstalk.py"", line 216, in doAnalysis; hscat.Fit('gauss2d', '+', 'same', lowerlimit, upperlimit); TypeError: none of the 2 overloaded methods succeeded. Full details:; TFitResultPtr TH1::Fit(TF1* f1, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>; TypeError: could not convert argument 1; TFitResultPtr TH1::Fit(const char* formula, const char* option = """", const char* goption = """", double xmin = 0, double xmax = 0) =>; TypeError: unsupported operand type(s) for -: 'cppyy.LowLevelView' and 'float'. ```; I'm using ROOT 6.24.06 on CentOS 8. Thank you very much; Roberto",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9745:79,error,error,79,https://root.cern,https://github.com/root-project/root/issues/9745,2,['error'],['error']
Availability,"I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so; #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so; #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24; #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24; #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so; #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24; #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24; #13 0x00007ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:264,error,error,264,https://root.cern,https://github.com/root-project/root/issues/10676,2,['error'],['error']
Availability,"I. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:2549,Error,Error,2549,https://root.cern,https://github.com/root-project/root/pull/15272,2,"['Error', 'error']","['Error', 'error']"
Availability,"I.e. [this failure](https://github.com/root-project/root/pull/11314#issuecomment-1238128791), which should be completely unrelated to the changes in the corresponding PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11326:11,failure,failure,11,https://root.cern,https://github.com/root-project/root/pull/11326,1,['failure'],['failure']
Availability,"IC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.o"" -dynamiclib -Wl,-headerpad_max_install_names -m64 -single_module -Wl,-dead_strip_dylibs -undefined dynamic_lookup ""-lfakelink"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libz.1.2.11.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/liblzma.5.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libcrypto.1.1.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libsqlite3.0.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libssl.1.1.dylib"" ""-lnetwork"" ""-lpcap.A"" ""-ldns_services"" ""-lz.1"" ""-lcoretls_cfhelpers"" ""-lapple_nghttp2"" ""-lenergytrace"" ""-lsqlite3"" ""-lMobileGestalt"" ""-lcoretls"" ""-lxar.1"" ""-lcompression"" ""-larchive.2"" ""-lxml2.2"" ""-llzma.5"" ""-lbz2.1.0"" ""-liconv.2"" ""-lcharset.1"" ""-lCheckFix"" ""-lmecabra"" ""-lmecab"" ""-lger",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:4491,Down,Downloads,4491,https://root.cern,https://github.com/root-project/root/issues/7249,1,['Down'],['Downloads']
Availability,"IF_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) ; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Building AfterImage library included in ROOT itself; -- Looking for liburing; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gtest_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1783 (target_compile_options):; Cannot specify compile options for imported target ""gmock_main"".; Call Stack (most recent call first):; CMakeLists.txt:219 (include). -- Building LLVM in 'Release' mode.; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR) ; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:2490,Error,Error,2490,https://root.cern,https://github.com/root-project/root/issues/7654,1,['Error'],['Error']
Availability,"INS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE]+0x498): undefined reference to `tbb::detail::r1::execution_slot(tbb::detail::d1::execution_data const*)'; /usr/bin/ld: TThreadExecutor.cxx:(.text._ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE[_ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE]+0x507): undefined reference to `tbb::detail::r1::allocate(tbb::detail::d1::small_object_pool*&, unsigned long, tbb::detail::d1::execution_data const&)'; /usr/bin/ld: TThreadExecutor.cxx:(.text._ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE[_ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE]+0x58e): undefined reference to `tbb::detail::r1::allocate(tbb::detail::d1::small_object_pool*&, unsigned long, tbb::detail::d1::execution_data const&)'; /usr/bin/ld: TThreadExecutor.cxx:(.text._ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE[_ZN3tbb6detail2d19start_forINS1_13blocked_rangeIjEENS1_25parallel_for_body_wrapperISt8functionIFvjEEjEEKNS1_16auto_partitionerEE7executeERNS1_14execution_dataE]+0x5bc): undefined reference to `tbb::detail::r1::spawn(tbb::detail::d1::task&, tbb::detail::d1::task_group_context&)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/imt/CMakeFiles/Imt.dir/build.make:201: lib/libImt.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:33286: core/imt/CMakeFiles/Imt.dir/all] Error 2; make: *** [Makefile:156: all] Error 2; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11931:38898,error,error,38898,https://root.cern,https://github.com/root-project/root/issues/11931,4,"['Error', 'error']","['Error', 'error']"
Availability,"Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:; ```; if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {; gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());; }; ```; but doing that caused many errors in dictionary generation. So; apparently we can't do that. Instead, we can stop loading them at; runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2912:275,error,errors,275,https://root.cern,https://github.com/root-project/root/pull/2912,1,['error'],['errors']
Availability,"If IMT is disabled, force the execution policy to be `ROOT::Fit::ExecutionPolicy::kSerial`, warning the user that a change in the execution policy has been made. This should fix the errors in the tests built without IMT. When the support for `kMultitProcess` is finished, maybe we should change this and force the execution policy to be `kMultitProcess`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/871:182,error,errors,182,https://root.cern,https://github.com/root-project/root/pull/871,1,['error'],['errors']
Availability,"If a RooAddPdf or RooAddModel has negative coefficients, the; RooAddGenContext can't be used and we need to fall back to the generic; RooGenContext. To achieve this without code duplication, a new templated static; function has been added to the `RooAddGenContext` that returns either a; new RooAddGenContext when there are no negative coeffiecients, or a; generic RooGenContext when there are. If for an existing RooAddGenContext the coeficients of the pdf are; changed to be negative, it will throw an error the next time you try to; generate an event and kindly ask the user to create a new generator; context. It was checked with the example code from #7252 that generating events for AddPdfs with negative coefficients works now. A separate commit in this PR applies some general code modernization to the RooAddGenContext.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10912:504,error,error,504,https://root.cern,https://github.com/root-project/root/pull/10912,1,['error'],['error']
Availability,"If a field name doesn't exist in the RNTupleModel, we raise an; exception with the problematic field name and NTuple. There are; some other possible errors to be considered:; * Calling GetViewCollection on a non-collection field?; * Calling GetView<T> on a field with a different type U?. Before this change, missing names caused an out of range exception.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7736:149,error,errors,149,https://root.cern,https://github.com/root-project/root/pull/7736,1,['error'],['errors']
Availability,"If found, value will be used as first candidate when searching for browser on file system; Provide functionality to dump JSON file for canvas painting; Window error should be resolved by @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1918:159,error,error,159,https://root.cern,https://github.com/root-project/root/pull/1918,1,['error'],['error']
Availability,"If not built with the same compiler, CMAKE_CXX_FLAGS may contain flags not known by the default compiler, which will make the test fail. In particular using Ninja + Clang on Linux makes this test fail with the error below without this patch.; ```; c++: error: unrecognized command line option ‘-fcolor-diagnostics’; ninja: build stopped: subcommand failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3389:210,error,error,210,https://root.cern,https://github.com/root-project/root/pull/3389,2,['error'],['error']
Availability,"If one overloads `RooAbsArg::redirectServersHook()`, one also needs to; call the `redirectServersHook()` of the base class. Otherwise, important; things that must be done when redirecting the servers of a `RooAbsReal`; or `RooAbsPdf` for example are not done. In particular, this fixes some ASAN build test failures where the; `RooAbsPdf::_normSet` member was not reset when redirecting servers; because `RooAbsPdf::redirectServersHook()` was not called. A second, minor commit in this PR cleans the includes in `stressRooFit_tests.h`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11194:307,failure,failures,307,https://root.cern,https://github.com/root-project/root/pull/11194,1,['failure'],['failures']
Availability,"If one tries to update a directory inside an existing file, Snapshot complains:; `Error in <TFile::mkdir>: An object with name hi exists already`. This fixes the problem by using the `returnExistingDirectory` option in `mkdir`. First mentioned in the forum [here](https://root-forum.cern.ch/t/snapshot-complains-when-updating-existing-directory/37935). Similar to [PR4649](https://github.com/root-project/root/pull/4649).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4964:82,Error,Error,82,https://root.cern,https://github.com/root-project/root/pull/4964,1,['Error'],['Error']
Availability,"If one uses the `VisualizeError` and `FillColor` options of [RooAbsReal::plotOn()](https://root.cern.ch/doc/master/classRooAbsReal.html#a5d22644c9cc8178ea1c9dca93fdab48e), for example like this:; ```C++; using namespace RooFit;; model.plotOn(frame, VisualizeError(*r, 1), FillColor(kOrange));; ```; You get a false warning:; ```; WARNING:Plotting -- Fill color or style was set for plotting ""model"", but these only have an effect when; 'DrawOption(""F"")' for fill is used at the same time.; ```; That warning should not appear there, because `FillColor` or `FillStyle` actually have an effect because the define the filling of the error band enabled by `VisualizeError`. The expected behavior is:; * the warning should only appear if `VisualizeError` is not given as a command argument. To reproduce the problem: run the [rf610_visualerror.C tutorial](https://github.com/root-project/root/blob/master/tutorials/roofit/rf610_visualerror.C).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9859:630,error,error,630,https://root.cern,https://github.com/root-project/root/issues/9859,1,['error'],['error']
Availability,"If one wants to replace some servers of a RooAbsArg with; other servers, this is the the only option you have:. ```c++; bool RooAbsArg::redirectServers(const RooAbsCollection& newSetOrig,; bool mustReplaceAll, bool nameChange,; bool isRecursionStep); ```. That's not so great, because if the new servers have different names,; thes old names must be set as the `""ORIGNAME:<myname>""` attribute for; the function to know which servers should be replaced. These attributes are generally not reset, and this mutation of the; server attributes can cause trouble down the line. Notably, this causes trouble in the BatchMode when compiling the; computation graph for a given normalization set. One single new server; might replace differently-named original servers. In that case, the new; servers get *two* ""ORIGNAME:"" attributes and the the `redirectServers()`; function doesn't know what to do. Also, it's inefficient because of the string matching. For this reason, a new overload is suggested, where one can simply; specify what should replace what in a lookup map, and it doesn't matter; if the names are different:. ```c++; bool RooAbsArg::redirectServers(; std::unordered_map<RooAbsArg *, RooAbsArg *> const &replacements; ); ```. The implementation of `redirectServers()` calls; `RooAbsProxy::changePointer()`, for which such a new overload also had; to be added. Using the new `RooAbsArg::redirectServers()` overload that takes a; lookup map of server replacements, the helper class that compiles the computation graph for a given normalization set can be; improved such that it's not necessary to set the `""ORIGNAME:""`; attributes of new servers. This fixes some failures in the RooFit tutorials with BatchMode where; some servers eventually aggregated multiple `""ORIGNAME:""` attributes,; causing `redirectServers()` to error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12928:557,down,down,557,https://root.cern,https://github.com/root-project/root/pull/12928,3,"['down', 'error', 'failure']","['down', 'error', 'failures']"
Availability,If provided pointer type does not match with type read; from JSON check inheritance. It can be that pointer type; is parent class. In case of error return - do not try to read data for wrong object,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5330:142,error,error,142,https://root.cern,https://github.com/root-project/root/pull/5330,1,['error'],['error']
Availability,"If the parameters of a function are outside of the definition range,; all kinds of errors might occur. PDFs might be negative, have negative; integrals, coefficients for the summation of PDFs might degenerate, ... Previously, RooFit was just returning a high function value to Minuit.; This value was always the same, though.; Like this, Minuit cannot compute a gradient to get out of this region,; because all bad parameter points yield the same function value. With this commit, RooFit can pack information about the ""badness"" of a; parameter point into the mantissa of a NaN, e.g. how much negative the; values of a PDF came out or how far the sum of PDF coefficients is from; 1. This information is packed into NaN using ""RooNaNPacker"", and passed; through the computation graph. It is finally unpacked in RooMinimizerFcn; before being handed to the minimiser. This allows for the calculation of; gradients, enabling the fitter to recover from an invalid state more; easily. When NaNs are being unpacked, they are presented to Minuit as maximum; function value + badness * penaltyStrength, so a gradient can be; computed that points away from the bad region. The maximum function; value comes from previous minimisation steps, the badness is the payload; of the packed NaN, and the strength can be set from the outside. If the minimisation starts out in an undefined region, and the maximum; function value is not (yet) known, 0. + badness * strength is used.; Once a well-defined region is found, the valid function values are; offset such that they are all lower than 0. In this way, Minuit is; encouraged to step into the well-defined regions, and sees a rapidly; rising function when stepping out. When fit results are saved, though,; this offset is subtracted in order to recover ""correct"" NLL values. Concretely:; - Add RooNaNPacker.; - Add a function to set the magnitude of the penalty term that's; supposed to drive the minimiser away from undefined regions.; - Add a function to RooMinim",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6401:83,error,errors,83,https://root.cern,https://github.com/root-project/root/pull/6401,2,"['error', 'recover']","['errors', 'recover']"
Availability,"If the parameters of a function are outside of the definition range,; all kinds of errors might occur. PDFs might be negative, have negative; integrals, coefficients for the summation of PDFs might degenerate, ... Previously, RooFit was just returning a high function value to Minuit.; This value was always the same, though.; Like this, Minuit cannot compute a gradient to get out of this region,; because all bad parameter points yield the same function value. With this commit, RooFit can pack information about the ""badness"" of a; parameter point into the mantissa of a NaN, e.g. how much negative the; values of a PDF came out or how far the sum of PDF coefficients is from; 1. This information is packed into NaN using ""RooNaNPacker"", and passed; through the computation graph. It is finally unpacked in RooMinimizerFcn; before being handed to the minimiser. This allows for the calculation of; gradients, enabling the fitter to recover from an invalid state more; easily. When NaNs are being unpacked, they are presented to Minuit as maximum; function value + badness * penaltyStrength, so a gradient can be; computed that points away from the bad region.; If the minimisation starts out in an undefined region, and the maximum; function value is unknown, 0. + badness * strength is passed on.; Once a well-defined region is found, the valid function values are; offset such that they are all lower than 0. This way, Minuit is; encouraged to step into the well-defined regions. When fit results are; saved, this offset is subtracted, in order to recover ""correct"" NLLs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6383:83,error,errors,83,https://root.cern,https://github.com/root-project/root/pull/6383,3,"['error', 'recover']","['errors', 'recover']"
Availability,"If the user disables fortran but a fortran compiler is actually; present, then hist/CMakeLists.txt will still try to compile; hbook (which results in a failure). This patch explicitly sets the fortran compiler to not found; in order to prevent this from occurring.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/128:152,failure,failure,152,https://root.cern,https://github.com/root-project/root/pull/128,1,['failure'],['failure']
Availability,"If the user doesn't provide a histogram model in distributed mode, the; merging of different histograms coming from different distributed tasks; would not work since the histograms would most probably have; incompatible bins. Rather than wait for failures like. `Error in <Merge>: Cannot merge histograms - limits are inconsistent`. that happen only when the distributed execution has already started and; may be hidden inside worker logs, raise an error in the local user; machine. An example of the error raised with this change: running this snippet; ```python; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; from dask.distributed import Client, LocalCluster. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":; df = RDataFrame(10, daskclient = create_connection()).Define(""x"",""rdfentry_""); m = ROOT.RDF.TH1DModel(""name"",""title"",10,0,10); df.Histo1D(m, ""x""); print(""After first Histo1D""); df.Histo1D((""name"",""title"",10,0,10), ""x""); print(""After second Histo1D""); df.Histo1D(""x""); print(""After third Histo1D""); ```; results in; ```; After first Histo1D; After second Histo1D; Traceback (most recent call last):; File ""/home/vpadulan/projects/rootcode/distrdf-histo-nomodel/test.py"", line 17, in <module>; df.Histo1D(""x""); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Proxy.py"", line 240, in _create_new_op; op = Operation.create_op(self.proxied_node._new_op_name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 118, in create_op; return SUPPORTED_OPERATIONS[name](name, *args, **kwargs); File ""/home/vpadulan/programs/rootproject/rootbuild/master-default/lib/DistRDF/Operation.py"", line 60, in __init__; raise TypeError(textwrap.fill(message)); TypeError: A histogram was created without a model. This cannot work in; distributed mode because hist",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10368:247,failure,failures,247,https://root.cern,https://github.com/root-project/root/pull/10368,4,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420:327,down,down,327,https://root.cern,https://github.com/root-project/root/pull/5420,2,"['Error', 'down']","['Error', 'down']"
Availability,"If we call `gInterpreter->GenerateDictionary(""std::vector<int>"")` with; missing second parameter (which expects to pass the corresponding include); we crash. This patch enables error reporting and removes the default argument to; tell the user that nullptr is not expected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1724:177,error,error,177,https://root.cern,https://github.com/root-project/root/pull/1724,1,['error'],['error']
Availability,If we generate a dictionary with a C++ module with rootcling we; should write in the payload that we generated a C++ module.; This way we can actually print a *reliable* warning when we fail; to load the C++ module during runtime. Without this we can only; speculate if a missing C++ module is intentional.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1511:160,reliab,reliable,160,https://root.cern,https://github.com/root-project/root/pull/1511,1,['reliab'],['reliable']
Availability,"If we use -fimplicit-module-maps this means that cling will find all files called module.modulemap on the include paths. In certain cases the same modulemap can be present in two locations causing module redefinition errors. This patch teaches cling to work with explicitly specified modulemaps in -fno-implicit-module-maps mode. It moves the generation of the overlay file closer to the CIFactory so that we can reuse the modulemap loading code before the interpreter object was set up. The patch also turns off the implicit module map discovery and explicitly specifies the ROOT-related modulemap files. The modulemap files need to be enumerated in both TCling and rootcling. Rootcling requires -fno-rtti build mode and we cannot use the utilities in TROOT (also because rootcling_stage1 is built before libCore). This requires the extraction of the `GetSysRoot`, `GetIncludeDir` and `GetEtcDir` in the `ROOT::FoundationUtils` which is can be used throughout the entire core component. This fixes ROOT-10354.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553:217,error,errors,217,https://root.cern,https://github.com/root-project/root/pull/4553,1,['error'],['errors']
Availability,"Implement and use a thread-safe container for caching strings that are created and used in the computation graph. Notably, these include the strings representing column names generated by `Define`. This fixes the recent failures seen on MacOS in the `dataframe-vary` unittest. Since that underlines a thread-safety issue in the overall initialisation phase of MT RDF runs, it should be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15652:220,failure,failures,220,https://root.cern,https://github.com/root-project/root/pull/15652,1,['failure'],['failures']
Availability,Implement reversed graphs for error bars and log scale.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12235:30,error,error,30,https://root.cern,https://github.com/root-project/root/pull/12235,1,['error'],['error']
Availability,"Implement the possibility to save TGraph* as .csv, .tsv and .txt; as requested here https://github.com/root-project/root/issues/9491. Test example:. ```; {; auto c = new TCanvas(""c"",""A Simple Graph without axis"",700,500);. const Int_t n = 10;; auto gr = new TGraph(n);; gr->SetTitle(""A Simple Graph"");; gr->GetXaxis()->SetTitle(""X axis"");; gr->GetYaxis()->SetTitle(""Y axis"");. auto gre = new TGraphErrors(n);; gre->GetXaxis()->SetTitle(""X axis"");; gre->GetYaxis()->SetTitle(""Y axis"");; gre->SetTitle(""A Simple Graph with errors"");. auto gra = new TGraphAsymmErrors(n);; gra->GetXaxis()->SetTitle(""X axis"");; gra->GetYaxis()->SetTitle(""Y axis"");; gra->SetTitle(""A Simple Graph with asymmetric errors"");. auto grb = new TGraphBentErrors(n);; grb->GetXaxis()->SetTitle(""X axis"");; grb->GetYaxis()->SetTitle(""Y axis"");; grb->SetTitle(""A Simple Graph with bent errors"");. Double_t x, y, exl, exh, eyl, eyh;; for (Int_t i=0;i<n;i++) {; x = i*0.123;; y = 10*sin(x+0.2);; exl = x*0.01;; exh = x*0.1;; eyl = y*0.01;; eyh = y*0.1;; gr->SetPoint(i,x,y);; gre->SetPoint(i,x,y);; gre->SetPointError(i,exl,eyl);; gra->SetPoint(i,x,y);; gra->SetPointError(i,exl,exh, eyl, eyh);; grb->SetPoint(i,x,y);; grb->SetPointError(i,exl,exh, eyl, eyh);; }. gr->Draw(""A*L"");; gr->SaveAs(""graph.csv"", ""title"");; gr->SaveAs(""graph.tsv"", ""title"");; gr->SaveAs(""graph.txt"", ""title"");; gr->SaveAs(""graph.C"");; gre->SaveAs(""grapherror.csv"", ""title"");; gre->SaveAs(""grapherror.tsv"", ""title"");; gre->SaveAs(""grapherror.txt"", ""title"");; gra->SaveAs(""graphaerror.csv"", ""title"");; gra->SaveAs(""graphaerror.tsv"", ""title"");; gra->SaveAs(""graphaerror.txt"", ""title"");; grb->SaveAs(""graphberror.csv"", ""title"");; grb->SaveAs(""graphberror.tsv"", ""title"");; grb->SaveAs(""graphberror.txt"", ""title"");. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10365:521,error,errors,521,https://root.cern,https://github.com/root-project/root/pull/10365,3,['error'],['errors']
Availability,Implement what is suggested here:; https://root-forum.cern.ch/t/histogram-drawing-options-e-do-not-clip-errorbars/41857/12,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6697:104,error,errorbars,104,https://root.cern,https://github.com/root-project/root/pull/6697,1,['error'],['errorbars']
Availability,"Implemented the systematic variations in the Higgs to Four Leptons tutorial.; The revised plot shows the up and down variations; of the total Monte Carlo weight (scale factor), together with; the uncertainty band in between those lines.; The C++ version of the full tutorial is now also available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13907:112,down,down,112,https://root.cern,https://github.com/root-project/root/pull/13907,2,"['avail', 'down']","['available', 'down']"
Availability,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162:204,error,error-handling,204,https://root.cern,https://github.com/root-project/root/pull/6162,1,['error'],['error-handling']
Availability,"Implicit casts of buffers to contiguous memory pointers are rather error prone. It would be better to follow the example of the STL containers and implement a `data()` member function. Like this, we can also use `std::data()` to get a pointer to the contiguous data in the RTensor implementation, which closes #13498. The new `data()` method is now used everywhere inside TMVA, but implicit casting is also kept for backwards compatibility. Alternative to https://github.com/root-project/root/pull/13322, notably implementing the suggestion of @lmoneta:; https://github.com/root-project/root/pull/13322#discussion_r1286002161",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16515:67,error,error,67,https://root.cern,https://github.com/root-project/root/pull/16515,1,['error'],['error']
Availability,Importing NumPy in python after importing ROOT results in segmentation error on Python 3.11.2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12874:71,error,error,71,https://root.cern,https://github.com/root-project/root/issues/12874,1,['error'],['error']
Availability,Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5327:84,failure,failure,84,https://root.cern,https://github.com/root-project/root/pull/5327,1,['failure'],['failure']
Availability,"Improve class design around `RAttrBase` classes. ; Introduce `RAttrValue<typename T>` template class to access single value from attributes.; Use it in all attributes classes and existing drawable classes. ; Let specify in single place type, string name and default value for each attribute. Add following draw options for `RH1`:; * `Error()`; * `Text()`; * `Marker()`; * `Bar()`; * `Line()`; * `Lego()`. Add `Arrow()` draw option for `RH2`. Fix problem with 3D drawings - objects which position related to frame (which is not visible in 3D) now positioned and moved correctly after pad resize. Provide draw options overview macros: `draw_rh1.cxx` (see attached image), `draw_rh2.cxx`, `draw_rh3.cxx`. ![draw_rh1](https://user-images.githubusercontent.com/4936580/85689202-b7b98e80-b6d2-11ea-82fe-2a3b33fa0b37.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5926:334,Error,Error,334,https://root.cern,https://github.com/root-project/root/pull/5926,1,['Error'],['Error']
Availability,"Improve error message when the requested type doesn't match the on-disk type:; ```cpp; // underlying column is a double; auto view = ntuple->GetView<float>(""myDouble"");; ```. Before:; ```; Unexpected column type: Real64 of column #0 for field myDouble; ```; After:; ```; On-disk type `Real64` of column #0 for field `myDouble` is not convertible to requested type `Real32`; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/8227,1,['error'],['error']
Availability,Improve startup by 15% (avoid redundant work).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10354:30,redundant,redundant,30,https://root.cern,https://github.com/root-project/root/pull/10354,1,['redundant'],['redundant']
Availability,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16281:12,error,error,12,https://root.cern,https://github.com/root-project/root/pull/16281,4,"['avail', 'error']","['available', 'error', 'errors']"
Availability,Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. ; - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3966:232,avail,available,232,https://root.cern,https://github.com/root-project/root/pull/3966,1,['avail'],['available']
Availability,Improve the tutorial ErrorIntegral.C with the explanations given by @lmoneta in this forum post: https://root-forum.cern.ch/t/tutorial-fit-errorintegral-c-explanation/44210/3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7738:21,Error,ErrorIntegral,21,https://root.cern,https://github.com/root-project/root/pull/7738,2,"['Error', 'error']","['ErrorIntegral', 'errorintegral-c-explanation']"
Availability,Improve tutorial ErrorIntegral.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7738:17,Error,ErrorIntegral,17,https://root.cern,https://github.com/root-project/root/pull/7738,1,['Error'],['ErrorIntegral']
Availability,Improved error message on wrong exit code in test driver,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/904:9,error,error,9,https://root.cern,https://github.com/root-project/root/pull/904,1,['error'],['error']
Availability,"In C++14, this would require a definition. This should solve the linking errors about ""undefined reference""s in the incrementals.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12352:73,error,errors,73,https://root.cern,https://github.com/root-project/root/pull/12352,1,['error'],['errors']
Availability,"In Fedora 29, with gcc, there is a problem with __builtin_cpu_supports() function. It causes an undefined symbol error during linking, unless you link against -lgcc explicitly. There was already code in the file to protect against this bug in some versions of gcc, but as the problems seems to exist under various gcc build configurations, I change the code to include the fix for every gcc version. See also: https://github.com/root-project/root/issues/6855",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6867:113,error,error,113,https://root.cern,https://github.com/root-project/root/pull/6867,1,['error'],['error']
Availability,"In GCC9, operator== and operator!= are no longer member functions of STL iterators (seen in _Rb_tree_iterator). This means they cannot be obtained anymore with GetListOfMethods of the iterator class. Such change broke the iteration of STL classes from Python when using (old) cppyy alone in GCC9. The addition of the operators to the iterator class still happened when importing ROOT because; in that case gApplication is initialized to TPyROOTApplication, which is required in Utility::AddBinaryOperator to add the operators. This PR adds the necessary logic so that operator== and operator!= are also added to the iterator proxy class when using cppyy alone in GCC9. The addition is done lazily as a last attempt before throwing an error in the comparison.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4678:734,error,error,734,https://root.cern,https://github.com/root-project/root/pull/4678,1,['error'],['error']
Availability,"In PyROOT it is possible to convert a Numa array in a std.vector. However when the types are different instead of having an error, a wrong conversion happens. ; Here is an example:; ```python; import ROOT; import numpy as np. x = np.array([1., 2., 3.]); v = ROOT.std.vector('float')(x); print(v); ```; The obtained result is ; ```; { 0.00000f, 1.87500f, 0.00000f }; ```; without getting any error. . Instead if I use the correct type:; ```; x = np.array([1.,2.,3.], dtype='float32'); v = ROOT.std.vector('float')(x); print(v); ```; I obtain the correct result. ; This can cause give wrong results when calling from Python C++ functions taking std::vector as argument and the wrong type of Numpy array is passed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12230:124,error,error,124,https://root.cern,https://github.com/root-project/root/issues/12230,2,['error'],['error']
Availability,"In Python 3, you can't do this because `None` is special:; ```Python; DataError=ROOT.RooAbsArg.None # syntax error!; ```. The tutorials used some workarounds that were either obfuscating `None`; by using the enum value directly, or used the more verbose `getattr`; approach:; ```Python; DataError=ROOT.RooAbsData.ErrorType(2); DataError=getattr(ROOT.RooAbsData, ""None""); ```. This commit pythonizes DataError with the usual string-to-enum; pythonization pattern already used for `LineColor` or `LineStyle` to; avoid this uglieness. One can do now:; ```Python; DataError=""None""; DataError=None; ```. This PR also generalized the string-to-enum pythonization for strings (see the first commit).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9721:109,error,error,109,https://root.cern,https://github.com/root-project/root/pull/9721,2,"['Error', 'error']","['ErrorType', 'error']"
Availability,"In ROOT, we should be able to lookup global variables, macros, and functions defined in external AST source. (For example gROOT, std::vector..). When R binding is On, we import R related header files such as TRInterface.h and RExports.h. These header files include Constants.h, which defines `PI` like this:. ```; # define M_PI 3.14159265358979323846 /* pi */; # define PI M_PI; ```. In theory, we should be able to lookup this as well, but rootmap files are; broken and it doesn't have information about macros. So what happened; were tutorials define PI by themselves (which is conflicting with above; definition) but ROOT didn't emit errors. In modules, we're trying to preload modules so that we don't miss these namespaces and macros. PI is also visible from ROOT and; treated as a macro, so users don't have to define it themselves.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1824:637,error,errors,637,https://root.cern,https://github.com/root-project/root/pull/1824,1,['error'],['errors']
Availability,"In RooAbsPdf, the following check is done to check if the normalization; set has changed:; ```C++; RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet); ```. This works, but like the previous pointer comparison it still gives; false results if the `_normSet` was replaced buy another RooArgSet at; the same memory location. The problem can be reproduced with this code:. ```C++; using namespace RooFit;. // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y); RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));; RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));; RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf; RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution; // which should not be the case!; std::cout << model.getVal(x) << std::endl;; std::cout << model.getVal({x, y}) << std::endl;; ```. The solution would be to replace the `_normSet` member directly with; its unique ID value, but then it could not be used anymore. Hence we; need both. This commit also adds a new private `RooAbsPdf` member functions to set; the `_normSet` together with the new `_normSetId` member, and one; protected `isActiveNormSet(RooArgSet const*)` function. The latter; function is comparing the input to the current `_normSet`, but shortcuts; to `false` is the ID does not match with the last `_normSet` ID. Like; this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in; RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11176:1613,failure,failures,1613,https://root.cern,https://github.com/root-project/root/pull/11176,1,['failure'],['failures']
Availability,"In TBufferFile::WriteFastArrayString, we had. ```; if (n < 255) {; *this << (UChar_t)n;; } else {; *this << (UChar_t)255;; *this << n;; }; ```. A recent commit changed the type of the n parameter from Int_t to Long64_t. This is effectively an incompatible change in the on-disk format, but only for strings which are at least 255 characters long. Further, ReadFastArrayString is still reading an Int_t, so this version of ROOT cannot read files that it writes. Resolve by changing WriteFastArrayString to explicitly write an Int_t. Also move the bounds check on the length to before writing anything into the buffer. Fixes a failure seen in the unit tests of the ATLAS EventInfo package in the dev3LCG build. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887:625,failure,failure,625,https://root.cern,https://github.com/root-project/root/pull/14887,1,['failure'],['failure']
Availability,"In TGrpahErrors TGraphAsymmErrors and TGraphBentErrors, the error bars were drawn inside the marker when the marker was bigger than the error bars. This was reported in this forum post: https://root-forum.cern.ch/t/error-bars-inside-markers-with-draw-same/60631",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16372:60,error,error,60,https://root.cern,https://github.com/root-project/root/pull/16372,3,['error'],"['error', 'error-bars-inside-markers-with-draw-same']"
Availability,"In Ubuntu snap chrome version is used and it does not correctly; translate command line arguments, making problem to use it in batch.; Error already communicated by Axel:; https://bugs.launchpad.net/ubuntu/+source/snap/+bug/1893020; Once it is fixed, this commit can be reverted",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6260:135,Error,Error,135,https://root.cern,https://github.com/root-project/root/pull/6260,1,['Error'],['Error']
Availability,"In `RooAbsCategoryLValue::setBin()`, there is a check for passing a; named binning, because the function doesn't support named binnings. However, if a binning with that name doesn't exist, it is fine to not; error out, because the default range is used. This supports the fit in this forum post:; https://root-forum.cern.ch/t/roosimultaneous-and-roofftconvpdf/53606. There are also two additional commits with some code modernization as usual.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12305:208,error,error,208,https://root.cern,https://github.com/root-project/root/pull/12305,1,['error'],['error']
Availability,"In a C++20 build (in this case using GCC 13):; ```; $ touch test.cpp; $ ./bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 02 2023, 08:25:11 |; | From heads/master@v6-29-01-1276-g12cf386128 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp++; Info in <TUnixSystem::ACLiC>: creating shared library /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/./test_cpp.so; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; In file included from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/ROOT/RConfig.hxx:23,; from /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/test_cpp_ACLiC_dict.cxx:13:; /home/jhahnfel/ROOT/build-asserts-gcc13-cxx20/include/RConfigure.h:30:4: warning: #warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues"" [-Wcpp]; # warning ""The C++ standard in this build does not match ROOT configuration (202002L); this might cause unexpected issues""; ^~~~~~~; ```. This leads to many test failures because of the additional warning not expected in the reference output. All seems to work fine with C++17 for a compiler that defaults to C++14.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12747:1752,failure,failures,1752,https://root.cern,https://github.com/root-project/root/issues/12747,1,['failure'],['failures']
Availability,"In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7907:502,alive,alive,502,https://root.cern,https://github.com/root-project/root/pull/7907,1,['alive'],['alive']
Availability,"In case of a weighted histogram a weight was applied to compute the expected error for every histogram when the error is not equal to sqrt(N). Now this is done only in case the user perform the fit using the new option ""PW"", otherwise it is assumed the histogram is not weighted and no correction is used for the expected error. See also post https://root-forum.cern.ch/t/does-pearson-chi-square-fit-use-expected-error-or-observed-error-in-th1-fit/55816/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13403:77,error,error,77,https://root.cern,https://github.com/root-project/root/pull/13403,4,['error'],"['error', 'error-or-observed-error-in-']"
Availability,"In case where the class generated by MakeProject derived from a class that deletes the operator= then in some compiler we get the error below (which is expected since the class generated by MakeProject has a copy constructor which is needed by stl collection). . ```; SRChh_ROOT6_mcgenProjectSource.cxx: In copy constructor ‘KKceex::KKceex(const KKceex&)’:; SRChh_ROOT6_mcgenProjectSource.cxx:922:54: error: use of deleted function ‘KKpart& KKpart::operator=(const KKpart&)’; 922 | for (Int_t i=0;i<101;i++) m_Phot[i] = rhs.m_Phot[i];; | ^; In file included from KKceex.h:21,; from KKhh2f.h:22,; from SRChh_ROOT6_mcgenProjectHeaders.h:1,; from SRChh_ROOT6_mcgenProjectSource.cxx:3:; KKpart.h:15:7: note: ‘KKpart& KKpart::operator=(const KKpart&)’ is implicitly declared as deleted because ‘KKpart’ declares a move constructor or move assignment operator; 15 | class KKpart : public TObject {; | ^~~~~~; c++: error: SRChh_ROOT6_mcgenProjectSource.o: No such file or directory; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8987:130,error,error,130,https://root.cern,https://github.com/root-project/root/issues/8987,3,['error'],['error']
Availability,"In civetweb socket handler check different operation codes; According to RFC6455, all not-supported codes should be handled as; failure. Means application should get close message for the socket. Prevent getting close message twice. This PR fixes #9207",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9209:128,failure,failure,128,https://root.cern,https://github.com/root-project/root/pull/9209,1,['failure'],['failure']
Availability,"In different ROOT components, it is convenient to have a helper function that takes a string, similar to the `str.split` function that Python has for example:. ```Python; ""a,b,c,d,e"".split("","") # returns ['a', 'b', 'c', 'd', 'e']; ```. Currently, there is code duplication to provide such a function in separate ROOT components like `roofit` and `hist`:; * https://github.com/root-project/root/blob/dcf920904564bbdca08a6acfa70019bbc24b3897/hist/hist/src/TFormula.cxx#L1678; * https://github.com/root-project/root/blob/dcf920904564bbdca08a6acfa70019bbc24b3897/roofit/roofitcore/src/RooHelpers.cxx#L67. As suggested by @Axel-Naumann in https://github.com/root-project/root/pull/8801#discussion_r683437844, this general function should be moved into `foundation/core` to about the code duplication and make the string-splitting functionality available the every ROOT component. It is still an open question what the name of the function should be (as well as the name of the file it's in), and whether it should return a `std::vector<std::string>` or `std::vector<std::string_view>`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8807:839,avail,available,839,https://root.cern,https://github.com/root-project/root/issues/8807,1,['avail'],['available']
Availability,"In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built.; Error message:; ```; /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’; 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }; | ^~~~~~~~~~~~~~; ```; This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included.; https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8513:61,Error,Error,61,https://root.cern,https://github.com/root-project/root/issues/8513,2,"['Error', 'error']","['Error', 'error']"
Availability,"In https://root-forum.cern.ch/t/re-r-unzip-header-error/38463, the file contains a TDirectory and; a TTree with the same name. Consequently the TKey for the TDirectory was deleted by AutoSave; leading to the corresponding portion of the file to be reused (for the 2nd basket of the branch ped_id) but TDirectory assumes that they key is never ever deleted and thus is rewriting ontop of the basket.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342:50,error,error,50,https://root.cern,https://github.com/root-project/root/pull/5342,1,['error'],['error']
Availability,In methods like `FindBranch` or `GetBranch` nullptr as argument causing failure. Avoid casting to `(char *)`. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10882:72,failure,failure,72,https://root.cern,https://github.com/root-project/root/pull/10882,1,['failure'],['failure']
Availability,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8566:887,error,error,887,https://root.cern,https://github.com/root-project/root/pull/8566,1,['error'],['error']
Availability,In most error situations preallocated buffer was not released,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4901:8,error,error,8,https://root.cern,https://github.com/root-project/root/pull/4901,1,['error'],['error']
Availability,In number of cases over the last years we have seen a need to call clang APIs with valid source locations. The interpreter generates code and valid locations can be problematic. This patch allows cling to return a valid source location even when no code was processed. This way we can provide our modules infrastructure proper source locations to activate the module visibility rules on locations which have common predecessor. The common predecessor is essential when we compare entities for diagnostics or reasoning about module visibility. This PR should fix the nightly failures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5056:574,failure,failures,574,https://root.cern,https://github.com/root-project/root/pull/5056,1,['failure'],['failures']
Availability,In order to avoid packaging errors from rpmlint:; root.x86_64: E: incorrect-fsf-address /usr/share/emacs/site-lisp/root/root-help.el,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/270:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/270,1,['error'],['errors']
Availability,In order to debug not understood test failures that we could; not reproduce outside of the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10892:38,failure,failures,38,https://root.cern,https://github.com/root-project/root/pull/10892,1,['failure'],['failures']
Availability,"In order to solve ROOT-10109, and until #3640 is completed and merged, we temporarily add a pythonisation both in PyROOT and experimental PyROOT to get the overloads for GetBinErrorUp; and GetBinErrorLow of TH1 obtained via using declarations from TH2. On the other hand (and unrelated to the change above), we eliminate the use of `TInterpreter::EnableAutoLoading` from cppyy in experimental PyROOT, given the tests failures seen last night:; https://epsft-jenkins.cern.ch/job/root-exp-pyroot/393/; due to the deprecation introduced by https://github.com/root-project/root/pull/4868",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4895:417,failure,failures,417,https://root.cern,https://github.com/root-project/root/pull/4895,1,['failure'],['failures']
Availability,In order to use the right c++ version in `CHECK_CXX_SOURCE_COMPILES` one needs to set `CMAKE_REQUIRED_FLAGS`. Without this it wouldn't pick up e.g. `std::string_view` when compiling with `-D cxx17=ON` which would cause a compilation failure when ROOT later defines `std::string_view` itself.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2609:233,failure,failure,233,https://root.cern,https://github.com/root-project/root/pull/2609,1,['failure'],['failure']
Availability,"In particular this should prevent issues that are noticed on Windows as:. ""Run-Time Check Failure #0 - The value of ESP was not properly saved across a function call.; This is usually a result of calling a function declared with one calling convention with a; function pointer declared with a different calling convention."". And a related (but 'harmless') case of `fLeafCount` being set right after `fBranchCount` was set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13277:90,Failure,Failure,90,https://root.cern,https://github.com/root-project/root/pull/13277,1,['Failure'],['Failure']
Availability,"In preparation of moving TError to foundation, this PR removes the direct use of gEnv and gSystem from TError. The functionality is implemented by helper functions instead, which are registered and de-registered upon creation and destruction gEnv and gSystem. The three tasks implemented by helpers are. - Read the ROOT environment in order to get the value of `Root.ErrorIgnoreLevel`; - Get the last system error message; - Abort the process",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5855:367,Error,ErrorIgnoreLevel,367,https://root.cern,https://github.com/root-project/root/pull/5855,2,"['Error', 'error']","['ErrorIgnoreLevel', 'error']"
Availability,"In previous ROOT versions, if you set the value of a variable with; `RooRealVar::setVal()`, the value was silently clippend when it was; outside the variable range. This silent mutation of data can be; dangerous. With ROOT 6.28, an exception will be thrown instead. If you; know what you are doing and want to restore the old clipping behavior,; you can do so with `RooRealVar::enableSilentClipping()`, but this is not; recommended. This change caught a logic error in `stressRooFit` where a background; fraction was randomized to be outside the `[0,1]` interval. That part of; the test was therefore removed (it was already removed from the; corresponding tutorial). Closes https://github.com/root-project/root/issues/6937.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10470:460,error,error,460,https://root.cern,https://github.com/root-project/root/pull/10470,1,['error'],['error']
Availability,"In response to @dpiparo pointing out this failure http://cdash.cern.ch/testDetails.php?test=25539356&build=359962. The DNN with architecture=Standard is to phased out. In this case it would make sense to disable the corresponding test, since the failure is not to be fixed. If this is acceptable, feel free to merge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/605:42,failure,failure,42,https://root.cern,https://github.com/root-project/root/pull/605,2,['failure'],['failure']
Availability,"In root/tutorials/tmva/keras/GenerateModel.py line 60:; from keras.utils.visualize_util import plot ; is outdated and hence shows error:; File ""./GenerateModel.py"", line 17, in <module>; from keras.utils.visualize_util import plot; ModuleNotFoundError: No module named 'keras.utils.visualize_util'; Instead, use:; from keras.utils import plot_model; plot_model(model, to_file='model.png', show_shapes=True)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5014:130,error,error,130,https://root.cern,https://github.com/root-project/root/pull/5014,1,['error'],['error']
Availability,In some cases such as ROOT::Experimental::Internal::TUniWeakPtr the information about if a data member is transient is kept in the template pattern (residing in Core.pcm). The template instantiation is elsewhere (in the particular case) the ROOTHistDraw.pcm. In this scenario the LinkDef request for the particular instantiation is done after Core.pcm is built leaving no chance for rootcling to transform the comment into an annotation attibute attached to the template pattern. This does not happen very often but it may occur regularly when we start writing more templated code. We should store the IO comments for the template patterns independently on if a particular template instantiation was required. This is a modules-specific issue because the PCH includes the bulk of header files altogether and this helps the current system to place this information at the required place. This should fix the failures in tutorial-hist-h1draw and cmssw CXXModules IB:; Fatal Root Error: @SUB=TProtoClass::FindDataMember; data member with index 0 is not found in class edm::value_ptr<vector<unsigned long> >.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4430:907,failure,failures,907,https://root.cern,https://github.com/root-project/root/pull/4430,2,"['Error', 'failure']","['Error', 'failures']"
Availability,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854:117,error,error,117,https://root.cern,https://github.com/root-project/root/issues/11854,2,['error'],['error']
Availability,"In some cases, the dictionary generation fails on Windows with character missing in the header file names, or in the path when there is a long list of headers.; For example, with TMVA, the dictionary generation was failing with the weird missing characters errors, like for example:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; <<< cling interactive line includer >>>:164:10: fatal error: 'TMVA/Volume.' file not found; #include ""TMVA/Volume.""; ^~~~~~~~~~~~~~; Or:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:168:10: fatal error: 'TMV/Version.h' file not found; #include ""TMV/Version.h""; ^~~~~~~~~~~~~~~; Or again:. Generating G__TMVA.cxx, ../../bin/libTMVA_rdict.pcm, ../../bin/libTMVA.rootmap; input_line_12:170:10: fatal error: 'TMVA/TreInference/Objectives.hxx' file not found; #include ""TMVA/TreInference/Objectives.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. This is coming from a recent change in include path, when it moved from the unique `root/include` directory to the multiple source `module/inc` directories, making a long list of (for example) `-IC:/Users/bellenot/git/master/core/winnt/inc`, with many duplicates, making a command of more than 8000 characters; Removing the (many) duplicates is enough to fix the issue. So on Windows, we now require CMake vesrion 3.16 for the following reasons:; - 3.15: Added $<REMOVE_DUPLICATES:list> generator expression; - 3.16: Bug fix with CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS: the auto-generated exports are now updated only when the object files providing the symbols are updated, fixing the incremental build. (it's easy to update CMake on Windows)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5993:257,error,errors,257,https://root.cern,https://github.com/root-project/root/pull/5993,8,['error'],"['error', 'errors']"
Availability,"In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,; the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been; populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a; crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has; been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7365:223,down,down,223,https://root.cern,https://github.com/root-project/root/pull/7365,1,['down'],['down']
Availability,"In that case `PYTHON_VERSION_STRING_Development_Main` is not set:; ```; CMake Error at tutorials/CMakeLists.txt:80 (if):; if given arguments:. ""VERSION_LESS"" ""3.8"". Unknown arguments specified; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13292:78,Error,Error,78,https://root.cern,https://github.com/root-project/root/pull/13292,1,['Error'],['Error']
Availability,"In the 6.30 dev cycle, I made a mistake when refactoring the HistFactory code in 3c68044c257:. https://github.com/root-project/root/commit/3c68044c257e9ee7207e23e7cceb69d7eda596e9#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1801-L1804. The robust way to skip overflow bins in 2D and 3D was replaced with something that only worked in 1D. Thanks to Veronica for reporting this on the ROOT forum!. https://root-forum.cern.ch/t/discrepancy-in-2d-histfactory-fit-results-between-root-versions-6-28-06-vs-nightlies-with-beeston-barlow-method-activated. I validated now that the fit results with the reproducer on the forum are the same with 6.28 and 6.30. To be backported to the 6.30 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14185:266,robust,robust,266,https://root.cern,https://github.com/root-project/root/pull/14185,1,['robust'],['robust']
Availability,"In the CPU case in `RooBatchCompute`, we can use `std::vector` instead; of fixed-size stack arrays to pass data around, and the `Batches` object; can be passed to the compute functions by reference. This fixes crashes with models where the numer of inputs for a RooAbsArg; exceeds the maximum number of parameters supported by the fixed-size; array buffer, at least in the CPU case. In the GPU case, we now throw a nicer error if the buffers are to small,; instead of just crashing. The `stressRooFit` tests for the CPU or GPU batch mode still pass after; this commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10362:421,error,error,421,https://root.cern,https://github.com/root-project/root/pull/10362,1,['error'],['error']
Availability,"In the ROOT 6.26 the default position of the legend in the output of RooMCStudy is not optimal, as part of numbers is cut away: see the top-right plot in the rf801 example https://root.cern.ch/doc/v626/rf801__mcstudy_8C.html . This used to be better positioned in 6.24: https://root.cern.ch/doc/v624/rf801__mcstudy_8C.html . It would be great to make the position optimal by default. (In the meantime, is there an easy way to change it manually?). Extra wish: would it be possible to invoke the Gaussian fit not only for the pull plot, but also for the ""value"" and ""error"" plots? (The two other plots in the top row of the rf801 example).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10931:566,error,error,566,https://root.cern,https://github.com/root-project/root/issues/10931,1,['error'],['error']
Availability,"In the ROOT build system, `CheckCompiler` is included before `RootBuildOptions`. The problem with this is that when building with `-Dall=ON`, the `cuda` flag is only set in `RootBuildOptions`, which is too late to find the CUDA compiler in `CheckCompiler`. This results in issues like #15139:; ```; CMake Error in roofit/batchcompute/CMakeLists.txt:; Exporting the target ""RooBatchCompute_CUDA"" is not allowed since its linker; language cannot be determined; ```. This commit suggests a solution to this problem: just always enable the CUDA language in CMake if it is found, and only set the `cuda` flag with `-Dall=ON` if the CUDA language is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15155:305,Error,Error,305,https://root.cern,https://github.com/root-project/root/pull/15155,1,['Error'],['Error']
Availability,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10566:472,error,error,472,https://root.cern,https://github.com/root-project/root/pull/10566,3,['error'],"['error', 'errors']"
Availability,"In the RooDecay case, the evalCerf function called internally in; RooGaussModel passes a purely imaginary argument to; `RooMath::faddeeva_fast`. In this case, the Faddeeva function is equal; to a scaled complementary error function, which can be evaluated more; efficiently using `std::erfc`. The speedup can be seen in the stressRooFit tests that involve the; RooDecay, for example:; `Test 22 : Full per-event error p.d.f. F(t|dt)G(dt)`; The test can be run individually to verify this speedup:. ```; `./stressRooFit -n 22`; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9925:217,error,error,217,https://root.cern,https://github.com/root-project/root/pull/9925,2,['error'],['error']
Availability,"In the RooFit `JSONInterface` there are some template specializations that are defined in the translation unit but are not declared in the header file. This causes linker errors, because the compiler doesn't know that it has to look for the specializations, as explained here: https://stackoverflow.com/questions/11773960/do-template-specialisations-belong-into-the-header-or-source-file. To solve this problem, these small one-line functions are just inlined in the header. Needs to be backported to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12891:171,error,errors,171,https://root.cern,https://github.com/root-project/root/pull/12891,1,['error'],['errors']
Availability,"In the `rf205` tutorial and the associated stressRooFit test, the `bkg` RooAddPdf was created using the `sig1frac`, while it is clearly the idea to use the `bkg1frac` parameter. This is fixed in this commit, also fixing the name of the `bkg1frac` parameter, which was accidentally set to `sig1frac` (probably a copy-paste error). However, to not change the output of the tutorial and the stressRooFit test, the value of `bkg1frac` was set to the same value as `sig1frac`, such that this commit only fixes the model but doesn't change the tutorial and test output.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985:322,error,error,322,https://root.cern,https://github.com/root-project/root/pull/11985,1,['error'],['error']
Availability,"In the autogenerated dictionary sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6343:712,error,error,712,https://root.cern,https://github.com/root-project/root/issues/6343,2,['error'],['error']
Availability,"In the case of the storage location, this change turns an assert; failure into an exception:. Before:; ```; Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'; ```. After:; ```; C++ exception with description ""empty storage location""; ```. For the RNTuple name, the empty string only caused issues when added to; a TFile (but that's enough to ban it):. ```cpp; std::string path = ""some_file.root""; auto file = TFile::Open(path.c_str(), ""RECREATE"");; {; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);; ntuple->Fill();; }; file->Close();; delete file;. // throws; auto ntuple = RNTupleReader::Open("""", path);; ```; ```; C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8511:66,failure,failure,66,https://root.cern,https://github.com/root-project/root/pull/8511,1,['failure'],['failure']
Availability,"In the case of unweighted datasets, the current implementation of; `RooNLLVar::computeBatched` retreived the weight for every event with; `RooDataSet::get()`. This has a lot of overhead and significantly slows; down the evaluation. With this commit, it is correctly assumed that the weight is the same; for every event. This has been done in the code already before but it; was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7404:211,down,down,211,https://root.cern,https://github.com/root-project/root/pull/7404,2,['down'],['down']
Availability,"In the error code pass of TKey::Read*, the buffer cleanup was not done (it; was suppposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5390:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/5390,1,['error'],['error']
Availability,"In the error code path of TKey::Read*, the buffer cleanup was not done (it; was supposed to be done via a goto!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5391:7,error,error,7,https://root.cern,https://github.com/root-project/root/pull/5391,1,['error'],['error']
Availability,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15477:109,down,down,109,https://root.cern,https://github.com/root-project/root/pull/15477,2,"['down', 'error']","['down', 'error']"
Availability,"In the old PyROOT, it might have made sense to re-implement `__setattr__` for ROOT in a way that it sets an attribute of the `gbl_namespace` (`cppyy.gbl` in new PyROOT), because back at that time setting an attribute to the global namespace also meant forwarding the definition to the interpreter and the variable was then also available in C++. However, this is not supported anymore by the new PyROOT, so the custom `__setattr__` appears unneeded and this commits suggests to remove it. See also the discussion here:; https://its.cern.ch/jira/browse/ROOT-10451",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14486:328,avail,available,328,https://root.cern,https://github.com/root-project/root/pull/14486,2,['avail'],['available']
Availability,"In the past, it was possible to build the [roottest suite](https://github.com/root-project/roottest) standalone, just having ROOT sourced in your environment. This possibility is also advertised in the README.md of roottest. After https://github.com/root-project/root/commit/56c6ace5340003a9135d565f4d5fa68be67aa0d5, it is not possible anymore to do that, because the unit tests depend on the `ROOTUnitTestSupport` library which is only available at ROOT compile time. Maybe a possible solution is to install the `ROOTUnitTestSupport` library as part of ROOT? I don't know what's the best solution here, so I'm only opening an issue for now. But I think this need to be fixed before the next ROOT release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9507:437,avail,available,437,https://root.cern,https://github.com/root-project/root/issues/9507,1,['avail'],['available']
Availability,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616:773,error,errors,773,https://root.cern,https://github.com/root-project/root/pull/7616,3,"['error', 'redundant']","['errors', 'redundant', 'redundantly']"
Availability,"In this PR:. - Protection against null pointer dereference if fOff==nullptr.; - Better error messages if the images cannot be loaded. . Tag @couet . Also, I've tried to compile ROOT version with -Dgminimal=ON but it turns out one needs also -Dasimage=ON to make it for ROOT possible to load the standard pixmaps. Would that make sense to include the support of these pixmaps into -Dgminimal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6714:87,error,error,87,https://root.cern,https://github.com/root-project/root/pull/6714,1,['error'],['error']
Availability,"In this forum post, the point was made that; `RooWorkspace::getSnapshot()` should not print an error if a snapshot; with the passed name is not found. https://root-forum.cern.ch/t/roofit-check-if-snapshot-exist-without-showing-objecthandling-error. Just like in the other `RooWorkspace` access functions, like `arg()`,; `pdf()`, or `function()`, users expect to use `getSnapshot()` also to; query if a snapshot exists and check if the returned value is `nullptr`.; So there should be no error printed in `getSnapshot()` itself. If it is; actually an error for th caller that no snapshot has been found, an; error or exception should be raised by the caller. A second commit in this PR applies some general code modernization to `RooWorkspace.cxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11584:95,error,error,95,https://root.cern,https://github.com/root-project/root/pull/11584,5,['error'],['error']
Availability,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12845:157,error,error,157,https://root.cern,https://github.com/root-project/root/pull/12845,3,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"In working on the HistFactory, there were many small things that I encountered on the way. This is a collection of fixes, modernisations, improved warnings, better error handling and similar small things.; This is step 1 flushing those from the branch before actually putting up the histfactory stuff.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7439:164,error,error,164,https://root.cern,https://github.com/root-project/root/pull/7439,1,['error'],['error']
Availability,"Include two new status values, may cause problem when; showing error messages for such value",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7219:63,error,error,63,https://root.cern,https://github.com/root-project/root/pull/7219,1,['error'],['error']
Availability,Inconsistent behaviour on failed jitting (transaction rollback issue?),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16577:54,rollback,rollback,54,https://root.cern,https://github.com/root-project/root/issues/16577,1,['rollback'],['rollback']
Availability,Increase test tolerence,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4025:14,toler,tolerence,14,https://root.cern,https://github.com/root-project/root/pull/4025,1,['toler'],['tolerence']
Availability,"Increase the tolerance for testVector34, as done in 43cae6c9ab93723b880eba4a4c5a20403cd6659a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/652:13,toler,tolerance,13,https://root.cern,https://github.com/root-project/root/pull/652,1,['toler'],['tolerance']
Availability,Increase tolerance in stressHistogram buffer tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2138:9,toler,tolerance,9,https://root.cern,https://github.com/root-project/root/pull/2138,1,['toler'],['tolerance']
Availability,Increased tolerance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/652:10,toler,tolerance,10,https://root.cern,https://github.com/root-project/root/pull/652,1,['toler'],['tolerance']
Availability,"Initializing RooBatchCompute takes over a second when CUDA is also; available on the system. It is unreasonable to do this everytime the; RooFit library is loaded. For example, the time of small unit tests was; completely dominated by the RooBatchCompute initialization time before; this commit. This change entailed another change in `Buffers.cxx` to avoid static; initialization problems. If possible, I'll still try to backport this to the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9915:68,avail,available,68,https://root.cern,https://github.com/root-project/root/pull/9915,1,['avail'],['available']
Availability,Instead of erroring out with an assert. (cherry picked from commit fb3367fa03e1c8b639e9591b93f6ac5226a80fed). Fixes #9297,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9407:11,error,erroring,11,https://root.cern,https://github.com/root-project/root/pull/9407,1,['error'],['erroring']
Availability,"Instead of guessing the number of parameters for the model represented by RooFuncWrapper, we now introduce a parameter size function that can be used to declare gradient output arrays of the right size. Possibly fixes some of the ASAN failures @hahnjo reported earlier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12612:235,failure,failures,235,https://root.cern,https://github.com/root-project/root/pull/12612,1,['failure'],['failures']
Availability,"Instead, split the code RDataFrame jits every 1k newlines and jit; in chunks. This avoids an explosion in the time required by; optimizer passes, which seem to not deal well with very large; function bodies. See https://github.com/root-project/root/issues/9312 and; https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9328:396,down,down,396,https://root.cern,https://github.com/root-project/root/pull/9328,1,['down'],['down']
Availability,"Int32; [ OK ] RColumnElementEndian.UInt32 (0 ms); [ RUN ] RColumnElementEndian.Int64; [ OK ] RColumnElementEndian.Int64 (0 ms); [ RUN ] RColumnElementEndian.UInt64; [ OK ] RColumnElementEndian.UInt64 (0 ms); [ RUN ] RColumnElementEndian.Int64Int32; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:286: Failure; Expected equality of these values:; ints[0]; Which is: 1234605615003729920; 0x0000000011223344; Which is: 287454020; /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_endian.cxx:287: Failure; Expected equality of these values:; ints[1]; Which is: 6153737371142586367; 0x0000000055667788; Which is: 1432778632; [ FAILED ] RColumnElementEndian.Int64Int32 (0 ms); [----------] 9 tests from RColumnElementEndian (13 ms total); [----------] Global test environment tear-down; [==========] 9 tests from 1 test suite ran. (13 ms total); [ PASSED ] 8 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] RColumnElementEndian.Int64Int32; 1 FAILED TEST; CMake Error at /builddir/build/BUILD/root-6.28.00/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### gtest-tree-ntuple-v7-test-ntuple-extended. This looks like an endian error:. $ printf '%x\n' 1677721600; 64000000. Header length shoud be 0x00000064 = 100; ~~~; 501/1272 Test #443: gtest-tree-ntuple-v7-test-ntuple-extended ...........................***Failed 81.93 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RNTuple; [ RUN ] RNTuple.RealWorld1; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RPageStorageFile.cxx:51 in ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(std::string_view, con",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426:5043,Error,Error,5043,https://root.cern,https://github.com/root-project/root/issues/12426,1,['Error'],['Error']
Availability,Integer types not available for Bulk API,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520:18,avail,available,18,https://root.cern,https://github.com/root-project/root/issues/6520,1,['avail'],['available']
Availability,Interpreter autoload lookup failure when `runtime_cxxmodules=ON`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:28,failure,failure,28,https://root.cern,https://github.com/root-project/root/issues/9583,1,['failure'],['failure']
Availability,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16594:284,error,error,284,https://root.cern,https://github.com/root-project/root/pull/16594,1,['error'],['error']
Availability,"Introduce a new helper returning the number of logical CPUs available to the current process. In case of having an affinity mask, it will return in accordance to it (IMT & tbb required for this). Function naming can be improved. I wanted to keep tbb away from ImplicitMT and that's why the core function is defined in TPoolManager.hxx. Should it be a member of the class?. Also delete useless return.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/754:60,avail,available,60,https://root.cern,https://github.com/root-project/root/pull/754,2,"['avail', 'mask']","['available', 'mask']"
Availability,"Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16156:216,failure,failures,216,https://root.cern,https://github.com/root-project/root/pull/16156,1,['failure'],['failures']
Availability,Introduced by https://github.com/root-project/root/commit/617f5fb4fab9b92b2a95e506b4801364473672bc. The change to a variable length size was not properly propagated to the rest of the `TBranch::Init` function. Fixes the recent ubuntu24 failures of the type; ```; 2400/2509 Test #2432: roottest-root-tree-branches-make ..................................................................***Failed 1.79 sec; -- TEST COMMAND -- ; cd /github/home/ROOT-CI/roottest/root/tree/branches; /usr/bin/timeout -s USR2 1770s /usr/bin/gmake cleantest; -- BEGIN TEST OUTPUT --; /usr/bin/gmake -f Makefile test; gmake[1]: Entering directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ; Processing runnoname.C...; Warning in <TBranch::TBranch>: No name was given to the leaf number '1' in the leaflist of the branch 'nhitshcal'.; *** buffer overflow detected ***: terminated; Aborted (core dumped); gmake[1]: Leaving directory '/github/home/ROOT-CI/roottest/root/tree/branches'; ```. as seen for example [here](https://github.com/root-project/root/actions/runs/9201038116/job/25308591312#step:11:26510),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15620:236,failure,failures,236,https://root.cern,https://github.com/root-project/root/pull/15620,1,['failure'],['failures']
Availability,Is It 'just me' or does the master (intentionally ?) no longer re-download the tar files for the builtins. I.e.:. ```; cmake; ninja; rm -rf *-prefix builtins; ninja; ```; used to work and does not work anymore (and no I don't remember when was the last time I saw it worked).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16227:66,down,download,66,https://root.cern,https://github.com/root-project/root/issues/16227,1,['down'],['download']
Availability,Is the error message about out of date pcm inverted ?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:7,error,error,7,https://root.cern,https://github.com/root-project/root/issues/7704,1,['error'],['error']
Availability,"It broke C++17 build of ROOT with:; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: error: 'std::__uniq_ptr_data<RooDataSet, std::default_delete<RooDataSet>, true, true>' has different definitions; in different modules; defined here; struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/10.1.0/../../../../include/c++/10.1.0/bits/unique_ptr.h:207:12: note: definition in module 'std.condition_variable' is here; Error: /home/stefan/builds/root-dev/bin/rootcling: compilation failure (/home/stefan/builds/root-dev/lib/libRooStats03cff1ce95_dictUmbrella.h); make[2]: *** [roofit/roostats/CMakeFiles/G__RooStats.dir/build.make:222: roofit/roostats/G__RooStats.cxx] Error 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6153:180,error,error,180,https://root.cern,https://github.com/root-project/root/pull/6153,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"It causes build failures on GCC 12.2.1 / c++17 with. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; In file included from input_line_7:111:; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:31:33: error: missing '#include <bits/chrono.h>'; 'system_clock' must be declared before it is used; using clock_t = std::chrono::system_clock;; ^; /usr/include/c++/12/bits/chrono.h:1110:12: note: declaration here is not visible; struct system_clock; ^; In module 'std' imported from input_line_1:1:; /usr/include/c++/12/bits/move.h:204:11: error: missing '#include <bits/chrono.h>'; 'time_point' must be defined before it is used; _Tp __tmp = _GLIBCXX_MOVE(__a);; ^; /home/linev/build/webgui/include/ROOT/RDirectoryEntry.hxx:89:4: note: in instantiation of function template specialization 'std::swap<std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<long, std::ratio<1, 1000000000>>>>' requested here; swap(fDate, other.fDate);; ^; /usr/include/c++/12/bits/chrono.h:856:14: note: definition here is not reachable; struct time_point; ```# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12516:16,failure,failures,16,https://root.cern,https://github.com/root-project/root/pull/12516,3,"['error', 'failure']","['error', 'failures']"
Availability,"It causes randomic failures in our nightlies, and being in legacy; code we are happy with disabling the tutorial altogether.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8564:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/pull/8564,1,['failure'],['failures']
Availability,"It causes randomic failures in our nightlies, and being in legacy; code we are happy with disabling the tutorial altogether. As per the discussion at https://mattermost.web.cern.ch/root/pl/g8m58haqp7fejmn3wjumbur78y",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8462:19,failure,failures,19,https://root.cern,https://github.com/root-project/root/pull/8462,1,['failure'],['failures']
Availability,"It currently issues odd looking error, eg:; ```; Error in [TBranch::TBranch::WriteBasketImpl](https://root-forum.cern.ch/): basket’s WriteBuffer failed.; ```; See https://root-forum.cern.ch/t/root-file-txt-format/48959/22",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10024:32,error,error,32,https://root.cern,https://github.com/root-project/root/issues/10024,2,"['Error', 'error']","['Error', 'error']"
Availability,"It fixes broken builds on Ubuntu 16:; `[ 92%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooProdPdf.cxx.o; /mnt/build/workspace/lcg_ext_rootcov/BUILDTYPE/Release/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-HEAD/src/ROOT/HEAD/gui/webgui6/src/TWebCanvas.cxx: In member function ‘void TWebCanvas::ShowCmd(const char*, Bool_t)’:; /mnt/build/workspace/lcg_ext_rootcov/BUILDTYPE/Release/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-HEAD/src/ROOT/HEAD/gui/webgui6/src/TWebCanvas.cxx:516:77: error: ‘Warning’ was not declared in this scope; Warning(""ShowCmd"", ""Send operation not empty when try show %s"", arg); ^; `",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3551:522,error,error,522,https://root.cern,https://github.com/root-project/root/pull/3551,1,['error'],['error']
Availability,"It fixes the failures in projectroot.math.vecops.test.gtest_math_vecops_test_vecops_rvec that are cropping up all over the place. Sorry, did not realize that the PR that introduced the change was not tested by jenkins because the title said `[N-F-C]` :disappointed:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9046:13,failure,failures,13,https://root.cern,https://github.com/root-project/root/pull/9046,1,['failure'],['failures']
Availability,"It happens often that one passes a temporary RooArgSet to the; RooCmdArg constructor, where the RooCmdArg is itself a temporary that is; passed to a RooFit function. The RooCmdArg contains only pointers to the; RooArgSets, so this pattern relies on the RooArgSet being kept alive; until the function end. In code, this pattern would look like this statement:; ```C++; func(RooCmdArg{RooArgSet{}});; ```. In C++, this works because the temporaries survive until the statement; end. But in Python, the inner temporary RooArgSet will be destructed; after the RooCmdArg has been constructed, leaving the RooCmdArg with; dangling pointers. To solve this problem, all the functions that can create a RooCmdArg; from a RooArgSet are overloaded with versions accepting rvalue; references. These overloads are indeed used for temporaries both in C++; and Python. In the rvalue reference versions, the temporaries are moved; into a vector of std::unique_ptr<TObject>. The constructed RooCmdArg; then takes ownership of this vector wrapped in a shared_ptr. This addresses Jira issues [ROOT-5022](https://sft.its.cern.ch/jira/browse/ROOT-5022), [ROOT-9861](https://sft.its.cern.ch/jira/browse/ROOT-9861), and [ROOT-4373](https://sft.its.cern.ch/jira/browse/ROOT-4373). Here some examples of C++ and Python code that work after this change:. ```C++; void minimal_example() {; using namespace RooFit;. RooRealVar x(""x"",""x"", 0.0, 1.0);. RooDataSet data{};. RooCmdArg * arg = new RooCmdArg(ProjWData(x, data));. ((RooArgSet*)arg->getObject(0))->Print();. std::cout << dynamic_cast<RooArgSet const*>(arg->getObject(0)) << std::endl;. delete arg;. }; ```. ```Python; import ROOT. x = ROOT.RooRealVar(""x"", ""x title"", 0, 0, 10). arg = ROOT.RooFit.NormSet( ROOT.RooArgSet(x) ); arg.getObject(0)[""x""].Print(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8032:274,alive,alive,274,https://root.cern,https://github.com/root-project/root/pull/8032,1,['alive'],['alive']
Availability,"It is available less and less often, and we do not actually benefit a lot from printing the distro (stress) or we can get the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14923:6,avail,available,6,https://root.cern,https://github.com/root-project/root/pull/14923,1,['avail'],['available']
Availability,"It is available less and less often, and we do not actually; benefit a lot from printing the distro (stress) or we can get; the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11029:6,avail,available,6,https://root.cern,https://github.com/root-project/root/pull/11029,1,['avail'],['available']
Availability,"It is confusing to the users that the chi2 fit is by default not extended, even if the pdf is extended. Because this is what happens in normal likelihood fits. This commit makes that behavior consistent and explains it in the release notes. Also, a new error message is added for the case you forcing a non extended fit on a pdf that must be extended, because this is guaranteed to give wrong results. This change addresses the confusion on the forum:; https://root-forum.cern.ch/t/failing-chi2-fit/56309",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13638:253,error,error,253,https://root.cern,https://github.com/root-project/root/pull/13638,1,['error'],['error']
Availability,"It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:; In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:; /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required; pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );; ^; In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:; /usr/include/pthread.h:51:3: note: previous declaration is here; PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,; ^; 1 error generated.`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3374:565,error,error,565,https://root.cern,https://github.com/root-project/root/pull/3374,2,['error'],['error']
Availability,It is fixing:; ..root/tree/dataframe/src/RDataFrame.cxx:789:6: error: reference to 'RDF' is ambiguous; : RDF::RInterface<RDFDetail::RLoopManager>(; ^; In module 'ROOTDataFrame' imported ..root/tree/dataframe/src/RDataFrame.cxx:14:; ..include/ROOT/RCutFlowReport.hxx:29:11: note: candidate found by name lookup is 'ROOT::RDF'; namespace RDF {; ^; ..root/tree/dataframe/src/RDataFrame.cxx:721:11: note: candidate found by name lookup is 'ROOT::Detail::RDF'; namespace RDF {; ^; ..tree/dataframe/src/RDataFrame.cxx:789:11: error: member initializer (null) does not name a non-static data member or base class; : RDF::RInterface<RDFDetail::RLoopManager>(; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2697:63,error,error,63,https://root.cern,https://github.com/root-project/root/pull/2697,2,['error'],['error']
Availability,"It is needed for C++11 support of #include <chrono>. Failures:; ```; Processing /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C...; In file included from input_line_10:1:; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/root/tutorials/multicore/mt201_parallelHistoFill.C:55:51: error: no member named 'duration' in namespace 'std::chrono'; std::this_thread::sleep_for(std::chrono::duration<double, std::nano>(500));; ~~~~~~~~~~~~~^; ```. and. ```; root [11] #include <bits/chrono.h>; /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:432:10: error: module 'std.bits/chrono.h' requires feature 'cplusplus17'; module ""bits/chrono.h"" [optional] {; ^; ROOT_prompt_11:1:10: note: submodule of top-level module 'std' implicitly imported here; ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12629:53,Failure,Failures,53,https://root.cern,https://github.com/root-project/root/pull/12629,3,"['Failure', 'error']","['Failures', 'error']"
Availability,"It is now base class for `RLegend`, `RPaveText`, `RHistStatsBox`.; Main functionality - consistent positioning relative to the `RFrame`. ; But also drawing without frame is possible - in that case just default frame position will be used.; Plus interactive moving of `RPave` around. Improve `RLegend` class. Now it correctly drawn and can be interactively moved.; Also one can configure custom attributes disregard of other drawables.; Also special I/O mechanism is used to avoid large data transfer of RLegend::REntry - ; referenced drawable ""masked out"" before streaming. Introduce `RPaveText` class. Update JSROOT code correspondingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5897:544,mask,masked,544,https://root.cern,https://github.com/root-project/root/pull/5897,1,['mask'],['masked']
Availability,"It is part of the set of 'system' modules which gets created on demand when a dictionary includes intrinsics. Make this action explicit. This way we can invalidate it (from within rootcling) and rebuild it when required. This patch also fixes an issue in cmssw where _Builtin_intrinsics is generated and installed on cvmfs. If we have local ROOT which does not have this module generated, the system picks up the one from cvmfs causing out-of-date errors. cc: @davidlange6, @smuzaffar, @oshadura",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4676:448,error,errors,448,https://root.cern,https://github.com/root-project/root/pull/4676,1,['error'],['errors']
Availability,"It looks like the STL on the machine with the nightly failures was copying the `RunContext` struct. Bad idea, because this creates dangling pointers!; I `deleted` the copy constructor and only allow moves.; Please take care of the merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6831:54,failure,failures,54,https://root.cern,https://github.com/root-project/root/pull/6831,1,['failure'],['failures']
Availability,It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6035:57,avail,available,57,https://root.cern,https://github.com/root-project/root/pull/6035,1,['avail'],['available']
Availability,"It looks these two commits are causing the compilation failure. The problem is in cmake, but it's complicated than it looks. I will fix and send this patch again, but first we really need to fix nightlies compilation failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2577:55,failure,failure,55,https://root.cern,https://github.com/root-project/root/pull/2577,2,['failure'],['failure']
Availability,It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520:42,avail,available,42,https://root.cern,https://github.com/root-project/root/issues/6520,1,['avail'],['available']
Availability,"It makes recovery of column values slightly faster, which is visible in rootbench.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6325:9,recover,recovery,9,https://root.cern,https://github.com/root-project/root/pull/6325,1,['recover'],['recovery']
Availability,"It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:; ```cpp; #include <iostream>; #include <any>. namespace ns {; struct X {; friend bool any(X) {; return true;; }; };; }; ; void test() {; std::cout << any(ns::X{}) << std::endl;; }. int main() {; test();; return 0;; }; ```; It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:; ```; In file included from input_line_117:1:; test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'); std::cout << any(ns::X{}) << std::endl;; ```; If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8370:392,error,error,392,https://root.cern,https://github.com/root-project/root/issues/8370,4,['error'],['error']
Availability,"It seems independent Cling builds have been broken on Windows for a while (or am making an error when setting up the build in Cling's Github Actions CI?). Looking at Cling commits - https://github.com/root-project/cling/commits/master it looks like Cling's appveyor hasn't even triggered in a long time, so it is difficult to say when was the last time that an independent Cling built worked on Windows. I made some attempt to fix it via - https://github.com/root-project/root/pull/6750/commits/db80e8c0038ab830b1cc4e7d2d42ad640c1ec232 but that is clearly not enough. One can look at the build error logs on Windows in the corresponding Github Action workflow - https://github.com/reikdas/cling-1/runs/1348031890?check_suite_focus=true. @vgvassilev @bellenot Do you have any idea what could be going wrong?. If Cling can be built successfully on Windows, we can merge this in :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6750:91,error,error,91,https://root.cern,https://github.com/root-project/root/pull/6750,2,['error'],['error']
Availability,It seems that execvp can't handle such longs args on the build nodes and; fails when we call `echo $ARGS >> modulemap`. We now first write this to a file and then append it to the actual; modulemap.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/389:94,echo,echo,94,https://root.cern,https://github.com/root-project/root/pull/389,1,['echo'],['echo']
Availability,"It seems that the exported targets in ROOT 6.26 changed. Some software ([corryvreckan](https://gitlab.cern.ch/corryvreckan/corryvreckan)) that was compiling without issues in older root versions encounters issues when running cmake (3.22.3). . I believe that this is related to missing exported CMake targets. ### Describe the bug. CMake Error at src/core/CMakeLists.txt:73 (ADD_LIBRARY):; Target ""CorryvreckanCore"" links to target ""Threads::Threads"" but the target; was not found. Perhaps a find_package() call is missing for an IMPORTED; target, or an ALIAS target is missing?; ; ; CMake Error at src/core/CMakeLists.txt:73 (ADD_LIBRARY):; Target ""CorryvreckanCore"" links to target ""OpenMP::OpenMP_CXX"" but the; target was not found. Perhaps a find_package() call is missing for an; IMPORTED target, or an ALIAS target is missing?; ; ; CMake Error at src/core/CMakeLists.txt:73 (ADD_LIBRARY):; Target ""CorryvreckanCore"" links to target ""MPI::MPI_CXX"" but the target was; not found. Perhaps a find_package() call is missing for an IMPORTED; target, or an ALIAS target is missing?. The dependency seems to be pulled in via Minuit2. . The following additions to the CMakeLists of the project fix the issue:. ```; if(NOT TARGET Threads::Threads); find_package(Threads); endif(); if(NOT TARGET MPI::MPI_CXX); find_package(MPI); endif(); if(NOT TARGET OpenMP::OpenMP_CXX); find_package(OpenMP); endif(); ```. ### Setup. Compiling from source. Tested in master and using 6.26/00. Using archlinux, using CMake 3.22.3. The issue seems to only be present on archlinux, probably because for other OSs, the dependencies are handled internally rather than being imported (?).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10283:338,Error,Error,338,https://root.cern,https://github.com/root-project/root/issues/10283,3,['Error'],['Error']
Availability,"It should be defined if C++14 variable templates are available, but it doesn't seem to work -- it's always undefined in my tests. Help? :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2293:53,avail,available,53,https://root.cern,https://github.com/root-project/root/pull/2293,1,['avail'],['available']
Availability,"It should happen before we use the module the first time and not; afterwards, otherwise we just crash instead of printing a nice; error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1054:130,error,error,130,https://root.cern,https://github.com/root-project/root/pull/1054,1,['error'],['error']
Availability,"It was not good to have this signature in RooAbsData, because the; implementations in RooDataHist and RooDataSet were inconsistent. The RooDataSet indeed took the weight error as the third argument, but; the RooDataHist version instead took the sum of weights squared, which; is equivalent to the squared weight error. That means using `RooAbsData::add(row, weight, weightError)` results in; different weight uncertainties depending on which data implementation; you use. This should not happen. It probably didn't happen to many; people, but I was affected by this when implementing; `RooAbsData::split()` (see https://github.com/root-project/root/pull/12459/commits/909d2564045d1cdb99865c4da6b7e79e463b548f). The solution to this problem it to remove the `add(row, weight,; weightError)` from the virtual RooAbsData interface. The `add(row,; weight)` signature can stay, because this one is implemented; consistently in RooDataSet and RooDataHist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12479:170,error,error,170,https://root.cern,https://github.com/root-project/root/pull/12479,2,['error'],['error']
Availability,"It would be amazing if one could code against TThreadExecutor even if IMT is off. Otherwise, one would have to `ifdef` the hell out of all code where IMT should be used.; To make TTEx usable for e.g. RooFit, I `ifdef`ed a bit in the TThreadExecutor implementation:; - I replaced `parallel_for` by `for`, and `parallel_reduce` by `std::accumulate`.; - I enabled the tests in `core/imt` irrespective of whether IMT is available.; - Things that just cannot work in those tests were anyway protected by `ifdef`, but I had to move some `#include`s around.; - `TThreadExecutor::ForEach` works, but I wonder if we need more tests that run *both* with and without IMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298:416,avail,available,416,https://root.cern,https://github.com/root-project/root/pull/6298,1,['avail'],['available']
Availability,"It would greatly help memory safety if ROOT could use more smart pointers in its interfaces. However, the automatic downcasting of returned values is only working for raw pointers. It should work for smart pointers as well. For example, right now this doesn't work:; ```Python; class ClassA {; public:. ClassDef(ClassA, 0);; };. class ClassB : public ClassA {; public:; void helloB() {}. ClassDef(ClassB, 0);; };. ClassA *fooRawPtr() { return new ClassB{}; }. std::unique_ptr<ClassA> fooUniquePtr() { return std::make_unique<ClassB>(); }; ```; Output:; ```txt; <class cppyy.gbl.ClassB at 0x5e1ddf85ed20>; Traceback (most recent call last):; File ""/home/rembserj/repro.py"", line 30, in <module>; out_2.helloB(); ^^^^^^^^^^^^; AttributeError: 'ClassA' object has no attribute 'helloB'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16210:116,down,downcasting,116,https://root.cern,https://github.com/root-project/root/issues/16210,1,['down'],['downcasting']
Availability,It's a small change and it may help with the sporadic `dataframe-vary` unittest failures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15628:80,failure,failures,80,https://root.cern,https://github.com/root-project/root/pull/15628,1,['failure'],['failures']
Availability,"It's a very common pattern in the RooFit implementation and user code to check the type when adding to a `RooAbsCollection`, and erroring out if the type is not correct. This commit suggests a function in `RooAbsCollection` to do exactly this, drastically reducing the code duplication in RooFit and experiment frameworks like CMS combine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14168:129,error,erroring,129,https://root.cern,https://github.com/root-project/root/pull/14168,1,['error'],['erroring']
Availability,"It's not easy to make the unit tests in `test_ProcessTimer.cxx` always; pass because they compare times spent in different processes that are; not deterministic. Therefore, the unit test is disabled for now. This was suggested by @Zeff020, the author of the test. Here is an example of a random failure:; https://github.com/root-project/root/pull/12000#issuecomment-1377703232. To be backported to v6.28",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12916:295,failure,failure,295,https://root.cern,https://github.com/root-project/root/pull/12916,1,['failure'],['failure']
Availability,"It's not your fault, but you opened Pandora's box 🙂; - No c-style casts in any code that gets touched after 2018; - `assert(0)` is useless in production code. Please throw `std::invalid_argument`.; - Don't use legacy iterators and don't define variables outside of the loop.; - Instead, use something like this:; ```c++; for (unsigned int i = 0; i < inFuncList.size(); ++i) {; auto func = static_cast<RooAbsArg*>(inFuncList[i]);; auto coef = static_cast<RooAbsArg*>(inCoefList[i]);; ...; ```; or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8374:14,fault,fault,14,https://root.cern,https://github.com/root-project/root/issues/8374,2,"['error', 'fault']","['error', 'fault']"
Availability,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:2778,failure,failure,2778,https://root.cern,https://github.com/root-project/root/issues/13811,1,['failure'],['failure']
Availability,"Jira: https://sft.its.cern.ch/jira/browse/ROOT-10491. We miss the test for reading boolean branches with `RDataFrame.AsNumpy`! Added the test and start investigating when it breaks - such as reported in the Jira ticket. Following the discussion on the forum [here](https://root-forum.cern.ch/t/asnumpy-fails-with-boolean-branches/37282), we see that the error shows a missing `data` member for the `std::vector<bool>`:. ```; df.AsNumpy(); ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-10-e856f5516a02> in <module>(); ----> 1 df.AsNumpy(). /Applications/root_build/lib/ROOT.pyc in _RDataFrameAsNumpy(df, columns, exclude); 429 else:; 430 tmp = numpy.empty(len(cpp_reference), dtype=numpy.object); --> 431 for i, x in enumerate(cpp_reference):; 432 tmp[i] = x # This creates only the wrapping of the objects and does not copy.; 433 py_arrays[column] = ndarray(tmp, result_ptrs[column]). AttributeError: 'vector<bool>' object has no attribute 'data'; ```. The error seems to be triggered when iterating over `std::vector<bool>` in python. My guess is some weirdness in the given std version of macOS 10.15. @etejedor We should add a test for this at the right place not only for `AsNumpy`. Edit: Added a fix for current PyROOT by protecting the tp_iter field for `vector<bool>`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4718:354,error,error,354,https://root.cern,https://github.com/root-project/root/pull/4718,2,['error'],['error']
Availability,"Jupyter may be configured to be served on different base url's, so we cannot assume that is accessible in `/`. This is the case, for example, when it's used together with JupyterHub (like SWAN), where the base url is `/user/_username_/`.; This PR fixes the way jsROOT is loaded in order to take that into account. . For that, I've removed `/static/`, which forced the absolute url to the file, and let requireJs apply its own configuration (which takes the base url into account). For Jupyterlab, I also load requireJs with the base url. In case requireJs is not available (maybe it will be possible to install Jupyterlab without Jupyter Notebooks in the future?), it falls back to a cdn to load it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4652:563,avail,available,563,https://root.cern,https://github.com/root-project/root/pull/4652,1,['avail'],['available']
Availability,"K version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::had",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:1588,Error,Error,1588,https://root.cern,https://github.com/root-project/root/issues/7982,2,['Error'],['Error']
Availability,"K version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; See also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:3418,Error,Error,3418,https://root.cern,https://github.com/root-project/root/issues/7982,1,['Error'],['Error']
Availability,"KE_SYSTEM_VERSION=10.0.22618.0 -Droofit=off -Dtesting=OFF -Droottest=OFF -DCMAKE_BUILD_TYPE=Release .. ; 7. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild. **Error info:**; ```; Line 10784: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentCommandInfo.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentCommandInfo.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]; 	Line 10786: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangCommentHTMLNamedCharacterReferences.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]; 	Line 10804: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec_a\CMakeFiles\4f43b9c638cd6c1d81fa9a9ebaa126f2\Attrs.inc.rule;F:\root\build_arm64ec_a\CMakeFiles\2eda59820b008a7805abb7b7ec667403\ClangAttrClasses.rule;F:\root\interpreter\llvm\src\tools\clang\include\clang\AST\CMakeLists.txt' exited with code -1073741819. [F:\root\build_arm64ec_a\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 10813: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11881:1743,error,error,1743,https://root.cern,https://github.com/root-project/root/issues/11881,1,['error'],['error']
Availability,"Kind)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::WhileStmt::Create(clang::ASTContext const&, clang::VarDecl*, clang::Expr*, clang::Stmt*, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::ASTContext::getConstantArrayType(clang::QualType, llvm::APInt const&, clang::ArrayType::ArraySizeModifier, unsigned int) const'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::CXXFunctionalCastExpr::Create(clang::ASTContext const&, clang::QualType, clang::ExprValueKind, clang::TypeSourceInfo*, clang::CastKind, clang::Expr*, llvm::SmallVector<clang::CXXBaseSpecifier*, 4u> const*, clang::SourceLocation, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: /home/eulisse/src/sw/ubuntu1804_x86-64/GCC-Toolchain/v10.2.0-alice2-local1/bin/../lib/gcc/x86_64-unknown-linux-gnu/10.2.0/../../../../x86_64-unknown-linux-gnu/bin/ld: ../lib/libCling.so.6.27.99: undefined reference to `clang::CXXMethodDecl::Create(clang::ASTContext&, clang::CXXRecordDecl*, clang::SourceLocation, clang::DeclarationNameInfo const&, clang::QualType, clang::TypeSourceInfo*, clang::StorageClass, bool, clang::ConstexprSpecKind, clang::SourceLocation)'; 2023-02-02@14:29:38:DEBUG:O2Physics:ROOT:0: collect2: error: ld returned 1 exit status; ```. when compiling with (v6-28-00-patches) 5ffba22ef571dea2d6eaf186662e19d5a7789a05.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12209:9032,error,error,9032,https://root.cern,https://github.com/root-project/root/issues/12209,1,['error'],['error']
Availability,LLVM assertion failure in HandleUnionActiveMemberChange,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13019:15,failure,failure,15,https://root.cern,https://github.com/root-project/root/issues/13019,1,['failure'],['failure']
Availability,"LRngWrapper` pointer and thus invokes its dtor as well. However, `~GSLRngWrapper()` frees the allocated memory only if `fOwn` pointer is set to true, which is only set so in the assignment operator, but not in the `Allocate()` member function. Therefore, the `GSLMCIntegrator` class is leaking memory. This poses a problem, when doing a large number of integrations inside a for loop. The leak was discovered by running valgrind and inspecting the code. Minimal example:; ```cpp; #include <Math/GSLMCIntegrator.h> // ROOT::Math::GSLMCIntegrator. /* built with:. g++ -ggdb3 -Og `root-config --cflags` mcintegrator.cpp -o mcintegrator \; `root-config --libs` -lMathMore. */. int; main(); {; for(unsigned i = 0; i < 20000; ++i); {; ROOT::Math::GSLMCIntegrator vegas(""vegas"", 0., 1.e-1, 10);; }; return 0;; }; ```. Before fix:; ```; valgrind --tool=memcheck --leak-check=full --show-leak-kinds=definite \; --undef-value-errors=no ./mcintegrator. ==12320== Memcheck, a memory error detector; ==12320== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==12320== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info; ==12320== Command: ./mcintegrator; ==12320==; ==12320==; ==12320== HEAP SUMMARY:; ==12320== in use at exit: 100,655,858 bytes in 44,260 blocks; ==12320== total heap usage: 67,782 allocs, 23,522 frees, 101,539,078 bytes allocated; ==12320==; ==12320== 99,089,984 (319,984 direct, 98,770,000 indirect) bytes in 19,999 blocks are definitely lost in loss record 3,515 of 3,515; ==12320== at 0x4C2BE7F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so); ==12320== by 0xAD090F2: gsl_rng_alloc (in /usr/lib/libgsl.so.23.0.0); ==12320== by 0x8223765: Allocate (GSLRngWrapper.h:99); ==12320== by 0x8223765: ROOT::Math::GSLMCIntegrator::GSLMCIntegrator(char const*, double, double, unsigned int) (GSLMCIntegrator.cxx:117); ==12320== by 0x108BF5: main (mcintegrator.cpp:8); ==12320==; ==12320== LEAK SUMMARY:; ==12320== definitely lost: 319,984 bytes in 19,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/928:1275,error,error,1275,https://root.cern,https://github.com/root-project/root/pull/928,1,['error'],['error']
Availability,"LT, // tp_flags; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; #if PY_VERSION_HEX >= 0x02030000; , 0 // tp_del; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC;; + CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE;; ; CPyCppyy_NoneType.tp_traverse = (traverseproc)0;; CPyCppyy_NoneType.tp_clear = (inquiry)0;; ~~~; This patch either drops the Py_TPFLAGS_HAVE_GC flag when .tp_traverse is 0 or makes sure it is not 0. This helps with the ""has the Py_TPFLAGS_HAVE_GC flag but has no traverse function"" errors, and ""import ROOT"" works. Most of the python tests work with this patch, but a few of them segfaults during the Python garbage collection, so it is not the correct fix. Anyone familiar with cppyy that have some ideas?. ~~~; Thread 1 ""python3"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff7c06cc0 in deduce_unreachable () from /lib64/libpython3.11.so.1.0; (gdb) bt; #0 0x00007ffff7c06cc0 in deduce_unreachable (); from /lib64/libpython3.11.so.1.0; #1 0x00007ffff7c069c7 in gc_collect_main () from /lib64/libpython3.11.so.1.0; #2 0x00007ffff7cd399c in _PyGC_CollectNoFail.isra.0 (); from /lib64/libpython3.11.so.1.0; #3 0x00007ffff7cd33f1 in finalize_modules () from /lib64/libpython3.11.so.1.0; #4 0x00007ffff7cbdfbb in Py_FinalizeEx () from /lib64/libpython3.11.so.1.0; #5 0x00007ffff7ccad19 in Py_RunMain () from /lib64/libpython3.11.so.1.0; #6 0x00007ffff7c8e96b in Py_BytesMain () from /lib64/libpython3.11.so.1.0; #7 0x00007ffff78a8550 in __libc_start",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10799:3824,error,errors,3824,https://root.cern,https://github.com/root-project/root/issues/10799,1,['error'],['errors']
Availability,"L_VEC'; __MATHCALL (function, suffix, args); ^; /usr/include/math.h:273:3: note: expanded from macro '__MATHCALL'; __MATHDECL (_Mdouble_,function,suffix, args); ^; /usr/include/math.h:276:3: note: expanded from macro '__MATHDECL'; __MATHDECL_1(type, __CONCAT(__,function),suffix, args); ^; /usr/include/math.h:283:15: note: expanded from macro '__MATHDECL_1'; extern type __MATH_PRECNAME(function,suffix) args __THROW; ^; /usr/include/math.h:303:34: note: expanded from macro '__MATH_PRECNAME'; # define __MATH_PRECNAME(name,r) name##f##r; ^; <scratch space>:180:1: note: expanded from here; __cosf; ^; cling: In file included from <built-in>:1:; In file included from /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_runtime_wrapper.h:148:; /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: error: reference to __device__ function '__nvvm_atom_add_gen_d' in __host__ function; return __nvvm_atom_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:71:10: note: '__nvvm_atom_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: error: reference to __device__ function '__nvvm_atom_cta_add_gen_d' in __host__ function; return __nvvm_atom_cta_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:74:10: note: '__nvvm_atom_cta_add_gen_d' declared here; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda_device_functions.h:77:10: error: reference to __device__ function '__nvvm_atom_sys_add_gen_d' in __host__ function; return __nvvm_atom_sys_add_gen_d(__p, __v);; ^; cling: /home/sehrig/workspace/root-project/install/etc//cling/lib/clang/9.0.1/include/__clang_cuda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:3524,error,error,3524,https://root.cern,https://github.com/root-project/root/issues/7518,1,['error'],['error']
Availability,Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o; /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory; #include <arrow/test-util.h>; ^~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3703:248,error,error,248,https://root.cern,https://github.com/root-project/root/pull/3703,1,['error'],['error']
Availability,"Launching the Python tutorials from the 'tutorials/launcher.py' module injected; the `__main__` namespace in the tutorial itself. In general it is not a problem,; but it can sometimes hide errors like the one fixed by; https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves; the same purpose and the tutorials can thus be launched by simply calling; 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10207:189,error,errors,189,https://root.cern,https://github.com/root-project/root/pull/10207,1,['error'],['errors']
Availability,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7777:235,ping,ping,235,https://root.cern,https://github.com/root-project/root/pull/7777,1,['ping'],['ping']
Availability,"Like `qt5web`, it provides web-based display but for Qt6 WebEngine component.; Qt6 WebEngine available now in Qt 6.3 developer branch, can be tested with OpenSUSE Tumbleweed. Both `qt5web` and `qt6web` can be build at the same time and used independently.; Just when starting ROOT, specify `root --web=qt6`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9182:93,avail,available,93,https://root.cern,https://github.com/root-project/root/pull/9182,1,['avail'],['available']
Availability,"Link to compilation error:; https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:; https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a; template base class -- the full type is injected in the derived class; anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3098:20,error,error,20,https://root.cern,https://github.com/root-project/root/pull/3098,2,['error'],['error']
Availability,"Lock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /reproducer/source/core/base/inc/LinkDef.h; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:2:; In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/array:43:; In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_algobase.h:64:; In file included from /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:; /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h:220:27: error: redefinition of '__is_in_place_type_v<in_place_type_t<_Tp> >'; inline constexpr bool __is_in_place_type_v<in_place_type_t<_Tp>> = true;; ^; /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.algorithm'; # include <bits/utility.h> // for std::tuple_element, std::tuple_size; ^; /reproducer/build/etc/cling/std.modulemap:5:10: note: std.algorithm defined here; module ""algorithm"" {; ^; /usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/stl_pair.h:62:11: note: '/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/utility.h' included multiple times, additional include site in header from module 'std.array'; # include <bits/utility.h> // for std::tuple_element, std::tuple_size; ^; /reproducer/build/etc/cling/std.modulemap:9:10: note: std.array defined here; module ""array"" {; ^; (...skip many more...); ```. Building with `-Druntime_cxxmodules=OFF` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:8809,error,error,8809,https://root.cern,https://github.com/root-project/root/issues/10478,1,['error'],['error']
Availability,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10618:183,error,erroring,183,https://root.cern,https://github.com/root-project/root/issues/10618,1,['error'],['erroring']
Availability,Looks like only TGeoCone was ignoring name.; Fixes error described in https://root-forum.cern.ch/t/32493,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3346:51,error,error,51,https://root.cern,https://github.com/root-project/root/pull/3346,2,['error'],['error']
Availability,"Looks like only TGeoCone was ignoring name.; Fixes error described in https://root-forum.cern.ch/t/32493; Patch can be applied to several previous versions: 6.12, 6.14, 6.16",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3340:51,error,error,51,https://root.cern,https://github.com/root-project/root/pull/3340,1,['error'],['error']
Availability,"MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-build'. See also. /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-*.log. -- stdout output is:; -- Configuring incomplete, errors occurred!. -- stderr output is:; CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/include"". CMake Warning:; Ignoring extra path from command line:. ""/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include"". CMake Error at CMakeLists.txt:86 (message):; Found unsupported version: LLVM 2.13.2;. Please set LLVM_DIR pointing to the llvm version 5.0 to 16.0.x build or; installation folder. CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:47 (message):; Stopping after outputting logs. gmake[2]: *** [interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/build.make:92: interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:44491: interpreter/cling/tools/plugins/clad/CMakeFiles/clad.dir/all] Error 2; gmake: *** [Makefile:1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:2176,error,errors,2176,https://root.cern,https://github.com/root-project/root/issues/14492,1,['error'],['errors']
Availability,"MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN_DEBUG_* macros. Level 1 would enable the warning messages that are currently only available when the compiler flag WARNINGMSG is defined. Level 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected to be negligible. I propose to place additional calls into the compiled code for everyone, but these calls are not executed unless the user picks a high print level. For a low print level, there is just the minor additional cost of a branch, which moreover can be predicted very well by the CPU, so the added cost should be almost zero. Furthermore, these branches do not happen in hot code paths. Hot paths are inside the cost function (which are unaffected) and in the linear algebra routines that Minuit2 uses (which are not instrumented with debug messages). ### Positive side-effects for wrappers and frontends. An important positive side effect for wrappers like iminuit is that we could show ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:2908,error,errors,2908,https://root.cern,https://github.com/root-project/root/issues/6421,2,['error'],['errors']
Availability,MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1027:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/functional:515:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__functional/boyer_moore_searcher.h:25:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/unordered_map:530:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__node_handle:65:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/optional:547:5: error: no template named 'is_trivially_destructible'; did you mean 'is_trivially_constructible'?; is_trivially_destructible<_Tp>::value &&; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_constructible.h:22:29: note: 'is_trivially_constructible' declared here; struct _LIBCPP_TEMPLATE_VIS is_trivially_constructible; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/D,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:21225,error,error,21225,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,MacOSX.sdk/usr/include/c++/v1/ostream:170:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/bitset:131:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string:576:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/string_view:1027:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/functional:515:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__functional/boyer_moore_searcher.h:25:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/unordered_map:530:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__node_handle:65:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/optional:579:5: error: no template named 'is_trivially_destructible'; did you mean 'is_trivially_constructible'?; is_trivially_destructible<_Tp>::value &&; ^; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__type_traits/is_trivially_constructible.h:22:29: note: 'is_trivially_constructible' declared here; struct _LIBCPP_TEMPLATE_VIS is_trivially_constructible; ^; While building module 'Core':; While building module 'std' imported from input_line_1:1:; In file included from <module-includes>:34:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex.h:27:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/ccomplex:21:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:243:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:191:; In file included from /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:165:; In file included from /Library/D,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:23256,error,error,23256,https://root.cern,https://github.com/root-project/root/issues/14337,1,['error'],['error']
Availability,Made TFile Error message more accurate,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10656:11,Error,Error,11,https://root.cern,https://github.com/root-project/root/pull/10656,1,['Error'],['Error']
Availability,"Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6609:701,error,errors,701,https://root.cern,https://github.com/root-project/root/pull/6609,1,['error'],['errors']
Availability,"Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3; versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,; and at the same time to change the function signature such that; it can also accept an arbitrary number of observables directly via; variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:; ```Python; effPdf.fitTo(data, ConditionalObservables=(x, y)); ```; instead of:; ```Python; effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)); ```; although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8416:531,failure,failures,531,https://root.cern,https://github.com/root-project/root/pull/8416,1,['failure'],['failures']
Availability,Make ReadClass error message more verbose,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/911:15,error,error,15,https://root.cern,https://github.com/root-project/root/pull/911,1,['error'],['error']
Availability,Make manual available offline,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421:12,avail,available,12,https://root.cern,https://github.com/root-project/root/issues/7421,1,['avail'],['available']
Availability,"Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:; ```; Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap; Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14145:92,error,errors,92,https://root.cern,https://github.com/root-project/root/pull/14145,2,"['Error', 'error']","['Error', 'errors']"
Availability,"Make sure `etc/gitinfo.txt` is generated before building ROOT. This should fix the following errors when building from scratch:; ```; Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap; Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14356:93,error,errors,93,https://root.cern,https://github.com/root-project/root/pull/14356,2,"['Error', 'error']","['Error', 'errors']"
Availability,Make tests fail if ASan finds an errors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005:33,error,errors,33,https://root.cern,https://github.com/root-project/root/pull/10005,1,['error'],['errors']
Availability,Make the missing error in rootcling a warning,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/946:17,error,error,17,https://root.cern,https://github.com/root-project/root/pull/946,1,['error'],['error']
Availability,"MakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]; 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]; 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]; 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]; 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b82",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:12560,error,error,12560,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"MakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]; 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]; 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]; 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]; 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11787:5460,error,error,5460,https://root.cern,https://github.com/root-project/root/issues/11787,1,['error'],['error']
Availability,"Makes the ntpl004_dimuon tutorial more focused on the RDataFrame aspect. No distraction due to the tree conversion step, the RNTuple file is pre-generated and available on root.cern.ch/files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6096:159,avail,available,159,https://root.cern,https://github.com/root-project/root/pull/6096,1,['avail'],['available']
Availability,"Many improvements in CEF:; - support POST requests, let transfer arbitrary data from client to server; - replace text-based cefQuery messaging by longpoll, required for binary transfer; - assign X11 error handler to avoid application abort in case of minor X11 warnings; - use single-process mode in batch to reduce number of running processes. Provide special handling of batch mode for Chrome and Firefox:; - both support `--headless` mode completely without X ; - very simple workaround to stop browser after 30 s with `timeout 30 chromium ...` command; - let configure custom shell commands via `.rootrc` parameters. Changes in http and webgui libraries:; - ""hide"" TCivetweb, TFastCgi, THttpWSEngine classes from end-user (@Axel-Naumann); - remove some comments from civetweb.c (@amadio); - use std::copy() instead of memcpy() for std::string (@Axel-Naumann); - introduce simple key identification of clients, let recognize which client starts by TWebWindow::Show(); - simplify cmake files, separate v7 code in FitPanel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1886:199,error,error,199,https://root.cern,https://github.com/root-project/root/pull/1886,1,['error'],['error']
Availability,"Many people pythonized the RooWorkspace themselves by adding a new; attribute `_import` that calls getattr(self, ""import"") under the; hood. However, `_import` is now the reference to the original cppyy; overload, and resetting it with a wrapper around `import` would cause; infinite recursions! We prevent resetting that attribute here, which; is a clearer error to the user than an infinite call stack involving; the internal pythonization code. The ""official"" way of calling `RooWorkspace::import()` in PyROOT is now `RooWorkspace.Import`. Should be backported to the 6.26 release if possible, so that people are not caught by surprise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9896:357,error,error,357,https://root.cern,https://github.com/root-project/root/pull/9896,1,['error'],['error']
Availability,Markdown errors lead to incorrect rendering of the ROOT user guide. Some elements are rendered wider than the body width. Therefore annoying horizontal scrollbar is present on the User Guide web page:. https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7756:9,error,errors,9,https://root.cern,https://github.com/root-project/root/pull/7756,1,['error'],['errors']
Availability,"Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'!; You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(); Maybe you need to load the corresponding shared library?; root [3] .q. $ root -l; root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};; root [1] auto firstTwo2 = Take(v, 2);; ROOT_prompt_1:1:1: error: Syntax error; auto firstTwo2 = Take(v, 2);; ^; FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'; |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>; | |-DeclStmt 0x2b442a0 <line:1:1, col:28>; | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit; | | `-CallExpr 0x2b44270 <col:18, col:27> '<dependent type>'; | | |-DeclRefExpr 0x2b441f0 <col:18> '<dependent type>' lvalue Var 0x2b44158 'Take' '<dependent type>'; | | |-DeclRefExpr 0x2b44230 <col:23> 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>' lvalue Var 0x2230488 'v' 'ROOT::VecOps::RVec<double>':'ROOT::VecOps::RVec<double>'; | | `-IntegerLiteral 0x2b44250 <col:26> 'int' 2; | `-NullStmt 0x2b442b8 <line:2:1>; |-AnnotateAttr 0x2b440f0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; `-AnnotateAttr 0x2b441c0 <<invalid sloc>> R""ATTRDUMP(__ResolveAtRuntime)ATTRDUMP""; <<<NULL>>>; root [2] .q. ```. ### Setup. 1. ROOT version; * 6.22/08. ```; ROOT Version: 6.22/08; Built for linuxx8664gcc on Mar 10 2021, 14:20:04; From tags/v6-22-08@v6-22-08; ```. * 6.25/01; ```; ROOT Version: 6.25/01; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; ```. 2. Operating system: NixOS, a linux distribution; * `nix-info -m`; - system: `""x86_64-linux""`; - host os: `Linux 5.10.73, NixOS, 21.05.20211019.8fe3b97 (Okapi)`; - multi-user?: `yes`; - sandbox: `ye",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:10243,error,error,10243,https://root.cern,https://github.com/root-project/root/issues/9261,2,['error'],['error']
Availability,"Method signature used for `DataLoader::PrepareTrainingAndTestSet` triggered the generation of classes ""Signal"" and ""Background"". Since the task was regression this caused confusion further down the processing pipeline. Code changed to use global selection cut instead of implicit signal/background cuts. Also includes additional improvements to variable names and documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2460:189,down,down,189,https://root.cern,https://github.com/root-project/root/pull/2460,1,['down'],['down']
Availability,Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3904:173,error,error,173,https://root.cern,https://github.com/root-project/root/pull/3904,1,['error'],['error']
Availability,Missing Lock Error Detection for TCollection,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/647:13,Error,Error,13,https://root.cern,https://github.com/root-project/root/pull/647,1,['Error'],['Error']
Availability,Missing linking to the libcrypto library causes undefined symbols:. ````; /usr/bin/ld: ../../lib/librpdutil.a(globus.cxx.o): in function `ROOT::GlbsToolCheckProxy(char**)':; /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:547: undefined reference to `PEM_read_X509'; /usr/bin/ld: /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:552: undefined reference to `X509_get_issuer_name'; /usr/bin/ld: /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:552: undefined reference to `X509_NAME_oneline'; /usr/bin/ld: ../../lib/librpdutil.a(globus.cxx.o): in function `ROOT::GlbsToolCheckCert(char**)':; /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:187: undefined reference to `PEM_read_X509'; /usr/bin/ld: /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:192: undefined reference to `X509_get_subject_name'; /usr/bin/ld: /builddir/build/BUILD/root-6.14.02/net/rpdutils/src/globus.cxx:192: undefined reference to `X509_NAME_oneline'; collect2: error: ld returned 1 exit status; ````,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2436:1006,error,error,1006,https://root.cern,https://github.com/root-project/root/pull/2436,1,['error'],['error']
Availability,"Modify the behaviour of SetBranchAddress so that proxy references can be passed as arguments from the Python side, more precisely in cases where the C++ implementation of the method expects the address of a pointer. For example:; ```python; v = ROOT.std.vector('int')(); t.SetBranchAddress(""my_vector_branch"", v); ```. Pending items:; - Check failure in Python 3; - Test other overloads; - Any other case to support? E.g. SetBranchAddress of individual elements in a struct?; - Use helper method `GetClass` that was factored out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2476:343,failure,failure,343,https://root.cern,https://github.com/root-project/root/pull/2476,1,['failure'],['failure']
Availability,More XML tutorials generate errors when converted into notebooks. The error is the same as the previous PR on that topic:. ```; Error in <TXMLEngine::ParseFile>: Unexpected end of xml file; ```. The notebook version for XML tutorials is deactivated for now. It is not really mandatory for these tutorials anyway.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10490:28,error,errors,28,https://root.cern,https://github.com/root-project/root/pull/10490,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,More detail can be found in the commit descriptions. This addresses the following forum issue:. Related forum post:; https://root-forum.cern.ch/t/error-for-unbinned-binned-weighted-fits/51336,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11282:146,error,error-for-unbinned-binned-weighted-fits,146,https://root.cern,https://github.com/root-project/root/pull/11282,1,['error'],['error-for-unbinned-binned-weighted-fits']
Availability,"More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the; runitme for stressRooFit down from 8 to 7 seconds for the CPU mode; (without the BatchMode, the stressRooFit suite takes 7.7 seconds to; run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10612:132,down,down,132,https://root.cern,https://github.com/root-project/root/pull/10612,1,['down'],['down']
Availability,"More info in the commit descriptions. This should fix the compiler errors reported on the forum:; https://root-forum.cern.ch/t/error-compiling-with-ubuntu-20-04-4-lts/49097. Should be backported to 6.26. This PR also suggests a slight change to the HistFactory::JSONTool interface which is not necessarily a bugfix, but it's better to hide away the `JSONTool::Export` function as of 6.26.02 such that people don't start using it and we we are stuck with that interface.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10082:67,error,errors,67,https://root.cern,https://github.com/root-project/root/pull/10082,2,['error'],"['error-compiling-with-ubuntu-', 'errors']"
Availability,"Most ROOT developers and users seem to agree that autonomously toggling features at configuration time based on the environment is not good. The feature set that ROOT is built with is then not deterministic. In past cases, this already resulted in accidentally missing test coverage because features were switched off after environment changes. That's why for the CI, we are always building with the `fail-on-missing-option`. However, this is not only a problem in testing, but everytime ROOT is built. That's why this commit suggests to make `fail-on-missing` the default, and warn the users of potential future deprecation of this flag in the release notes. An interesting point is also that the `fail-on-missing` code path in `SearchInstalledSoftware.cmake` is much simpler, which also helps to reduce the margin for error. See also:; https://github.com/root-project/root/issues/14188#issuecomment-1844965943",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14311:820,error,error,820,https://root.cern,https://github.com/root-project/root/pull/14311,1,['error'],['error']
Availability,Most probable reason for error described in ROOT-10916 issue,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6022:25,error,error,25,https://root.cern,https://github.com/root-project/root/pull/6022,1,['error'],['error']
Availability,"Motivation: we need to make sure that, if PyROOT is used from another process that will keep on living after the Python interpreter dies, PyROOT does not shut down the ROOT interpreter via `TROOT::EndOfProcessCleanups` when running its atexit handler. In that sense, this PR adds a configuration option to tell PyROOT if the teardown needs to be soft, i.e. we do not want to shut down the ROOT interpreter. Instead, in the soft mode, we only want (and need) to clean the objects that are controlled by PyROOT via its `TMemoryRegulator`. @Axel-Naumann @pcanal just one new thing with respect to what we discussed: in the function that does the cleanup of the objects in `TMemoryRegulator`, called `RecursiveRemoveAll` in my commit, we can only delete a C++ object found in the map if the corresponding Python proxy **owns** the C++ object. Otherwise we will have a double delete (if the proxy does not own is because the deletion will happen somewhere else, so our `RecursiveRemoveAll` can't delete too).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4687:159,down,down,159,https://root.cern,https://github.com/root-project/root/pull/4687,2,['down'],['down']
Availability,"Moved from https://github.com/root-project/root/pull/6385 as there are too many bot comments in that PR. cc @vgvassilev. When testing the LLVM 9 PR for conda-forge and had a few issues with external LLVM/Clang/Cling so I temporarily switched to the builtins. This works from the build directory but it then has issues once `make install` is ran. More details are in the comment copied at the end of this issue. I think this is an issue with root's install commands rather than the conda-recipe, but you can reproduce what I'm doing it docker by running:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git; cd root-feedstock; git checkout llvm90-install-error; # Adjust CPU_COUNT as required; CPU_COUNT=192 ./build-locally.py --debug --output-id '*root_base*' linux_64_numpy1.16python3.8.____cpython; # When the container launches, look at the output and run the suggested command; # which will be of the form:; cd xxxxx && source xxxxx/build_env_setup.sh; source $RECIPE_DIR/build_root-base.sh; # Anything with ROOT will now fail, e.g.; root; # Rather than waiting to build again, you can roll back to before; # ""make install"" was ran by running; cd ../..; rm -rf $PWD/*; cp -rp $PWD.bak/* $PWD/; cd -; ```. >The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:; >```log; >$ root -b -q -x -e 1+2; >input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:670,error,error,670,https://root.cern,https://github.com/root-project/root/issues/7055,1,['error'],['error']
Availability,"Moving `RooMath` to RooBatchCompute caused linker errors for users that; we want to avoid: RooBatchCompute is a RooFit implementation detail and; we don't want poeple to link against it. For this reason, RooMath is moved back into RooFitCore, and the; Faddeeva implementation that is also used in RooBatchCompute is split; off into a new file `faddeeva_impl.h` that is not part of the public; interface.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10359:50,error,errors,50,https://root.cern,https://github.com/root-project/root/pull/10359,1,['error'],['errors']
Availability,Moving the inline unsigned TExecutor::GetPoolSize() const method from the TExecutor.hxx header file to the (new) TExecutor.cxx source file fixes the following error on Windows:; ```; IncrementalExecutor::executeFunction: symbol '?GetPoolSize@TThreadExecutor@ROOT@@QBEIXZ' unresolved while linking function '??__Eid@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A@YAXXZcling_module_0_'!; You are probably missing the definition of public: unsigned int __thiscall ROOT::TThreadExecutor::GetPoolSize(void)const; Maybe you need to load the corresponding shared library?; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7037:159,error,error,159,https://root.cern,https://github.com/root-project/root/pull/7037,1,['error'],['error']
Availability,"My name is Mohammad Sarik, I am a Ethical hacker from INDIA. I found a Directory Traversal Vulnerability in your website. There URL is this:- https://root.cern.ch/ and there Parent Directory URL is this:- https://root.cern.ch/download/ Fix this Vulnerbility because it has very important Files & Data.I give you some proof in terms of screenshot.; ![Screenshot_2023-02-01_12_44_54](https://user-images.githubusercontent.com/124130635/215976318-c8943307-7b48-46d7-8356-4828f8952432.png); ![Screenshot_2023-02-01_12_45_02](https://user-images.githubusercontent.com/124130635/215976326-32db3095-1b02-47dc-be54-9c64f8ffab0d.png); ![Screenshot_2023-02-01_12_45_18](https://user-images.githubusercontent.com/124130635/215976335-52ddb636-1931-4d5c-839b-44d10db7b90a.png); some proof in terms of screenshot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12194:226,down,download,226,https://root.cern,https://github.com/root-project/root/issues/12194,1,['down'],['download']
Availability,"NST RELIABILITY. **********. ** 14 **MIGRAD 1220 0.01. **********. FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4. START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-05. FCN=2.0002 FROM MIGRAD STATUS=INITIATE 10 CALLS 11 TOTAL. EDM= unknown STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92352e+04 3.69975e+05 3.69975e+05 -1.48093e-07. 2 p1 1.96154e+04 1.84897e+05 1.84897e+05 -3.07743e-07. NO ERROR MATRIX . FCN=2.0002 FROM MIGRAD STATUS=PROGRESS 18 CALLS 19 TOTAL. EDM=1.74447e-09 STRATEGY= 1 NO ERROR MATRIX . EXT PARAMETER CURRENT GUESS STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.69975e+05 4.74380e+00 2.66618e-09. 2 p1 1.96178e+04 1.84897e+05 2.46201e+00 -5.09885e-09. MIGRAD MINIMIZATION HAS CONVERGED. MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX. START COVARIANCE MATRIX CALCULATION. EIGENVALUES OF SECOND-DERIVATIVE MATRIX:. 4.6862e-04 1.9995e+00. COVARIANCE MATRIX CALCULATED SUCCESSFULLY. FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER STEP FIRST . NO. NAME VALUE ERROR SIZE DERIVATIVE . 1 p0 -3.92305e+04 3.70013e+05 4.36181e+00 2.66618e-09. 2 p1 1.96178e+04 1.85006e+05 3.42377e+00 -5.06312e-09. EXTERNAL ERROR MATRIX. NDIM= 25 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . PARAMETER CORRELATION COEFFICIENTS . NO. GLOBAL 1 2. 1 0.99953 1.000 -1.000. 2 0.99953 -1.000 1.000. Info in <TMinuitMinimizer::Minimize>: Finished to run MIGRAD - status 0. EXTERNAL ERROR MATRIX. NDIM= 2 NPAR= 2 ERR DEF=1. 1.369e+11 -6.842e+10 . -6.842e+10 3.423e+10 . FCN=2.0002 FROM MIGRAD STATUS=CONVERGED 28 CALLS 29 TOTAL. EDM=1.84898e-06 STRATEGY= 1 ERROR MATRIX ACCURATE . EXT PARAMETER PARABOLIC MINOS ERRORS . NO. NAME VALUE ERROR NEGATIVE POSITIVE . 1 p0 -3.92305e+04 3.70013e+05 . 2 p1 1.96178e+04 1.85006e+05 . <cppyy.gbl.TFitResultPtr object at 0x55aa1f57a4f0>. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13895:3059,ERROR,ERROR,3059,https://root.cern,https://github.com/root-project/root/issues/13895,7,['ERROR'],"['ERROR', 'ERRORS']"
Availability,"NetxNG needs the include directory for XRootD, but when XRootD is enabled as a builtin, the include directory points to the build directory and causes CMake to fail with an [error](http://cdash.cern.ch/viewConfigure.php?buildid=570698) like the one below:; ```; CMake Error in net/netxng/CMakeLists.txt:; Target ""NetxNG"" INTERFACE_INCLUDE_DIRECTORIES property contains path:. ""${BUILDDIR}/include/xrootd"". which is prefixed in the build directory.; ```; This is a blocker to move to modern CMake constructs (using targets and properties) for targets that use headers of builtins in their own headers, as we cannot create imported or exported targets with proper dependencies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2727:174,error,error,174,https://root.cern,https://github.com/root-project/root/pull/2727,2,"['Error', 'error']","['Error', 'error']"
Availability,"New PR after rebasing the branch. @cburgard's description of the changes:; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects.; However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas).; However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit.; With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4521:628,error,error,628,https://root.cern,https://github.com/root-project/root/pull/4521,1,['error'],['error']
Availability,Non correct display of error bars when exceeding y-range,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16093:23,error,error,23,https://root.cern,https://github.com/root-project/root/pull/16093,1,['error'],['error']
Availability,Not available in ROOT's minimal cmake version.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4092:4,avail,available,4,https://root.cern,https://github.com/root-project/root/pull/4092,1,['avail'],['available']
Availability,"Now several parameters can be configured via rootrc file:. ```; WebEve.JsRootRender: 1 # use JSROOT Geometry Painter for GL drawings, default off; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```. Provide context menu, which activate browser at specified element; Improve/repair functionality with JSROOT GeoPainter. ; Provide single-click mouse handler, used for tracks/jets selection; Improve highlight handling in plain three.js mode; Make possibility to specify table row width via rootrc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4966:569,repair,repair,569,https://root.cern,https://github.com/root-project/root/pull/4966,1,['repair'],['repair']
Availability,"Now that the machinery of https://github.com/root-project/root/pull/14287 is available, we can begin the process of making constants in ROOT `constexpr` to get the benefit of a faster initialization. I began with `TString::kNPOS` and the ones in `RTypesCore.h`, but do let me know if you see other candidates for the same procedure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14352:77,avail,available,77,https://root.cern,https://github.com/root-project/root/pull/14352,1,['avail'],['available']
Availability,"Ntup->Print(""NUD_total_ADC*""); ******************************************************************************; *Tree :DmpMCEvtNtup: DAMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; root [2] TTreeReaderValue<double> rv(r, ""NUD_total_ADC.nud_total_adc"");; root [3] r.Next(); (bool) true; root [4] *rv; (double) -999.00000; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `TTreeReader` should support the same set of ""valid branch names"" that `TTree::Draw` supports. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Reproduced with 6.22/02 and master@4ea4d8943 . ### Additional context; <!--; Add any other context about the problem here.; -->. This looks similar to ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:1642,Error,Error,1642,https://root.cern,https://github.com/root-project/root/issues/6881,1,['Error'],['Error']
Availability,"Nudge about those issues without a project, pinging the person who closed and all assignees. (new version of #8654 which runs daily instead of immediately after closing an issue)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8658:44,ping,pinging,44,https://root.cern,https://github.com/root-project/root/pull/8658,1,['ping'],['pinging']
Availability,"OOT 6.20/06. Minimum example to be executed with `$ root -b -l read_tree.cxx` is:. ```; using namespace std::chrono;. void process_tree(TString name, int nFiles, bool DoGetEntries, bool DoDeactivateBranches ) {. // any root files with a TTree; const TString filename = (""/cvmfs/cms.cern.ch/slc6_amd64_gcc530/lcg/root/6.06.00-ikhhed6/tutorials/hsimple.root"");. TChain* chain = new TChain(""ntuple"");; for ( int i = 0 ; i<nFiles ;i++ ) {; chain->Add(filename);; }. long nEntries = -1;; if ( DoGetEntries ) nEntries = chain->GetEntries();. if ( DoDeactivateBranches ); chain->SetBranchStatus(""*"",0); // this line, together with a previous GetEntries() causes a bug, but only if a single file is passed to the TChain!. // read a single branch; float px,py,pz,random=0.333333;; TBranch* b_random;; chain->SetBranchAddress(""random"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omiting to print further errors ...""<<endl;; }; sum += random;; }; }. // print out results and timing; auto stop = high_resolution_clock::now();; auto ms_int = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);; cout<<""Processing of '""<<name<<""' took ""<< Form(""%6ld"",ms_int.count()) <<"" milliseconds, (nFiles=""<<nFiles; <<"", GetEntries=""<<DoGetEntries; <<"", DeactivateBranches=""<<DoDeactivateBranches; <<"") Result: avg=""<<sum/iev<<"", # Errors: ""<<nerrors<<endl;. }. void read_tree() {; cout<<""Starting example...""<<endl;; process_tree(""Example 1"", ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7567:1613,reliab,reliable,1613,https://root.cern,https://github.com/root-project/root/issues/7567,1,['reliab'],['reliable']
Availability,"OOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. We are trying to fit some synthesized data with 1 normalization, 1 signal, and 2 background templates. All templates are 3D templates.; Our baseline fit in ROOT 6.28 resulted in non-convergent fit (small EDM, but all nuisance parameters hitting boundaries and model did not describe data well at all). ; The fit in ROOT 6.24 was fine. The baseline fit contains no shape variations so all nuisance parameters are `NormFactor`s. Below is the fitter output (the `DEBUG` lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729:1201,error,error,1201,https://root.cern,https://github.com/root-project/root/issues/12729,1,['error'],['error']
Availability,"OOT. The issue was fixed by Richard upstream; in r303373. The error we fix with this patch is:; ```; While building module 'Core':; While building module 'stl' imported from input_line_1:1:; In file included from <module-includes>:5:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/ccomplex:39:; In file included from /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/complex:42:; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:102:23: error: use of undeclared identifier '_Tp'; struct __are_same<_Tp, _Tp>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:25: error: use of undeclared identifier '_Tp'; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:318:29: error: expected expression; struct __is_pointer<_Tp*>; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:329:37: error: declaration of '_Tp' must be imported from module 'stl.ccomplex' before it is required; : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >; ^; /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2.0native/x86_64-slc6/bin/../lib/gcc/x86_64-pc-linux-gnu/6.2.0/../../../../include/c++/6.2.0/bits/cpp_type_traits.h:327:21: note: previous declaration is here; template<typename _Tp>; ^; ```. Original patch description:. When we enter a module within a linkage specification, switch the linkage; specification and the TU to the new module. This is necessary to get the module ownership cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1016:1109,error,error,1109,https://root.cern,https://github.com/root-project/root/pull/1016,1,['error'],['error']
