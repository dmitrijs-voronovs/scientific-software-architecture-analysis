quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,iniconda3/pkgs/nbclassic-0.5.6-pyhb4ecaf3_1/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_dotted_labels.yml; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_annotations.yml; /usr/share/man/man1/gcloud_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_list-vulnerabilities.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_describe.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_alpha_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_list.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_tags_list.1.gz; /usr/share/man/man1/gc,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:2111,test,test,2111,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751,1,['test'],['test']
Testability,"inor documentation updates (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12329"">#12329</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/5954bc9cbfef4a8fff658cde00016f12d03b46f8""><code>5954bc9</code></a> Update copyright in LICENSE (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12330"">#12330</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/8650f5c2eedc26f11b6f5c35cf0c0d752aaf51fb""><code>8650f5c</code></a> stubgen: fix non default keyword-only argument positioning (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12303"">#12303</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/226661f62f365102f5fd913b39b32ed3f12e208b""><code>226661f</code></a> Exhaustiveness checking for match statements (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12267"">#12267</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/fce1b548be74f7c65f8e3645f2a2b46aeff0c5a8""><code>fce1b54</code></a> CI: Do not run mypy_primer on stubtest/stubgen PRs (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12295"">#12295</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/c7a81620bef7585cca6905861bb7ef34ec12da2f""><code>c7a8162</code></a> stubtest: ignore more dunder positional-only errors (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/12294"">#12294</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/python/mypy/compare/v0.780...v0.941"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mypy&package-manager=pip&previous-version=0.780&new-version=0.941)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase man",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11573:1917,stub,stubtest,1917,https://hail.is,https://github.com/hail-is/hail/pull/11573,6,['stub'],"['stubgen', 'stubtest']"
Testability,install 3rd party tools in test script (travis),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/106:27,test,test,27,https://hail.is,https://github.com/hail-is/hail/issues/106,1,['test'],['test']
Testability,"institute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.SampleQCSuite.testStoreAfterFilter PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.vcf.SplitSuite.SplitTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testD_$eq$eq PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testFlushDouble PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testFilterSamples PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testSame PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.VariantSuite.testVariant PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.gqDpStatsSuite.test PASSED; :check. BUILD SUCCESSFUL; ```. **TIMING**. import, write chr22; - Current master, best of 3: 1m48.5s; - map-any, best of 3: 1m43.1s. read, filtervariants --keep -c 'va.info.MQ>20'",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:2299,test,test,2299,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,instrumentation for leo loginfo,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12359:24,log,loginfo,24,https://hail.is,https://github.com/hail-is/hail/pull/12359,1,['log'],['loginfo']
Testability,"interesting, no tests fail as is",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8008#issuecomment-580537133:16,test,tests,16,https://hail.is,https://github.com/hail-is/hail/pull/8008#issuecomment-580537133,1,['test'],['tests']
Testability,introduced dummy failure to test.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4448#issuecomment-424758306:28,test,test,28,https://hail.is,https://github.com/hail-is/hail/pull/4448#issuecomment-424758306,1,['test'],['test']
Testability,io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3915,test,testng,3915,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,2,['test'],['testng']
Testability,io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:341); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:339); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4108,test,testng,4108,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['test'],['testng']
Testability,"ion changes (i.e. when we ""release""). These steps only perform work; when hail-is/hail lacks a tag for the pip version described in; `hail/Makefile`. Otherwise, they `exit 0` with an informative note. The `test_dataproc` step, unfortunately, builds hail. The hailctl artifacts are; placed in `gs://hail-common/hailctl/dataproc/ci_test_dataproc/...`. Otherwise; test_dataproc operates identically to `make test-dataproc`. The `deploy` step uses `wheel-container.tar` rather than building; Hail (again). I migrated the `deploy` and `test-dataproc` code out of the; `Makefile` and into bash scripts. I did not migrate the artifact upload out of the; `Makefile`. The `dev` scope is only intended for debugging production issues or; prospectively testing dataproc on a suspicious change set. ---. The PR test results are uninformative as to the correctness of this change; because these steps are not scoped `test`. I tested [test_dataproc in a dev; deploy](https://ci.hail.is/batches/32357). I have not tested `deploy.sh`. I take; responsibility for executing the next deploy. ---. If CI deploy is broken but CI can still run dev-deploys, then a developer may; deploy hail with `hailctl`:. ```; hailctl dev deploy hail-is/hail:master --steps deploy; ```. One may also deploy from a laptop. You need curl >=7.55.0 (that version; implemented reading headers from a file). Create $HOME/.pypirc and put this; there:. ```; [pypi]; username: hailteam; password: GET_THIS_FROM_THE_USUAL_PLACE; ```. get a github access token with repo; privileges (https://github.com/settings/tokens), create; $HOME/.github-oauth-header, and put this there:. ```; Authorization: token YOUR_ACCESS_TOKEN_HERE; ```. Now, deploy from your laptop:. ```; make deploy GITHUB_OAUTH_HEADER_FILE=$HOME/.github-oauth-header DEPLOY_REMOTE=THE_REMOTE_FOR_hail-is/hail; ```. ---. I added two new credentials:; - `pypi-credentials`: `hailgenetics` PyPI credentials, and; - `test-dataproc-service-account-key`:; `test-dataproc@hail-vdc.iam.gser",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8550:1187,test,tested,1187,https://hail.is,https://github.com/hail-is/hail/pull/8550,1,['test'],['tested']
Testability,"ion to a separate pass (which is simple, because it can use the Binds.scala infrastructure). One consequence is that we can't assign types to nodes like `Ref` during parsing, which means we can't ask for the type of any node during parsing, and by extension we can't ask for types of children in IR node constructors. Instead, all typechecking logic is moved to the `TypeCheck` pass. Some benefits of this change:; * The parser is simpler, as it doesn't have to maintain a typing environment.; * Binds.scala is now the single source of truth on the binding structure of the IR.; * Instead of typechecking being split in an ad-hoc way between IR constructors and the `TypeCheck` pass, all typechecking and type error reporting logic is in one place.; * The parser parses a context-free grammar, no more and no less. If the input is gramatically correct, the parser succeeds.; * We can round trip IR with type errors through the text representation. For instance, if we log an IR that fails TypeCheck, we can copy the IR from the log, parse it, then debug. This change was motivated by my work in progress to convert the parser to use the SSA grammar, which this should greatly simplify. I chose to make the type annotation pass after parsing mutate the IR in place (with the unfortunate exception of `Apply`, which can change into an `ApplyIR` or `ApplySpecial`. Do these really need to be separate nodes?). The type of a `Ref` node was already mutable to allow this sort of deferred annotation, and I've had to make a few other things mutable as well. Alternatively we could rebuild the entire IR to include type annotations, but I think the mutation is sufficiently well localized, and this is a common compiler pattern. This touches a lot of lines, but the high level changes are:; * Remove the `refMap` from the `IRParserEnvironment`, and remove all code that modifies the typing environment from the parser. Nodes like `Ref` that need a type from the environment get types set to `null`, to be fil",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13990:1360,log,log,1360,https://hail.is,https://github.com/hail-is/hail/pull/13990,2,['log'],['log']
Testability,"ion"": null,; ""fork"": false,; ""url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7"",; ""forks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/forks"",; ""keys_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/keys{/key_id}"",; ""collaborators_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/collaborators{/collaborator}"",; ""teams_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/teams"",; ""hooks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/hooks"",; ""issue_events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/events{/number}"",; ""events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/events"",; ""assignees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/assignees{/user}"",; ""branches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/tags"",; ""blobs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/blobs{/sha}"",; ""git_tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/trees{/sha}"",; ""statuses_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/languages"",; ""stargazers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-te",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:3153,test,test,3153,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"ion, merge pull request <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1302"">#1302</a> from tqdm/devel</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/a6139189856349e96b5bfad30e0c296d44861fb1""><code>a613918</code></a> tests: pin py3.5 keras</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/02b29234f88272778b879b3da7589cbb9ce13dfd""><code>02b2923</code></a> tests: drop py3.6 nbval</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/2a9f1d23d3033c40ba9568285a144d711aa7d02b""><code>2a9f1d2</code></a> tests: fix pytest-nbval, tidy versions</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/6ba43f2631a18f8bfe2cd1bb2071c507e88ce6d8""><code>6ba43f2</code></a> tests: fix pytest-asyncio usage</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/6426c55b0f546a51be6e60034f34fbcaa87f679b""><code>6426c55</code></a> cli: fix py3.9 <code>importlib</code> usage</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/c1e7acebad76c0a6d17ce005d46e55f06bda1c09""><code>c1e7ace</code></a> tests: coverage warning</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/2190b1b76d4c496a75a5e37560c5f24edfff6a74""><code>2190b1b</code></a> tests: add py3.10</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/a14ea74a81be2bc0abe5b64e45e57cbd1d2687b1""><code>a14ea74</code></a> tests: fix nbval</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/7cdbfee224f94c8bc63dceaab42637962f2f2a04""><code>7cdbfee</code></a> autonotebook: check for ipywidgets</li>; <li>Additional commits viewable in <a href=""https://github.com/tqdm/tqdm/compare/v4.42.1...v4.63.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tqdm&package-manager=pip&previous-version=4.42.1&new-version=4.63.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11587:5711,test,tests,5711,https://hail.is,https://github.com/hail-is/hail/pull/11587,1,['test'],['tests']
Testability,ion: Task failed while writing rows; 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer.writeRows(WriterContainer.scala:261); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	... 1 more; Caused by: java.lang.ArrayIndexOutOfBoundsException; ```. And the actual informative trace nested in the `hail.log`:; ```; Caused by: java.lang.ArrayIndexOutOfBoundsException: 1; at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); at org.broadinstitute.hail.expr.FunctionRegistry$$anonfun$209.apply(FunctionRegistry.scala:1058); at org.broadinstitute.hail.expr.FunctionRegistry$$anonfun$209.apply(FunctionRegistry.scala:1058); at org.broadinstitute.hail.expr.BinaryFun.apply(Fun.scala:108); at org.broadinstitute.hail.expr.AST$$anonfun$evalCompose$2.apply(AST.scala:143); at org.broadinstitute.hail.expr.FunctionRegistry$$anonfun$lookupMethod$1$$anonfun$36.apply(FunctionRegistry.scala:228); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at sc,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1202:7803,log,log,7803,https://hail.is,https://github.com/hail-is/hail/issues/1202,1,['log'],['log']
Testability,ionHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.getKey$1(OrderingSuite.scala:345); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:347); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:318); 	at is.hail.utils.package$.using(package.scala:613); 	at is.hail.annotations.Region$.scoped(Region.scala:13); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:318); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:314); 	at is.hail.check.GenProp1$$anonfun$apply$1$$anonfun$1.apply$mcZ$sp(Prop.scala:28); 	at is.hail.check.Gen,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1923,Test,TestNG,1923,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['Test'],['TestNG']
Testability,ionHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4847,Test,TestNG,4847,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['Test'],['TestNG']
Testability,ionHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.googl,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4654,Test,TestNG,4654,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,1,['Test'],['TestNG']
Testability,"ions 1.0.0 requires portalocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiodns 2.0.0 requires pycares, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **556/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.4 | Cross-site Scripting (XSS) <br/>[SNYK-PYTHON-JINJA2-6150717](https://snyk.io/vuln/SNYK-PYTHON-JINJA2-6150717) | `jinja2:` <br> `3.1.2 -> 3.1.3` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0M2ViODJhZS04ZDkwLTRjZWUtYjIzMS01ZDMyYmZiZWM4OWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQzZWI4MmFlLThkOTAtNGNlZS1iMjMxLTVkMzJiZmJlYzg5YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14136:1483,test,tested,1483,https://hail.is,https://github.com/hail-is/hail/pull/14136,1,['test'],['tested']
Testability,"ions and Removals</h2>; <ul>; <li><code>[#468](https://github.com/pytest-dev/pytest-xdist/issues/468) &lt;https://github.com/pytest-dev/pytest-xdist/issues/468&gt;</code>_: The <code>--boxed</code> command line argument is deprecated. Install pytest-forked and use <code>--forked</code> instead. pytest-xdist 3.0.0 will remove the <code>--boxed</code> argument and pytest-forked dependency.</li>; </ul>; <h2>Features</h2>; <ul>; <li>; <p><code>[#722](https://github.com/pytest-dev/pytest-xdist/issues/722) &lt;https://github.com/pytest-dev/pytest-xdist/issues/722&gt;</code>_: Full compatibility with pytest 7 - no deprecation warnings or use of legacy features.</p>; </li>; <li>; <p><code>[#733](https://github.com/pytest-dev/pytest-xdist/issues/733) &lt;https://github.com/pytest-dev/pytest-xdist/issues/733&gt;</code>_: New <code>--dist=loadgroup</code> option, which ensures all tests marked with <code>@pytest.mark.xdist_group</code> run in the same session/worker. Other tests run distributed as in <code>--dist=load</code>.</p>; </li>; </ul>; <h2>Trivial Changes</h2>; <ul>; <li>; <p><code>[#708](https://github.com/pytest-dev/pytest-xdist/issues/708) &lt;https://github.com/pytest-dev/pytest-xdist/issues/708&gt;</code>_: Use <code>@pytest.hookspec</code> decorator to declare hook options in <code>newhooks.py</code> to avoid warnings in <code>pytest 7.0</code>.</p>; </li>; <li>; <p><code>[#719](https://github.com/pytest-dev/pytest-xdist/issues/719) &lt;https://github.com/pytest-dev/pytest-xdist/issues/719&gt;</code>_: Use up-to-date <code>setup.cfg</code>/<code>pyproject.toml</code> packaging setup.</p>; </li>; <li>; <p><code>[#720](https://github.com/pytest-dev/pytest-xdist/issues/720) &lt;https://github.com/pytest-dev/pytest-xdist/issues/720&gt;</code>_: Require pytest&gt;=6.2.0.</p>; </li>; <li>; <p><code>[#721](https://github.com/pytest-dev/pytest-xdist/issues/721) &lt;https://github.com/pytest-dev/pytest-xdist/issues/721&gt;</code>_: Started using type annotations and mypy",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11491:1312,test,tests,1312,https://hail.is,https://github.com/hail-is/hail/pull/11491,2,['test'],['tests']
Testability,"ions, shuffle); 2508 return MatrixTable(jvds); 2509 ; /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134 ; 1135 for temp_arg in temp_args:; /home/hail/hail.zip/hail/utils/java.py in deco(*args, **kwargs); 194 raise FatalError('%s\n\nJava stack trace:\n%s\n'; 195 'Hail version: %s\n'; --> 196 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; 197 except pyspark.sql.utils.CapturedException as e:; 198 raise FatalError('%s\n\nJava stack trace:\n%s\n'; FatalError: AssertionError: assertion failed; Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 4 in stage 7.0 failed 20 times, most recent failure: Lost task 4.19 in stage 7.0 (TID 601, mycluster-w-0.c.ukbb-all-phenos.internal, executor 2): java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.Region.loadAddress(Region.scala:63); at is.hail.expr.types.TBaseStruct.loadField(TBaseStruct.scala:215); at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:335); at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:341); at is.hail.annotations.WritableRegionValue.setSelect(WritableRegionValue.scala:38); at is.hail.rvd.OrderedRVD$$anonfun$getKeys$1$$anonfun$apply$9.apply(OrderedRVD.scala:511); at is.hail.rvd.OrderedRVD$$anonfun$getKeys$1$$anonfun$apply$9.apply(OrderedRVD.scala:510); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); at is.hail.rvd.OrderedRVPartitionInfo$.apply(OrderedRVPartitionInfo.scala:30); at is.hail.rvd.OrderedRVD$$anonfun$10.apply(OrderedRVD.scala:536); at is.hail.rvd.OrderedRVD$$anonfun$10.apply(OrderedRVD.scala:534); at is.hail.sparkextras.ContextRDD$$anonfun$cma",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3507:2366,Assert,AssertionError,2366,https://hail.is,https://github.com/hail-is/hail/issues/3507,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"ions: {regions}.'); 111 path = [dataset['url'][cloud][region]; 112 for dataset in datasets[name]['versions']; 113 if all([dataset['version'] == version,; 114 dataset['reference_genome'] == reference_genome])]; --> 115 assert len(path) == 1; 116 path = path[0]; 117 if path.startswith('s3://'):. AssertionError: ; ```. I'm a new Hail user and don't have the full context here, but it seems like there are at least three problems:. 1. An assert failed in production code, which indicates either the presence of a bug or an incorrect use of assert (e.g. using assert to check for value errors).; 2. The assert has no corresponding error message, so the user learns that something has gone wrong but can't easily tell what.; 3. The assert is bare. Bare asserts can get optimized out of code in ways that are difficult to foresee in advance, and are generally deprecated in favor of the `if error_condition: raise AssertionError(...)` pattern (see: https://discuss.python.org/t/stop-ignoring-asserts-when-running-in-optimized-mode/13132). **The Big Picture**. The bare assert pattern is used over 3k times in Hail. To be fair, many of these usages occur in test directories, where they're fine. But they also occur in application code, and often in the dangerous form `assert(expr1, expr2)` which will never fail (because a tuple with two falsy elements is truthy in python). These asserts are never actually getting checked. . Fixing all of them would be a heavy lift. One compromise solution might be to add a bare assert rule to the linter (e.g. https://pypi.org/project/flake8-assert-msg/). This would prevent the introduction of further bare asserts to the codebase, and encourage authors to clean up existing bare asserts on files they touch. The `assert` keyword is an unfortunate language wart that makes it very easy for developers to write error-checking code that is itself incorrect. I'd encourage considering the alternate pattern `if error_condition: raise AssertionError(...)` and gradually",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12952:1661,assert,asserts-when-running-in-optimized-mode,1661,https://hail.is,https://github.com/hail-is/hail/issues/12952,1,['assert'],['asserts-when-running-in-optimized-mode']
Testability,"ip/hail/typecheck/check.py"", line 480, in _typecheck; File ""/tmp/478e9775e51b49afb6828e4a014c7a7a/hail-devel-d7e032a87341.zip/hail/matrixtable.py"", line 1419, in filter_cols; File ""/tmp/478e9775e51b49afb6828e4a014c7a7a/hail-devel-d7e032a87341.zip/hail/matrixtable.py"", line 2241, in _process_joins; File ""/tmp/478e9775e51b49afb6828e4a014c7a7a/hail-devel-d7e032a87341.zip/hail/table.py"", line 1233, in <lambda>; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/tmp/478e9775e51b49afb6828e4a014c7a7a/hail-devel-d7e032a87341.zip/hail/utils/java.py"", line 196, in deco; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 250 in stage 16.0 failed 20 times, most recent failure: Lost task 250.19 in stage 16.0 (TID 5993, exomes2-sw-znhp.c.broad-mpg-gnomad.internal, executor 1): java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$10$$anon$3.next(OrderedRVD.scala:751); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$10$$anon$3.next(OrderedRVD.scala:733); 	at scala.collection.Iterator$$anon$1.next(Iterator.scala:1010); 	at scala.collection.Iterator$$anon$1.head(Iterator.scala:997); 	at is.hail.utils.richUtils.RichIterator$$anon$5.value(RichIterator.scala:18); 	at is.hail.utils.StagingIterator.value(FlipbookIterator.scala:47); 	at is.hail.utils.FlipbookIterator$$anon$5.value(FlipbookIterator.scala:167); 	at is.hail.utils.FlipbookIterator$$anon$5.isValid(FlipbookIterator.scala:168); 	at is.hail.utils.StagingIterator.isValid(FlipbookIterator.scala:46); 	at is.hail.utils.FlipbookIterator.exhaust(FlipbookIterator.scala:110); 	at is.hail.utils.FlipbookIterator$$anon$6.advance(FlipbookIterator.scala:176); 	at is.hail.utils.FlipbookIterator.staircased(FlipbookIterator.scala:186); 	at is.hail.annotations.OrderedRVIterator.staircase(OrderedRVIterator.scala:18); 	at is.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3235:1674,assert,assert,1674,https://hail.is,https://github.com/hail-is/hail/issues/3235,1,['assert'],['assert']
Testability,"iption=""Phred-scaled p-value using Fisher's exact test to detect strand bias"">; ##INFO=<ID=InbreedingCoeff,Number=1,Type=Float,Description=""Inbreeding coefficient as estimated from the genotype likelihoods per-sample when compared against the Hardy-Weinberg expectation"">; ##INFO=<ID=MLEAC,Number=A,Type=Integer,Description=""Maximum likelihood expectation (MLE) for the allele counts (not necessarily the same as the AC), for each ALT allele, in the same order as listed"">; ##INFO=<ID=MLEAF,Number=A,Type=Float,Description=""Maximum likelihood expectation (MLE) for the allele frequency (not necessarily the same as the AF), for each ALT allele, in the same order as listed"">; ##INFO=<ID=MQ,Number=1,Type=Float,Description=""RMS Mapping Quality"">; ##INFO=<ID=MQRankSum,Number=1,Type=Float,Description=""Z-score From Wilcoxon rank sum test of Alt vs. Ref read mapping qualities"">; ##INFO=<ID=QD,Number=1,Type=Float,Description=""Variant Confidence/Quality by Depth"">; ##INFO=<ID=RAW_MQ,Number=1,Type=Float,Description=""Raw data for RMS Mapping Quality"">; ##INFO=<ID=ReadPosRankSum,Number=1,Type=Float,Description=""Z-score from Wilcoxon rank sum test of Alt vs. Ref read position bias"">; ##INFO=<ID=SOR,Number=1,Type=Float,Description=""Symmetric Odds Ratio of 2x2 contingency table to detect strand bias"">; ##INFO=<ID=TYPE,Number=A,Type=String,Description=""The type of allele, either snp, mnp, ins, del, or complex."">; ##INFO=<ID=LEN,Number=A,Type=Integer,Description=""allele length"">; ##INFO=<ID=VCFALLELICPRIMITIVE,Number=0,Type=Flag,Description=""The allele was parsed using vcfallelicprimitives."">; ##INFO=<ID=TENX,Number=0,Type=Flag,Description=""called by 10X"">; ##INFO=<ID=POSTHPC,Number=.,Type=Integer,Description=""Postvariant homopolymer count"">; ##INFO=<ID=POSTHPB,Number=.,Type=Character,Description=""Postvariant homopolymer base"">; ##INFO=<ID=MUMAP_REF,Number=1,Type=Float,Description=""Mean mapping score of ref allele"">; ##INFO=<ID=MUMAP_ALT,Number=.,Type=Float,Description=""Mean mapping scores o",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8469:9172,test,test,9172,https://hail.is,https://github.com/hail-is/hail/issues/8469,1,['test'],['test']
Testability,"irect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li>[SECURITY] Fix Zip Slip Vulnerability; by <a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li>GITHUB-2807 - Failsafe buildStackTrace by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2808"">cbeust/testng#2808</a></li>; <li>Prevent overlogging of debug msgs in Graph impl by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2813"">cbeust/testng#2813</a></li>; <li>Streamline dataprovider invoking in abstract classes by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2814"">cbeust/testng#2814</a></li>; <li>Streamline TestResult due to expectedExceptions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2815"">cbeust/testng#2815</a></li>; <li>Unexpected test runs count with retry analyzer by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2816"">cbeust/testng#2816</a></li>; <li>Make PackageUtils compliant with JPMS by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2817"">cbeust/testng#2817</a></li>; <li>Ability to retry a data provider during failures by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2820"">cbeust/testng#2820</a></li>; <li>Refactoring by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:2554,test,testng,2554,https://hail.is,https://github.com/hail-is/hail/pull/12665,3,"['Test', 'test']","['TestResult', 'testng']"
Testability,"irectory '/home/edmund/.local/src/hail/hail'; # # If hailtop.aiotools.copy gives you trouble:; # gcloud storage cp -r src/test/resources/\* gs://hail-test-ezlis/edmund/hail-test-resources/test/resources/; # gcloud storage cp -r python/hail/docs/data/\* gs://hail-test-ezlis/edmund/hail-test-resources/doctest/data/; python3 -m hailtop.aiotools.copy -vvv 'null' '[\; {""from"":""src/test/resources"",""to"":""gs://hail-test-ezlis/edmund/hail-test-resources/test/resources/""},\; {""from"":""python/hail/docs/data"",""to"":""gs://hail-test-ezlis/edmund/hail-test-resources/doctest/data/""}\; ]' --timeout 600; Traceback (most recent call last):; File ""/home/edmund/.pyenv/versions/3.9.17/lib/python3.9/runpy.py"", line 197, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""/home/edmund/.pyenv/versions/3.9.17/lib/python3.9/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/home/edmund/.local/src/hail/hail/python/hailtop/aiotools/copy.py"", line 211, in <module>; asyncio.run(main()); File ""/home/edmund/.pyenv/versions/3.9.17/lib/python3.9/asyncio/runners.py"", line 44, in run; return loop.run_until_complete(main); File ""uvloop/loop.pyx"", line 1517, in uvloop.loop.Loop.run_until_complete; File ""/home/edmund/.local/src/hail/hail/python/hailtop/aiotools/copy.py"", line 182, in main; files = json.loads(args.files); File ""/home/edmund/.pyenv/versions/3.9.17/lib/python3.9/json/__init__.py"", line 346, in loads; return _default_decoder.decode(s); File ""/home/edmund/.pyenv/versions/3.9.17/lib/python3.9/json/decoder.py"", line 337, in decode; obj, end = self.raw_decode(s, idx=_w(s, 0).end()); File ""/home/edmund/.pyenv/versions/3.9.17/lib/python3.9/json/decoder.py"", line 355, in raw_decode; raise JSONDecodeError(""Expecting value"", s, err.value) from None; json.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1); make: *** [Makefile:355: upload-remote-test-resources] Error 1; make: Leaving directory '/home/edmund/.local/src/hail/hail'; ```; What am I missing?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14138#issuecomment-1887744163:2035,test,test-resources,2035,https://hail.is,https://github.com/hail-is/hail/pull/14138#issuecomment-1887744163,1,['test'],['test-resources']
Testability,"irements.txt --output-file=/tmp/tmp.aWUFJ1BMnP; ../check_pip_requirements.sh: line 13: pip-compile: command not found; ```. While I do have pip-compile installed. ```sh ; pip-compile --help; Usage: pip-compile [OPTIONS] [SRC_FILES]... Compiles requirements.txt from requirements.in, pyproject.toml, setup.cfg,; or setup.py specs. Options:; ```. Note that `make clean` did not solve the issue. see logs attached. ### Version. 0.2.120. ### Relevant log output. ```shell; BUILD SUCCESSFUL in 2m 46s; 4 actionable tasks: 4 executed; cp -f build/libs/hail-all-spark.jar python/hail/backend/hail-all-spark.jar; rm -rf build/deploy; mkdir -p build/deploy; mkdir -p build/deploy/src; cp ../README.md build/deploy/; rsync -r \; --exclude '.eggs/' \; --exclude '.pytest_cache/' \; --exclude '__pycache__/' \; --exclude 'benchmark_hail/' \; --exclude '.mypy_cache/' \; --exclude 'docs/' \; --exclude 'dist/' \; --exclude 'test/' \; --exclude '*.log' \; python/ build/deploy/; # Clear the bdist build cache before building the wheel; cd build/deploy; rm -rf build; python3 setup.py -q sdist bdist_wheel; /usr/lib64/python3.8/distutils/dist.py:274: UserWarning: Unknown distribution option: 'long_description_content_type'; warnings.warn(msg); installing to build/bdist.linux-x86_64/wheel; creating build/bdist.linux-x86_64/wheel/hail-0.2.120.dist-info/WHEEL; creating 'dist/hail-0.2.120-py3-none-any.whl' and adding 'build/bdist.linux-x86_64/wheel' to it; adding 'hail/__init__.py'; adding 'hail/builtin_references.py'; adding 'hail/conftest.py'; adding 'hail/context.py'; adding 'hail/hail_logging.py'; adding 'hail/hail_pip_version'; adding 'hail/hail_revision'; adding 'hail/hail_version'; adding 'hail/matrixtable.py'; adding 'hail/table.py'; adding 'hail/backend/__init__.py'; adding 'hail/backend/backend.py'; adding 'hail/backend/hail-all-spark.jar'; adding 'hail/backend/local_backend.py'; adding 'hail/backend/py4j_backend.py'; adding 'hail/backend/service_backend.py'; adding 'hail/backend/spark_backend",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13445:1358,log,log,1358,https://hail.is,https://github.com/hail-is/hail/issues/13445,1,['log'],['log']
Testability,"irst contribution in <a href=""https://redirect.github.com/samtools/htsjdk/pull/1674"">samtools/htsjdk#1674</a></li>; <li><a href=""https://github.com/omicsorama""><code>@​omicsorama</code></a> made their first contribution in <a href=""https://redirect.github.com/samtools/htsjdk/pull/1635"">samtools/htsjdk#1635</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/samtools/htsjdk/compare/3.0.5...4.0.0"">https://github.com/samtools/htsjdk/compare/3.0.5...4.0.0</a></p>; <h2>3.0.5</h2>; <h2>The last gasp of Java 8</h2>; <p>This release includes very minor new features as well as a bug fix. It is mostly notable because it is intended to be the last release supporting Java 8. Future releases will target Java 17.</p>; <h2>What's Changed</h2>; <ul>; <li>Update commons-compress to close vulnerabilities by <a href=""https://github.com/lbergelson""><code>@​lbergelson</code></a> in <a href=""https://redirect.github.com/samtools/htsjdk/pull/1639"">samtools/htsjdk#1639</a></li>; <li>Removing scala test infrastructure by <a href=""https://github.com/lbergelson""><code>@​lbergelson</code></a> in <a href=""https://redirect.github.com/samtools/htsjdk/pull/1640"">samtools/htsjdk#1640</a></li>; <li>Adding Cigar.fromCigarString() by <a href=""https://github.com/lbergelson""><code>@​lbergelson</code></a> in <a href=""https://redirect.github.com/samtools/htsjdk/pull/1647"">samtools/htsjdk#1647</a></li>; <li>Updating gradle to 7.6 by <a href=""https://github.com/lbergelson""><code>@​lbergelson</code></a> in <a href=""https://redirect.github.com/samtools/htsjdk/pull/1650"">samtools/htsjdk#1650</a></li>; <li>Expose the ability to encode a Genotoype into a GT field by <a href=""https://github.com/lbergelson""><code>@​lbergelson</code></a> in <a href=""https://redirect.github.com/samtools/htsjdk/pull/1648"">samtools/htsjdk#1648</a></li>; <li>Fix typos in README by <a href=""https://github.com/Manice18""><code>@​Manice18</code></a> in <a href=""https://redirect.github.com/samtools/htsjdk/pull/16",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13576:4486,test,test,4486,https://hail.is,https://github.com/hail-is/hail/pull/13576,1,['test'],['test']
Testability,"iruid_376,array<int64>)))),MatrixSpecWriter(gs://danking/workshop-test/1kg.mt,Matrix{global:Struct{},col_key:[s],col:Struct{s:String},row_key:[[locus,alleles]],row:Struct{locus:Locus(GRCh37),alleles:Array[String],rsid:String,qual:Float64,filters:Set[String],info:Struct{AC:Array[Int32],AF:Array[Float64],AN:Int32,BaseQRankSum:Float64,ClippingRankSum:Float64,DP:Int32,DS:Boolean,FS:Float64,HaplotypeScore:Float64,InbreedingCoeff:Float64,MLEAC:Array[Int32],MLEAF:Array[Float64],MQ:Float64,MQ0:Int32,MQRankSum:Float64,QD:Float64,ReadPosRankSum:Float64,set:String}},entry:Struct{GT:Call,AD:Array[Int32],DP:Int32,GQ:Int32,PL:Array[Int32]}},rows/rows,globals/rows,cols/rows,entries/rows,references,true))))))))),RelationalWriter(gs://danking/workshop-test/1kg.mt/entries,false,None)),RelationalWriter(gs://danking/workshop-test/1kg.mt/rows,false,None)),RelationalWriter(gs://danking/workshop-test/1kg.mt/cols,false,None)),RelationalWriter(gs://danking/workshop-test/1kg.mt/globals,false,None)),RelationalWriter(gs://danking/workshop-test/1kg.mt,true,Some((references,Set(GRCh37)))))); 	at scala.collection.MapLike$class.default(MapLike.scala:228); 	at scala.collection.AbstractMap.default(Map.scala:59); 	at scala.collection.mutable.HashMap.apply(HashMap.scala:65); 	at is.hail.expr.ir.Memo.lookup(RefEquality.scala:38); 	at is.hail.expr.ir.Memo.lookup(RefEquality.scala:37); 	at is.hail.expr.ir.Memo.apply(RefEquality.scala:40); 	at is.hail.expr.ir.Requiredness.lookup(Requiredness.scala:41); 	at is.hail.expr.ir.Requiredness$$anonfun$analyzeIR$16.apply(Requiredness.scala:616); 	at is.hail.expr.ir.Requiredness$$anonfun$analyzeIR$16.apply(Requiredness.scala:615); 	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); 	at is.hail.expr.ir.Requiredness.analyzeIR(Requiredness.scala:615); 	at is.hail.expr.ir.Requiredness.analyze(Requiredness.scala:265); 	at is.hail.expr.ir.Requiredness.run(Requiredness.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:18972,test,test,18972,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['test'],['test']
Testability,"is only one IP address, and only one place to open connections. The load-balancer doesn't have the information to actually load-balance once we have a functioning connection pool. This can lead to really unbalanced scenarios when preemptible pods come and go. This leads to our second goal: instead of routing all requests through kube-proxy, use Kubernetes Headless Services to expose all pod IPs underlying a Service so that our proxies can properly load-balance across persistent connections. ## Solution. This PR addresses the two goals outlined above and does so through using Envoy, a load-balancer/proxy that is well-suited to this sort of highly-dynamic cluster configuration. Envoy does not have the constraint that all upstream services must be available at start-time, and has a very convenient API for updating the cluster configuration without the need for restarting the process or dropping traffic. This makes regularly updating the cluster configuration whenever new test namespaces are created relatively straightforward and non-disruptive to traffic in other namespaces. The high-level approach is as follows:. 1. Envoy-based gateways and internal-gateways will load their routing configuration from a Kubernetes ConfigMap, which they watch for changes and reconcile their configuration when the ConfigMap changes. The ConfigMap can be populated with a manual deploy and is populated from the beginning with production routes (i.e. batch.hail.is gets routed to batch.default); 2. When running CI, CI will regularly update the ConfigMap with additional routes based on which internal namespaces (dev and PR) are currently active. This requires relatively small changes to CI to track active namespaces but overall is a pretty small change. Note that this does not introduce a dependency on CI to support production traffic, only development traffic.; 3. Deployments that run more than 1 replica (but really can be all of them) are run behind Headless Services, which expose the underl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12095:4017,test,test,4017,https://hail.is,https://github.com/hail-is/hail/pull/12095,1,['test'],['test']
Testability,"is project.</h3>. #### Changes included in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - ci/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **581/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.9 | Denial of Service (DoS) <br/>[SNYK-PYTHON-CRYPTOGRAPHY-5663682](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-5663682) | `cryptography:` <br> `40.0.2 -> 41.0.0` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjOTM3MTIxYy1lZTM3LTQ2ZmMtYTcxMC04MWY4YzdhZmUyN2IiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImM5MzcxMjFjLWVlMzctNDZmYy1hNzEwLTgxZjhjN2FmZTI3YiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13136:1234,test,tested,1234,https://hail.is,https://github.com/hail-is/hail/pull/13136,1,['test'],['tested']
Testability,"is project.</h3>. #### Changes included in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - ci/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **611/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 6.5 | Denial of Service (DoS) <br/>[SNYK-PYTHON-CRYPTOGRAPHY-5914629](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-5914629) | `cryptography:` <br> `41.0.3 -> 41.0.4` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiN2QwMTZlZS0zODA0LTQwMjItOWE0Yi01MzExNjZhNjBjMWQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI3ZDAxNmVlLTM4MDQtNDAyMi05YTRiLTUzMTE2NmE2MGMxZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13698:1234,test,tested,1234,https://hail.is,https://github.com/hail-is/hail/pull/13698,1,['test'],['tested']
Testability,"is project.</h3>. #### Changes included in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - hail/python/pinned-requirements.txt. <details>; <summary>⚠️ <b>Warning</b></summary>. ```; msal-extensions 1.0.0 requires portalocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png ""high severity"") | **661/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5 | Improper Neutralization of Special Elements in Data Query Logic <br/>[SNYK-PYTHON-MSAL-5904284](https://snyk.io/vuln/SNYK-PYTHON-MSAL-5904284) | `msal:` <br> `1.24.0 -> 1.24.1` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhYjlhNGM2ZS0xOTg1LTRmYTctYjg0OC0zOTNmOWE3MGJkMWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFiOWE0YzZlLTE5ODUtNGZhNy1i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13753:1197,Log,Logic,1197,https://hail.is,https://github.com/hail-is/hail/pull/13753,1,['Log'],['Logic']
Testability,"is required.</p>; <h1>Highlights of this release</h1>; <ul>; <li>A new dedicated datasets submodule (<code>scipy.datasets</code>) has been added, and is; now preferred over usage of <code>scipy.misc</code> for dataset retrieval.</li>; <li>A new <code>scipy.interpolate.make_smoothing_spline</code> function was added. This; function constructs a smoothing cubic spline from noisy data, using the; generalized cross-validation (GCV) criterion to find the tradeoff between; smoothness and proximity to data points.</li>; <li><code>scipy.stats</code> has three new distributions, two new hypothesis tests, three; new sample statistics, a class for greater control over calculations; involving covariance matrices, and many other enhancements.</li>; </ul>; <h1>New features</h1>; <h1><code>scipy.datasets</code> introduction</h1>; <ul>; <li>A new dedicated <code>datasets</code> submodule has been added. The submodules; is meant for datasets that are relevant to other SciPy submodules ands; content (tutorials, examples, tests), as well as contain a curated; set of datasets that are of wider interest. As of this release, all; the datasets from <code>scipy.misc</code> have been added to <code>scipy.datasets</code>; (and deprecated in <code>scipy.misc</code>).</li>; <li>The submodule is based on <a href=""https://www.fatiando.org/pooch/latest/"">Pooch</a>; (a new optional dependency for SciPy), a Python package to simplify fetching; data files. This move will, in a subsequent release, facilitate SciPy; to trim down the sdist/wheel sizes, by decoupling the data files and; moving them out of the SciPy repository, hosting them externally and</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/scipy/scipy/commit/dde50595862a4f9cede24b5d1c86935c30f1f88a""><code>dde5059</code></a> REL: 1.10.0 final [wheel build]</li>; <li><a href=""https://github.com/scipy/scipy/commit/7856f281b016",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13227:2193,test,tests,2193,https://hail.is,https://github.com/hail-is/hail/pull/13227,1,['test'],['tests']
Testability,"is the same as using Python to generate the correct string to output. I'm not sure that I like this better. One of the advantages of writing commands as templates is they are reusable. In the latter case, the strings are reusable if they are written as `.format()` templates instead of `f-strings`. So maybe it's approximately the same, but there's an extra step to define the inputs to `format`. I tried hacking the Python AST to not have to refer to the object, but I think it's going to be difficult to get the AST parsing exactly right and not have too many implicit rules within our language. I also considered writing a DSL, but found that it's hard to specify the part with the `shapeit_output` in a DSL. ```python3; from pyapi import Pipeline, resource_group; p = Pipeline(). input_bfile = p.new_resource_group(bed=""gs://jigold/input_root.bed"",; bim=""gs://jigold/input_root.bim"",; fam=""gs://jigold/input_root.fam""). def bfile(root):; return resource_group(root, lambda x: {""bed"": x + "".bed"", ""bim"": x + "".bim"", ""fam"": x + "".fam""}). subset = (p.new_task(); .label('subset')); subset = subset; .command(f'plink --bfile {input_bfile} --make-bed {bfile(subset.tmp1)}'); .command(""awk '{print $1, $2}'"" +; subset.tmp1.fam +; "" | sort | uniq -c | awk '{ if ($1 != 1) print $2, $3 }' > "" +; subset.tmp2); .command(f""plink --bfile {input_bfile} --remove {subset.tmp2} --make-bed {bfile(subset.ofile)}"")). def shapeit_output(root):; return resource_group(root, lambda x: {""haps"": x + "".haps"", ""log"": x + "".log""}). for contig in [str(x) for x in range(1, 4)]:; shapeit = (p.new_task(); 		.label('shapeit')); shapeit = (shapeit; 		.command(f'shapeit --bed-file {subset.ofile} --chr {contig} --out {shapeit_output(shapeit.ofile)}')). merger = (p.new_task(); .label('merge')); merger = (merger; .command('cat {files} >> {ofile}'.format(files="" "".join([task.ofile.haps for task in p.select_tasks(""shapeit"")]), ofile=merger.ofile)). p.write_output(merger.ofile, ""gs://jigold/final_output.txt""); p.run(); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4937#issuecomment-451295662:1846,log,log,1846,https://hail.is,https://github.com/hail-is/hail/pull/4937#issuecomment-451295662,2,['log'],['log']
Testability,is.hail.check.GenProp1.apply(Prop.scala:26); 	at is.hail.check.Prop.check(Prop.scala:19); 	at is.hail.expr.ir.OrderingSuite.testBinarySearchOnDict(OrderingSuite.scala:357); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.getKey$1(OrderingSuite.scala:345); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1410,Test,TestRunner,1410,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['Test'],['TestRunner']
Testability,is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:430); at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136); at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:658); at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:219); at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50); at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:923); at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:192); at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128); at java.util.ArrayList.forEach(ArrayList.java:1259); at org.testng.TestRunner.privateRun(TestRunner.java:808); at org.testng.TestRunner.run(TestRunner.java:603); at org.testng.SuiteRunner.runTest(SuiteRunner.java:429); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383); at org.testng.SuiteRunner.run(SuiteRunner.java:326); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249); at org.testng.TestNG.runSuitesLocally(TestNG.java:1169); at org.testng.TestNG.runSuites(TestNG.java:1092); at org.testng.TestNG.run(TestNG.java:1060); at org.testng.TestNG.privateMain(TestNG.java:1403); at org.testng.TestNG.main(TestNG.java:1367); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827#issuecomment-1957725547:1671,Test,TestMethodWorker,1671,https://hail.is,https://github.com/hail-is/hail/issues/13827#issuecomment-1957725547,35,"['Test', 'test']","['TestMethodWorker', 'TestNG', 'TestRunner', 'testng']"
Testability,is.hail.rvd.OrderedRVD.takeAsBytes(OrderedRVD.scala:21); 	at is.hail.rvd.RVD$class.take(RVD.scala:247); 	at is.hail.rvd.OrderedRVD.take(OrderedRVD.scala:21); 	at is.hail.table.Table.take(Table.scala:990); 	at is.hail.table.Table.showString(Table.scala:1031); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748)java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.next(OrderedRVD.scala:926); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.next(OrderedRVD.scala:908); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); 	at is.hail.utils.package$.getIteratorSizeWithMaxN(package.scala:349); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:433); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:433); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1$$anonfun$apply$34.apply(ContextRDD.scala:458); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1$$anonfun$apply$34.apply(ContextRDD.scala:458); 	at is.hail.utils.package$.using(package.scala:577); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:458); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:458); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3516:6278,Assert,AssertionError,6278,https://hail.is,https://github.com/hail-is/hail/issues/3516,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"ise self._exception; /usr/lib/python3.9/concurrent/futures/thread.py:58: in run; result = self.fn(*self.args, **self.kwargs); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . > thread_pool, lambda: fun(*args, **kwargs)); E OSError: [Errno 39] Directory not empty: '/tmp/JnQ2m'. /usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py:163: OSError. During handling of the above exception, another exception occurred:. self = <hailtop.aiotools.local_fs.LocalAsyncFS object at 0x7f264046f700>; sema = <asyncio.locks.Semaphore object at 0x7f263d7a61c0 [unlocked, value:50]>; url = '/tmp/JnQ2m'; listener = <function LocalAsyncFS.rmtree.<locals>.<lambda> at 0x7f263e041820>. async def rmtree(self,; sema: Optional[asyncio.Semaphore],; url: str,; listener: Optional[Callable[[int], None]] = None) -> None:; path = self._get_path(url); if listener is None:; listener = lambda _: None; if sema is None:; sema = asyncio.Semaphore(50); ; async def rm_file(path: str):; assert listener is not None; listener(1); await self.remove(path); listener(-1); ; async def rm_dir(pool: OnlineBoundedGather2,; contents_tasks: List[asyncio.Task],; path: str):; assert listener is not None; listener(1); if contents_tasks:; await pool.wait(contents_tasks); try:; await self.rmdir(path); listener(-1); finally:; def raise_them_all(exceptions: List[BaseException]):; if exceptions:; try:; raise exceptions[0]; finally:; raise_them_all(exceptions[1:]); excs = [exc; for t in contents_tasks; for exc in [t.exception()]; if exc is not None]; raise_them_all(excs); ; async with OnlineBoundedGather2(sema) as pool:; contents_tasks_by_dir: Dict[str, List[asyncio.Task]] = {}; for dirpath, dirnames, filenames in os.walk(path, topdown=False):; def rm_dir_or_symlink(path: str):; if os.path.islink(path):; return pool.call(rm_file, path); return pool.call(rm_dir, pool, contents_tasks_by_dir.get(path, []), path); ; contents_tasks = [; pool.call(rm_file, os.path.join(dirpath, filename)); for fil",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13361:7104,assert,assert,7104,https://hail.is,https://github.com/hail-is/hail/issues/13361,1,['assert'],['assert']
Testability,"ist</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11618"">#11618</a> [component: tests] Reduce Tornado imports</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11628"">#11628</a> [component: docs] Correct path in dev guide server instructions</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11652"">#11652</a> [component: build] Update bokehjs' dependencies</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11668"">#11668</a> [component: docs] Add information about mathjax bundle</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11681"">#11681</a> [NO SQUASH] Batch of 3.0 -&gt; 2.4 backports</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11712"">#11712</a> [component: tests] Upgrade baselines to Chrome 94</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11722"">#11722</a> [component: tests] Update visual baselines on MacOS</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11724"">#11724</a> [NO SQUASH] More 3.0 -&gt; 2.4 backports</li>; </ul>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/bokeh/bokeh/commit/ad33147f5762af8830e68144419e31e46a024caf""><code>ad33147</code></a> Deployment updates for release 2.4.2</li>; <li><a href=""https://github.com/bokeh/bokeh/commit/17578f3a7fce22af09cf105c67769890dfdb5705""><code>17578f3</code></a> also update latest=2.4.2</li>; <li><a href=""https://github.com/bokeh/bokeh/commit/e3e182a740b1a88f6b13d83656df296e02616506""><code>e3e182a</code></a> Merge deployment staging branch staging-2.4.2rc1</li>; <li><a href=""https://github.com/bokeh/bokeh/commit/6bcda8a0b0a6ff9c4449abb40082b63c3ea7e3e4""><code>6bcda8a</code></a> Deployment updates for release 2.4.2rc1</li>; <li><a href=""https://github.com/bokeh/boke",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11540:6407,test,tests,6407,https://hail.is,https://github.com/hail-is/hail/pull/11540,1,['test'],['tests']
Testability,it was failing on an assertion of num_partitions and i think a table with 0 rows has 0 partitions,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4216#issuecomment-416346870:21,assert,assertion,21,https://hail.is,https://github.com/hail-is/hail/issues/4216#issuecomment-416346870,1,['assert'],['assertion']
Testability,it's actually tested by the same `assertEvalsTo`. nice.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5113#issuecomment-453836059:14,test,tested,14,https://hail.is,https://github.com/hail-is/hail/pull/5113#issuecomment-453836059,2,"['assert', 'test']","['assertEvalsTo', 'tested']"
Testability,it's not tested,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3310#issuecomment-379887987:9,test,tested,9,https://hail.is,https://github.com/hail-is/hail/pull/3310#issuecomment-379887987,1,['test'],['tested']
Testability,"it's working, but there are still a number of issues to address. 1. The IndexReader is initialized for each partition (via a path that is passed as a String). This means that the decoder in the IndexReader is compiled on the workers. To make this work, I had to comment out the assertion that FunctionBuilder can only emit code on the master node. If we create the indexReaders on the master node, then we'll have to make them serializable and I was having trouble getting that to work with the decoder and the region in the reader. I could make every problematic field `@transient`, but I'm not sure that actually solves the problem. 2. The underlying iterator that is used in 2 / 3 of the new BgenRecordIterators use iterators from the IndexReader. However, there is no way to specify when to close them. Is `close()` called automatically on the IndexReader when the partition is garbage collected?. 3. The way I wrote this was to make the table that is being joined with the BgenRDD when filtering variants to contain duplicate values if the same key appears in multiple partitions on the BGEN side. This means that the iterator is going through each index in the partition and comparing it to the variants in the filter. Therefore, it is `O(nVariants in Partition)` rather than approximately `O(nVariants in Filter in Partition)`. I think this is okay, since I expect iterating through the keys in the index reader is much faster than downstream operations, but it is something to be aware of. 4. My code for checking whether two BGEN files overlap uses `isDisjoint` on intervals. This means that we don't allow files whose endpoints overlap. I think as a first pass this is fine, but I may need to write more complicated code to test whether the files given by the user are compatible. 5. The MatrixImportBGEN IR in Python is currently wrong -- there's no way to pass the requested type. I didn't dig into this yet since it's not used, but it's still on the list of things that need to be fixed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4291:1847,test,test,1847,https://hail.is,https://github.com/hail-is/hail/pull/4291,1,['test'],['test']
Testability,"ite-packages/hailtop/aiocloud/aiogoogle/user_config.py:29: UserWarning: You have specified the GCS requester pays configuration in both your spark-defaults.conf (/Users/dking/miniconda3/lib/python3.10/site-packages/pyspark/conf/spark-defaults.conf) and either an explicit argument or through `hailctl config`. For GCS requester pays configuration, Hail first checks explicit arguments, then `hailctl config`, then spark-defaults.conf.; warnings.warn(; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/Users/dking/miniconda3/lib/python3.10/site-packages/pyspark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Running on Apache Spark version 3.3.3; SparkUI available at http://192.168.1.142:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.125-c4e2880b3279; LOGGING: writing to /Users/dking/projects/hail/hail/hail-20231026-0957-0.2.125-c4e2880b3279.log; --------------------------------------------------------------------------- / 1]; FatalError Traceback (most recent call last); Cell In[1], line 2; 1 import hail as hl; ----> 2 hl.import_vcf('gs://danking/chr*.vcf').count(). File ~/miniconda3/lib/python3.10/site-packages/hail/matrixtable.py:2631, in MatrixTable.count(self); 2618 """"""Count the number of rows and columns in the matrix.; 2619 ; 2620 Examples; (...); 2628 Number of rows, number of cols.; 2629 """"""; 2630 count_ir = ir.MatrixCount(self._mir); -> 2631 return Env.backend().execute(count_ir). File ~/miniconda3/lib/python3.10/site-pac",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13915:2182,log,log,2182,https://hail.is,https://github.com/hail-is/hail/issues/13915,1,['log'],['log']
Testability,"iterWhere`, `map`, and `flatMap` on `FlipbookIterator`, allowing the use of for–comprehensions, and on top of that I defined all the varieties of join. Some of the join methods take `OrderingView` arguments. An `OrderingView` is a small abstraction on top of an `Ordering` which can take one element `a`, copy data (such as key-fields) from `a` if necessary, then later (after `a` might have been destroyed or mutated) compare `a` to other elements using the copied data. The potentially producting (non-distinct assuming) join methods also take a buffer argument, which is anything that can make a copy of an iterator and then iterate over the copy multiple times. To avoid allocating tuples in the output iterators of the join methods, I made `Muple`, which is just a mutable tuple. I turned the existing `JoinedRegionValue` into an alias of `Muple[RegionValue, RegionValue]`. All of this core `FlipbookIterator` and `StagingIterator` behavior has no dependencies on anything else in Hail, so I want to thoroughly test everything at this level, and treat it like a small external iterator library living inside the repo. As such, I think this level should be quite stable going forwards. At the higher level, I lifted all the join methods on `FlipbookIterator` to `OrderedRVIterator`, which is a `Iterator[RegionValue]` together with an `OrderedRVDType`. I think `OrderedRVIterator` should be replaced by something better soon: see future work below. I've replaced the old implementations of `innerJoinDistinct`, `leftJoinDistinct`, and `orderedZipJoin` using the new infrastructure (see OrderedRDD2.scala), which I think is a good example of the kind of simplifications possible. The existing JoinSuite tests also serve as a secondary test of the new code. In future PRs, I intend to:. * Implement all the join varieties on `OrderedRVD` using the `FlipbookIterator` joins defined here.; * Update other uses of `Iterator` to use the `FlipbookIterator` infrastructure, if doing so improves the code ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3016:4463,test,test,4463,https://hail.is,https://github.com/hail-is/hail/pull/3016,1,['test'],['test']
Testability,"ithub-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3""><code>e0c5fc0</code></a> feat: trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce""><code>97e32b6</code></a> fix: allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>)</li>;",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:11426,log,logging,11426,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"ithub.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:1275,log,logging,1275,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"ithub.com/madzak/python-json-logger/commit/c58d7d4660780e3d4872189f9889200917a8930f""><code>c58d7d4</code></a> manifest will now include readme for setup.py long description. tox and</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/03e831488ce55e4aaf886806b2c66082fb8c4027""><code>03e8314</code></a> Removed references to travis</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/e8a8a20e09d66bcce41010f29b37107eafae6ba4""><code>e8a8a20</code></a> fixed python version mapping and typo in tox name</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/d02050343b58d4585145b5f19b0499d01ef9a1d8""><code>d020503</code></a> initial conversion from travis</li>; <li>Additional commits viewable in <a href=""https://github.com/madzak/python-json-logger/compare/v0.1.11...v2.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=python-json-logger&package-manager=pip&previous-version=0.1.11&new-version=2.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reope",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11467:4783,log,logger,4783,https://hail.is,https://github.com/hail-is/hail/pull/11467,1,['log'],['logger']
Testability,"ithub.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; <li>Declares incompatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; </ul>; <h2>pytest-asyncio 0.23.4a2</h2>; <h1>0.23.4 (UNRELEASED)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:5349,test,test,5349,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['test']
Testability,"ithub.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/comments{/number}"",; ""issue_comment_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/comments{/number}"",; ""contents_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contents/{+path}"",; ""compare_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/compare/{base}...{head}"",; ""merges_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/merges"",. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 7030 100 6999 100 31 9306 41 --:--:-- --:--:-- --:--:-- 9319; ""archive_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/{archive_format}{/ref}"",; ""downloads_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/downloads"",; ""issues_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues{/number}"",; ""pulls_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/pulls{/number}"",; ""milestones_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/milestones{/number}"",; ""notifications_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/notifications{?since,all,participating}"",; ""labels_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/labels{/name}"",; ""releases_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/releases{/id}"",; ""deployments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:4765,test,test,4765,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"ithub.com/scipy/scipy) from 1.9.3 to 1.11.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/scipy/scipy/releases"">scipy's releases</a>.</em></p>; <blockquote>; <h1>SciPy 1.11.1 Release Notes</h1>; <p>SciPy <code>1.11.1</code> is a bug-fix release with no new features; compared to <code>1.11.0</code>. In particular, a licensing issue; discovered after the release of <code>1.11.0</code> has been addressed.</p>; <h1>Authors</h1>; <ul>; <li>Name (commits)</li>; <li>h-vetinari (1)</li>; <li>Robert Kern (1)</li>; <li>Ilhan Polat (4)</li>; <li>Tyler Reddy (8)</li>; </ul>; <p>A total of 4 people contributed to this release.; People with a &quot;+&quot; by their names contributed a patch for the first time.; This list of names is automatically generated, and may not be fully complete.</p>; <h1>SciPy 1.11.0 Release Notes</h1>; <p>SciPy <code>1.11.0</code> is the culmination of 6 months of hard work. It contains; many new features, numerous bug-fixes, improved test coverage and better; documentation. There have been a number of deprecations and API changes; in this release, which are documented below. All users are encouraged to; upgrade to this release, as there are a large number of bug-fixes and; optimizations. Before upgrading, we recommend that users check that; their own code does not use deprecated SciPy functionality (to do so,; run your code with <code>python -Wd</code> and check for <code>DeprecationWarning</code> s).; Our development attention will now shift to bug-fix releases on the; 1.11.x branch, and on adding new features on the main branch.</p>; <p>This release requires Python <code>3.9+</code> and NumPy <code>1.21.6</code> or greater.</p>; <p>For running on PyPy, PyPy3 <code>6.0+</code> is required.</p>; <h1>Highlights of this release</h1>; <ul>; <li>Several <code>scipy.sparse</code> array API improvements, including <code>sparse.sparray</code>, a new; public base class distinct from the older <code>sparse.spmatr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13228:1034,test,test,1034,https://hail.is,https://github.com/hail-is/hail/pull/13228,1,['test'],['test']
Testability,itute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.vcf.SplitSuite.SplitTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testD_$eq$eq PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testFlushDouble PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testFilterSamples PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testSame PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.VariantSuite.testVariant PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.gqDpStatsSuite.test PA,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:2519,test,test,2519,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,1,['test'],['test']
Testability,"iveWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/rows/parts/,Some((gs://danking/workshop-test/1kg.mt/index/,+PCStruct{idx:+PInt32})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_376,GetField(Ref(__iruid_376,struct{filePath: str, partitionCounts: int64}),filePath))),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBuff",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:4985,test,test,4985,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601,1,['test'],['test']
Testability,"iveWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/rows/parts/,Some((gs://danking/workshop-test/1kg.mt/index/,+PCStruct{idx:+PInt32})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_465,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_472,GetField(Ref(__iruid_472,struct{filePath: str, partitionCounts: int64}),filePath))),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBuff",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856#issuecomment-756194693:4705,test,test,4705,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-756194693,2,['test'],['test']
Testability,"ix: allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b""><code>a760e02</code></a> feat: add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc""><code>83d9ca8</code></a> feat!: make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300""><code>818213e</code></a> feat: avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf""><code>e1506fa</code></a> fix!: api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881""><code>6fa1773</code></a> feat!: support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/googleapis/python-logging/compare/v1.12.1...v3.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=google-cloud-logging&package-manager=pip&previous-version=1.12.1&new-version=3.0.0)](https://docs.github.com/en/github/managing-security-vulnerab",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:13316,log,logging,13316,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"ization. I found the collection process the most elucidating part of the documentation. My summary of that; process follows:. 1. Packets are sampled on the network interface of a VM. Google claims an average sampling rate of; 1/30. This rate reduces if the VM is under load. This rate is immutable to us. 2. Within an ""aggregation interval"", packets are aggregated into ""records"" which are keyed (my term); by source & destination. There are currently six choices for aggregation interval: 5s, 30s, 1m,; 5m, 10m, and 15m. 3. Records are sampled. The sampling rate is a user configured floating point number (precision; unclear) between 0 and 1. 4. Metadata is optionally added to the records. The metadata captures information about the source; and destination VM such as project id, VM name, zone, region, GKE pod, GKE service, and geographic; information of external parties. The user may elect to receive all metadata, no metadata, or a; specific set of metadata fields. 5. The records are written to Google Cloud Logging. The pricing of VPC Flow Logs is described at the [network pricing page](https://cloud.google.com/vpc/network-pricing#network-telemetry). Notice that, if logs are only sent to Cloud Logging (not to BigQuery, Pub/Sub, or Cloud Storage):. > If you store your logs in Cloud Logging, logs generation charges are waived, and only Logging charges apply. I believe in this phrase ""logs generation charges"" refers to *VPC Flow logs* generation charges. The Google Cloud Logging [pricing page](https://cloud.google.com/stackdriver/pricing#google-clouds-operations-suite-pricing) indicates that, after 50 GiB of free logs, the user is charged 0.50 USD per GiB of logs. Storage is free for thirty days and 0.01 USD per GiB for each additional day. We can calculate the cost of our logs as follows. Refer to the [definition of the record format](https://cloud.google.com/vpc/docs/flow-logs#record_format) for details. ```python3; ip_string = len(""123.123.123.123""); ip_connection = 4 + ip",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12883:1509,Log,Logging,1509,https://hail.is,https://github.com/hail-is/hail/pull/12883,1,['Log'],['Logging']
Testability,java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[6]([Ljava.lang.String;@4c09f4c5)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[6]([Ljava.lang.String;@4c09f4c5) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[7]([Ljava.lang.String;@67a910a4)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[7]([Ljava.lang.String;@67a910a4) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Te,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:5019,test,test,5019,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[7]([Ljava.lang.String;@67a910a4)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[7]([Ljava.lang.String;@67a910a4) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: ,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:5295,test,test,5295,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.expr.types.physical.PCanonicalBaseStruct.constructAtAddress(PCanonicalBaseStruct.scala:213),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8099#issuecomment-586546086:10,Assert,AssertionError,10,https://hail.is,https://github.com/hail-is/hail/pull/8099#issuecomment-586546086,3,"['Assert', 'assert']","['AssertionError', 'assert', 'assertion']"
Testability,java.lang.Thread.run(Thread.java:745)org.apache.spark.SparkException: Task failed while writing rows; 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer.writeRows(WriterContainer.scala:261); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745)java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.methods.VEP$$anonfun$16$$anon$1.hasNext(VEP.scala:398); 	at is.hail.sparkextras.OrderedRDD$$anonfun$apply$7$$anon$2.hasNext(OrderedRDD.scala:211); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply$mcV$sp(WriterContainer.scala:253); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply(WriterContainer.scala:252); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply(WriterContainer.scala:252); 	at org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1348); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer.writeRows(WriterContainer.scala:258); 	,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822:11026,Assert,AssertionError,11026,https://hail.is,https://github.com/hail-is/hail/issues/1822,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748). java.lang.AssertionError: assertion failed: type mismatch:; name: global; actual: Struct{bn:Struct{n_populations:Int32,n_samples:Int32,n_variants:Int32,n_partitions:Int32,pop_dist:Array[Int32],fst:Array[Float64],mixture:Boolean},__uid_882:Array[Struct{sample_idx:Int32,pop:Int32,s:String}]}; expect: Struct{bn:Struct{n_populations:Int32,n_samples:Int32,n_variants:Int32,n_partitions:Int32,pop_dist:Array[Int32],fst:Array[Float64],mixture:Boolean},__cols:Array[Struct{sample_idx:Int32,pop:Int32,s:String}]}; 	at scala.Predef$.assert(Predef.scala:170); 	at is.hail.expr.ir.TypeCheck$._apply(TypeCheck.scala:60); 	at is.hail.expr.ir.TypeCheck$.is$hail$expr$ir$TypeCheck$$check$1(TypeCheck.scala:22); 	at is.hail.expr.ir.TypeCheck$._apply(TypeCheck.scala:237); 	at is.hail.expr.ir.TypeCheck$.is$hail$expr$ir$TypeCheck$$check$1(TypeCheck.scala:22); 	at is.hail.expr.ir.TypeCheck$$anonfun$_apply$18.apply(TypeCheck.scala:213); 	at is.hail.expr.ir.TypeCheck$$anonfun$_apply$18.apply(TypeCheck.scala:213); 	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); 	at is.hail.expr.ir.TypeCheck$._apply(TypeCheck.scala:213); 	at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:14); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:45); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:32); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:77); 	at is.hail.expr.ir.TableMapGlobals$$anonfun$38.apply(TableIR.scala:856); 	at is.hail.expr.ir.Tabl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5212:5609,assert,assert,5609,https://hail.is,https://github.com/hail-is/hail/issues/5212,1,['assert'],['assert']
Testability,"jdk/issues/1678"">#1678</a>)</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/20334af402b044b86f80f152a27a13b0e3376536""><code>20334af</code></a> Move the EnaRefServiceTest to the externalAPI test group (<a href=""https://redirect.github.com/samtools/htsjdk/issues/1675"">#1675</a>)</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/75eac4674a78cddde9fc9ff6a0a18f6d4ba1f798""><code>75eac46</code></a> add SINGULAR platform to read group (<a href=""https://redirect.github.com/samtools/htsjdk/issues/1635"">#1635</a>)</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/d486d53aac2cd52ac53d1c633ac89789871815a8""><code>d486d53</code></a> Zero len array (<a href=""https://redirect.github.com/samtools/htsjdk/issues/1674"">#1674</a>)</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/44817ee7182bd65e17a6215410f919a8b3e96a94""><code>44817ee</code></a> Update org.json</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/500cffda9c511d88a736bcbb91d3f10259b967fb""><code>500cffd</code></a> Test fix</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/662c8274fad42e001e63e2b9c9c2066714b42a0d""><code>662c827</code></a> Test fix</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/e58f8a2250fc47afecfa38611b0f51b02ac6b933""><code>e58f8a2</code></a> Minor code cleanup</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/b1085dab46bc220b1f6d3eb92fcbe73818ade3eb""><code>b1085da</code></a> Test fixes</li>; <li>Additional commits viewable in <a href=""https://github.com/samtools/htsjdk/compare/3.0.4...4.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.github.samtools:htsjdk&package-manager=gradle&previous-version=3.0.4&new-version=4.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13576:7606,Test,Test,7606,https://hail.is,https://github.com/hail-is/hail/pull/13576,1,['Test'],['Test']
Testability,"job-41-39d17b; Name: batch-3-job-41-39d17b; Namespace: batch-pods; Priority: 500000; PriorityClassName: user; Node: gke-vdc-preemptible-pool-9c7148b2-1f89/10.128.0.101; Start Time: Fri, 12 Jul 2019 13:17:15 -0400; Labels: app=batch-job; batch_id=3; hail.is/batch-instance=cd50b95a89914efb897965a5e982a29d; job_id=41; task=main; user=ci; uuid=f53f127847864f1cbf7d4bdc911a6646; Annotations: <none>; Status: Pending; IP: ; Containers:; main:; Container ID: ; Image: gcr.io/hail-vdc/ci-intermediate:oyyg6y2um4kx; Image ID: ; Port: <none>; Host Port: <none>; Command:; bash; -c; set -e; gcloud -q auth activate-service-account --key-file=/test-gsa-key/privateKeyData; gsutil -m cp -r /test/resources/* gs://hail-test-1c9nm/sj0nb47zqys1/pipeline/input/; State: Waiting; Reason: ContainerCreating; Ready: False; Restart Count: 0; Requests:; cpu: 100m; memory: 500M; Environment:; POD_IP: (v1:status.podIP); POD_NAME: batch-3-job-41-39d17b (v1:metadata.name); Mounts:; /gsa-key from gsa-key (rw); /test-gsa-key from test-gsa-key (rw); /var/run/secrets/kubernetes.io/serviceaccount from default-token-8h99c (ro); Conditions:; Type Status; Initialized True ; Ready False ; ContainersReady False ; PodScheduled True ; Volumes:; test-gsa-key:; Type: Secret (a volume populated by a Secret); SecretName: test-gsa-key; Optional: false; gsa-key:; Type: Secret (a volume populated by a Secret); SecretName: ci-gsa-key; Optional: false; default-token-8h99c:; Type: Secret (a volume populated by a Secret); SecretName: default-token-8h99c; Optional: false; QoS Class: Burstable; Node-Selectors: <none>; Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s; node.kubernetes.io/unreachable:NoExecute for 300s; preemptible=true; Events:; Type Reason Age From Message; ---- ------ ---- ---- -------; Normal Scheduled 13m default-scheduler Successfully assigned batch-pods/batch-3-job-41-39d17b to gke-vdc-preemptible-pool-9c7148b2-1f89; Warning FailedCreatePodSandBox 13m kubelet, gke-vdc-preemptible-pool-9c7148b2",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6625:1249,test,test-gsa-key,1249,https://hail.is,https://github.com/hail-is/hail/issues/6625,2,['test'],['test-gsa-key']
Testability,"joins:; --> 356 left = j.join_func(left); 357 all_uids.extend(j.temp_vars); 358 used_joins.add(j). /home/hail/hail.zip/hail/table.py in joiner(obj); 1448 else:; 1449 assert isinstance(obj, Table); -> 1450 return Table(Env.jutils().joinGlobals(obj._jt, self._jt, uid)); 1451 ; 1452 ast = Join(Select(TopLevelReference('global', Indices()), uid),. /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134 ; 1135 for temp_arg in temp_args:. /home/hail/hail.zip/hail/utils/java.py in deco(*args, **kwargs); 194 raise FatalError('%s\n\nJava stack trace:\n%s\n'; 195 'Hail version: %s\n'; --> 196 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; 197 except pyspark.sql.utils.CapturedException as e:; 198 raise FatalError('%s\n\nJava stack trace:\n%s\n'. FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.expr.TableMapGlobals.execute(Relational.scala:2158); 	at is.hail.table.Table.value$lzycompute(Table.scala:243); 	at is.hail.table.Table.value(Table.scala:238); 	at is.hail.table.Table.x$5$lzycompute(Table.scala:246); 	at is.hail.table.Table.x$5(Table.scala:246); 	at is.hail.table.Table.globals$lzycompute(Table.scala:246); 	at is.hail.table.Table.globals(Table.scala:246); 	at is.hail.utils.Py4jUtils$class.joinGlobals(Py4jUtils.scala:137); 	at is.hail.utils.package$.joinGlobals(package.scala:26); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3728:4745,Assert,AssertionError,4745,https://hail.is,https://github.com/hail-is/hail/issues/3728,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,jre/include -I/etc/alternatives/jre/include/linux ibs.cpp -MG -M -MF build/ibs.d -MT build/ibs.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux FS.cpp -MG -M -MF build/FS.d -MT build/FS.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Encoder.cpp -MG -M -MF build/Encoder.d -MT build/Encoder.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Decoder.cpp -MG -M -MF build/Decoder.d -MT build/Decoder.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux cache-tests.cpp -MG -M -MF build/cache-tests.d -MT build/cache-tests.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux ApproximateQuantiles_test.cpp -MG -M -MF build/ApproximateQuantiles_test.d -MT build/ApproximateQuantiles_te; st.o; make[1]: Leaving directory `/mnt/tmp/hail/hail/src/main/c'; make[1]: Entering directory `/mnt/tmp/hail/hail/src/main/c'; g++ -o build/NativeBoot.o -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux -MD -MF build/NativeBoot.d -MT build/NativeBoot.o -c NativeBoot.cpp; g++ -fvisibility=default -rdynamic -shared -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alte,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221:9494,test,tests,9494,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221,1,['test'],['tests']
Testability,"jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:2582,log,logging,2582,https://hail.is,https://github.com/hail-is/hail/pull/11574,4,['log'],"['logging', 'logs']"
Testability,just testing,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6857:5,test,testing,5,https://hail.is,https://github.com/hail-is/hail/pull/6857,1,['test'],['testing']
Testability,just want to see tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11416:17,test,tests,17,https://hail.is,https://github.com/hail-is/hail/pull/11416,1,['test'],['tests']
Testability,"jvm tests don't actually trigger the condition, so need at test",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8008:4,test,tests,4,https://hail.is,https://github.com/hail-is/hail/pull/8008,2,['test'],"['test', 'tests']"
Testability,"k shell as follows:; ```; pyspark --jars $HAIL_HOME/jars/hail-all-spark.jar \; > --driver-class-path ./hail-all-spark.jar \; > --conf spark.executor.extraClassPath=./hail-all-spark.jar \; > --py-files $HAIL_HOME/python/hail.zip \; > --conf spark.sql.files.openCostInBytes=1099511627776 \; > --conf spark.sql.files.maxPartitionBytes=1099511627776 \; > --conf spark.hadoop.parquet.block.size=1099511627776; ```. 4) Attempted to run the Hail tutorial, received an error when calling `common_vds = common_vds.filter_genotypes('let ab = g.ad[1] / g.ad.sum() in ((g.isHomRef && ab <= 0.1) || (g.isHet && ab >= 0.25 && ab <= 0.75) ||(g.isHomVar && ab >= 0.9))')`. ### What went wrong (all error messages here, including the full java stack trace):; ```; Python 2.7.14 |Anaconda, Inc.| (default, Oct 16 2017, 17:29:19); [GCC 7.2.0] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; 18/02/22 20:29:10 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 18/02/22 20:29:10 WARN Utils: Your hostname, CompyWompy resolves to a loopback address: 127.0.1.1; using 192.168.1.122 instead (on interface eth0); 18/02/22 20:29:10 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 2.0.2; /_/. Using Python version 2.7.14 (default, Oct 16 2017 17:29:19); SparkSession available as 'spark'.; >>> from hail import *; >>> hc = HailContext(spark.sparkContext); Running on Apache Spark version 2.0.2; SparkUI available at http://192.168.1.122:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.1-20613ed; >>> table = hc.import_table('data/1kg_annotations.txt', impute=True).key_by('",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2966:1400,log,log,1400,https://hail.is,https://github.com/hail-is/hail/issues/2966,1,['log'],['log']
Testability,"k trace:; java.lang.AssertionError: assertion failed: mismatch:; array<int32>; array<int32>; ApplyComparisonOp(GT(int32,int32),GetField(ArrayRef(GetField(Ref(va,struct{locus: locus<GRCh37>, alleles: array<str>, rsid: str, qual: float64, filters: set<str>, info: struct{NEGATIVE_TRAIN_SITE: bool, HWP: float64, AC: array<int32>, culprit: str, MQ0: int32, ReadPosRankSum: float64, AN: int32, InbreedingCoeff: float64, AF: array<float64>, GQ_STDDEV: float64, FS: float64, DP: int32, GQ_MEAN: float64, POSITIVE_TRAIN_SITE: bool, VQSLOD: float64, ClippingRankSum: float64, BaseQRankSum: float64, MLEAF: array<float64>, MLEAC: array<int32>, MQ: float64, QD: float64, END: int32, DB: bool, HaplotypeScore: float64, MQRankSum: float64, CCC: int32, NCC: int32, DS: bool}, `the entries! [877f12a8827e18f61222c6c8c5fb04a8]`: array<struct{GT: call, AD: array<int32>, DP: int32, GQ: int32, PL: array<int32>}>}),the entries! [877f12a8827e18f61222c6c8c5fb04a8]),Ref(i,int32)),DP),I32(20)); 	at scala.Predef$.assert(Predef.scala:170); 	at is.hail.expr.ir.Infer$.apply(Infer.scala:10); 	at is.hail.expr.ir.InferIR$class.typ(IR.scala:58); 	at is.hail.expr.ir.If.typ(IR.scala:77); 	at is.hail.expr.ir.Infer$$anonfun$apply$5.apply(Infer.scala:63); 	at is.hail.expr.ir.Infer$$anonfun$apply$5.apply(Infer.scala:59); 	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124); 	at scala.collection.immutable.List.foldLeft(List.scala:84); 	at is.hail.expr.ir.Infer$.apply(Infer.scala:59); 	at is.hail.expr.ir.InferIR$class.typ(IR.scala:58); 	at is.hail.expr.ir.InsertFields.typ(IR.scala:154); 	at is.hail.expr.ir.InsertFields.typ(IR.scala:153); 	at is.hail.expr.ir.Infer$.apply(Infer.scala:39); 	at is.hail.expr.ir.InferIR$class.typ(IR.scala:58); 	at is.hail.expr.ir.ArrayMap.typ(IR.scala:101); 	at is.hail.expr.ir.ArrayMap.typ(IR.scala:100); 	at is.hail.expr.ir.Infer$$anonfun$apply$5.apply(Infer.scala:63); 	at is.hail.expr.ir.Infer$$anonfun$apply$5.apply(Infer.scala:59); 	at scala.collection.Li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4134:2901,assert,assert,2901,https://hail.is,https://github.com/hail-is/hail/issues/4134,1,['assert'],['assert']
Testability,"k). /hadoop_gcs_connector_metadata_cache/hail/hail-devel-0c961806173f.zip/hail/methods/qc.py in vep(dataset, config, block_size, name, csq); 545; 546 require_row_key_variant(dataset, 'vep'); --> 547 return MatrixTable(Env.hail().methods.VEP.apply(dataset._jvds, config, 'va.`{}`'.format(name), csq, block_size)); 548; 549. /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134; 1135 for temp_arg in temp_args:. /hadoop_gcs_connector_metadata_cache/hail/hail-devel-0c961806173f.zip/hail/utils/java.py in deco(*args, **kwargs); 236 # this is a hack to suppress the original error's stack trace; 237 if _exception:; --> 238 raise _exception; 239; 240 return deco. FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.variant.MatrixTable.orderedRVDLeftJoinDistinctAndInsert(MatrixTable.scala:982); 	at is.hail.methods.VEP$.annotate(VEP.scala:429); 	at is.hail.methods.VEP$.apply(VEP.scala:434); 	at is.hail.methods.VEP.apply(VEP.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748). Hail version: devel-2c596b7; Error summ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3099:2919,assert,assert,2919,https://hail.is,https://github.com/hail-is/hail/issues/3099,1,['assert'],['assert']
Testability,"k-2.0.2-bin-hadoop2.6/python/pyspark/rdd.py"", line 999, in sum; return self.mapPartitions(lambda x: [sum(x)]).fold(0, operator.add); File ""/opt/Software/spark/spark-2.0.2-bin-hadoop2.6/python/pyspark/rdd.py"", line 873, in fold; vals = self.mapPartitions(func).collect(); File ""/opt/Software/spark/spark-2.0.2-bin-hadoop2.6/python/pyspark/rdd.py"", line 776, in collect; port = self.ctx._jvm.PythonRDD.collectAndServe(self._jrdd.rdd()); File ""/opt/Software/spark/spark-2.0.2-bin-hadoop2.6/python/lib/py4j-0.10.3-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/opt/Software/spark/spark-2.0.2-bin-hadoop2.6/python/pyspark/sql/utils.py"", line 63, in deco; return f(*a, **kw); File ""/opt/Software/spark/spark-2.0.2-bin-hadoop2.6/python/lib/py4j-0.10.3-src.zip/py4j/protocol.py"", line 319, in get_return_value; py4j.protocol.Py4JJavaError: An error occurred while calling z:org.apache.spark.api.python.PythonRDD.collectAndServe.; : org.apache.hadoop.mapred.InvalidInputException: Input path does not exist: file:/hail/test/BRCA1.raw_indel.vcf; 	at org.apache.hadoop.mapred.FileInputFormat.singleThreadedListStatus(FileInputFormat.java:285); 	at org.apache.hadoop.mapred.FileInputFormat.listStatus(FileInputFormat.java:228); 	at org.apache.hadoop.mapred.FileInputFormat.getSplits(FileInputFormat.java:313); 	at org.apache.spark.rdd.HadoopRDD.getPartitions(HadoopRDD.scala:199); 	at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:248); 	at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:246); 	at scala.Option.getOrElse(Option.scala:121); 	at org.apache.spark.rdd.RDD.partitions(RDD.scala:246); 	at org.apache.spark.rdd.MapPartitionsRDD.getPartitions(MapPartitionsRDD.scala:35); 	at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:248); 	at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:246); 	at scala.Option.getOrElse(Option.scala:121); 	at org.apache.spark.rdd.RDD.partitions(RDD.scala:246); 	at org.apache.spark.api.python.Pyth",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-322349367:2735,test,test,2735,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-322349367,1,['test'],['test']
Testability,k-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux NativeLongFunc.cpp -MG -M -MF build/NativeLongFunc.d -MT build/NativeLongFunc.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux NativeCodeSuite.cpp -MG -M -MF build/NativeCodeSuite.d -MT build/NativeCodeSuite.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux NativeBoot.cpp -MG -M -MF build/NativeBoot.d -MT build/NativeBoot.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux Logging.cpp -MG -M -MF build/Logging.d -MT build/Logging.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux Encoder.cpp -MG -M -MF build/Encoder.d -MT build/Encoder.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux Decoder.cpp -MG -M -MF build/Decoder.d -MT build/Decoder.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux ApproximateQuantiles_test.cpp -MG -M -MF build/ApproximateQuantiles_test.d -MT build/ApproximateQuantiles_test.o; g++ -o build/NativeBoot.o -march=sandybridge -O3 -s,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5659:5534,Log,Logging,5534,https://hail.is,https://github.com/hail-is/hail/issues/5659,1,['Log'],['Logging']
Testability,"k-submit with --driver-class-path to augment the driver classpath; - spark.executor.extraClassPath to augment the executor classpath; ; 17/08/10 09:10:21 WARN SparkConf: Setting 'spark.executor.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; 17/08/10 09:10:21 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 2.0.2; /_/. Using Python version 2.7.5 (default, Nov 6 2016 00:28:07); SparkSession available as 'spark'.; ```; ----------------------------; ```; >>> rdd = sc.textFile('/hail/test/BRCA1.raw_indel.vcf'); >>> from hail import *; >>> hc = HailContext(sc); hail: info: SparkUI: http://192.168.1.4:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.1-0320a61; ```; ----------------------------------; ```; >>> vds = hc.import_vcf('/hail/test/BRCA1.raw_indel.vcf'); hail: warning: `/hail/test/BRCA1.raw_indel.vcf' refers to no files; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-483>"", line 2, in import_vcf; File ""/opt/Software/hail/python/hail/java.py"", line 112, in handle_py4j; 'Error summary: %s' % (deepest, full, Env.hc().version, deepest)); hail.java.FatalError: HailException: arguments refer to no files. Java stack trace:; is.hail.utils.HailException: arguments refer to no files; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6); 	at is.hail.utils.package$.fatal(package.scala:25); 	at is.hail.io.vcf.LoadVCF$.globAllVCFs(LoadVCF.scala:105); 	at is.hail.HailContext.importVCFs(HailContext.scala:523); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.re",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-321424071:1946,test,test,1946,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-321424071,1,['test'],['test']
Testability,k.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsI,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1734,test,test,1734,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,k.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112); at org.apache.spark.rdd.RDD.withScope(RDD.scala:362); at org.apache.spark.rdd.RDD.aggregate(RDD.scala:1108); at is.hail.table.Table.query(Table.scala:339); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); at py4j.Gateway.invoke(Gateway.java:280); at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); at py4j.commands.CallCommand.execute(CallCommand.java:79); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:748); Caused by: java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.RegionValueBuilder.endStruct(RegionValueBuilder.scala:109); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2645); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2615); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collectio,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3063:7736,assert,assert,7736,https://hail.is,https://github.com/hail-is/hail/issues/3063,1,['assert'],['assert']
Testability,"k/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/typed_expressions.py"", line 4522, in fold; body = to_expr(f(accum_ref, elt_ref)); File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 364, in f; ret = x(*args); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/typed_expressions.py"", line 221, in <lambda>; return collection._to_stream().fold(lambda x, y: f(x, y), zero); File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 364, in f; ret = x(*args); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/typed_expressions.py"", line 68, in <lambda>; return hl.array(self).fold(lambda accum, elt: accum | f(elt), False); File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 364, in f; ret = x(*args); File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 364, in f; ret = x(*args); File ""test.py"", line 11, in <lambda>; (mt.locus.contig == hl.literal(x[0])) & \; File ""<decorator-gen-690>"", line 2, in literal; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/functions.py"", line 261, in literal; return literal(hl.eval(to_expr(x, dtype)), dtype); File ""<decorator-gen-668>"", line 2, in eval; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/expressions/expression_utils.py"", line 223, in eval; return eval_timed(expression)[0]; File ""<decorator-gen-666>"", line 2, in eval_timed; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/hail/python/hail/expr/ex",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13046#issuecomment-1624278982:7236,test,test,7236,https://hail.is,https://github.com/hail-is/hail/issues/13046#issuecomment-1624278982,1,['test'],['test']
Testability,"kUI available at http://dk-m.c.broad-ctsa.internal:4041; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.16-277ccc7aec45; LOGGING: writing to /tmp/66c1d088108948b2b76bb607f61d7b3f/hail-20190703-2330-0.2.16-277ccc7aec45.log; yo dawg. [Stage 0:> (0 + 1) / 1]OpenJDK 64-Bit Server VM warning: INFO: os::commit_memory(0x00007f2e73b00000, 1035468800, 0) failed; error='Cannot allocate memory' (errno=12); #; # There is insufficient memory for the Java Runtime Environment to continue.; # Native memory allocation (mmap) failed to map 1035468800 bytes for committing reserved memory.; # An error report file with more information is saved as:; # /tmp/66c1d088108948b2b76bb607f61d7b3f/hs_err_pid10896.log; ERROR: (gcloud.dataproc.jobs.submit.pyspark) Job [66c1d088108948b2b76bb607f61d7b3f] failed with error:; Google Cloud Dataproc Agent reports job failure. If logs are available, they can be found in 'gs://dataproc-7f9e9d5e-03bd-4e95-bea1-fe0321239b35-us/google-cloud-dataproc-metainfo/f03fbc39-c07f-4e3e-8f21-47ffa986058e/jobs/66c1d088108948b2b76bb607f61d7b3f/driveroutput'.; Traceback (most recent call last):; File ""/usr/local/bin/hailctl"", line 10, in <module>; sys.exit(main()); File ""/usr/local/lib/python3.7/site-packages/hailtop/hailctl/__main__.py"", line 91, in main; cli.main(args); File ""/usr/local/lib/python3.7/site-packages/hailtop/hailctl/dataproc/cli.py"", line 99, in main; jmp[args.module].main(args, pass_through_args); File ""/usr/local/lib/python3.7/site-packages/hailtop/hailctl/dataproc/submit.py"", line 72, in main; check_call(cmd); File ""/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/subprocess.py"", line 347, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '['gcloud', 'dataproc', 'jobs', 'submit', 'pyspark', 'foo.py', '--cluster=dk', '--files=', '--py-files=/var/folders/cq/p_l4jm3x72j7wkxqxswccs180000gq/T/pyscripts_yg_wzlu0.zip', '--properties=']' ret",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6565#issuecomment-508289815:1466,log,logs,1466,https://hail.is,https://github.com/hail-is/hail/issues/6565#issuecomment-508289815,1,['log'],['logs']
Testability,"ke -C src/main/c prebuilt && ./gradlew testCppCodegen`; ### What went wrong (all error messages here, including the full java stack trace):; ```; testCppCodegen; :compileJava UP-TO-DATE; :generateBuildInfo; :nativeLib; tar -xzf libsimdpp-2.1.tar.gz; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :testCppCodegen; Running test: Test method testReadWrite(is.hail.annotations.AnnotationsSuite). Gradle suite > Gradle test > is.hail.annotations.AnnotationsSuite.testReadWrite FAILED; org.apache.spark.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexS",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1090,test,test,1090,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,"ke logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:3319,log,logging,3319,https://hail.is,https://github.com/hail-is/hail/pull/11574,4,['log'],"['logging', 'logs']"
Testability,"kendUtils.scala:52); app//is.hail.backend.BackendUtils$Lambda$783/0x000000080080c040.apply(Unknown Source); app//is.hail.utils.package$.using(package.scala:635); app//is.hail.annotations.RegionPool.scopedRegion(RegionPool.scala:162); app//is.hail.backend.BackendUtils.$anonfun$collectDArray$5(BackendUtils.scala:51); app//is.hail.backend.BackendUtils$Lambda$757/0x00000008007bcc40.apply(Unknown Source); app//is.hail.backend.spark.SparkBackendComputeRDD.compute(SparkBackend.scala:751); app//org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:365); app//org.apache.spark.rdd.RDD.iterator(RDD.scala:329); app//org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90); app//org.apache.spark.scheduler.Task.run(Task.scala:136); app//org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:548); app//org.apache.spark.executor.Executor$TaskRunner$Lambda$608/0x0000000800652c40.apply(Unknown Source); app//org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1504); app//org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:551); java.base@11.0.17/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128); java.base@11.0.17/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628); java.base@11.0.17/java.lang.Thread.run(Thread.java:829); ```. A few things:; 1. Verify that this case statement is evaluated intelligently. In particular, we really want to evaluate each predicate once, and only if necessary.; 2. We *should not allocate* just to evaluate these reference genome predicates, but that is [exactly what we do](https://github.com/hail-is/hail/blob/main/hail/src/main/scala/is/hail/expr/ir/functions/LocusFunctions.scala#L67-L72). It seems like the right fix is for the ReferenceGenome's intervals to be shipped as literals so that we can perform `inXPar` or `isAutosomal` checks without allocating contig strings or locus objects. ### Version. 0.2.124. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13862:4447,log,log,4447,https://hail.is,https://github.com/hail-is/hail/issues/13862,1,['log'],['log']
Testability,"keys_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/keys{/key_id}"",; ""collaborators_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/collaborators{/collaborator}"",; ""teams_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/teams"",; ""hooks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/hooks"",; ""issue_events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/events{/number}"",; ""events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/events"",; ""assignees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/assignees{/user}"",; ""branches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/tags"",; ""blobs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/blobs{/sha}"",; ""git_tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/trees{/sha}"",; ""statuses_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/languages"",; ""stargazers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:3329,test,test,3329,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,kind of just trying to figure out how to get test results to show up in the ci thing. will assign once i've figured out how that works.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4806:45,test,test,45,https://hail.is,https://github.com/hail-is/hail/pull/4806,1,['test'],['test']
Testability,"king/workshop-test/1kg.mt/globals/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/rows/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(Literal(array<int64>,ArrayBuffer(1)),TableSpecWriter(gs://danking/workshop-test/1kg.mt/globals,Table{global:Struct{},key:[],row:Struct{}},rows,globals,../references,false)), WriteMetadata(MakeArray(ArrayBuffer(GetField(Ref(__iruid_368,struct{filePath: str, partitionCounts: int64}),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/cols/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""EBaseStruct{s:EBinary}"",""_vType"":""Struct{s:String}"",""_bufferSpec"":",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:10974,test,test,10974,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['test'],['test']
Testability,"ks_only=False). # sparcify to a triangle matrix; bm_ldadj = bm_ldadj.sparsify_triangle(); bm_ldadj = bm_ldadj.checkpoint(f'{tmp}/ldadj', overwrite=args.overwrite, force_row_major=True). # This is required, as the squaring/multiplication densifies, so this re-sparsifies.; ht = hl.utils.genomic_range_table(100); n = 100. r2 = bm_ldadj ** 2; r2_adj = ((n - 1.0) / (n - 2.0)) * r2 - (1.0 / (n - 2.0)); starts_and_stops = hl.linalg.utils.locus_windows(ht.locus, args.radius, _localize=False); r2_adj = r2_adj._sparsify_row_intervals_expr(starts_and_stops, blocks_only=False); r2_adj = r2_adj.sparsify_triangle(); r2_adj = r2_adj.checkpoint(f'{tmp}/adj', overwrite=args.overwrite). if __name__ == '__main__':; main(); ```. ### Version. 0.2.128. ### Relevant log output. ```shell; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.128-17247d8990c6; LOGGING: writing to /home/edmund/.local/src/hail/hail-20240508-1553-0.2.128-17247d8990c6.log; Traceback (most recent call last):; File ""/home/edmund/.local/share/pyenv/versions/3.9.18/lib/python3.9/runpy.py"", line 197, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""/home/edmund/.local/share/pyenv/versions/3.9.18/lib/python3.9/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/adapter/../../debugpy/launcher/../../debugpy/__main__.py"", line 39, in <module>; cli.main(); File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/adapter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 430, in main; run(); File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/adapter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 284, in run_file; runpy.run_path(target, run_name=""__main__""); File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14537:1513,log,log,1513,https://hail.is,https://github.com/hail-is/hail/issues/14537,1,['log'],['log']
Testability,"kubectl logs defaults to 10 lines if a selector is used:. > --tail=-1: Lines of recent log file to display. Defaults to -1 with no selector, showing all log lines otherwise; > 10, if a selector is provided. Add `--tail=999999` in those cases. `--tail=-1` doesn't seem to do anything (still only get 10 lines). If there are multiple replicas, I find logs to border on useless. I think longer term, we want to get logs (even for tests) into centralized logging in real-time and we can replace these logging steps to links to the logging infrastructure.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6259:8,log,logs,8,https://hail.is,https://github.com/hail-is/hail/pull/6259,9,"['log', 'test']","['log', 'logging', 'logs', 'tests']"
Testability,"kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 584 return __original_func(*args_, **kwargs_); File /databricks/python/lib/python3.10/site-packages/hail/context.py:386, in init(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, backend, driver_cores, driver_memory, worker_cores, worker_memory, gcs_requester_pays_configuration, regions, gcs_bucket_allow_list); 366 return hail_event_loop().run_until_complete(; 367 init_batch(; 368 log=log,; (...); 383 ); 384 ); 385 if backend == 'spark':; --> 386 return init_spark(; 387 sc=sc,; 388 app_name=app_name,; 389 master=master,; 390 local=local,; 391 min_block_size=min_block_size,; 392 branching_factor=branching_factor,; 393 spark_conf=spark_conf,; 394 _optimizer_iterations=_optimizer_iterations,; 395 log=log,; 396 quiet=quiet,; 397 append=append,; 398 tmp_dir=tmp_dir,; 399 local_tmpdir=local_tmpdir,; 400 default_reference=default_reference,; 401 global_seed=global_seed,; 402 skip_logging_configuration=skip_logging_configuration,; 403 gcs_requester_pays_configuration=gcs_requester_pays_configuration,; 404 ); 405 if backend == 'local':; 406 return init_local(; 407 log=log,; 408 quiet=quiet,; (...); 414 gcs_requester_pays_configuration=gcs_requester_pays_configuration,; 415 ); File <decorator-gen-1762>:2, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); File /databricks/python/lib/python3.10/site-packages/hail/typecheck/check.py:584, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 581 @decorator; 582 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 583 args_, kwargs_ = check_all(__or",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14462:2261,log,log,2261,https://hail.is,https://github.com/hail-is/hail/issues/14462,4,['log'],['log']
Testability,"l fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; <li>Declares incompatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; </ul>; <h2>pytest-asyncio 0.23.4a2</h2>; <h1>0.23.4 (UNRELEASED)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:6014,test,test,6014,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['test']
Testability,"l of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3ZTZiMDk2ZC0xYzc5LTQ2ZjctYjY5Ni0yNjFlM2QzYzU2ZmMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdlNmIwOTZkLTFjNzktNDZmNy1iNjk2LTI2MWUzZDNjNTZmYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7e6b096d-1c79-46f7-b696-261e3d3c56fc"",""prPublicId"":""7e6b096d-1c79-46f7-b696-261e3d3c56fc"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""b7c31419-ec34-40f1-8bc6-ad8303fb329b"",""projectUrl"":""https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14036:2800,log,logic,2800,https://hail.is,https://github.com/hail-is/hail/pull/14036,1,['log'],['logic']
Testability,"l of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiOGQwNmE2Yi00MTg0LTRhMzAtOGMxYi0wYzNhZDVkZDk2OTQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI4ZDA2YTZiLTQxODQtNGEzMC04YzFiLTBjM2FkNWRkOTY5NCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b8d06a6b-4184-4a30-8c1b-0c3ad5dd9694"",""prPublicId"":""b8d06a6b-4184-4a30-8c1b-0c3ad5dd9694"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""}],""packageManager"":""pip"",""projectPublicId"":""e7c92c7b-5282-49ea-940f-7a5797e2a45a"",""projectUrl"":""https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[663,663],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Input Validation](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14045:2802,log,logic,2802,https://hail.is,https://github.com/hail-is/hail/pull/14045,1,['log'],['logic']
Testability,"l quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false variant=(RodBinding name=variant source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.unannotated.vcf) snpEffFile=(RodBinding name=snpEffFile source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snpeff.vcf) dbsnp=(RodBinding name= source=UNBOUND) comp=[] resource=[] out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub annotation=[SnpEff] excludeAnnotation=[] group=[] expression=[] useAllAnnotations=false list=false alwaysAppendDbsnpId=false MendelViolationGenotypeQualityThreshold=0.0 requireStrictAlleleMatch=false filter_mismatching_base_and_quals=false""; ##VariantFiltration=""analysis_type=VariantFiltration input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.padded.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta nonDeterministicRandomSeed=false disableRandomization=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_legacy_downsampler=false baq=OFF baqGapOpenPenalty=40.0 fix_misencoded_quality",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:18596,stub,stubs,18596,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,"l script ran into this too many files open issue running pc_relate. ```; pc_relate_pop2.py; import pandas as pd; import numpy as np; from scipy.special import chdtri; from numpy import median; from math import log,isnan; import matplotlib as mpl; import matplotlib.pyplot as plt; import seaborn as sns; import sys; import hail as hl; from bokeh.io import output_notebook, show, export_png, output_file, save; from pprint import pprint. pop=sys.argv[1]; maf_cutoff=0.10. # input files; #. # pfn=""file:///restricted/projectnb/adgc/imp.topmed_adsp5k/analysis/adgc.aa.pheno.txt""; # apoe_fn=""file:///restricted/projectnb/ukbiobank/ad/apoe/ukbb_hg38_imputed_phased.tsv""; mt_fn='/project/adgc/topmed2.2020_07/pop/adgc.'+pop+'.autosome.dose.mt'; mt_ld_fn='/project/adgc/topmed2.2020_07/pop/adgc.'+pop+'.autosome.dose.ld_pruned.mt'; pfn=""file:///restricted/projectnb/adgc/topmed.r2.analysis/pheno/ADGC_ea_aa_eas_hisp_graace_pheno.qced.txt""; #; # Initialize Hail for GRCh38. # hl.init(default_reference='GRCh38',log=""results/adgc_pc_relate.autosome.log"",tmp_dir=""file:///restricted/projectnb/ukbiobank/ad/analysis/ad.v1/tmp""). hl.init(default_reference='GRCh38',log=""logs/adgc_pc_relate.autosome_""+pop+"".log""); table = (hl.import_table(pfn,impute=True, missing=['','.','NA'],types={; 'FID': hl.tstr,; 'IID': hl.tstr,; 'vcfID': hl.tstr,; 'status': hl.tfloat,; 'age': hl.tfloat,; 'sex': hl.tfloat,; 'apoe': hl.tstr,; 'cohort': hl.tstr,; 'pop':hl.tstr,; 'omit':hl.tint,; 'AD': hl.tint,; 'MCI': hl.tint,; 'e2': hl.tint,; 'e3': hl.tint,; 'e4': hl.tint,; 'e44': hl.tint,; 'e34': hl.tint,; 'e33': hl.tint,; 'e24': hl.tint,; 'e23': hl.tint,; 'e22': hl.tint,; 'ACT_aa': hl.tint,; 'ACT1_ea': hl.tint,; 'ACT2_ea': hl.tint,; 'ADC1_ea': hl.tint,; 'ADC10_aa': hl.tint,; 'ADC10_eas': hl.tint,; 'ADC10_ea': hl.tint,; 'ADC10_hisp': hl.tint,; 'ADC12_aa': hl.tint,; 'ADC2_ea': hl.tint,; 'ADC3_aa': hl.tint,; 'ADC3_ea': hl.tint,; 'ADC4_ea': hl.tint,; 'ADC5_ea': hl.tint,; 'ADC6_ea': hl.tint,; 'ADC7_ea': hl.tint,; 'ADC8_aa': hl.ti",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9293#issuecomment-677718403:1023,log,log,1023,https://hail.is,https://github.com/hail-is/hail/issues/9293#issuecomment-677718403,1,['log'],['log']
Testability,"l-az://'); if remote_tmpdir.startswith('hail-az://'):; match = re.fullmatch('hail-az://(?P<storage_account>[^/]+)/(?P<container_name>[^/]+).*', remote_tmpdir); assert match; storage_account, container_name = match.groups(); else:; assert remote_tmpdir.startswith('https://'); match = re.fullmatch('https://(?P<storage_account>[^/]+).blob.core.windows.net/(?P<container_name>[^/]+).*', remote_tmpdir); assert match; storage_account, container_name = match.groups(); self.bucket = f'{storage_account}/{container_name}'; ; self.cloud_input_dir = f'{self.remote_tmpdir}batch-tests/resources'; ; token = uuid.uuid4(); self.cloud_output_path = f'/batch-tests/{token}'; self.cloud_output_dir = f'{self.remote_tmpdir}{self.cloud_output_path}'; ; self.router_fs = RouterAsyncFS(); ; > if not self.sync_exists(f'{self.remote_tmpdir}batch-tests/resources/hello.txt'):. ../test/hailtop/batch/test_batch.py:533: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; ../test/hailtop/batch/test_batch.py:544: in sync_exists; return async_to_blocking(self.router_fs.exists(url)); utils/utils.py:160: in async_to_blocking; return loop.run_until_complete(task); /usr/lib/python3.9/asyncio/base_events.py:634: in run_until_complete; self.run_forever(); /usr/lib/python3.9/asyncio/base_events.py:601: in run_forever; self._run_once(); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <_UnixSelectorEventLoop running=False closed=False debug=False>. def _run_once(self):; """"""Run one full iteration of the event loop.; ; This calls all currently ready callbacks, polls for I/O,; schedules the resulting callbacks, and finally schedules; 'call_later' callbacks.; """"""; ; sched_count = len(self._scheduled); if (sched_count > _MIN_SCHEDULED_TIMER_HANDLES and; self._timer_cancelled_count / sched_count >; _MIN_CANCELLED_TIMER_HANDLES_FRACTION):; # Remove delayed calls that were cancelled if their number; # is too high; new_scheduled = []; for handle in s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13997:1875,test,test,1875,https://hail.is,https://github.com/hail-is/hail/issues/13997,1,['test'],['test']
Testability,l.LocalBackend._execute(LocalBackend.scala:212); E 	at is.hail.backend.local.LocalBackend.$anonfun$execute$2(LocalBackend.scala:277); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:84); E 	at is.hail.backend.local.LocalBackend.$anonfun$execute$1(LocalBackend.scala:272); E 	at is.hail.backend.local.LocalBackend.$anonfun$execute$1$adapted(LocalBackend.scala:271); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:78); E 	at is.hail.utils.package$.using(package.scala:673); E 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:78); E 	at is.hail.utils.package$.using(package.scala:673); E 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); E 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:65); E 	at is.hail.backend.local.LocalBackend.$anonfun$withExecuteContext$2(LocalBackend.scala:120); E 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:55); E 	at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:62); E 	at is.hail.backend.local.LocalBackend.withExecuteContext(LocalBackend.scala:105); E 	at is.hail.backend.local.LocalBackend.execute(LocalBackend.scala:271); E 	at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:88); E 	at jdk.httpserver/com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:77); E 	at jdk.httpserver/sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82); E 	at jdk.httpserver/com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:80); E 	at jdk.httpserver/sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:848); E 	at jdk.httpserver/com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:77); E 	at jdk.httpserver/sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:817); E 	at jdk.httpserver/sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:201); E 	at jdk.httpserver/sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:560); E 	at jdk.httpserver/sun.net.httpserver.S,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14705:7408,log,logTime,7408,https://hail.is,https://github.com/hail-is/hail/issues/14705,1,['log'],['logTime']
Testability,l.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144); Caused by: java.lang.reflect.InvocationTargetException; at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.apache.spark.serializer.SerializationDebugger$ObjectStreamClassMethods$.getObjFieldVal,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:2294,Test,TestNG,2294,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['Test'],['TestNG']
Testability,"l/ci-utils"",""us-docker.pkg.dev/hail-vdc/hail/create_certs_image"",""us-docker.pkg.dev/hail-vdc/hail/echo"",""us-docker.pkg.dev/hail-vdc/hail/grafana"",""us-docker.pkg.dev/hail-vdc/hail/hail-base"",""us-docker.pkg.dev/hail-vdc/hail/hail-build"",""us-docker.pkg.dev/hail-vdc/hail/hail-buildkit"",""us-docker.pkg.dev/hail-vdc/hail/hail-run"",""us-docker.pkg.dev/hail-vdc/hail/hail-run-tests"",""us-docker.pkg.dev/hail-vdc/hail/hail-pip-installed-python37"",""us-docker.pkg.dev/hail-vdc/hail/hail-pip-installed-python38"",""us-docker.pkg.dev/hail-vdc/hail/hail-ubuntu"",""us-docker.pkg.dev/hail-vdc/hail/memory"",""us-docker.pkg.dev/hail-vdc/hail/monitoring"",""us-docker.pkg.dev/hail-vdc/hail/notebook"",""us-docker.pkg.dev/hail-vdc/hail/notebook_nginx"",""us-docker.pkg.dev/hail-vdc/hail/prometheus"",""us-docker.pkg.dev/hail-vdc/hail/service-base"",""us-docker.pkg.dev/hail-vdc/hail/service-java-run-base"",""us-docker.pkg.dev/hail-vdc/hail/test-ci"",""us-docker.pkg.dev/hail-vdc/hail/test-monitoring"",""us-docker.pkg.dev/hail-vdc/hail/test-benchmark"",""us-docker.pkg.dev/hail-vdc/hail/test_hello_create_certs_image"",""us-docker.pkg.dev/hail-vdc/hail/website"",""us-docker.pkg.dev/hail-vdc/hail/ci-hello"",""us-docker.pkg.dev/hail-vdc/hail/hailgenetics/vep-grch37-85"",""us-docker.pkg.dev/hail-vdc/hail/hailgenetics/vep-grch38-95""],""grace"":""48h"",""recursive"":true,""tag_filter_all"":""cache-pr-.*""}; ```. ```; {""repos"":[""us-docker.pkg.dev/hail-vdc/hail/auth"",""us-docker.pkg.dev/hail-vdc/hail/base"",""us-docker.pkg.dev/hail-vdc/hail/base_spark_3_2"",""us-docker.pkg.dev/hail-vdc/hail/batch"",""us-docker.pkg.dev/hail-vdc/hail/batch-driver-nginx"",""us-docker.pkg.dev/hail-vdc/hail/batch-worker"",""us-docker.pkg.dev/hail-vdc/hail/benchmark"",""us-docker.pkg.dev/hail-vdc/hail/blog_nginx"",""us-docker.pkg.dev/hail-vdc/hail/ci"",""us-docker.pkg.dev/hail-vdc/hail/ci-intermediate"",""us-docker.pkg.dev/hail-vdc/hail/ci-utils"",""us-docker.pkg.dev/hail-vdc/hail/create_certs_image"",""us-docker.pkg.dev/hail-vdc/hail/echo"",""us-docker.pkg.dev/hail-vdc/hail/grafana"",""us-docker.pk",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13603#issuecomment-1734249545:1726,test,test-benchmark,1726,https://hail.is,https://github.com/hail-is/hail/issues/13603#issuecomment-1734249545,1,['test'],['test-benchmark']
Testability,"l/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_InRelease; /var/lib/apt/lists/download.docker.com_linux_debian_dists_buster_stable_binary-amd64_Packages; ```. </details>. There is a `/run/docker.sock` but notice it is not `/var/run/...`. However, if I install Docker by hand into this worker of a *non-Hail* Dataproc cluster, it just works. ---. I also tried to replicate the failure using an initialization action, but that also just worked.; ```; gcloud dataproc clusters create dk-test2 --initialization-actions=gs://hail-common/dk-test.sh; ```; `gs://hail-common/dk-test.sh`:; ```; apt-get update; apt-get -y install \; apt-transport-https \; ca-certificates \; curl \; gnupg2 \; software-properties-common \; tabix; curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -; sudo add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable""; apt-get update; apt-get install -y --allow-unauthenticated docker-ce; ```. ---. Our users often report this error. In my experience, it has happened in 2/8 test_dataproc steps that I have run myself or seen run. The more workers you have, the higher the chance at least one worker fails. As @bpblanken suggested [here](https://github.com/hail-is/hail/issues/12936#issuecomment-1589956412), restarting docker on a failed worker works. Docker starts fine. However, I missed a subtlety: we must restart *after* installation but *before* we try to pull our VEP docker image. I also add",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:13506,test,test,13506,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751,1,['test'],['test']
Testability,"l/typecheck/check.py:584, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 581 @decorator; 582 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 583 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 584 return __original_func(*args_, **kwargs_); File /databricks/python/lib/python3.10/site-packages/hail/context.py:476, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); 467 app_name = app_name or 'Hail'; 468 (; 469 gcs_requester_pays_project,; 470 gcs_requester_pays_buckets,; (...); 474 ); 475 ); --> 476 backend = SparkBackend(; 477 idempotent,; 478 sc,; 479 spark_conf,; 480 app_name,; 481 master,; 482 local,; 483 log,; 484 quiet,; 485 append,; 486 min_block_size,; 487 branching_factor,; 488 tmpdir,; 489 local_tmpdir,; 490 skip_logging_configuration,; 491 optimizer_iterations,; 492 gcs_requester_pays_project=gcs_requester_pays_project,; 493 gcs_requester_pays_buckets=gcs_requester_pays_buckets,; 494 ); 495 if not backend.fs.exists(tmpdir):; 496 backend.fs.mkdir(tmpdir); File /databricks/python/lib/python3.10/site-packages/hail/backend/spark_backend.py:126, in SparkBackend.__init__(self, idempotent, sc, spark_conf, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmpdir, local_tmpdir, skip_logging_configuration, optimizer_iterations, gcs_requester_pays_project, gcs_requester_pays_buckets); 124 jhc = hail_package.HailContext.getOrCreate(jbackend, branching_factor, optimizer_iterations); 125 else:; --> 126 jbackend = hail_package.backend.spark.SparkBackend.apply(; 127 jsc,; 128 app_name,; 129 master,; 130 local,; 131 log,; 132 True,; 133 append,; 134 skip_logging_configuration,; 135 min_block_size,; 136 tmpdir,; 137 local_tmpdir,; 138 gcs_requester_pays_p",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14462:4003,log,log,4003,https://hail.is,https://github.com/hail-is/hail/issues/14462,1,['log'],['log']
Testability,l> select * from aggregated_billing_project_user_resources_v3 where resource_id = 6 limit 100;; +----------------------------------+------+-------------+-------+------------+; | billing_project | user | resource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4063028160 |; | test | test | 6 | 1 | 189760 |; | test | test | 6 | 3 | 607168 |; | test | test | 6 | 4 | 749952 |; | test | test | 6 | 5 | 46912 |; | test | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1280,test,test,1280,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,lIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; R,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:2225,test,test,2225,https://hail.is,https://github.com/hail-is/hail/issues/4718,3,"['Test', 'test']","['Test', 'test', 'testUpperBound']"
Testability,"l_api; _request_timeout=_request_timeout); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/api_client.py"", line 355, in request; headers=headers); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/rest.py"", line 231, in GET; query_params=query_params); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/rest.py"", line 222, in request; raise ApiException(http_resp=r); INFO | 2019-06-25 12:37:07,703 | batch.py | mark_complete:501 | no logs for batch-2554-job-4-main-cc8d4 due to previous error, rescheduling pod; INFO | 2019-06-25 12:37:07,730 | batch.py | _create_pod:205 | created pod name: batch-2554-job-4-main-vsk7h for job (2554, 4), task main; INFO | 2019-06-25 12:37:07,788 | batch.py | update_job_with_pod:976 | update job (2554, 4) with pod batch-2554-job-4-main-vsk7h; INFO | 2019-06-25 12:37:07,846 | batch.py | update_job_with_pod:976 | update job (2554, 4) with pod batch-2554-job-4-main-vsk7h; INFO | 2019-06-25 12:37:07,881 | web_log.py | log:233 | 10.32.14.87 [25/Jun/2019:12:37:07 +0000] ""GET /api/v1alpha/batches/2669/jobs/1 HTTP/1.1"" 200 208 ""-"" ""Python/3.6 aiohttp/3.5.4""; INFO | 2019-06-25 12:37:07,906 | batch.py | update_job_with_pod:976 | update job (2554, 4) with pod batch-2554-job-4-main-vsk7h; ```. The new pod:; ```; + kubectl get pod batch-2554-job-4-main-vsk7h -n batch-pods -o yaml; apiVersion: v1; kind: Pod; metadata:; creationTimestamp: ""2019-06-25T12:37:07Z""; generateName: batch-2554-job-4-main-; labels:; app: batch-job; hail.is/batch-instance: cd50b95a89914efb897965a5e982a29d; uuid: 0c8e6bfd45294d738957b42a3874e25e; name: batch-2554-job-4-main-vsk7h; namespace: batch-pods; resourceVersion: ""72793526""; selfLink: /api/v1/namespaces/batch-pods/pods/batch-2554-job-4-main-vsk7h; uid: f1d2b3ad-9745-11e9-8aa3-42010a80015f; spec:; containers:; - command:; - /bin/bash; - -c; - set -ex; mkdir -p /io/pipeline/pipeline-f559bb010746/__TASK__3/; __RESOURCE_FILE__747=/io/pipeline/pipeline-f559bb010746/inputs/5fa554a9;; __RES",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6466#issuecomment-505429649:11510,log,log,11510,https://hail.is,https://github.com/hail-is/hail/issues/6466#issuecomment-505429649,1,['log'],['log']
Testability,"l_func(*args_, **kwargs_); 561 ; 562 return wrapper. /home/hail/hail.zip/hail/methods/impex.py in read_table(path); 1865 :class:`.Table`; 1866 """"""; -> 1867 return Table(Env.hc()._jhc.readTable(path)); 1868 ; 1869 @typecheck(t=Table,. /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134 ; 1135 for temp_arg in temp_args:. /home/hail/hail.zip/hail/utils/java.py in deco(*args, **kwargs); 208 raise FatalError('%s\n\nJava stack trace:\n%s\n'; 209 'Hail version: %s\n'; --> 210 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; 211 except pyspark.sql.utils.CapturedException as e:; 212 raise FatalError('%s\n\nJava stack trace:\n%s\n'. FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.expr.types.TableType.<init>(TableType.scala:15); 	at is.hail.expr.Parser$$anonfun$table_type_expr$7.apply(Parser.scala:308); 	at is.hail.expr.Parser$$anonfun$table_type_expr$7.apply(Parser.scala:307); 	at scala.util.parsing.combinator.Parsers$Success.map(Parsers.scala:137); 	at scala.util.parsing.combinator.Parsers$Success.map(Parsers.scala:136); 	at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:237); 	at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:237); 	at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:217); 	at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:234); 	at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:234); 	at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:217); 	at scala.util.parsing.combinator.Parsers$$anon$2$$anonfun$apply$14.apply(Parsers.scala:882); 	at sc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4325:2141,assert,assert,2141,https://hail.is,https://github.com/hail-is/hail/issues/4325,1,['assert'],['assert']
Testability,"la:324); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748); ```. Attempting to evaluate the array first and create and ndarray from that yields a different issue, again should work:. ```python; >>> b = hl.eval(a); >>> hl.eval(hl.nd.array(b)); FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.types.physical.PCanonicalArray.checkedConvertFrom(PCanonicalArray.scala:320); 	at is.hail.expr.ir.Emit$$anonfun$emitI$10$$anonfun$apply$23$$anonfun$apply$24.apply(Emit.scala:815); 	at is.hail.expr.ir.Emit$$anonfun$emitI$10$$anonfun$apply$23$$anonfun$apply$24.apply(Emit.scala:811); 	at is.hail.expr.ir.IEmitCode.map(Emit.scala:234); 	at is.hail.expr.ir.Emit$$anonfun$emitI$10$$anonfun$apply$23.apply(Emit.scala:811); 	at is.hail.expr.ir.Emit$$anonfun$emitI$10$$anonfun$apply$23.apply(Emit.scala:810); 	at is.hail.expr.ir.IEmitCode.flatMap(Emit.scala:241); 	at is.hail.expr.ir.Emit$$anonfun$emitI$10.apply(Emit.scala:810); 	at is.hail.expr.ir.Emit$$anonfun$emitI$10.apply(Emit.scala:809); 	at is.hail.expr.ir.IEmitCode.flatMap(Emit.scala:241); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:809); 	at is.hail.expr.ir.Emit.is$hail$expr$ir$Emit$$emitI$3(Emit.scala:1035); 	at is.hail.expr.ir.Emit$$anonfun$emit$11.apply(Emit.scala:2385); 	a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9128:9298,Assert,AssertionError,9298,https://hail.is,https://github.com/hail-is/hail/issues/9128,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"lass.toBuffer(TraversableOnce.scala:302); at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1334); at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:289); at scala.collection.AbstractIterator.toArray(Iterator.scala:1334); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:945); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:945); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2101); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2101); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90); at org.apache.spark.scheduler.Task.run(Task.scala:121); at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408); at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1405). The Hail version is: 0.2.61; The spark version is: 2.4.0.cloudera2. Checking the stacktrace and debugging it looks like flush() is being called on a closed stream. On a non-encryption zone HDFS write this seems to be silently ignored, but it causes an exception when writing to an encryption zone HDFS. Looking at the Hail code, there is a test for trying to close a stream that is already closed, so I created a patch to do the same check on a flush call:; --- current/hail/hail/src/main/scala/is/hail/io/fs/HadoopFS.scala 2021-02-12 11:17:14.000000000 -0500; +++ patched/hail/hail/src/main/scala/is/hail/io/fs/HadoopFS.scala 2021-02-16 10:16:46.156874381 -0500; @@ -32,7 +32,11 @@. override def write(bytes: Array[Byte], off: Int, len: Int): Unit = os.write(bytes, off, len). - override def flush(): Unit = os.flush(); + override def flush(): Unit = {; + if (!closed) {; + os.flush(); + }; + }. override def close(): Unit = {; if (!closed) {. This fixed the issue for us. I am hoping that you can evaluate this patch and include it in future versions of Hail. Please let me know if you need more information,. Thanks; Steve Keller",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10087:3435,test,test,3435,https://hail.is,https://github.com/hail-is/hail/issues/10087,1,['test'],['test']
Testability,"last); Cell In[32], line 1; ----> 1 hl.experimental.load_dataset(""gnomad_pca_variant_loadings"", version='2.1', reference_genome='GRCh38'). File ~/.local/lib/python3.8/site-packages/hail/experimental/datasets.py:115, in load_dataset(name, version, reference_genome, region, cloud); 107 raise ValueError(f'Region {repr(region)} not available for dataset'; 108 f' {repr(name)} on cloud platform {repr(cloud)}.\n'; 109 f'Available regions: {regions}.'); 111 path = [dataset['url'][cloud][region]; 112 for dataset in datasets[name]['versions']; 113 if all([dataset['version'] == version,; 114 dataset['reference_genome'] == reference_genome])]; --> 115 assert len(path) == 1; 116 path = path[0]; 117 if path.startswith('s3://'):. AssertionError: ; ```. I'm a new Hail user and don't have the full context here, but it seems like there are at least three problems:. 1. An assert failed in production code, which indicates either the presence of a bug or an incorrect use of assert (e.g. using assert to check for value errors).; 2. The assert has no corresponding error message, so the user learns that something has gone wrong but can't easily tell what.; 3. The assert is bare. Bare asserts can get optimized out of code in ways that are difficult to foresee in advance, and are generally deprecated in favor of the `if error_condition: raise AssertionError(...)` pattern (see: https://discuss.python.org/t/stop-ignoring-asserts-when-running-in-optimized-mode/13132). **The Big Picture**. The bare assert pattern is used over 3k times in Hail. To be fair, many of these usages occur in test directories, where they're fine. But they also occur in application code, and often in the dangerous form `assert(expr1, expr2)` which will never fail (because a tuple with two falsy elements is truthy in python). These asserts are never actually getting checked. . Fixing all of them would be a heavy lift. One compromise solution might be to add a bare assert rule to the linter (e.g. https://pypi.org/project/fl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12952:1231,assert,assert,1231,https://hail.is,https://github.com/hail-is/hail/issues/12952,1,['assert'],['assert']
Testability,latest commit fixed tests -- forgot to remove review!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12753#issuecomment-1476371102:20,test,tests,20,https://hail.is,https://github.com/hail-is/hail/pull/12753#issuecomment-1476371102,1,['test'],['tests']
Testability,latest test yields:; ```; write aggregate-throughput: 0.263 GiB/s; read aggregate-throughput: 0.083 GiB/s; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7593#issuecomment-558340651:7,test,test,7,https://hail.is,https://github.com/hail-is/hail/pull/7593#issuecomment-558340651,1,['test'],['test']
Testability,"latform to convert from plink bed format to hail matrix format. . https://github.com/shengqh/warp/blob/develop/pipelines/vumc_biostatistics/genotype/VUMCBed2HailMatrix.wdl. code is pretty simple:. ```; import hail as hl. hl.init(spark_conf={""spark.driver.memory"": ""~{memory_gb}g""}). #contig_recoding is hard coded for human only; dsplink = hl.import_plink(bed=""~{source_bed}"",; bim=""~{source_bim}"",; fam=""~{source_fam}"",; reference_genome=""~{reference_genome}"",; contig_recoding={; '1': 'chr1',; '2': 'chr2',; '3': 'chr3',; '4': 'chr4',; '5': 'chr5',; '6': 'chr6',; '7': 'chr7',; '8': 'chr8',; '9': 'chr9',; '10': 'chr10',; '11': 'chr11',; '12': 'chr12',; '13': 'chr13',; '14': 'chr14',; '15': 'chr15',; '16': 'chr16',; '17': 'chr17',; '18': 'chr18',; '19': 'chr19',; '20': 'chr20',; '21': 'chr21',; '22': 'chr22',; 'X': 'chrX',; 'Y': 'chrY',; 'MT': 'chrM'}). dsplink.write(""~{target_prefix}"", overwrite=True); ```. When I tested it on the chr12 with 34523 samples and 18377527 variants from one of my dataset in Terra (100 g was allocated for this task), it failed with error message:. ```; java.lang.NegativeArraySizeException: null; at com.esotericsoftware.kryo.util.IdentityObjectIntMap.resize(IdentityObjectIntMap.java:542); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.putStash(IdentityObjectIntMap.java:306); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.push(IdentityObjectIntMap.java:300); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.put(IdentityObjectIntMap.java:162); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.putStash(IdentityObjectIntMap.java:307); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.push(IdentityObjectIntMap.java:300); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.put(IdentityObjectIntMap.java:162); at com.esotericsoftware.kryo.util.MapReferenceResolver.addWrittenObject(MapReferenceResolver.java:41); at com.esotericsoftware.kryo.Kryo.writeReferenceOrNull(Kryo.java:681); at com.esotericsoftware.kryo.Kryo.write",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:998,test,tested,998,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['test'],['tested']
Testability,"ld report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.fix` runs scalafix on all sources in all modules. `mill __.fix --check` only checks for rule failures (we run this in ci). You can pass any options to scalafix, e.g. `mill fix --help`.; * `mill inspect` - see the docstring and dependencies for any target, e.g. `mill inspect compile`; * `mill ivyDepsTree` - show the tree of external dependencies of the root module, highlighting potential i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1651,test,testOnly,1651,https://hail.is,https://github.com/hail-is/hail/pull/14147,1,['test'],['testOnly']
Testability,ldscsim is a simulation framework for testing LD score regression,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5608:38,test,testing,38,https://hail.is,https://github.com/hail-is/hail/pull/5608,1,['test'],['testing']
Testability,"le if it is ready but has not been cancelled. Now we aim to incremental maintain the following information:. Globally:; - runnable jobs and cores. Per user:; - runnable and running jobs and cores,; - running cancelled jobs, and; - ready cancelled jobs. The global runnable cores are needed by the instance pool controller. The per-user stats are needed by the three threads of the scheduler:; - for the fair share allocator and the scheduler,; - to cancel running jobs on workers that have been cancelled (because the batch was cancelled),; - to cancel ready jobs that have been cancelled (either because the batch was cancelled or a parent failed). In order to update these values efficiently when a batch is cancelled, we also track in `batch_cancellable_resources` table, per batch:; - cancellable ready jobs and cores,; - cancellable running jobs and cores.; I added a `cancel_batch` procedure that uses these values to update ready_cores and user_resources when a batch is cancelled. I also reorganized the threads of the scheduler. Each one uses the above structures to compute a fair share for each user of work to do in a give iteration (dividing up 1000 tasks, with a per-user min of 20). Those tasks are then executed with 100-way parallelism. Other changes:; - I added a recompute_incremental procedure for recomputing all the incremental structures,; - I added a batches.state field (open, running or complete) and removed the closed column,; - I updated the batch and jobs indexes to make sure all scheduler queries are probably indexed. This isn't the case right now and we're seeing a lot of load on the database because of it. I'm going to do some more testing and possibly rename some stuff, but it is passing and the incremental structures all line up at the end of the tests. The only issue I see is I loop through all running batches for a user in the scheduler. If a user submits many many small batches, this could be an issue. I plan to address this in a later PR. FYI @danking",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7933:1927,test,testing,1927,https://hail.is,https://github.com/hail-is/hail/pull/7933,2,['test'],"['testing', 'tests']"
Testability,le suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[3]([Ljava.lan,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:2304,test,test,2304,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,le test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[6]([Ljava.lang.String;@4c09f4c5) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[7]([Ljava.lang.String;@67a910a4)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[7]([Ljava.lang.String;@67a910a4) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([L,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:5171,test,test,5171,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,le(ClosureCleaner.scala:166); at org.apache.spark.util.ClosureCleaner$.clean(ClosureCleaner.scala:158); at org.apache.spark.SparkContext.clean(SparkContext.scala:1622); at org.apache.spark.rdd.RDD.map(RDD.scala:286); at org.broadinstitute.hail.methods.MendelErrors.writeMendel(MendelErrors.scala:143); at org.broadinstitute.hail.methods.MendelErrorsSuite.test(MendelErrorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImp,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1582,Test,TestMethodWorker,1582,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['Test'],['TestMethodWorker']
Testability,"le(jvds); 2509 ; /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134 ; 1135 for temp_arg in temp_args:; /home/hail/hail.zip/hail/utils/java.py in deco(*args, **kwargs); 194 raise FatalError('%s\n\nJava stack trace:\n%s\n'; 195 'Hail version: %s\n'; --> 196 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; 197 except pyspark.sql.utils.CapturedException as e:; 198 raise FatalError('%s\n\nJava stack trace:\n%s\n'; FatalError: AssertionError: assertion failed; Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 4 in stage 7.0 failed 20 times, most recent failure: Lost task 4.19 in stage 7.0 (TID 601, mycluster-w-0.c.ukbb-all-phenos.internal, executor 2): java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.Region.loadAddress(Region.scala:63); at is.hail.expr.types.TBaseStruct.loadField(TBaseStruct.scala:215); at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:335); at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:341); at is.hail.annotations.WritableRegionValue.setSelect(WritableRegionValue.scala:38); at is.hail.rvd.OrderedRVD$$anonfun$getKeys$1$$anonfun$apply$9.apply(OrderedRVD.scala:511); at is.hail.rvd.OrderedRVD$$anonfun$getKeys$1$$anonfun$apply$9.apply(OrderedRVD.scala:510); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); at is.hail.rvd.OrderedRVPartitionInfo$.apply(OrderedRVPartitionInfo.scala:30); at is.hail.rvd.OrderedRVD$$anonfun$10.apply(OrderedRVD.scala:536); at is.hail.rvd.OrderedRVD$$anonfun$10.apply(OrderedRVD.scala:534); at is.hail.sparkextras.ContextRDD$$anonfun$cmapPartitionsWithIndex$1$$anonfun$appl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3507:2417,assert,assert,2417,https://hail.is,https://github.com/hail-is/hail/issues/3507,1,['assert'],['assert']
Testability,le.d -MT build/NativeModule.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux NativeLongFunc.cpp -MG -M -MF build/NativeLongFunc.d -MT build/NativeLongFunc.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux NativeCodeSuite.cpp -MG -M -MF build/NativeCodeSuite.d -MT build/NativeCodeSuite.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux NativeBoot.cpp -MG -M -MF build/NativeBoot.d -MT build/NativeBoot.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Logging.cpp -MG -M -MF build/Logging.d -MT build/Logging.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux ibs.cpp -MG -M -MF build/ibs.d -MT build/ibs.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux FS.cpp -MG -M -MF build/FS.d -MT build/FS.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Encoder.cpp -MG -M -MF build/Encoder.d -MT build/Encoder.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/al,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221:8245,Log,Logging,8245,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221,1,['Log'],['Logging']
Testability,"leIR.scala:856); 	at is.hail.expr.ir.TableMapGlobals$$anonfun$38.apply(TableIR.scala:846); 	at is.hail.utils.package$.using(package.scala:587); 	at is.hail.annotations.Region$.scoped(Region.scala:13); 	at is.hail.expr.ir.TableMapGlobals.execute(TableIR.scala:846); 	at is.hail.expr.ir.TableKeyBy.execute(TableIR.scala:237); 	at is.hail.expr.ir.TableMapRows.execute(TableIR.scala:696); 	at is.hail.expr.ir.TableMapGlobals.execute(TableIR.scala:838); 	at is.hail.expr.ir.TableMapRows.execute(TableIR.scala:696); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:42); 	at is.hail.table.Table.x$3$lzycompute(Table.scala:211); 	at is.hail.table.Table.x$3(Table.scala:211); 	at is.hail.table.Table.rvd$lzycompute(Table.scala:211); 	at is.hail.table.Table.rvd(Table.scala:211); 	at is.hail.table.Table.toDF(Table.scala:455); 	at sun.reflect.GeneratedMethodAccessor107.invoke(Unknown Source); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:748). Hail version: 0.2.8-70304a52d33d; Error summary: AssertionError: assertion failed: type mismatch:; name: global; actual: Struct{bn:Struct{n_populations:Int32,n_samples:Int32,n_variants:Int32,n_partitions:Int32,pop_dist:Array[Int32],fst:Array[Float64],mixture:Boolean},__uid_882:Array[Struct{sample_idx:Int32,pop:Int32,s:String}]}; expect: Struct{bn:Struct{n_populations:Int32,n_samples:Int32,n_variants:Int32,n_partitions:Int32,pop_dist:Array[Int32],fst:Array[Float64],mixture:Boolean},__cols:Array[Struct{sample_idx:Int32,pop:Int32,s:String}]}; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5212:8075,Assert,AssertionError,8075,https://hail.is,https://github.com/hail-is/hail/issues/5212,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,leStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13p,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4437,test,testng,4437,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['test'],['testng']
Testability,leStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlps,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4244,test,testng,4244,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,2,['test'],['testng']
Testability,leValue.write(TableValue.scala:85); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:589); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:48); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:23); 	at is.hail.table.Table.write(Table.scala:607); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748)java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.annotations.RegionValueBuilder.addRegionValue(RegionValueBuilder.scala:417); 	at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:345); 	at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:351); 	at is.hail.expr.ir.MatrixAggregateColsByKey$$anonfun$33$$anonfun$apply$15.apply(MatrixIR.scala:1024); 	at is.hail.expr.ir.MatrixAggregateColsByKey$$anonfun$33$$anonfun$apply$15.apply(MatrixIR.scala:980); 	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$22$$anon$3.next(OrderedRVD.scala:1087); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$22$$anon$3.next(OrderedRVD.scala:1081); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); 	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:4,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4128#issuecomment-412764719:7971,Assert,AssertionError,7971,https://hail.is,https://github.com/hail-is/hail/pull/4128#issuecomment-412764719,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,leValue.write(TableValue.scala:85); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:595); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:49); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:24); 	at is.hail.table.Table.write(Table.scala:577); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748)java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.annotations.RegionValueBuilder.addRegionValue(RegionValueBuilder.scala:417); 	at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:345); 	at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:351); 	at is.hail.expr.ir.MatrixAggregateColsByKey$$anonfun$33$$anonfun$apply$15.apply(MatrixIR.scala:1016); 	at is.hail.expr.ir.MatrixAggregateColsByKey$$anonfun$33$$anonfun$apply$15.apply(MatrixIR.scala:972); 	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$18$$anon$3.next(OrderedRVD.scala:1106); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$18$$anon$3.next(OrderedRVD.scala:1100); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); 	at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:4,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4263:7965,Assert,AssertionError,7965,https://hail.is,https://github.com/hail-is/hail/issues/4263,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"lease notes provided.</p>; <h2>1.16.0</h2>; <p>No release notes provided.</p>; <h2>1.15.3</h2>; <p>No release notes provided.</p>; <h2>1.15.2</h2>; <p>No release notes provided.</p>; <h2>1.15.1</h2>; <p>No release notes provided.</p>; <h2>1.15.0</h2>; <p>No release notes provided.</p>; <h2>1.14.1</h2>; <p>No release notes provided.</p>; <h2>Added document_defaults config option</h2>; <p>No release notes provided.</p>; <h2>Fix NewType is inserting a reference as first argument</h2>; <p>No release notes provided.</p>; <h2>Python 3.10 support and PEP-563, drop 3.6</h2>; <p>No release notes provided.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/blob/main/CHANGELOG.md"">sphinx-autodoc-typehints's changelog</a>.</em></p>; <blockquote>; <h2>1.18.2</h2>; <ul>; <li>Support and require <code>nptyping&gt;=2.1.1</code></li>; </ul>; <h2>1.18.1</h2>; <ul>; <li>Fix mocked module import not working when used as guarded import</li>; </ul>; <h2>1.18.0</h2>; <ul>; <li>Support and require <code>nptyping&gt;=2</code></li>; <li>Handle <code>UnionType</code></li>; </ul>; <h2>1.17.1</h2>; <ul>; <li>Mark it as requiring <code>nptyping&lt;2</code></li>; </ul>; <h2>1.17.0</h2>; <ul>; <li>Add <code>typehints_use_rtype</code> option</li>; <li>Handles <code>TypeError</code> when getting source code via inspect</li>; </ul>; <h2>1.16.0</h2>; <ul>; <li>Add support for type subscriptions with multiple elements, where one or more elements are tuples; e.g.,; <code>nptyping.NDArray[(Any, ...), nptyping.Float]</code></li>; <li>Fix bug for arbitrary types accepting singleton subscriptions; e.g., <code>nptyping.Float[64]</code></li>; <li>Resolve forward references</li>; <li>Expand and better handle <code>TypeVar</code></li>; <li>Add intershpinx reference link for <code>...</code> to <code>Ellipsis</code> (as is just an alias)</li>; </ul>; <h2>1.15.3</h2>; <ul>; <li>Prevents reaching inner blocks tha",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11893:2284,mock,mocked,2284,https://hail.is,https://github.com/hail-is/hail/pull/11893,1,['mock'],['mocked']
Testability,lect.InvocationTargetException: null; 	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source) ~[?:?]; 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_382]; 	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_382]; 	at is.hail.JVMEntryway$1.run(JVMEntryway.java:119) ~[jvm-entryway.jar:?]; 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]; 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]; 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]; 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]; 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]; 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]; 	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_382]; Caused by: java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:208) ~[scala-library-2.12.15.jar:?]; 	at is.hail.io.StreamBlockInputBuffer.readBlock(InputBuffers.scala:552) ~[gs:__hail-query-ger0g_jars_be9d88a80695b04a2a9eb5826361e0897d94c042.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.BlockingInputBuffer.ensure(InputBuffers.scala:384) ~[gs:__hail-query-ger0g_jars_be9d88a80695b04a2a9eb5826361e0897d94c042.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.BlockingInputBuffer.readInt(InputBuffers.scala:409) ~[gs:__hail-query-ger0g_jars_be9d88a80695b04a2a9eb5826361e0897d94c042.jar.jar:0.0.1-SNAPSHOT]; 	at __C16collect_distributed_array_table_coerce_sortedness.__m20INPLACE_DECODE_r_int32_TO_r_int32(Unknown Source) ~[?:?]; 	at __C16collect_distributed_array_table_coerce_sortedness.__m19INPLACE_DECODE_r_struct_of_r_int32ANDr_int32ANDr_binaryANDr_int64ANDr_int64ANDr_boolEND_TO_r_struct_of_r_int32ANDr_int32ANDr_stringANDr_int64ANDr_int64ANDr_boolEND(Unknown Source) ~[?:?]; 	at __C16collect_distributed_array_table_coerce_s,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13356#issuecomment-1719508553:3364,Assert,AssertionError,3364,https://hail.is,https://github.com/hail-is/hail/issues/13356#issuecomment-1719508553,3,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,ledException(Assertions.scala:528); at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:527); at org.scalatest.testng.TestNGSuite.newAssertionFailedException(TestNGSuite.scala:67); at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501); at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:445); at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:430); at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136); at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:658); at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:219); at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50); at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:923); at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:192); at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128); at java.util.ArrayList.forEach(ArrayList.java:1259); at org.testng.TestRunner.privateRun(TestRunner.java:808); at org.testng.TestRunner.run(TestRunner.java:603); at org.testng.SuiteRunner.runTest(SuiteRunner.java:429); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383); at org.testng.SuiteRunner.run(SuiteRunner.java:326); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRun,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827#issuecomment-1957725547:1299,test,testng,1299,https://hail.is,https://github.com/hail-is/hail/issues/13827#issuecomment-1957725547,1,['test'],['testng']
Testability,"les/795132/tests.zip). There are two differences that I can tell between the current build and the previous times I've tried. 1. I was using a local installation of spark when it worked, whereas now I am using the HPC's version of spark 2.1.0. However, it passed the tests just fine when I was using a local copy of spark 2.0.2 on both my laptop and HPC. . 2. Initially I followed the recommendations on the doc pages to setup the python path references to py4j under `alias hail=""PYTHONPATH=$SPARK_HOME/python:$SPARK_HOME/python/lib/py4j-0.10.4-src.zip:$HAIL_HOME/python SPARK_CLASSPATH=$HAIL_HOME/build/libs/hail-all-spark.jar python""` This perhaps didn't export the PYTHONPATH to the py4j 10.4 .zip library if I hadn't run the `hail` command before I tried testing. My initial reaction was to just install a local copy of py4j via pip in my local copy of python since the tests were failing out with complaints about missing py4j module. That worked to get a little farther in the test script, to the point where it was failing out with the breeze function. But, since then I've re-jiggered the PYTHONPATH in the .bash_profile to always be defined to point to the SPARK_HOME version of py4j. This doesn't seem like it would be a problem as the py4j versions via pip and and SPARK_HOME are both 10.4, and moreover this setup worked with spark 2.0.2, but a possible confound. Perhaps change the getting started docs so the PYTHONPATH is always defined to point to the spark version of py4j?. Anyway, here are the current paths as you requested. . `echo $SPARK_HOME /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7`. `echo $PYTHONPATH; /home/stockham/bin/python/Python-2.7.12:/share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python:/share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip:/scratch/PI/dpwall/computeEnvironments/hail/python`. `echo $HAIL_HOME; /scratch/PI/dpwall/computeEnvironments/hail`. Thank you, and if you have any ideas why the above tests ar",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1419#issuecomment-281846721:1754,test,test,1754,https://hail.is,https://github.com/hail-is/hail/issues/1419#issuecomment-281846721,1,['test'],['test']
Testability,let's add back that assertion for now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4585#issuecomment-431703700:20,assert,assertion,20,https://hail.is,https://github.com/hail-is/hail/pull/4585#issuecomment-431703700,1,['assert'],['assertion']
Testability,letting ci tell me where I need to add the testing argument,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14207#issuecomment-1915348303:43,test,testing,43,https://hail.is,https://github.com/hail-is/hail/pull/14207#issuecomment-1915348303,1,['test'],['testing']
Testability,lgtm. test maybe?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7106#issuecomment-533892685:6,test,test,6,https://hail.is,https://github.com/hail-is/hail/pull/7106#issuecomment-533892685,1,['test'],['test']
Testability,"li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/5637e8f02a05cf0ae800ad3e175f4bbe0a3e54cc""><code>5637e8f</code></a> [PR <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8098"">#8098</a>/aca206fc backport][3.9] Fix backwards compatibility with ssl (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8101"">#8101</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/33f49e8ec985e428083cd78bc11cb5fe0dff0e57""><code>33f49e8</code></a> Bump pypa/cibuildwheel from 2.16.2 to 2.16.4 (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8092"">#8092</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/5ff4b3c405ee741a46d6743209cd32259f939313""><code>5ff4b3c</code></a> Update version</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/94462eea445d43bf574ca6321349f67219ce9cb0""><code>94462ee</code></a> [PR <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/3957"">#3957</a>/79fe2045 backport][3.9] Improve test suite handling of paths, temp ...</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/24a6d64966d99182e95f5d3a29541ef2fec397ad""><code>24a6d64</code></a> Release v3.9.2 (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8082"">#8082</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/9118a5831e8a65b8c839eb7e4ac983e040ff41df""><code>9118a58</code></a> [PR <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8079"">#8079</a>/1c335944 backport][3.9] Validate static paths (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8080"">#8080</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/435ad46e6c26cbf6ed9a38764e9ba8e7441a0e3b""><code>435ad46</code></a> [PR <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/3955"">#3955</a>/8960063e backport][3.9] Replace all tmpdir fixtures with tmp_path (...</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/d33bc21414e283c9e6fe7f6caf69e2ed60d66c82""><code>d33bc21</code></a> Improv",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14219:4349,test,test,4349,https://hail.is,https://github.com/hail-is/hail/pull/14219,2,['test'],['test']
Testability,"li>; <li><a href=""https://github.com/jupyter/notebook/commit/d2ef92f0b385b7ecd11cbf0f3af181ee8e494623""><code>d2ef92f</code></a> Backport PR <a href=""https://redirect.github.com/jupyter/notebook/issues/7142"">#7142</a>: Clean up lint handling (<a href=""https://redirect.github.com/jupyter/notebook/issues/7185"">#7185</a>)</li>; <li><a href=""https://github.com/jupyter/notebook/commit/8e9390d9af903f34bb1c8414c7e9b49d2fdec32f""><code>8e9390d</code></a> Backport PR <a href=""https://redirect.github.com/jupyter/notebook/issues/7132"">#7132</a>: Adopt ruff format (<a href=""https://redirect.github.com/jupyter/notebook/issues/7184"">#7184</a>)</li>; <li><a href=""https://github.com/jupyter/notebook/commit/4d07f1ee9b6d3dca2736e2bf3a1254451add8259""><code>4d07f1e</code></a> Install stable JupyterLab 4.0 in the releaser hook (<a href=""https://redirect.github.com/jupyter/notebook/issues/7183"">#7183</a>)</li>; <li><a href=""https://github.com/jupyter/notebook/commit/e73d410074e6dbf97273f761d1513ff61db2965c""><code>e73d410</code></a> Updated ui-tests Configuration in Contributing.md (<a href=""https://redirect.github.com/jupyter/notebook/issues/7124"">#7124</a>)</li>; <li><a href=""https://github.com/jupyter/notebook/commit/ea1a1538ef56084654b7486e1d0b96f06b33acbe""><code>ea1a153</code></a> Set <code>navigation_with_keys</code> to <code>False</code> (<a href=""https://redirect.github.com/jupyter/notebook/issues/7129"">#7129</a>)</li>; <li><a href=""https://github.com/jupyter/notebook/commit/d717c6b3613f3609139bc2b9fe8d0a126aaeeae2""><code>d717c6b</code></a> Add Python 3.12 classifier (<a href=""https://redirect.github.com/jupyter/notebook/issues/7111"">#7111</a>)</li>; <li>See full diff in <a href=""https://github.com/jupyter/notebook/compare/@jupyter-notebook/tree@7.0.6...@jupyter-notebook/tree@7.0.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=notebook&package-manager=pip&previo",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14182:7865,test,tests,7865,https://hail.is,https://github.com/hail-is/hail/pull/14182,1,['test'],['tests']
Testability,"li>; <li>Add support for native-image selftest</li>; <li>Add support for AF_VSOCK (on Linux, and some macOS VMs)</li>; <li>Reintroduce deprecated legacy constructors for AFUNIXSocketAddress that were removed in 2.5.0.</li>; <li>Parent POM has been renamed from junixsocket-parent to junixsocket</li>; </ul>; <h2>junixsocket 2.5.2</h2>; <ul>; <li>Fix address handling in the Abstract Namespace</li>; <li>Fix support for very large datagrams (&gt; 1MB)</li>; <li>Fix InetAddress-wrapping of long addresses</li>; <li>Update Xcode support script, crossclang</li>; <li>Bump postgresql version in demo code</li>; <li>Fix dependency for custom architecture artifact</li>; </ul>; <h2>junixsocket 2.5.1</h2>; <ul>; <li>Add support for IBM z/OS (experimental, binary not included)</li>; <li>Add support for building from source on arm64-Linux</li>; <li>Add junixsocket support for jetty via <a href=""http://kohlschutter.github.io/junixsocket/junixsocket-jetty/"">junixsocket-jetty</a></li>; <li>Fix Selector logic (more bug fixes)</li>; <li>Documentation updates</li>; </ul>; <h2>junixsocket 2.5.0</h2>; <ul>; <li>New supported platforms: AIX 7 Power64, IBM i Power64, Windows ARM64, Windows Server 2019 &amp; 2022</li>; <li>Generic rework to support more than just Unix Domain sockets</li>; <li>Add support for AF_TIPC (on Linux)</li>; <li>Add support for using sockets passed as standard input</li>; <li>Add support for address-specific, non-standard URIs (for example; unix:// and tipc://), as well as socat addresses</li>; <li>Add support for using FileDescriptor for ProcessBuilder Redirects (Java 9+)</li>; <li>Add support for peer credentials (PID) on Windows</li>; <li>Fix Selector logic</li>; <li>Fix cross-compilation on Apple Silicon</li>; <li>Fix a file descriptor leak (regression in 2.4.0)</li>; <li>Improve behavior on partially unsupported platforms and allow loading of Windows 10 native; library on other Windows versions (e.g., Windows Server 2022, Windows 8.1).</li>; <li>Javadoc improvement",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12483:2172,log,logic,2172,https://hail.is,https://github.com/hail-is/hail/pull/12483,1,['log'],['logic']
Testability,"li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11658"">#11658</a> [component: build] Support &quot;pip install&quot; from sdist</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11618"">#11618</a> [component: tests] Reduce Tornado imports</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11628"">#11628</a> [component: docs] Correct path in dev guide server instructions</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11652"">#11652</a> [component: build] Update bokehjs' dependencies</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11668"">#11668</a> [component: docs] Add information about mathjax bundle</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11681"">#11681</a> [NO SQUASH] Batch of 3.0 -&gt; 2.4 backports</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11712"">#11712</a> [component: tests] Upgrade baselines to Chrome 94</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11722"">#11722</a> [component: tests] Update visual baselines on MacOS</li>; <li><a href=""https://github-redirect.dependabot.com/bokeh/bokeh/issues/11724"">#11724</a> [NO SQUASH] More 3.0 -&gt; 2.4 backports</li>; </ul>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/bokeh/bokeh/commit/ad33147f5762af8830e68144419e31e46a024caf""><code>ad33147</code></a> Deployment updates for release 2.4.2</li>; <li><a href=""https://github.com/bokeh/bokeh/commit/17578f3a7fce22af09cf105c67769890dfdb5705""><code>17578f3</code></a> also update latest=2.4.2</li>; <li><a href=""https://github.com/bokeh/bokeh/commit/e3e182a740b1a88f6b13d83656df296e02616506""><code>e3e182a</code></a> Merge deployment staging branch staging-2.4.2rc1</li>; <li><a href=""https://github.com/bokeh/bokeh/commit/6bcda8a0b",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11540:6262,test,tests,6262,https://hail.is,https://github.com/hail-is/hail/pull/11540,1,['test'],['tests']
Testability,"li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/7915719f211cc1217dfca6f3973a2b1f04c2e3f5""><code>7915719</code></a> [Storage] Prepare for STG83 GA release (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25040"">#25040</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/155eb8b69b3cd2f8ef992cf1436bf2751769ac42""><code>155eb8b</code></a> [Storage] Add <code>progress_hook</code> to file-share upload/download (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24997"">#24997</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/66dd3bef2d6e531e83cefd65be4cbbf41fcf2531""><code>66dd3be</code></a> [Storage] Fix more flaky lease tests (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25011"">#25011</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/030141734a239fa6fb1aa7a8c43d322c82753510""><code>0301417</code></a> [Storage] Add argument to perf tests to use client-side encryption (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24978"">#24978</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/Azure/azure-sdk-for-python/compare/azure-storage-blob_12.11.0...azure-storage-blob_12.13.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=azure-storage-blob&package-manager=pip&previous-version=12.11.0&new-version=12.13.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot command",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12109:4301,test,tests,4301,https://hail.is,https://github.com/hail-is/hail/pull/12109,1,['test'],['tests']
Testability,"li><a href=""https://github.com/ai/nanoid/commit/27eaa90cd207a7782bbcf17343092ae87dd62164""><code>27eaa90</code></a> Simplify new binary tool</li>; <li><a href=""https://github.com/ai/nanoid/commit/a9d91239931dc77506381874826d297aee71d6ef""><code>a9d9123</code></a> Update dependencies</li>; <li><a href=""https://github.com/ai/nanoid/commit/32b9bdaab1fbc28576b17de8516164ce0360f292""><code>32b9bda</code></a> Allows passing size or custom alphabet via cli as args (<a href=""https://github-redirect.dependabot.com/ai/nanoid/issues/334"">#334</a>)</li>; <li><a href=""https://github.com/ai/nanoid/commit/246d5f87b6b34e23b5e401bdf3da1f80c810ac4c""><code>246d5f8</code></a> Update vite</li>; <li><a href=""https://github.com/ai/nanoid/commit/afdf9c92b41427f35476fbe14b5af5d73dd7fbdb""><code>afdf9c9</code></a> doc: Fixed Typo (<a href=""https://github-redirect.dependabot.com/ai/nanoid/issues/335"">#335</a>)</li>; <li><a href=""https://github.com/ai/nanoid/commit/90a446fef3ecaac78e5af2ea01025c4f40182e2b""><code>90a446f</code></a> Update benchmark results</li>; <li><a href=""https://github.com/ai/nanoid/commit/8ba2319b579895cc1f9060b9946a44852f97c509""><code>8ba2319</code></a> bench: add <code>@​napi-rs/uuid</code> v4 (<a href=""https://github-redirect.dependabot.com/ai/nanoid/issues/333"">#333</a>)</li>; <li><a href=""https://github.com/ai/nanoid/commit/f4257780ece488734a65c176e80c2fd8ab6aab8e""><code>f425778</code></a> Release 3.1.32 version</li>; <li>Additional commits viewable in <a href=""https://github.com/ai/nanoid/compare/3.1.23...3.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nanoid&package-manager=npm_and_yarn&previous-version=3.1.23&new-version=3.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11284:2790,benchmark,benchmark,2790,https://hail.is,https://github.com/hail-is/hail/pull/11284,2,['benchmark'],['benchmark']
Testability,"li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-logging/blob/main/CHANGELOG.md"">google-cloud-logging's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:5894,log,logging,5894,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"licate, or use this one:. ```; > ARG_0: (dict<call, float64>,Map(3 -> 1.4756407611933507E308, 0 -> 46.25904804767313, 1 -> 54.68552327526001),12). java.lang.AssertionError: java.lang.ArrayIndexOutOfBoundsException: 3. 	at is.hail.check.GenProp1$$anonfun$apply$1.apply$mcVI$sp(Prop.scala:38); 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:160); 	at is.hail.check.GenProp1.apply(Prop.scala:26); 	at is.hail.check.Prop.check(Prop.scala:19); 	at is.hail.expr.ir.OrderingSuite.testBinarySearchOnDict(OrderingSuite.scala:357); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1046,test,testng,1046,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['test'],['testng']
Testability,"lient session; client_session: <aiohttp.client.ClientSession object at 0x111288208>; (base) wmecc-475:hail jigold$ hailctl batch billing list; - accrued_cost: 0.0; billing_project: ci; cost: null; limit: null; users: [ci]; - accrued_cost: 0.0012024241022130966; billing_project: test; cost: 0.0012024241022130966; limit: null; users: [test]; - accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]; - accrued_cost: 0.0; billing_project: test-zero-limit; cost: null; limit: 0.0; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch billing get; usage: hailctl batch billing get [-h] [-o {yaml,json}] billing_project; hailctl batch billing get: error: the following arguments are required: billing_project; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x10a635208>; (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x10cfe2278>; Unclosed connector; connections: ['[(<aiohttp.client_proto.ResponseHandler object at 0x10d062c78>, 2.214990943)]']; connector: <aiohttp.connector.TCPConnector object at 0x10cfe21d0>; (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch; usage: hailctl batch [-h] {billing,list,get,cancel,delete,log,job,wait} ... Manage batches running on the batch service managed by the Hail team. positional arguments:; {billing,list,get,canc",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9385#issuecomment-684964006:1651,test,test-tiny-limit,1651,https://hail.is,https://github.com/hail-is/hail/pull/9385#issuecomment-684964006,1,['test'],['test-tiny-limit']
Testability,"lients but clients do not; reciprocate. ### Authentication; #### X.509 Certificates. TLS uses X.509 Certificates for authentication. X.509 is a rather complicated; standard. X.509 Certificates can be serialized in a variety of ways. We use the; Privacy-enhanced Electronic Mail (PEM) file format for serialization. PEM is; really simple. A file may contain multiple base64-encoded blobs each with a; header and footer of the form:. ```; -----BEGIN LABEL-----; ...; -----END LABEL-----; ```. where `LABEL` describes the data. We only use two labels: `CERTIFICATE` and; `PRIVATE KEY`. An X.509 Certificate is an unforgeable proof of identity. It usually is paired; with a private key that was used to digitally sign the certificate. In the; security literature, an authenticatable entity is usually called a; *principal*. Each principal should have a unique private key. In our system the; principals are both our services (e.g. `batch`, `batch-driver`) and any; non-serving clients (e.g. `test-batch`, `admin-pod`). A key and certificate are; generated ad nihilum by `openssl req -new`:. ```; openssl req -new \; -x509; -keyout key_file; -out cert_file; -newkey rsa:4096; -nodes; -subj /CN=example.com; -addext subjectAltName = DNS:www.example.com,DNS:foo.com; ```. The first three arguments are self-explanatory. I explain the rest:. - `-newkey rsa:4096`. TLS supports many different kinds of private keys. This; generates a 4096-bit private key.; - `-nodes`. This should be read as ""no DES"". It means that the private key is not; itself encrypted using DES and a password.; - `-subj /CN=example.com`. This certificate is valid for a server whose DNS name; is `example.com`. If ""hostname checking"" is enabled (web browsers always; enable it), then the client will reject the certificate if the hostname used; to open the socket does not match the certificate.; - `-addext subjectAltName = ...`. This specifies additional acceptable hostnames; for the aformentioned hostname check. #### Trust. An X.50",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8561:3251,test,test-batch,3251,https://hail.is,https://github.com/hail-is/hail/pull/8561,1,['test'],['test-batch']
Testability,"lier PR are responded to there and addressed in the code for this one. This PR is to enable `hail-az/https` Azure file references to contain SAS tokens to enable bearer-auth style file access to Azure storage. Basic summary of the changes:; - Update `AzureAsyncFS` url parsing function to look for and separate out a SAS-token-like query string. Note: made fairly specific to SAS tokens - generic detection of query string syntax interferes with glob support and '?' characters in file names; - Added `generate_sas_token` convenience function to `AzureAsyncFS`. Adds new azure-mgmt-storage package requirement.; - Updated `AzureAsyncFS` to use `(account, container, credential)` tuple as internal `BlobServiceClient` cache key; - Updated `AzureAsyncFSURL` and `AzureFileListEntry` to track the token separately from the name, and extend the base classes to allow returning url with or without a token; - Update `RouterFS.ls` function and associated listfiles function to allow for trailing query strings during path traversal; - Update `AsyncFS.open_from` function to handle query-string urls in zero-length case; - Change to existing behavior: `LocalAsyncFSURL.__str__` no longer returns 'file:' prefix. Done to make `str()` output be appropriate for input to `fs` functions across all subclasses; - Updated `InputResource` to not include the SAS token as part of the destination file name; - Updated `inter_cloud/test_fs.py` to generically use query-string-friendly file path building functions to respect the new model, where it is no longer safe to extend URLs by just appending new segments with `+ ""/""` because there may be a query string, and added `'sas/azure-https'` test case to the fixture. Running tests for the SAS case requires some new test variables to allow the test code to generate SAS tokens (`build.yaml/test_hail_python_fs`):; ```; # Required for SAS testing on Azure; export HAIL_TEST_AZURE_RESGRP=haildev; export HAIL_TEST_AZURE_SUBID=12ab51c6-da79-4a99-8dec-3d2decc97343; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13140:1868,test,test,1868,https://hail.is,https://github.com/hail-is/hail/pull/13140,5,['test'],"['test', 'testing', 'tests']"
Testability,linear burden test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1650:14,test,test,14,https://hail.is,https://github.com/hail-is/hail/pull/1650,1,['test'],['test']
Testability,linear burden test with new interface,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1662:14,test,test,14,https://hail.is,https://github.com/hail-is/hail/pull/1662,1,['test'],['test']
Testability,"ling <br/>[SNYK-PYTHON-TORNADO-5840803](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5840803) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **539/1000** <br/> **Why?** Has a fix available, CVSS 6.5 | HTTP Request Smuggling <br/>[SNYK-PYTHON-TORNADO-6041512](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-6041512) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit ; ![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png ""high severity"") | **589/1000** <br/> **Why?** Has a fix available, CVSS 7.5 | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-PYTHON-WHEEL-3180413](https://snyk.io/vuln/SNYK-PYTHON-WHEEL-3180413) | `wheel:` <br> `0.30.0 -> 0.38.0` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2NTQzMzZlYi02MmRmLTQ0ODAtOTFkOS0xZDg4N2FmNmQwMTUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjY1NDMzNmViLTYyZGYtNDQ4MC05MWQ5LTFkODg3YWY2ZDAxNSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14205:10593,test,tested,10593,https://hail.is,https://github.com/hail-is/hail/pull/14205,1,['test'],['tested']
Testability,"ling <br/>[SNYK-PYTHON-TORNADO-5840803](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5840803) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **539/1000** <br/> **Why?** Has a fix available, CVSS 6.5 | HTTP Request Smuggling <br/>[SNYK-PYTHON-TORNADO-6041512](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-6041512) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit ; ![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png ""high severity"") | **589/1000** <br/> **Why?** Has a fix available, CVSS 7.5 | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-PYTHON-WHEEL-3180413](https://snyk.io/vuln/SNYK-PYTHON-WHEEL-3180413) | `wheel:` <br> `0.30.0 -> 0.38.0` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3YmFjNzAzOC00ZmQzLTQ3YmItOGUwMy0yNjRmYTUxNDRlNGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdiYWM3MDM4LTRmZDMtNDdiYi04ZTAzLTI2NGZhNTE0NGU0ZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14108:9577,test,tested,9577,https://hail.is,https://github.com/hail-is/hail/pull/14108,1,['test'],['tested']
Testability,"lint/commit/bce059acf1684e35c9a731e27cff2de16bf54de8""><code>bce059a</code></a> Move Sphinx docstrings out of <code>TestParamDocChecker</code> (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5450"">#5450</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/e14596ef44db6efd55c783fc5bffd61d020edc23""><code>e14596e</code></a> Move <code>no-member</code> tests from <code>TestTypeChecker</code> (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5453"">#5453</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/4b70feb297b4aada56b838c1e71f40badccf9472""><code>4b70feb</code></a> <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5452"">#5452</a>: Fix false positive missing-doc-param from multi-line Google-st… (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5459"">#5459</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/35813de38ed58855f1b89fb492dc141d24bf2661""><code>35813de</code></a> Move various tests from <code>TestTypeChecker</code> to functional tests (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5455"">#5455</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/PyCQA/pylint/compare/pylint-2.6.0...v2.12.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pylint&package-manager=pip&previous-version=2.6.0&new-version=2.12.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11461:8153,test,tests,8153,https://hail.is,https://github.com/hail-is/hail/pull/11461,6,"['Test', 'test']","['TestTypeChecker', 'tests']"
Testability,"list,get} ... Manage billing on the service managed by the Hail team. positional arguments:; {list,get}; list List billing projects; get Get a particular billing project's info. optional arguments:; -h, --help show this help message and exit; (base) wmecc-475:hail jigold$ hailctl batch billing fake; usage: hailctl batch billing [-h] {list,get} ...; hailctl batch billing: error: invalid choice: 'fake' (choose from 'list', 'get'); Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x111288208>; (base) wmecc-475:hail jigold$ hailctl batch billing list; - accrued_cost: 0.0; billing_project: ci; cost: null; limit: null; users: [ci]; - accrued_cost: 0.0012024241022130966; billing_project: test; cost: 0.0012024241022130966; limit: null; users: [test]; - accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]; - accrued_cost: 0.0; billing_project: test-zero-limit; cost: null; limit: 0.0; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch billing get; usage: hailctl batch billing get [-h] [-o {yaml,json}] billing_project; hailctl batch billing get: error: the following arguments are required: billing_project; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x10a635208>; (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x10cfe2278>; Unclosed connector; connections: ['[(<aiohttp.client_proto.ResponseHandler object at 0x10d062c78>, 2.214990943)]']; connector: <aiohttp.connector.TCPConnector object at 0x10cfe21d",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9385#issuecomment-684964006:1205,test,test,1205,https://hail.is,https://github.com/hail-is/hail/pull/9385#issuecomment-684964006,1,['test'],['test']
Testability,"lize/rich#2875</a></li>; <li>Fix rich.pretty.install breakage in iPython <a href=""https://redirect.github.com/Textualize/rich/issues/3013"">Textualize/rich#3013</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/Textualize/rich/blob/master/CHANGELOG.md"">rich's changelog</a>.</em></p>; <blockquote>; <h2>[13.6.0] - 2023-09-30</h2>; <h3>Added</h3>; <ul>; <li>Added Python 3.12 to classifiers.</li>; </ul>; <h2>[13.5.3] - 2023-09-17</h2>; <h3>Fixed</h3>; <ul>; <li>Markdown table rendering issue with inline styles and links <a href=""https://redirect.github.com/Textualize/rich/issues/3115"">Textualize/rich#3115</a></li>; <li>Fix Markdown code blocks on a light background <a href=""https://redirect.github.com/Textualize/rich/issues/3123"">Textualize/rich#3123</a></li>; </ul>; <h2>[13.5.2] - 2023-08-01</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs assertion error</li>; </ul>; <h2>[13.5.1] - 2023-07-31</h2>; <h3>Fixed</h3>; <ul>; <li>Fix tilde character (<code>~</code>) not included in link regex when printing to console <a href=""https://redirect.github.com/Textualize/rich/issues/3057"">Textualize/rich#3057</a></li>; </ul>; <h2>[13.5.0] - 2023-07-29</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs not expanding spans.</li>; <li>Fixed TimeElapsedColumn from showing negative.</li>; <li>Fix for escaping strings with a trailing backslash <a href=""https://redirect.github.com/Textualize/rich/issues/2987"">Textualize/rich#2987</a></li>; <li>Fixed exception in Markdown with partial table <a href=""https://redirect.github.com/Textualize/rich/issues/3053"">Textualize/rich#3053</a></li>; <li>Fixed the HTML export template so that the <code>&lt;html&gt;</code> tag comes before the <code>&lt;head&gt;</code> tag <a href=""https://redirect.github.com/Textualize/rich/issues/3021"">Textualize/rich#3021</a></li>; <li>Fixed issue with custom classes overwriting",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13758:3341,assert,assertion,3341,https://hail.is,https://github.com/hail-is/hail/pull/13758,2,['assert'],['assertion']
Testability,ll -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux NativeLongFunc.cpp -MG -M -MF build/NativeLongFunc.d -MT build/NativeLongFunc.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux NativeCodeSuite.cpp -MG -M -MF build/NativeCodeSuite.d -MT build/NativeCodeSuite.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux NativeBoot.cpp -MG -M -MF build/NativeBoot.d -MT build/NativeBoot.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Logging.cpp -MG -M -MF build/Logging.d -MT build/Logging.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux ibs.cpp -MG -M -MF build/ibs.d -MT build/ibs.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux FS.cpp -MG -M -MF build/FS.d -MT build/FS.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Encoder.cpp -MG -M -MF build/Encoder.d -MT build/Encoder.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Decoder.cpp -MG -M -MF build/Decoder.d -MT build/Decoder.o,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221:8294,Log,Logging,8294,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221,1,['Log'],['Logging']
Testability,ll PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigBGzip PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigNoCompression PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PA,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:1277,test,test,1277,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,"ll quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false variant=(RodBinding name=variant source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.unfiltered.vcf) discordance=(RodBinding name= source=UNBOUND) concordance=(RodBinding name= source=UNBOUND) out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sample_name=[] sample_expressions=null sample_file=null exclude_sample_name=[] exclude_sample_file=[] select_expressions=[] excludeNonVariants=false excludeFiltered=false regenotype=false restrictAllelesTo=ALL keepOriginalAC=false mendelianViolation=false mendelianViolationQualThreshold=0.0 select_random_fraction=0.0 remove_fraction_genotypes=0.0 selectTypeToInclude=[INDEL] keepIDs=null fullyDecode=false forceGenotypesDecode=false justRead=false maxIndelSize=2147483647 ALLOW_NONOVERLAPPING_COMMAND_LINE_SAMPLES=false filter_mismatching_base_and_quals=false""; ##UnifiedGenotyper=""analysis_type=UnifiedGenotyper input_file=[/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.bam.list] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/dax/all_1kg_exomes/v1/scatter/temp_0001_of_1200/scattered.intervals] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/seq/references/Homo_sapi",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:13026,stub,stubs,13026,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,"ll,participating}"",; ""labels_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/labels{/name}"",; ""releases_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/releases{/id}"",; ""deployments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/deployments"",; ""created_at"": ""2018-10-10T00:32:59Z"",; ""updated_at"": ""2018-10-10T00:32:59Z"",; ""pushed_at"": ""2018-10-10T00:33:00Z"",; ""git_url"": ""git://github.com/hail-ci-test/ci-test-p4a9fxo7.git"",; ""ssh_url"": ""git@github.com:hail-ci-test/ci-test-p4a9fxo7.git"",; ""clone_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7.git"",; ""svn_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""homepage"": null,; ""size"": 0,; ""stargazers_count"": 0,; ""watchers_count"": 0,; ""language"": null,; ""has_issues"": true,; ""has_projects"": true,; ""has_downloads"": true,; ""has_wiki"": true,; ""has_pages"": false,; ""forks_count"": 0,; ""mirror_url"": null,; ""archived"": false,; ""open_issues_count"": 0,; ""license"": null,; ""forks"": 0,; ""open_issues"": 0,; ""watchers"": 0,; ""default_branch"": ""master"",; ""permissions"": {; ""admin"": true,; ""push"": true,; ""pull"": true; },; ""allow_squash_merge"": true,; ""allow_merge_commit"": true,; ""allow_rebase_merge"": true,; ""organization"": {; ""login"": ""hail-ci-test"",; ""id"": 43152710,; ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjQzMTUyNzEw"",; ""avatar_url"": ""https://avatars1.githubusercontent.com/u/43152710?v=4"",; ""gravatar_id"": """",; ""url"": ""https://api.github.com/users/hail-ci-test"",; ""html_url"": ""https://github.com/hail-ci-test"",; ""followers_url"": ""https://api.github.com/users/hail-ci-test/followers"",; ""following_url"": ""https://api.github.com/users/hail-ci-test/following{/other_user}"",; ""gists_url"": ""https://api.github.com/users/hail-ci-test/gists{/gist_id}"",; ""starred_url"": ""https://api.github.com/users/hail-ci-test/starred{/owner}{/repo}"",; ""subscriptions_url"": ""https://api.github.com/users/hail-ci-test/subscriptions"",; ""organizations_url"": ""https://api.github.com/users/hail-ci-test/orgs"",; ""repos_url",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:6142,test,test,6142,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,4,"['log', 'test']","['login', 'test', 'test-']"
Testability,"llaborator}"",; ""teams_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/teams"",; ""hooks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/hooks"",; ""issue_events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/events{/number}"",; ""events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/events"",; ""assignees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/assignees{/user}"",; ""branches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/tags"",; ""blobs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/blobs{/sha}"",; ""git_tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/trees{/sha}"",; ""statuses_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/languages"",; ""stargazers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/comments{/number}"",; ""issue_comment_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/comments{/number}"",; ""contents_url"": ""https://",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:3514,test,test,3514,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"llaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-logging/compare/v2.6.0...v2.7.0"">2.7.0</a> (2021-11-02)</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:10348,log,logging,10348,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"lled_count / sched_count >; _MIN_CANCELLED_TIMER_HANDLES_FRACTION):; # Remove delayed calls that were cancelled if their number; # is too high; new_scheduled = []; for handle in self._scheduled:; if handle._cancelled:; handle._scheduled = False; else:; new_scheduled.append(handle); ; heapq.heapify(new_scheduled); self._scheduled = new_scheduled; self._timer_cancelled_count = 0; else:; # Remove delayed calls that were cancelled from head of queue.; while self._scheduled and self._scheduled[0]._cancelled:; self._timer_cancelled_count -= 1; handle = heapq.heappop(self._scheduled); handle._scheduled = False; ; timeout = None; if self._ready or self._stopping:; timeout = 0; elif self._scheduled:; # Compute the desired timeout.; when = self._scheduled[0]._when; timeout = min(max(0, when - self.time()), MAXIMUM_SELECT_TIMEOUT); ; if self._debug and timeout != 0:; t0 = self.time(); event_list = self._selector.select(timeout); dt = self.time() - t0; if dt >= 1.0:; level = logging.INFO; else:; level = logging.DEBUG; nevent = len(event_list); if timeout is None:; logger.log(level, 'poll took %.3f ms: %s events',; dt * 1e3, nevent); elif nevent:; logger.log(level,; 'poll %.3f ms took %.3f ms: %s events',; timeout * 1e3, dt * 1e3, nevent); elif dt >= 1.0:; logger.log(level,; 'poll %.3f ms took %.3f ms: timeout',; timeout * 1e3, dt * 1e3); else:; event_list = self._selector.select(timeout); self._process_events(event_list); ; # Handle 'later' callbacks that are ready.; end_time = self.time() + self._clock_resolution; while self._scheduled:; handle = self._scheduled[0]; if handle._when >= end_time:; break; handle = heapq.heappop(self._scheduled); handle._scheduled = False; self._ready.append(handle); ; # This is the only place where callbacks are actually *called*.; # All other places just add them to ready.; # Note: We run all currently scheduled callbacks, but not any; # callbacks scheduled by callbacks run this time around --; # they will be run the next time (after another I/O ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10705:2807,log,logging,2807,https://hail.is,https://github.com/hail-is/hail/pull/10705,1,['log'],['logging']
Testability,lling_date | billing_project | user | resource_id | token | usage |; +--------------+----------------------------------+------+-------------+-------+------------+; | 2023-07-13 | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | 2023-07-13 | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | 2023-07-13 | ci | ci | 6 | 0 | 79640784 |; | 2023-07-13 | test | test | 6 | 0 | 4142226688 |; | 2023-07-13 | test | test | 6 | 1 | 108608 |; | 2023-07-13 | test | test | 6 | 2 | 80576 |; | 2023-07-13 | test | test | 6 | 5 | 35648 |; | 2023-07-13 | test | test | 6 | 7 | 578240 |; | 2023-07-13 | test | test | 6 | 9 | 33024 |; | 2023-07-13 | test | test | 6 | 10 | 33472 |; | 2023-07-13 | test | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:8473,test,test,8473,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,"lls that were cancelled if their number; # is too high; new_scheduled = []; for handle in self._scheduled:; if handle._cancelled:; handle._scheduled = False; else:; new_scheduled.append(handle); ; heapq.heapify(new_scheduled); self._scheduled = new_scheduled; self._timer_cancelled_count = 0; else:; # Remove delayed calls that were cancelled from head of queue.; while self._scheduled and self._scheduled[0]._cancelled:; self._timer_cancelled_count -= 1; handle = heapq.heappop(self._scheduled); handle._scheduled = False; ; timeout = None; if self._ready or self._stopping:; timeout = 0; elif self._scheduled:; # Compute the desired timeout.; when = self._scheduled[0]._when; timeout = min(max(0, when - self.time()), MAXIMUM_SELECT_TIMEOUT); ; if self._debug and timeout != 0:; t0 = self.time(); event_list = self._selector.select(timeout); dt = self.time() - t0; if dt >= 1.0:; level = logging.INFO; else:; level = logging.DEBUG; nevent = len(event_list); if timeout is None:; logger.log(level, 'poll took %.3f ms: %s events',; dt * 1e3, nevent); elif nevent:; logger.log(level,; 'poll %.3f ms took %.3f ms: %s events',; timeout * 1e3, dt * 1e3, nevent); elif dt >= 1.0:; logger.log(level,; 'poll %.3f ms took %.3f ms: timeout',; timeout * 1e3, dt * 1e3); else:; event_list = self._selector.select(timeout); self._process_events(event_list); ; # Handle 'later' callbacks that are ready.; end_time = self.time() + self._clock_resolution; while self._scheduled:; handle = self._scheduled[0]; if handle._when >= end_time:; break; handle = heapq.heappop(self._scheduled); handle._scheduled = False; self._ready.append(handle); ; # This is the only place where callbacks are actually *called*.; # All other places just add them to ready.; # Note: We run all currently scheduled callbacks, but not any; # callbacks scheduled by callbacks run this time around --; # they will be run the next time (after another I/O poll).; # Use an idiom that is thread-safe without using locks.; ntodo = len(self._read",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10705:2876,log,log,2876,https://hail.is,https://github.com/hail-is/hail/pull/10705,1,['log'],['log']
Testability,"llw). To verify that it's working, and download the actual mill jar, run `./millw --version` (or `mill --version` if you put it on your path) from the `hail/` subdirectory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.fix` runs scalafix on all sources in all modules. `mill __.fix --check` only checks for rule failures (we run this in ci). You can pass any options to scalafix, e.g. `mill fix --help`.; * `mill inspect` - see t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1478,test,test,1478,https://hail.is,https://github.com/hail-is/hail/pull/14147,1,['test'],['test']
Testability,"lm0m0000gn/T//ccuBKQk1.s:1675:no such instruction: `vmovaps %xmm0, (%r11,%rax)'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1686:no such instruction: `vpxor -16(%rsi), %xmm2,%xmm1'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1699:no such instruction: `vpsrlq $1, %xmm1,%xmm0'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1713:no such instruction: `vpor %xmm1, %xmm0,%xmm0'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1725:no such instruction: `vmovaps %xmm0, (%r14,%rax)'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1901:no such instruction: `vmovdqa LC1(%rip), %xmm2'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1916:no such instruction: `vpxor (%rdx), %xmm2,%xmm1'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1929:no such instruction: `vpsrlq $1, %xmm1,%xmm0'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1953:no such instruction: `vpor %xmm1, %xmm0,%xmm0'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1970:no such instruction: `vmovaps %xmm0, (%r8,%rax)'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1981:no such instruction: `vpxor -16(%r11), %xmm2,%xmm1'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:1994:no such instruction: `vpsrlq $1, %xmm1,%xmm0'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:2008:no such instruction: `vpor %xmm1, %xmm0,%xmm0'; /var/folders/gx/t1q6w73n4pn8jzfc4_k3lm0m0000gn/T//ccuBKQk1.s:2020:no such instruction: `vmovaps %xmm0, (%r9,%rax)'; make: *** [lib/darwin/libibs.dylib] Error 1; :nativeLib FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':nativeLib'.; > Process 'command 'make'' finished with non-zero exit value 2. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. BUILD FAILED. Total time: 12.99 secs; Johns-MacBook-Pro-7:hail farrell$",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1274:11236,log,log,11236,https://hail.is,https://github.com/hail-is/hail/issues/1274,1,['log'],['log']
Testability,lmm2 test improvements and h_sq_standard_error,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3931:5,test,test,5,https://hail.is,https://github.com/hail-is/hail/pull/3931,1,['test'],['test']
Testability,"local notebook works fine for me as well, looks to be just dataproc that's not working as expected. submitting that test command as a script finished in 36.2s. notebook is currently still hanging with this output (it's been 11 minutes):; ```; BokehJS 3.2.2 successfully loaded.; Initializing Hail with default parameters...; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; SPARKMONITOR_LISTENER: Started SparkListener for Jupyter Notebook; SPARKMONITOR_LISTENER: Port obtained from environment: 55989; SPARKMONITOR_LISTENER: Application Started: application_1695402030462_0001 ...Start Time: 1695402594764; Running on Apache Spark version 3.3.0; SparkUI available at http://notebook-slowdown-repro-m.c.broad-ctsa.internal:43055/; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.124-ee7fef6fc40d; LOGGING: writing to /home/hail/hail-20230922-1709-0.2.124-ee7fef6fc40d.log; [Stage 0:> (0 + 2) / 2]; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13690#issuecomment-1731791216:116,test,test,116,https://hail.is,https://github.com/hail-is/hail/issues/13690#issuecomment-1731791216,5,"['LOG', 'log', 'test']","['LOGGING', 'log', 'logging', 'test']"
Testability,"local-ssds=0', '--num-preemptible-workers=0', '--num-worker-local-ssds=0', '--num-workers=2', '--preemptible-worker-boot-disk-size=40GB', '--worker-boot-disk-size=40', '--worker-machine-type=n1-standard-8', '--zone=us-central1-b', '--initialization-action-timeout=20m', '--labels=creator=weisburd_broadinstitute_org', '--max-idle=12h']' returned non-zero exit status 1.; ```. Then looking at the error log; ```; $ gsutil cat gs://dataproc-d919bddb-bde3-4138-bbe1-e068dfa1e550-us/google-cloud-dataproc-metainfo/3ec45dcc-d901-4777-930c-23046e64a97d/bw2-m/dataproc-initialization-script-0_output; pip packages are ['setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupyter', 'tornado<6', 'lxml<5', 'google-cloud==0.32.0', 'ipython<7', 'jgscm<0.2', 'jupyter-spark', 'aiohttp', 'bokeh>1.1,<1.3', 'decorator<5', 'gcsfs==0.2.1', 'hurry.filesize==0.9', 'ipykernel<5', 'nest_asyncio', 'numpy<2', 'pandas>0.22,<0.24', 'parsimonious<0.9', 'PyJWT', 'python-json-logger==0.1.11', 'requests>=2.21.0,<2.21.1', 'scipy>1.2,<1.4', 'tabulate==0.8.3', 'slackclient==2.0.0', 'websocket-client', 'sklearn', 'tabulate', 'statsmodels', 'scikit-learn', 'hdbscan', 'matplotlib']; b""Double requirement given: tabulate (already in tabulate==0.8.3, name='tabulate')\nYou are using pip version 10.0.1, however version 19.1.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n""; Traceback (most recent call last):; File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 16, in safe_call; sp.check_output(args, stderr=sp.STDOUT); File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 336, in check_output; **kwargs).stdout; File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 418, in run; output=stdout, stderr=stderr); subprocess.CalledProcessError: Command '('pip', 'install', 'setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupy",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:5452,log,logger,5452,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['log'],['logger']
Testability,log deployment after waiting for service,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6046:0,log,log,0,https://hail.is,https://github.com/hail-is/hail/pull/6046,1,['log'],['log']
Testability,log every time a method is started,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1616:0,log,log,0,https://hail.is,https://github.com/hail-is/hail/issues/1616,1,['log'],['log']
Testability,log function,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/527:0,log,log,0,https://hail.is,https://github.com/hail-is/hail/issues/527,1,['log'],['log']
Testability,log generated method bytecode size,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3438:0,log,log,0,https://hail.is,https://github.com/hail-is/hail/pull/3438,1,['log'],['log']
Testability,log.info IR when executing or interpreting. Example output:. ```; 2018-04-07 16:57:01 root: INFO: in MatrixTable.value: execute:; (MapEntries; (MatrixLiteral); (InsertFields; (Ref g); (x; (ApplyBinaryPrimOp Add; (GetField row_idx; (Ref va)); (GetField col_idx; (Ref sa))))); ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3312:0,log,log,0,https://hail.is,https://github.com/hail-is/hail/pull/3312,1,['log'],['log']
Testability,"logger's releases</a>.</em></p>; <blockquote>; <h2>v2.0.2</h2>; <h3>Added</h3>; <ul>; <li>Officially supporting 3.9 - <a href=""https://github.com/felixonmars""><code>@​felixonmars</code></a>.</li>; <li>You can now add static fields to log objects - <a href=""https://github.com/cosimomeli""><code>@​cosimomeli</code></a>.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Dropped 3.4 support.</li>; <li>Dropped Travis CI for Github Actions.</li>; <li>Wheel should build for python 3 instead of just 3.4 now.</li>; </ul>; <h2>v2.0.1</h2>; <h2>Added</h2>; <ul>; <li>Support Pypi long descripton - <a href=""https://github.com/ereli-cb""><code>@​ereli-cb</code></a></li>; </ul>; <h2>Changed</h2>; <ul>; <li>You can now rename output fields - <a href=""https://github.com/schlitzered""><code>@​schlitzered</code></a></li>; </ul>; <h2>v2.0.0</h2>; <p>No release notes provided.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/madzak/python-json-logger/blob/master/CHANGELOG.md"">python-json-logger's changelog</a>.</em></p>; <blockquote>; <h2>[2.0.2] - 2021-07-27</h2>; <h3>Added</h3>; <ul>; <li>Officially supporting 3.9 - <a href=""https://github.com/felixonmars""><code>@​felixonmars</code></a>.</li>; <li>You can now add static fields to log objects - <a href=""https://github.com/cosimomeli""><code>@​cosimomeli</code></a>.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Dropped 3.4 support.</li>; <li>Dropped Travis CI for Github Actions.</li>; <li>Wheel should build for python 3 instead of just 3.4 now.</li>; </ul>; <h2>[2.0.1] - 2020-10-12</h2>; <h3>Added</h3>; <ul>; <li>Support Pypi long descripton - <a href=""https://github.com/ereli-cb""><code>@​ereli-cb</code></a></li>; </ul>; <h3>Changed</h3>; <ul>; <li>You can now rename output fields - <a href=""https://github.com/schlitzered""><code>@​schlitzered</code></a></li>; </ul>; <h2>[2.0.0] - 2020-09-26</h2>; <h3>Added</h3>; <ul>; <li>New Changelog</li>; <li>Added timezone support to timestamps -",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11467:1234,log,logger,1234,https://hail.is,https://github.com/hail-is/hail/pull/11467,1,['log'],['logger']
Testability,"logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2>v2.7.0</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-logging/blob/main/CHANGELOG.md"">google-cloud-logging's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/goog",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:5082,log,logging,5082,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,logistic regression burden tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1737:0,log,logistic,0,https://hail.is,https://github.com/hail-is/hail/pull/1737,2,"['log', 'test']","['logistic', 'tests']"
Testability,"looked into the failing tests concerning randomness, and tracked down the source of the failures:. - `ApplySeeded` is an `AbstractApplyNode`. this means the interpreter will try to ""memoize"" the function definition so as to generate it only once even if you call it in multiple places in the IR. ; - memoization is based on referential equality, so they need to be the exact same IR object in order for reuse to trigger; - the ""seeded function"" implementations used by the test suite will create a new randomness state per generated function; - the Interpret pipeline used to rewrite each ApplySeeded node to be different objects, but with your changes they are the same, so their functions get memoized, thus sharing the same state. im not entirely sure which of these was doing the wrong thing, but IMO your changes in this PR should not have introduced any problems",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7567#issuecomment-556266727:24,test,tests,24,https://hail.is,https://github.com/hail-is/hail/pull/7567#issuecomment-556266727,2,['test'],"['test', 'tests']"
Testability,looking into test failure,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2531#issuecomment-350003512:13,test,test,13,https://hail.is,https://github.com/hail-is/hail/pull/2531#issuecomment-350003512,1,['test'],['test']
Testability,looks fine to me. @konradjk can you approve once tested? thanks!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3872#issuecomment-401421444:49,test,tested,49,https://hail.is,https://github.com/hail-is/hail/pull/3872#issuecomment-401421444,1,['test'],['tested']
Testability,"looks like a compile error in TestUtils.scala. The rest looks good, will approve when tests pass",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5077#issuecomment-452945059:30,Test,TestUtils,30,https://hail.is,https://github.com/hail-is/hail/pull/5077#issuecomment-452945059,2,"['Test', 'test']","['TestUtils', 'tests']"
Testability,"looks like the differences between `--unsafe-fixes` and my manual edits based on the feedback the linter gave were:; * `assert <boolean value> == True` becomes `assert <boolean value> is True`, not `assert <boolean value>`; * `if <value> == foo or <value> == bar` becomes `if <value> in (foo, bar)`, not `if <value> in {foo, bar}`; * `<unused variable> = foo` becomes `foo` instead of being deleted outright. those seem fine, though i think the manual version of the latter two is better in the cases where i had added it, as i only used sets for hashable types and deleted things that didn't have side effects, afaik",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14128#issuecomment-1883396355:120,assert,assert,120,https://hail.is,https://github.com/hail-is/hail/pull/14128#issuecomment-1883396355,6,['assert'],['assert']
Testability,"looks like your change is breaking this assertion on VEP line 84:; ` assert(ht.key.contains(FastIndexedSeq(""locus"", ""alleles"")))`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4361#issuecomment-423248241:40,assert,assertion,40,https://hail.is,https://github.com/hail-is/hail/pull/4361#issuecomment-423248241,2,['assert'],"['assert', 'assertion']"
Testability,"looks very reasonable on first scan, will have time to look more carefully tomorrow. If this passes tests I'm pretty confident it's fine.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8123#issuecomment-588545378:100,test,tests,100,https://hail.is,https://github.com/hail-is/hail/pull/8123#issuecomment-588545378,1,['test'],['tests']
Testability,lots of test failues,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7479#issuecomment-553991453:8,test,test,8,https://hail.is,https://github.com/hail-is/hail/pull/7479#issuecomment-553991453,1,['test'],['test']
Testability,"loy_config import HAIL_CONFIG_DIR, get_deploy_config; ; __all__ = [; + 'HAIL_CONFIG_DIR',; 'get_deploy_config'; ]; diff --git a/hail/python/hailtop/config/deploy_config.py b/hail/python/hailtop/config/deploy_config.py; index 627d1792c..7d2eeeca0 100644; --- a/hail/python/hailtop/config/deploy_config.py; +++ b/hail/python/hailtop/config/deploy_config.py; @@ -4,6 +4,8 @@ import logging; from aiohttp import web; ; log = logging.getLogger('gear'); +HAIL_CONFIG_DIR = os.path.join(os.environ.get('XDG_CONFIG_HOME', os.path.expanduser('~/.config')),; + 'hail'); ; ; class DeployConfig:; @@ -15,7 +17,7 @@ class DeployConfig:; def from_config_file(config_file=None):; if not config_file:; config_file = os.environ.get(; - 'HAIL_DEPLOY_CONFIG_FILE', os.path.expanduser('~/.hail/deploy-config.json')); + 'HAIL_DEPLOY_CONFIG_FILE', os.path.join(HAIL_CONFIG_DIR, 'deploy-config.json')); if os.path.isfile(config_file):; with open(config_file, 'r') as f:; config = json.loads(f.read()); diff --git a/hail/python/hailtop/hailctl/auth/login.py b/hail/python/hailtop/hailctl/auth/login.py; index 343de7bda..e740f7b3d 100644; --- a/hail/python/hailtop/hailctl/auth/login.py; +++ b/hail/python/hailtop/hailctl/auth/login.py; @@ -5,7 +5,7 @@ import webbrowser; import aiohttp; from aiohttp import web; ; -from hailtop.config import get_deploy_config; +from hailtop.config import HAIL_CONFIG_DIR, get_deploy_config; from hailtop.auth import get_tokens, namespace_auth_headers; ; ; @@ -77,9 +77,8 @@ Opening in your browser.; ; tokens = get_tokens(); tokens[auth_ns] = token; - dot_hail_dir = os.path.expanduser('~/.hail'); - if not os.path.exists(dot_hail_dir):; - os.mkdir(dot_hail_dir, mode=0o700); + if not os.path.exists(HAIL_CONFIG_DIR):; + os.makedirs(HAIL_CONFIG_DIR, mode=0o700); tokens.write(); ; if auth_ns == 'default':; diff --git a/hail/python/hailtop/hailctl/dev/config/cli.py b/hail/python/hailtop/hailctl/dev/config/cli.py; index c032e7731..d293b07cf 100644; --- a/hail/python/hailtop/hailctl/dev/con",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7125#issuecomment-535602902:3393,log,login,3393,https://hail.is,https://github.com/hail-is/hail/pull/7125#issuecomment-535602902,1,['log'],['login']
Testability,"lp. In [1]: import hail as hl ; hl.import_; In [2]: t = hl.import_table('/tmp/bar') ; ...: t.describe() ; ...: t = t.key_by('sample_id') ; Initializing Spark and Hail with default parameters...; using hail jar at /usr/local/lib/python3.7/site-packages/hail/hail-all-spark.jar; 19/06/13 14:08:11 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Running on Apache Spark version 2.4.1; SparkUI available at http://wm06b-953.broadinstitute.org:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.14-5cb00c115421; LOGGING: writing to /Users/dking/projects/hail/hail/hail-20190613-1408-0.2.14-5cb00c115421.log; 2019-06-13 14:08:15 Hail: INFO: Reading table with no type imputation; Loading column '?sample_id' as type 'str' (type not specified). ----------------------------------------; Global fields:; None; ----------------------------------------; Row fields:; '﻿sample_id': str ; ----------------------------------------; Key: []; ----------------------------------------; ---------------------------------------------------------------------------; LookupError Traceback (most recent call last); <ipython-input-2-6b119cf7ec41> in <module>; 1 t = hl.import_table('/tmp/bar'); 2 t.describe(); ----> 3 t = t.key_by('sample_id'). </usr/local/lib/python3.7/site-packages/decorator.py:decorator-gen-958> in key_by(self, *keys, **named_keys). /usr/local/lib/python3.7/site-packages/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 583 def wrapper(__original_func, *args, **kwargs):; 584 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 585 return __original_func(*args_, **kwargs_); 586 ; 587 return wrapper. /u",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6342:1789,log,log,1789,https://hail.is,https://github.com/hail-is/hail/issues/6342,1,['log'],['log']
Testability,"ls import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hail/utils/hadoop_utils.py"", line 7, in <module>; from hail.fs.hadoop_fs import HadoopFS; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hail/fs/hadoop_fs.py"", line 8, in <module>; from hailtop.fs.fs import FS; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/__init__.py"", line 1, in <module>; from .fs_utils import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/fs_utils.py"", line 4, in <module>; from hailtop.aiocloud.aiogoogle import GCSRequesterPaysConfiguration; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/__init__.py"", line 1, in <module>; from .client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/__init__.py"", line 8, in <module>; from .storage_client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/storage_client.py"", line 14, in <module>; from hailtop.aiotools import FeedableAsyncIterable, WriteBuffer; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/__init__.py"", line 1, in <module>; from .fs import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/__init__.py"", line 1, in <module>; from .copier import Copier, CopyReport, SourceCopier, SourceReport, Transfer, TransferReport; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/copier.py"", line 7, in <module>; import humanize; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/humanize/__init__.py"", line 1, in <module>; import pkg_resources; ModuleNotFoundError: No module named 'pkg_resources'. ```. I think this is largely because hail requires an ancient version of hum",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14630:1604,test,test,1604,https://hail.is,https://github.com/hail-is/hail/issues/14630,1,['test'],['test']
Testability,"ls.package$.using(package.scala:635); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:59); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:339); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:483); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.backend.spark.SparkBackend.executeEncode(SparkBackend.scala:482); 	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:238); 	at java.lang.Thread.run(Thread.java:750). Hail version: 0.2.107-2387bb00ceee; Error summary: SparkException: Job aborted due to stage failure: Task 0 in stage 23.0 failed 4 times, most recent failure: Lost task 0.3 in stage 23.0 (TID 26) (all-of-us-56-w-0.c.terra-vpc-sc-8f5cdfd2.internal executor 5): ExecutorLostFailure (executor 5 exited caused by one of the running tasks) Reason: Container from a bad node: container_1691092255852_0001_01_000005 on host: all-of-us-56-w-0.c.terra-vpc-sc-8f5cdfd2.internal. Exit status: 137. Diagnostics: [2023-08-03 20:14:25.441]Container killed on request. Exit code is 137; [2023-08-03 20:14:25.442]Container exited with a non-zero exit code 137. ; [2023-08-03 20:14:25.442]Killed by external signal; .; Driver stacktrace:. ```; [hail-20230803-1955-0.2.107-2387bb00ceee.log](https://github.com/hail-is/hail/files/12254716/hail-20230803-1955-0.2.107-2387bb00ceee.log); Log file attached.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13287#issuecomment-1664593619:11578,log,log,11578,https://hail.is,https://github.com/hail-is/hail/issues/13287#issuecomment-1664593619,3,"['Log', 'log']","['Log', 'log']"
Testability,ls.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.S,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3098,Test,TestUtils,3098,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604,1,['Test'],['TestUtils']
Testability,"lt;- <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1177"">#1177</a>)</li>; <li>misc speed improvements/optimisations</li>; </ul>; <h2>tqdm v4.63.0 stable</h2>; <ul>; <li>add <code>__reversed__()</code></li>; <li>add efficient <code>__contains__()</code></li>; <li>improve CLI startup time (replace <code>pkg_resources</code> =&gt; <code>importlib</code>)</li>; <li><code>tqdm.autonotebook</code> warning &amp; <code>std</code> fallback on missing <code>ipywidgets</code> (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1218"">#1218</a> &lt;- <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1082"">#1082</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1217"">#1217</a>)</li>; <li>warn on positional CLI arguments</li>; <li>misc build/test framework updates; <ul>; <li>enable <code>py3.10</code> tests</li>; <li>add <code>conda</code> dependencies</li>; <li>update pre-commit hooks</li>; <li>fix <code>pytest</code> config (<code>nbval</code>, <code>asyncio</code>)</li>; <li>fix dependencies &amp; tests</li>; <li>fix site deployment</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.3 stable</h2>; <ul>; <li>fix minor typo (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>minor example fix (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>misc tidying &amp; refactoring</li>; <li>misc build/dev framework updates; <ul>; <li>update dependencies</li>; <li>update linters</li>; <li>update docs deployment branches</li>; </ul>; </li>; <li>misc test/ci updates; <ul>; <li>test forks</li>; <li>tidy OS &amp; Python version tests</li>; <li>bump primary python version 3.7 =&gt; 3.8</li>; <li>beta py3.10 testing</li>; <li>fix py2.7 tests</li>; <li>better timeout handling</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.2 stable</h2>; <ul>; <li>fix notebook memory leak (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1216"">#1216</a>)</li>; </",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12260:2733,test,tests,2733,https://hail.is,https://github.com/hail-is/hail/pull/12260,2,['test'],['tests']
Testability,"lumes: as with <code>EmptyDir</code>, volumes are created and deleted for each pod automatically by Kubernetes. But because the normal provisioning process is used (<code>PersistentVolumeClaim</code>), storage can be provided by third-party storage vendors and all of the usual volume features work. Volumes don't need to be empt; for example, restoring from snapshot is supported. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92784"">kubernetes/kubernetes#92784</a>, <a href=""https://github.com/pohly""><code>@​pohly</code></a>) [SIG API Machinery, Apps, Auth, CLI, Instrumentation, Node, Scheduling, Storage and Testing]</li>; <li>Go1.14.4 is now the minimum version required for building Kubernetes (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92438"">kubernetes/kubernetes#92438</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery, Auth, CLI, Cloud Provider, Cluster Lifecycle, Instrumentation, Network, Node, Release, Storage and Testing]</li>; <li>Hide managedFields from kubectl edit command (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91946"">kubernetes/kubernetes#91946</a>, <a href=""https://github.com/soltysh""><code>@​soltysh</code></a>) [SIG CLI]</li>; <li>K8s.io/apimachinery - scheme.Convert() now uses only explicitly registered conversions - default reflection based conversion is no longer available. <code>+k8s:conversion-gen</code> tags can be used with the <code>k8s.io/code-generator</code> component to generate conversions. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/90018"">kubernetes/kubernetes#90018</a>, <a href=""https://github.com/wojtek-t""><code>@​wojtek-t</code></a>) [SIG API Machinery, Apps and Testing]</li>; <li>Kube-proxy: add <code>--bind-address-hard-fail</code> flag to treat failure to bind to a port as fatal (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/89350"">kubernete",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:8393,Test,Testing,8393,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,lush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a sympt,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3931,Test,TestMethodWorker,3931,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,1,['Test'],['TestMethodWorker']
Testability,lush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:341); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:339); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a sympt,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4124,Test,TestMethodWorker,4124,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['Test'],['TestMethodWorker']
Testability,ly$mcVI$sp(Prop.scala:38); 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:160); 	at is.hail.check.GenProp1.apply(Prop.scala:26); 	at is.hail.check.Prop.check(Prop.scala:19); 	at is.hail.expr.ir.OrderingSuite.testBinarySearchOnDict(OrderingSuite.scala:357); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$appl,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1308,Test,TestMethodWorker,1308,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['Test'],['TestMethodWorker']
Testability,"m Poterba; * 038a6de7c - (45 minutes ago) refresh from batch (#4670) - Daniel King; ```. #4586 was never tested against 75d5e7560. This is bad. We can look at the log of statuses posted to GitHub:; ```; # curl -sSL api.github.com/repos/hail-is/hail/commits/46808cb224dbaa2d4fbae9f4fc90439e2eed8730/statuses | less; ```; [46808cb224dbaa2d4fbae9f4fc90439e2eed8730-statuses.txt](https://github.com/hail-is/hail/files/2531246/46808cb224dbaa2d4fbae9f4fc90439e2eed8730-statuses.txt). Before the merge status goes in we see this one:; ```; {; ""url"": ""https://api.github.com/repos/hail-is/hail/statuses/46808cb224dbaa2d4fbae9f4fc90439e2eed8730"",; ""avatar_url"": ""https://avatars2.githubusercontent.com/u/106194?v=4"",; ""id"": 5728320639,; ""node_id"": ""MDEzOlN0YXR1c0NvbnRleHQ1NzI4MzIwNjM5"",; ""state"": ""success"",; ""description"": ""successful build"",; ""target_url"": ""https://storage.googleapis.com/hail-ci-0-1/ci/46808cb224dbaa2d4fbae9f4fc90439e2eed8730/038a6de7ce33b218b8d45160f224cae1feaf1c5a/index.html"",; ""context"": ""hail-ci-0-1"",; ""created_at"": ""2018-10-30T18:51:09Z"",; ""updated_at"": ""2018-10-30T18:51:09Z"",; ""creator"": {; ""login"": ""danking"", ...; }; },; ```. and before that:. ```; {; ""url"": ""https://api.github.com/repos/hail-is/hail/statuses/46808cb224dbaa2d4fbae9f4fc90439e2eed8730"",; ""avatar_url"": ""https://avatars2.githubusercontent.com/u/106194?v=4"",; ""id"": 5728220065,; ""node_id"": ""MDEzOlN0YXR1c0NvbnRleHQ1NzI4MjIwMDY1"",; ""state"": ""pending"",; ""description"": ""build 38 pending. target: 038a6de7ce33"",; ""target_url"": null,; ""context"": ""hail-ci-0-1"",; ""created_at"": ""2018-10-30T18:36:31Z"",; ""updated_at"": ""2018-10-30T18:36:31Z"",; ""creator"": {; ""login"": ""danking"", ...; }; },; ```. I don't understand what this Kubernetes state is, but this EOF thing is being incorrectly reported by batch to CI as an error. I cannot get the old batch pod logs.; ```; # k logs -l app=batch -p ; Error from server (BadRequest): previous terminated container ""batch"" in pod ""batch-deployment-769554dd84-kszwm"" not found. ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4685:1565,log,login,1565,https://hail.is,https://github.com/hail-is/hail/issues/4685,4,['log'],"['login', 'logs']"
Testability,m.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; u,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4018,Test,TestMethodWorker,4018,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,1,['Test'],['TestMethodWorker']
Testability,m.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:341); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:339); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; u,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4211,Test,TestMethodWorker,4211,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['Test'],['TestMethodWorker']
Testability,"m/#narrow/stream/123010-Hail-Query-0.2E2-support/topic/Other.20genome/near/397467764). The following is seemingly correct code but it doesn't work:; ```python3; import hail as hl. rgwheat = hl.ReferenceGenome('Wheat', ...). hl.init(default_reference=rgwheat); ```; The first problem is that the `@typecheck` on `hl.init`, `hl.init_spark`, etc. only allows a built-in reference genome. . Even if we relax that requirement, we encounter a deeper problem: creating the reference genome initializes Hail. In particular, [we call `Env.backend()`](https://github.com/hail-is/hail/blob/main/hail/python/hail/genetics/reference_genome.py#L117-L118) (which calls `Env.hc()`, which forces initialization) so that we can call `add_reference`. What does initialization mean? Historically, it meant connection to or starting a JVM/Spark process. In QoB/ServiceBackend, initialization just loads configurations, it doesn't really do anything irreversible. Regardless of what it does, we only allow initialization *once*. OK, so, there's two possible routes to fix this problem:; 1. Rewrite `ReferenceGenome.__init__` such that it does not initialize Hail. You have to decide how reference genomes are ultimately communicated to the backend. Do you hang a list of all created reference genomes off of the `ReferenceGenome` class? Do you require explicit registering a la `hl.register_reference`? The latter seems a bit silly. The former seems OK, but you could also ...; 2. Allow modification of the default reference after initialization. The default reference genome is just a field on the HailContext: `_default_ref` which is accessed through `hl.default_reference()`. Just modify `hl.default_reference` to *return* the reference with no arguments and *set* the reference with one argument. Now this works:. ```python3; import hail as hl; rgwheat = hl.ReferenceGenome('Wheat', ...); hl.default_reference(rgwheat); mt = hl.import_vcf('wheat.vcf'); ```. ### Version. 0.2.124. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13856:2067,log,log,2067,https://hail.is,https://github.com/hail-is/hail/issues/13856,1,['log'],['log']
Testability,"m/gruenich""><code>@​gruenich</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li><a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li><a href=""https://github.com/spkrka""><code>@​spkrka</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li><a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li><a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2808"">cbeust/testng#2808</a></li>; <li><a href=""https://github.com/melloware""><code>@​melloware</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li><a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/cbeust/testng/blob/master/CHANGES.txt"">org.testng:testng's changelog</a>.</em></p>; <blockquote>; <p>7.7.1; Fixed: GITHUB-2854: overloaded assertEquals methods do not work from Groovy (Krishnan Mahadevan)</p>; <p>7.7.0; Fixed: GITHUB-2852: [SECURITY] Fix Zip Slip Vulnerability (Jonathan Leitschuh); Fixed: GITHUB-2792: JUnitTestClass sets XmlTest as null when running JUnit 4 Tests usin",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:9066,test,testng,9066,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,m/jpadilla/pyjwt/issues/702) &amp;lt;https://github.com/jpadilla/pyjwt/pull/702&amp;gt;`__. `v2.2.0 &amp;lt;https://github.com/jpadilla/pyjwt/compare/2.1.0...2.2.0&amp;gt;`__; -----------------------------------------------------------------------. &amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt; ; &lt;/code&gt;&lt;/pre&gt;; &lt;/blockquote&gt;; &lt;p&gt;... (truncated)&lt;/p&gt;; &lt;/details&gt;; &lt;details&gt;; &lt;summary&gt;Commits&lt;/summary&gt;. &lt;ul&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/jpadilla/pyjwt/commit/83ff831a4d11190e3a0bed781da43f8d84352653&quot;&gt;&lt;code&gt;83ff831&lt;/code&gt;&lt;/a&gt; chore: update changelog&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/jpadilla/pyjwt/commit/4c1ce8fd9019dd312ff257b5141cdb6d897379d9&quot;&gt;&lt;code&gt;4c1ce8f&lt;/code&gt;&lt;/a&gt; chore: update changelog&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/jpadilla/pyjwt/commit/96f3f0275745c5a455c019a0d3476a054980e8ea&quot;&gt;&lt;code&gt;96f3f02&lt;/code&gt;&lt;/a&gt; fix: failing advisory test&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/jpadilla/pyjwt/commit/9c528670c455b8d948aff95ed50e22940d1ad3fc&quot;&gt;&lt;code&gt;9c52867&lt;/code&gt;&lt;/a&gt; Merge pull request from GHSA-ffqj-6fqr-9h24&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/jpadilla/pyjwt/commit/24b29adfebcb4f057a3cef5aaf35653bc0c1c8cc&quot;&gt;&lt;code&gt;24b29ad&lt;/code&gt;&lt;/a&gt; Update CHANGELOG.rst (&lt;a href=&quot;https://github-redirect.dependabot.com/jpadilla/pyjwt/issues/751&quot;&gt;#751&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/jpadilla/pyjwt/commit/31f5acb8fb3ec6cdfe2b1b0a4a8f329b5f3ca67f&quot;&gt;&lt;code&gt;31f5acb&lt;/code&gt;&lt;/a&gt; Replace various string interpolations with f-strings (&lt;a href=&quot;https://github-redirect.dependabot.com/jpadilla/pyjwt/issues/744&quot;&gt;#744&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/jpadilla/pyjwt/commit/5581a31c21de70444c116,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11866:12316,test,test,12316,https://hail.is,https://github.com/hail-is/hail/pull/11866,1,['test'],['test']
Testability,"m/saghul/aiodns/commit/a57968007a0e6f826e1a8a2160eade23c254bc42""><code>a579680</code></a> Updated README</li>; <li><a href=""https://github.com/saghul/aiodns/commit/efbbcd55493e11ff95cce7845ebe23438c4238aa""><code>efbbcd5</code></a> Release wheels and source to PyPI with GH actions</li>; <li><a href=""https://github.com/saghul/aiodns/commit/0c9ea6f60d5a9306b0c80e6ffea5ccc27c5fa5bd""><code>0c9ea6f</code></a> Try to make tests more resilient</li>; <li><a href=""https://github.com/saghul/aiodns/commit/a1d4d550acc573f563196af73568c5227a1cfe20""><code>a1d4d55</code></a> Don't build universal wheels</li>; <li><a href=""https://github.com/saghul/aiodns/commit/1f84d1a0267e5629ead8355816d47d8ae892ef24""><code>1f84d1a</code></a> Migrate CI to GH Actions</li>; <li><a href=""https://github.com/saghul/aiodns/commit/7b58bcb798d32e07bba7391dd98c7405e2523095""><code>7b58bcb</code></a> Bump version to 3.0.0</li>; <li><a href=""https://github.com/saghul/aiodns/commit/5d94ab0b9f81ee1feabee6a222d9352d244d76f2""><code>5d94ab0</code></a> Fix TXT CHAOS test</li>; <li><a href=""https://github.com/saghul/aiodns/commit/7bb002ea8eee1a8c1651f21d5ae0350857f00233""><code>7bb002e</code></a> Add support for CAA queries</li>; <li><a href=""https://github.com/saghul/aiodns/commit/c81387fd26d2e1c9bdcb85f7d12a13cda1c389d4""><code>c81387f</code></a> Support Python &gt;= 3.6</li>; <li>Additional commits viewable in <a href=""https://github.com/saghul/aiodns/compare/aiodns-2.0.0...aiodns-3.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aiodns&package-manager=pip&previous-version=2.0.0&new-version=3.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11570:3400,test,test,3400,https://hail.is,https://github.com/hail-is/hail/pull/11570,1,['test'],['test']
Testability,"m/users/hail-ci-test/subscriptions"",; ""organizations_url"": ""https://api.github.com/users/hail-ci-test/orgs"",; ""repos_url"": ""https://api.github.com/users/hail-ci-test/repos"",; ""events_url"": ""https://api.github.com/users/hail-ci-test/events{/privacy}"",; ""received_events_url"": ""https://api.github.com/users/hail-ci-test/received_events"",; ""type"": ""Organization"",; ""site_admin"": false; },; ""html_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""description"": null,; ""fork"": false,; ""url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7"",; ""forks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/forks"",; ""keys_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/keys{/key_id}"",; ""collaborators_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/collaborators{/collaborator}"",; ""teams_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/teams"",; ""hooks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/hooks"",; ""issue_events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/events{/number}"",; ""events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/events"",; ""assignees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/assignees{/user}"",; ""branches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/tags"",; ""blobs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/blobs{/sha}"",; ""git_tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/trees{/sha}"",; ""statuses_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:2688,test,test,2688,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"m: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 0.2. ### What you did:; ```; mt = hl.read_matrix_table('gs://...'); mt = mt.filter_cols(mt.used_in_pca_calculation); print(mt.count_cols()); ```; The MatrixTable has a lot of row and column annotations. `mt.used_in_pca_calculation` is a Boolean column annotation. ### What went wrong (all error messages here, including the full java stack trace):; ```; Traceback (most recent call last):; File ""/tmp/8d5cc778-fdc7-4210-a60b-5efd1f67c45f/subset_genotype_pca.py"", line 8, in <module>; print(mt.count_cols()); File ""/home/hail/hail.zip/hail/matrixtable.py"", line 1950, in count_cols; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/home/hail/hail.zip/hail/utils/java.py"", line 206, in deco; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.expr.MatrixValue.filterSamplesKeep(Relational.scala:110); 	at is.hail.expr.MatrixValue.filterCols(Relational.scala:133); 	at is.hail.expr.FilterCols.execute(Relational.scala:333); 	at is.hail.variant.MatrixTable.value$lzycompute(MatrixTable.scala:536); 	at is.hail.variant.MatrixTable.value(MatrixTable.scala:534); 	at is.hail.variant.MatrixTable.x$16$lzycompute(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.x$16(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.colValues$lzycompute(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.colValues(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.numCols(MatrixTable.scala:2378); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(M",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3173:1092,Assert,AssertionError,1092,https://hail.is,https://github.com/hail-is/hail/issues/3173,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"mBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/rows/rows/parts/,{""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{`the entries! [877f12a8827e18f61222c6c8c5fb04a8]`:+EArray[+EBaseStruct{GT:EInt32,AD:EArray[+EInt32],DP:EInt32,GQ:EInt32,PL:EArray[+EInt32]}]}"",""_vType"":""Struct{`the entries! [877f12a8827e18f61222c6c8c5fb04a8]`:Array[Struct{GT:Call,AD:Array[Int32],DP:Int32,GQ:Int32,PL:Array[Int32]}]}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/entries/rows/parts/,Some((gs://danking/workshop-test/1kg.mt/index/,+PCStruct{locus:+PCLocus(GRCh37),alleles:+PCArray[+PCString]})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:9839,test,test,9839,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['test'],['test']
Testability,"mCitybehindaProxyServer):. ``` apache; <IfModule mod_ssl.c>; <VirtualHost *:443>; # The ServerName directive sets the request scheme, hostname and port that; # the server uses to identify itself. This is used when creating; # redirection URLs. In the context of virtual hosts, the ServerName; # specifies what hostname must appear in the request's Host: header to; # match this virtual host. For the default virtual host (this file) this; # value is not decisive as it is used as a last resort host regardless.; # However, you must set it for any further virtual host explicitly.; ServerName hail.is; ServerAlias www.hail.is. ServerAdmin webmaster@localhost; DocumentRoot /var/www/html. RedirectMatch 404 /\.git. # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,; # error, crit, alert, emerg.; # It is also possible to configure the loglevel for particular; # modules, e.g.; #LogLevel info ssl:warn. ErrorLog ${APACHE_LOG_DIR}/error.log; CustomLog ${APACHE_LOG_DIR}/access.log combined. # For most configuration files from conf-available/, which are; # enabled or disabled at a global level, it is possible to; # include a line for only one particular virtual host. For example the; # following line enables the CGI configuration for this host only; # after it has been globally disabled with ""a2disconf"".; #Include conf-available/serve-cgi-bin.conf; SSLCertificateFile /etc/letsencrypt/live/hail.is/fullchain.pem; SSLCertificateKeyFile /etc/letsencrypt/live/hail.is/privkey.pem; Include /etc/letsencrypt/options-ssl-apache.conf; </VirtualHost>. <VirtualHost *:443>; ServerName ci.hail.is; ServerAdmin webmaster@localhost. LoadModule proxy_module /usr/lib/apache2/modules/mod_proxy.so; LoadModule proxy_http_module /usr/lib/apache2/modules/mod_proxy_http.so; LoadModule headers_module /usr/lib/apache2/modules/mod_headers.so; LoadModule proxy_wstunnel_module /usr/lib/apache2/modules/mod_proxy_wstunnel.so. ProxyRequests Off; ProxyPreserveHost On; ProxyPass /app/subscriptions ws:",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/674#issuecomment-243899170:1525,log,log,1525,https://hail.is,https://github.com/hail-is/hail/issues/674#issuecomment-243899170,1,['log'],['log']
Testability,"made lmm python test deterministic, fixed bug in lmmreg and lazyFilterWith",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1550:16,test,test,16,https://hail.is,https://github.com/hail-is/hail/pull/1550,1,['test'],['test']
Testability,"mahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2848"">cbeust/testng#2848</a></li>; <li>Deprecate support for running JUnit tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2849"">cbeust/testng#2849</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/gruenich""><code>@​gruenich</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li><a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li><a href=""https://github.com/spkrka""><code>@​spkrka</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li><a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li><a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2808"">cbeust/testng#2808</a></li>; <li><a href=""https://github.com/melloware""><code>@​melloware</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li><a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Source",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:8644,test,testng,8644,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"make LocalBroadcastValue serializable.; make writeReference public. Gets the local tests to 419 passing:. > ====== 344 failed, 419 passed, 75 skipped, 16 warnings in 362.06 seconds =======",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9157:83,test,tests,83,https://hail.is,https://github.com/hail-is/hail/pull/9157,1,['test'],['tests']
Testability,make a typechecking safety mode to use in VSM tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1858:46,test,tests,46,https://hail.is,https://github.com/hail-is/hail/issues/1858,1,['test'],['tests']
Testability,make docs-no-test does not work,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8940:13,test,test,13,https://hail.is,https://github.com/hail-is/hail/issues/8940,1,['test'],['test']
Testability,make failing data providers report as failed tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3951:45,test,tests,45,https://hail.is,https://github.com/hail-is/hail/issues/3951,1,['test'],['tests']
Testability,"make test doesn't work on local, so putting up for CI to run it",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7601:5,test,test,5,https://hail.is,https://github.com/hail-is/hail/pull/7601,1,['test'],['test']
Testability,man these tests take a while in ci,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7751#issuecomment-567170120:10,test,tests,10,https://hail.is,https://github.com/hail-is/hail/pull/7751#issuecomment-567170120,1,['test'],['tests']
Testability,"march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/include -I/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/include/darwin build/davies.o build/ibs.o build/Decoder.o build/Encoder.o build/Logging.o build/NativeCodeSuite.o build/NativeLongFunc.o build/NativeModule.o build/NativePtr.o build/NativeStatus.o build/ObjectArray.o build/PartitionIterators.o build/Region.o build/Upcalls.o build/Hadoop.o -o lib/darwin/libhail.dylib; > Building 33% > :compileScala. :compileScala; :processResources; :classes; :compileTestJava UP-TO-DATE; :compileTestScala; :processTestResources UP-TO-DATE; :testClasses; :test; Running test: Test method testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))) PASSED; Running test: Test method testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))) PASSED; Running test: Test method testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0))",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925:2748,test,test,2748,https://hail.is,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925,1,['test'],['test']
Testability,"mature product from Intel. Production users include JD.com. ### User-level access control ; An orthogonal issue that still needs to be addressed. [RBAC Authorization - Kubernetes](https://kubernetes.io/docs/reference/access-authn-authz/rbac/). *TODO*. ### Related: Firecracker; Interesting project, similar to Kata and gVisor in its isolation properties. Doesn’t work with Kubernetes, replicates some Kube functionality.; * [Announcing the Firecracker Open Source Technology: Secure and Fast microVM for Serverless Computing | AWS Open Source Blog](https://aws.amazon.com/blogs/opensource/firecracker-open-source-secure-fast-microvm-serverless/); * Potentially lower runtime cost that Kata; * Written in Rust :). ### Alternatives; [Nabla containers: a new approach to container isolation · Nabla Containers](https://nabla-containers.github.io); * Unclear how good containment is. Worth exploring. ### Performance; [Runtime performance benchmark result. containerd vs CRI-containerd vs CRI-O · GitHub](https://gist.github.com/kunalkushwaha/66629a90e0f8f5cc5dc512ef1c346f2f). [Measuring the Horizontal Attack Profile of Nabla Containers](https://outlookseries.com/A0784/Infrastructure/3868.htm); * 10-30% cost for networking-heavy operations. ### Example implementations of sandboxed containers; https://github.com/kata-containers/documentation/blob/master/how-to/how-to-use-k8s-with-cri-containerd-and-kata.md. [CRI installation - Kubernetes](https://kubernetes.io/docs/setup/cri/). ### References:; [Kata Containers - Why Kata Containers doesn’t replace Kubernetes: A Kata Containers explainer](https://katacontainers.io/posts/why-kata-containers-doesnt-replace-kubernetes/). [Kubernetes Container Runtimes - kubedex.com](https://kubedex.com/kubernetes-container-runtimes/). [GitHub - containerd/cri: Containerd Plugin for Kubernetes Container Runtime Interface](https://github.com/containerd/cri). https://github.com/kubernetes/community/blob/master/contributors/devel/container-runtime-interface.md",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5111:2271,sandbox,sandboxed,2271,https://hail.is,https://github.com/hail-is/hail/issues/5111,1,['sandbox'],['sandboxed']
Testability,"me time reading about this over the last ~month, and besides relatively consistent messaging about the messiness of Python's ecosystem, performance and user experience are deeply important to me, so when I read things like:. ""I don’t think performance matter. I think asgi does not matter in 2018 in general. Usability and complexity matters. Python is not very good choice for high performance system in any case...For me high performance python is a fantasy, but i don’t do aiohttp/python anymore. In the end it is up to @asvetlov"". from one of the creators of aiohttp, I'm not encouraged about the long-term health of the project. https://github.com/aio-libs/aiohttp/issues/2902. In the second branch related to this pull request, linked above, I chose Starlette, and it is a thin abstraction, nearly identical performance, over Uvicorn + httptools, which were both written by Yury Selivanov, the asyncio person I mention above. Starlette and Uvicorn are currently the fastest options, (Sanic isn't tested), by a relatively large margin, on Techempower's benchmarks. If there is a reference standard benchmark of http library performance, Techempower is it: https://www.techempower.com/benchmarks/#section=data-r17 . Starlette is something like base Go performance (though 1/5-1/10th the performance of Go's fasthttp library for simple responses, and much closer for anything involving database calls). Sanic also uses httptools and uvloop, but has more stuff.. so yeah maybe a bit slower than Starlette, or not, but the diff will probably be small. Regarding the benchmark you linked, it is benchmarking the power of sleep. There is something deeply wrong with their results. Sanic has 1800 timeouts, vs 200 for aiohttp, and 3x the connection errors. Fine, so Sanic is super slow. But look at their non-db tests. Sanic is >2x as fast, 0 timeouts. They aren't using anything Sanic specific to query the database, and both use the same event loop. Adding asyncio Postgres to two programs that funda",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030:2324,test,tested,2324,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030,4,"['benchmark', 'test']","['benchmarks', 'tested']"
Testability,"me(t._jt.toDF(Env.hc()._jsql_context), Env.sql_context()); 66 ; 67 def to_pandas(self, t, flatten):. ~/anaconda3/lib/python3.6/site-packages/py4j/java_gateway.py in __call__(self, *args); 1255 answer = self.gateway_client.send_command(command); 1256 return_value = get_return_value(; -> 1257 answer, self.gateway_client, self.target_id, self.name); 1258 ; 1259 for temp_arg in temp_args:. ~/anaconda3/lib/python3.6/site-packages/hail/utils/java.py in deco(*args, **kwargs); 225 raise FatalError('%s\n\nJava stack trace:\n%s\n'; 226 'Hail version: %s\n'; --> 227 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; 228 except pyspark.sql.utils.CapturedException as e:; 229 raise FatalError('%s\n\nJava stack trace:\n%s\n'. FatalError: AssertionError: assertion failed: type mismatch:; name: global; actual: Struct{bn:Struct{n_populations:Int32,n_samples:Int32,n_variants:Int32,n_partitions:Int32,pop_dist:Array[Int32],fst:Array[Float64],mixture:Boolean},__uid_882:Array[Struct{sample_idx:Int32,pop:Int32,s:String}]}; expect: Struct{bn:Struct{n_populations:Int32,n_samples:Int32,n_variants:Int32,n_partitions:Int32,pop_dist:Array[Int32],fst:Array[Float64],mixture:Boolean},__cols:Array[Struct{sample_idx:Int32,pop:Int32,s:String}]}. Java stack trace:; is.hail.utils.HailException: Error while typechecking IR:; (MakeStruct; (bn; (GetField bn; (Ref global)))); 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:11); 	at is.hail.utils.package$.fatal(package.scala:26); 	at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:16); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:45); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:32); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:77); 	at is.hail.expr.ir.TableMapGlobals$$anonfun$38.apply(TableIR.scala:856); 	at is.hail.expr.ir.TableMapGlobals$$anonfun$38.apply(TableIR.scala:846); 	at is.hail.utils.package$.using(package.scala:587); 	at is.hail.annotations.Region$.scoped(Region.scala:13); 	at is.hail.expr.ir",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5212:2611,Assert,AssertionError,2611,https://hail.is,https://github.com/hail-is/hail/issues/5212,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"me.datetime</code> using <code>tzinfo</code> that; are <code>zoneinfo.ZoneInfo</code>.</li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Fix invalid indexing in line and column number reporting in; <code>JSONDecodeError</code>.</li>; <li>Fix <code>orjson.OPT_STRICT_INTEGER</code> not raising an error on; values exceeding a 64-bit integer maximum.</li>; </ul>; <h2>3.6.5 - 2021-12-05</h2>; <h3>Fixed</h3>; <ul>; <li>Fix build on macOS aarch64 CPython 3.10.</li>; <li>Fix build issue on 32-bit.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ijl/orjson/commit/aee8a9fed45f84d227cf2cb7102656aa65a4890a""><code>aee8a9f</code></a> 3.6.7</li>; <li><a href=""https://github.com/ijl/orjson/commit/622cd7b1167262ffe458f6a2c15ec239f015d174""><code>622cd7b</code></a> Add special casing for deserializing empty objects, lists and strings</li>; <li><a href=""https://github.com/ijl/orjson/commit/5da14a00fed93dc55a5e01e4eba0e3d77b0a89fc""><code>5da14a0</code></a> Add benchmark for loading empty objects</li>; <li><a href=""https://github.com/ijl/orjson/commit/12b867c7bfbd9c6404b2f2e859c134822af05e73""><code>12b867c</code></a> cargo update, nightly-2022-02-13</li>; <li><a href=""https://github.com/ijl/orjson/commit/ab633b6d0fa064b0c4b248bee8dc1062f0fe9d32""><code>ab633b6</code></a> Build x86_64 musllinux wheels (<a href=""https://github-redirect.dependabot.com/ijl/orjson/issues/242"">#242</a>)</li>; <li><a href=""https://github.com/ijl/orjson/commit/8bf078b27e7479f2cfbea1bac7155d4449ce7e30""><code>8bf078b</code></a> Cross compile wheels for armv7l on GitHub Actions (<a href=""https://github-redirect.dependabot.com/ijl/orjson/issues/241"">#241</a>)</li>; <li><a href=""https://github.com/ijl/orjson/commit/c196f0e55bd51d3693d381ccc06f2fd4b5443d86""><code>c196f0e</code></a> 3.6.6</li>; <li><a href=""https://github.com/ijl/orjson/commit/81890b097f7a479d1c1e697d21467952e0be24a9""><code>81890b0</code></a> Fix 53-bit error on value between isize and usize</li>;",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11572:2841,benchmark,benchmark,2841,https://hail.is,https://github.com/hail-is/hail/pull/11572,1,['benchmark'],['benchmark']
Testability,"me/include -I/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/include/darwin -MD -MF build/Hadoop.d -MT build/Hadoop.o -c Hadoop.cpp; c++ -fvisibility=default -dynamiclib -Wl,-undefined,dynamic_lookup -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/include -I/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/include/darwin build/davies.o build/ibs.o build/Decoder.o build/Encoder.o build/Logging.o build/NativeCodeSuite.o build/NativeLongFunc.o build/NativeModule.o build/NativePtr.o build/NativeStatus.o build/ObjectArray.o build/PartitionIterators.o build/Region.o build/Upcalls.o build/Hadoop.o -o lib/darwin/libhail.dylib; > Building 33% > :compileScala. :compileScala; :processResources; :classes; :compileTestJava UP-TO-DATE; :compileTestScala; :processTestResources UP-TO-DATE; :testClasses; :test; Running test: Test method testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))) PASSED; Running test: Test method testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))) PASSED; Running test: Test method testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,i",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925:2480,test,testClasses,2480,https://hail.is,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925,5,"['Test', 'test']","['Test', 'test', 'testClasses', 'testForwardingOps']"
Testability,"mentation; 3b. Finish authenticated GraphQL V4 scorecard implementation; 4. Batch; 4a: Setup dev batch endpoint; 4b: Call batch endpoint (no auth), and return any data; 4c: List all available jobs; * By querying Batch api, or Kubernetes directly; 4d: Receive current status of 1 job; 4e: Authentication; 4f: Polish (longest step): make interacting with batch achievable within perceived 16ms.; * goal: subscribe to events in web socket; * may want to save user job state in a Hail-controlled database (possible to use Firebase or Mongo, may prefer relational db, maybe Postgres or MySQL).; 4other: Figure out state question (sufficient to use Kubernetes); 5. Basic notebook interface.; 6. Connect websocket logic (non-GraphQL); 7. Authenticate web socket via Oauth2; 8. Incorporate GraphQL subscriptions (first: GitHub API); 9. Write tests; 10. Mock GraphQL endpoints; 11. Integrate web and api server bits into CI (maybe should be prioritized earlier...I prefer to get draft of major functions done first; am new to writing tests for React/Node). ## Near-term goals (<= 6 mo); 1. Upload, download; 2. Launch clusters, pay for them; 3. ?. ## Longer-term goals; 1. Much simpler interface to Hail. I would like steps that can be performed without programming to be done so. I would prefer fasta->variant filtering to be done as in Bystro (at least from the interface standpoint), i.e without opening up a notebook. Common analyses pipelines should also be possible without any interaction with a python notebook: GWAS, rare-variant (SKAT) analyses have, it seems, relatively few permutations. Those should be behind UI primitives. At each stage of a ; 2. Social network bits: users should be able to share job state with other users (requested by Bystro users on 22q consortium project) at the least.; 3. Record job state using something like Merkle tree. Checkout state. Aka ""blockchain""; 4. Cooperative analysis: provide system for people to validate analyses; ; Basic idea: . 1) People donate computa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:7944,test,tests,7944,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['test'],['tests']
Testability,merged into https://github.com/hail-is/hail/pull/11599 because I need both fixes together to pass all the tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11589#issuecomment-1073060132:106,test,tests,106,https://hail.is,https://github.com/hail-is/hail/pull/11589#issuecomment-1073060132,1,['test'],['tests']
Testability,"mes (alpha feature with the new <code>CSIStorageCapacity</code> feature gate, only works for CSI drivers and depends on support for the feature in a CSI driver deployment) (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92387"">kubernetes/kubernetes#92387</a>, <a href=""https://github.com/pohly""><code>@​pohly</code></a>) [SIG API Machinery, Apps, Auth, Scheduling, Storage and Testing]</li>; <li>Seccomp support has graduated to GA. A new <code>seccompProfile</code> field is added to pod and container securityContext objects. Support for <code>seccomp.security.alpha.kubernetes.io/pod</code> and <code>container.seccomp.security.alpha.kubernetes.io/...</code> annotations is deprecated, and will be removed in v1.22. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91381"">kubernetes/kubernetes#91381</a>, <a href=""https://github.com/pjbgf""><code>@​pjbgf</code></a>) [SIG Apps, Auth, Node, Release, Scheduling and Testing]</li>; <li>ServiceAppProtocol feature gate is now beta and enabled by default, adding new AppProtocol field to Services and Endpoints. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/90023"">kubernetes/kubernetes#90023</a>, <a href=""https://github.com/robscott""><code>@​robscott</code></a>) [SIG Apps and Network]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/bcfd4ed2ec3b2f503adc4f2e681f9404216d302c""><code>bcfd4ed</code></a> chore: update version</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/37f5d63425976b463bb83348d592859a82f2b5af""><code>37f5d63</code></a> chore: update changelog</li>; <li><a href=""https://github.com/tomplus/kubernetes_asyncio/commit/ef2fe15d3473a38f1c13558acf05631d909560ce""><code>ef2fe15</code></a> fix: watch returns raw_object if detection of returned objects fail (<a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:13820,Test,Testing,13820,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,"mespace, **kwargs); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/apis/core_v1_api.py"", line 18644, in read_namespaced_pod_log_with_http_info; collection_formats=collection_formats); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/api_client.py"", line 334, in call_api; _return_http_data_only, collection_formats, _preload_content, _request_timeout); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/api_client.py"", line 168, in __call_api; _request_timeout=_request_timeout); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/api_client.py"", line 355, in request; headers=headers); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/rest.py"", line 231, in GET; query_params=query_params); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/rest.py"", line 222, in request; raise ApiException(http_resp=r); INFO | 2019-06-25 12:37:07,703 | batch.py | mark_complete:501 | no logs for batch-2554-job-4-main-cc8d4 due to previous error, rescheduling pod; INFO | 2019-06-25 12:37:07,730 | batch.py | _create_pod:205 | created pod name: batch-2554-job-4-main-vsk7h for job (2554, 4), task main; INFO | 2019-06-25 12:37:07,788 | batch.py | update_job_with_pod:976 | update job (2554, 4) with pod batch-2554-job-4-main-vsk7h; INFO | 2019-06-25 12:37:07,846 | batch.py | update_job_with_pod:976 | update job (2554, 4) with pod batch-2554-job-4-main-vsk7h; INFO | 2019-06-25 12:37:07,881 | web_log.py | log:233 | 10.32.14.87 [25/Jun/2019:12:37:07 +0000] ""GET /api/v1alpha/batches/2669/jobs/1 HTTP/1.1"" 200 208 ""-"" ""Python/3.6 aiohttp/3.5.4""; INFO | 2019-06-25 12:37:07,906 | batch.py | update_job_with_pod:976 | update job (2554, 4) with pod batch-2554-job-4-main-vsk7h; ```. The new pod:; ```; + kubectl get pod batch-2554-job-4-main-vsk7h -n batch-pods -o yaml; apiVersion: v1; kind: Pod; metadata:; creationTimestamp: ""2019-06-25T12:37:07Z""; generateName: batch-2554-job-4-main-; labels:; app: batch-job; hail.is/batch-instan",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6466#issuecomment-505429649:10990,log,logs,10990,https://hail.is,https://github.com/hail-is/hail/issues/6466#issuecomment-505429649,1,['log'],['logs']
Testability,"meters</h2>; <ul><li>x : int First number to add.</li><li>y : int Second number to add.</li></ul>; <h2>Returns</h2>; <a href=""https://python3.org/..../int"">int</a>; {% endraw %}; </div>; {% include ""nav-bottom.html"" %}; {% include ""base-foot.html"" %}; </body>; </html>. ```. The `website` service/k8s-pod/program ""serves the website"" wherein it *runs jinja2 again* and finally produces the HTML that you see on the website. That looks vaguely like this:. ```; <!DOCTYPE html>; <html lang=""en"">; <head>; <title>Hail | {% block title %}{% endblock %}</title>. <link rel=""stylesheet"" href=""/static/css/style.css?v=0.2.64-1ef70187dc78"">; <script src=""https://kit.fontawesome.com/7cdc07e2ca.js"" crossorigin=""anonymous""></script>; <!-- more Hail stuff -->. <link href=""_static/sphinx-style.css"">; <!-- more sphinx stuff here -->; </head>; <body>; <nav class=""navbar align-content-start justify-content-start sticky"" id=""hail-navbar"">; <div class=""container-fluid align-content-start justify-content-start d-flex"" id=""hail-container-fluid"">; <div class=""navbar-header"" id=""hail-navbar-header"">; <a class=""active"" id=""hail-navbar-brand"" href=""/"">; <img alt=""Hail"" height=""30"" id=""logo"" src=""/static/hail-logo-cropped-sm-opt.png"">; </a>; <button type=""button"" id=""navbar-toggler"" class=""navbar-toggler"" data-toggle=""collapse"" data-target=""#hail-navbar-collapse"" aria-expanded=""false"">; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; <span class=""icon-bar""></span>; </button>; </div>; <div class=""collapse navbar-collapse"" id=""hail-navbar-collapse"">; <span class=""algolia-autocomplete"" ...></span>; <ul class=""nav navbar-nav navbar-right"" id=""hail-menu"">; <li class=""nav-item""><a href=""/docs/0.2/index.html"">Docs</a></li>; <!-- more hail pages -->; </ul>; </div>; </div>; </nav>. <div id=""main'>; <h1><code>my_function</code></h1>; <p>Adds two numbers!</p>; <h2>Parameters</h2>; <ul><li>x : int First number to add.</li><li>y : int Second number to add.</li></ul>; <h2>Returns</h2>; <a href=""h",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10278#issuecomment-814433087:2689,log,logo,2689,https://hail.is,https://github.com/hail-is/hail/pull/10278#issuecomment-814433087,2,['log'],"['logo', 'logo-cropped-sm-opt']"
Testability,"me}, timeout=120); File ""/usr/lib/python3.6/site-packages/requests/api.py"", line 116, in post; return request('post', url, data=data, json=json, **kwargs); File ""/usr/lib/python3.6/site-packages/requests/api.py"", line 60, in request; return session.request(method=method, url=url, **kwargs); File ""/usr/lib/python3.6/site-packages/requests/sessions.py"", line 524, in request; resp = self.send(prep, **send_kwargs); File ""/usr/lib/python3.6/site-packages/requests/sessions.py"", line 637, in send; r = adapter.send(request, **kwargs); File ""/usr/lib/python3.6/site-packages/requests/adapters.py"", line 529, in send; raise ReadTimeout(e, request=request); requests.exceptions.ReadTimeout: HTTPConnectionPool(host='127.0.0.1', port=5000): Read timed out. (read timeout=120); INFO | 2018-10-23 03:58:08,124 | server.py | run_forever:416 | run_forever: run target kube_event_loop; INFO | 2018-10-23 03:59:30,729 | server.py | mark_complete:175 | wrote log for job 153 to logs/job-153.log; INFO | 2018-10-23 03:59:30,730 | server.py | set_state:141 | job 153 changed state: Created -> Complete; INFO | 2018-10-23 03:59:30,730 | server.py | mark_complete:184 | job 153 complete, exit_code 2; INFO | 2018-10-23 03:59:30,737 | _internal.py | _log:88 | 127.0.0.1 - - [23/Oct/2018 03:59:30] ""POST /pod_changed HTTP/1.1"" 204 -; INFO | 2018-10-23 03:59:30,806 | _internal.py | _log:88 | 10.56.142.33 - - [23/Oct/2018 03:59:30] ""GET /jobs HTTP/1.1"" 200 -; INFO | 2018-10-23 03:59:30,815 | _internal.py | _log:88 | 127.0.0.1 - - [23/Oct/2018 03:59:30] ""POST /pod_changed HTTP/1.1"" 204 -; INFO | 2018-10-23 03:59:30,816 | _internal.py | _log:88 | 127.0.0.1 - - [23/Oct/2018 03:59:30] ""POST /pod_changed HTTP/1.1"" 204 -; INFO | 2018-10-23 03:59:30,817 | server.py | refresh_k8s_state:385 | started k8s state refresh; INFO | 2018-10-23 03:59:31,183 | server.py | _create_pod:80 | created pod name: job-99-f4gwv for job 99; INFO | 2018-10-23 03:59:31,191 | server.py | _create_pod:80 | created pod name: job-150-h6snc for",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4608#issuecomment-432083038:2195,log,log,2195,https://hail.is,https://github.com/hail-is/hail/issues/4608#issuecomment-432083038,1,['log'],['log']
Testability,minor nitpick---can we move the logic from TableMapIRNew back into TableMapRows.execute and delete TableMapIRNew? I'd prefer to keep the locations of the execute logic consistent.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7654#issuecomment-562222241:32,log,logic,32,https://hail.is,https://github.com/hail-is/hail/pull/7654#issuecomment-562222241,2,['log'],['logic']
Testability,minor speed ups in partitioningsuite.testWriteRead,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3451:37,test,testWriteRead,37,https://hail.is,https://github.com/hail-is/hail/pull/3451,1,['test'],['testWriteRead']
Testability,"missed during testing: there is a brief interval where z-height of placeholder navbar is smaller than the sphinx side nav element, causing a flash from blue to white after load.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8546:14,test,testing,14,https://hail.is,https://github.com/hail-is/hail/pull/8546,1,['test'],['testing']
Testability,missing IR tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4014:11,test,tests,11,https://hail.is,https://github.com/hail-is/hail/issues/4014,1,['test'],['tests']
Testability,missing MatrixIR tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4016:17,test,tests,17,https://hail.is,https://github.com/hail-is/hail/issues/4016,1,['test'],['tests']
Testability,missing TableIR tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4015:16,test,tests,16,https://hail.is,https://github.com/hail-is/hail/issues/4015,1,['test'],['tests']
Testability,"mmary:; The correct default scala version for Spark 3.3.0 is 2.12.15; The main change is in `hail/build.gradle` the remaining is just for consistency. References:; https://github.com/apache/spark/blob/v3.3.0/pom.xml#L3527 (show scala version pinned by Spark); https://github.com/hail-is/hail/blob/0.2.115/hail/build.gradle#L45-L50. This mismatch causing an issue in our environment when opening spark-shell because hail-all-spark.jar is bundled with scala-reflect that has missing classes. The ideal solution is to remove scala language packages as part of the shadow jar because these already come with the Spark distribution, but proposing to have them in-sync as a workaround for now. ```; $ spark-shell; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; ...; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Exception in thread ""main"" java.lang.NoSuchMethodError: 'scala.reflect.internal.settings.MutableSettings scala.reflect.internal.settings.MutableSettings$.SettingsOps(scala.reflect.internal.settings.MutableSettings)'; at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$1(ILoop.scala:914); at scala.tools.nsc.interpreter.ILoop.mkReader$1(ILoop.scala:920); at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$4(ILoop.scala:926); at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$3(ILoop.scala:926); at scala.tools.nsc.interpreter.ILoop.chooseReader(ILoop.scala:926); at org.apache.spark.repl.SparkILoop.$anonfun$process$1(SparkILoop.scala:138); ...; ```. The error is caused by the change in between 2.12.13 and 2.12.15 in the scala-reflect package that has an additional implicit class:; https://github.com/scala/scala/blob/v2.12.13/src/reflect/scala/reflect/inte",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12951:1001,log,log,1001,https://hail.is,https://github.com/hail-is/hail/pull/12951,1,['log'],['log']
Testability,"mmary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/werkzeug/blob/main/CHANGES.rst"">werkzeug's changelog</a>.</em></p>; <blockquote>; <h2>Version 2.2.3</h2>; <p>Released 2023-02-14</p>; <ul>; <li>Ensure that URL rules using path converters will redirect with strict slashes when; the trailing slash is missing. :issue:<code>2533</code></li>; <li>Type signature for <code>get_json</code> specifies that return type is not optional when; <code>silent=False</code>. :issue:<code>2508</code></li>; <li><code>parse_content_range_header</code> returns <code>None</code> for a value like <code>bytes */-1</code>; where the length is invalid, instead of raising an <code>AssertionError</code>. :issue:<code>2531</code></li>; <li>Address remaining <code>ResourceWarning</code> related to the socket used by <code>run_simple</code>.; Remove <code>prepare_socket</code>, which now happens when creating the server. :issue:<code>2421</code></li>; <li>Update pre-existing headers for <code>multipart/form-data</code> requests with the test; client. :issue:<code>2549</code></li>; <li>Fix handling of header extended parameters such that they are no longer quoted.; :issue:<code>2529</code></li>; <li><code>LimitedStream.read</code> works correctly when wrapping a stream that may not return; the requested size in one <code>read</code> call. :issue:<code>2558</code></li>; <li>A cookie header that starts with <code>=</code> is treated as an empty key and discarded,; rather than stripping the leading <code>==</code>.</li>; <li>Specify a maximum number of multipart parts, default 1000, after which a; <code>RequestEntityTooLarge</code> exception is raised on parsing. This mitigates a DoS; attack where a larger number of form/file parts would result in disproportionate; resource use.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/werkzeug/commit/22a254fca2ad0130adbbcbd11d3de51bcb04a08b""><code>22a25",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12703:2165,test,test,2165,https://hail.is,https://github.com/hail-is/hail/pull/12703,1,['test'],['test']
Testability,"mmit/72d199d40689cb0a83f2b911044ab0ed9f6cc08e""><code>72d199d</code></a> Fix error in example</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/44e60f51bdb1ecfc22fa8bc87e8d025f2f17cd90""><code>44e60f5</code></a> Minor changes to typing. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/672"">#672</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/bf9a5f0b87470dd145cff326b0b05f898f775d94""><code>bf9a5f0</code></a> Fix session resetting before expiry. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/671"">#671</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/36b8a0a5ed2caaaba9d5d3ece8aaf03ca45b6c34""><code>36b8a0a</code></a> Allow passing Fernet to Encrypted Cookie Storage (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/448"">#448</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/984decc496fe92e053c14949c8d3a60bacd62426""><code>984decc</code></a> Test on Python up to 3.10 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/634"">#634</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/936f76351450066903002d60286110007310a44f""><code>936f763</code></a> Bump aiomcache from 0.6.0 to 0.7.0 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/665"">#665</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/29ddff39290f4e2fbc7b9feb94eb622763e156e2""><code>29ddff3</code></a> Bump pytest-aiohttp from 0.3.0 to 1.0.3 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/668"">#668</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/3bc517092aff39330f2f96315e6f542e23415831""><code>3bc5170</code></a> Bump multidict from 5.2.0 to 6.0.2 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/670"">#670</a>)</li>; <li>Additional commits ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11544:3322,Test,Test,3322,https://hail.is,https://github.com/hail-is/hail/pull/11544,2,['Test'],['Test']
Testability,"mmit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:2505,log,logging,2505,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"mmit/eeb2f3b8c7c115337f9d71166aca91db732c931e""><code>eeb2f3b</code></a> [Storage] Add missing SAS permissions to Storage packages (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23179"">#23179</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/038b35f890d2363edc1254ac2ee61918b2b84b66""><code>038b35f</code></a> [Storage] Fix bug with <code>ignore_read_only</code> in <code>start_copy_from_url()</code> (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23141"">#23141</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/5166ee94acdb80f2217a1ce694e169ea2b33219d""><code>5166ee9</code></a> [Storage] Fix <code>upload_blob()</code> from an OS pipe on Linux (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23211"">#23211</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/84cbec033ed8e4df87f44a82dcebb96aa19deac0""><code>84cbec0</code></a> [Storage] Adjust some file-datalake test recordings (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23147"">#23147</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/Azure/azure-sdk-for-python/compare/azure-storage-blob_12.8.1...azure-storage-blob_12.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=azure-storage-blob&package-manager=pip&previous-version=12.8.1&new-version=12.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and opti",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11610:5498,test,test,5498,https://hail.is,https://github.com/hail-is/hail/pull/11610,1,['test'],['test']
Testability,"modifed python test of lmmreg, fixed bug, added test to lmmreg",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1548:15,test,test,15,https://hail.is,https://github.com/hail-is/hail/pull/1548,2,['test'],['test']
Testability,more logging,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6014:5,log,logging,5,https://hail.is,https://github.com/hail-is/hail/pull/6014,2,['log'],['logging']
Testability,"more than 1 element (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3209"">#3209</a>)</li>; <li>Implicitly concatenated strings inside a list, set, or tuple are now wrapped inside parentheses (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3162"">#3162</a>)</li>; <li>Fix a string merging/split issue when a comment is present in the middle of implicitly concatenated strings on its own line (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3227"">#3227</a>)</li>; </ul>; <h3><em>Blackd</em></h3>; <ul>; <li><code>blackd</code> now supports enabling the preview style via the <code>X-Preview</code> header (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3217"">#3217</a>)</li>; </ul>; <h3>Configuration</h3>; <ul>; <li>Black now uses the presence of debug f-strings to detect target version (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3215"">#3215</a>)</li>; <li>Fix misdetection of project root and verbose logging of sources in cases involving <code>--stdin-filename</code> (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3216"">#3216</a>)</li>; <li>Immediate <code>.gitignore</code> files in source directories given on the command line are now also respected, previously only <code>.gitignore</code> files in the project root and automatically discovered directories were respected (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3237"">#3237</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>Recommend using BlackConnect in IntelliJ IDEs (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3150"">#3150</a>)</li>; </ul>; <h3>Integrations</h3>; <ul>; <li>Vim plugin: prefix messages with <code>Black: </code> so it's clear they come from Black (<a href=""https://github-redirect.dependabot.com/psf/black/issues/3194"">#3194</a>)</li>; <li>Docker: changed to a /opt/venv installation + added to PATH to be available to non-root users (<a href=""https://github-redi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12174:3081,log,logging,3081,https://hail.is,https://github.com/hail-is/hail/pull/12174,1,['log'],['logging']
Testability,"more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3YTljMjVmNy0wMTBmLTQxNmItYjc0OS1jNzFkY2I4YjY5YjgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdhOWMyNWY3LTAxMGYtNDE2Yi1iNzQ5LWM3MWRjYjhiNjliOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7a9c25f7-010f-416b-b749-c71dcb8b69b8"",""prPublicId"":""7a9c25f7-010f-416b-b749-c71dcb8b69b8"",""dependencies"":[{""name"":""orjson"",""from"":""3.9.7"",""to"":""3.9.15""}],""packageManager"":""pip"",""projectPublicId"":""e7c92c7b-5282-49ea-940f-7a5797e2a45a"",""projectUrl"":""https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-ORJSON-6276643""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[661],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Relative Path Traversal](https://learn.snyk.io/lesson/directory-traversal/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14361:2367,log,logic,2367,https://hail.is,https://github.com/hail-is/hail/pull/14361,1,['log'],['logic']
Testability,"mostly copied from client.py, minimally tested. I changed is_complete to update the state if the job is not already complete, removed cached_status.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5812:40,test,tested,40,https://hail.is,https://github.com/hail-is/hail/pull/5812,1,['test'],['tested']
Testability,"move Table.{exists, forall} to test section in Scala",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3154:31,test,test,31,https://hail.is,https://github.com/hail-is/hail/pull/3154,1,['test'],['test']
Testability,move _select logic to key_by,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4455:13,log,logic,13,https://hail.is,https://github.com/hail-is/hail/pull/4455,1,['log'],['logic']
Testability,move logreg test checking to python,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3170:5,log,logreg,5,https://hail.is,https://github.com/hail-is/hail/pull/3170,2,"['log', 'test']","['logreg', 'test']"
Testability,move matrix ir tests out of table ir test class,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5532:15,test,tests,15,https://hail.is,https://github.com/hail-is/hail/pull/5532,2,['test'],"['test', 'tests']"
Testability,move the old entry points to test area,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3324:29,test,test,29,https://hail.is,https://github.com/hail-is/hail/pull/3324,1,['test'],['test']
Testability,moved some ImportVCFSuite tests to Python,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3569:26,test,tests,26,https://hail.is,https://github.com/hail-is/hail/pull/3569,1,['test'],['tests']
Testability,moved test.test_hail => test.hail,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4013:6,test,test,6,https://hail.is,https://github.com/hail-is/hail/pull/4013,2,['test'],['test']
Testability,moved tests to python,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2844:6,test,tests,6,https://hail.is,https://github.com/hail-is/hail/pull/2844,1,['test'],['tests']
Testability,"mple, per_variant = hl.mendel_errors(mt, ped); family_stats = Struct(mendel=per_variant[(mt.locus, mt.alleles)],; tdt=tdt_table[(mt.locus, mt.alleles)],; ac_unrelated_qc=hl.agg.sum(hl.agg.filter(; True & hl.is_missing(mt.fam.pat_id),; mt.GT.num_alt_alleles())),; meta={'group': 'raw'}); mt = mt.annotate_rows(family_stats=[family_stats]). mt = filter_to_adj(mt); adj_tdt_table = hl.tdt(mt, ped); _, _, adj_per_sample, adj_per_variant = hl.mendel_errors(mt, ped); family_stats_adj = Struct(mendel=adj_per_variant[(mt.locus, mt.alleles)],; tdt=adj_tdt_table[(mt.locus, mt.alleles)],; ac_unrelated_qc=hl.agg.sum(hl.agg.filter(; True & hl.is_missing(mt.fam.pat_id),; mt.GT.num_alt_alleles())),; meta={'group': 'adj'}). per_sample = per_sample.annotate(adj=adj_per_sample[per_sample.s]). mt = mt.annotate_rows(family_stats=mt.family_stats.append(family_stats_adj)); mt.write(); ```; ### What went wrong (all error messages here, including the full java stack trace):; ```; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.annotations.RegionValueBuilder.addRegionValue(RegionValueBuilder.scala:394); 	at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:335); 	at is.hail.variant.MatrixTable$$anonfun$dropEntries$2.apply(MatrixTable.scala:1433); 	at is.hail.variant.MatrixTable$$anonfun$dropEntries$2.apply(MatrixTable.scala:1421); 	at is.hail.variant.MatrixTable$$anonfun$95$$anonfun$apply$60$$anonfun$apply$4.apply$mcV$sp(MatrixTable.scala:1723); 	at is.hail.expr.types.TStruct$$anonfun$unsafeInsert$1.apply(TStruct.scala:177); 	at is.hail.expr.types.TStruct$$anonfun$unsafeInsert$1.apply(TStruct.scala:177); 	at is.hail.expr.types.TStruct$$anonfun$unsafeInsert$2.apply(TStruct.scala:197); 	at is.hail.expr.types.TStruct$$anonfun$unsafeInsert$2.apply(TStruct.scala:186); 	at is.hail.variant.MatrixTable$$anonfun$95$$anonfun$apply$60.apply(MatrixTable.scala:1722); 	at is.hail.variant.MatrixTable$$anonfun$95$$anonfun$apply$60.appl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3074:1340,Assert,AssertionError,1340,https://hail.is,https://github.com/hail-is/hail/issues/3074,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"mplementation to improve; standardization. (<a href=""https://redirect.github.com/psf/requests/issues/6226"">#6226</a>)</li>; <li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=""https://redirect.github.com/psf/requests/issues/6356"">#6356</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4""><code>147c851</code></a> v2.31.0</li>; <li><a href=""https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5""><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>; <li><a href=""https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe""><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=""https://redirect.github.com/psf/requests/issues/6424"">#6424</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149""><code>b639e66</code></a> test on py3.12 (<a href=""https://redirect.github.com/psf/requests/issues/6448"">#6448</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be""><code>d3d5044</code></a> Fixed a small typo (<a href=""https://redirect.github.com/psf/requests/issues/6452"">#6452</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/2ad18e0e10e7d7ecd5384c378f25ec8821a10a29""><code>2ad18e0</code></a> v2.30.0</li>; <li><a href=""https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773""><code>f2629e9</code></a> Remove strict parameter (<a href=""https://redirect.github.com/psf/requests/issues/6434"">#6434</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8""><code>87d63de</code></a> v2.29.0</li>; <li><a href=""https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc""><code>51716c4</code></a> enable the warnings plugin (<a href=""",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13091:5906,test,test,5906,https://hail.is,https://github.com/hail-is/hail/pull/13091,6,['test'],['test']
Testability,"ms as much as ~12 GB/s of aggregate bandwidth. We seem to have room for improvement, but this seems good enough for now. # On AWS, GCS -> S3. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 34 seconds | 154.5 MB/s |; | 1 | 42.9 GB | 4 minutes | 161.6 MB/s |; | 200 | 5.4 GB | 35 seconds | 151.1 MB/s |; | 40000 | 5.4 GB | 4 minutes | 22.0 MB/s |. # On GCP, S3 -> GCS. | Files | Bytes | Time | Rate |; | ----- | ----- | ---- | ---- |; | 1 | 5.4 GB | 17 seconds | 304.2 MB/s |; | 1 | 42.9 GB | 3 minutes | 235.5 MB/s |; | 200 | 5.4 GB | 20 seconds | 267.8 MB/s |; | 40000 | 5.4 GB | 6 minutes | 13.3 MB/s |. # machine parsable form; ```; [{'config': 'one',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/one',; 'times': [34.76],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/one'},; {'config': 'some',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/some',; 'times': [35.527],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/some'},; {'config': 'many',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/many',; 'times': [244.154],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 'gs://1-day/tmp/test-copy/dking-benchmark/huge',; 'times': [265.719],; 'to': 's3://hail-test-dy5rg/tmp/target/dking-benchmark/huge'},; {'config': 'one',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/one',; 'times': [17.65],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/one'},; {'config': 'some',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/some',; 'times': [20.048],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/some'},; {'config': 'many',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/many',; 'times': [402.267],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/many'},; {'config': 'huge',; 'from': 's3://hail-test-dy5rg/tmp/test-copy/dking-benchmark/huge',; 'times': [182.355],; 'to': 'gs://1-day/tmp/test-copy/target/dking-benchmark/huge'}].",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697:1198,test,test-,1198,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-897651697,4,"['benchmark', 'test']","['benchmark', 'test-', 'test-copy']"
Testability,"mt, ped); family_stats = Struct(mendel=per_variant[(mt.locus, mt.alleles)],; tdt=tdt_table[(mt.locus, mt.alleles)],; ac_unrelated_qc=hl.agg.sum(hl.agg.filter(; True & hl.is_missing(mt.fam.pat_id),; mt.GT.num_alt_alleles())),; meta={'group': 'raw'}); mt = mt.annotate_rows(family_stats=[family_stats]). mt = filter_to_adj(mt); adj_tdt_table = hl.tdt(mt, ped); _, _, adj_per_sample, adj_per_variant = hl.mendel_errors(mt, ped); family_stats_adj = Struct(mendel=adj_per_variant[(mt.locus, mt.alleles)],; tdt=adj_tdt_table[(mt.locus, mt.alleles)],; ac_unrelated_qc=hl.agg.sum(hl.agg.filter(; True & hl.is_missing(mt.fam.pat_id),; mt.GT.num_alt_alleles())),; meta={'group': 'adj'}). per_sample = per_sample.annotate(adj=adj_per_sample[per_sample.s]). mt = mt.annotate_rows(family_stats=mt.family_stats.append(family_stats_adj)); mt.write(); ```; ### What went wrong (all error messages here, including the full java stack trace):; ```; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.annotations.RegionValueBuilder.addRegionValue(RegionValueBuilder.scala:394); 	at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:335); 	at is.hail.variant.MatrixTable$$anonfun$dropEntries$2.apply(MatrixTable.scala:1433); 	at is.hail.variant.MatrixTable$$anonfun$dropEntries$2.apply(MatrixTable.scala:1421); 	at is.hail.variant.MatrixTable$$anonfun$95$$anonfun$apply$60$$anonfun$apply$4.apply$mcV$sp(MatrixTable.scala:1723); 	at is.hail.expr.types.TStruct$$anonfun$unsafeInsert$1.apply(TStruct.scala:177); 	at is.hail.expr.types.TStruct$$anonfun$unsafeInsert$1.apply(TStruct.scala:177); 	at is.hail.expr.types.TStruct$$anonfun$unsafeInsert$2.apply(TStruct.scala:197); 	at is.hail.expr.types.TStruct$$anonfun$unsafeInsert$2.apply(TStruct.scala:186); 	at is.hail.variant.MatrixTable$$anonfun$95$$anonfun$apply$60.apply(MatrixTable.scala:1722); 	at is.hail.variant.MatrixTable$$anonfun$95$$anonfun$apply$60.apply(MatrixTable.scala:1718); 	at scala.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3074:1392,assert,assert,1392,https://hail.is,https://github.com/hail-is/hail/issues/3074,1,['assert'],['assert']
Testability,"multiprocessing and use that as a default PARALLELISM parameter. - Move non-java/scala specific functionality out of `build.gradle` and into a `Makefile`. - The resulting rules are more succinct and correctly rely on file-system modification dependencies. - No use of `SPARK_HOME` and `PYTHONPATH`, and limited use of `PYSPARK_SUBMIT_ARGS`. Python tests now rely on the python package directly which handles correctly handles dependencies like `pyspark`. - There are also some phony targets for convenience: `jar`, `zip`, `pip-install`, `docs`, and `docs-no-test`. - Fix configuration of Spark version for the python package. The version is written by make into `python/spark_version` and read by `python/setup.py`. Many of the tests pass against 2.3.0, but there's some floating point value changes. - add breezeVersions for all currently released Spark versions greater than 2.2.0. - For developers, require python package `py` version 1.7.0 or later to allow `pytest` to test an installed package while loading the doctest expressions from the source code. (We could also determine where hail was installed and pass that path to pytest instead of `python/src`, but using the environment variable `PY_IGNORE_IMPORTMISMATCH` seems simple and safe enough). ---. ### Explainers. #### env_var.mk. This is a Makefile that is intended to be `include`d by other Makefiles. It defines a [multi-line variable](https://www.gnu.org/software/make/manual/html_node/Multi_002dLine.html) that [takes arguments](https://www.gnu.org/software/make/manual/html_node/Call-Function.html#Call-Function) (known in any reasonable language as a ""function""). It is intended to be used like this:. ```; VERSION = 30; $(eval $(call ENV_VAR,VERSION)). build: env/VERSION; build:; ... $(VERSION) ...; ```. Each time this Makefile is executed, at Makefile parse-time, `make` evaluates the `ifneq` to compare the current value of the variable to the previously used value (if any). If they differ, a phony (ergo always needs to be ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5130:2153,test,test,2153,https://hail.is,https://github.com/hail-is/hail/pull/5130,1,['test'],['test']
Testability,"n ""aggregation interval"", packets are aggregated into ""records"" which are keyed (my term); by source & destination. There are currently six choices for aggregation interval: 5s, 30s, 1m,; 5m, 10m, and 15m. 3. Records are sampled. The sampling rate is a user configured floating point number (precision; unclear) between 0 and 1. 4. Metadata is optionally added to the records. The metadata captures information about the source; and destination VM such as project id, VM name, zone, region, GKE pod, GKE service, and geographic; information of external parties. The user may elect to receive all metadata, no metadata, or a; specific set of metadata fields. 5. The records are written to Google Cloud Logging. The pricing of VPC Flow Logs is described at the [network pricing page](https://cloud.google.com/vpc/network-pricing#network-telemetry). Notice that, if logs are only sent to Cloud Logging (not to BigQuery, Pub/Sub, or Cloud Storage):. > If you store your logs in Cloud Logging, logs generation charges are waived, and only Logging charges apply. I believe in this phrase ""logs generation charges"" refers to *VPC Flow logs* generation charges. The Google Cloud Logging [pricing page](https://cloud.google.com/stackdriver/pricing#google-clouds-operations-suite-pricing) indicates that, after 50 GiB of free logs, the user is charged 0.50 USD per GiB of logs. Storage is free for thirty days and 0.01 USD per GiB for each additional day. We can calculate the cost of our logs as follows. Refer to the [definition of the record format](https://cloud.google.com/vpc/docs/flow-logs#record_format) for details. ```python3; ip_string = len(""123.123.123.123""); ip_connection = 4 + ip_string + ip_string + 4 + 4; date_time = len(""1937-01-01T12:00:27.87+00:20""); record_bytes = sum((; ip_connection,; max(len('SRC'), len('DEST')),; 8,; 8,; 8,; date_time,; date_time,; )); assert record_bytes == 126. hours_per_month = 24 * 60; seconds_per_hour = 60 * 60. seconds_per_interval = 15 * 60; vms = 10000; s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12883:1774,log,logs,1774,https://hail.is,https://github.com/hail-is/hail/pull/12883,4,"['Log', 'log']","['Logging', 'logs']"
Testability,"n I read things like:. ""I don’t think performance matter. I think asgi does not matter in 2018 in general. Usability and complexity matters. Python is not very good choice for high performance system in any case...For me high performance python is a fantasy, but i don’t do aiohttp/python anymore. In the end it is up to @asvetlov"". from one of the creators of aiohttp, I'm not encouraged about the long-term health of the project. https://github.com/aio-libs/aiohttp/issues/2902. In the second branch related to this pull request, linked above, I chose Starlette, and it is a thin abstraction, nearly identical performance, over Uvicorn + httptools, which were both written by Yury Selivanov, the asyncio person I mention above. Starlette and Uvicorn are currently the fastest options, (Sanic isn't tested), by a relatively large margin, on Techempower's benchmarks. If there is a reference standard benchmark of http library performance, Techempower is it: https://www.techempower.com/benchmarks/#section=data-r17 . Starlette is something like base Go performance (though 1/5-1/10th the performance of Go's fasthttp library for simple responses, and much closer for anything involving database calls). Sanic also uses httptools and uvloop, but has more stuff.. so yeah maybe a bit slower than Starlette, or not, but the diff will probably be small. Regarding the benchmark you linked, it is benchmarking the power of sleep. There is something deeply wrong with their results. Sanic has 1800 timeouts, vs 200 for aiohttp, and 3x the connection errors. Fine, so Sanic is super slow. But look at their non-db tests. Sanic is >2x as fast, 0 timeouts. They aren't using anything Sanic specific to query the database, and both use the same event loop. Adding asyncio Postgres to two programs that fundamentally differ mainly in how the handle http requests and responses, shows the one that is faster at http requests/responses (Sanic) becoming much slower, and in fact reversing its relationship to Aioh",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030:2511,benchmark,benchmarks,2511,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030,2,['benchmark'],['benchmarks']
Testability,"n below. ; For support and feature requests, please use the discussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version:; 0.2. ### What you did:; ```; mt = hl.read_matrix_table('gs://...'); mt = mt.filter_cols(mt.used_in_pca_calculation); print(mt.count_cols()); ```; The MatrixTable has a lot of row and column annotations. `mt.used_in_pca_calculation` is a Boolean column annotation. ### What went wrong (all error messages here, including the full java stack trace):; ```; Traceback (most recent call last):; File ""/tmp/8d5cc778-fdc7-4210-a60b-5efd1f67c45f/subset_genotype_pca.py"", line 8, in <module>; print(mt.count_cols()); File ""/home/hail/hail.zip/hail/matrixtable.py"", line 1950, in count_cols; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/home/hail/hail.zip/hail/utils/java.py"", line 206, in deco; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.expr.MatrixValue.filterSamplesKeep(Relational.scala:110); 	at is.hail.expr.MatrixValue.filterCols(Relational.scala:133); 	at is.hail.expr.FilterCols.execute(Relational.scala:333); 	at is.hail.variant.MatrixTable.value$lzycompute(MatrixTable.scala:536); 	at is.hail.variant.MatrixTable.value(MatrixTable.scala:534); 	at is.hail.variant.MatrixTable.x$16$lzycompute(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.x$16(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.colValues$lzycompute(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.colValues(MatrixTable.scala:541); 	at is.hail.variant.MatrixTable.numCols(MatrixTable.scala:2378); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(De",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3173:1029,Assert,AssertionError,1029,https://hail.is,https://github.com/hail-is/hail/issues/3173,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"n devel-08a1543; WARNING: This is an unstable development build.; 2018-01-17 18:32:09 Hail: INFO: Found 729 overlapping samples; Left: 729 total samples; Right: 729 total samples; 2018-01-17 18:32:10 Hail: WARN: converting OrderedRVD => OrderedRDD; [Stage 0:====================================================>(4627 + 1) / 4628]2018-01-17 18:47:04 Hail: INFO: Coerced sorted dataset; 2018-01-17 18:47:04 Hail: WARN: converting OrderedRVD => OrderedRDD; [Stage 1:> (7 + 28) / 4969]Traceback (most recent call last):; File ""/tmp/f93de2d1-2d89-43f9-9868-f266eb88a6f1/concordance.py"", line 38, in <module>; main(args); File ""/tmp/f93de2d1-2d89-43f9-9868-f266eb88a6f1/concordance.py"", line 19, in main; bi_summary, bi_samples, bi_variants = methods.concordance(bi_past_vds, bi_future_vds); File ""<decorator-gen-1304>"", line 2, in concordance; File ""/tmp/f93de2d1-2d89-43f9-9868-f266eb88a6f1/hail-devel-08a15431a0ef.zip/hail/utils/java.py"", line 155, in handle_py4j; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 30 in stage 1.0 failed 20 times, most recent failure: Lost task 30.19 in stage 1.0 (TID 4847, lfdev2-sw-f5w2.c.broad-mpg-gnomad.internal): java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.annotations.Region.loadInt(Region.scala:36); 	at is.hail.expr.types.TBinary$.loadLength(TBinary.scala:62); 	at is.hail.annotations.UnsafeRow$.readBinary(UnsafeRow.scala:128); 	at is.hail.annotations.UnsafeRow$.readString(UnsafeRow.scala:139); 	at is.hail.annotations.UnsafeRow$.readAltAllele(UnsafeRow.scala:152); 	at is.hail.annotations.UnsafeRow$.readArrayAltAllele(UnsafeRow.scala:164); 	at is.hail.annotations.UnsafeRow$.read(UnsafeRow.scala:210); 	at is.hail.annotations.UnsafeRow.get(UnsafeRow.scala:257); 	at is.hail.expr.FilterVariants$$anonfun$10.apply(Relational.scala:503); 	at is.hail.expr.FilterVariants$$anonfun$10.apply(Relational.s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2743:1756,Assert,AssertionError,1756,https://hail.is,https://github.com/hail-is/hail/issues/2743,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"n email; + except httpx.ClientResponseError as e:; + if e.status in (400, 401):; + return None; + raise; +; +; +class AadJwk(TypedDict):; + kid: str; + x5c: List[str]; +; ; class AzureFlow(Flow):; + _aad_keys: Optional[List[AadJwk]] = None; +; def __init__(self, credentials_file: str):; with open(credentials_file, encoding='utf-8') as f:; data = json.loads(f.read()); ; tenant_id = data['tenant']; authority = f'https://login.microsoftonline.com/{tenant_id}'; - client = msal.ConfidentialClientApplication(data['appId'], data['password'], authority); -; - self._client = client; + self._client = msal.ConfidentialClientApplication(data['appId'], data['password'], authority); self._tenant_id = tenant_id; ; def initiate_flow(self, redirect_uri: str) -> dict:; @@ -107,10 +170,31 @@ class AzureFlow(Flow):; ; return FlowResult(token['id_token_claims']['oid'], token['id_token_claims']['preferred_username'], token); ; -; -def get_flow_client(credentials_file: str) -> Flow:; - cloud = get_global_config()['cloud']; - if cloud == 'azure':; - return AzureFlow(credentials_file); - assert cloud == 'gcp'; - return GoogleFlow(credentials_file); + @staticmethod; + def perform_installed_app_login_flow(oauth2_client: Dict[str, Any]) -> Dict[str, Any]:; + tenant_id = oauth2_client['tenant']; + authority = f'https://login.microsoftonline.com/{tenant_id}'; + app = msal.PublicClientApplication(oauth2_client['appId'], authority=authority); + credentials = app.acquire_token_interactive([oauth2_client['userOauthScope']]); + return {**oauth2_client, 'refreshToken': credentials['refresh_token']}; +; + @staticmethod; + async def get_identity_uid_from_access_token(session: httpx.ClientSession, access_token: str, *, oauth2_client: dict) -> Optional[str]:; + audience = oauth2_client['appIdentifierUri']; +; + try:; + kid = jwt.get_unverified_header(access_token)['kid']; +; + if AzureFlow._aad_keys is None:; + resp = await session.get_read_json('https://login.microsoftonline.com/common/discovery/keys'); +",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13131#issuecomment-1668558329:5420,assert,assert,5420,https://hail.is,https://github.com/hail-is/hail/pull/13131#issuecomment-1668558329,2,"['assert', 'log']","['assert', 'login']"
Testability,"n failed for job {self.full_id} '; f'with the following error: {err}'); return. n_updated = await db.jobs.update_record(*self.id, compare_items={'state': self._state}, state='Running'); if n_updated == 0:; log.warning(f'changing the state for job {self.full_id} failed due to the expected state {self._state} not in db'); ```. For either of these database updates to succeed, the thread of control must have; thought the `_state` was `Cancelled` or we moved through some intermediate; state. We continue under the assumption that we went directly to `Running`. Who calls `_create_pod`?. - `start_pod`, but it checks that the state is in `Ready`; - `mark_complete`, but that's only if there's a ""next task"", this job has only; one task. That leaves `create_if_ready` and `mark_unscheduled`. `create_if_ready` is only; called by methods that are triggered when a parent with children finishes. We; have no parent-child relationships here. By process of elimination, `mark_unscheduled` must be the culprit. But how?; `mark_unscheduled` is called when a pod is evicted or by the k8s update loop if; there exists no pod. In those cases a message a special log is printed. That log; appears later (because the pod is missing) but it does not appear during the; initial sequence of events. Let's set that aside and focus on the other path by; which `mark_unscheduled` is called: `mark_complete` when the pod log cannot be; retrieved. Proposed sequence of events:. - pod is created; - k8s sends an event that the pod is terminated (but without timing information); - we load a Job object from the db. the job is Pending, the batch is cancelled; - we enter `update_job_with_pod` then `mark_complete`; - we fail to retrieve the logs; - we try to mark unscheduled, but the batch is cancelled so we do nothing.; ...; - we realize a Pending pod was never created, we try to mark_unscheduled, but; the batch is cancelled, so we do nothing; ...; - we realize a Pending pod was never created, we try ... ad infinitum",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:19118,log,log,19118,https://hail.is,https://github.com/hail-is/hail/issues/6617,4,['log'],"['log', 'logs']"
Testability,n | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4063028160 |; | test | test | 6 | 1 | 189760 |; | test | test | 6 | 3 | 607168 |; | test | test | 6 | 4 | 749952 |; | test | test | 6 | 5 | 46912 |; | test | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1690,test,test,1690,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,n$execute$4(SparkBackend.scala:546); 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); 	at is.hail.backend.spark.SparkBackend.$anonfun$execute$3(SparkBackend.scala:542); 	at is.hail.backend.spark.SparkBackend.$anonfun$execute$3$adapted(SparkBackend.scala:541); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:76); 	at is.hail.utils.package$.using(package.scala:657); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:76); 	at is.hail.utils.package$.using(package.scala:657); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:62); 	at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$3(SparkBackend.scala:368); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:59); 	at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$2(SparkBackend.scala:364); 	at is.hail.backend.spark.SparkBackend.execute(SparkBackend.scala:541); 	at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:51); 	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); 	at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:83); 	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); 	at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); 	at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); 	at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); 	at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); 	at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); 	at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); 	at java.lang.Thread.run(Thread.java:750). Hail version: 0.2.125-c4e2880b3279; Error summary: FileNotFoundException: File not found: gs://danking/chr*.vcf; ```. ### Version. 0.2.124. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13915:7937,log,log,7937,https://hail.is,https://github.com/hail-is/hail/issues/13915,1,['log'],['log']
Testability,"n's ecosystem, performance and user experience are deeply important to me, so when I read things like:. ""I don’t think performance matter. I think asgi does not matter in 2018 in general. Usability and complexity matters. Python is not very good choice for high performance system in any case...For me high performance python is a fantasy, but i don’t do aiohttp/python anymore. In the end it is up to @asvetlov"". from one of the creators of aiohttp, I'm not encouraged about the long-term health of the project. https://github.com/aio-libs/aiohttp/issues/2902. In the second branch related to this pull request, linked above, I chose Starlette, and it is a thin abstraction, nearly identical performance, over Uvicorn + httptools, which were both written by Yury Selivanov, the asyncio person I mention above. Starlette and Uvicorn are currently the fastest options, (Sanic isn't tested), by a relatively large margin, on Techempower's benchmarks. If there is a reference standard benchmark of http library performance, Techempower is it: https://www.techempower.com/benchmarks/#section=data-r17 . Starlette is something like base Go performance (though 1/5-1/10th the performance of Go's fasthttp library for simple responses, and much closer for anything involving database calls). Sanic also uses httptools and uvloop, but has more stuff.. so yeah maybe a bit slower than Starlette, or not, but the diff will probably be small. Regarding the benchmark you linked, it is benchmarking the power of sleep. There is something deeply wrong with their results. Sanic has 1800 timeouts, vs 200 for aiohttp, and 3x the connection errors. Fine, so Sanic is super slow. But look at their non-db tests. Sanic is >2x as fast, 0 timeouts. They aren't using anything Sanic specific to query the database, and both use the same event loop. Adding asyncio Postgres to two programs that fundamentally differ mainly in how the handle http requests and responses, shows the one that is faster at http requests/respo",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030:2425,benchmark,benchmark,2425,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030,2,['benchmark'],['benchmark']
Testability,"n(ArrayBuffer(SeqOp(0,ArrayBuffer(Ref(__iruid_303,int64)),AggStateSignature(Map(Sum() -> AggSignature(Sum(),ArrayBuffer(),ArrayBuffer(int64))),Sum(),None),Sum())))))),ResultOp(0,WrappedArray(AggStateSignature(Map(Sum() -> AggSignature(Sum(),ArrayBuffer(),ArrayBuffer(int64))),Sum(),None))),WrappedArray(AggStateSignature(Map(Sum() -> AggSignature(Sum(),ArrayBuffer(),ArrayBuffer(int64))),Sum(),None))),GetTupleElement(Ref(__iruid_302,tuple(int64)),0))))). java.lang.ClassCastException: is.hail.expr.types.physical.PStream cannot be cast to is.hail.expr.types.physical.PContainer. 	at is.hail.expr.ir.EmitStream$.is$hail$expr$ir$EmitStream$$emitStream$1(EmitStream.scala:631). #### Let's try to return x from streamify catch-all case (instead of if(...) ToStream(x) else x). With:. ```scala; private def toStream(node: IR): IR = {; node match {; case _: ToStream => node; case _ => {; if(node.typ.isInstanceOf[TArray]) {; ToStream(node); } else {; node; }; }; }; }; ````. Again issue in testArrayAggScan (and 8 others in IRSuite):. Before Lower: ; MakeTuple(ArrayBuffer((0,RunAggScan(GetTupleElement(In(0,PCTuple[0:PCArray[PCStruct{x:PCCall,y:PInt32}]]),0),__iruid_400,Begin(ArrayBuffer(InitOp(0,ArrayBuffer(I32(2)),AggStateSignature(Map(CallStats() -> AggSignature(CallStats(),ArrayBuffer(int32),ArrayBuffer(call))),CallStats(),None),CallStats()))),Begin(ArrayBuffer(SeqOp(0,ArrayBuffer(GetField(Ref(__iruid_400,struct{x: call, y: int32}),x)),AggStateSignature(Map(CallStats() -> AggSignature(CallStats(),ArrayBuffer(int32),ArrayBuffer(call))),CallStats(),None),CallStats()))),Let(__iruid_401,ResultOp(0,WrappedArray(AggStateSignature(Map(CallStats() -> AggSignature(CallStats(),ArrayBuffer(int32),ArrayBuffer(call))),CallStats(),None))),ApplyBinaryPrimOp(Add(),GetField(Ref(__iruid_400,struct{x: call, y: int32}),y),GetField(GetTupleElement(Ref(__iruid_401,tuple(struct{AC: array<int32>, AF: array<float64>, AN: int32, homozygote_count: array<int32>})),0),AN))),WrappedArray(AggStateSignature(Map(Ca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-586602113:3942,test,testArrayAggScan,3942,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-586602113,1,['test'],['testArrayAggScan']
Testability,"n.Iterator$$anon$12.nextCur(Iterator.scala:434); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:59); at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:104); at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:48); at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:310); at scala.collection.AbstractIterator.to(Iterator.scala:1336); at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:302); at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1336); at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:289); at scala.collection.AbstractIterator.toArray(Iterator.scala:1336); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2062); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2062); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745). Hail version: devel-544bf8f; Error summary: HailException: gcad.sv.delly.5k.vcf.bgz:column 80816: invalid character '-' in integer literal; ... 2:0:0:0:6 ./.:0,0,0:0:LowQual:0:0:0:-1:0:0:0:0 ./.:0,0,0:0:LowQual:0:0:0 ...; ^; offending line: chr1 152267996 DEL00028254 AATATATATACTTTACGTAAAGT A . PASS ...; see the Hail log for the full offending line; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3379:16457,log,log,16457,https://hail.is,https://github.com/hail-is/hail/issues/3379,1,['log'],['log']
Testability,"n0$mcV$sp.java:23); E 	at is.hail.services.package$.retryTransientErrors(package.scala:124); E 	at is.hail.backend.service.ServiceBackend$$anon$2.call(ServiceBackend.scala:122); E 	at is.hail.backend.service.ServiceBackend$$anon$2.call(ServiceBackend.scala:119); E 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); E 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); E 	at java.lang.Thread.run(Thread.java:750); E ; E ; E ; E ; E Hail version: 0.2.115-f6017673dbb6; E Error summary: RuntimeException: Stream is already closed.; ```. ### Version. 0.2.115-f6017673dbb6. ### Relevant log output. ```shell; ________________________________ test_spectra_4 ________________________________; [gw2] linux -- Python 3.8.10 /usr/bin/python3. def test_spectra_4():; > spectra_helper(spec4). test/hail/methods/test_pca.py:229: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/methods/test_pca.py:172: in spectra_helper; hail_V = (np.array(scores.scores.collect()) / singulars).T; <decorator-gen-538>:2: in collect; ???; /usr/local/lib/python3.8/dist-packages/hail/typecheck/check.py:584: in wrapper; return __original_func(*args_, **kwargs_); /usr/local/lib/python3.8/dist-packages/hail/expr/expressions/base_expression.py:1132: in collect; return hl.eval(e); <decorator-gen-702>:2: in eval; ???; /usr/local/lib/python3.8/dist-packages/hail/typecheck/check.py:584: in wrapper; return __original_func(*args_, **kwargs_); /usr/local/lib/python3.8/dist-packages/hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-700>:2: in eval_timed; ???; /usr/local/lib/python3.8/dist-packages/hail/typecheck/check.py:584: in wrapper; return __original_func(*args_, **kwargs_); /usr/local/lib/python3.8/dist-packages/hail/expr/expressions/expression_utils.py:161: in eval_timed; return Env.backend",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12976:10052,test,test,10052,https://hail.is,https://github.com/hail-is/hail/issues/12976,1,['test'],['test']
Testability,"n:. ```; mysql> EXPLAIN SELECT batches.*, batches_cancelled.id IS NOT NULL AS cancelled, COALESCE(SUM(`usage` * rate), 0) AS cost, batches_n_jobs_in_complete_states.n_completed, batches_n_jobs_in_complete_states.n_succeeded, batches_n_jobs_in_complete_states.n_failed, batches_n_jobs_in_complete_states.n_cancelled; -> FROM batches; -> LEFT JOIN batches_n_jobs_in_complete_states; -> ON batches.id = batches_n_jobs_in_complete_states.id; -> LEFT JOIN batches_cancelled; -> ON batches.id = batches_cancelled.id; -> LEFT JOIN aggregated_batch_resources; -> ON batches.id = aggregated_batch_resources.batch_id; -> LEFT JOIN resources; -> ON aggregated_batch_resources.resource = resources.resource; -> STRAIGHT_JOIN billing_project_users ON batches.billing_project = billing_project_users.billing_project; -> WHERE (billing_project_users.`user` = 'test' AND billing_project_users.billing_project = batches.billing_project) AND NOT deleted AND (batches.id < 1114186) AND ; -> (batches.`user` = 'test'); -> GROUP BY batches.id; -> ORDER BY batches.id DESC; -> LIMIT 51;; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+---------+---------+-------------------------------------------+---------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+---------+---------+-------------------------------------------+---------+----------+----------------------------------+; | 1 | SIMPLE | batches | NULL | range | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | PRIMARY | 8 | NULL | 1348998 | 5.00 | Using ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12057#issuecomment-1196612910:1004,test,test,1004,https://hail.is,https://github.com/hail-is/hail/pull/12057#issuecomment-1196612910,1,['test'],['test']
Testability,nAlleles assertion in htsjdkrecordReader has bad error msg,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/952:9,assert,assertion,9,https://hail.is,https://github.com/hail-is/hail/issues/952,1,['assert'],['assertion']
Testability,"nIter, firthIter = va.firth.fit.nIter')); ```. Beta for all variants, note that Firth resolves quasi-separation issues and regresses toward the zero:; ![logregbetalrtfirth](https://cloud.githubusercontent.com/assets/3201642/22867286/9e219bc2-f153-11e6-896a-c49e55593312.png). Pvals for all variants, note that Firth is more conservative:; ![logregpvallrtfirth](https://cloud.githubusercontent.com/assets/3201642/22867294/a86b012c-f153-11e6-8155-23004f9127fe.png). Beta for variants with at least 20 hets, basically the same:; ![logregbeta20hets](https://cloud.githubusercontent.com/assets/3201642/22859644/23feabb6-f0b1-11e6-88d5-a04af188c276.png). Pvals for variants with at least 20 hets, basically the same:; ![logregpval20hets](https://cloud.githubusercontent.com/assets/3201642/22859658/c6d27e12-f0b1-11e6-814f-b4a75dd54162.png). Comparison of iterations until convergence, note that LRT is bimodal due to quasi-separation, whereas Firth is not. When well-posed, Firth takes more iterations to converge as expected:; ![logregiter](https://cloud.githubusercontent.com/assets/3201642/22859638/df6c31ee-f0b0-11e6-9443-1a00bb2e9848.png). LRT iterations:; ![logreglrtiter](https://cloud.githubusercontent.com/assets/3201642/22859676/816119b4-f0b2-11e6-8401-2b6600d6f443.png). Firth iterations:; ![logregfirthiter](https://cloud.githubusercontent.com/assets/3201642/22859677/883c4a6a-f0b2-11e6-9aad-b79e613f2ba7.png). For the record, Wald is mis-calibrated for small counts:; ![logregpvalwaldlrt](https://cloud.githubusercontent.com/assets/3201642/22859691/f629f5fe-f0b2-11e6-98fe-b96b3ef497ec.png). Score is more conservative than LRT:; ![logregpvalscorelrt](https://cloud.githubusercontent.com/assets/3201642/22859708/92750f7a-f0b3-11e6-93af-3219eb9e025f.png). Firth is more conservative than score:; ![logregpvalscorefirth](https://cloud.githubusercontent.com/assets/3201642/22859693/fed4555a-f0b2-11e6-9636-2a8075b0a04a.png). And linear betas are super conservative:; ![logregbetafirthlin](https:/",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1375#issuecomment-279196409:2396,log,logregiter,2396,https://hail.is,https://github.com/hail-is/hail/pull/1375#issuecomment-279196409,1,['log'],['logregiter']
Testability,"nJob$5.apply(SparkContext.scala:2069); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); 	at org.apache.spark.scheduler.Task.run(Task.scala:108); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:338); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). Hail version: devel-e6de08e; Error summary: ClassCastException: is.hail.codegen.generated.C14 cannot be cast to is.hail.asm4s.AsmFunction2; ERROR: (gcloud.dataproc.jobs.submit.pyspark) Job [3c5f402fed564ccd85257c0919d4bffb] entered state [ERROR] while waiting for [DONE].; Traceback (most recent call last):; File ""pyhail.py"", line 128, in <module>; main(args, pass_through_args); File ""pyhail.py"", line 109, in main; subprocess.check_output(job); File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py"", line 573, in check_output; raise CalledProcessError(retcode, cmd, output=output); subprocess.CalledProcessError: Command '['gcloud', 'dataproc', 'jobs', 'submit', 'pyspark', '/Users/gtiao/gnomad_qc/hail/sample_qc/assign_subpops.py', '--cluster', 'gt1', '--files=gs://hail-common/builds/devel/jars/hail-devel-38dbf156b630-Spark-2.2.0.jar', '--py-files=gs://hail-common/builds/devel/python/hail-devel-38dbf156b630.zip,/var/folders/rn/t2xcx1ps4h96txll46qkkfsj2q8bnl/T/pyscripts_fYVAte.zip', '--properties=spark.executor.extraClassPath=./hail-devel-38dbf156b630-Spark-2.2.0.jar,spark.driver.extraClassPath=./hail-devel-38dbf156b630-Spark-2.2.0.jar,spark.files=./hail-devel-38dbf156b630-Spark-2.2.0.jar,spark.submit.pyFiles=./gs://hail-common/builds/devel/python/hail-devel-38dbf156b630.zip', '--driver-log-levels', 'root=FATAL,is.hail=INFO', '--', '--population', 'eur', '--overwrite']' returned non-zero exit status 1; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3446#issuecomment-384671627:8775,log,log-levels,8775,https://hail.is,https://github.com/hail-is/hail/issues/3446#issuecomment-384671627,1,['log'],['log-levels']
Testability,nScope.scala:151); at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112); at org.apache.spark.rdd.RDD.withScope(RDD.scala:362); at org.apache.spark.rdd.RDD.aggregate(RDD.scala:1108); at is.hail.table.Table.query(Table.scala:339); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); at py4j.Gateway.invoke(Gateway.java:280); at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); at py4j.commands.CallCommand.execute(CallCommand.java:79); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:748); Caused by: java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.RegionValueBuilder.endStruct(RegionValueBuilder.scala:109); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2645); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2615); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(Order,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3063:7685,Assert,AssertionError,7685,https://hail.is,https://github.com/hail-is/hail/issues/3063,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"nValueAggregator. This is a compiler backend. Too much abstraction in your output! Let's compile that shit away.; - ExtractAggregators should return an Array[AggSum]. These are expressions ending in AggSum containing aggregator operations (filter, map, etc.) defined in terms of the aggregated element and associated context.; - Add a function AggSum => RegionValueAggregator. This is the way to generalize: make AggSum into Agg(op: AggOp) where AggOp (like unary and binary op) are all the possible aggregator types, and there is a function that maps the op to the corresponding RegionValueAggregator*; - compiling the Array[AggSum] should product a function that takes the array of aggregators and a single value (with context) of the collection we're aggregating over and updates them with that element. *I think you need an array of arguments to handle things like call_stats which are evaluated in the aggregator scope (the only scope available to evaluate something). Imagine you have `gs.filter(g => g.GT.isHet()).map(g => g.DP).sum() + gs.flatMap(g => g.PL).sum()`. The Array[AggSum] will be. ```; Array(AggSum(AggMap(; AggFilter(AggIn(...), ; ""g"", g.GT.isHet()),; ""g"", (getField (Ref ""g"") ""DP""),; AggSum(AggFlatMap(AggIn(...),; ""g"", (getField (Ref ""g"") ""PL))); ```. The generated function should look like:. ```; def f(aggs: Array[AggSum], region: MemoryBuffer, g: Long, mg: Boolean, ...) {; if (g.GT.isHet()) { // RV-ified, of course; val DP = g.DP // actually fieldOffset; aggs(0).seqOp(DP); }; for (PLi in g.PL) { // actually elementOffset; aggs(1).seqOp(PLi); }; }; ```. This is straight-line and should be fast. It immediately allows you to do common subexpression elimination on aggregator prefixes which is something that is quite common, that is, if you have `gs.filter(g => g.isHet).map(g => g.DP).mean() < 10 gs.filter.map(g => g.GQ).mean() < 50` then in the aggregation function you can do:. ```; if (g.isHet) { // only test once!; aggs(0).seqOp(g.DP); aggs(1).seqOp(g.GQ); }; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2555#issuecomment-350868684:2049,test,test,2049,https://hail.is,https://github.com/hail-is/hail/pull/2555#issuecomment-350868684,1,['test'],['test']
Testability,"n[T] -> (U -> Boolean) -> Gen[Unit]`; - A `Gen[Unit]` is a bit artificial because the test framework halts execution (presumably with an exception) when a counter-example is found. I instead prefer that `Prop.forAll` has type: `Gen[T] -> (U -> Boolean) -> Gen[Boolean]`; - Now `Prop.forAll` has the same type as `Gen.flatMap[Boolean]`. It seems the difference between `forAll` and `flatMap` is that `forAll` conceptually preforms a product operation while `flatMap` performs a sampling. However, I think they are, in reality, the same operation: sampling. The implementation for `GenProp3` looks like:. ``` scala; for (i <- 0 until p.count) {; val v1 = g1(p); val v2 = g2(p); val v3 = g3(p); val r = f(v1, v2, v3); if (!r) {; println(s""! ${prefix}Falsified after $i passed tests.""); println(s""> ARG_0: $v1""); println(s""> ARG_1: $v2""); println(s""> ARG_2: $v3""); assert(r); }; }; ```. Which could be re-written as:. ``` scala; for (i <- 0 until p.count) {; (for (v1 <- g1; v2 <- g2; v3 <- g3) {; if (!r) {; println(s""! ${prefix}Falsified after $i passed tests.""); println(s""> ARG_0: $v1""); println(s""> ARG_1: $v2""); println(s""> ARG_2: $v3""); assert(r); }; })(p); }; ```. The primary difference between `flatMap` and `forAll` seems to be in error reporting. We can fix this by noting `Gen[T]` is currently a Reader monad on `Parameters`. If we add a ""forAll stack"" to `Parameters` we could implement `forAll` as:. ``` scala; def forAll[T,U](gt: Gen[T], gu: T -> Gen[U]): Gen[U] =; for (t <- gt; u <- local(pushQuantified(t), gu(t)) yield u. def pushQuantified(x: Any)(Parameters p): Paramters =; new Parameters(p.rng, p.size, p.count, (x :: p.quanitifed)); ```. We complete the Reader monad transformation by adding the `local` operation to `class Gen[T]`. ``` scala; // in class Gen; def local(modify: Parameters -> Parameters, gu: Gen[U]): Gen[U] =; Gen { p => gu(modify(p)) }; ```. Finally, the `check` method can access this stack of quantified variables to provide a useful error message. Thoughts?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/400#issuecomment-238901220:1250,test,tests,1250,https://hail.is,https://github.com/hail-is/hail/issues/400#issuecomment-238901220,2,"['assert', 'test']","['assert', 'tests']"
Testability,n_1519994715701_0003 --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/__app__.jar --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/hail.jar > /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stdout 2> /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stderr. Stack trace: ExitCodeException exitCode=134: /bin/bash: line 1: 6739 Aborted /usr/lib/jvm/java-8-openjdk-amd64/bin/java -server -Xmx11171m '-Xss4M' -Djava.io.tmpdir=/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/tmp '-Dspark.driver.port=41843' '-Dspark.rpc.message.maxSize=512' -Dspark.yarn.app.container.log.dir=/var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102 -XX:OnOutOfMemoryError='kill %p' org.apache.spark.executor.CoarseGrainedExecutorBackend --driver-url spark://CoarseGrainedScheduler@10.128.0.4:41843 --executor-id 99 --hostname exomes-sw-pxt3.c.broad-mpg-gnomad.internal --cores 4 --app-id application_1519994715701_0003 --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/__app__.jar --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/hail.jar > /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stdout 2> /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stderr. 	at org.apache.hadoop.util.Shell.runCommand(Shell.java:972); 	at org.apache.hadoop.util.Shell.run(Shell.java:869); 	at org.apache.hadoop.util.Shell$ShellCommandExecutor.e,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3053:2042,log,log,2042,https://hail.is,https://github.com/hail-is/hail/issues/3053,1,['log'],['log']
Testability,"nal Changes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9521"">#9521</a>: Add test coverage to assertion rewrite path.</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pytest-dev/pytest/commit/3f12087fe0d86a319216653b08b66a96d400bee2""><code>3f12087</code></a> [pre-commit.ci] auto fixes from pre-commit.com hooks</li>; <li><a href=""https://github.com/pytest-dev/pytest/commit/bc3021cdfd76507aa3d9e278bd885da9bc1907b2""><code>bc3021c</code></a> Prepare release version 7.0.1</li>; <li><a href=""https://github.com/pytest-dev/pytest/commit/591d476f14e3e83d90fbea75d326a93c5e368708""><code>591d476</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9673"">#9673</a> from nicoddemus/backport-9511</li>; <li><a href=""https://github.com/pytest-dev/pytest/commit/6ca733e8f19fa5c4271bf3e5bb295c8b62757e4a""><code>6ca733e</code></a> Enable testing with Python 3.11 (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9511"">#9511</a>)</li>; <li><a href=""https://github.com/pytest-dev/pytest/commit/ac37b1b1139eaa71b3bcb16b630abfc0223241ef""><code>ac37b1b</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9671"">#9671</a> from nicoddemus/backport-9668</li>; <li><a href=""https://github.com/pytest-dev/pytest/commit/c891e402ac28f20dd3d018dc25f1ea1a273997be""><code>c891e40</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9672"">#9672</a> from nicoddemus/backport-9669</li>; <li><a href=""https://github.com/pytest-dev/pytest/commit/e2753a2b8b55de73adcc992036d0dc52facdbab9""><code>e2753a2</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9669"">#9669</a> from hugovk/ci-only-update-plugin-list-for-upstream</li>; <li><a href=",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11516:4726,test,testing,4726,https://hail.is,https://github.com/hail-is/hail/pull/11516,3,['test'],['testing']
Testability,nal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4979,Test,TestNG,4979,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['Test'],['TestNG']
Testability,nal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.ru,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4786,Test,TestNG,4786,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,1,['Test'],['TestNG']
Testability,name tbd. - `tool batch jobs list` -- same as `kubectl get pods -l app=batch-job -n batch-jobs`; - `tool batch logs 49` -- should be the output of `http://batch/jobs/49/logs`; - `tool batch logs -f 49` -- somehow polls the logs or uses some sort of web socket? dunno.; - `tool ci -f logs` -- should follow the logs of the (sole active) ci pod,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4620:111,log,logs,111,https://hail.is,https://github.com/hail-is/hail/issues/4620,6,['log'],['logs']
Testability,"name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(Literal(array<int64>,ArrayBuffer(1)),TableSpecWriter(gs://danking/workshop-test/1kg.mt/globals,Table{global:Struct{},key:[],row:Struct{}},rows,globals,../references,false)), WriteMetadata(MakeArray(ArrayBuffer(GetField(Ref(__iruid_368,struct{filePath: str, partitionCounts: int64}),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/cols/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""EBaseStruct{s:EBinary}"",""_vType"":""Struct{s:String}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(MakeArray(ArrayBuffer(GetField(Ref(__iruid_368,struct{filePath: str, partitionCounts: int64}),partitionCounts)),array<int64>),TableSpecWriter(gs://danking/workshop-test/1kg.mt/cols,Table{global:Struct{},key:[s],row:Struct{s:String}},rows,../globals/rows,../references,false)), Let(__iruid_374,ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_375,GetField(Ref(__iruid_375,struct{filePath: str, partitionCounts: int64}),filePath))),Begin(ArrayBuffer(WriteMetadata(Ref(__iruid_374,array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/rows/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{locus:+EBaseStruct{contig:+EBinary,position:+EInt32},alleles:+EArray[+EBinary],rsid:EBinary,qual:EFloat64,filters:EArray[+EBinary],info:+EBaseStruct{AC:EArray[EInt32],AF:EA",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:12454,test,test,12454,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['test'],['test']
Testability,"namespaces and services are active in our cluster at a given point in time. TL;DR Switching from NGINX to Envoy with CI acting as the ""control plane"" for our internal networking allows us to more easily dynamically configure our Kubernetes networking and achieve proper connection pooling/load-balancing over TLS, which translates to less resource consumption and lower request latencies. ## Motivation; This is primarily a performance-motivated change, and one largely based on our (ab)use of NGINX in order to work with our dynamically-generated Kubernetes test namespaces. Currently, we configure NGINX by creating server blocks that dynamically resolve and dispatch requests based on matching regular expressions on the host and path headers. This is in large part due that at gateway deploy time we do not statically know all of the namespaces and namespace-service combinations that will exist in the cluster in the future. This is true for `default`, but not test namespaces, and NGINX will refuse to start with statically-configured clusters that it cannot reach. Making the server blocks make the routing decisions dynamically circumvents this limitation. However, this prevents usage of NGINX [upstream](http://nginx.org/en/docs/http/ngx_http_upstream_module.html) blocks that provide connection pooling, at least in the community edition, and as a result the gateways will create and terminate a TCP connection per http request. This likely causes minor delays on the front-end through gateway, but this hampers performance greatly in job scheduling. The batch driver is forced to establish a new TCP connection and do an SSL handshake with the internal-gateway multiple times per job, which is expensive and slow. We currently have to dedicate a 2-core NGINX sidecar for the batch-driver just to terminate TLS with internal-gateway and free up cycles in the batch-driver python process. By using proper persistent connections, we can reduce the TLS overhead to single-digit percents of a ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12095:1150,test,test,1150,https://hail.is,https://github.com/hail-is/hail/pull/12095,1,['test'],['test']
Testability,"nce *before* checking if we are at the maximum iteration. It seemed to me that:; - `max_iter == 0` means do not even attempt to fit.; - `max_iter == 1` means take one gradient step, if you've converged, then return successfully, otherwise fail.; - etc. The `main` branch currently always fails if you set `max_iter == 1`, even if the first step lands on the true maximum likelihood fit. I substantially refactored logistic regression. There were dead code paths (e.g. the covariates array is known to be non-empty). I also found all the function currying and comingling of fitting and testing really confusing. To be fair, the Scala code does this (and its really confusing). I think the current structure is easier to follow:. 1. Fit the null model.; 2. If wald, assume the beta for the genotypes is zero and use the rest of the parameters from the null model fit to compute the score (i.e. the gradient of the likelihood). Recall calculus: gradient near zero => value near the maximum. Return: this is the test.; 3. Otherwise, fit the full model starting at the null fit parameters.; 4. Test the ""goodness"" of this new & full fit. ---. Poisson regression is similar but with a different likelihood function and gradient thereof. Notice that I `key_cols_by()` to indicate to Hail that the order of the cols is irrelevant (the result is a locus-keyed table after all). This is necessary at least until #12753 merges. I think it's generally a good idea though: it indicates to Hail that the ordering of the columns is irrelevant, which is potentially useful information for the optimizer!. ---. Both logistic and Poisson regression can benefit from BLAS3 by running at least the score test for multiple variants at once. ---. I'll attach an image in the comments, but I spend ~6 seconds compiling this trivial model and ~140ms testing it. ```python3; import hail as hl; mt = hl.utils.range_matrix_table(1, 3); mt = mt.annotate_entries(x=hl.literal([1, 3, 10, 5])); ht = hl.poisson_regression_rows(; 'w",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12793:1334,test,test,1334,https://hail.is,https://github.com/hail-is/hail/pull/12793,1,['test'],['test']
Testability,"nce is/hail/relocated/org/apache/commons/math3/distribution/AbstractIntegerDistribution; Exception in thread ""main"" java.lang.NoClassDefFoundError: is/hail/relocated/org/apache/commons/math3/distribution/AbstractIntegerDistribution; 	at java.lang.ClassLoader.defineClass1(Native Method); 	at java.lang.ClassLoader.defineClass(ClassLoader.java:756); 	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:468); 	at java.net.URLClassLoader.access$100(URLClassLoader.java:74); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:369); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:363); 	at java.security.AccessController.doPrivileged(Native Method); 	at java.net.URLClassLoader.findClass(URLClassLoader.java:362); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:351); 	at org.testng.internal.ClassHelper.forName(ClassHelper.java:94); 	at org.testng.xml.XmlClass.loadClass(XmlClass.java:78); 	at org.testng.xml.XmlClass.getSupportClass(XmlClass.java:89); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:25); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:18); 	at org.testng.TestRunner.initMethods(TestRunner.java:408); 	at org.testng.TestRunner.init(TestRunner.java:235); 	at org.testng.TestRunner.init(TestRunner.java:205); 	at org.testng.TestRunner.<init>(TestRunner.java:153); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:536); 	at org.testng.SuiteRunner.init(SuiteRunner.java:159); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:113); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1299); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1286); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:13",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460:1251,test,testng,1251,https://hail.is,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460,1,['test'],['testng']
Testability,"nceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false variant=(RodBinding name=variant source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.indels.unfiltered.vcf) mask=(RodBinding name= source=UNBOUND) out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub filterExpression=[FS>200.0, QD<2.0, ReadPosRankSum<-20.0, InbreedingCoeff<-0.8] filterName=[Indel_FS, Indel_QD, Indel_ReadPosRankSum, Indel_InbreedingCoeff] genotypeFilterExpression=[] genotypeFilterName=[] clusterSize=3 clusterWindowSize=0 maskExtension=0 maskName=Mask missingValuesInExpressionsShouldEvaluateAsFailing=false invalidatePreviousFilters=false filter_mismatching_base_and_quals=false""; ##contig=<ID=1,length=248956422>; ##contig=<ID=2,length=242193529>; ##contig=<ID=3,length=198295559>; ##contig=<ID=4,length=190214555>; ##contig=<ID=5,length=181538259>; ##contig=<ID=6,length=170805979>; ##contig=<ID=7,length=159345973>; ##contig=<ID=8,length=145138636>; ##contig=<ID=9,length=138394717>; ##contig=<ID=10,length=133797422>; ##contig=<ID=11,length=135086622>; ##contig=<ID=12,length=133275309>; ##contig=<ID=13,length=114364328>; ##contig=<ID=14,length=107043718>; ##contig=<ID=15,length=101991189>; ##contig=<ID=16,length=90338345>; ##contig=<ID=17,lengt",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:20668,stub,stubs,20668,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,"nches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/tags"",; ""blobs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/blobs{/sha}"",; ""git_tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/trees{/sha}"",; ""statuses_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/languages"",; ""stargazers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/comments{/number}"",; ""issue_comment_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/comments{/number}"",; ""contents_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contents/{+path}"",; ""compare_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/compare/{base}...{head}"",; ""merges_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/merges"",. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 7030 100 6999 100 31 9306 41 --:--:-- --:--:-- --:--:-- 9319; ""archive_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/{archive_format}{/ref}"",; ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:3984,test,test,3984,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0NmViNDQ4ZS1kYjUyLTRhMjEtYjU5Ni0zZTNhZDQyYWFlYTEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQ2ZWI0NDhlLWRiNTItNGEyMS1iNTk2LTNlM2FkNDJhYWVhMSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""46eb448e-db52-4a21-b596-3e3ad42aaea1"",""prPublicId"":""46eb448e-db52-4a21-b596-3e3ad42aaea1"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""42.0.2""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-33159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14296:9627,log,logic,9627,https://hail.is,https://github.com/hail-is/hail/pull/14296,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0OWRkZWE4YS05NjJjLTQ4ODktYjgwMC0zZDY0YjgyYTBiMzgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQ5ZGRlYThhLTk2MmMtNDg4OS1iODAwLTNkNjRiODJhMGIzOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""49ddea8a-962c-4889-b800-3d64b82a0b38"",""prPublicId"":""49ddea8a-962c-4889-b800-3d64b82a0b38"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""},{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSERVER-6099119"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-T",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14109:6105,log,logic,6105,https://hail.is,https://github.com/hail-is/hail/pull/14109,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0Yzg3NGFkNy01NjNmLTQ5Y2QtOTc3My04YjlmMTA5NWUzNmMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjRjODc0YWQ3LTU2M2YtNDljZC05NzczLThiOWYxMDk1ZTM2YyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""4c874ad7-563f-49cd-9773-8b9f1095e36c"",""prPublicId"":""4c874ad7-563f-49cd-9773-8b9f1095e36c"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.6""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-33159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14148:10166,log,logic,10166,https://hail.is,https://github.com/hail-is/hail/pull/14148,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0ZDFlNzI4ZS0yNjljLTQ5YTItYTJkMC1iZjFjMDQ5NjZlMjkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjRkMWU3MjhlLTI2OWMtNDlhMi1hMmQwLWJmMWMwNDk2NmUyOSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""4d1e728e-269c-49a2-a2d0-bf1c04966e29"",""prPublicId"":""4d1e728e-269c-49a2-a2d0-bf1c04966e29"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14026:4780,log,logic,4780,https://hail.is,https://github.com/hail-is/hail/pull/14026,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0ZGE0MDY2My1hNjY3LTRhNzktOWE2NS0zMWE5NzQxMGZhZjEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjRkYTQwNjYzLWE2NjctNGE3OS05YTY1LTMxYTk3NDEwZmFmMSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""4da40663-a667-4a79-9a65-31a97410faf1"",""prPublicId"":""4da40663-a667-4a79-9a65-31a97410faf1"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""ipython"",""from"":""5.10.0"",""to"":""8.10.0""},{""name"":""jinja2"",""from"":""2.11.3"",""to"":""3.1.3""},{""name"":""jupyter-core"",""from"":""4.6.3"",""to"":""4.11.2""},{""name"":""mistune"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""prompt-toolkit"",""from"":""1.0.18"",""to"":""3.0.13""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14257:9656,log,logic,9656,https://hail.is,https://github.com/hail-is/hail/pull/14257,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1MGUxY2NlOC1kNjhlLTQxMzMtYTU5MS1lMmQxYTYyNTczMzciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjUwZTFjY2U4LWQ2OGUtNDEzMy1hNTkxLWUyZDFhNjI1NzMzNyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""50e1cce8-d68e-4133-a591-e2d1a6257337"",""prPublicId"":""50e1cce8-d68e-4133-a591-e2d1a6257337"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.4""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-33159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13887:8092,log,logic,8092,https://hail.is,https://github.com/hail-is/hail/pull/13887,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1MTRiNWVkZS0yNmZhLTQxMDYtODMxMC1jMmNlZWQ3YzA4YTkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjUxNGI1ZWRlLTI2ZmEtNDEwNi04MzEwLWMyY2VlZDdjMDhhOSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""514b5ede-26fa-4106-8310-c2ceed7c08a9"",""prPublicId"":""514b5ede-26fa-4106-8310-c2ceed7c08a9"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""40.5.0"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSERVER-6099119"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14365:5439,log,logic,5439,https://hail.is,https://github.com/hail-is/hail/pull/14365,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1NDBhNTVlYS05Y2JkLTRlZWEtYmJmZi00ZWU2NjlhZWJmYWQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjU0MGE1NWVhLTljYmQtNGVlYS1iYmZmLTRlZTY2OWFlYmZhZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""540a55ea-9cbd-4eea-bbff-4ee669aebfad"",""prPublicId"":""540a55ea-9cbd-4eea-bbff-4ee669aebfad"",""dependencies"":[{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,509],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Access Control Bypass](https:/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13516:3128,log,logic,3128,https://hail.is,https://github.com/hail-is/hail/pull/13516,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1ZGE3Y2E3NS1mMTYxLTRmN2EtYWU3Zi1jOTJiYjc0N2VjYTkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjVkYTdjYTc1LWYxNjEtNGY3YS1hZTdmLWM5MmJiNzQ3ZWNhOSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""5da7ca75-f161-4f7a-ae7f-c92bb747eca9"",""prPublicId"":""5da7ca75-f161-4f7a-ae7f-c92bb747eca9"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.0""},{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSERVER-6099119"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-T",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14074:5283,log,logic,5283,https://hail.is,https://github.com/hail-is/hail/pull/14074,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2NDVjMDg3ZS00NzIwLTRkZTgtYmI0NC00MWNkOTY0NTBmZjUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjY0NWMwODdlLTQ3MjAtNGRlOC1iYjQ0LTQxY2Q5NjQ1MGZmNSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""645c087e-4720-4de8-bb44-41cd96450ff5"",""prPublicId"":""645c087e-4720-4de8-bb44-41cd96450ff5"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""0ba777e1-bc27-41cc-aefa-0ed1a253829e"",""projectUrl"":""https://app.snyk.io/org/danking/project/0ba777e1-bc27-41cc-aefa-0ed1a253829e?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14220:3027,log,logic,3027,https://hail.is,https://github.com/hail-is/hail/pull/14220,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2NDhhMGFlYS05MjJjLTQ2YzktYjg1MS02NmM3ZTI4MmQyZTUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjY0OGEwYWVhLTkyMmMtNDZjOS1iODUxLTY2YzdlMjgyZDJlNSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""648a0aea-922c-46c9-b851-66c7e282d2e5"",""prPublicId"":""648a0aea-922c-46c9-b851-66c7e282d2e5"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.6""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-33159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14196:8702,log,logic,8702,https://hail.is,https://github.com/hail-is/hail/pull/14196,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2NTQzMzZlYi02MmRmLTQ0ODAtOTFkOS0xZDg4N2FmNmQwMTUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjY1NDMzNmViLTYyZGYtNDQ4MC05MWQ5LTFkODg3YWY2ZDAxNSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""654336eb-62df-4480-91d9-1d887af6d015"",""prPublicId"":""654336eb-62df-4480-91d9-1d887af6d015"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""ipython"",""from"":""5.10.0"",""to"":""8.10.0""},{""name"":""jinja2"",""from"":""2.11.3"",""to"":""3.1.3""},{""name"":""jupyter-core"",""from"":""4.6.3"",""to"":""4.11.2""},{""name"":""mistune"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""prompt-toolkit"",""from"":""1.0.18"",""to"":""3.0.13""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14205:11739,log,logic,11739,https://hail.is,https://github.com/hail-is/hail/pull/14205,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2ZTAyYTQ3Zi02MzNlLTQ2MDUtYjM1OS1mN2RjOGIyMDk1YTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjZlMDJhNDdmLTYzM2UtNDYwNS1iMzU5LWY3ZGM4YjIwOTVhNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""6e02a47f-633e-4605-b359-f7dc8b2095a6"",""prPublicId"":""6e02a47f-633e-4605-b359-f7dc8b2095a6"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13933:4389,log,logic,4389,https://hail.is,https://github.com/hail-is/hail/pull/13933,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3MThjYjgyZC1jNGU3LTRlNWEtODgzZi02NjQ0NjlmYzA4MGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjcxOGNiODJkLWM0ZTctNGU1YS04ODNmLTY2NDQ2OWZjMDgwYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""718cb82d-c4e7-4e5a-883f-664469fc080a"",""prPublicId"":""718cb82d-c4e7-4e5a-883f-664469fc080a"",""dependencies"":[{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JUPYTERSERVER-6099119""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[461],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Generation of Error Message Containing Sensitive Information](https://learn.snyk.io/lesson/error-message-with-sensitive-info",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14070:2812,log,logic,2812,https://hail.is,https://github.com/hail-is/hail/pull/14070,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3NTkyMDJiMS1hZTUwLTQxMjUtYjNhNS1iZjFmOTM3NTU1YWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijc1OTIwMmIxLWFlNTAtNDEyNS1iM2E1LWJmMWY5Mzc1NTVhYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""759202b1-ae50-4125-b3a5-bf1f937555ac"",""prPublicId"":""759202b1-ae50-4125-b3a5-bf1f937555ac"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13836:4389,log,logic,4389,https://hail.is,https://github.com/hail-is/hail/pull/13836,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3YjUwZjkzNy0zZjY4LTRkZjItYjliMC0zZjRiYzUyNmIwNWIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdiNTBmOTM3LTNmNjgtNGRmMi1iOWIwLTNmNGJjNTI2YjA1YiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7b50f937-3f68-4df2-b9b0-3f4bc526b05b"",""prPublicId"":""7b50f937-3f68-4df2-b9b0-3f4bc526b05b"",""dependencies"":[{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[384,494,539],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-p",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14244:3342,log,logic,3342,https://hail.is,https://github.com/hail-is/hail/pull/14244,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3YmFjNzAzOC00ZmQzLTQ3YmItOGUwMy0yNjRmYTUxNDRlNGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdiYWM3MDM4LTRmZDMtNDdiYi04ZTAzLTI2NGZhNTE0NGU0ZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7bac7038-4fd3-47bb-8e03-264fa5144e4d"",""prPublicId"":""7bac7038-4fd3-47bb-8e03-264fa5144e4d"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""ipython"",""from"":""5.10.0"",""to"":""8.10.0""},{""name"":""jupyter-core"",""from"":""4.6.3"",""to"":""4.11.2""},{""name"":""mistune"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14108:10723,log,logic,10723,https://hail.is,https://github.com/hail-is/hail/pull/14108,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3ZGRlNzcwZi0yMzMyLTQ5ZjktOWI1My05ZDY1OGJlOTVjMmQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdkZGU3NzBmLTIzMzItNDlmOS05YjUzLTlkNjU4YmU5NWMyZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7dde770f-2332-49f9-9b53-9d658be95c2d"",""prPublicId"":""7dde770f-2332-49f9-9b53-9d658be95c2d"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14228:2975,log,logic,2975,https://hail.is,https://github.com/hail-is/hail/pull/14228,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4MmVlNzU5Ny0wZmFhLTQ1NmUtOTA3Ny0zOTM4ODRjNzJmNGMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjgyZWU3NTk3LTBmYWEtNDU2ZS05MDc3LTM5Mzg4NGM3MmY0YyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""82ee7597-0faa-456e-9077-393884c72f4c"",""prPublicId"":""82ee7597-0faa-456e-9077-393884c72f4c"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.2"",""to"":""41.0.3""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[471,551,471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/le",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13370:3372,log,logic,3372,https://hail.is,https://github.com/hail-is/hail/pull/13370,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4OGE5ZjRlMS0yNGNjLTQ5NDYtYWYwYy03OWJlZTNkNTg3YzUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijg4YTlmNGUxLTI0Y2MtNDk0Ni1hZjBjLTc5YmVlM2Q1ODdjNSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""88a9f4e1-24cc-4946-af0c-79bee3d587c5"",""prPublicId"":""88a9f4e1-24cc-4946-af0c-79bee3d587c5"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""ipython"",""from"":""5.10.0"",""to"":""8.10.0""},{""name"":""jupyter-core"",""from"":""4.6.3"",""to"":""4.11.2""},{""name"":""mistune"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=r",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13835:8498,log,logic,8498,https://hail.is,https://github.com/hail-is/hail/pull/13835,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4ZjJmN2FlNC0wY2VjLTQ3ZTYtODIyZi1lODFiMTA2N2RhMjIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjhmMmY3YWU0LTBjZWMtNDdlNi04MjJmLWU4MWIxMDY3ZGEyMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""8f2f7ae4-0cec-47e6-822f-e81b1067da22"",""prPublicId"":""8f2f7ae4-0cec-47e6-822f-e81b1067da22"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""numpy"",""from"":""1.21.3"",""to"":""1.22.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-NUMPY-2321964"",""SNYK-PYTHON-NUMPY-2321966"",""SNYK-PYTHON-NUMPY-2321970"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-553728",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13871:5470,log,logic,5470,https://hail.is,https://github.com/hail-is/hail/pull/13871,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5MmJjZjUxZi1jNzEwLTRhODUtOWFmMS01YWUxNzBhODc5N2EiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjkyYmNmNTFmLWM3MTAtNGE4NS05YWYxLTVhZTE3MGE4Nzk3YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""92bcf51f-c710-4a85-9af1-5ae170a8797a"",""prPublicId"":""92bcf51f-c710-4a85-9af1-5ae170a8797a"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.5""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-33159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13938:8460,log,logic,8460,https://hail.is,https://github.com/hail-is/hail/pull/13938,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5Nzc0NDQwMi1iNzEyLTQ5NjMtYWQ0Zi01YjFhZWZmOTcwZDciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijk3NzQ0NDAyLWI3MTItNDk2My1hZDRmLTViMWFlZmY5NzBkNyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""97744402-b712-4963-ad4f-5b1aeff970d7"",""prPublicId"":""97744402-b712-4963-ad4f-5b1aeff970d7"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.2"",""to"":""41.0.3""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471,551,471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13365:3171,log,logic,3171,https://hail.is,https://github.com/hail-is/hail/pull/13365,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5ZWNjYjQ0YS1jYWZiLTQ0OTgtYjU1NS02NDdmZjUwY2ExOTQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjllY2NiNDRhLWNhZmItNDQ5OC1iNTU1LTY0N2ZmNTBjYTE5NCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""9eccb44a-cafb-4498-b555-647ff50ca194"",""prPublicId"":""9eccb44a-cafb-4498-b555-647ff50ca194"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""fdd23464-9a67-49b8-8d9c-08502282c5fb"",""projectUrl"":""https://app.snyk.io/org/danking/project/fdd23464-9a67-49b8-8d9c-08502282c5fb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14225:2961,log,logic,2961,https://hail.is,https://github.com/hail-is/hail/pull/14225,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5ZjJhMGZlMy1kYmVkLTQ2YzAtYmQyMC0yMjM3NzFiYzE0OTciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjlmMmEwZmUzLWRiZWQtNDZjMC1iZDIwLTIyMzc3MWJjMTQ5NyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""9f2a0fe3-dbed-46c0-bd20-223771bc1497"",""prPublicId"":""9f2a0fe3-dbed-46c0-bd20-223771bc1497"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""42.0.2""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-33159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14327:11309,log,logic,11309,https://hail.is,https://github.com/hail-is/hail/pull/14327,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxM2UyYzQ2MC1mZTA2LTQwOTktYWRhYi1lMWY4ZmE5MzFkZTAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjEzZTJjNDYwLWZlMDYtNDA5OS1hZGFiLWUxZjhmYTkzMWRlMCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""13e2c460-fe06-4099-adab-e1f8fa931de0"",""prPublicId"":""13e2c460-fe06-4099-adab-e1f8fa931de0"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""42.0.2""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-33159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14329:11297,log,logic,11297,https://hail.is,https://github.com/hail-is/hail/pull/14329,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxMjY5MWQyMS0wMzk1LTQxYjMtODBkMi1mMjEyODMwZjY2ZWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjEyNjkxZDIxLTAzOTUtNDFiMy04MGQyLWYyMTI4MzBmNjZlYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""12691d21-0395-41b3-80d2-f212830f66ea"",""prPublicId"":""12691d21-0395-41b3-80d2-f212830f66ea"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""},{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""is",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13873:4781,log,logic,4781,https://hail.is,https://github.com/hail-is/hail/pull/13873,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxMjk3MjE5NC04YzAyLTRhMjQtYTA0Ni0yZjIxMjk4YjQ2NmEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjEyOTcyMTk0LThjMDItNGEyNC1hMDQ2LTJmMjEyOThiNDY2YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""12972194-8c02-4a24-a046-2f21298b466a"",""prPublicId"":""12972194-8c02-4a24-a046-2f21298b466a"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.6""},{""name"":""pyjwt"",""from"":""1.7.1"",""to"":""2.4.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""rsa"",""from"":""4.5"",""to"":""4.7""}],""packageManager"":""pip"",""projectPublicId"":""e7c92c7b-5282-49ea-940f-7a5797e2a45a"",""projectUrl"":""https://app.snyk.io/org/danking/project/e7c92c7b-5282-49ea-940f-7a5797e2a45a?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYP",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14134:9021,log,logic,9021,https://hail.is,https://github.com/hail-is/hail/pull/14134,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxOGJjNGZiYS05ZTMwLTRmNWItYTE4Yy0wOGNmNDVmZDExMTciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE4YmM0ZmJhLTllMzAtNGY1Yi1hMThjLTA4Y2Y0NWZkMTExNyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""18bc4fba-9e30-4f5b-a18c-08cf45fd1117"",""prPublicId"":""18bc4fba-9e30-4f5b-a18c-08cf45fd1117"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.2"",""to"":""41.0.3""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[471,551,471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/le",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13366:3380,log,logic,3380,https://hail.is,https://github.com/hail-is/hail/pull/13366,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxZDhjNDI0MS1hOTllLTQwZDktOTM5Yy0zZWMzM2NkNTI0ZjkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjFkOGM0MjQxLWE5OWUtNDBkOS05MzljLTNlYzMzY2Q1MjRmOSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""1d8c4241-a99e-40d9-939c-3ec33cd524f9"",""prPublicId"":""1d8c4241-a99e-40d9-939c-3ec33cd524f9"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6149518"",""SNYK-PYTHON-CRYPTOGRAPHY-6157248""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use of a Broken or Risky Cryptographic Algorithm](https://learn.snyk.io/lesson/insecure-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14230:3113,log,logic,3113,https://hail.is,https://github.com/hail-is/hail/pull/14230,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyMjlkNGUyNC0xMDE4LTQ5ZDItYTQ3NC04MmViZDVhNzZlMDEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjIyOWQ0ZTI0LTEwMTgtNDlkMi1hNDc0LTgyZWJkNWE3NmUwMSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""229d4e24-1018-49d2-a474-82ebd5a76e01"",""prPublicId"":""229d4e24-1018-49d2-a474-82ebd5a76e01"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""ipython"",""from"":""5.10.0"",""to"":""8.10.0""},{""name"":""jupyter-core"",""from"":""4.6.3"",""to"":""4.11.2""},{""name"":""mistune"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=r",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13717:9970,log,logic,9970,https://hail.is,https://github.com/hail-is/hail/pull/13717,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyN2MzNWY4NC0yNDIyLTRmNzUtYWMxYy1mODQxOGJmNzRlMzciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjI3YzM1Zjg0LTI0MjItNGY3NS1hYzFjLWY4NDE4YmY3NGUzNyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""27c35f84-2422-4f75-ac1c-f8418bf74e37"",""prPublicId"":""27c35f84-2422-4f75-ac1c-f8418bf74e37"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6149518"",""SNYK-PYTHON-CRYPTOGRAPHY-6157248"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[509,581,451],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use of a Broken or Risky Cryptographic Algorithm]",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14234:3470,log,logic,3470,https://hail.is,https://github.com/hail-is/hail/pull/14234,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhMmM5NWY4MC0wNmQyLTRkNWYtODk4NS00MzBmOTdiOGY2NDMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImEyYzk1ZjgwLTA2ZDItNGQ1Zi04OTg1LTQzMGY5N2I4ZjY0MyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""a2c95f80-06d2-4d5f-8985-430f97b8f643"",""prPublicId"":""a2c95f80-06d2-4d5f-8985-430f97b8f643"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""ipython"",""from"":""5.10.0"",""to"":""8.10.0""},{""name"":""jupyter-core"",""from"":""4.6.3"",""to"":""4.11.2""},{""name"":""mistune"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14024:9063,log,logic,9063,https://hail.is,https://github.com/hail-is/hail/pull/14024,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhZDFmMzFlYi1hYTcyLTQyMTYtOTgzNC01MDljMDdhOWFmNTMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFkMWYzMWViLWFhNzItNDIxNi05ODM0LTUwOWMwN2E5YWY1MyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ad1f31eb-aa72-4216-9834-509c07a9af53"",""prPublicId"":""ad1f31eb-aa72-4216-9834-509c07a9af53"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14227:3207,log,logic,3207,https://hail.is,https://github.com/hail-is/hail/pull/14227,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhZGQ5ZWQxOC00MjJhLTRkZWUtYWI4Yy01MTkyYmQ4ZmYxMzIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFkZDllZDE4LTQyMmEtNGRlZS1hYjhjLTUxOTJiZDhmZjEzMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""add9ed18-422a-4dee-ab8c-5192bd8ff132"",""prPublicId"":""add9ed18-422a-4dee-ab8c-5192bd8ff132"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""protobuf"",""from"":""3.17.3"",""to"":""3.18.3""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""rsa"",""from"":""4.5"",""to"":""4.7""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-PROTOBUF-3031740"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-RSA-1038401"",""SNYK-PYTHON-SETUPTOOLS-3180412""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13975:3914,log,logic,3914,https://hail.is,https://github.com/hail-is/hail/pull/13975,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhZWIyYjAwNS1lYjhhLTRiMzgtYjkwMS04YzRmNTY2OGM3ZDYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFlYjJiMDA1LWViOGEtNGIzOC1iOTAxLThjNGY1NjY4YzdkNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""aeb2b005-eb8a-4b38-b901-8c4f5668c7d6"",""prPublicId"":""aeb2b005-eb8a-4b38-b901-8c4f5668c7d6"",""dependencies"":[{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,509],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Access Control Bypass](https:/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13517:2952,log,logic,2952,https://hail.is,https://github.com/hail-is/hail/pull/13517,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiMTFhNTg5Ny0yYzUzLTQ3MmEtOWY1NS1kMjcwNjYxNWNkMjgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImIxMWE1ODk3LTJjNTMtNDcyYS05ZjU1LWQyNzA2NjE1Y2QyOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b11a5897-2c53-472a-9f55-d2706615cd28"",""prPublicId"":""b11a5897-2c53-472a-9f55-d2706615cd28"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""ipython"",""from"":""5.10.0"",""to"":""8.10.0""},{""name"":""jinja2"",""from"":""2.11.3"",""to"":""3.1.3""},{""name"":""jupyter-core"",""from"":""4.6.3"",""to"":""4.11.2""},{""name"":""mistune"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""prompt-toolkit"",""from"":""1.0.18"",""to"":""3.0.13""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""40.5.0"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.32.2"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14364:10009,log,logic,10009,https://hail.is,https://github.com/hail-is/hail/pull/14364,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiOTY3NzQ2Ny0zYWIwLTQxZDYtYmUyMC01MmIzOTNjOTRiYWUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI5Njc3NDY3LTNhYjAtNDFkNi1iZTIwLTUyYjM5M2M5NGJhZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b9677467-3ab0-41d6-be20-52b393c94bae"",""prPublicId"":""b9677467-3ab0-41d6-be20-52b393c94bae"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""ipython"",""from"":""5.10.0"",""to"":""8.10.0""},{""name"":""jupyter-core"",""from"":""4.6.3"",""to"":""4.11.2""},{""name"":""mistune"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-8",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13932:8804,log,logic,8804,https://hail.is,https://github.com/hail-is/hail/pull/13932,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiYzkzNDY4ZC02OGU5LTRmYWMtYTMzNS1mODcyNjE3MDZmNDgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImJjOTM0NjhkLTY4ZTktNGZhYy1hMzM1LWY4NzI2MTcwNmY0OCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""bc93468d-68e9-4fac-a335-f87261706f48"",""prPublicId"":""bc93468d-68e9-4fac-a335-f87261706f48"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSERVER-6099119"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14211:5369,log,logic,5369,https://hail.is,https://github.com/hail-is/hail/pull/14211,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjMjFkYTE5Ny1lMDgzLTRiNzEtODc1Yi0xZmY0MjNhZWZmOWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImMyMWRhMTk3LWUwODMtNGI3MS04NzViLTFmZjQyM2FlZmY5YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""c21da197-e083-4b71-875b-1ff423aeff9a"",""prPublicId"":""c21da197-e083-4b71-875b-1ff423aeff9a"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6149518"",""SNYK-PYTHON-CRYPTOGRAPHY-6157248"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[509,581,451],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use of a Broken or Risky Cryptographic Algorithm](https://learn.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14236:3204,log,logic,3204,https://hail.is,https://github.com/hail-is/hail/pull/14236,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkMzg0ZDAwZS1iMThiLTQxYmMtODcxZi00Y2YyYTU3YWQ5MzgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImQzODRkMDBlLWIxOGItNDFiYy04NzFmLTRjZjJhNTdhZDkzOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""d384d00e-b18b-41bc-871f-4cf2a57ad938"",""prPublicId"":""d384d00e-b18b-41bc-871f-4cf2a57ad938"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13718:4321,log,logic,4321,https://hail.is,https://github.com/hail-is/hail/pull/13718,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkOTAwZjdjYS1mY2U3LTQxZDQtYTE2ZC1iYWQxMDkzMzhiZWIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImQ5MDBmN2NhLWZjZTctNDFkNC1hMTZkLWJhZDEwOTMzOGJlYiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""d900f7ca-fce7-41d4-a16d-bad109338beb"",""prPublicId"":""d900f7ca-fce7-41d4-a16d-bad109338beb"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.4""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-33159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13736:8092,log,logic,8092,https://hail.is,https://github.com/hail-is/hail/pull/13736,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlMzQ0ZjYzNy00MjQwLTQxNmEtYjE2Yi1kODhmYjc2YTUwZmYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImUzNDRmNjM3LTQyNDAtNDE2YS1iMTZiLWQ4OGZiNzZhNTBmZiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e344f637-4240-416a-b16b-d88fb76a50ff"",""prPublicId"":""e344f637-4240-416a-b16b-d88fb76a50ff"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""}],""packageManager"":""pip"",""projectPublicId"":""92d13c88-936f-40d3-b692-29e637c1a00c"",""projectUrl"":""https://app.snyk.io/org/danking/project/92d13c88-936f-40d3-b692-29e637c1a00c?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581,718],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Improper Limitation of a Pathname to a Restricted Directory (&#x27;Path Traversal&#x27;)](https://learn.s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14226:2952,log,logic,2952,https://hail.is,https://github.com/hail-is/hail/pull/14226,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlZjJlMTU4YS01YTI0LTQ2NjgtYjY2My1iMmYzYmNmZjM3NmUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImVmMmUxNThhLTVhMjQtNDY2OC1iNjYzLWIyZjNiY2ZmMzc2ZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ef2e158a-5a24-4668-b663-b2f3bcff376e"",""prPublicId"":""ef2e158a-5a24-4668-b663-b2f3bcff376e"",""dependencies"":[{""name"":""numpy"",""from"":""1.21.3"",""to"":""1.22.2""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-NUMPY-2321964"",""SNYK-PYTHON-NUMPY-2321966"",""SNYK-PYTHON-NUMPY-2321970""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown""],""priorityScoreList"":[null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lessons/null-dereference/cpp/?loc&#x3D;fix",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12895:2848,log,logic,2848,https://hail.is,https://github.com/hail-is/hail/pull/12895,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmMDZmMzgzNi1lYTNhLTQxNDMtYmE5OS0xMmI3YWQzMzc1M2QiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImYwNmYzODM2LWVhM2EtNDE0My1iYTk5LTEyYjdhZDMzNzUzZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""f06f3836-ea3a-4143-ba99-12b7ad33753d"",""prPublicId"":""f06f3836-ea3a-4143-ba99-12b7ad33753d"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.6"",""to"":""3.9.2""},{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.11.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-6091621"",""SNYK-PYTHON-AIOHTTP-6091622"",""SNYK-PYTHON-AIOHTTP-6209406"",""SNYK-PYTHON-AIOHTTP-6209407"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-JUPYTERSER",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14259:5939,log,logic,5939,https://hail.is,https://github.com/hail-is/hail/pull/14259,1,['log'],['logic']
Testability,"ncies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmY2JlODM3Mi04NzYwLTQyYjEtOGU0ZS1jZDZlNGZkNjNhYzYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZjYmU4MzcyLTg3NjAtNDJiMS04ZTRlLWNkNmU0ZmQ2M2FjNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""fcbe8372-8760-42b1-8e4e-cd6e4fd63ac6"",""prPublicId"":""fcbe8372-8760-42b1-8e4e-cd6e4fd63ac6"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""ipython"",""from"":""5.10.0"",""to"":""8.10.0""},{""name"":""jupyter-core"",""from"":""4.6.3"",""to"":""4.11.2""},{""name"":""mistune"",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=r",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13866:8524,log,logic,8524,https://hail.is,https://github.com/hail-is/hail/pull/13866,1,['log'],['logic']
Testability,"nclear if repository deletion succeeded [2], I should find a way to make curl print the HTTP status code returned by cluster deletion. FWIW, the repository appears to be deleted now (https://github.com/hail-ci-test/ci-test-p4a9fxo7), and, AFAIK, no other part of our system deletes these repositories. [1]:; ```; {; ""id"": 152339517,; ""node_id"": ""MDEwOlJlcG9zaXRvcnkxNTIzMzk1MTc="",; ""name"": ""ci-test-p4a9fxo7"",; ""full_name"": ""hail-ci-test/ci-test-p4a9fxo7"",; ""private"": false,; ""owner"": {; ""login"": ""hail-ci-test"",; ""id"": 43152710,; ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjQzMTUyNzEw"",; ""avatar_url"": ""https://avatars1.githubusercontent.com/u/43152710?v=4"",; ""gravatar_id"": """",; ""url"": ""https://api.github.com/users/hail-ci-test"",; ""html_url"": ""https://github.com/hail-ci-test"",; ""followers_url"": ""https://api.github.com/users/hail-ci-test/followers"",; ""following_url"": ""https://api.github.com/users/hail-ci-test/following{/other_user}"",; ""gists_url"": ""https://api.github.com/users/hail-ci-test/gists{/gist_id}"",; ""starred_url"": ""https://api.github.com/users/hail-ci-test/starred{/owner}{/repo}"",; ""subscriptions_url"": ""https://api.github.com/users/hail-ci-test/subscriptions"",; ""organizations_url"": ""https://api.github.com/users/hail-ci-test/orgs"",; ""repos_url"": ""https://api.github.com/users/hail-ci-test/repos"",; ""events_url"": ""https://api.github.com/users/hail-ci-test/events{/privacy}"",; ""received_events_url"": ""https://api.github.com/users/hail-ci-test/received_events"",; ""type"": ""Organization"",; ""site_admin"": false; },; ""html_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""description"": null,; ""fork"": false,; ""url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7"",; ""forks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/forks"",; ""keys_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/keys{/key_id}"",; ""collaborators_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/collaborators{/collaborator}"",; ""teams_url"": ""https://",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:1560,test,test,1560,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,1,['test'],['test']
Testability,"nction - <a href=""https://github.com/georgysavva""><code>@​georgysavva</code></a></li>; <li>Add python 3.8 support - <a href=""https://github.com/tommilligan""><code>@​tommilligan</code></a></li>; </ul>; <h3>Removed</h3>; <ul>; <li>Support for Python 2.7</li>; <li>Debian directory</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/madzak/python-json-logger/commit/076b407aa7f34bc64a729cc77da336fb159d7597""><code>076b407</code></a> Release 2.0.2</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/f51d8fe76154380cac2fe6a30a944d67dc09df2d""><code>f51d8fe</code></a> added test/build requirements to ci file</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/b07b580670c6c4e340c372c73d0e76cdddc8b456""><code>b07b580</code></a> moved release out of test workflow. setup.cfg specifies a proper wheel now</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/4df12f93928bb66b053d8693e5cd60f38588069a""><code>4df12f9</code></a> removing missed python3.4 support data</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/7c40f4abf46ee6f3b5f4290f12ff3e9872ff9892""><code>7c40f4a</code></a> removed typo around build badge</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/0837da313ea796e353b40b574e3f82591a698caf""><code>0837da3</code></a> added env to git ignore</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/c58d7d4660780e3d4872189f9889200917a8930f""><code>c58d7d4</code></a> manifest will now include readme for setup.py long description. tox and</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/03e831488ce55e4aaf886806b2c66082fb8c4027""><code>03e8314</code></a> Removed references to travis</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/e8a8a20e09d66bcce41010f29b37107eafae6ba4""><code>e8a8a20</code></a> fixed python version mapping and typo in tox name</li>; <li><a href=""https",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11467:3296,log,logger,3296,https://hail.is,https://github.com/hail-is/hail/pull/11467,1,['log'],['logger']
Testability,"ncy, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIwMjJhZDMzNS1kYzBkLTQxZWYtYmRjYi03ZTFkODQwNWJhYTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjAyMmFkMzM1LWRjMGQtNDFlZi1iZGNiLTdlMWQ4NDA1YmFhNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""022ad335-dc0d-41ef-bdcb-7e1d8405baa6"",""prPublicId"":""022ad335-dc0d-41ef-bdcb-7e1d8405baa6"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.1"",""to"":""41.0.2""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5777683""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[763],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13247:2419,log,logic,2419,https://hail.is,https://github.com/hail-is/hail/pull/13247,1,['log'],['logic']
Testability,"nd <code>covers_at_runtime</code> (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11924"">#11924</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/73de602cf62f7a68eaa6a11bf04f01eebaf9a034""><code>73de602</code></a> Stricter None handling with --no-strict-optional (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11717"">#11717</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/221a7f34cbfdc0dafe7f84042f2a707cbfdbf60f""><code>221a7f3</code></a> Fix PEP 585 type aliases in stubs (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11918"">#11918</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/b40c3d0bae812d3c38096973e84479e20353d5a9""><code>b40c3d0</code></a> Handle <code>NoReturn</code> type aliases (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11912"">#11912</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/3f2143d55c2f2ec6afc44b42541901aaaf12614a""><code>3f2143d</code></a> Always allow use of <code>type[T]</code> in stubs (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11863"">#11863</a>)</li>; <li><a href=""https://github.com/python/mypy/commit/12290decccf3d60e3b56c23be09bc853a3ed6051""><code>12290de</code></a> Bump version to 0.931+dev</li>; <li><a href=""https://github.com/python/mypy/commit/8ce64aca6e84860ffbd2605f7cb52e97c8c10771""><code>8ce64ac</code></a> [0.931 backport] Fix <strong>reduce</strong> regression (<a href=""https://github-redirect.dependabot.com/python/mypy/issues/11866"">#11866</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/python/mypy/compare/v0.780...v0.931"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mypy&package-manager=pip&previous-version=0.780&new-version=0.931)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11498:1965,stub,stubs,1965,https://hail.is,https://github.com/hail-is/hail/pull/11498,1,['stub'],['stubs']
Testability,"nd b4s['state'] == 'cancelled', b4s; ```. This batch is assigned number 9. There is one job, its number is 1. Here's a snippet of the logs around when batch 9 is created:. ```; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,933"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""create_jobs:986"", ""message"": ""created 1 jobs for batch 9""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,934"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""POST /api/v1alpha/batches/9/jobs/create HTTP/1.1\"" 200 158 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""POST /api/v1alpha/batches/9/jobs/create HTTP/1.1"", ""response_status"": 200, ""response_size"": 158, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,945"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""PATCH /api/v1alpha/batches/9/close HTTP/1.1\"" 200 158 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""PATCH /api/v1alpha/batches/9/close HTTP/1.1"", ""response_status"": 200, ""response_size"": 158, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,957"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""cancel:862"", ""message"": ""batch 9 cancelled""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,958"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""PATCH /api/v1alpha/batches/9/cancel HTTP/1.1\"" 200 158 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""PATCH /api/v1alpha/batches/9/cancel HTTP",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:1453,log,log,1453,https://hail.is,https://github.com/hail-is/hail/issues/6617,1,['log'],['log']
Testability,"nd download the actual mill jar, run `./millw --version` (or `mill --version` if you put it on your path) from the `hail/` subdirectory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.fix` runs scalafix on all sources in all modules. `mill __.fix --check` only checks for rule failures (we run this in ci). You can pass any options to scalafix, e.g. `mill fix --help`.; * `mill inspect` - see the docstring and dependencies for an",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1526,test,test,1526,https://hail.is,https://github.com/hail-is/hail/pull/14147,1,['test'],['test']
Testability,"nd invoke that. For more details on the installation options, see the github for the wrapper script [here](https://github.com/lefou/millw). To verify that it's working, and download the actual mill jar, run `./millw --version` (or `mill --version` if you put it on your path) from the `hail/` subdirectory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.fix` runs scalafix on all sources in all modules. `mill __.fix --check` only",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1337,test,testOnly,1337,https://hail.is,https://github.com/hail-is/hail/pull/14147,1,['test'],['testOnly']
Testability,"nd tests; automatically by asyncio; provide <em>strict</em> mode if a test suite; should work with different async frameworks simultaneously, e.g.; <code>asyncio</code> and <code>trio</code>.</li>; </ul>; <h1>Installation</h1>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pytest-dev/pytest-asyncio/commit/929608e60ec2c2643c7d0e7b0604cf186c158cd9""><code>929608e</code></a> docs: Prepare release 0.18.2. (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-asyncio/issues/304"">#304</a>)</li>; <li><a href=""https://github.com/pytest-dev/pytest-asyncio/commit/2359807ec75a1a39c9f60fae715b3a39885c67cf""><code>2359807</code></a> Bump actions/checkout from 2 to 3 (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-asyncio/issues/301"">#301</a>)</li>; <li><a href=""https://github.com/pytest-dev/pytest-asyncio/commit/cad1b94f1457e2a07eb58ccd32269a95e1dda1c3""><code>cad1b94</code></a> fix: Add positional arguments to the synchronous test function wrapper. (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-asyncio/issues/303"">#303</a>)</li>; <li><a href=""https://github.com/pytest-dev/pytest-asyncio/commit/357cddb506c03406d9769a5aedcc026b4fa80cb0""><code>357cddb</code></a> Bump actions/setup-python from 2 to 3 (<a href=""https://github-redirect.dependabot.com/pytest-dev/pytest-asyncio/issues/300"">#300</a>)</li>; <li><a href=""https://github.com/pytest-dev/pytest-asyncio/commit/beee1f640d6f0da0f7c25d591f53f1517753fba3""><code>beee1f6</code></a> Update changelog</li>; <li><a href=""https://github.com/pytest-dev/pytest-asyncio/commit/9246f5825f589ff01f1c67620ce34bdc416c5af3""><code>9246f58</code></a> Fix asyncio auto mode not marking static methods (closes pytest-dev/pytest-as...</li>; <li><a href=""https://github.com/pytest-dev/pytest-asyncio/commit/34436cd6653b1dd8e1836a99ca1412b850167f52""><code>34436cd</code></a> Release 0.18.1</li>; <li><a hr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11510:3342,test,test,3342,https://hail.is,https://github.com/hail-is/hail/pull/11510,1,['test'],['test']
Testability,"nd.scala:122); E 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); E 	at is.hail.services.package$.retryTransientErrors(package.scala:124); E 	at is.hail.backend.service.ServiceBackend$$anon$2.call(ServiceBackend.scala:122); E 	at is.hail.backend.service.ServiceBackend$$anon$2.call(ServiceBackend.scala:119); E 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); E 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); E 	at java.lang.Thread.run(Thread.java:750); E ; E ; E ; E ; E Hail version: 0.2.115-f6017673dbb6; E Error summary: RuntimeException: Stream is already closed.; ```. ### Version. 0.2.115-f6017673dbb6. ### Relevant log output. ```shell; ________________________________ test_spectra_4 ________________________________; [gw2] linux -- Python 3.8.10 /usr/bin/python3. def test_spectra_4():; > spectra_helper(spec4). test/hail/methods/test_pca.py:229: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; test/hail/methods/test_pca.py:172: in spectra_helper; hail_V = (np.array(scores.scores.collect()) / singulars).T; <decorator-gen-538>:2: in collect; ???; /usr/local/lib/python3.8/dist-packages/hail/typecheck/check.py:584: in wrapper; return __original_func(*args_, **kwargs_); /usr/local/lib/python3.8/dist-packages/hail/expr/expressions/base_expression.py:1132: in collect; return hl.eval(e); <decorator-gen-702>:2: in eval; ???; /usr/local/lib/python3.8/dist-packages/hail/typecheck/check.py:584: in wrapper; return __original_func(*args_, **kwargs_); /usr/local/lib/python3.8/dist-packages/hail/expr/expressions/expression_utils.py:191: in eval; return eval_timed(expression)[0]; <decorator-gen-700>:2: in eval_timed; ???; /usr/local/lib/python3.8/dist-packages/hail/typecheck/check.py:584: in wrapper; return __original_func(*args_, **kwargs_); /usr/local/lib/python3.8/dist-packages/hail/e",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12976:9933,test,test,9933,https://hail.is,https://github.com/hail-is/hail/issues/12976,1,['test'],['test']
Testability,"ndabot.com/protocolbuffers/protobuf/issues/9727"">#9727</a>)</li>; </ul>; <p>#Other</p>; <ul>; <li>Fix versioning issues in 3.20.0</li>; </ul>; <h2>Protocol Buffers v3.20.0</h2>; <p>2022-03-25 version 3.20.0 (C++/Java/Python/PHP/Objective-C/C#/Ruby/JavaScript)</p>; <h1>Ruby</h1>; <ul>; <li>Dropped Ruby 2.3 and 2.4 support for CI and releases. (<a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9311"">#9311</a>)</li>; <li>Added Ruby 3.1 support for CI and releases (<a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9566"">#9566</a>).</li>; <li>Message.decode/encode: Add recursion_limit option (<a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9218"">#9218</a>/<a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9486"">#9486</a>)</li>; <li>Allocate with xrealloc()/xfree() so message allocation is visible to the; Ruby GC. In certain tests this leads to much lower memory usage due to more; frequent GC runs (<a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9586"">#9586</a>).</li>; <li>Fix conversion of singleton classes in Ruby (<a href=""https://github-redirect.dependabot.com/protocolbuffers/protobuf/issues/9342"">#9342</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/protocolbuffers/protobuf/commits"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=protobuf&package-manager=pip&previous-version=3.19.6&new-version=4.21.12)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12563:3383,test,tests,3383,https://hail.is,https://github.com/hail-is/hail/pull/12563,1,['test'],['tests']
Testability,"ndle in self._scheduled:; if handle._cancelled:; handle._scheduled = False; else:; new_scheduled.append(handle); ; heapq.heapify(new_scheduled); self._scheduled = new_scheduled; self._timer_cancelled_count = 0; else:; # Remove delayed calls that were cancelled from head of queue.; while self._scheduled and self._scheduled[0]._cancelled:; self._timer_cancelled_count -= 1; handle = heapq.heappop(self._scheduled); handle._scheduled = False; ; timeout = None; if self._ready or self._stopping:; timeout = 0; elif self._scheduled:; # Compute the desired timeout.; when = self._scheduled[0]._when; timeout = min(max(0, when - self.time()), MAXIMUM_SELECT_TIMEOUT); ; if self._debug and timeout != 0:; t0 = self.time(); event_list = self._selector.select(timeout); dt = self.time() - t0; if dt >= 1.0:; level = logging.INFO; else:; level = logging.DEBUG; nevent = len(event_list); if timeout is None:; logger.log(level, 'poll took %.3f ms: %s events',; dt * 1e3, nevent); elif nevent:; logger.log(level,; 'poll %.3f ms took %.3f ms: %s events',; timeout * 1e3, dt * 1e3, nevent); elif dt >= 1.0:; logger.log(level,; 'poll %.3f ms took %.3f ms: timeout',; timeout * 1e3, dt * 1e3); else:; event_list = self._selector.select(timeout); self._process_events(event_list); ; # Handle 'later' callbacks that are ready.; end_time = self.time() + self._clock_resolution; while self._scheduled:; handle = self._scheduled[0]; if handle._when >= end_time:; break; handle = heapq.heappop(self._scheduled); handle._scheduled = False; self._ready.append(handle); ; # This is the only place where callbacks are actually *called*.; # All other places just add them to ready.; # Note: We run all currently scheduled callbacks, but not any; # callbacks scheduled by callbacks run this time around --; # they will be run the next time (after another I/O poll).; # Use an idiom that is thread-safe without using locks.; ntodo = len(self._ready); for i in range(ntodo):; > handle = self._ready.popleft(); E IndexError: pop fr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10705:2960,log,log,2960,https://hail.is,https://github.com/hail-is/hail/pull/10705,1,['log'],['log']
Testability,"ne direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhYmU2OWI5ZC1kMzViLTQ1Y2ItYWY2NS04ZDEwN2YxZWMzZmMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFiZTY5YjlkLWQzNWItNDVjYi1hZjY1LThkMTA3ZjFlYzNmYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""abe69b9d-d35b-45cb-af65-8d107f1ec3fc"",""prPublicId"":""abe69b9d-d35b-45cb-af65-8d107f1ec3fc"",""dependencies"":[{""name"":""cryptography"",""from"":""40.0.2"",""to"":""41.0.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5663682""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13139:2389,log,logic,2389,https://hail.is,https://github.com/hail-is/hail/pull/13139,1,['log'],['logic']
Testability,"ne direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiYWUwMDM5My05NGUzLTRhNjYtYTE5Ni0xMjUwZDg0ZGZiZDgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImJhZTAwMzkzLTk0ZTMtNGE2Ni1hMTk2LTEyNTBkODRkZmJkOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""bae00393-94e3-4a66-a196-1250d84dfbd8"",""prPublicId"":""bae00393-94e3-4a66-a196-1250d84dfbd8"",""dependencies"":[{""name"":""cryptography"",""from"":""42.0.2"",""to"":""42.0.4""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6261585""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14343:2381,log,logic,2381,https://hail.is,https://github.com/hail-is/hail/pull/14343,1,['log'],['logic']
Testability,"ne direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjOTM3MTIxYy1lZTM3LTQ2ZmMtYTcxMC04MWY4YzdhZmUyN2IiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImM5MzcxMjFjLWVlMzctNDZmYy1hNzEwLTgxZjhjN2FmZTI3YiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""c937121c-ee37-46fc-a710-81f8c7afe27b"",""prPublicId"":""c937121c-ee37-46fc-a710-81f8c7afe27b"",""dependencies"":[{""name"":""cryptography"",""from"":""40.0.2"",""to"":""41.0.0""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5663682""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13136:2380,log,logic,2380,https://hail.is,https://github.com/hail-is/hail/pull/13136,1,['log'],['logic']
Testability,"ne direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmZWM3ZmQ2Ny0xZmE0LTRlNzEtODQ4Ni1hMDk5YThmYWM3NzgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZlYzdmZDY3LTFmYTQtNGU3MS04NDg2LWEwOTlhOGZhYzc3OCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""fec7fd67-1fa4-4e71-8486-a099a8fac778"",""prPublicId"":""fec7fd67-1fa4-4e71-8486-a099a8fac778"",""dependencies"":[{""name"":""cryptography"",""from"":""40.0.2"",""to"":""41.0.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5663682""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13138:2305,log,logic,2305,https://hail.is,https://github.com/hail-is/hail/pull/13138,1,['log'],['logic']
Testability,neClass(SecureClassLoader.java:142); 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:468); 	at java.net.URLClassLoader.access$100(URLClassLoader.java:74); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:369); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:363); 	at java.security.AccessController.doPrivileged(Native Method); 	at java.net.URLClassLoader.findClass(URLClassLoader.java:362); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:351); 	at org.testng.internal.ClassHelper.forName(ClassHelper.java:94); 	at org.testng.xml.XmlClass.loadClass(XmlClass.java:78); 	at org.testng.xml.XmlClass.getSupportClass(XmlClass.java:89); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:25); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:18); 	at org.testng.TestRunner.initMethods(TestRunner.java:408); 	at org.testng.TestRunner.init(TestRunner.java:235); 	at org.testng.TestRunner.init(TestRunner.java:205); 	at org.testng.TestRunner.<init>(TestRunner.java:153); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:536); 	at org.testng.SuiteRunner.init(SuiteRunner.java:159); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:113); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1299); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1286); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); Caused by: java.lang.ClassNotFoundException: is.hail.relocated.org.apache.commons.math3.distribution.AbstractIntegerDistribution; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.Clas,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460:1638,Test,TestRunner,1638,https://hail.is,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460,1,['Test'],['TestRunner']
Testability,"need some new tests then! Let's add two tables to the src/test/resources dir, one of which has some schema that is all optional, one of which is all required. We can union them for segfaults!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8008#issuecomment-580538063:14,test,tests,14,https://hail.is,https://github.com/hail-is/hail/pull/8008#issuecomment-580538063,2,['test'],"['test', 'tests']"
Testability,need the hail.log,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4127#issuecomment-412018951:14,log,log,14,https://hail.is,https://github.com/hail-is/hail/issues/4127#issuecomment-412018951,1,['log'],['log']
Testability,"needs bump, looks like random failure (shuffler was last test run)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9223#issuecomment-670168023:57,test,test,57,https://hail.is,https://github.com/hail-is/hail/pull/9223#issuecomment-670168023,1,['test'],['test']
Testability,"nees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/assignees{/user}"",; ""branches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/tags"",; ""blobs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/blobs{/sha}"",; ""git_tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/trees{/sha}"",; ""statuses_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/languages"",; ""stargazers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/comments{/number}"",; ""issue_comment_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/comments{/number}"",; ""contents_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contents/{+path}"",; ""compare_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/compare/{base}...{head}"",; ""merges_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/merges"",. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 7030 100 6999 100 31 9306 41 --:--:-- --:--:-- --:--:-- 9319; ""archi",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:3889,test,test,3889,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"neous</strong></p>; <ul>; <li>Change SortedDict to avoid cycles for CPython reference counting.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/a1f52d6713dd2c2713a881d4f4d86ed68ff71cab""><code>a1f52d6</code></a> Bump version to 2.4.0</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/2678a78b6dacbe2352bff7876a26759d84971dac""><code>2678a78</code></a> Implement SortedDict methods: <strong>or</strong>, <strong>ror</strong>, and <strong>ior</strong> (<a href=""https://github-redirect.dependabot.com/grantjenks/python-sortedcontainers/issues/171"">#171</a>)</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/9887989b21fc21fe572e0b4c30a3f3aa1eabbdca""><code>9887989</code></a> Bump version to 2.3.0</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/da6d0d034822f66966e4a84a3a1e2f37cc83e3b0""><code>da6d0d0</code></a> Remove unneeded &quot;update order&quot; consistency test</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/e85d8659733cb3e28d539a28db0fdd71672ab2e4""><code>e85d865</code></a> Simplify &quot;update order&quot; consistency test</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/7dc426c95a0c329d5514e6198d92080f1ffc1e5e""><code>7dc426c</code></a> Fix update() ordering to be more consistent with add() ordering (<a href=""https://github-redirect.dependabot.com/grantjenks/python-sortedcontainers/issues/159"">#159</a>)</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/13d30bc654eb9e6be092282ca502967fcb7f0113""><code>13d30bc</code></a> Bump version to 2.2.2</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/4997d0e849f2275d1931772a5432163ecc20e0b0""><code>4997d0e</code></a> Refactor small slice optimization in SortedList.<strong>getitem</strong></li>; <li><a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11476:2160,test,test,2160,https://hail.is,https://github.com/hail-is/hail/pull/11476,1,['test'],['test']
Testability,ner$.ensureSerializable(ClosureCleaner.scala:166); at org.apache.spark.util.ClosureCleaner$.clean(ClosureCleaner.scala:158); at org.apache.spark.SparkContext.clean(SparkContext.scala:1622); at org.apache.spark.rdd.RDD.map(RDD.scala:286); at org.broadinstitute.hail.methods.MendelErrors.writeMendel(MendelErrors.scala:143); at org.broadinstitute.hail.methods.MendelErrorsSuite.test(MendelErrorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.Na,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1566,test,testng,1566,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['test'],['testng']
Testability,"nes/jdk1.8.0_202.jdk/Contents/Home/include/darwin build/davies.o build/ibs.o build/Decoder.o build/Encoder.o build/Logging.o build/NativeCodeSuite.o build/NativeLongFunc.o build/NativeModule.o build/NativePtr.o build/NativeStatus.o build/ObjectArray.o build/PartitionIterators.o build/Region.o build/Upcalls.o build/Hadoop.o -o lib/darwin/libhail.dylib; > Building 33% > :compileScala. :compileScala; :processResources; :classes; :compileTestJava UP-TO-DATE; :compileTestScala; :processTestResources UP-TO-DATE; :testClasses; :test; Running test: Test method testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))) PASSED; Running test: Test method testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))) PASSED; Running test: Test method testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0)))) PASSED; Running test: Test method testForwardingOps[3](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyBinaryPrimOp(Add(),ApplyBinaryPrimOp(Add(),I32(2),Ref(x,int32)),I32(1))))(is.hail.expr.ir.ForwardLetsSuite)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925:2788,test,testForwardingOps,2788,https://hail.is,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925,4,"['Test', 'test']","['Test', 'test', 'testForwardingOps']"
Testability,"netes/kubernetes/pull/90191"">kubernetes/kubernetes#90191</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery, Apps, Auth, CLI and Node]</li>; </ul>; </li>; <li>Cluster admins can now turn off /logs endpoint in kubelet by setting enableSystemLogHandler to false in their kubelet configuration file. enableSystemLogHandler can be set to true only when enableDebuggingHandlers is also set to true. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/87273"">kubernetes/kubernetes#87273</a>, <a href=""https://github.com/SaranBalaji90""><code>@​SaranBalaji90</code></a>) [SIG Node]</li>; <li>Custom Endpoints are now mirrored to EndpointSlices by a new EndpointSliceMirroring controller. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91637"">kubernetes/kubernetes#91637</a>, <a href=""https://github.com/robscott""><code>@​robscott</code></a>) [SIG API Machinery, Apps, Auth, Cloud Provider, Instrumentation, Network and Testing]</li>; <li>CustomResourceDefinitions added support for marking versions as deprecated by setting <code>spec.versions[*].deprecated</code> to <code>true</code>, and for optionally overriding the default deprecation warning with a <code>spec.versions[*].deprecationWarning</code> field. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92329"">kubernetes/kubernetes#92329</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery]</li>; <li>EnvVarSource api doc bug fixes (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91194"">kubernetes/kubernetes#91194</a>, <a href=""https://github.com/wawa0210""><code>@​wawa0210</code></a>) [SIG Apps]</li>; <li>Fix bug in reflector that couldn't recover from &quot;Too large resource version&quot; errors (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92537"">kubernetes/kubernetes#92537</a>, <a href=""https://github.com/wojtek-t""><code>@​woj",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:5854,Test,Testing,5854,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,"networking API for ClusterCIDRConfig (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108290"">kubernetes/kubernetes#108290</a>, <a href=""https://github.com/sarveshr7""><code>@​sarveshr7</code></a>)</li>; <li>Introduction of a new &quot;sync_proxy_rules_no_local_endpoints_total&quot; proxy metric. This metric represents the number of services with no internal endpoints. The &quot;traffic_policy&quot; label will contain both &quot;internal&quot; or &quot;external&quot;. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108930"">kubernetes/kubernetes#108930</a>, <a href=""https://github.com/MaxRenaud""><code>@​MaxRenaud</code></a>)</li>; <li>JobReadyPods graduates to Beta and it's enabled by default. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/107476"">kubernetes/kubernetes#107476</a>, <a href=""https://github.com/alculquicondor""><code>@​alculquicondor</code></a>)</li>; <li>Kube-apiserver: <code>--audit-log-version</code> and <code>--audit-webhook-version</code> now only support the default value of <code>audit.k8s.io/v1</code>. The v1alpha1 and v1beta1 audit log versions, deprecated since 1.13, have been removed. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108092"">kubernetes/kubernetes#108092</a>, <a href=""https://github.com/carlory""><code>@​carlory</code></a>)</li>; <li>Kube-apiserver: the <code>metadata.selfLink</code> field can no longer be populated by kube-apiserver; it was deprecated in 1.16 and has not been populated by default since 1.20+. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/107527"">kubernetes/kubernetes#107527</a>, <a href=""https://github.com/wojtek-t""><code>@​wojtek-t</code></a>)</li>; <li>Kubelet external Credential Provider feature is moved to Beta. Credential Provider Plugin and Credential Provider Config API's updated from v1alpha1 to v1beta1 with no API changes. (<a href=""https://github-redirect.dependabot",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12196:8315,log,log-version,8315,https://hail.is,https://github.com/hail-is/hail/pull/12196,1,['log'],['log-version']
Testability,nfun$executeOneCommand$12(ServiceBackend.scala:700); 	at is.hail.backend.service.ServiceBackendSocketAPI2.withIRFunctionsReadFromInput(ServiceBackend.scala:803); 	at is.hail.backend.service.ServiceBackendSocketAPI2.$anonfun$executeOneCommand$11(ServiceBackend.scala:698); 	at is.hail.backend.service.ServiceBackendSocketAPI2.$anonfun$executeOneCommand$2(ServiceBackend.scala:656); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); 	at is.hail.backend.service.ServiceBackendSocketAPI2.$anonfun$executeOneCommand$1(ServiceBackend.scala:646); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:59); 	at is.hail.backend.service.ServiceBackendSocketAPI2.withExecuteContext$1(ServiceBackend.scala:633); 	at is.hail.backend.service.ServiceBackendSocketAPI2.executeOneCommand(ServiceBackend.scala:695); 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$6(ServiceBackend.scala:461); 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$6$adapted(ServiceBackend.scala:460); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$5(ServiceBackend.scala:460); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:124); 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$4(ServiceBackend.scala:460); 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$4$adapted(ServiceBackend.scala:458); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.backend.servi,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12982:12020,log,logTime,12020,https://hail.is,https://github.com/hail-is/hail/issues/12982,6,['log'],['logTime']
Testability,"ng 32-bit and 64-bit integers.; 2. Have a new warning about Hail upcasting 8 and 16 bit integers to 32-bit integers; 3. Stop (and have tests preventing) converting unsigned 64-bit and 32-bit integers to signed integers. ---. ```python3; int8 = signedinteger[_8Bit]; int16 = signedinteger[_16Bit]; int32 = signedinteger[_32Bit]; int64 = signedinteger[_64Bit]. byte = signedinteger[_NBitByte]; short = signedinteger[_NBitShort]; intc = signedinteger[_NBitIntC]; intp = signedinteger[_NBitIntP]; int_ = signedinteger[_NBitInt]; longlong = signedinteger[_NBitLongLong]. uint8 = unsignedinteger[_8Bit]; uint16 = unsignedinteger[_16Bit]; uint32 = unsignedinteger[_32Bit]; uint64 = unsignedinteger[_64Bit]. ubyte = unsignedinteger[_NBitByte]; ushort = unsignedinteger[_NBitShort]; uintc = unsignedinteger[_NBitIntC]; uintp = unsignedinteger[_NBitIntP]; uint = unsignedinteger[_NBitInt]; ulonglong = unsignedinteger[_NBitLongLong]; ```. `signedinteger` and `unsignedinteger` are both subclasses of ; ```python3; class integer(number[_NBit1]):; ```. The `_8Bit` and friends are just unique types, I don't think they're ever instantiated:; ```python3; class NBitBase:; """"""; A type representing `numpy.number` precision during static type checking. Used exclusively for the purpose static type checking, `NBitBase`; represents the base of a hierarchical set of subclasses.; Each subsequent subclass is herein used for representing a lower level; of precision, *e.g.* ``64Bit > 32Bit > 16Bit``. .. versionadded:: 1.20. ...; """"""; # ...; # ... class _256Bit(NBitBase): # type: ignore[misc]; pass. class _128Bit(_256Bit): # type: ignore[misc]; pass. class _96Bit(_128Bit): # type: ignore[misc]; pass. class _80Bit(_96Bit): # type: ignore[misc]; pass. class _64Bit(_80Bit): # type: ignore[misc]; pass. class _32Bit(_64Bit): # type: ignore[misc]; pass. class _16Bit(_32Bit): # type: ignore[misc]; pass. class _8Bit(_16Bit): # type: ignore[misc]; pass; ```. ### Version. 0.2.120. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13537:2718,log,log,2718,https://hail.is,https://github.com/hail-is/hail/issues/13537,1,['log'],['log']
Testability,"ng client session replaces asynchronous methods with; synchronous ones. Both sessions accept the `aiohttp.ClientSession` constructor parameters. They; support one new parameter and modify the behavior of one old parameter.; - `retry_transient`: when set to `True` this parameter will retry all transient; errors in all requests made by this session. This defaults to `True`.; - `raise_for_status`: this parameter now defaults to `True` and includes the; response body text in the error message. Both; Both parameters may be overridden on a per-request basis. - `httpx.ResponseManager` and `httpx.ClientSession` work together to enable; `retry_transient` and `raise_for_status`. Aiohttp has this unusual structure where; all the request methods are synchronous but they return an object that is both; awaitable and an async context manager. I mirror their structure exactly. The; `httpx.ResponseManager` is both awaitable and an async context manager. Its; `response_coroutine` field is a coroutine that includes the retry and; raise-for-status logic. - The `HailResolver` overrides domain name resolution to first consult the Hail; `address` service. `address` is effectively a domain name server. It watches; kubernetes services and publishes the pod IPs. It supports two name styles:; `service` and `service.namespace`. The former uses the deploy config to; determine in which namespace to find the given service. Currently, the; client-side library only looks up IPs for `shuffler` and `address`. - `BlockingClientSession` and `BlockingContextManager` wrap the; aforementioned `httpx` classes. `BlockingClientResponse` wraps an; `aiohttp.ClientResponse`. ---. Examples of correct usage:. A blocking HTTPS request:. ```python3; with httpx.blocking_client_session() as session:; with session.post(url, json=config, headers=headers) as resp:; assert resp.status == 200; print(resp.text()); ```. An asynchronous HTTPS request to auth:; ```python3; async with httpx.client_session() as session:; async ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9554:2095,log,logic,2095,https://hail.is,https://github.com/hail-is/hail/pull/9554,1,['log'],['logic']
Testability,"ng in person what makes the most sense for 0.1. Here are the pieces I think we should separate for devel, though we could consider providing a meta-interface as well that combines some of them for usability. I'm writing (U, S, L) for a local matrix of eigenvectors U, an array of eigenvalues S, and an array of labels L on the rows of U (as with labels for SymmetricMatrix). 1) VDS to a (labeled) symmetric matrix (we have these: GRM, RRM, LD matrix, and Dan is working on a way to read and write them). 2) Symmetric matrix to (U, S, L), which we'll want to write and read. This modularizes the single-core eigen-decomposition bottleneck. 3) Variant-labeled (V, S, L) and VDS with those variants to transport (V, S, L) to sample-labeled (U, S, L). Currently this also requires knowing the number of samples used to make the LDMatrix since that number is used in its normalization. I agree it feels unnatural to need to remember this; to avoid it we'd need an unnormalized version. 4) Sample-labeled (U, S, L) and VDS to global fit of LMM including delta. This is currently a local computation that's been pretty fast in practice but as sample sizes increase we will want to distribute evaluating many values of delta in parallel. Note this step only uses the sample annotations on the VDS, so logically it could also be on KeyTable (which would be the sample KeyTable of the VDS). 5) Sample-labeled (U, S, L), VDS, and delta to per-variant-fit of LMM. This VDS can now contain exactly the variants one wants to fit. (5) should eventually be decomposed as well. The first command should project from Matrix to Matrix (projecting both numeric cells and a list of numeric sample annotations) and some additional small data. Then (6) will do per variant tests starting from after this projection (that is, after what is the BIG computation when you have tens of millions of variants). That way users can quickly iterate on exploration of covariates, fine mapping, and so on, for any fixed set of samples.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1984#issuecomment-319971210:1395,log,logically,1395,https://hail.is,https://github.com/hail-is/hail/pull/1984#issuecomment-319971210,4,"['log', 'test']","['logically', 'tests']"
Testability,ng.NoClassDefFoundError: is/hail/relocated/org/apache/commons/math3/distribution/AbstractIntegerDistribution; 	at java.lang.ClassLoader.defineClass1(Native Method); 	at java.lang.ClassLoader.defineClass(ClassLoader.java:756); 	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:468); 	at java.net.URLClassLoader.access$100(URLClassLoader.java:74); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:369); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:363); 	at java.security.AccessController.doPrivileged(Native Method); 	at java.net.URLClassLoader.findClass(URLClassLoader.java:362); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:351); 	at org.testng.internal.ClassHelper.forName(ClassHelper.java:94); 	at org.testng.xml.XmlClass.loadClass(XmlClass.java:78); 	at org.testng.xml.XmlClass.getSupportClass(XmlClass.java:89); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:25); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:18); 	at org.testng.TestRunner.initMethods(TestRunner.java:408); 	at org.testng.TestRunner.init(TestRunner.java:235); 	at org.testng.TestRunner.init(TestRunner.java:205); 	at org.testng.TestRunner.<init>(TestRunner.java:153); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:536); 	at org.testng.SuiteRunner.init(SuiteRunner.java:159); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:113); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1299); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1286); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); Caused by: java.lang.ClassNotFoundException: is.hail.relocated.org.apach,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460:1374,test,testng,1374,https://hail.is,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460,1,['test'],['testng']
Testability,"ng/workshop-test/1kg.mt/cols/rows/parts/,None,None)),Let(__iruid_369,CollectDistributedArray(StreamZip(ArrayBuffer(ToStream(Literal(array<struct{index: int32, file: str, start: int64, end: int64, split: bool}>,ArrayBuffer([0,gs://hail-tutorial/1kg.vcf.bgz,0,261965807616,true], [1,gs://hail-tutorial/1kg.vcf.bgz,3997281,523931615232,true], [2,gs://hail-tutorial/1kg.vcf.bgz,7994562,785897422848,true], [3,gs://hail-tutorial/1kg.vcf.bgz,11991843,1047863164928,true])),false), MakeStream(ArrayBuffer(Str(""part-0-""), Str(""part-1-""), Str(""part-2-""), Str(""part-3-"")),stream<str>,false)),ArrayBuffer(__iruid_372, __iruid_373),MakeStruct(ArrayBuffer((oldCtx,Ref(__iruid_372,struct{index: int32, file: str, start: int64, end: int64, split: bool})), (writeCtx,Ref(__iruid_373,str)))),AssertSameLength),Literal(struct{},[]),__iruid_370,__iruid_371,WritePartition(ReadPartition(GetField(Ref(__iruid_370,struct{oldCtx: struct{index: int32, file: str, start: int64, end: int64, split: bool}, writeCtx: str}),oldCtx),struct{locus: locus<GRCh37>, alleles: array<str>, rsid: str, qual: float64, filters: set<str>, info: struct{AC: array<int32>, AF: array<float64>, AN: int32, BaseQRankSum: float64, ClippingRankSum: float64, DP: int32, DS: bool, FS: float64, HaplotypeScore: float64, InbreedingCoeff: float64, MLEAC: array<int32>, MLEAF: array<float64>, MQ: float64, MQ0: int32, MQRankSum: float64, QD: float64, ReadPosRankSum: float64, set: str}, `the entries! [877f12a8827e18f61222c6c8c5fb04a8]`: array<struct{GT: call, AD: array<int32>, DP: int32, GQ: int32, PL: array<int32>}>},is.hail.expr.ir.PartitionIteratorLongReader@3da0d80),Apply(concat,WrappedArray(),ArrayBuffer(GetField(Ref(__iruid_370,struct{oldCtx: struct{index: int32, file: str, start: int64, end: int64, split: bool}, writeCtx: str}),writeCtx), UUID4(__iruid_277)),str),SplitPartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{locus:+EBaseStruct{contig:+EBinary,position:+EInt32},alleles:+EArray[+EBinary],rsid:EBinary,qual:EFloat",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:6372,Assert,AssertSameLength,6372,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['Assert'],['AssertSameLength']
Testability,"ng_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_legacy_downsampler=false baq=OFF baqGapOpenPenalty=40.0 fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false performanceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false variant=(RodBinding name=variant source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.indels.unfiltered.vcf) mask=(RodBinding name= source=UNBOUND) out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub filterExpression=[FS>200.0, QD<2.0, ReadPosRankSum<-20.0, InbreedingCoeff<-0.8] filterName=[Indel_FS, Indel_QD, Indel_ReadPosRankSum, Indel_InbreedingCoeff] genotypeFilterExpression=[] genotypeFilterName=[] clusterSize=3 clusterWindowSize=0 maskExtension=0 maskName=Mask missingValuesInExpressionsShouldEvaluateAsFailing=false invalidatePreviousFilters=false filter_mismatching_base_and_quals=false""; ##contig=<ID=1,length=248956422>; ##contig=<ID=2,length=242193529>; ##contig=<ID=3,length=198295559>; ##contig=<ID=4,length=190214555>; ##contig=<ID=5,length=181538259>; ##contig=<ID=6,length=170805979>; ##contig=<ID=7,length=159345973>; ##contig=<ID=8,length=145138636>; ##contig=<ID=9,length=138394717>; ##contig=<ID=10,length=133797422>; ##",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:20440,stub,stubs,20440,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,nice test : code ratio,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4121#issuecomment-416343633:5,test,test,5,https://hail.is,https://github.com/hail-is/hail/pull/4121#issuecomment-416343633,1,['test'],['test']
Testability,nice tests.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3792#issuecomment-398748205:5,test,tests,5,https://hail.is,https://github.com/hail-is/hail/pull/3792#issuecomment-398748205,1,['test'],['tests']
Testability,nice! can you run benchmarks?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10094#issuecomment-786111977:18,benchmark,benchmarks,18,https://hail.is,https://github.com/hail-is/hail/pull/10094#issuecomment-786111977,1,['benchmark'],['benchmarks']
Testability,nice! don't forget to make a discuss post once this goes in! (I think a post on this thread is probably sufficient?). http://discuss.hail.is/t/log-of-breaking-changes-in-0-2-beta/454/6,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3518#issuecomment-388498058:143,log,log-of-breaking-changes-in-,143,https://hail.is,https://github.com/hail-is/hail/pull/3518#issuecomment-388498058,1,['log'],['log-of-breaking-changes-in-']
Testability,"ning</b></summary>. ```; sphinx 5.3.0 has requirement docutils<0.20,>=0.14, but you have docutils 0.20.; sphinx-rtd-theme 1.2.0 has requirement docutils<0.19, but you have docutils 0.20. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **556/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.4 | Open Redirect <br/>[SNYK-PYTHON-TORNADO-5537286](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5537286) | `tornado:` <br> `6.2 -> 6.3.2` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyOTUzNDFmZi1lMjQ4LTRiOTItYTY1Yy1kYjJiZWQ3ZDQxMGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjI5NTM0MWZmLWUyNDgtNGI5Mi1hNjVjLWRiMmJlZDdkNDEwZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13066:1352,test,tested,1352,https://hail.is,https://github.com/hail-is/hail/pull/13066,1,['test'],['tested']
Testability,"nk GWAS for chr22. Any suggestions for this?. The code used is:. ```; chr=sys.argv[1]. bgen=""/project/ukbiobank/imp/uk.v3/bgen/ukb_imp_chr""+chr+""_v3.bgen""; sample=""/project/ukbiobank/imp/uk.v3/bgen/ukb19416_imp_chr""+chr+""_v3_s487327.sample""; # hl.index_bgen(bgen); mt=hl.import_bgen(bgen,sample_file=sample,entry_fields=['GT','GP','dosage']); print(mt.describe()); rg37 = hl.get_reference('GRCh37'); rg38 = hl.get_reference('GRCh38'); rg37.add_liftover('file:///restricted/projectnb/ukbiobank/ad/analysis/liftover/grch37_to_grch38.over.chain.gz', rg38); mt = mt.annotate_rows(new_locus=hl.liftover(mt.locus, 'GRCh38'), old_locus=mt.locus); mt = mt.filter_rows(hl.is_defined(mt.new_locus)); # mt = mt.key_rows_by(locus=mt.new_locus); print(mt.describe()); mt = mt.key_rows_by(locus=mt.new_locus,alleles=mt.alleles); print(mt.describe()); hl.export_vcf(mt,""/project/ukbiobank/imp/uk.v3.GRCh38/uk.v3.r38.chr""+chr+"".vcf.bgz""); ```. ```; Version 0.2.19-c6ec8b76eb26; LOGGING: writing to /restricted/projectnb/ukbiobank/ad/analysis/liftover/hail-20200214-1434-0.2.19-c6ec8b76eb26.log; 2020-02-14 14:35:19 Hail: INFO: Number of BGEN files parsed: 1; 2020-02-14 14:35:19 Hail: INFO: Number of samples in BGEN files: 487409; 2020-02-14 14:35:19 Hail: INFO: Number of variants across all BGEN files: 1255683. Global fields:; None; ----------------------------------------; Column fields:; 's': str; ----------------------------------------; Row fields:; 'locus': locus<GRCh38>; 'alleles': array<str>; 'rsid': str; 'varid': str; 'new_locus': locus<GRCh38>; 'old_locus': locus<GRCh37>; ----------------------------------------; Entry fields:; 'GT': call; 'GP': array<float64>; 'dosage': float64; ----------------------------------------; Column key: ['s']; Row key: ['locus', 'alleles']; ----------------------------------------; None; 2020-02-14 14:35:22 Hail: WARN: export_vcf: ignored the following fields:; 'varid' (row); 'new_locus' (row); 'old_locus' (row); [Stage 0:========================================",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8106:1046,LOG,LOGGING,1046,https://hail.is,https://github.com/hail-is/hail/issues/8106,1,['LOG'],['LOGGING']
Testability,"nly under very specific conditions. When we run `subject_qc` on a matrix table with >= 354 partitions using an external spark cluster (i.e. specifying `master` in `hail.init`), the spark worker crashes with a SIGSEGV. The issue does not occur with `variant_qc` but we do not know know the extent of what specific operations trigger it. Below is a test that consistently triggers the issue:. Setup:. $ $SPARK_HOME/sbin/start-master.sh --host localhost --port 7077; $ $SPARK_HOME/sbin/start-shuffle-service.sh; $ $SPARK_HOME/sbin/start-slave.sh spark://localhost:7077 --work-dir /scratch/local/. Test:. import hail; hail.init(master=""spark://localhost:7077""); P = 1; S = 1000; V = 50000; for N in range(350, 400, 1):; try:; mt = hail.balding_nichols_model(P, S, V, N); mt = hail.sample_qc(mt); mt = mt.filter_cols(mt.sample_qc.n_hom_var > V*0.32); print(""\n[PASS] with"", N, ""partitions:"", mt.count()); except Exception:; print(""\n[FAIL] with "", N, ""partitions""); break. Test Output (SIGSEGV is reported in Spark worker logs, see end):. 2020-06-10 10:29:56 WARN NativeCodeLoader:62 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 	Setting default log level to ""WARN"".; 	To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; 	Running on Apache Spark version 2.4.5; 	SparkUI available at http://US0HPN0036.cm.cluster:4047; 	Welcome to; 		 __ __ <>__; 		/ /_/ /__ __/ /; 	 / __ / _ `/ / /; 	 /_/ /_/\_,_/_/_/ version 0.2.44-6cfa355a1954; 	LOGGING: writing to /bmrn/apps/bmrn-hugelib/0.3.0/test/hail-20200610-1029-0.2.44-6cfa355a1954.log; 	2020-06-10 10:29:59 Hail: INFO: balding_nichols_model: generating genotypes for 1 populations, 1000 samples, and 50000 variants...; 	[Stage 1:==========================> (171 + 80) / 350]; 	[PASS] with 350 partitions: (50000, 984); 	2020-06-10 10:30:08 Hail: INFO: balding_nichols_model: generating genotypes for 1 populations, 1000 samples, and 50000 variants...; 	[Sta",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8944:1096,Test,Test,1096,https://hail.is,https://github.com/hail-is/hail/issues/8944,2,"['Test', 'log']","['Test', 'logs']"
Testability,"no red flags in benchmarks: https://gist.github.com/tpoterba/f30db3931faf2448badd3860d772f2b1. (I don't believe this branch is >5% faster though, no reason to trust that)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10477#issuecomment-840938150:16,benchmark,benchmarks,16,https://hail.is,https://github.com/hail-is/hail/pull/10477#issuecomment-840938150,1,['benchmark'],['benchmarks']
Testability,"no, its just a question of where we put the checking logic. When we add a reference genome in Emit, we'll probably just have to set some boolean flag that tells us if something has already been set, and only call the `loader` code if it hasn't been set.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3357#issuecomment-380970181:53,log,logic,53,https://hail.is,https://github.com/hail-is/hail/pull/3357#issuecomment-380970181,1,['log'],['logic']
Testability,"node.kubernetes.io/not-ready:NoExecute for 300s; node.kubernetes.io/unreachable:NoExecute for 300s; preemptible=true; Events: <none>; ```; ```; # k get pods -n batch-pods batch-12728-job-287-742170 -o yaml; apiVersion: v1; kind: Pod; metadata:; creationTimestamp: 2019-09-05T19:12:22Z; labels:; app: batch-job; batch_id: ""12728""; hail.is/batch-instance: cd50b95a89914efb897965a5e982a29d; job_id: ""287""; user: wang; uuid: ca985fd90f9d46968ab9c480af9c931c; name: batch-12728-job-287-742170; namespace: batch-pods; resourceVersion: ""116541360""; selfLink: /api/v1/namespaces/batch-pods/pods/batch-12728-job-287-742170; uid: 1681dd05-d011-11e9-92a9-42010a800041; spec:; containers:; - command:; - /bin/bash; - -c; - set -e; mkdir -p /io/pipeline/pipeline-1cac3dd4e66d/__TASK__286/; __RESOURCE_FILE__286=/io/pipeline/pipeline-1cac3dd4e66d/__TASK__286/8926feac;; __RESOURCE_FILE__0=/io/pipeline/pipeline-1cac3dd4e66d/__TASK__0/0731f9a3; mv; ${__RESOURCE_FILE__0} benchmark-resources.tar.gz && time tar -xvf benchmark-resources.tar.gz; && hailctl dev benchmark run -v -o ${__RESOURCE_FILE__286} -n 5 --data-dir benchmark-resources; -t read_with_index_p1000; env:; - name: POD_IP; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: status.podIP; - name: POD_NAME; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: metadata.name; image: gcr.io/broad-ctsa/benchmark_wang:latest; imagePullPolicy: Always; name: main; resources:; requests:; cpu: ""2""; memory: 7G; terminationMessagePath: /dev/termination-log; terminationMessagePolicy: File; volumeMounts:; - mountPath: /gsa-key; name: gsa-key; - mountPath: /io; name: batch-12728-job-287-742170; - mountPath: /var/run/secrets/kubernetes.io/serviceaccount; name: batch-output-pod-token-8pkmz; readOnly: true; - command:; - /bin/sh; - -c; - ""\n set -ex\n python3 -m batch.cleanup_sidecar\n ""; env:; - name: COPY_OUTPUT_CMD; value: set -ex; (gcloud -q auth activate-service-account --key-file=/gsa-key/privateKeyData; || (sleep $(( 5 + (RANDOM % 5) )); gcloud -q auth",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7016:5756,benchmark,benchmark-resources,5756,https://hail.is,https://github.com/hail-is/hail/issues/7016,1,['benchmark'],['benchmark-resources']
Testability,"none-any.whl"" which is different from old value ""gs://hail-30-day/hailctl/dataproc/edmund-dev/0.2.129-827516e474c3/hail-0.2.129-py3-none-any.whl""; mkdir -p env; printf ""gs://hail-common/hailctl/dataproc/0.2.129/hail-0.2.129-py3-none-any.whl"" > env/wheel_cloud_path; rm -f python/hailtop/hailctl/deploy.yaml; echo ""dataproc:"" >> python/hailtop/hailctl/deploy.yaml; for FILE in init_notebook.py vep-GRCh37.sh vep-GRCh38.sh; do \; echo "" $FILE: gs://hail-common/hailctl/dataproc/0.2.129/$FILE"" >> python/hailtop/hailctl/deploy.yaml || exit 1; done; echo "" wheel: gs://hail-common/hailctl/dataproc/0.2.129/hail-0.2.129-py3-none-any.whl"" >> python/hailtop/hailctl/deploy.yaml; printf "" pip_dependencies: "" >> python/hailtop/hailctl/deploy.yaml; cat python/pinned-requirements.txt | sed '/^[[:blank:]]*#/d;s/#.*//' | grep -v pyspark | tr ""\n"" ""|||"" | tr -d '[:space:]' >> python/hailtop/hailctl/deploy.yaml; rm -rf build/deploy; mkdir -p build/deploy; mkdir -p build/deploy/src; cp ../README.md build/deploy/; rsync -r \; --exclude '.eggs/' \; --exclude '.pytest_cache/' \; --exclude '__pycache__/' \; --exclude 'benchmark_hail/' \; --exclude '.mypy_cache/' \; --exclude 'docs/' \; --exclude 'dist/' \; --exclude 'test/' \; --exclude '*.log' \; python/ build/deploy/; # Clear the bdist build cache before building the wheel; cd build/deploy; rm -rf build; python3 setup.py -q sdist bdist_wheel; gcloud storage cp python/hailtop/hailctl/dataproc/resources/init_notebook.py python/hailtop/hailctl/dataproc/resources/vep-GRCh37.sh python/hailtop/hailctl/dataproc/resources/vep-GRCh38.sh build/deploy/dist/hail-0.2.129-py3-none-any.whl gs://hail-common/hailctl/dataproc/0.2.129; gcloud storage objects update -r gs://hail-common/hailctl/dataproc/0.2.129 --add-acl-grant=entity=AllUsers,role=READER; gcloud storage objects update ""gs://hail-common/hailctl/dataproc/0.2.129/*"" --temporary-hold; ```. Note the following:; - mill is not invoked; - deploy.yaml is re-made with the correct uris; - the wheel is built",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14453#issuecomment-2045927145:1759,test,test,1759,https://hail.is,https://github.com/hail-is/hail/pull/14453#issuecomment-2045927145,2,"['log', 'test']","['log', 'test']"
Testability,nonfun$cmapPartitionsWithIndex$1$$anonfun$apply$22$$anonfun$apply$23.apply(ContextRDD.scala:310); 	at is.hail.sparkextras.ContextRDD$$anonfun$cmapPartitionsWithIndex$1$$anonfun$apply$22$$anonfun$apply$23.apply(ContextRDD.scala:310); 	at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$21$$anon$3.hasNext(OrderedRVD.scala:1014); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at is.hail.rvd.RVD$$anonfun$4$$anon$1.hasNext(RVD.scala:226); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$21$$anon$3.hasNext(OrderedRVD.scala:1014); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:439); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); 	at is.hail.utils.package$.getIteratorSizeWithMaxN(package.scala:357); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:444); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:444); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:471); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:469); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2062); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2062); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); 	at org.apache.spark.scheduler.Task.run(Task.scala:108); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). Hail version: devel-f2b0dca9f506; Error summary: AssertionError: assertion failed; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4114:9219,Assert,AssertionError,9219,https://hail.is,https://github.com/hail-is/hail/issues/4114,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,not for merging just for test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13000:25,test,test,25,https://hail.is,https://github.com/hail-is/hail/pull/13000,1,['test'],['test']
Testability,"not moved to table there. Same needs to be done for VDS, this isn't too hard); - Add the non-core methods to `hail.methods` / `hail.genetics.methods`; - some stuff here is much harder than the rest, like `filter_alleles`; - This is mostly just labor, but some require more thought than others, like moving TDT to use hail2 expr; - Support intervals in the `index_*` methods. It's possible now to join by locus, but not using the `annotateLociTable` fast path.; - Move to Python 3 so argument order is preserved; - Test the hail2 api much more rigorously than we do now (at the very least, call each parameter branch for each method!; - Typecheck the expression language. This isn't super trivial, and making a nice system to integrate our `typecheck` module and expressions will require some thoughtful design work.; - Some more organization around the package: monkey patching with `import hail.genetics` is an idea I like, but want to think about the edge cases first. ## Documentation; - Document the `index_*` methods / joins; - Translate the _Hail Overview_ tutorial; - Make new tutorials to replace the 2 expr ones we have; - Fill in docs on api2 methods (they're not all there yet); - Fill in docs on expression language (things like __mul__ on NumericExpression haven't been documented); - Write ""integrative docs"" that provide how-tos for common types of workflows. Show the power of annotate / select / group_by/aggregate, etc. ## Longer term QoL:; - Move over tests to Python as much as possible. I looked at the linear regression suite and it can be moved entirely into Python without many problems.; - Write a type parser in Python. The nested calls into the JVM for Type._from_java make the library feel extremely sluggish on teensy data.; - Integrate RV with C/C++, so we can transmit data much more efficiently between Python and Java.; - Rethink the expr language function registry, because many functions there can be implemented in terms of others in Python.; - add back in de novo",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2588#issuecomment-352190554:1737,test,tests,1737,https://hail.is,https://github.com/hail-is/hail/pull/2588#issuecomment-352190554,2,['test'],['tests']
Testability,"not passing tests:; ```; + java -cp 'hail-test.jar:/spark-2.4.0-bin-hadoop2.7/jars/*' org.testng.TestNG -listener is.hail.LogTestListener testng-build.xml; [[ClassInfoMap]] Unable to open class is.hail.stats.LeveneHaldane - unable to resolve class reference is/hail/relocated/org/apache/commons/math3/distribution/AbstractIntegerDistribution; Exception in thread ""main"" java.lang.NoClassDefFoundError: is/hail/relocated/org/apache/commons/math3/distribution/AbstractIntegerDistribution; 	at java.lang.ClassLoader.defineClass1(Native Method); 	at java.lang.ClassLoader.defineClass(ClassLoader.java:756); 	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:468); 	at java.net.URLClassLoader.access$100(URLClassLoader.java:74); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:369); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:363); 	at java.security.AccessController.doPrivileged(Native Method); 	at java.net.URLClassLoader.findClass(URLClassLoader.java:362); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:351); 	at org.testng.internal.ClassHelper.forName(ClassHelper.java:94); 	at org.testng.xml.XmlClass.loadClass(XmlClass.java:78); 	at org.testng.xml.XmlClass.getSupportClass(XmlClass.java:89); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:25); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:18); 	at org.testng.TestRunner.initMethods(TestRunner.java:408); 	at org.testng.TestRunner.init(TestRunner.java:235); 	at org.testng.TestRunner.init(TestRunner.java:205); 	at org.testng.TestRunner.<init>(TestRunner.java:153); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:536); 	at org.testng.SuiteRunner.init(SuiteRunner.java:159); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:113); 	at org.testng.T",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460:12,test,tests,12,https://hail.is,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460,6,"['Log', 'Test', 'test']","['LogTestListener', 'TestNG', 'test', 'testng', 'testng-build', 'tests']"
Testability,"not sure if this is worth documenting here, but I had this question, and did some tests to figure out the answer.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/805:82,test,tests,82,https://hail.is,https://github.com/hail-is/hail/pull/805,1,['test'],['tests']
Testability,not testing?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4944#issuecomment-446447752:4,test,testing,4,https://hail.is,https://github.com/hail-is/hail/pull/4944#issuecomment-446447752,1,['test'],['testing']
Testability,"nother exception occurred:; ; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/private/var/folders/br/f16ml9tx5z32fhsdd1nqpymm0000gn/T/pip-install-0g3aqft5/pyspark/setup.py"", line 224, in <module>; 'Programming Language :: Python :: Implementation :: PyPy']; File ""/Users/spascal/.pyenv/versions/3.7.9/lib/python3.7/site-packages/setuptools/__init__.py"", line 143, in setup; _install_setup_requires(attrs); File ""/Users/spascal/.pyenv/versions/3.7.9/lib/python3.7/site-packages/setuptools/__init__.py"", line 138, in _install_setup_requires; dist.fetch_build_eggs(dist.setup_requires); File ""/Users/spascal/.pyenv/versions/3.7.9/lib/python3.7/site-packages/setuptools/dist.py"", line 698, in fetch_build_eggs; replace_conflicting=True,; File ""/Users/spascal/.pyenv/versions/3.7.9/lib/python3.7/site-packages/pkg_resources/__init__.py"", line 783, in resolve; replace_conflicting=replace_conflicting; File ""/Users/spascal/.pyenv/versions/3.7.9/lib/python3.7/site-packages/pkg_resources/__init__.py"", line 1066, in best_match; return self.obtain(req, installer); File ""/Users/spascal/.pyenv/versions/3.7.9/lib/python3.7/site-packages/pkg_resources/__init__.py"", line 1078, in obtain; return installer(requirement); File ""/Users/spascal/.pyenv/versions/3.7.9/lib/python3.7/site-packages/setuptools/dist.py"", line 754, in fetch_build_egg; return fetch_build_egg(self, req); File ""/Users/spascal/.pyenv/versions/3.7.9/lib/python3.7/site-packages/setuptools/installer.py"", line 130, in fetch_build_egg; raise DistutilsError(str(e)); distutils.errors.DistutilsError: Command '['/Users/spascal/.pyenv/versions/3.7.9/bin/python3.7', '-m', 'pip', '--disable-pip-version-check', 'wheel', '--no-deps', '-w', '/var/folders/br/f16ml9tx5z32fhsdd1nqpymm0000gn/T/tmpspi2awj3', '--quiet', 'pypandoc']' returned non-zero exit status 1.; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9742:5027,log,logs,5027,https://hail.is,https://github.com/hail-is/hail/issues/9742,1,['log'],['logs']
Testability,noticed this while smoke testing notebooks,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5011:25,test,testing,25,https://hail.is,https://github.com/hail-is/hail/pull/5011,1,['test'],['testing']
Testability,"now it looks like ArrayAgg isn't matched on in LowerArrayToStream, despite existing in testArrayAggContexts with an ArrayRange child. Will look more tomorrow.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-583797420:87,test,testArrayAggContexts,87,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-583797420,1,['test'],['testArrayAggContexts']
Testability,ns.AnnotationsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.io.compress.BGzipCodecSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.CallSuite.testCall PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigBGzip PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigNoCompression PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRe,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:1073,test,test,1073,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,"nship between the filenames of the three files, so I have been using a ResourceGroup to model this, essentially as follows:. ```python; j = b.new_job(…). j.declare_resource_group(counts={; 'tsv': '{root}.counts.tsv',; 'tsv.gz': '{root}.counts.tsv.gz',; 'tsv.gz.tbi': '{root}.counts.tsv.gz.tbi',; }). j.command(f""""""; gatk SubCommand … --output {j.counts['tsv']}; bgzip {j.counts['tsv']}; gatk IndexFeatureFile --input {j.counts['tsv.gz']}; """"""). b.write_output(j.counts['tsv.gz'], output_path); b.write_output(j.counts['tsv.gz.tbi'], output_index_path); ```. (Trying to use `b.write_output(j.counts, output_base)` to write out the whole ResourceGroup fails because the `…/counts.counts.tsv` file no longer exists because it was removed by `bgzip`. In any case, we don't want to write that one to the final bucket anyway. Hence the two separate `write_output` invocations for the two desired output files.). This fails in the second `write_output` with a fairly mysterious exception:. ```; File ""…"", line 92, in test; b.write_output(j.counts['tsv.gz.tbi'], output_index_path); File ""…/lib/python/site-packages/hailtop/batch/batch.py"", line 595, in write_output; name = resource._source._resources_inverse[resource]; KeyError: __RESOURCE_FILE__11; ```. Checking that line of _batch.py_, it is failing while trying to print an error message because `_resources_inverse` is not set up for the JobResourceFiles within ResourceGroups. PR #13192 is a suggested fix for this. With that PR applied, this results in a more useful hail error message exception:. ```; hailtop.batch.exceptions.BatchException: undefined resource 'counts[""tsv.gz.tbi""]'; Hint: resources must be defined within the job methods 'command' or 'declare_resource_group'; ```. This can be worked around by mentioning the filename in the commands to be run — in a comment, because none of the commands actually need to specify the `.tbi` output filename:. ```python; …; j.command(f""""""; gatk SubCommand … --output {j.counts['tsv']}; bgzip {j",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13191:1333,test,test,1333,https://hail.is,https://github.com/hail-is/hail/issues/13191,1,['test'],['test']
Testability,nstitute.hail.annotations.AnnotationsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.io.compress.BGzipCodecSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.CallSuite.testCall PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigBGzip PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigNoCompression PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitut,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:1038,test,test,1038,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,nstitute.hail.methods.ExportVcfSuite.testSameAsOrig PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.vcf.SplitSuite.SplitTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:2000,test,test,2000,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,2,['test'],['test']
Testability,nstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.vcf.SplitSuite.SplitTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testD_$eq$eq PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testFlushDouble PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testFilt,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:2231,test,test,2231,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,1,['test'],['test']
Testability,"nt to the Azure [Log Analytics workspace haildev-logs](https://portal.azure.com/#@haildev.onmicrosoft.com/resource/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/haildev/providers/Microsoft.OperationalInsights/workspaces/haildev-logs/logs). I went to ""Queries"", selected ""DK's AKS Pod Logs"", modified the namespace to the aforementioned one, and added a filter for ""hail-az://"". ```; let startTimestamp = ago(2h);; KubePodInventory; | where TimeGenerated > startTimestamp; | extend PodName=Name; | where Namespace == ""pr-13135-default-u5tt5011yt5w"" and PodName startswith ""batch-driver""; | distinct ContainerID, PodName, Namespace; | join (; ContainerLog; | where TimeGenerated > startTimestamp; ) on ContainerID; | project TimeGenerated, message=parse_json(LogEntry).message, LogEntry=parse_json(LogEntry); | where message contains ""hail-az://""; | order by TimeGenerated desc; ```. That revealed the batch logs path:. ```; EXAMPLE BATCH_JOB_LOGS_PATH hail-az://haildevtest/test/batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1/1/abc123/main/log; ```. In the [failing PR test job logs](https://ci.azure.hail.is/batches/3956877/jobs/152), I found the batch id:. ```; [2023-06-09 12:43:34] test/hail/methods/test_impex.py::BGENTests::test_import_bgen_row_fields; -------------------------------- live log call ---------------------------------; INFO batch_client.aioclient:aioclient.py:753 created batch 1148. INFO batch_client.aioclient:aioclient.py:770 updated batch 1148. FAILED; ```. I listed the job logs:. ```; (base) dking@wm28c-761 hail % az storage blob list --account-name haildevtest --container test --prefix batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/ -o table; Name Blob Type Blob Tier Length Content Type Last Modified Snapshot; ----------------------------------------------------------------------------- ----------- ----------- -------- ------------------------ ------------------------- ----------; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/1/i4CoSh/main/log BlockBl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13160:1093,test,test,1093,https://hail.is,https://github.com/hail-is/hail/pull/13160,3,"['log', 'test']","['log', 'logs', 'test']"
Testability,"ntSpark, the following error occurred:; `import hail as hl; import varspark.hail as vshl; vshl.init()`; `using variant-spark jar at '/usr/local/lib/python3.9/dist-packages/varspark/jars/variant-spark_2.12-0.5.2-all.jar'; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); [<ipython-input-6-3d2ff0083f18>](https://localhost:8080/#) in <cell line: 3>(); 1 import hail as hl; 2 import varspark.hail as vshl; ----> 3 vshl.init(). 4 frames; <decorator-gen-1907> in init(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, backend, driver_cores, driver_memory, worker_cores, worker_memory, gcs_requester_pays_configuration, regions). <decorator-gen-1909> in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration). [/usr/local/lib/python3.9/dist-packages/hail/context.py](https://localhost:8080/#) in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); 425 app_name = app_name or 'Hail'; 426 gcs_requester_pays_project, gcs_requester_pays_buckets = convert_gcs_requester_pays_configuration_to_hadoop_conf_style(gcs_requester_pays_configuration); --> 427 backend = SparkBackend(; 428 idempotent, sc, spark_conf, app_name, master, local, log,; 429 quiet, append, min_block_size, branching_factor, tmpdir, local_tmpdir,. TypeError: SparkBackend__init__() got an unexpected keyword argument 'gcs_requester_pays_project'`. - Hail was able to initialize by itself; `import",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12859:1126,log,log,1126,https://hail.is,https://github.com/hail-is/hail/issues/12859,1,['log'],['log']
Testability,"ntext$.$anonfun$scoped$2(ExecuteContext.scala:75); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:350); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:495); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.backend.spark.SparkBackend.executeEncode(SparkBackend.scala:494); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); 	at java.base/java.lang.Thread.run(Thread.java:829). Hail version: 0.2.120-f00f916faf78; Error summary: HailException: zip: length mismatch: 62164, 104; ```. > One of the input tables (context_ht) has 8061724269 rows and 62164 partitions, and another input_table (mutation_ht) has 104 rows and 104 partitions. If I add “mutation_ht = mutation_ht = mutation_ht.repartition(1)” at line 37, the script runs fine. If I add “mutation_ht = mutation_ht.naive_coalesce(1)” it gives the same error. I've obtained a log from a failed run and do see us zipping the two contexts together without making sure they're the same length.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13486:7238,log,log,7238,https://hail.is,https://github.com/hail-is/hail/issues/13486,1,['log'],['log']
Testability,ntext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestN,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3687,test,testng,3687,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604,1,['test'],['testng']
Testability,"ntil it is resolved.</p>; <h2>pytest-asyncio 0.23.5.post1</h2>; <h1>0.23.5 (2024-02-09)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; <li>Prevent DeprecationWarning about internal use of <code>asyncio.get_event_loop()</code> from affecting test cases <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/757"">#757</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.5</h2>; <h1>0.23.5 (2024-02-09)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; <li>Prevent DeprecationWarning about internal use of <code>asyncio.get_event_loop()</code> from affecting test cases <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/757"">#757</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:2303,test,test,2303,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['test']
Testability,"ntributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/graphs/contributors?from=2023-12-29&amp;to=2024-01-19&amp;type=c"">GitHub contributors page for this release</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/e7a1af706875c8ab183101ff68b38e836181028c""><code>e7a1af7</code></a> [ci skip] Publish 4.0.12</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/69079ec413cbe6d173f0a667c15802b76423ece5""><code>69079ec</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15710"">#15710</a>: Removes Python 3.0, Notebook 5 mentions from contributor ...</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/353707e4d0d3fe788a4a2a5b1f228352f1918806""><code>353707e</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15524"">#15524</a>: Fix visual tests (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15578"">#15578</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/482aaa0054a2de18a257d7b5520234eb44648a9f""><code>482aaa0</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15650"">#15650</a>: Fix jupyterlab downgrade issue on extension installation ...</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/58fb4a9b630cd22d7b064b3c8fef503b11afe077""><code>58fb4a9</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15690"">#15690</a>: Fix search highlights removal on clearing input box (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15712"">#15712</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/5062929f60ac770c7048350260636d3f63ea1c8d""><code>5062929</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15703"">#15703</a> on",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14218:12114,test,tests,12114,https://hail.is,https://github.com/hail-is/hail/pull/14218,1,['test'],['tests']
Testability,"numpy-1.20.1 oauthlib-3.1.0 packaging-20.9 pandas-1.1.4 parsimonious-0.8.1 parso-0.8.1 pexpect-4.8.0 pickleshare-0.7.5 pillow-8.1.2 prompt-toolkit-3.0.17 protobuf-3.15.6 ptyprocess-0.7.0 py4j-0.10.7 pyasn1-0.4.8 pyasn1-modules-0.2.8 pygments-2.8.1 pyparsing-2.4.7 pyspark-2.4.1 python-dateutil-2.8.1 python-json-logger-0.1.11 pytz-2021.1 requests-2.22.0 requests-oauthlib-1.3.0 rsa-4.7.2 scipy-1.6.1 six-1.15.0 tabulate-0.8.3 tornado-6.1 tqdm-4.42.1 traitlets-5.0.5 typing-extensions-3.7.4.3 urllib3-1.25.11 wcwidth-0.2.5 wrapt-1.12.1 yarl-1.6.3; (3.8) ✔ ~/sandbox/hail [master|𝚫8?2]; snafu$ ipython ; Python 3.8.6 (default, Jan 27 2021, 15:42:20) ; Type 'copyright', 'credits' or 'license' for more information; IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-e24d842d2b9a> in <module>; ----> 1 import hail. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/__init__.py in <module>; 32 # F401 '.expr.*' imported but unused; 33 # E402 module level import not at top of file; ---> 34 from .table import Table, GroupedTable, asc, desc # noqa: E402; 35 from .matrixtable import MatrixTable, GroupedMatrixTable # noqa: E402; 36 from .expr import * # noqa: F401,F403,E402. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/table.py in <module>; 2 import itertools; 3 import pandas; ----> 4 import pyspark; 5 from typing import Optional, Dict, Callable; 6 . ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py in <module>; 49 ; 50 from pyspark.conf import SparkConf; ---> 51 from pyspark.context import SparkContext; 52 from pyspark.rdd import RDD, RDDBarrier; 53 from pyspark.files import SparkFiles. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py in <module>; 29 from py4j.protocol import Py4JError; 30 ; ---> 31 from pyspark import accumulators; 32 from pyspark.acc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10197:9880,sandbox,sandbox,9880,https://hail.is,https://github.com/hail-is/hail/issues/10197,1,['sandbox'],['sandbox']
Testability,nvoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.getKey$1(OrderingSuite.scala:345); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:347); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:318); 	at is.hail.utils.package$.using(package.scala:613); 	at is.hail.annotations.Region$.scoped(Region.scala:13); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:318); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:314); 	at is.hail.check.GenProp1$$anonfun$apply$1$$,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1865,Test,TestNG,1865,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['Test'],['TestNG']
Testability,nvoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(B,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4789,Test,TestNG,4789,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['Test'],['TestNG']
Testability,nvoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4596,Test,TestNG,4596,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,1,['Test'],['TestNG']
Testability,"o create a pod, including the secret, which is slightly surprising to me. Does the ability create a pod give ability to mount any secret? Surely not. At the same time, my rbac for notebook clearly defines the only secret it can access:. ```; (base) alex:~/projects/hail/notebook2:$ k get role read-get-user-secret -o json; {; ""apiVersion"": ""rbac.authorization.k8s.io/v1"",; ""kind"": ""Role"",; ""rules"": [; {; ""apiGroups"": [; """"; ],; ""resourceNames"": [; ""get-users""; ],; ""resources"": [; ""secrets""; ],; ""verbs"": [; ""get""; ]; }; ]; }; ```. The other permissions are for service and pod resources. These pods are bound to the user's service account. I also don't appear to need to give that service account that is bound (SA ""B"") permission to read the mounted secret. This makes sense to me: the container should be able to access anything on its file system. The notebook leader defines what that is. cc @cseed, thought you may want to know. The following was from a manual in-cluster test:; <img width=""940"" alt=""Screenshot 2019-04-02 15 55 39"" src=""https://user-images.githubusercontent.com/5543229/55432272-78989e00-5560-11e9-960e-1362d277d759.png"">. Partial description of a recently created pod (sans status); ```sh; (base) alex:~/projects/hail/notebook2:$ k get pod notebook2-worker-d4snh -o yaml; apiVersion: v1; kind: Pod; metadata:; creationTimestamp: ""2019-04-02T19:50:21Z""; generateName: notebook2-worker-; labels:; app: notebook2-worker; hail.is/notebook2-instance: f4dc8213468f4799a3c7f94cb6969309; jupyter_token: 484b71e2c12d42c79b169b1991602d45; name: a_notebook; user_id: e7e7b9c420f0b0ff503ab6711355f27748522a8a37d9d22b2c8e0af4; uuid: 84873cf540014e128cce18f5481fb682; name: notebook2-worker-d4snh; namespace: default; resourceVersion: ""41241284""; selfLink: /api/v1/namespaces/default/pods/notebook2-worker-d4snh; uid: 8cb3c1c2-5580-11e9-bcd4-42010a8000c9; spec:; containers:; - command:; - jupyter; - notebook; - --NotebookApp.token=484b71e2c12d42c79b169b1991602d45; - --NotebookApp.base_",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5753#issuecomment-479174611:1010,test,test,1010,https://hail.is,https://github.com/hail-is/hail/pull/5753#issuecomment-479174611,2,['test'],['test']
Testability,"o narrow down what actually triggers the error. ### What went wrong (all error messages here, including the full java stack trace):; ```; [Stage 6:> (0 + 8) / 5000]; [Stage 6:> (0 + 4) / 5000]; [Stage 6:> (0 + 8) / 5000]Traceback (most recent call last):; File ""/home/hail/hail.zip/hail/utils/java.py"", line 185, in handle_py4j; File ""/home/hail/hail.zip/hail/table.py"", line 1058, in aggregate; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py"", line 63, in deco; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py"", line 319, in get_return_value; py4j.protocol.Py4JJavaError: An error occurred while calling o30335.query.; : org.apache.spark.SparkException: Job aborted due to stage failure: Task 7 in stage 6.0 failed 20 times, most recent failure: Lost task 7.19 in stage 6.0 (TID 179, robert1-w-0.c.ccdg-wgs.internal, executor 4): java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.RegionValueBuilder.endStruct(RegionValueBuilder.scala:109); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2645); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2615); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(Order",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3063:1421,Assert,AssertionError,1421,https://hail.is,https://github.com/hail-is/hail/issues/3063,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"o pick up CI's credentials instead of the test account's credentials. ```; E hail.utils.java.FatalError: GoogleJsonResponseException: 403 Forbidden; E GET https://storage.googleapis.com/storage/v1/b/hail-test-requester-pays-fds32/o/zero-to-nine?fields=bucket,name,timeCreated,updated,generation,metageneration,size,contentType,contentEncoding,md5Hash,crc32c,metadata&userProject=hail-vdc; E {; E ""code"": 403,; E ""errors"": [; E {; E ""domain"": ""global"",; E ""message"": ""ci-910@hail-vdc.iam.gserviceaccount.com does not have serviceusage.services.use access to the Google Cloud project. Permission 'serviceusage.services.use' denied on resource (or it may not exist)."",; E ""reason"": ""forbidden""; E }; E ],; E ""message"": ""ci-910@hail-vdc.iam.gserviceaccount.com does not have serviceusage.services.use access to the Google Cloud project. Permission 'serviceusage.services.use' denied on resource (or it may not exist).""; E }; E ; E Java stack trace:; E java.io.IOException: Error accessing gs://hail-test-requester-pays-fds32/zero-to-nine; E 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl.getObject(GoogleCloudStorageImpl.java:1986); E 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageImpl.getItemInfo(GoogleCloudStorageImpl.java:1882); E 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystemImpl.getFileInfoInternal(GoogleCloudStorageFileSystemImpl.java:861); E 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.gcsio.GoogleCloudStorageFileSystemImpl.getFileInfo(GoogleCloudStorageFileSystemImpl.java:833); E 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystem.getFileStatus(GoogleHadoopFileSystem.java:724); E 	at org.apache.hadoop.fs.Globber.getFileStatus(Globber.java:115); E 	at org.apache.hadoop.fs.Globber.doGlob(Globber.java:349); E 	at org.apache.hadoop.fs.Globber.glob(Globber.java:202); E 	at org.apache.hadoop.fs.FileSystem.globStat",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14158#issuecomment-1969609236:1587,test,test-requester-pays-,1587,https://hail.is,https://github.com/hail-is/hail/pull/14158#issuecomment-1969609236,1,['test'],['test-requester-pays-']
Testability,"o that REST call was a successful looking JSON object (which indicates a create repository with the expected name, `REPO_NAME=ci-test-p4a9fxo7`) [1]. It is unclear if repository deletion succeeded [2], I should find a way to make curl print the HTTP status code returned by cluster deletion. FWIW, the repository appears to be deleted now (https://github.com/hail-ci-test/ci-test-p4a9fxo7), and, AFAIK, no other part of our system deletes these repositories. [1]:; ```; {; ""id"": 152339517,; ""node_id"": ""MDEwOlJlcG9zaXRvcnkxNTIzMzk1MTc="",; ""name"": ""ci-test-p4a9fxo7"",; ""full_name"": ""hail-ci-test/ci-test-p4a9fxo7"",; ""private"": false,; ""owner"": {; ""login"": ""hail-ci-test"",; ""id"": 43152710,; ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjQzMTUyNzEw"",; ""avatar_url"": ""https://avatars1.githubusercontent.com/u/43152710?v=4"",; ""gravatar_id"": """",; ""url"": ""https://api.github.com/users/hail-ci-test"",; ""html_url"": ""https://github.com/hail-ci-test"",; ""followers_url"": ""https://api.github.com/users/hail-ci-test/followers"",; ""following_url"": ""https://api.github.com/users/hail-ci-test/following{/other_user}"",; ""gists_url"": ""https://api.github.com/users/hail-ci-test/gists{/gist_id}"",; ""starred_url"": ""https://api.github.com/users/hail-ci-test/starred{/owner}{/repo}"",; ""subscriptions_url"": ""https://api.github.com/users/hail-ci-test/subscriptions"",; ""organizations_url"": ""https://api.github.com/users/hail-ci-test/orgs"",; ""repos_url"": ""https://api.github.com/users/hail-ci-test/repos"",; ""events_url"": ""https://api.github.com/users/hail-ci-test/events{/privacy}"",; ""received_events_url"": ""https://api.github.com/users/hail-ci-test/received_events"",; ""type"": ""Organization"",; ""site_admin"": false; },; ""html_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""description"": null,; ""fork"": false,; ""url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7"",; ""forks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/forks"",; ""keys_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:1405,test,test,1405,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,1,['test'],['test']
Testability,"o upgrade the vulnerable dependencies to a fixed version:; - hail/python/dev/pinned-requirements.txt. <details>; <summary>⚠️ <b>Warning</b></summary>. ```; jupyter 1.0.0 requires notebook, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png ""low severity"") | **384/1000** <br/> **Why?** Has a fix available, CVSS 3.4 | Open Redirect <br/>[SNYK-PYTHON-TORNADO-5537286](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5537286) | `tornado:` <br> `6.2 -> 6.3.2` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1ZTRkMTU3Zi04YTdjLTRhNzctYTZlNC00YTdmNGU4Y2I0YzkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjVlNGQxNTdmLThhN2MtNGE3Ny1hNmU0LTRhN2Y0ZThjYjRjOSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13323:1320,test,tested,1320,https://hail.is,https://github.com/hail-is/hail/pull/13323,1,['test'],['tested']
Testability,o.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.I,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:2113,test,test,2113,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,oCommandThunk$15(ServiceBackend.scala:718); at is.hail.backend.service.ServiceBackendSocketAPI2.withIRFunctionsReadFromInput(ServiceBackend.scala:812); at is.hail.backend.service.ServiceBackendSocketAPI2.$anonfun$parseInputToCommandThunk$14(ServiceBackend.scala:716); at is.hail.backend.service.ServiceBackendSocketAPI2.$anonfun$parseInputToCommandThunk$5(ServiceBackend.scala:673); at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:76); at is.hail.utils.package$.using(package.scala:657); at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:76); at is.hail.utils.package$.using(package.scala:657); at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:62); at is.hail.backend.service.ServiceBackendSocketAPI2.$anonfun$parseInputToCommandThunk$4(ServiceBackend.scala:664); at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:59); at is.hail.backend.service.ServiceBackendSocketAPI2.$anonfun$parseInputToCommandThunk$3(ServiceBackend.scala:650); at is.hail.backend.service.ServiceBackendSocketAPI2.executeOneCommand(ServiceBackend.scala:822); at is.hail.backend.service.ServiceBackendSocketAPI2$.main(ServiceBackend.scala:447); at is.hail.backend.service.Main$.main(Main.scala:15); at is.hail.backend.service.Main.main(Main.scala); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at is.hail.JVMEntryway$1.run(JVMEntryway.java:119); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13809:5699,log,logTime,5699,https://hail.is,https://github.com/hail-is/hail/issues/13809,1,['log'],['logTime']
Testability,"oadX arg:1 L__C2316__m1984ENCODE_SInsertFieldsStruct_TO_EBaseStruct___iruid_8616Spills;)); 31040 25791 (LdcX 3 I))))); 31041 (ReturnX). # Elsewhere, this split method is called, then the resulting field is loaded and written to the output buffer. 11325 (MethodStmtX INVOKEVIRTUAL __C1527collect_distributed_array.__m1984ENCODE_SInsertFieldsStruct_TO_EBaseStruct___iruid_8616_region0_0 (L__C2316__m1984ENCODE_SInsertFieldsStruct_TO_EBaseStruct___iruid_8616Spills;)V; 11326 (LoadX arg:0 L__C1527collect_distributed_array;); 11327 (LoadX t489ae494/spills L__C2316__m1984ENCODE_SInsertFieldsStruct_TO_EBaseStruct___iruid_8616Spills;)); 11328 25772 (MethodStmtX INVOKEINTERFACE is/hail/io/OutputBuffer.writeByte (B)Vinterface; 11329 (GetFieldX GETFIELD __C2316__m1984ENCODE_SInsertFieldsStruct_TO_EBaseStruct___iruid_8616Spills.__f2354null Lis/hail/io/OutputBuffer;; 11330 (LoadX t489ae494/spills L__C2316__m1984ENCODE_SInsertFieldsStruct_TO_EBaseStruct___iruid_8616Spills;)); 11331 (GetFieldX GETFIELD __C2316__m1984ENCODE_SInsertFieldsStruct_TO_EBaseStruct___iruid_8616Spills.__f2355__l2315split_large_block Z; 11332 (LoadX t489ae494/spills L__C2316__m1984ENCODE_SInsertFieldsStruct_TO_EBaseStruct___iruid_8616Spills;))); ```. # Pervasiveness. There is absolutely nothing about this bug that is whole-stage-codegen-specific, but I suspect the much larger single IRs compiled in whole stage code generation made it exponentially more likely for this corner case to occur. I imagine it would be possible to construct a failing pipeline with whole stage code generation turned off. # Testing. This is super hard to reproduce using small/public examples, and any unit tests to capture this *crazy edge case* are pretty much meaningless. John suggested we programmatically check the TypeInfo inference against some JVM reference, and I agree that's the best bet, but don't want to block this critical fix on that project. I fixed BALOAD for the same reason, but it doesn't appear that has caused trouble yet.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11328:7001,Test,Testing,7001,https://hail.is,https://github.com/hail-is/hail/pull/11328,2,"['Test', 'test']","['Testing', 'tests']"
Testability,oader.defineClass(URLClassLoader.java:468); 	at java.net.URLClassLoader.access$100(URLClassLoader.java:74); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:369); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:363); 	at java.security.AccessController.doPrivileged(Native Method); 	at java.net.URLClassLoader.findClass(URLClassLoader.java:362); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:351); 	at org.testng.internal.ClassHelper.forName(ClassHelper.java:94); 	at org.testng.xml.XmlClass.loadClass(XmlClass.java:78); 	at org.testng.xml.XmlClass.getSupportClass(XmlClass.java:89); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:25); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:18); 	at org.testng.TestRunner.initMethods(TestRunner.java:408); 	at org.testng.TestRunner.init(TestRunner.java:235); 	at org.testng.TestRunner.init(TestRunner.java:205); 	at org.testng.TestRunner.<init>(TestRunner.java:153); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:536); 	at org.testng.SuiteRunner.init(SuiteRunner.java:159); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:113); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1299); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1286); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); Caused by: java.lang.ClassNotFoundException: is.hail.relocated.org.apache.commons.math3.distribution.AbstractIntegerDistribution; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:351); 	... 30 more; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460:1707,Test,TestRunner,1707,https://hail.is,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460,25,"['Test', 'test']","['TestNG', 'TestRunner', 'testng']"
Testability,oader.defineClass1(Native Method); 	at java.lang.ClassLoader.defineClass(ClassLoader.java:756); 	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:468); 	at java.net.URLClassLoader.access$100(URLClassLoader.java:74); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:369); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:363); 	at java.security.AccessController.doPrivileged(Native Method); 	at java.net.URLClassLoader.findClass(URLClassLoader.java:362); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:351); 	at org.testng.internal.ClassHelper.forName(ClassHelper.java:94); 	at org.testng.xml.XmlClass.loadClass(XmlClass.java:78); 	at org.testng.xml.XmlClass.getSupportClass(XmlClass.java:89); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:25); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:18); 	at org.testng.TestRunner.initMethods(TestRunner.java:408); 	at org.testng.TestRunner.init(TestRunner.java:235); 	at org.testng.TestRunner.init(TestRunner.java:205); 	at org.testng.TestRunner.<init>(TestRunner.java:153); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:536); 	at org.testng.SuiteRunner.init(SuiteRunner.java:159); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:113); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1299); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1286); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); Caused by: java.lang.ClassNotFoundException: is.hail.relocated.org.apache.commons.math3.distribution.AbstractIntegerDistribution; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460:1504,test,testng,1504,https://hail.is,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460,1,['test'],['testng']
Testability,oadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigNoCompression PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.SampleQCSuite.testStoreAfterFilter PASSED. Gradle suite > Gradle test > org.broad,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:1501,test,test,1501,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,"ocal computer using singularity instead of docker, it worked. Also, for the the other chromosomes with less variants but same samples, such as chr13, it worked well in Terra. Since we will convert multiple plink files to hailmatrix table using Terra platform in future, I need to figure the problem out. Any advise would be appreciated. ### Version. 0.2.127. ### Relevant log output. ```shell; 2024/01/17 20:20:25 Starting container setup.; 2024/01/17 20:20:26 Done container setup.; 2024/01/17 20:20:27 Starting localization.; 2024/01/17 20:20:34 Localization script execution started...; 2024/01/17 20:20:34 Localizing input gs://fc-5a8938eb-1299-4afc-957f-afb53ef602b9/submissions/e8747e74-47d1-4f52-acfc-1ac7f81d79ba/VUMCBed2HailMatrix/683447d9-9342-4058-bcfc-ba21422d3121/call-Bed2HailMatrix/script -> /cromwell_root/script; 2024/01/17 20:20:36 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bed -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bed; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.fam -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.fam; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bim -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bim; Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.fam...; / [0 files][ 0.0 B/910.3 KiB] / [1 files][910.3 KiB/910.3 KiB] Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.bim...; / [1 files][910.3 KiB/369.7 MiB] - - [1 files][ 51.9 MiB/369.7 MiB] \ | | [1 files][107.6 MiB/369.7 MiB] / - - [1 files][162.3 MiB/369.7 MiB] \ \ [1 files][213.9 MiB/369.7 MiB] | / / [1 files][286.6 MiB/369.7 MiB] - \ \ [1 files][342.1 MiB/369.7 MiB] |; Operation completed over 2 objects/369.7 MiB.; | [2 files][369.7 MiB/369.7 MiB] 2024/01/17 20:59:27 Localization script execution complete.; 2024/01/17 20:59:38 Done localization.; 2024/01/17 20:59:39 Running user action: docker run -v /mnt/local-disk:/cromwell_root --entrypoint=/bin/bash hailgenetics/hail@sha256:3f22576793ce3161893aed2bd",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:9783,sandbox,sandbox,9783,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['sandbox'],['sandbox']
Testability,"occur for files written in py27; see GH#28645 and GH#31988. /opt/conda/lib/python3.7/site-packages/pandas/compat/pickle_compat.py in load(fh, encoding, is_verbose); 272 up.is_verbose = is_verbose; 273 ; --> 274 return up.load(); 275 except (ValueError, TypeError):; 276 raise. /opt/conda/lib/python3.7/pickle.py in load(self); 1086 raise EOFError; 1087 assert isinstance(key, bytes_types); -> 1088 dispatch[key[0]](self); 1089 except _Stop as stopinst:; 1090 return stopinst.value. /opt/conda/lib/python3.7/pickle.py in load_stack_global(self); 1383 if type(name) is not str or type(module) is not str:; 1384 raise UnpicklingError(""STACK_GLOBAL requires str""); -> 1385 self.append(self.find_class(module, name)); 1386 dispatch[STACK_GLOBAL[0]] = load_stack_global; 1387 . /opt/conda/lib/python3.7/site-packages/pandas/compat/pickle_compat.py in find_class(self, module, name); 204 key = (module, name); 205 module, name = _class_locations_map.get(key, key); --> 206 return super().find_class(module, name); 207 ; 208 . /opt/conda/lib/python3.7/pickle.py in find_class(self, module, name); 1424 elif module in _compat_pickle.IMPORT_MAPPING:; 1425 module = _compat_pickle.IMPORT_MAPPING[module]; -> 1426 __import__(module, level=0); 1427 if self.proto >= 4:; 1428 return _getattribute(sys.modules[module], name)[0]. /opt/conda/lib/python3.7/site-packages/hail/__init__.py in <module>; 31 # F401 '.expr.*' imported but unused; 32 # E402 module level import not at top of file; ---> 33 from .table import Table, GroupedTable, asc, desc # noqa: E402; 34 from .matrixtable import MatrixTable, GroupedMatrixTable # noqa: E402; 35 from .expr import * # noqa: F401,F403,E402. /opt/conda/lib/python3.7/site-packages/hail/table.py in <module>; 3 import pandas; 4 import numpy as np; ----> 5 import pyspark; 6 from typing import Optional, Dict, Callable, Sequence; 7 . ModuleNotFoundError: No module named 'pyspark'; ```. Thanks,; Andrew. ### Version. 0.2.107-2387bb00ceee. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14004:4770,log,log,4770,https://hail.is,https://github.com/hail-is/hail/issues/14004,1,['log'],['log']
Testability,ocessTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :test; objc[30146]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/bin/java and /Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/libinstrument.dylib. One of the two will be used. Which one is undefined. Gradle suite > Gradle test > org.broadinstitute.hail.annotations.AnnotationsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.io.compress.BGzipCodecSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.CallSuite.testCall PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportPlinkSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrig PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldan,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:1159,test,testSorted,1159,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,2,['test'],"['test', 'testSorted']"
Testability,"ockquote>; <h2>[2.0.2] - 2021-07-27</h2>; <h3>Added</h3>; <ul>; <li>Officially supporting 3.9 - <a href=""https://github.com/felixonmars""><code>@​felixonmars</code></a>.</li>; <li>You can now add static fields to log objects - <a href=""https://github.com/cosimomeli""><code>@​cosimomeli</code></a>.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Dropped 3.4 support.</li>; <li>Dropped Travis CI for Github Actions.</li>; <li>Wheel should build for python 3 instead of just 3.4 now.</li>; </ul>; <h2>[2.0.1] - 2020-10-12</h2>; <h3>Added</h3>; <ul>; <li>Support Pypi long descripton - <a href=""https://github.com/ereli-cb""><code>@​ereli-cb</code></a></li>; </ul>; <h3>Changed</h3>; <ul>; <li>You can now rename output fields - <a href=""https://github.com/schlitzered""><code>@​schlitzered</code></a></li>; </ul>; <h2>[2.0.0] - 2020-09-26</h2>; <h3>Added</h3>; <ul>; <li>New Changelog</li>; <li>Added timezone support to timestamps - <a href=""https://github.com/lalten""><code>@​lalten</code></a></li>; <li>Refactored log record to function - <a href=""https://github.com/georgysavva""><code>@​georgysavva</code></a></li>; <li>Add python 3.8 support - <a href=""https://github.com/tommilligan""><code>@​tommilligan</code></a></li>; </ul>; <h3>Removed</h3>; <ul>; <li>Support for Python 2.7</li>; <li>Debian directory</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/madzak/python-json-logger/commit/076b407aa7f34bc64a729cc77da336fb159d7597""><code>076b407</code></a> Release 2.0.2</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/f51d8fe76154380cac2fe6a30a944d67dc09df2d""><code>f51d8fe</code></a> added test/build requirements to ci file</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/b07b580670c6c4e340c372c73d0e76cdddc8b456""><code>b07b580</code></a> moved release out of test workflow. setup.cfg specifies a proper wheel now</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/4df12f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11467:2321,log,log,2321,https://hail.is,https://github.com/hail-is/hail/pull/11467,1,['log'],['log']
Testability,"ocs.pytest.org/en/latest/goodpractices.html) when your tests directory is a python module [1]. In particular, we now use:. ```; python/; - setup.py; - src/; - hail/; - __init__.py; - ...; - tests/; - __init__.py; - ...; ```. - Calculate number of cores using python's multiprocessing and use that as a default PARALLELISM parameter. - Move non-java/scala specific functionality out of `build.gradle` and into a `Makefile`. - The resulting rules are more succinct and correctly rely on file-system modification dependencies. - No use of `SPARK_HOME` and `PYTHONPATH`, and limited use of `PYSPARK_SUBMIT_ARGS`. Python tests now rely on the python package directly which handles correctly handles dependencies like `pyspark`. - There are also some phony targets for convenience: `jar`, `zip`, `pip-install`, `docs`, and `docs-no-test`. - Fix configuration of Spark version for the python package. The version is written by make into `python/spark_version` and read by `python/setup.py`. Many of the tests pass against 2.3.0, but there's some floating point value changes. - add breezeVersions for all currently released Spark versions greater than 2.2.0. - For developers, require python package `py` version 1.7.0 or later to allow `pytest` to test an installed package while loading the doctest expressions from the source code. (We could also determine where hail was installed and pass that path to pytest instead of `python/src`, but using the environment variable `PY_IGNORE_IMPORTMISMATCH` seems simple and safe enough). ---. ### Explainers. #### env_var.mk. This is a Makefile that is intended to be `include`d by other Makefiles. It defines a [multi-line variable](https://www.gnu.org/software/make/manual/html_node/Multi_002dLine.html) that [takes arguments](https://www.gnu.org/software/make/manual/html_node/Call-Function.html#Call-Function) (known in any reasonable language as a ""function""). It is intended to be used like this:. ```; VERSION = 30; $(eval $(call ENV_VAR,VERSION)). build: ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5130:1907,test,tests,1907,https://hail.is,https://github.com/hail-is/hail/pull/5130,1,['test'],['tests']
Testability,"ocs/data/`; - All output files in code should have the path `output/`; - For multi-line code statements, only first line can have `>>>`; all other lines must start with `...`; - Modified `doctest` to **NOT** check output. This is different than how `doctest` normally works.; - added overwrite option to python HailContext and the `write` command in scala.; - added more classes to Hail namespace (`from hail import *`). For `data/example.vds`, the code used to generate it is:. ```; hc.import(""src/test/resources/sample.vcf.bgz"").downsample_variants(10).annotate_variants_expr('va.useInKinship = pcoin(0.9), va.panel_maf = 0.1, va.anno1 = 5, va.anno2 = 0, va.consequence = ""LOF"", va.gene = ""A"", va.score = 5.0').split_multi().variant_qc().sample_qc().annotate_samples_expr('sa.isCase = true, sa.pheno.isCase = pcoin(0.5), sa.pheno.isFemale = pcoin(0.5), sa.pheno.age=rnorm(65, 10), sa.cov.PC1 = rnorm(0,1), sa.pheno.height = rnorm(70, 10), sa.cov1 = rnorm(0, 1), sa.cov2 = rnorm(0,1), sa.pheno.bloodPressure= rnorm(120,20), sa.pheno.cohortName = ""cohort1""').write(""python/hail/docs/data/example.vds"", overwrite=True); ```. For `data/exampe2.vds`, the code is:. ```; hc.import(""src/test/resources/sample.vcf.bgz"").downsample_variants(5).annotate_variants_expr('va.anno1 = 5, va.toKeep1 = true, va.toKeep2 = false, va.toKeep3 = true').split_multi().write(""python/hail/docs/data/example2.vds"", overwrite=True); ```. For `data/example_lmmreg.vds`, the code is:. ```; hc.import_vcf('src/test/resources/sample.vcf'); .split_multi(); .variant_qc(); .annotate_samples_expr('sa.culprit = gs.filter(g => v == Variant(""20"", 13753124, ""A"", ""C"")).map(g => g.gt).collect()[0]'); .annotate_samples_expr('sa.pheno = rnorm(1,1) * sa.culprit'); .annotate_samples_expr('sa.cov1 = rnorm(0,1)'); .annotate_samples_expr('sa.cov2 = rnorm(0,1)'); .linreg('sa.pheno', ['sa.cov1', 'sa.cov2']).annotate_variants_expr('va.useInKinship = va.qc.AF > 0.05'); .write(""python/hail/docs/data/example_lmmreg.vds"", overwrite=True); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1367:1282,test,test,1282,https://hail.is,https://github.com/hail-is/hail/pull/1367,2,['test'],['test']
Testability,"ocus\"",\""alleles\""],\""globalType\"":\""Struct{}\""},\""rowRelPath\"":\""rows\"",\""globalRelPath\"":\""../globals/rows\"",\""refRelPath\"":\""../references\"",\""log\"":false}""] ; !s19 = ToStream(%177) [False]; !s20 = StreamMap(!s19) { (%elt9) =>; !179 = SelectFields(%elt9) [; (partitionCounts distinctlyKeyed)] ; !180 = MakeStruct() ; !181 = MakeStruct(); InsertFields !179 (firstKey: !180, lastKey: !181); }; !182 = ToArray(!s20); !183 = WriteMetadata(!182) [""{\""name\"":\""TableSpecWriter\"",\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht/entries\"",\""typ\"":{\""rowType\"":\""Struct{`the entries! [877f12a8827e18f61222c6c8c5fb04a8]`:Array[Struct{GT:Call,GQ:Int32,RGQ:Int32,FT:String,AD:Array[Int32]}]}\"",\""key\"":[],\""globalType\"":\""Struct{}\""},\""rowRelPath\"":\""rows\"",\""globalRelPath\"":\""../globals/rows\"",\""refRelPath\"":\""../references\"",\""log\"":false}""] ; !184 = GetField(%147) [partitionCounts] ; !s21 = ToStream(%177) [False]; !s22 = StreamMap(!s21) { (%elt10) =>; GetField(%elt10) [partitionCounts]; }; !185 = ToArray(!s22); !186 = MakeStruct(cols: !184, rows: !185); !187 = WriteMetadata(!186) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht\"",\""typ\"":{\""globalType\"":\""Struct{}\"",\""colKey\"":[\""s\""],\""colType\"":\""Struct{s:String,mt_sample_qc:Struct{gq_stats:Struct{mean:Float64,stdev:Float64,min:Float64,max:Float64},call_rate:Float64,n_called:Int64,n_not_called:Int64,n_filtered:Int64,n_hom_ref:Int64,n_het:Int64,n_hom_var:Int64,n_non_ref:Int64,n_singleton:Int64,n_snp:Int64,n_insertion:Int64,n_deletion:Int64,n_transition:Int64,n_transversion:Int64,n_star:Int64,r_ti_tv:Float64,r_het_hom_var:Float64,r_insertion_deletion:Float64}}\"",\""rowKey\"":[\""locus\"",\""alleles\""],\""rowType\"":\""Struct{locus:Locus(GRCh38),alleles:Array[String],filters:Set[String],a_index:Int32,was_split:Boolean,variant_qc:Struct{gq_stats:Struct{mean:Float64,stdev:Float64,min:Float64,max:Float64},call_rate:Float64,n_called:Int64,n_not_called:Int64,n_filtered:Int64,n_het:Int64,n_non_ref:Int6",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13809:40126,log,log,40126,https://hail.is,https://github.com/hail-is/hail/issues/13809,1,['log'],['log']
Testability,"od Logs"", modified the namespace to the aforementioned one, and added a filter for ""hail-az://"". ```; let startTimestamp = ago(2h);; KubePodInventory; | where TimeGenerated > startTimestamp; | extend PodName=Name; | where Namespace == ""pr-13135-default-u5tt5011yt5w"" and PodName startswith ""batch-driver""; | distinct ContainerID, PodName, Namespace; | join (; ContainerLog; | where TimeGenerated > startTimestamp; ) on ContainerID; | project TimeGenerated, message=parse_json(LogEntry).message, LogEntry=parse_json(LogEntry); | where message contains ""hail-az://""; | order by TimeGenerated desc; ```. That revealed the batch logs path:. ```; EXAMPLE BATCH_JOB_LOGS_PATH hail-az://haildevtest/test/batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1/1/abc123/main/log; ```. In the [failing PR test job logs](https://ci.azure.hail.is/batches/3956877/jobs/152), I found the batch id:. ```; [2023-06-09 12:43:34] test/hail/methods/test_impex.py::BGENTests::test_import_bgen_row_fields; -------------------------------- live log call ---------------------------------; INFO batch_client.aioclient:aioclient.py:753 created batch 1148. INFO batch_client.aioclient:aioclient.py:770 updated batch 1148. FAILED; ```. I listed the job logs:. ```; (base) dking@wm28c-761 hail % az storage blob list --account-name haildevtest --container test --prefix batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/ -o table; Name Blob Type Blob Tier Length Content Type Last Modified Snapshot; ----------------------------------------------------------------------------- ----------- ----------- -------- ------------------------ ------------------------- ----------; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/1/i4CoSh/main/log BlockBlob Hot 11724 application/octet-stream 2023-06-09T12:43:36+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/1/i4CoSh/main/resource_usage BlockBlob Hot 64 application/octet-stream 2023-06-09T12:43:36+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/1/i4CoSh/status.json BlockBlob Hot 1240 applicat",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13160:1411,log,log,1411,https://hail.is,https://github.com/hail-is/hail/pull/13160,1,['log'],['log']
Testability,"odd, it looks like we're using python2 to test this file.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4789#issuecomment-440805729:42,test,test,42,https://hail.is,https://github.com/hail-is/hail/pull/4789#issuecomment-440805729,1,['test'],['test']
Testability,"ode>47fa8f1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13803"">#13803</a> from Carreau/wn86</li>; <li><a href=""https://github.com/ipython/ipython/commit/0e83a6373574e28b7b8b1211ff49edfbb0119a37""><code>0e83a63</code></a> What's new version 8.6</li>; <li><a href=""https://github.com/ipython/ipython/commit/25ded577db7bd932a8966fa96859c6672aba986b""><code>25ded57</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13804"">#13804</a> from Carreau/sd-x</li>; <li><a href=""https://github.com/ipython/ipython/commit/98e3599e130e253f292679f74982a3a2cd3a7a7a""><code>98e3599</code></a> exclude 3.8</li>; <li><a href=""https://github.com/ipython/ipython/commit/fcdcddd5e528844672688e07bfa5188e48e37521""><code>fcdcddd</code></a> iterate</li>; <li><a href=""https://github.com/ipython/ipython/commit/8ca7b420a29ad781cc6c701dd4a6af0dd21b35c4""><code>8ca7b42</code></a> fix stack-data 0.6 failing tests</li>; <li><a href=""https://github.com/ipython/ipython/commit/93992a7ecd086bb24840ba03cd69960daf41575d""><code>93992a7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13768"">#13768</a> from osherdp/feature/raise-when-opening-standard-st...</li>; <li><a href=""https://github.com/ipython/ipython/commit/f44e27095fd647cc22bf37874f183ec4db85949f""><code>f44e270</code></a> Refactor a bit of uniformity.</li>; <li><a href=""https://github.com/ipython/ipython/commit/1b5674ca8bbac62daa42eb460848173c0542cf2e""><code>1b5674c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13778"">#13778</a> from zhizheng1/fix-mpl-webagg</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.34.0...8.6.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-m",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12442:1346,test,tests,1346,https://hail.is,https://github.com/hail-is/hail/pull/12442,1,['test'],['tests']
Testability,"ode></a> Streamline overloaded assertion methods for Groovy</li>; <li><a href=""https://github.com/cbeust/testng/commit/5ac0021d14f7eb00804fe235aaefc5c2fbce57d1""><code>5ac0021</code></a> Adding release notes</li>; <li><a href=""https://github.com/cbeust/testng/commit/c0e1e772f1fc0ab2142f3a4114a2b8cfe60fa7e1""><code>c0e1e77</code></a> Adjust version reference in deprecation msgs.</li>; <li><a href=""https://github.com/cbeust/testng/commit/011527d9bf0f91a40539f5e5467cc106888810d9""><code>011527d</code></a> Bump version to 7.7.0 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/7846c444a411647f7e401a097224702188c93835""><code>7846c44</code></a> Deprecate support for running JUnit tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/8630a7e8fe12985d71c00212f9362fd38fb0cb9e""><code>8630a7e</code></a> Ensure ITestContext available for JUnit4 tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/7070b020def0089d0d9dc695a5762ad16e974ce6""><code>7070b02</code></a> Streamline dependsOnMethods for configurations</li>; <li><a href=""https://github.com/cbeust/testng/commit/d7e0bb1cbcd7933d34d704678e75cbaf42704505""><code>d7e0bb1</code></a> Deprecate support for running Spock Tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/ca7a3a293008389096be75fea4936af8e5f79650""><code>ca7a3a2</code></a> Ensure All tests run all the time</li>; <li>Additional commits viewable in <a href=""https://github.com/cbeust/testng/compare/testng-6.8.21...7.7.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.testng:testng&package-manager=gradle&previous-version=6.8.21&new-version=7.7.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase m",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:15969,test,testng,15969,https://hail.is,https://github.com/hail-is/hail/pull/12665,1,['test'],['testng']
Testability,"ode></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2815"">cbeust/testng#2815</a></li>; <li>Unexpected test runs count with retry analyzer by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2816"">cbeust/testng#2816</a></li>; <li>Make PackageUtils compliant with JPMS by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2817"">cbeust/testng#2817</a></li>; <li>Ability to retry a data provider during failures by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2820"">cbeust/testng#2820</a></li>; <li>Refactoring by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2821"">cbeust/testng#2821</a></li>; <li>Fixing bug with DataProvider retry by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2822"">cbeust/testng#2822</a></li>; <li>Add config key for callback discrepancy behavior by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2823"">cbeust/testng#2823</a></li>; <li>Upgrading versions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""https://github.com/melloware""><code>@​melloware</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li>JarFileUtils.delete(File f) throw actual",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:3668,test,testng,3668,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"ode></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2833"">cbeust/testng#2833</a></li>; <li>Enhancing the Matrix by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2834"">cbeust/testng#2834</a></li>; <li>Avoid Compilation errors on Semeru JDK flavour. by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2835"">cbeust/testng#2835</a></li>; <li>Add addition yml extension by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2837"">cbeust/testng#2837</a></li>; <li>Support getting dependencies info for a test by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2839"">cbeust/testng#2839</a></li>; <li>Honour regex in dependsOnMethods by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2838"">cbeust/testng#2838</a></li>; <li>Ensure All tests run all the time by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2842"">cbeust/testng#2842</a></li>; <li>Deprecate support for running Spock Tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2846"">cbeust/testng#2846</a></li>; <li>Streamline dependsOnMethods for configurations by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2845"">cbeust/testng#2845</a></li>; <li>Ensure ITestContext available for JUnit4 tests by <a href=""https://github.com/krmahadevan""><code>@​krmahade",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:6632,test,testng,6632,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"ode>c09eb6e</code></a> Minor update to HowToUsePyparsing.rst</li>; <li><a href=""https://github.com/pyparsing/pyparsing/commit/395431ab3db9cfe59ddcb22b431caea74e623a1e""><code>395431a</code></a> Prep for release</li>; <li><a href=""https://github.com/pyparsing/pyparsing/commit/54b39a52dce9a0e438b11c76bc6e1dddaf490333""><code>54b39a5</code></a> Fix regression in SkipTo when ignoring an ignoreExpr, and failed to also igno...</li>; <li><a href=""https://github.com/pyparsing/pyparsing/commit/411c8ab6f697cb7b96f7fd1af37fefe9e3ce422b""><code>411c8ab</code></a> Handle case where Word(min &gt; 1) with differing init and body chars</li>; <li><a href=""https://github.com/pyparsing/pyparsing/commit/1936b36823ae162698dff5184061d71e5d0bd39b""><code>1936b36</code></a> Handle case where Word(min &gt; 1) (fixes <a href=""https://redirect.github.com/pyparsing/pyparsing/issues/502"">#502</a>)</li>; <li><a href=""https://github.com/pyparsing/pyparsing/commit/421e0fcdbc76fcfb43de9c97c89872bc485d8d40""><code>421e0fc</code></a> Update timestamp and CHANGES file to reflect recent PRs; added another test t...</li>; <li><a href=""https://github.com/pyparsing/pyparsing/commit/1355e76c16f74b387c41d26bbf4ff4338fcde0c4""><code>1355e76</code></a> Merge branch 'pyparsing_3.1.x'</li>; <li><a href=""https://github.com/pyparsing/pyparsing/commit/173bc165780cc455ba2f4818c94f0b58cb8b6e5e""><code>173bc16</code></a> Merge pull request <a href=""https://redirect.github.com/pyparsing/pyparsing/issues/493"">#493</a></li>; <li><a href=""https://github.com/pyparsing/pyparsing/commit/5b939ccc12e6213edbcecca7546472561788f3e9""><code>5b939cc</code></a> Use reset_pyparsing_context for each example in test_examples.py</li>; <li><a href=""https://github.com/pyparsing/pyparsing/commit/eb9db9eb65f973f59d2c42ef20c6bb6cd974059a""><code>eb9db9e</code></a> Add common, unicode, and testing to <strong>all</strong></li>; <li>Additional commits viewable in <a href=""https://github.com/pyparsing/pyparsing/compare/pyparsing_3.0.9...3.1.1"">compare v",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13345:8260,test,test,8260,https://hail.is,https://github.com/hail-is/hail/pull/13345,1,['test'],['test']
Testability,"ode>{.interpreted-text role=&quot;ref&quot;}.</li>; </ul>; <h2>7.0.0</h2>; <h1>pytest 7.0.0 (2022-02-03)</h1>; <p>(<strong>Please see the full set of changes for this release also in the 7.0.0rc1 notes below</strong>)</p>; <h2>Deprecations</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9488"">#9488</a>: If custom subclasses of nodes like <code>pytest.Item</code>{.interpreted-text role=&quot;class&quot;} override the; <code>__init__</code> method, they should take <code>**kwargs</code>. See; <code>uncooperative-constructors-deprecated</code>{.interpreted-text role=&quot;ref&quot;} for details.</p>; <p>Note that a deprection warning is only emitted when there is a conflict in the; arguments pytest expected to pass. This deprecation was already part of pytest; 7.0.0rc1 but wasn't documented.</p>; </li>; </ul>; <h2>Bug Fixes</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9355"">#9355</a>: Fixed error message prints function decorators when using assert in Python 3.8 and above.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9396"">#9396</a>: Ensure <code>pytest.Config.inifile</code>{.interpreted-text role=&quot;attr&quot;} is available during the <code>pytest_cmdline_main &lt;_pytest.hookspec.pytest_cmdline_main&gt;</code>{.interpreted-text role=&quot;func&quot;} hook (regression during <code>7.0.0rc1</code>).</li>; </ul>; <h2>Improved Documentation</h2>; <ul>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9404"">#9404</a>: Added extra documentation on alternatives to common misuses of [pytest.warns(None)]{.title-ref} ahead of its deprecation.</li>; <li><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9505"">#9505</a>: Clarify where the configuration files are located. To avoid confusions documentation mentions; that configuration file is located in the root of the repository.</li>; </ul>; <h2>Trivia",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11516:2720,assert,assert,2720,https://hail.is,https://github.com/hail-is/hail/pull/11516,3,['assert'],['assert']
Testability,"odified the `VirtualHost` set up to use [name-based VirtualHost discrimination](https://httpd.apache.org/docs/2.4/vhosts/name-based.html) based on information from the [TeamCity wiki](https://confluence.jetbrains.com/pages/viewpage.action?pageId=74845225#HowTo...-SetUpTeamCitybehindaProxyServer):. ``` apache; <IfModule mod_ssl.c>; <VirtualHost *:443>; # The ServerName directive sets the request scheme, hostname and port that; # the server uses to identify itself. This is used when creating; # redirection URLs. In the context of virtual hosts, the ServerName; # specifies what hostname must appear in the request's Host: header to; # match this virtual host. For the default virtual host (this file) this; # value is not decisive as it is used as a last resort host regardless.; # However, you must set it for any further virtual host explicitly.; ServerName hail.is; ServerAlias www.hail.is. ServerAdmin webmaster@localhost; DocumentRoot /var/www/html. RedirectMatch 404 /\.git. # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,; # error, crit, alert, emerg.; # It is also possible to configure the loglevel for particular; # modules, e.g.; #LogLevel info ssl:warn. ErrorLog ${APACHE_LOG_DIR}/error.log; CustomLog ${APACHE_LOG_DIR}/access.log combined. # For most configuration files from conf-available/, which are; # enabled or disabled at a global level, it is possible to; # include a line for only one particular virtual host. For example the; # following line enables the CGI configuration for this host only; # after it has been globally disabled with ""a2disconf"".; #Include conf-available/serve-cgi-bin.conf; SSLCertificateFile /etc/letsencrypt/live/hail.is/fullchain.pem; SSLCertificateKeyFile /etc/letsencrypt/live/hail.is/privkey.pem; Include /etc/letsencrypt/options-ssl-apache.conf; </VirtualHost>. <VirtualHost *:443>; ServerName ci.hail.is; ServerAdmin webmaster@localhost. LoadModule proxy_module /usr/lib/apache2/modules/mod_proxy.so; LoadModule proxy_http_",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/674#issuecomment-243899170:1256,log,loglevels,1256,https://hail.is,https://github.com/hail-is/hail/issues/674#issuecomment-243899170,1,['log'],['loglevels']
Testability,"odule>; from hail.utils import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hail/utils/__init__.py"", line 4, in <module>; from .hadoop_utils import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hail/utils/hadoop_utils.py"", line 7, in <module>; from hail.fs.hadoop_fs import HadoopFS; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hail/fs/hadoop_fs.py"", line 8, in <module>; from hailtop.fs.fs import FS; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/__init__.py"", line 1, in <module>; from .fs_utils import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/fs_utils.py"", line 4, in <module>; from hailtop.aiocloud.aiogoogle import GCSRequesterPaysConfiguration; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/__init__.py"", line 1, in <module>; from .client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/__init__.py"", line 8, in <module>; from .storage_client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/storage_client.py"", line 14, in <module>; from hailtop.aiotools import FeedableAsyncIterable, WriteBuffer; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/__init__.py"", line 1, in <module>; from .fs import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/__init__.py"", line 1, in <module>; from .copier import Copier, CopyReport, SourceCopier, SourceReport, Transfer, TransferReport; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/copier.py"", line 7, in <module>; import humanize; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/humanize/__init__.py"", li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14630:1429,test,test,1429,https://hail.is,https://github.com/hail-is/hail/issues/14630,1,['test'],['test']
Testability,"of Spark on Terra. . I hope you may have a solution to this irritating problem. I have added the scripts and logs below. . Thanks in advance,; Sean Jurgens. ### Version. 0.2.126-ee77707f4fab. ### Relevant log output. ```shell; ## PLEASE NOTE: to protect privacy as much as possible, I have removed almost all entries shown by the code, and for the few line entries that remain I have changed/randomized the numeric values. The order and structure is preserved for enrtries nonetheless. `#import libraries; import os; import hail as hl; from pprint import pprint. #### Start hail; hl.init(); hl.spark_context()`. /opt/conda/lib/python3.10/site-packages/hailtop/aiocloud/aiogoogle/user_config.py:44: UserWarning:. Reading spark-defaults.conf to determine GCS requester pays configuration. This is deprecated. Please use `hailctl config set gcs_requester_pays/project` and `hailctl config set gcs_requester_pays/buckets`. SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.18.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Running on Apache Spark version 3.3.0; SparkUI available at http://saturn-3f2d119c-05e5-496d-97b9-8f40efff98a3-m.c.terra-db12d060.internal:36235/; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.126-ee77707f4fab; LOGGING: writing to /home/jupyter/Ellinor_Lubitz_PHB_Joint_Analyses/edit/hail-20231216-1801-0.2.126-ee77707f4fab.log. SparkContext. [Spark UI](http://saturn-3f2d119c-05e5-496d-97b9-8f40efff98a3-m.c.terra-db12d060",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14102:2087,log,logger,2087,https://hail.is,https://github.com/hail-is/hail/issues/14102,1,['log'],['logger']
Testability,"of the hail backend; ```sh; sudo ln -sf /home/hadoop/.local/lib/python3.9/site-packages/hail/backend /opt/hail/backend; ```; * Confident of the. installation I try to run spark shell; ```sh; $ spark-shell; [...]; Exception in thread ""main"" java.lang.NoSuchMethodError: 'scala.reflect.internal.settings.MutableSettings ; ```. I am out of idea on how to solve the current situation. ; Thanks. ### Version. 0.2.124. ### Relevant log output. ```shell; $ spark-shell; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Exception in thread ""main"" java.lang.NoSuchMethodError: 'scala.reflect.internal.settings.MutableSettings scala.reflect.internal.settings.MutableSettings$.SettingsOps(scala.reflect.internal.settings.MutableSettings)'; at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$1(ILoop.scala:914); at scala.tools.nsc.interpreter.ILoop.mkReader$1(ILoop.scala:920); at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$4(ILoop.scala:926); at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$3(ILoop.scala:926); at scala.tools.nsc.interpreter.ILoop.chooseReader(ILoop.scala:926); at org.apache.spark.repl.SparkILoop.$anonfun$process$1(SparkILoop.scala:138); at scala.Option.fold(Option.scala:251); at org.apache.spark.repl.SparkILoop.newReader$1(SparkILoop.scala:138); at org.apache.spark.repl.SparkILoop.preLoop$1(SparkILoop.scala:142); at org.apache.spark.repl.SparkILoop.$anonfun$process$10(SparkILoop.scala:20",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837:2297,log,logging,2297,https://hail.is,https://github.com/hail-is/hail/issues/13837,1,['log'],['logging']
Testability,"of this pull request; 2. Incorporate Firebase Auth in place of Auth0 for 3rd party access token benefits.; 3: Scorecard; 3a. Draft working GraphQL V4 scorecard implementation; 3b. Finish authenticated GraphQL V4 scorecard implementation; 4. Batch; 4a: Setup dev batch endpoint; 4b: Call batch endpoint (no auth), and return any data; 4c: List all available jobs; * By querying Batch api, or Kubernetes directly; 4d: Receive current status of 1 job; 4e: Authentication; 4f: Polish (longest step): make interacting with batch achievable within perceived 16ms.; * goal: subscribe to events in web socket; * may want to save user job state in a Hail-controlled database (possible to use Firebase or Mongo, may prefer relational db, maybe Postgres or MySQL).; 4other: Figure out state question (sufficient to use Kubernetes); 5. Basic notebook interface.; 6. Connect websocket logic (non-GraphQL); 7. Authenticate web socket via Oauth2; 8. Incorporate GraphQL subscriptions (first: GitHub API); 9. Write tests; 10. Mock GraphQL endpoints; 11. Integrate web and api server bits into CI (maybe should be prioritized earlier...I prefer to get draft of major functions done first; am new to writing tests for React/Node). ## Near-term goals (<= 6 mo); 1. Upload, download; 2. Launch clusters, pay for them; 3. ?. ## Longer-term goals; 1. Much simpler interface to Hail. I would like steps that can be performed without programming to be done so. I would prefer fasta->variant filtering to be done as in Bystro (at least from the interface standpoint), i.e without opening up a notebook. Common analyses pipelines should also be possible without any interaction with a python notebook: GWAS, rare-variant (SKAT) analyses have, it seems, relatively few permutations. Those should be behind UI primitives. At each stage of a ; 2. Social network bits: users should be able to share job state with other users (requested by Bystro users on 22q consortium project) at the least.; 3. Record job state using something ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:7753,test,tests,7753,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['test'],['tests']
Testability,"og post! Read on <a href=""https://www.curlylint.org/blog/quality-of-life-improvements"">Quality-of-life improvements</a>.</p>; <h3>Added</h3>; <ul>; <li>Implement --template-tags CLI flag (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/25"">#25</a>, <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/77"">#77</a>).</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Add more descriptive error message for missing whitespace between HTML attributes (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/23#issuecomment-700622837"">#23 (comment)</a>, <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; <li>Move development dependencies from extras to separate <code>requirements.txt</code> (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; <li>Declare support for Python 3.9.</li>; <li>Tentatively declare support for Python 3.10 (tested with <code>Python 3.10.0a6+</code>).</li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Fix Python 3.10 deprecation warning by importing Iterable from collections.abc (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.2"">v0.12.2</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The <code>image_alt</code> rule no longer crashes when encountering template conditionals in img attributes (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/57"">#57</a>). Thanks to <a href=""https://github.com/adrien-delhorme""><code>@​adrien-delhorme</code></a>.</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.1"">v0.12.1</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The project’s sdist now includes all needed files to run the test suite (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/49"">#49</a>, <a href=""https:",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11494:3985,test,tested,3985,https://hail.is,https://github.com/hail-is/hail/pull/11494,3,['test'],['tested']
Testability,"og post! Read on <a href=""https://www.curlylint.org/blog/quality-of-life-improvements"">Quality-of-life improvements</a>.</p>; <h3>Added</h3>; <ul>; <li>Implement --template-tags CLI flag (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/25"">#25</a>, <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/77"">#77</a>).</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Add more descriptive error message for missing whitespace between HTML attributes (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/23#issuecomment-700622837"">#23 (comment)</a>, <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; <li>Move development dependencies from extras to separate <code>requirements.txt</code> (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; <li>Declare support for Python 3.9.</li>; <li>Tentatively declare support for Python 3.10 (tested with <code>Python 3.10.0a6+</code>).</li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Fix Python 3.10 deprecation warning by importing Iterable from collections.abc (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; </ul>; <h2>v0.12.2</h2>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.2"">v0.12.2</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The <code>image_alt</code> rule no longer crashes when encountering template conditionals in img attributes (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/57"">#57</a>). Thanks to <a href=""https://github.com/adrien-delhorme""><code>@​adrien-delhorme</code></a>.</li>; </ul>; <h2>v0.12.1</h2>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.1"">v0.12.1</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The project’s sdist now includes all needed files to run the test suite (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11494:1436,test,tested,1436,https://hail.is,https://github.com/hail-is/hail/pull/11494,3,['test'],['tested']
Testability,"ogle/user_config.py:29: UserWarning: You have specified the GCS requester pays configuration in both your spark-defaults.conf (/Users/dking/miniconda3/lib/python3.10/site-packages/pyspark/conf/spark-defaults.conf) and either an explicit argument or through `hailctl config`. For GCS requester pays configuration, Hail first checks explicit arguments, then `hailctl config`, then spark-defaults.conf.; warnings.warn(; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/Users/dking/miniconda3/lib/python3.10/site-packages/pyspark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Running on Apache Spark version 3.3.3; SparkUI available at http://192.168.1.142:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.125-c4e2880b3279; LOGGING: writing to /Users/dking/projects/hail/hail/hail-20231026-0957-0.2.125-c4e2880b3279.log; --------------------------------------------------------------------------- / 1]; FatalError Traceback (most recent call last); Cell In[1], line 2; 1 import hail as hl; ----> 2 hl.import_vcf('gs://danking/chr*.vcf').count(). File ~/miniconda3/lib/python3.10/site-packages/hail/matrixtable.py:2631, in MatrixTable.count(self); 2618 """"""Count the number of rows and columns in the matrix.; 2619 ; 2620 Examples; (...); 2628 Number of rows, number of cols.; 2629 """"""; 2630 count_ir = ir.MatrixCount(self._mir); -> 2631 return Env.backend().execute(count_ir). File ~/miniconda3/lib/python3.10/site-packages/hail/backend/backend.py:180, i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13915:2214,log,logging,2214,https://hail.is,https://github.com/hail-is/hail/issues/13915,1,['log'],['logging']
Testability,"ogleapis/java-storage/issues/2184"">#2184</a>) (<a href=""https://github.com/googleapis/java-storage/commit/d9859768081ea6f872097851d3e318b5bad384d9"">d985976</a>)</li>; <li>Initial CLI for SSB integration and Workload 1 (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2166"">#2166</a>) (<a href=""https://github.com/googleapis/java-storage/commit/a349735e7fe108e623a330afec0c8cd608ebeef9"">a349735</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>A resumable session without a Range header should be interpreted as 0 length (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2182"">#2182</a>) (<a href=""https://github.com/googleapis/java-storage/commit/53022011d83e6a8515a5ba008fc45fc2dae39cea"">5302201</a>)</li>; <li>Update User-Agent handling for resumable uploads (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2168"">#2168</a>) (<a href=""https://github.com/googleapis/java-storage/commit/665b714f421d3c13b557d0ff71460c328c010856"">665b714</a>)</li>; <li>Update version resolution logic to be more resilient (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2169"">#2169</a>) (<a href=""https://github.com/googleapis/java-storage/commit/c89d27508039a014ea5a6dd8d4889f63d07db73f"">c89d275</a>)</li>; </ul>; <h3>Dependencies</h3>; <ul>; <li>Update actions/checkout action to v4 (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2188"">#2188</a>) (<a href=""https://github.com/googleapis/java-storage/commit/c10267e176bda21cd5755dfb0e96d0504fbc1d54"">c10267e</a>)</li>; <li>Update actions/checkout action to v4 (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2189"">#2189</a>) (<a href=""https://github.com/googleapis/java-storage/commit/5c048c499eef224dade8f4409dfae732cb5a7017"">5c048c4</a>)</li>; <li>Update actions/checkout action to v4 (<a href=""https://redirect.github.com/googleapis/java-storage/issues/2190"">#2190</a>) (<a href=""https://github.com/googleapis/java-storage/commit/45e66e89373",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13624:1861,log,logic,1861,https://hail.is,https://github.com/hail-is/hail/pull/13624,2,['log'],['logic']
Testability,"ogleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:2243,log,logging,2243,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"ogleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-logging/compare/v2.6.0...v2.7.0"">2.7.0</a> (2021-11-02)</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:9321,log,logging,9321,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"ogleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2>v2.7.0</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:3888,log,logging,3888,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"ogleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3""><code>e0c5fc0</code></a> feat: trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce""><code>97e32b6</code></a> fix: allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b""><code>a760e02</code></a> feat: add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc""><code>83d9ca8</code></a> feat!: make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300""><code>818213e</code></a> feat: avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:12254,log,logging,12254,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],"['logging', 'logs']"
Testability,"ogoogle/client/storage_client.py:250: in _write_chunk; await retry_transient_errors(self._write_chunk_1); /usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py:807: in retry_transient_errors; return await retry_transient_errors_with_debug_string('', 0, f, *args, **kwargs); /usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py:819: in retry_transient_errors_with_debug_string; return await f(*args, **kwargs); /usr/local/lib/python3.9/dist-packages/hailtop/aiocloud/aiogoogle/client/storage_client.py:182: in _write_chunk_1; self._write_buffer.advance_offset(new_offset); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <hailtop.aiotools.utils.WriteBuffer object at 0x7f2e2ed098b0>; new_offset = 0. def advance_offset(self, new_offset: int):; """"""Inform the write buffer that bytes before `new_offset` have been; committed and can be discarded. After calling advance_offset,; `self.offset() == new_offset`.""""""; > assert not self._iterating; E AssertionError. /usr/local/lib/python3.9/dist-packages/hailtop/aiotools/utils.py:67: AssertionError; ------------------------------ Captured log setup ------------------------------; INFO hailtop.aiocloud.aiogoogle.credentials:credentials.py:89 using credentials file /test-gsa-key/key.json: GoogleServiceAccountCredentials for test-665@hail-vdc.iam.gserviceaccount.com; ------------------------------ Captured log call -------------------------------; INFO hailtop.aiocloud.aiogoogle.credentials:credentials.py:89 using credentials file /test-gsa-key/key.json: GoogleServiceAccountCredentials for test-665@hail-vdc.iam.gserviceaccount.com; WARNING hailtop.aiocloud.aiogoogle.client.storage_client:storage_client.py:225 resumable upload chunk PUT request finished before writing data; WARNING hailtop.aiocloud.aiogoogle.client.storage_client:storage_client.py:117 dropping preempted task exception; Traceback (most recent call last):; File ""/usr/lib/python3.9/asyncio/tasks.py"", line 258, in __step; r",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13742:3311,Assert,AssertionError,3311,https://hail.is,https://github.com/hail-is/hail/issues/13742,1,['Assert'],['AssertionError']
Testability,"oh damn!. ```python; @benchmark; def table_aggregate_take_by_strings():; ht = hl.read_table(resource('many_strings_table.ht')); ht.aggregate(hl.tuple([hl.agg.take(ht['f18'], 25, ordering=ht[f'f{i}']) for i in range(12)])); ```. master:; ```; [1/1] Running table_aggregate_take_by...; run 1: 13.09; run 2: 13.19; run 3: 12.18; run 4: 11.57; run 5: 11.48; table_aggregate_take_by	12.302	12.181	0.725; ```. PR:; ```; [1/1] Running table_aggregate_take_by...; run 1: 4.84; run 2: 3.97; run 3: 3.81; run 4: 4.23; run 5: 4.12; table_aggregate_take_by	4.194	4.123	0.351; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6942#issuecomment-525928431:22,benchmark,benchmark,22,https://hail.is,https://github.com/hail-is/hail/pull/6942#issuecomment-525928431,1,['benchmark'],['benchmark']
Testability,"oh wait, I see. they got bundled into `assertEvalsTo`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4663#issuecomment-434401739:39,assert,assertEvalsTo,39,https://hail.is,https://github.com/hail-is/hail/pull/4663#issuecomment-434401739,1,['assert'],['assertEvalsTo']
Testability,"oh, nice, I didn't see this. Let's benchmark!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7113#issuecomment-534322797:35,benchmark,benchmark,35,https://hail.is,https://github.com/hail-is/hail/pull/7113#issuecomment-534322797,1,['benchmark'],['benchmark']
Testability,"oh, this fixes my test. got it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10934#issuecomment-935176776:18,test,test,18,https://hail.is,https://github.com/hail-is/hail/pull/10934#issuecomment-935176776,1,['test'],['test']
Testability,"oint number (precision; unclear) between 0 and 1. 4. Metadata is optionally added to the records. The metadata captures information about the source; and destination VM such as project id, VM name, zone, region, GKE pod, GKE service, and geographic; information of external parties. The user may elect to receive all metadata, no metadata, or a; specific set of metadata fields. 5. The records are written to Google Cloud Logging. The pricing of VPC Flow Logs is described at the [network pricing page](https://cloud.google.com/vpc/network-pricing#network-telemetry). Notice that, if logs are only sent to Cloud Logging (not to BigQuery, Pub/Sub, or Cloud Storage):. > If you store your logs in Cloud Logging, logs generation charges are waived, and only Logging charges apply. I believe in this phrase ""logs generation charges"" refers to *VPC Flow logs* generation charges. The Google Cloud Logging [pricing page](https://cloud.google.com/stackdriver/pricing#google-clouds-operations-suite-pricing) indicates that, after 50 GiB of free logs, the user is charged 0.50 USD per GiB of logs. Storage is free for thirty days and 0.01 USD per GiB for each additional day. We can calculate the cost of our logs as follows. Refer to the [definition of the record format](https://cloud.google.com/vpc/docs/flow-logs#record_format) for details. ```python3; ip_string = len(""123.123.123.123""); ip_connection = 4 + ip_string + ip_string + 4 + 4; date_time = len(""1937-01-01T12:00:27.87+00:20""); record_bytes = sum((; ip_connection,; max(len('SRC'), len('DEST')),; 8,; 8,; 8,; date_time,; date_time,; )); assert record_bytes == 126. hours_per_month = 24 * 60; seconds_per_hour = 60 * 60. seconds_per_interval = 15 * 60; vms = 10000; sampling_rate = 0.5; connections_per_vm_per_aggregation_interval = 100. intervals_per_hour = seconds_per_hour / seconds_per_interval; records_per_hour = intervals_per_hour * vms * connections_per_vm_per_aggregation_interval * sampling_rate; bytes_per_hour = records_per_hour * rec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12883:2124,log,logs,2124,https://hail.is,https://github.com/hail-is/hail/pull/12883,1,['log'],['logs']
Testability,"oject: test; cost: 0.0012024241022130966; limit: null; users: [test]; - accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]; - accrued_cost: 0.0; billing_project: test-zero-limit; cost: null; limit: 0.0; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch billing get; usage: hailctl batch billing get [-h] [-o {yaml,json}] billing_project; hailctl batch billing get: error: the following arguments are required: billing_project; Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x10a635208>; (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. Unclosed client session; client_session: <aiohttp.client.ClientSession object at 0x10cfe2278>; Unclosed connector; connections: ['[(<aiohttp.client_proto.ResponseHandler object at 0x10d062c78>, 2.214990943)]']; connector: <aiohttp.connector.TCPConnector object at 0x10cfe21d0>; (base) wmecc-475:hail jigold$ hailctl batch billing get test-tiny-limit; accrued_cost: 9.62974093086927e-05; billing_project: test-tiny-limit; cost: 9.62974093086927e-05; limit: 1.0e-05; users: [test]. (base) wmecc-475:hail jigold$ hailctl batch; usage: hailctl batch [-h] {billing,list,get,cancel,delete,log,job,wait} ... Manage batches running on the batch service managed by the Hail team. positional arguments:; {billing,list,get,cancel,delete,log,job,wait}; billing List billing; list List batches; get Get a particular batch's info; cancel Cancel a batch; delete Delete a batch; log Get log for a job; job Get the status and specification for a job; wait Wait for a batch to complete, then print JSON stat",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9385#issuecomment-684964006:1922,test,test,1922,https://hail.is,https://github.com/hail-is/hail/pull/9385#issuecomment-684964006,1,['test'],['test']
Testability,ok maybe that fixes it? Testing locally doesn't seem to encounter the issue.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8576#issuecomment-615476103:24,Test,Testing,24,https://hail.is,https://github.com/hail-is/hail/pull/8576#issuecomment-615476103,1,['Test'],['Testing']
Testability,"ok"",""us-docker.pkg.dev/hail-vdc/hail/notebook_nginx"",""us-docker.pkg.dev/hail-vdc/hail/prometheus"",""us-docker.pkg.dev/hail-vdc/hail/service-base"",""us-docker.pkg.dev/hail-vdc/hail/service-java-run-base"",""us-docker.pkg.dev/hail-vdc/hail/test-ci"",""us-docker.pkg.dev/hail-vdc/hail/test-monitoring"",""us-docker.pkg.dev/hail-vdc/hail/test-benchmark"",""us-docker.pkg.dev/hail-vdc/hail/test_hello_create_certs_image"",""us-docker.pkg.dev/hail-vdc/hail/website"",""us-docker.pkg.dev/hail-vdc/hail/ci-hello"",""us-docker.pkg.dev/hail-vdc/hail/hailgenetics/vep-grch37-85"",""us-docker.pkg.dev/hail-vdc/hail/hailgenetics/vep-grch38-95""],""grace"":""48h"",""recursive"":true,""tag_filter_all"":""cache-pr-.*""}; ```. ```; {""repos"":[""us-docker.pkg.dev/hail-vdc/hail/auth"",""us-docker.pkg.dev/hail-vdc/hail/base"",""us-docker.pkg.dev/hail-vdc/hail/base_spark_3_2"",""us-docker.pkg.dev/hail-vdc/hail/batch"",""us-docker.pkg.dev/hail-vdc/hail/batch-driver-nginx"",""us-docker.pkg.dev/hail-vdc/hail/batch-worker"",""us-docker.pkg.dev/hail-vdc/hail/benchmark"",""us-docker.pkg.dev/hail-vdc/hail/blog_nginx"",""us-docker.pkg.dev/hail-vdc/hail/ci"",""us-docker.pkg.dev/hail-vdc/hail/ci-intermediate"",""us-docker.pkg.dev/hail-vdc/hail/ci-utils"",""us-docker.pkg.dev/hail-vdc/hail/create_certs_image"",""us-docker.pkg.dev/hail-vdc/hail/echo"",""us-docker.pkg.dev/hail-vdc/hail/grafana"",""us-docker.pkg.dev/hail-vdc/hail/hail-base"",""us-docker.pkg.dev/hail-vdc/hail/hail-build"",""us-docker.pkg.dev/hail-vdc/hail/hail-buildkit"",""us-docker.pkg.dev/hail-vdc/hail/hail-run"",""us-docker.pkg.dev/hail-vdc/hail/hail-run-tests"",""us-docker.pkg.dev/hail-vdc/hail/hail-pip-installed-python37"",""us-docker.pkg.dev/hail-vdc/hail/hail-pip-installed-python38"",""us-docker.pkg.dev/hail-vdc/hail/hail-ubuntu"",""us-docker.pkg.dev/hail-vdc/hail/memory"",""us-docker.pkg.dev/hail-vdc/hail/monitoring"",""us-docker.pkg.dev/hail-vdc/hail/notebook"",""us-docker.pkg.dev/hail-vdc/hail/notebook_nginx"",""us-docker.pkg.dev/hail-vdc/hail/prometheus"",""us-docker.pkg.dev/hail-vdc/hail/service-base"",""us-docker.pk",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13603#issuecomment-1734249545:2398,benchmark,benchmark,2398,https://hail.is,https://github.com/hail-is/hail/issues/13603#issuecomment-1734249545,1,['benchmark'],['benchmark']
Testability,"ok, I ended up pulling the Table stuff out of this PR (will push up another PR for it shortly) and hooking it in to InferPTypes in this PR (it won't handle stuff like RunAgg, etc. so I'll probably add a fallback to the original ptypes logic for now.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8602#issuecomment-622471229:235,log,logic,235,https://hail.is,https://github.com/hail-is/hail/pull/8602#issuecomment-622471229,1,['log'],['logic']
Testability,"ok, I've updated this PR so that billing projects can be ""open"", ""closed"", or ""deleted"". Allowed flow is `open` <--> `closed` --> `deleted`. Closed billing projects will still show up in the UI and billing reports; deleted projects show up in neither, but batches belonging to deleted billing projects will still show up in the batches table unless they're deleted. There's no endpoint here for deleting closed projects; I'll add an API endpoint in the billing project API PR so that I can run the tests properly there, but currently don't intend to add a button to the UI.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9579#issuecomment-705774492:498,test,tests,498,https://hail.is,https://github.com/hail-is/hail/pull/9579#issuecomment-705774492,1,['test'],['tests']
Testability,"ok, added failing test!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7455#issuecomment-549903705:18,test,test,18,https://hail.is,https://github.com/hail-is/hail/pull/7455#issuecomment-549903705,1,['test'],['test']
Testability,"ok, great. @cseed I've essentially already implemented the thing that you've described (although I need to actually duplicate the IR nodes in python for the loop function to work, and add some tests), although I haven't peeled off the ifs and lets to emit separately (and I don't know if we need to? seems to work fine with the current code generator); we check that all recurs are in tail position when we typecheck the IR. I will clean up the python and give the loops names and then assign this to someone.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7614#issuecomment-560028289:193,test,tests,193,https://hail.is,https://github.com/hail-is/hail/pull/7614#issuecomment-560028289,1,['test'],['tests']
Testability,"ok, so back to the same error. I think your Spark cluster must be configured incorrectly, which is something we can't really help with. You should be able to do:; ```; pyspark; ```; and then:; ```python; sc.textFile('/hail/test/BRCA1.raw_indel.vcf'); ```; without error.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-321224012:223,test,test,223,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-321224012,1,['test'],['test']
Testability,"ok, tests added. Let me know if you can think of other cases that should get tested as well.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2950#issuecomment-367424171:4,test,tests,4,https://hail.is,https://github.com/hail-is/hail/pull/2950#issuecomment-367424171,2,['test'],"['tested', 'tests']"
Testability,"ok, the includedVariants logic makes this super hacky and terrible. I'm going to close this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5515#issuecomment-469288996:25,log,logic,25,https://hail.is,https://github.com/hail-is/hail/pull/5515#issuecomment-469288996,1,['log'],['logic']
Testability,ok-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/pkgs/notebook-6.2.0-py38h578d9bd_0/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/nbclassic/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile; /opt/conda/miniconda3/lib/python3.8/site-packages/notebook/static/components/codemirror/mode/dockerfile/dockerfile.js; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_dotted_labels.yml; /opt/google-fluentd/embedded/lib/ruby/gems/2.7.0/gems/fluent-plugin-kubernetes_metadata_filter-2.5.2/test/cassettes/kubernetes_docker_metadata_annotations.yml; /usr/share/man/man1/gcloud_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_list-vulnerabilities.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_describe.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_scan.1.gz; /usr/share/man/man1/gcloud_alpha_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_list.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_images_delete.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker_images.1.gz; /usr/share/man/man1/gcloud_beta_auth_configure-docker.1.gz; /usr/share/man/man1/gcloud_artifacts_docker_tags_list.1.gz; /usr/share/man/man1/gcloud_beta_artifacts_docker_tags_list.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker.1.gz; /usr/share/man/man1/gcloud_alpha_artifacts_docker_images_list.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:2273,test,test,2273,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751,1,['test'],['test']
Testability,"ok. Figured it out. The issue is that the build of the new image finally succeeded after 18 minutes, but the test timed out and batch must have been shut down already.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8440#issuecomment-614882682:109,test,test,109,https://hail.is,https://github.com/hail-is/hail/pull/8440#issuecomment-614882682,1,['test'],['test']
Testability,"ok. this question about what n_jobs means for a job group is also blocking this query that's needed for the rest of the tests to pass. ```mysql; # compute global number of new ready jobs from root job group; INSERT INTO user_inst_coll_resources (user, inst_coll, token, n_ready_jobs, ready_cores_mcpu); SELECT user, inst_coll, 0, @n_ready_jobs := COALESCE(SUM(n_ready_jobs), 0), @ready_cores_mcpu := COALESCE(SUM(ready_cores_mcpu), 0); FROM job_groups_inst_coll_staging; JOIN batches ON batches.id = job_groups_inst_coll_staging.batch_id; WHERE batch_id = in_batch_id AND update_id = in_update_id AND job_group_id = 0; GROUP BY `user`, inst_coll; ON DUPLICATE KEY UPDATE; n_ready_jobs = n_ready_jobs + @n_ready_jobs,; ready_cores_mcpu = ready_cores_mcpu + @ready_cores_mcpu;; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14170#issuecomment-1932776114:120,test,tests,120,https://hail.is,https://github.com/hail-is/hail/pull/14170#issuecomment-1932776114,1,['test'],['tests']
Testability,oke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748)java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.next(OrderedRVD.scala:926); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.next(OrderedRVD.scala:908); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); 	at is.hail.utils.package$.getIteratorSizeWithMaxN(package.scala:349); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:433); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:433); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1$$anonfun$apply$34.apply(ContextRDD.scala:458); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1$$anonfun$apply$34.apply(ContextRDD.scala:458); 	at is.hail.utils.package$.using(package.scala:577); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:458); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:458); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2062); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2062); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); 	at org.apache.spark.scheduler.Task.run(Task.scala:108); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748); Hail version: devel-9a5678f; Error summary: AssertionError: assertion failed; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3516:7852,Assert,AssertionError,7852,https://hail.is,https://github.com/hail-is/hail/issues/3516,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,oke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.getKey$1(OrderingSuite.scala:345); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:347); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:318); 	at is.hail.utils.package$.using(package.scala:613); 	at is.hail.annotations.Region$.scoped(Region.scala:13); 	at is.hail.expr.ir.OrderingSuite$$anonfu,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1694,test,testng,1694,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['test'],['testng']
Testability,oke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.clo,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4618,test,testng,4618,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['test'],['testng']
Testability,oke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.c,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4425,test,testng,4425,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,2,['test'],['testng']
Testability,"okeh, backcall, asyncinit, aiohttp-session, ipython, hail; Successfully installed Deprecated-1.2.12 Jinja2-2.11.3 MarkupSafe-1.1.1 PyJWT-2.0.1 PyYAML-5.4.1 aiohttp-3.7.4 aiohttp-session-2.7.0 async-timeout-3.0.1 asyncinit-0.2.4 attrs-20.3.0 backcall-0.2.0 bokeh-1.4.0 cachetools-4.2.1 certifi-2020.12.5 chardet-3.0.4 decorator-4.4.2 dill-0.3.3 fsspec-0.8.7 gcsfs-0.7.2 google-api-core-1.26.1 google-auth-1.27.1 google-auth-oauthlib-0.4.3 google-cloud-core-1.6.0 google-cloud-storage-1.25.0 google-resumable-media-0.5.1 googleapis-common-protos-1.53.0 hail-0.2.64 humanize-1.0.0 hurry.filesize-0.9 idna-2.8 ipython-7.21.0 ipython-genutils-0.2.0 jedi-0.18.0 multidict-5.1.0 nest-asyncio-1.5.1 numpy-1.20.1 oauthlib-3.1.0 packaging-20.9 pandas-1.1.4 parsimonious-0.8.1 parso-0.8.1 pexpect-4.8.0 pickleshare-0.7.5 pillow-8.1.2 prompt-toolkit-3.0.17 protobuf-3.15.6 ptyprocess-0.7.0 py4j-0.10.7 pyasn1-0.4.8 pyasn1-modules-0.2.8 pygments-2.8.1 pyparsing-2.4.7 pyspark-2.4.1 python-dateutil-2.8.1 python-json-logger-0.1.11 pytz-2021.1 requests-2.22.0 requests-oauthlib-1.3.0 rsa-4.7.2 scipy-1.6.1 six-1.15.0 tabulate-0.8.3 tornado-6.1 tqdm-4.42.1 traitlets-5.0.5 typing-extensions-3.7.4.3 urllib3-1.25.11 wcwidth-0.2.5 wrapt-1.12.1 yarl-1.6.3; (3.8) ✔ ~/sandbox/hail [master|𝚫8?2]; snafu$ ipython ; Python 3.8.6 (default, Jan 27 2021, 15:42:20) ; Type 'copyright', 'credits' or 'license' for more information; IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-e24d842d2b9a> in <module>; ----> 1 import hail. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/__init__.py in <module>; 32 # F401 '.expr.*' imported but unused; 33 # E402 module level import not at top of file; ---> 34 from .table import Table, GroupedTable, asc, desc # noqa: E402; 35 from .matrixtable import MatrixTable, GroupedMatrixTable # noqa: E402; 3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10197:9200,log,logger-,9200,https://hail.is,https://github.com/hail-is/hail/issues/10197,1,['log'],['logger-']
Testability,"ol). For example:. ```; sema = asyncio.Semaphore(50); async with sema:; await copy(sema, ...); ```. Then, to run a set of operations in parallel, subject to the global parallelism bound, use bounded_gather2:. ```; await bounded_gather2(sema, *aws); ```. The naive implementation of bounded_gather2 doesn't work: bounded_gather2 cannot spawn a task for each awaitable and have it try to acquiare the semaphore, because this can lead to deadlock: if 50 tasks launch and wait for children, but none of those children can run because the parents have all the threads of control, the algorithm will deadlock. The key is to make sure at least one child can always be running in a bounded_gather2. But the caller of bounded_gather2 had a reserved thread of execution and it is blocking, so that thread of execution should be transferred to the children while the bounded_gather2 is blocked. This is what bounded_gather2 does. There is also an ""online"" version of bounded_gather2 which lets you schedule an unbounded number of children (potentially generated asynchronously). OnlineBoundedGather2 is used in parallelizing file transfers generated by directory listings, for example, which are enumerated via an async generator, and are potentially very large. I will try to replace bounded_gather and the async worker pool with this mechanism in a future PR. The parameters will likely need additional tuning. I have done some rough timing, and already this is beating gsutil:. - Transfer 10GB spread over 40K files (times in ms):. {'upload': 95803,; 'download': 55240,; 'compare': 54117,; 'clean file': 632,; 'clean gs': 117263,; 'total': 323061}. vs the gsutil transfer:. real	11m14.153s; user	14m28.789s; sys	1m29.090s. and gsutil cleanup (removing 40K files in gs://):. real	10m12.236s; user	3m33.382s; sys	0m55.450s. - Transfer 10GB in one file takes ~20s (up) and ~30s (down) for copy vs ~1m for gsutil. I'm still working on the benchmark harness and will post more complete comparisons in a future PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9934:3325,benchmark,benchmark,3325,https://hail.is,https://github.com/hail-is/hail/pull/9934,1,['benchmark'],['benchmark']
Testability,"olders whose names match but either differ in size or differ in type. Four columns: source URL, destination URL, source state, destination state. The states are either: `file`, `dif`, or a size. If either state is a size, both states are sizes. 3. `srconly` files only present in the source. One column: source URL. 4. `dstonly` files only present in the destination. One column: destination URL. 5. `plan` a proposed set of object-to-object copies. Two columns: source URL, destination URL. 6. `summary` a one-line file containing the total number of copies in plan and the total number of bytes which would be copied. As described in the CLI documentation, the intended use of these commands is:. ```; hailctl fs sync --make-plan plan1 --copy-to gs://gcs-bucket/a s3://s3-bucket/b; hailctl fs sync --use-plan plan1; ```. The first command generates a plan folder and the second command executes the plan. Separating this process into two commands allows the user to verify what exactly will be copied including the exact destination URLs. Moreover, if `hailctl fs sync --use-plan` fails, the user can re-run `hailctl fs sync --make-plan` to generate a new plan which will avoid copying already successfully copied files. Moreover, the user can re-run `hailctl fs sync --make-plan` to verify that every file was indeed successfully copied. Testing. This change has a few sync-specific tests but largely reuses the tests for `hailtop.aiotools.copy`. Future Work. Propagating a consistent kind of hash across all clouds and using that for detecting differences is a better solution than the file-size based difference used here. If all the clouds always provided the same type of hash value, this would be trivial to add. Alas, at time of writing, S3 and Google both support CRC32C for every blob (though, in S3, you must explicitly request it at object creation time), but *Azure Blob Storage does not*. ABS only supports MD5 sums which Google does not support for multi-part uploads. Resolves #14654",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14248:2537,Test,Testing,2537,https://hail.is,https://github.com/hail-is/hail/pull/14248,3,"['Test', 'test']","['Testing', 'tests']"
Testability,"olving tiny systems (dimension number of covariates) is dwarfed by time spent working with vectors and matrices with primary dimension the number of samples (as in QR), and because BLAS3 matrix multiplication is fast. I also checked that upping to 8 covariates didn't balance things out. It didn't. The fancy approach basically trades X.t * X and generic k-dim solve for a QR on X and triangular k-dim solve...better for larger k and smaller n. ```; Standard. 2 cov; Lin 7s; Score 54.5s; LRT 93s; Wald 90s. 2 cov, QR / TriSolve; Lin 7.42s; Score 53.6s, 53.1s; LRT 2m06s, 1m59s; Wald 1m53s, 1m54s. 8 cov; Lin 7.16s; Score 59.1s; LRT 2m25s, 2m20s, 2m26s; Wald 2m27s, 2m27s, 2m25s. 8 cov, QR / TriSolve; Lin 7.76s; Score 52.7s; LRT 3m30s; Wald 3m26s; ```. For Firth, since I'm using QR anyway, may as will use TriSolve (though the timing is not particularly effected even with 8 covariates):. ```; 2 cov:; Firth 5m 10s, 4m55s, 5m7s. 8 cov:; Firth 10m37s, 10m50s, 10m28s; ```. For reference, here's the core logic of the QR approach. This corresponds to another version of LogisticRegressionFit where I tried to reduce unnecessary computation, see below. ```; while (!converged && !exploded && iter <= maxIter) {; try {; val mu = sigmoid(X * b); val sqrtW = sqrt(mu :* (1d - mu)); val QR = qr.reduced(X(::, *) :* sqrtW). deltaB = TriSolve(QR.r, QR.q.t * ((y - mu) :/ sqrtW)). if (max(abs(deltaB)) < tol) {; converged = true; if (computeScoreR) {; optScore = Some(X.t * (y - mu)); optR = Some(QR.r); }; if (computeSe) {; val invR = inv(QR.r) // could speed up inverting as upper triangular, or avoid altogether as 1 / se(-1) = fit.fisherSqrt(-1, -1); optSe = Some(norm(invR(*, ::))); }; if (computeLogLkld); optLogLkhd = Some(sum(breeze.numerics.log((y :* mu) + ((1d - y) :* (1d - mu))))); } else {; iter += 1; b += deltaB; }; }; ```. ```; case class LogisticRegressionFit(; b: DenseVector[Double],; optScore: Option[DenseVector[Double]],; optR: Option[DenseMatrix[Double]],; optSe: Option[DenseVector[Doub",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1375#issuecomment-279532833:1135,log,logic,1135,https://hail.is,https://github.com/hail-is/hail/pull/1375#issuecomment-279532833,1,['log'],['logic']
Testability,om aggregated_billing_project_user_resources_by_date_v3 where resource_id = 6 limit 100;; +--------------+----------------------------------+------+-------------+-------+------------+; | billing_date | billing_project | user | resource_id | token | usage |; +--------------+----------------------------------+------+-------------+-------+------------+; | 2023-07-13 | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | 2023-07-13 | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | 2023-07-13 | ci | ci | 6 | 0 | 79640784 |; | 2023-07-13 | test | test | 6 | 0 | 4142226688 |; | 2023-07-13 | test | test | 6 | 1 | 108608 |; | 2023-07-13 | test | test | 6 | 2 | 80576 |; | 2023-07-13 | test | test | 6 | 5 | 35648 |; | 2023-07-13 | test | test | 6 | 7 | 578240 |; | 2023-07-13 | test | test | 6 | 9 | 33024 |; | 2023-07-13 | test | test | 6 | 10 | 33472 |; | 2023-07-13 | test | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:8284,test,test,8284,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,"om/repos/hail-ci-test/ci-test-p4a9fxo7/{archive_format}{/ref}"",; ""downloads_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/downloads"",; ""issues_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues{/number}"",; ""pulls_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/pulls{/number}"",; ""milestones_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/milestones{/number}"",; ""notifications_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/notifications{?since,all,participating}"",; ""labels_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/labels{/name}"",; ""releases_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/releases{/id}"",; ""deployments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/deployments"",; ""created_at"": ""2018-10-10T00:32:59Z"",; ""updated_at"": ""2018-10-10T00:32:59Z"",; ""pushed_at"": ""2018-10-10T00:33:00Z"",; ""git_url"": ""git://github.com/hail-ci-test/ci-test-p4a9fxo7.git"",; ""ssh_url"": ""git@github.com:hail-ci-test/ci-test-p4a9fxo7.git"",; ""clone_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7.git"",; ""svn_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""homepage"": null,; ""size"": 0,; ""stargazers_count"": 0,; ""watchers_count"": 0,; ""language"": null,; ""has_issues"": true,; ""has_projects"": true,; ""has_downloads"": true,; ""has_wiki"": true,; ""has_pages"": false,; ""forks_count"": 0,; ""mirror_url"": null,; ""archived"": false,; ""open_issues_count"": 0,; ""license"": null,; ""forks"": 0,; ""open_issues"": 0,; ""watchers"": 0,; ""default_branch"": ""master"",; ""permissions"": {; ""admin"": true,; ""push"": true,; ""pull"": true; },; ""allow_squash_merge"": true,; ""allow_merge_commit"": true,; ""allow_rebase_merge"": true,; ""organization"": {; ""login"": ""hail-ci-test"",; ""id"": 43152710,; ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjQzMTUyNzEw"",; ""avatar_url"": ""https://avatars1.githubusercontent.com/u/43152710?v=4"",; ""gravatar_id"": """",; ""url"": ""https://api.github.com/users/h",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:5940,test,test,5940,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"om/sponsors/tqdm/dashboard/tiers?frequency=one-time"">GH Sponsors</a> &amp; <a href=""https://tqdm.github.io/merch"">merch</a> links</li>; </ul>; <h2>tqdm v4.61.2 stable</h2>; <ul>; <li>install <code>colorama</code> on Windows (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1139"">#1139</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/454"">#454</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tqdm/tqdm/commit/f3fb54eb161a9f5de13352e16a70a9960946605b""><code>f3fb54e</code></a> bump version, merge pull request <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1302"">#1302</a> from tqdm/devel</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/a6139189856349e96b5bfad30e0c296d44861fb1""><code>a613918</code></a> tests: pin py3.5 keras</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/02b29234f88272778b879b3da7589cbb9ce13dfd""><code>02b2923</code></a> tests: drop py3.6 nbval</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/2a9f1d23d3033c40ba9568285a144d711aa7d02b""><code>2a9f1d2</code></a> tests: fix pytest-nbval, tidy versions</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/6ba43f2631a18f8bfe2cd1bb2071c507e88ce6d8""><code>6ba43f2</code></a> tests: fix pytest-asyncio usage</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/6426c55b0f546a51be6e60034f34fbcaa87f679b""><code>6426c55</code></a> cli: fix py3.9 <code>importlib</code> usage</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/c1e7acebad76c0a6d17ce005d46e55f06bda1c09""><code>c1e7ace</code></a> tests: coverage warning</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/2190b1b76d4c496a75a5e37560c5f24edfff6a74""><code>2190b1b</code></a> tests: add py3.10</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/a14ea74a81be2bc0abe5b64e45e57cbd1d2687b1""><code>a14ea74</code></a> tests: fix nbval</li>; <li><a href=""https://github.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11587:5084,test,tests,5084,https://hail.is,https://github.com/hail-is/hail/pull/11587,1,['test'],['tests']
Testability,"ombiner (described in more detail below); * run: until `finished`, calls `save` then `step` followed by one last `save`. The public api is present in 2 free functions:. * new_combiner: public VariantDatasetCombiner constructor; * load_combiner. if `new_combiner` is not given a `save_path`, it will compute one based on; the SHA-256 of it's inputs. If the file at `save_path` is present, and; a valid `VariantDatasetCombiner`, it will load it and use it, unless the; `force` argument to `new_combiner` is True. This way, every combiner has; a `save_path`. ## The `step` algorithm. If there are any gvcf paths still uncombined, they are combined; `branch_factor` at a time, using `batch_size` parallel matrix table; writes to achive good parallelism. If there is only one merged vds, and; no vds arguments remaining to be combined it is written to; `output_path`. Otherwise the new vds paths are appended to the vds list; and the vds list is sorted by number of samples. The vds paths are always kept sorted by samples and new items are only; ever added to the end of the list and then sorted. Since python's sort; function is stable, this will produce a stable output for a given set of; inputs and batch size. In order to preserve the gvcf sample ordering; from the paths, we work from the start of the gvcf list. Once all the gvcfs are combined, we combine the variant datasets in; reverse order (smallest number of samples to largest number of samples); inserting the new vds into the same sorted order until there are no; remaining input vdses, writing it to `output_path`. ## Not Implemented Yet. Other stepping and planning strategies may be preferable in the future,; for example we could work the vds arguments into a list of lists based; on the log base `branch_factor` of the number of samples to create; a tiered list that is processed in order rather than reinserting new; datasets into a sorted list. This may create opportunites for large; scale parallelism on a future service backend.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10892:2702,log,log,2702,https://hail.is,https://github.com/hail-is/hail/pull/10892,1,['log'],['log']
Testability,ome/bin/java and /Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/libinstrument.dylib. One of the two will be used. Which one is undefined. Gradle suite > Gradle test > org.broadinstitute.hail.annotations.AnnotationsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.io.compress.BGzipCodecSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.CallSuite.testCall PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportPlinkSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrig PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.Leve,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:1382,test,test,1382,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,1,['test'],['test']
Testability,"ommit/398c14c05c6448b380ac35c6095598299c5e23c5""><code>398c14c</code></a> Update dependencies</li>; <li><a href=""https://github.com/michel-kraemer/gradle-download-task/commit/15cf7eecfbc17d2466143828b9b69494c6cb6f2b""><code>15cf7ee</code></a> Bump up version number to 5.3.1-SNAPSHOT</li>; <li><a href=""https://github.com/michel-kraemer/gradle-download-task/commit/e3c65ffcb49b9c5a33fde5f31fb63043dbf21134""><code>e3c65ff</code></a> Allow extensions to be created from tasks</li>; <li><a href=""https://github.com/michel-kraemer/gradle-download-task/commit/34e2dd41477f18b1ae3d6d5a71dca5449d6cd1e0""><code>34e2dd4</code></a> Downgrade slf4j to fix warning on console about missing slf4j provider</li>; <li><a href=""https://github.com/michel-kraemer/gradle-download-task/commit/b3fa29f9ffb4d4544e13ef84601e371fb2778ddf""><code>b3fa29f</code></a> Revert &quot;Update Apache HttpClient to 5.2.1&quot;</li>; <li><a href=""https://github.com/michel-kraemer/gradle-download-task/commit/01f05e046be0dca18f506723c79e88f208336e71""><code>01f05e0</code></a> Add integration tests for Gradle 6.9.3 and 7.6</li>; <li><a href=""https://github.com/michel-kraemer/gradle-download-task/commit/a998a544908a8b39f713f4526f717fcb328c06eb""><code>a998a54</code></a> Upgrade Gradle to 7.6</li>; <li>Additional commits viewable in <a href=""https://github.com/michel-kraemer/gradle-download-task/compare/5.3.0...5.3.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=de.undercouch.download&package-manager=gradle&previous-version=5.3.0&new-version=5.3.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-auto",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12707:2891,test,tests,2891,https://hail.is,https://github.com/hail-is/hail/pull/12707,1,['test'],['tests']
Testability,"on parser to mark responses without...</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/28335525d1eac015a7e7584137678cbb6ff19397""><code>2833552</code></a> Escape filenames and paths in HTML when generating index pages (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8317"">#8317</a>) (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8319"">#8319</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/ed43040613988fc4666109aca82a5180ff165df5""><code>ed43040</code></a> [PR <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8309"">#8309</a>/c29945a1 backport][3.9] Improve reliability of run_app test (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8315"">#8315</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/ec2be0500e2674eea019c0966a7a905e9b3d6608""><code>ec2be05</code></a> [PR <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8299"">#8299</a>/28d026eb backport][3.9] Create marker for internal tests (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8307"">#8307</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/292d961f4ee2829a1b13fad92444a4fd693fbc87""><code>292d961</code></a> [PR <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8304"">#8304</a>/88c80c14 backport][3.9] Check for backports in CI (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8305"">#8305</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/cebe526b9c34dc3a3da9140409db63014bc4cf19""><code>cebe526</code></a> Fix handling of multipart/form-data (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8280"">#8280</a>) (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8302"">#8302</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/270ae9cf6a9e6159b5e29a950deb6ff7600aebc5""><code>270ae9c</code></a> [PR <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8297"">#8297</a>/d15f07cf backport][3.9] Upgrade to llhttp 9.2",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14477:5267,test,tests,5267,https://hail.is,https://github.com/hail-is/hail/pull/14477,6,['test'],['tests']
Testability,on pod not container. Scheduling will be a bit messed up until this goes in (I had deployed to hopefully speed up the testing).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7326:118,test,testing,118,https://hail.is,https://github.com/hail-is/hail/pull/7326,1,['test'],['testing']
Testability,"on,; 114 dataset['reference_genome'] == reference_genome])]; --> 115 assert len(path) == 1; 116 path = path[0]; 117 if path.startswith('s3://'):. AssertionError: ; ```. I'm a new Hail user and don't have the full context here, but it seems like there are at least three problems:. 1. An assert failed in production code, which indicates either the presence of a bug or an incorrect use of assert (e.g. using assert to check for value errors).; 2. The assert has no corresponding error message, so the user learns that something has gone wrong but can't easily tell what.; 3. The assert is bare. Bare asserts can get optimized out of code in ways that are difficult to foresee in advance, and are generally deprecated in favor of the `if error_condition: raise AssertionError(...)` pattern (see: https://discuss.python.org/t/stop-ignoring-asserts-when-running-in-optimized-mode/13132). **The Big Picture**. The bare assert pattern is used over 3k times in Hail. To be fair, many of these usages occur in test directories, where they're fine. But they also occur in application code, and often in the dangerous form `assert(expr1, expr2)` which will never fail (because a tuple with two falsy elements is truthy in python). These asserts are never actually getting checked. . Fixing all of them would be a heavy lift. One compromise solution might be to add a bare assert rule to the linter (e.g. https://pypi.org/project/flake8-assert-msg/). This would prevent the introduction of further bare asserts to the codebase, and encourage authors to clean up existing bare asserts on files they touch. The `assert` keyword is an unfortunate language wart that makes it very easy for developers to write error-checking code that is itself incorrect. I'd encourage considering the alternate pattern `if error_condition: raise AssertionError(...)` and gradually migrating the codebase off of bare asserts. Thanks for all of your work on Hail!. ### Version. hail 0.2.115-10932c754edb. ### Relevant log output. _",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12952:1826,test,test,1826,https://hail.is,https://github.com/hail-is/hail/issues/12952,1,['test'],['test']
Testability,"on-json-logger/commit/b07b580670c6c4e340c372c73d0e76cdddc8b456""><code>b07b580</code></a> moved release out of test workflow. setup.cfg specifies a proper wheel now</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/4df12f93928bb66b053d8693e5cd60f38588069a""><code>4df12f9</code></a> removing missed python3.4 support data</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/7c40f4abf46ee6f3b5f4290f12ff3e9872ff9892""><code>7c40f4a</code></a> removed typo around build badge</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/0837da313ea796e353b40b574e3f82591a698caf""><code>0837da3</code></a> added env to git ignore</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/c58d7d4660780e3d4872189f9889200917a8930f""><code>c58d7d4</code></a> manifest will now include readme for setup.py long description. tox and</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/03e831488ce55e4aaf886806b2c66082fb8c4027""><code>03e8314</code></a> Removed references to travis</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/e8a8a20e09d66bcce41010f29b37107eafae6ba4""><code>e8a8a20</code></a> fixed python version mapping and typo in tox name</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/d02050343b58d4585145b5f19b0499d01ef9a1d8""><code>d020503</code></a> initial conversion from travis</li>; <li>Additional commits viewable in <a href=""https://github.com/madzak/python-json-logger/compare/v0.1.11...v2.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=python-json-logger&package-manager=pip&previous-version=0.1.11&new-version=2.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11467:4015,log,logger,4015,https://hail.is,https://github.com/hail-is/hail/pull/11467,1,['log'],['logger']
Testability,on.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	a,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2026,Test,TestUtils,2026,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604,1,['Test'],['TestUtils']
Testability,"on/hailtop/config/deploy_config.py; index 627d1792c..7d2eeeca0 100644; --- a/hail/python/hailtop/config/deploy_config.py; +++ b/hail/python/hailtop/config/deploy_config.py; @@ -4,6 +4,8 @@ import logging; from aiohttp import web; ; log = logging.getLogger('gear'); +HAIL_CONFIG_DIR = os.path.join(os.environ.get('XDG_CONFIG_HOME', os.path.expanduser('~/.config')),; + 'hail'); ; ; class DeployConfig:; @@ -15,7 +17,7 @@ class DeployConfig:; def from_config_file(config_file=None):; if not config_file:; config_file = os.environ.get(; - 'HAIL_DEPLOY_CONFIG_FILE', os.path.expanduser('~/.hail/deploy-config.json')); + 'HAIL_DEPLOY_CONFIG_FILE', os.path.join(HAIL_CONFIG_DIR, 'deploy-config.json')); if os.path.isfile(config_file):; with open(config_file, 'r') as f:; config = json.loads(f.read()); diff --git a/hail/python/hailtop/hailctl/auth/login.py b/hail/python/hailtop/hailctl/auth/login.py; index 343de7bda..e740f7b3d 100644; --- a/hail/python/hailtop/hailctl/auth/login.py; +++ b/hail/python/hailtop/hailctl/auth/login.py; @@ -5,7 +5,7 @@ import webbrowser; import aiohttp; from aiohttp import web; ; -from hailtop.config import get_deploy_config; +from hailtop.config import HAIL_CONFIG_DIR, get_deploy_config; from hailtop.auth import get_tokens, namespace_auth_headers; ; ; @@ -77,9 +77,8 @@ Opening in your browser.; ; tokens = get_tokens(); tokens[auth_ns] = token; - dot_hail_dir = os.path.expanduser('~/.hail'); - if not os.path.exists(dot_hail_dir):; - os.mkdir(dot_hail_dir, mode=0o700); + if not os.path.exists(HAIL_CONFIG_DIR):; + os.makedirs(HAIL_CONFIG_DIR, mode=0o700); tokens.write(); ; if auth_ns == 'default':; diff --git a/hail/python/hailtop/hailctl/dev/config/cli.py b/hail/python/hailtop/hailctl/dev/config/cli.py; index c032e7731..d293b07cf 100644; --- a/hail/python/hailtop/hailctl/dev/config/cli.py; +++ b/hail/python/hailtop/hailctl/dev/config/cli.py; @@ -1,6 +1,6 @@; import os; import json; -from hailtop.config import get_deploy_config; +from hailtop.config import HA",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7125#issuecomment-535602902:3570,log,login,3570,https://hail.is,https://github.com/hail-is/hail/pull/7125#issuecomment-535602902,1,['log'],['login']
Testability,"onError at IndexSuite.scala:42; Running test: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFunctions PASSED; Running test: Test method testNativeBuild(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeCallSpeed PASSED; Running test: Test method testNativeGlobal(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeGlobal PASSED; Running test: Test method testNativePtr(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativePtr PASSED; Running test: Test method testNativeUpcall(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeUpcall PASSED; Running test: Test method testObjectArray(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testObjectArray PASSED; Running test: Test method testShuffleAndJoinDoesntMemoryLeak(is.hail.expr.ir.TableIRSuite). Gradle suite > Gradle test > is.hail.expr.ir.TableIRSuite.testShuffleAndJoinDoesntMemoryLeak PASSED; Running test: Test method testBufferWriteReadDoubles(is.hail.annotations.UnsafeSuite). Gradle suite > Gradle test > is.hail.annotations.UnsafeSuite.testBufferWriteReadDoubles PASSED; Running test: Test method testCodec(is.hail.annotations.UnsafeSuite); #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007fe4a85738ec, pid=23790, tid=0x00007fe48cdfa700; #; # JRE version: OpenJDK Runtime Environment (8.0_181-b13) (build 1.8.0_181-8u181-b13-0ubuntu0.18.04.1-b13); # Java VM: ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:8909,Log,Logging,8909,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['Log'],['Logging']
Testability,onError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running ,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1951,test,testQueryByKey,1951,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['testQueryByKey']
Testability,"onda/miniconda3/lib/python3.10/site-packages/jinja2/__init__.py); May 16 14:17:07 mw116-m python[8309]: [D 14:17:07.045 NotebookApp] Using contents: services/contents; May 16 14:17:07 mw116-m python[8309]: [D 14:17:07.045 NotebookApp] Using contents: services/contents; May 16 14:17:07 mw116-m python[8309]: [E 14:17:07.046 NotebookApp] {; May 16 14:17:07 mw116-m python[8309]: ""Host"": ""localhost:8123"",; May 16 14:17:07 mw116-m python[8309]: ""Connection"": ""keep-alive"",; May 16 14:17:07 mw116-m python[8309]: ""Sec-Ch-Ua"": ""\""Google Chrome\"";v=\""113\"", \""Chromium\"";v=\""113\"", \""Not-A.Brand\"";v=\""24\"""",; May 16 14:17:07 mw116-m python[8309]: ""Sec-Ch-Ua-Mobile"": ""?0"",; May 16 14:17:07 mw116-m python[8309]: ""Sec-Ch-Ua-Platform"": ""\""macOS\"""",; May 16 14:17:07 mw116-m python[8309]: ""Upgrade-Insecure-Requests"": ""1"",; May 16 14:17:07 mw116-m python[8309]: ""User-Agent"": ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"",; May 16 14:17:07 mw116-m python[8309]: ""Accept"": ""text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"",; May 16 14:17:07 mw116-m python[8309]: ""Sec-Fetch-Site"": ""same-origin"",; May 16 14:17:07 mw116-m python[8309]: ""Sec-Fetch-Mode"": ""navigate"",; May 16 14:17:07 mw116-m python[8309]: ""Sec-Fetch-User"": ""?1"",; May 16 14:17:07 mw116-m python[8309]: ""Sec-Fetch-Dest"": ""document"",; May 16 14:17:07 mw116-m python[8309]: ""Referer"": ""http://localhost:8123/tree/gnomad-mwilson/v4"",; May 16 14:17:07 mw116-m python[8309]: ""Accept-Encoding"": ""gzip, deflate, br"",; May 16 14:17:07 mw116-m python[8309]: ""Accept-Language"": ""en-US,en;q=0.9"",; May 16 14:17:07 mw116-m python[8309]: ""Cookie"": ""_xsrf=2|9545df9a|e2e3b7e28eb05f2672217e412f31369d|1684246458""; May 16 14:17:07 mw116-m python[8309]: }; ```. [notebook.log](https://github.com/hail-is/hail/files/11488849/notebook.log). ### Version. 0.2.116. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13059:5866,log,log,5866,https://hail.is,https://github.com/hail-is/hail/issues/13059,3,['log'],['log']
Testability,"one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyOTUzNDFmZi1lMjQ4LTRiOTItYTY1Yy1kYjJiZWQ3ZDQxMGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjI5NTM0MWZmLWUyNDgtNGI5Mi1hNjVjLWRiMmJlZDdkNDEwZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""295341ff-e248-4b92-a65c-db2bed7d410d"",""prPublicId"":""295341ff-e248-4b92-a65c-db2bed7d410d"",""dependencies"":[{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.2""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-TORNADO-5537286""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Open Redirect](https://learn.snyk.io/lessons/open-redirect/python/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13066:2498,log,logic,2498,https://hail.is,https://github.com/hail-is/hail/pull/13066,1,['log'],['logic']
Testability,"one more:; ```; File ""/home/hail/.conda/envs/hail/lib/python3.6/doctest.py"", line 1330, in __run; compileflags, 1), test.globs); File ""<doctest genetics.rst[21]>"", line 1; female_pheno = hl.case(); ^; SyntaxError: multiple statements found while compiling a single statement; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4458#issuecomment-425258445:116,test,test,116,https://hail.is,https://github.com/hail-is/hail/pull/4458#issuecomment-425258445,1,['test'],['test']
Testability,"one-any.whl|||PKGS=aiohttp|bokeh>1.1,<1.3|decorator<5|gcsfs==0.2.1|hurry.filesize==0.9|ipykernel<5|nest_asyncio|numpy<2|pandas>0.22,<0.24|parsimonious<0.9|PyJWT|python-json-logger==0.1.11|requests>=2.21.0,<2.21.1|scipy>1.2,<1.4|tabulate==0.8.3|slackclient==2.0.0|websocket-client|sklearn|tabulate|statsmodels|scikit-learn|hdbscan|matplotlib', '--master-machine-type=n1-highmem-8', '--master-boot-disk-size=100GB', '--num-master-local-ssds=0', '--num-preemptible-workers=0', '--num-worker-local-ssds=0', '--num-workers=2', '--preemptible-worker-boot-disk-size=40GB', '--worker-boot-disk-size=40', '--worker-machine-type=n1-standard-8', '--zone=us-central1-b', '--initialization-action-timeout=20m', '--labels=creator=weisburd_broadinstitute_org', '--max-idle=12h']' returned non-zero exit status 1.; ```. Then looking at the error log; ```; $ gsutil cat gs://dataproc-d919bddb-bde3-4138-bbe1-e068dfa1e550-us/google-cloud-dataproc-metainfo/3ec45dcc-d901-4777-930c-23046e64a97d/bw2-m/dataproc-initialization-script-0_output; pip packages are ['setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupyter', 'tornado<6', 'lxml<5', 'google-cloud==0.32.0', 'ipython<7', 'jgscm<0.2', 'jupyter-spark', 'aiohttp', 'bokeh>1.1,<1.3', 'decorator<5', 'gcsfs==0.2.1', 'hurry.filesize==0.9', 'ipykernel<5', 'nest_asyncio', 'numpy<2', 'pandas>0.22,<0.24', 'parsimonious<0.9', 'PyJWT', 'python-json-logger==0.1.11', 'requests>=2.21.0,<2.21.1', 'scipy>1.2,<1.4', 'tabulate==0.8.3', 'slackclient==2.0.0', 'websocket-client', 'sklearn', 'tabulate', 'statsmodels', 'scikit-learn', 'hdbscan', 'matplotlib']; b""Double requirement given: tabulate (already in tabulate==0.8.3, name='tabulate')\nYou are using pip version 10.0.1, however version 19.1.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n""; Traceback (most recent call last):; File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 16, in ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:4846,log,log,4846,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['log'],['log']
Testability,"onfiguration, Hail first checks explicit arguments, then `hailctl config`, then spark-defaults.conf.; warnings.warn(; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/Users/dking/miniconda3/lib/python3.10/site-packages/pyspark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Running on Apache Spark version 3.3.3; SparkUI available at http://192.168.1.142:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.125-c4e2880b3279; LOGGING: writing to /Users/dking/projects/hail/hail/hail-20231026-0957-0.2.125-c4e2880b3279.log; --------------------------------------------------------------------------- / 1]; FatalError Traceback (most recent call last); Cell In[1], line 2; 1 import hail as hl; ----> 2 hl.import_vcf('gs://danking/chr*.vcf').count(). File ~/miniconda3/lib/python3.10/site-packages/hail/matrixtable.py:2631, in MatrixTable.count(self); 2618 """"""Count the number of rows and columns in the matrix.; 2619 ; 2620 Examples; (...); 2628 Number of rows, number of cols.; 2629 """"""; 2630 count_ir = ir.MatrixCount(self._mir); -> 2631 return Env.backend().execute(count_ir). File ~/miniconda3/lib/python3.10/site-packages/hail/backend/backend.py:180, in Backend.execute(self, ir, timed); 178 result, timings = self._rpc(ActionTag.EXECUTE, payload); 179 except FatalError as e:; --> 180 raise e.maybe_user_error(ir) from None; 181 if ir.typ == tvoid:; 182 value = None. File ~/miniconda3/lib/python3.10/site-packages/hail/backend/backend.py:178, in Bac",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13915:2490,LOG,LOGGING,2490,https://hail.is,https://github.com/hail-is/hail/issues/13915,1,['LOG'],['LOGGING']
Testability,"onment needs to be a function `Code[Region] => SizedStream`. For the most part, this PR leaves the `eltRegion`s unused. In the new semantics, explained below, it is still correct for a producer to only use the `outerRegion`, and for a consumer to pass the same region for both `outerRegion` and `eltRegion`. This lets us migrate to the new memory management one node at a time. When I talk about correctness, I mean that: no pointer is used after the region it points into has been freed; and, every region which is created is eventually freed. When reasoning about correctness, I consider `r.clear()` equivalent to `r.invalidate(); r.getNewRegion()`. As a demonstration of how this should work, this PR does convert `EmitStream.{toArray, write}` to use `eltRegion` correctly, which are used in the consumer nodes `ToArray`, `ArraySort`, `ToSet`, `ToDict`, and `GroupByKey`. Going forward, the plan is to convert the rest of the consumer and producer nodes, before converting the transformer nodes (which both consume and produce streams), as correctness can only be tested on pipelines in which all nodes have been converted. ### Semantics. A stream producer is passed two regions from its consumer: `outerRegion` and `eltRegion`. The node being emitted does not own either region, so may not free/clear them. The only thing a producer may do with either region is to put data in them, by writing directly to them or by giving/sharing ownership of a producer-owned region to them. Consumers' contract:; * The lifetime of `outerRegion` must contain the lifetime of the producer stream, i.e. `outerRegion` must be valid before the producer's `setup0` is called, and must still be valid when the producer's `close0` is called. Thus a producer may use `outerRegion` to store state that persists between elements, or it may use a region it owns itself.; * When the producer's `pull` is called, `eltRegion` must be valid (it does not need to be valid for setup/close). Producers' contract:; * When the con",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9106:1418,test,tested,1418,https://hail.is,https://github.com/hail-is/hail/pull/9106,1,['test'],['tested']
Testability,"ons.UnsafeSuite.testBufferWriteReadDoubles PASSED; Running test: Test method testCodec(is.hail.annotations.UnsafeSuite); #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007fe4a85738ec, pid=23790, tid=0x00007fe48cdfa700; #; # JRE version: OpenJDK Runtime Environment (8.0_181-b13) (build 1.8.0_181-8u181-b13-0ubuntu0.18.04.1-b13); # Java VM: OpenJDK 64-Bit Server VM (25.181-b13 mixed mode linux-amd64 compressed oops); # Problematic frame:; # J 9008 C1 is.hail.annotations.UnsafeRow$.readBinary(Lis/hail/annotations/Region;J)[B (39 bytes) @ 0x00007fe4a85738ec [0x00007fe4a8573600+0x2ec]; #; # Core dump written. Default location: /home/BROAD.MIT.EDU/cvittal/src/hail/hail/core or core.23790 (max size 9223372036854775 kB). To ensure a full core dump, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /home/BROAD.MIT.EDU/cvittal/src/hail/hail/hs_err_pid23790.log; Compiled method (c1) 33969 8500 2 is.hail.annotations.UnsafeRow$::readLocus (78 bytes); total in heap [0x00007fe4a8b81810,0x00007fe4a8b83430] = 7200; relocation [0x00007fe4a8b81938,0x00007fe4a8b81a98] = 352; main code [0x00007fe4a8b81aa0,0x00007fe4a8b82100] = 1632; stub code [0x00007fe4a8b82100,0x00007fe4a8b822b8] = 440; oops [0x00007fe4a8b822b8,0x00007fe4a8b822c0] = 8; metadata [0x00007fe4a8b822c0,0x00007fe4a8b82338] = 120; scopes data [0x00007fe4a8b82338,0x00007fe4a8b82f30] = 3064; scopes pcs [0x00007fe4a8b82f30,0x00007fe4a8b83340] = 1040; dependencies [0x00007fe4a8b83340,0x00007fe4a8b83348] = 8; nul chk table [0x00007fe4a8b83348,0x00007fe4a8b83430] = 232; #; FATAL: caught signal 6 SIGABRT; # If you would like to submit a bug report, please visit:; # http://bugreport.sun.com/bugreport/; #; /tmp/libhail8122447512081932366.so(+0x18f5f)[0x7fe3a7bf0f5f]; /lib/x86_64-linux-gnu/libc.so.6(+0x3ef20)[0x7fe4be507f20]; /lib/x86_64-linux-gnu/libc.so.6(gsignal+0xc7)[0x7fe4be507e97]; /lib/x86_64-linux-gnu/libc.so",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:10494,log,log,10494,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['log'],['log']
Testability,ontext$.apply(HailContext.scala:164) sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) java.lang.reflect.Method.invoke(Method.java:498) py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244) py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357) py4j.Gateway.invoke(Gateway.java:280) py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132) py4j.commands.CallCommand.execute(CallCommand.java:79) py4j.GatewayConnection.run(GatewayConnection.java:214) java.lang.Thread.run(Thread.java:745) at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$2.apply(SparkContext.scala:2278) at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$2.apply(SparkContext.scala:2274) at scala.Option.foreach(Option.scala:257) at org.apache.spark.SparkContext$.assertNoOtherContextIsRunning(SparkContext.scala:2274) at org.apache.spark.SparkContext$.markPartiallyConstructed(SparkContext.scala:2353) at org.apache.spark.SparkContext.<init>(SparkContext.scala:85) at is.hail.HailContext$.configureAndCreateSparkContext(HailContext.scala:84) at is.hail.HailContext$.apply(HailContext.scala:164) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244) at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357) at py4j.Gateway.invoke(Gateway.java:280) at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132) at py4j.commands.CallCommand.execute(CallCommand.java:79) at py4j.GatewayConnection.run(GatewayConnection.java:214) at java.lang.Thread.run(Thread.java:745). ,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1525:6111,assert,assertNoOtherContextIsRunning,6111,https://hail.is,https://github.com/hail-is/hail/issues/1525,1,['assert'],['assertNoOtherContextIsRunning']
Testability,ontextRDD.collect(ContextRDD.scala:132); at is.hail.rvd.OrderedRVD$.getPartitionKeyInfo(OrderedRVD.scala:541); at is.hail.rvd.OrderedRVD.coalesce(OrderedRVD.scala:200); at is.hail.variant.MatrixTable.coalesce(MatrixTable.scala:2073); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); at py4j.Gateway.invoke(Gateway.java:280); at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); at py4j.commands.CallCommand.execute(CallCommand.java:79); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:748)java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.Region.loadAddress(Region.scala:63); at is.hail.expr.types.TBaseStruct.loadField(TBaseStruct.scala:215); at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:335); at is.hail.annotations.RegionValueBuilder.addField(RegionValueBuilder.scala:341); at is.hail.annotations.WritableRegionValue.setSelect(WritableRegionValue.scala:38); at is.hail.rvd.OrderedRVD$$anonfun$getKeys$1$$anonfun$apply$9.apply(OrderedRVD.scala:511); at is.hail.rvd.OrderedRVD$$anonfun$getKeys$1$$anonfun$apply$9.apply(OrderedRVD.scala:510); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); at is.hail.rvd.OrderedRVPartitionInfo$.apply(OrderedRVPartitionInfo.scala:30); at is.hail.rvd.OrderedRVD$$anonfun$10.apply(OrderedRVD.scala:536); at is.hail.rvd.OrderedRVD$$anonfun$10.apply(OrderedRVD.scala:534); at is.hail.sparkextras.ContextRDD$$anonfun$cmapPartitionsWithIndex$1$$anonfun$appl,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3507:8440,assert,assert,8440,https://hail.is,https://github.com/hail-is/hail/issues/3507,1,['assert'],['assert']
Testability,"ontrib-katex's changelog</a>.</em></p>; <blockquote>; <h2>Version 0.8.6 (2021-05-27)</h2>; <ul>; <li>Fixed: allow to work with Sphinx&gt;=4.0.0</li>; </ul>; <h2>Version 0.8.5 (2021-05-26)</h2>; <ul>; <li>Fixed: remove extra space after inline math when using pre-rendering</li>; </ul>; <h2>Version 0.8.4 (2021-05-18)</h2>; <ul>; <li>Changed: increase top padding of equations by 2px</li>; </ul>; <h2>Version 0.8.3 (2021-05-18)</h2>; <ul>; <li>Fixed: building of documentation on RTD</li>; </ul>; <h2>Version 0.8.2 (2021-05-18)</h2>; <ul>; <li>Fixed: PyPI package version number</li>; </ul>; <h2>Version 0.8.1 (2021-05-18)</h2>; <ul>; <li>Fixed: PyPI package had wrong version number</li>; </ul>; <h2>Version 0.8.0 (2021-05-18)</h2>; <ul>; <li>Added: support for Python 3.9</li>; <li>Added: support for Sphinx&gt;=4.0.0</li>; <li>Added: tests for Windows and macOS</li>; <li>Changed: switch to KaTeX 0.13.11</li>; <li>Changed: switched CI tests from Travis to Github Actions</li>; <li>Changed: running sphinx will now fail in pre-render mode; if KaTeX fails</li>; <li>Removed: support for Python 2.7, 3.4, 3.5</li>; </ul>; <p>Version 0.7.2 (2021-04-28)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/hagenw/sphinxcontrib-katex/commit/ce89a95b3b330a19ad4562b87aacc69ddb6742f2""><code>ce89a95</code></a> Release 0.8.6</li>; <li><a href=""https://github.com/hagenw/sphinxcontrib-katex/commit/c230f938a2d3b5913004d004613f67b69ebaf526""><code>c230f93</code></a> Allow sphinx&gt;=4.0.0 in setup.cfg (<a href=""https://github-redirect.dependabot.com/hagenw/sphinxcontrib-katex/issues/64"">#64</a>)</li>; <li><a href=""https://github.com/hagenw/sphinxcontrib-katex/commit/c6456022c32c540ffc5db6c684d8f8bf70a966f3""><code>c645602</code></a> Release 0.8.5</li>; <li><a href=""https://github.com/hagenw/sphinxcontrib-katex/commit/598efcf53499f2d0a58cccc1942120dee07de3f1""><code>598efcf</code></a> Remove unin",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11458:3190,test,tests,3190,https://hail.is,https://github.com/hail-is/hail/pull/11458,2,['test'],['tests']
Testability,"oops---there's also a couple of logging methods in here that aren't used, but are handy to have for tests/debugging. Can move onto a separate PR if desired, but they're pretty small/straightforward.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6644#issuecomment-511512794:32,log,logging,32,https://hail.is,https://github.com/hail-is/hail/pull/6644#issuecomment-511512794,2,"['log', 'test']","['logging', 'tests']"
Testability,oops. thanks for preempting the test failure!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4380#issuecomment-423268427:32,test,test,32,https://hail.is,https://github.com/hail-is/hail/pull/4380#issuecomment-423268427,1,['test'],['test']
Testability,"oot@**\* bin]# ./hail -h; usage: hail [global options] <cmd1> [cmd1 args]; [<cmd2> [cmd2 args] ... <cmdN> [cmdN args]]. But ,When excuting “gradle check” and ""gradle coverage"", encounter ""100 tests completed, 3 failed :test FAILED"" ""Build FAILED"" , how to fix ? Thanks . [root@**\* hail]# gradle check; Using a seed of [1] for testing.; Build file '*****/hail/build.gradle': line 188; useAnt has been deprecated and is scheduled to be removed in Gradle 3.0. The Ant-Based Scala compiler is deprecated, please see https://docs.gradle.org/current/userguide/scala_plugin.html.; :compileJava UP-TO-DATE; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :test. ........... FAILED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportPlinkSuite.testBiallelic FAILED; java.io.FileNotFoundException at ExportPlinkSuite.scala:17; Running test: Test method test(org.broadinstitute.hail.methods.ExportSuite); ........... FAILED; Gradle suite > Gradle test > org.broadinstitute.hail.driver.GRMSuite.test FAILED; java.io.FileNotFoundException at GRMSuite.scala:20; Running test: Test method testGenotypeStream(org.broadinstitute.hail.variant.GenotypeStreamSuite); ........... FAILED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ImputeSexSuite.testImputeSexPlinkVersion FAILED; java.io.FileNotFoundException at ImputeSexSuite.scala:17; Running test: Test method test(org.broadinstitute.hail.variant.IntervalListSuite). ..........; 100 tests completed, 3 failed; :test FAILED. FAILURE: Build failed with an exception.; - What went wrong:; Execution failed for task ':test'.; ; > There were failing tests. See the report at: file:///****/hail/build/reports/tests/index.html; - Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. BUILD FAILED. Total time: 9 mins 25.533 secs",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/457:1180,test,test,1180,https://hail.is,https://github.com/hail-is/hail/issues/457,16,"['Test', 'log', 'test']","['Test', 'log', 'test', 'testGenotypeStream', 'testImputeSexPlinkVersion', 'tests']"
Testability,op/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/tmp '-Dspark.driver.port=41843' '-Dspark.rpc.message.maxSize=512' -Dspark.yarn.app.container.log.dir=/var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102 -XX:OnOutOfMemoryError='kill %p' org.apache.spark.executor.CoarseGrainedExecutorBackend --driver-url spark://CoarseGrainedScheduler@10.128.0.4:41843 --executor-id 99 --hostname exomes-sw-pxt3.c.broad-mpg-gnomad.internal --cores 4 --app-id application_1519994715701_0003 --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/__app__.jar --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/hail.jar > /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stdout 2> /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stderr. 	at org.apache.hadoop.util.Shell.runCommand(Shell.java:972); 	at org.apache.hadoop.util.Shell.run(Shell.java:869); 	at org.apache.hadoop.util.Shell$ShellCommandExecutor.execute(Shell.java:1170); 	at org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor.launchContainer(DefaultContainerExecutor.java:236); 	at org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch.call(ContainerLaunch.java:305); 	at org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch.call(ContainerLaunch.java:84); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:748). Container exited with a non-zero exit code 134; ```; Whe,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3053:2721,log,log,2721,https://hail.is,https://github.com/hail-is/hail/issues/3053,2,['log'],['log']
Testability,op/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/tmp '-Dspark.driver.port=41843' '-Dspark.rpc.message.maxSize=512' -Dspark.yarn.app.container.log.dir=/var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102 -XX:OnOutOfMemoryError='kill %p' org.apache.spark.executor.CoarseGrainedExecutorBackend --driver-url spark://CoarseGrainedScheduler@10.128.0.4:41843 --executor-id 99 --hostname exomes-sw-pxt3.c.broad-mpg-gnomad.internal --cores 4 --app-id application_1519994715701_0003 --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/__app__.jar --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/hail.jar > /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stdout 2> /var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102/stderr. Stack trace: ExitCodeException exitCode=134: /bin/bash: line 1: 6739 Aborted /usr/lib/jvm/java-8-openjdk-amd64/bin/java -server -Xmx11171m '-Xss4M' -Djava.io.tmpdir=/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003_01_000102/tmp '-Dspark.driver.port=41843' '-Dspark.rpc.message.maxSize=512' -Dspark.yarn.app.container.log.dir=/var/log/hadoop-yarn/userlogs/application_1519994715701_0003/container_1519994715701_0003_01_000102 -XX:OnOutOfMemoryError='kill %p' org.apache.spark.executor.CoarseGrainedExecutorBackend --driver-url spark://CoarseGrainedScheduler@10.128.0.4:41843 --executor-id 99 --hostname exomes-sw-pxt3.c.broad-mpg-gnomad.internal --cores 4 --app-id application_1519994715701_0003 --user-class-path file:/hadoop/yarn/nm-local-dir/usercache/root/appcache/application_1519994715701_0003/container_1519994715701_0003,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3053:1438,log,log,1438,https://hail.is,https://github.com/hail-is/hail/issues/3053,2,['log'],['log']
Testability,open issue at k8s: https://github.com/kubernetes-client/python-base/issues/57. Failing log for https://github.com/hail-is/hail/pull/5893: https://storage.googleapis.com/hail-ci-0-1/ci/734812b4147dfa7381ac4ff60bac1ead21a58af0/117c365c320fd4ae1f1ea06c3fcbd668cf318fc2/job.log (search for kubernetes.client.rest.ApiException). Definitely looks like k8s hiccuped based on some bad behavior in batch at this time as well. See attached logs; [ci.log](https://github.com/hail-is/hail/files/3096383/ci.log); [batch.log](https://github.com/hail-is/hail/files/3096386/batch.log),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5911:87,log,log,87,https://hail.is,https://github.com/hail-is/hail/issues/5911,7,['log'],"['log', 'logs']"
Testability,"optimal order. This is advantageous for a couple of reasons:; - We want to list newer batches first; - For this query, the `batches` table has more applicables indexes; - We want the variable to order by to be in the primary key of the first; table so we can read the index in reverse. Before and after timings, collected by running the query 5 times, then using; profiles gathered by MySQL.; ```; +-------+---------------------------------------------------*; | query | description | ; +-------+---------------------------------------------------+; | 0 | All batches accessible to user `ci` |; | 1 | All batches accessible to user `ci` owned by `ci` |; +-------+---------------------------------------------------*. +-------+--------+--------------------------------------------------------+------------+------------+; | query | branch | timings | mean | stdev | ; +-------+--------+--------------------------------------------------------+------------+------------+; | 0 | main | 0.05894400,0.05207850,0.07067875,0.06281800,0.060250 | 0.06095385 | 0.00602255 |; | 1 | main | 14.1106150,12.2619323,13.8442850,12.0749633,14.0297822 | 13.2643156 | 0.90087263 |; +-------+--------+--------------------------------------------------------+------------+------------+; | 0 | PR | 0.04717375,0.04974350,0.04312150,0.04070850,0.04193650 | 0.04453675 | 0.00339069 |; | 1 | PR | 0.04423925,0.03967550,0.03935425,0.04056875,0.05286850 | 0.04334125 | 0.00507140 |; +-------+--------+--------------------------------------------------------+------------+------------+; ```. I'm hopeful that this won't introduce regressions for most use cases. While I; haven't benchmarked other queries, the MySQL client does feel more responsive; for a wider array of users. One notable exception is for the user `dking` who ; owns 3.7x more batches than has access to, of which all have been deleted. I; don't think this is a common enough use case to make this query even more; complicated than it already is. Resolves #14599",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14649:2785,benchmark,benchmarked,2785,https://hail.is,https://github.com/hail-is/hail/pull/14649,1,['benchmark'],['benchmarked']
Testability,option to load just a bit of a file for testing pipelines,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1719:40,test,testing,40,https://hail.is,https://github.com/hail-is/hail/issues/1719,1,['test'],['testing']
Testability,"options, see the github for the wrapper script [here](https://github.com/lefou/millw). To verify that it's working, and download the actual mill jar, run `./millw --version` (or `mill --version` if you put it on your path) from the `hail/` subdirectory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.fix` runs scalafix on all sources in all modules. `mill __.fix --check` only checks for rule failures (we run this in ci). You can",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1392,test,tests,1392,https://hail.is,https://github.com/hail-is/hail/pull/14147,1,['test'],['tests']
Testability,"or Traceback (most recent call last); Input In [2], in <cell line: 6>(); 3 sc = spark._sc; 5 import hail as hl; ----> 6 hl.init(sc=sc). File <decorator-gen-1703>:2, in init(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, backend, driver_cores, driver_memory). File ~/miniforge3/envs/hail/lib/python3.9/site-packages/hail/typecheck/check.py:577, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 574 @decorator; 575 def wrapper(__original_func, *args, **kwargs):; 576 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 577 return __original_func(*args_, **kwargs_). File ~/miniforge3/envs/hail/lib/python3.9/site-packages/hail/context.py:312, in init(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, backend, driver_cores, driver_memory); 299 return asyncio.get_event_loop().run_until_complete(init_batch(; 300 log=log,; 301 quiet=quiet,; (...); 309 name_prefix=app_name; 310 )); 311 if backend == 'spark':; --> 312 return init_spark(; 313 app_name=app_name,; 314 master=master,; 315 local=local,; 316 min_block_size=min_block_size,; 317 branching_factor=branching_factor,; 318 spark_conf=spark_conf,; 319 _optimizer_iterations=_optimizer_iterations,; 320 log=log,; 321 quiet=quiet,; 322 append=append,; 323 tmp_dir=tmp_dir,; 324 local_tmpdir=local_tmpdir,; 325 default_reference=default_reference,; 326 global_seed=global_seed,; 327 skip_logging_configuration=skip_logging_configuration; 328 ); 329 if backend == 'local':; 330 return init_local(; 331 log=log,; 332 quiet=quiet,; (...); 337 skip_logging_configuration=skip_logging_configuration; 338 ). File <decorator-gen-1705>:2, in init_spark(sc, app_name, maste",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/11827:3007,log,log,3007,https://hail.is,https://github.com/hail-is/hail/issues/11827,1,['log'],['log']
Testability,"or asyncio'</h2>; <p><a href=""https://pypi.python.org/pypi/pytest-asyncio""><img src=""https://img.shields.io/pypi/v/pytest-asyncio.svg"" alt=""image"" /></a></p>; <p><a href=""https://github.com/pytest-dev/pytest-asyncio/actions?workflow=CI""><img src=""https://github.com/pytest-dev/pytest-asyncio/workflows/CI/badge.svg"" alt=""image"" /></a></p>; <p><a href=""https://codecov.io/gh/pytest-dev/pytest-asyncio""><img src=""https://codecov.io/gh/pytest-dev/pytest-asyncio/branch/master/graph/badge.svg"" alt=""image"" /></a></p>; <p><a href=""https://github.com/pytest-dev/pytest-asyncio""><img src=""https://img.shields.io/pypi/pyversions/pytest-asyncio.svg"" alt=""Supported Python versions"" /></a></p>; <p><a href=""https://github.com/ambv/black""><img src=""https://img.shields.io/badge/code%20style-black-000000.svg"" alt=""image"" /></a></p>; <p>pytest-asyncio is an Apache2 licensed library, written in Python, for; testing asyncio code with pytest.</p>; <p>asyncio code is usually written in the form of coroutines, which makes; it slightly more difficult to test using normal testing tools.; pytest-asyncio provides useful fixtures and markers to make testing; easier.</p>; <pre lang=""{.sourceCode"" data-meta="".python}""><code>@pytest.mark.asyncio; async def test_some_asyncio_code():; res = await library.do_something(); assert b&quot;expected result&quot; == res; </code></pre>; <p>pytest-asyncio has been strongly influenced by; <a href=""https://github.com/eugeniy/pytest-tornado"">pytest-tornado</a>.</p>; <h1>Features</h1>; <ul>; <li>fixtures for creating and injecting versions of the asyncio event; loop</li>; <li>fixtures for injecting unused tcp/udp ports</li>; <li>pytest markers for treating tests as asyncio coroutines</li>; <li>easy testing with non-default event loops</li>; <li>support for [async def]{.title-ref} fixtures and async generator; fixtures</li>; <li>support <em>auto</em> mode to handle all async fixtures and tests; automatically by asyncio; provide <em>strict</em> mode if a test suite; shou",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11510:1401,test,test,1401,https://hail.is,https://github.com/hail-is/hail/pull/11510,6,['test'],"['test', 'testing']"
Testability,or(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e)(,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:2031,test,test,2031,https://hail.is,https://github.com/hail-is/hail/issues/4718,3,"['Test', 'test']","['Test', 'test', 'testRangeIterator']"
Testability,"or-java/issues/32140"">#32140</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/fe0a0dad4771fb7c6105cc412cf9cc8d10722e59""><code>fe0a0da</code></a> Updated versions after patch release. (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-java/issues/32231"">#32231</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/4fc24620f120643d18f85aca1bf3ee53daf7f124""><code>4fc2462</code></a> Increment versions for eventgrid releases (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-java/issues/32230"">#32230</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/de48207d7f57407cebfa549c843135dadeeab15c""><code>de48207</code></a> Nikoudsi/batch data plane sdk release for 2022 10 01 API Change (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-java/issues/32162"">#32162</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/11f08f973490521552c80e876f23ecc1bde99ed7""><code>11f08f9</code></a> Update live test (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-java/issues/32229"">#32229</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/82717614085eea8d521bf4b040a3791c9de63aa8""><code>8271761</code></a> Use the new audience field (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-java/issues/32225"">#32225</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/056f7e87e3b6af7c5efb1f18b24c51b7fd8d505c""><code>056f7e8</code></a> Increment versions for eventhubs releases (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-java/issues/32226"">#32226</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/d75b6a864c4428feaee8e6474fd2f074ac1541eb""><code>d75b6a8</code></a> Sync eng/common directory with azure-sdk-tools for PR 4628 (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-java/issues/32105"">#32105</a>)</li>; <li><a href=",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12508:2658,test,test,2658,https://hail.is,https://github.com/hail-is/hail/pull/12508,1,['test'],['test']
Testability,"orce_bgz=True); - meta_ht = meta_ht.key_by(""s""); - meta_ht = meta_ht.filter(hl.is_defined(meta_ht.cram_path) & hl.is_defined(meta_ht.crai_path), keep=True); - meta_ht = meta_ht.repartition(1000); - meta_ht = meta_ht.checkpoint(; - re.sub("".tsv(.b?gz)?"", """", args.sample_metadata_tsv) + "".ht"", overwrite=True, _read_if_exists=True); -; + hl.init(log=""/tmp/select_samples"", default_reference=""GRCh38"", idempotent=True, tmp_dir=args.temp_bucket); vds = gnomad_v4_genotypes.vds(); ; # see https://github.com/broadinstitute/ukbb_qc/pull/227/files; @@ -55,19 +48,8 @@ def main(args):; ; v4_qc_meta_ht = meta.ht(); ; - mt = vds.variant_data; - #mt = vds.variant_data._filter_partitions([41229]); -; - mt = mt.filter_cols(v4_qc_meta_ht[mt.s].release); -; - meta_join = meta_ht[mt.s]; - mt = mt.annotate_cols(; - meta=hl.struct(; - sex_karyotype=meta_join.sex_karyotype,; - cram=meta_join.cram_path,; - crai=meta_join.crai_path,; - ); - ); + #mt = vds.variant_data; + mt = vds.variant_data._filter_partitions([41229]); ; logger.info(""Adjusting samples' sex ploidy""); lgt_expr = hl.if_else(; @@ -88,9 +70,9 @@ def main(args):; logger.info(""Filter variants with at least one non-ref GT""); mt = mt.filter_rows(hl.agg.any(mt.GT.is_non_ref())); ; - #logger.info(f""Saving checkpoint""); - #mt = mt.checkpoint(os.path.join(args.temp_bucket, ""readviz_select_samples_checkpoint1.vds""),; - # overwrite=True, _read_if_exists=True); + logger.info(f""Saving checkpoint""); + mt = mt.checkpoint(""readviz_select_samples_checkpoint1.vds"",; + overwrite=True, _read_if_exists=True); ; def sample_ordering_expr(mt):; """"""For variants that are present in more than 10 samples (or whatever number args.num_samples is set to),; ```. And tried running the bad step:. ```bash; python3 step1__select_samples.py; ```. I was able to get past the checkpoint: ; ```; INFO (Readviz_prep 73): Saving checkpoint; [Stage 0:> (0 + 1) / 1]. 2023-09-01 18:10:29.262 Hail: INFO: wrote matrix table with 11450 rows and 955359 columns in 1 partition to",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13248#issuecomment-1703383664:1865,log,logger,1865,https://hail.is,https://github.com/hail-is/hail/issues/13248#issuecomment-1703383664,1,['log'],['logger']
Testability,"order as listed"">; ##INFO=<ID=AN,Number=1,Type=Integer,Description=""Total number of alleles in called genotypes"">; ##INFO=<ID=BaseQRankSum,Number=1,Type=Float,Description=""Z-score from Wilcoxon rank sum test of Alt Vs. Ref base qualities"">; ##INFO=<ID=DB,Number=0,Type=Flag,Description=""dbSNP Membership"">; ##INFO=<ID=DP,Number=1,Type=Integer,Description=""Approximate read depth; some reads may have been filtered"">; ##INFO=<ID=DS,Number=0,Type=Flag,Description=""Were any of the samples downsampled?"">; ##INFO=<ID=Dels,Number=1,Type=Float,Description=""Fraction of Reads Containing Spanning Deletions"">; ##INFO=<ID=END,Number=1,Type=Integer,Description=""Stop position of the interval"">; ##INFO=<ID=FS,Number=1,Type=Float,Description=""Phred-scaled p-value using Fisher's exact test to detect strand bias"">; ##INFO=<ID=HaplotypeScore,Number=1,Type=Float,Description=""Consistency of the site with at most two segregating haplotypes"">; ##INFO=<ID=InbreedingCoeff,Number=1,Type=Float,Description=""Inbreeding coefficient as estimated from the genotype likelihoods per-sample when compared against the Hardy-Weinberg expectation"">; ##INFO=<ID=MLEAC,Number=A,Type=Integer,Description=""Maximum likelihood expectation (MLE) for the allele counts (not necessarily the same as the AC), for each ALT allele, in the same order as listed"">; ##INFO=<ID=MLEAF,Number=A,Type=Float,Description=""Maximum likelihood expectation (MLE) for the allele frequency (not necessarily the same as the AF), for each ALT allele, in the same order as listed"">; ##INFO=<ID=MQ,Number=1,Type=Float,Description=""RMS Mapping Quality"">; ##INFO=<ID=MQ0,Number=1,Type=Integer,Description=""Total Mapping Quality Zero Reads"">; ##INFO=<ID=MQRankSum,Number=1,Type=Float,Description=""Z-score From Wilcoxon rank sum test of Alt vs. Ref read mapping qualities"">; ##INFO=<ID=OriginalContig,Number=1,Type=String,Description=""The name of the source contig/chromosome prior to liftover."">; ##INFO=<ID=OriginalStart,Number=1,Type=String,Description=""The p",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:7279,test,test,7279,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,2,['test'],['test']
Testability,orderedRVD assertion error,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3959:11,assert,assertion,11,https://hail.is,https://github.com/hail-is/hail/issues/3959,1,['assert'],['assertion']
Testability,"ore: \n${node} of typ: ${node.typ}\nafter: ${streamified} of typ: ${streamified.typ}\n\n""); assert(streamified.typ == node.typ); streamified; }. private def toStream(node: IR): IR = {; node match {; case _: ToStream => node; case _ => {; if(node.typ.isInstanceOf[TArray]) {; ToStream(node); } else {; node; }; }; }; }. // in streamify; case _ =>; val newChildren = node.children.map(child => boundary(child.asInstanceOf[IR])); val x = if ((node.children, newChildren).zipped.forall(_ eq _)); node; else; node.copy(newChildren). if(x.typ.isInstanceOf[TArray]); ToStream(x); else; x; ```. IRSuite.testDictContains:. Before Lower: ; MakeTuple(ArrayBuffer((0,ApplyIR(contains,ArrayBuffer(GetTupleElement(In(0,PCTuple[0:PCDict[PInt32,PCString]]),0), NA(int32)))))); ...; before: ; ToArray(Ref(__iruid_56,dict<int32, str>)) of typ: array<struct{key: int32, value: str}>; after: Ref(__iruid_56,dict<int32, str>) of typ: dict<int32, str>. java.lang.AssertionError: assertion failed. 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.expr.ir.LowerArrayToStream$.is$hail$expr$ir$LowerArrayToStream$$boundary(LowerArrayToStream.scala:19). #### Fix:; ```scala; private def toStream(node: IR): IR = {; node match {; case _: ToStream => node; case _ => {; if(node.typ.isInstanceOf[TIterable]) {; ToStream(node); } else {; node; }; }; }; }; ```. New issues (many more failures in IRSuite, and surely plenty more in other tests):. First of these:; Before Lower: ; MakeTuple(ArrayBuffer((0,Let(__iruid_302,RunAgg(Begin(ArrayBuffer(Begin(ArrayBuffer(InitOp(0,ArrayBuffer(),AggStateSignature(Map(Sum() -> AggSignature(Sum(),ArrayBuffer(),ArrayBuffer(int64))),Sum(),None),Sum()))), ArrayFor(ArrayMap(ArrayRange(I32(0),I32(4),I32(1)),__iruid_304,Cast(Ref(__iruid_304,int32),int64)),__iruid_303,Begin(ArrayBuffer(SeqOp(0,ArrayBuffer(Ref(__iruid_303,int64)),AggStateSignature(Map(Sum() -> AggSignature(Sum(),ArrayBuffer(),ArrayBuffer(int64))),Sum(),None),Sum())))))),ResultOp(0,WrappedArray(AggStateSignature(Map(Sum(",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-586602113:1345,assert,assert,1345,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-586602113,1,['assert'],['assert']
Testability,org.apache.spark.SparkException: Task failed while writing rows; 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer.writeRows(WriterContainer.scala:261); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745)java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.methods.VEP$$anonfun$16$$anon$1.hasNext(VEP.scala:398); 	at is.hail.sparkextras.OrderedRDD$$anonfun$apply$7$$anon$2.hasNext(OrderedRDD.scala:211); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply$mcV$sp(WriterContainer.scala:253); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply(WriterContainer.scala:252); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply(WriterContainer.scala:252); 	at org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1348); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer.writeRows(WriterContainer.scala:258); 	at org.apache.spark.sql.execution.dat,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822:11078,assert,assert,11078,https://hail.is,https://github.com/hail-is/hail/issues/1822,1,['assert'],['assert']
Testability,"orker image (with one retry) before trying to run it.; - Batch and Job are gone. database.py is effectively gone. Almost everywhere interacts directly with the database using the simple gear.Database interface, and drops down to aiomysql directly when that is insufficient (e.g. transaction with multiple executemany for /jobs/create). When we pass around data representing a job or batch, it's normally a data record (a dict).; - Added the running log test from your PR.; - The job status is no longer written to a file, just in the database jobs.status.; - I moved the INSTANCE_ID to the database. There is now a table called tokens. It has the instance id and a token for securing communication between the front end and the driver (currently unused).; - Operations that need to be atomic in the database are now implemented as stored procedures which can be called with the check_call_procedure helper in database.py. They return a row with a field rc (return code) that is 0 on success and non-zero on failure.; - Renamed Driver => Scheduler. Scheduler has two threads, one that schedules jobs that are in the Ready state, and one that cancels cancelled jobs in the Running state. There is a new job state Ready. A job is Ready if its parents are complete and it is not scheduled (instance_id is null). A job is Running if it is scheduled (instance_id is not null).; - The full set of instances are mirrored in memory as Instance objects.; - Added a ready_cores table with a single row that has the total core count of the ready jobs. It is updated by the stored procedures as jobs are scheduled/unscheduled/marked complete. It is used by the instance pool control loop. This is great, and something we couldn't easily see before. Things that got removed that I will add back in the next PRs:; - Database retries; - Instance pool heal loop; - Instance health; - attempt tokens (from the Google backend). These are all pretty easy. Then back to scale tests. Let me know if you have any questions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7420:2546,test,tests,2546,https://hail.is,https://github.com/hail-is/hail/pull/7420,1,['test'],['tests']
Testability,"orm in future, I need to figure the problem out. Any advise would be appreciated. ### Version. 0.2.127. ### Relevant log output. ```shell; 2024/01/17 20:20:25 Starting container setup.; 2024/01/17 20:20:26 Done container setup.; 2024/01/17 20:20:27 Starting localization.; 2024/01/17 20:20:34 Localization script execution started...; 2024/01/17 20:20:34 Localizing input gs://fc-5a8938eb-1299-4afc-957f-afb53ef602b9/submissions/e8747e74-47d1-4f52-acfc-1ac7f81d79ba/VUMCBed2HailMatrix/683447d9-9342-4058-bcfc-ba21422d3121/call-Bed2HailMatrix/script -> /cromwell_root/script; 2024/01/17 20:20:36 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bed -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bed; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.fam -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.fam; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bim -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bim; Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.fam...; / [0 files][ 0.0 B/910.3 KiB] / [1 files][910.3 KiB/910.3 KiB] Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.bim...; / [1 files][910.3 KiB/369.7 MiB] - - [1 files][ 51.9 MiB/369.7 MiB] \ | | [1 files][107.6 MiB/369.7 MiB] / - - [1 files][162.3 MiB/369.7 MiB] \ \ [1 files][213.9 MiB/369.7 MiB] | / / [1 files][286.6 MiB/369.7 MiB] - \ \ [1 files][342.1 MiB/369.7 MiB] |; Operation completed over 2 objects/369.7 MiB.; | [2 files][369.7 MiB/369.7 MiB] 2024/01/17 20:59:27 Localization script execution complete.; 2024/01/17 20:59:38 Done localization.; 2024/01/17 20:59:39 Running user action: docker run -v /mnt/local-disk:/cromwell_root --entrypoint=/bin/bash hailgenetics/hail@sha256:3f22576793ce3161893aed2bd40949b1fc822d2b7e6517dc0ac993b62badaff8 /cromwell_root/script; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp.81879b1c; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp.81879b1c; 24/01/17 20:59:51 WARN NativeCodeLoader: Unable to ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:10024,sandbox,sandbox,10024,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['sandbox'],['sandbox']
Testability,"ort pygments.css).; - Search works again.; - There are now only two root HTML templates: `site/templates/base.html` and; `web_common/web_common/templates/layout.html`. I cannot unify these further; because our services and our main websites actually differ significantly.; - The search/nav bar is now present in the HTML, no JS nonsense to; asynchronously load it into place after HTML rendering.; - Site now has a `make watch` which watches for changes and automatically; re-renders the HTML.; - Site now has a few make rules that facilitate experimenting with how the docs; are displayed within the context of the current development version of site's; CSS & HTML.; - XSLT is now only used by the C++ tests. Smaller things:. - Removed bootstrap dependencies. Did we ever actually use these?; - Removed ""clipboard.js"" dependency. Also not clear from where this came.; - Removed use of the `subtitle` tag, which isn't actually an HTML tag?. Future work:. - Simplify our CSS. It's not possible to logically reason about our CSS. And it; interacts in bad ways with the latent RTD themes. I want a unified Hail visual; theme.; - Clean up the search-related JavaScript in nav-bottom.html and; search.html. These both seem too complicated to just make search work. ---. The thrust of this PR is to restructure Hail's website and documentation to; entirely rely on Jinja2 templates. Previously, we used a mix of Jinja2, XSLT,; and in-browser JavaScript DOM manipulation to piece together a web page. Now, all of Hail's non-service website derives from; `site/templates/base.html`. It is a Jinja2 template with four blocks: title,; meta_description, head, and content. It ensures that:; - Hail's CSS is loaded,; - the Hail icon is set,; - the fonts are loaded,; - the source code highlighter is loaded (prism.js, only used outside the docs); - the nav bar is present and configured.; The nav bar is somewhat complicated. There are two pieces. `nav-top.html`; contains the nav bar HTML elements. `nav-bottom.h",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9597:1083,log,logically,1083,https://hail.is,https://github.com/hail-is/hail/pull/9597,1,['log'],['logically']
Testability,"ory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.fix` runs scalafix on all sources in all modules. `mill __.fix --check` only checks for rule failures (we run this in ci). You can pass any options to scalafix, e.g. `mill fix --help`.; * `mill inspect` - see the docstring and dependencies for any target, e.g. `mill inspect compile`; * `mill ivyDepsTree` - show the tree of external dependencies of the root module, highlightin",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1646,test,test,1646,https://hail.is,https://github.com/hail-is/hail/pull/14147,1,['test'],['test']
Testability,"ory. You can either invoke it directly, as we did with `gradlew`, or copy it somewhere on your path and rename it `mill`. This way you can just run `mill ...`, and it will identify the correct version of mill to use for the project you're in and invoke that. For more details on the installation options, see the github for the wrapper script [here](https://github.com/lefou/millw). To verify that it's working, and download the actual mill jar, run `./millw --version` (or `mill --version` if you put it on your path) from the `hail/` subdirectory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule fa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1098,test,test,1098,https://hail.is,https://github.com/hail-is/hail/pull/14147,2,"['Test', 'test']","['TestNG', 'test']"
Testability,ose(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For d,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4002,test,testng,4002,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,2,['test'],['testng']
Testability,ose(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:341); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:339); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For d,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4195,test,testng,4195,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['test'],['testng']
Testability,"ositional CLI arguments</li>; <li>misc build/test framework updates; <ul>; <li>enable <code>py3.10</code> tests</li>; <li>add <code>conda</code> dependencies</li>; <li>update pre-commit hooks</li>; <li>fix <code>pytest</code> config (<code>nbval</code>, <code>asyncio</code>)</li>; <li>fix dependencies &amp; tests</li>; <li>fix site deployment</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.3 stable</h2>; <ul>; <li>fix minor typo (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>minor example fix (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>misc tidying &amp; refactoring</li>; <li>misc build/dev framework updates; <ul>; <li>update dependencies</li>; <li>update linters</li>; <li>update docs deployment branches</li>; </ul>; </li>; <li>misc test/ci updates; <ul>; <li>test forks</li>; <li>tidy OS &amp; Python version tests</li>; <li>bump primary python version 3.7 =&gt; 3.8</li>; <li>beta py3.10 testing</li>; <li>fix py2.7 tests</li>; <li>better timeout handling</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.2 stable</h2>; <ul>; <li>fix notebook memory leak (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1216"">#1216</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tqdm/tqdm/commit/6791e8c5b3d6c30bdd2060c346996bfb5a6f10d1""><code>6791e8c</code></a> bump version, merge pull request <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1366"">#1366</a> from tqdm/devel</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/754186291e6b4e28ea8b56c9493adc03bf14c404""><code>7541862</code></a> tests: hotfix skip windows errors</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/8fb3d91f561e2a286a7fda13291eda16613dac39""><code>8fb3d91</code></a> fix ipywidgets&gt;=8 display</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/05e3d32a5fc8559e133e6d627",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12260:3616,test,testing,3616,https://hail.is,https://github.com/hail-is/hail/pull/12260,1,['test'],['testing']
Testability,"ositional CLI arguments</li>; <li>misc build/test framework updates; <ul>; <li>enable <code>py3.10</code> tests</li>; <li>add <code>conda</code> dependencies</li>; <li>update pre-commit hooks</li>; <li>fix <code>pytest</code> config (<code>nbval</code>, <code>asyncio</code>)</li>; <li>fix dependencies &amp; tests</li>; <li>fix site deployment</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.3 stable</h2>; <ul>; <li>fix minor typo (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>minor example fix (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>misc tidying &amp; refactoring</li>; <li>misc build/dev framework updates; <ul>; <li>update dependencies</li>; <li>update linters</li>; <li>update docs deployment branches</li>; </ul>; </li>; <li>misc test/ci updates; <ul>; <li>test forks</li>; <li>tidy OS &amp; Python version tests</li>; <li>bump primary python version 3.7 =&gt; 3.8</li>; <li>beta py3.10 testing</li>; <li>fix py2.7 tests</li>; <li>better timeout handling</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.2 stable</h2>; <ul>; <li>fix notebook memory leak (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1216"">#1216</a>)</li>; <li>fix <code>contrib.concurrent</code> with generators (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1233"">#1233</a> &lt;- <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1231"">#1231</a>)</li>; </ul>; <h2>tqdm v4.62.1 stable</h2>; <ul>; <li><code>contrib.logging</code>: inherit existing handler output stream (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1191"">#1191</a>)</li>; <li>fix <code>PermissionError</code> by using <code>weakref</code> in <code>DisableOnWriteError</code> (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1207"">#1207</a>)</li>; <li>fix <code>contrib.telegram</code> creation rate limit handling (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11587:1826,test,testing,1826,https://hail.is,https://github.com/hail-is/hail/pull/11587,1,['test'],['testing']
Testability,"ost parsing when explicit port specified</li>; <li>Fix <code>ProxyCommand</code> option for SSH connections</li>; <li>Do not spawn extra subshell when launching external SSH client</li>; <li>Improve exception semantics to preserve context</li>; <li>Documentation improvements (formatting, examples, typos, missing params)</li>; </ul>; <h3>🔧 Miscellaneous</h3>; <ul>; <li>Upgrade dependencies in <code>requirements.txt</code> to latest versions</li>; <li>Remove extraneous transitive dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/docker/docker-py/commit/30022984f6445fbc322cbe97bb99aab1ddb1e4fd""><code>3002298</code></a> socket: handle npipe close on Windows (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3056"">#3056</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/bc0a5fbacd7617fd338d121adca61600fc70d221""><code>bc0a5fb</code></a> test: use anonymous volume for prune (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3051"">#3051</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/923e067dddc3d4b86e4e620a99fcdcdafbd17a98""><code>923e067</code></a> api: add support for floats to docker logs params since / until (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3031"">#3031</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/1c27ec1f0c34f6b9510f5caadada5fd8ecc430d9""><code>1c27ec1</code></a> ci: use latest stable syntax for Dockerfiles (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3035"">#3035</a>)</li>; <li><a href=""https://github.com/docker/docker-py/commit/2494d63f36eba0e1811f05e7b2136f8b30f7cdb7""><code>2494d63</code></a> docs: install package in ReadTheDocs build (<a href=""https://github-redirect.dependabot.com/docker/docker-py/issues/3032"">#3032</a>)</li>; <li><a href=""https://github.com/docker/docker-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12475:4914,test,test,4914,https://hail.is,https://github.com/hail-is/hail/pull/12475,1,['test'],['test']
Testability,"ot all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyMTAxMzNhYS03MjA2LTRmMzQtYTQ2OC1iYjY5YWJmYTUzZjEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjIxMDEzM2FhLTcyMDYtNGYzNC1hNDY4LWJiNjlhYmZhNTNmMSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""210133aa-7206-4f34-a468-bb69abfa53f1"",""prPublicId"":""210133aa-7206-4f34-a468-bb69abfa53f1"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.0""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[479,616],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14200:2753,log,logic,2753,https://hail.is,https://github.com/hail-is/hail/pull/14200,1,['log'],['logic']
Testability,"ot.com/cbeust/testng/pull/2821"">cbeust/testng#2821</a></li>; <li>Fixing bug with DataProvider retry by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2822"">cbeust/testng#2822</a></li>; <li>Add config key for callback discrepancy behavior by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2823"">cbeust/testng#2823</a></li>; <li>Upgrading versions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""https://github.com/melloware""><code>@​melloware</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li>JarFileUtils.delete(File f) throw actual exception (instead of FileNotFound) when file cannot be deleted <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2825"">#2825</a> by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; <li>GITHUB-2830 - Failsafe parameter.toString by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2831"">cbeust/testng#2831</a></li>; <li>Changing assertion message of the osgitest by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2832"">cbeust/testng#2832</a></li>; <li>hidden spotbugs in release <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2829"">#2829</a> by <a href=""https://github.com/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:4628,test,testng,4628,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,otations.AnnotationsSuite.testReadWrite FAILED; org.apache.spark.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at Inde,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1655,test,test,1655,https://hail.is,https://github.com/hail-is/hail/issues/4718,3,"['Test', 'test']","['Test', 'test', 'testLowerBound']"
Testability,"ote that Firth is more conservative:; ![logregpvallrtfirth](https://cloud.githubusercontent.com/assets/3201642/22867294/a86b012c-f153-11e6-8155-23004f9127fe.png). Beta for variants with at least 20 hets, basically the same:; ![logregbeta20hets](https://cloud.githubusercontent.com/assets/3201642/22859644/23feabb6-f0b1-11e6-88d5-a04af188c276.png). Pvals for variants with at least 20 hets, basically the same:; ![logregpval20hets](https://cloud.githubusercontent.com/assets/3201642/22859658/c6d27e12-f0b1-11e6-814f-b4a75dd54162.png). Comparison of iterations until convergence, note that LRT is bimodal due to quasi-separation, whereas Firth is not. When well-posed, Firth takes more iterations to converge as expected:; ![logregiter](https://cloud.githubusercontent.com/assets/3201642/22859638/df6c31ee-f0b0-11e6-9443-1a00bb2e9848.png). LRT iterations:; ![logreglrtiter](https://cloud.githubusercontent.com/assets/3201642/22859676/816119b4-f0b2-11e6-8401-2b6600d6f443.png). Firth iterations:; ![logregfirthiter](https://cloud.githubusercontent.com/assets/3201642/22859677/883c4a6a-f0b2-11e6-9aad-b79e613f2ba7.png). For the record, Wald is mis-calibrated for small counts:; ![logregpvalwaldlrt](https://cloud.githubusercontent.com/assets/3201642/22859691/f629f5fe-f0b2-11e6-98fe-b96b3ef497ec.png). Score is more conservative than LRT:; ![logregpvalscorelrt](https://cloud.githubusercontent.com/assets/3201642/22859708/92750f7a-f0b3-11e6-93af-3219eb9e025f.png). Firth is more conservative than score:; ![logregpvalscorefirth](https://cloud.githubusercontent.com/assets/3201642/22859693/fed4555a-f0b2-11e6-9636-2a8075b0a04a.png). And linear betas are super conservative:; ![logregbetafirthlin](https://cloud.githubusercontent.com/assets/3201642/22867304/c63d2b76-f153-11e6-87b3-445c58796695.png). But linear pvals are okay:; ![logregpvalfirthlin](https://cloud.githubusercontent.com/assets/3201642/22867309/dc0f0d70-f153-11e6-840d-308dc0570a6a.png). And essentially identical to score test:; ![logregpva",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1375#issuecomment-279196409:2669,log,logregfirthiter,2669,https://hail.is,https://github.com/hail-is/hail/pull/1375#issuecomment-279196409,1,['log'],['logregfirthiter']
Testability,"otocol); * In IntelliJ, go to File->Open, and choose the hail root directory; * When the project is open, go to File->Project Structure; * in the Project pane, set an sdk (8 or 11), and set the language level to 8; * in the Modules pane, delete the existing root module, click the plus sign -> Import Module, choose the `hail/` subdirectory, and choose ""Import module from external model"" and `BSP`; * you should see a progress bar at the bottom as it imports the project; * when it's done, quit and reopen IntelliJ. There should now be a bsp icon (two bars with two arrows between them) on the right, where the gradle elephant used to be. Just like before, sometimes you'll need to click the ""reload"" icon in there if things get wonky.; * if it says ""scalafmt configuration detected"", go ahead and enable the formatter. ## Metals setup. * delete any `.metals` directories; * open the hail repo in VSCode (even if you won't use VSCode, this seems to be the best way to get metals set up initially); * it should ask you to import a Mill build; * when that finishes, at the bottom it should say it's connected to a Bloop build server. In general, I think using Mill as the BSP directly will work best, but I don't have much experience to say for sure. To switch, run `Metals: switch build server` from the command palette. ## Debug and release builds. As before, debug mode adds some (fairly expensive) checking to our native memory system. But now there are a few other differences:; * treat warnings as errors only in release mode, so you can still compile, run tests, etc. during development without fixing all warnings; * enable optimization in scalac only in release mode. The intention is that we use debug mode during development, and release mode ony for published artifacts, or performance profiling. Mill will use debug mode by default. To enable release mode, define `HAIL_RELEASE_MODE` in your environment. Note changing this will invalidate all mill intermediates and rebuild from scratch.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:5383,test,tests,5383,https://hail.is,https://github.com/hail-is/hail/pull/14147,1,['test'],['tests']
Testability,ource); 	at __C372collect_distributed_array_matrix_native_writer.apply(Unknown Source); 	at is.hail.backend.BackendUtils.$anonfun$collectDArray$16(BackendUtils.scala:91); 	at is.hail.utils.package$.using(package.scala:637); 	at is.hail.annotations.RegionPool.scopedRegion(RegionPool.scala:162); 	at is.hail.backend.BackendUtils.$anonfun$collectDArray$15(BackendUtils.scala:90); 	at is.hail.backend.service.Worker$.$anonfun$main$12(Worker.scala:167); 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); 	at is.hail.services.package$.retryTransientErrors(package.scala:182); 	at is.hail.backend.service.Worker$.$anonfun$main$11(Worker.scala:166); 	at is.hail.backend.service.Worker$.$anonfun$main$11$adapted(Worker.scala:164); 	at is.hail.utils.package$.using(package.scala:637); 	at is.hail.backend.service.Worker$.main(Worker.scala:164); 	at is.hail.backend.service.Main$.main(Main.scala:14); 	at is.hail.backend.service.Main.main(Main.scala); 	... 11 more. Logs; Main; Log ; 2023-09-24 17:23:30.055 JVMEntryway: ERROR: Exception encountered in QoB cancel thread.; org.newsclub.net.unix.SocketClosedException: Not open; 	at org.newsclub.net.unix.AFCore.validFdOrException(AFCore.java:90) ~[jvm-entryway.jar:?]; 	at org.newsclub.net.unix.AFSocketImpl$AFInputStreamImpl.read(AFSocketImpl.java:510) ~[jvm-entryway.jar:?]; 	at java.io.DataInputStream.readInt(DataInputStream.java:388) ~[?:1.8.0_382]; 	at is.hail.JVMEntryway$2.run(JVMEntryway.java:136) ~[jvm-entryway.jar:?]; 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]; 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]; 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]; 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]; 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]; 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolEx,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13704#issuecomment-1734170888:4398,Log,Logs,4398,https://hail.is,https://github.com/hail-is/hail/issues/13704#issuecomment-1734170888,2,['Log'],"['Log', 'Logs']"
Testability,ource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4063028160 |; | test | test | 6 | 1 | 189760 |; | test | test | 6 | 3 | 607168 |; | test | test | 6 | 4 | 749952 |; | test | test | 6 | 5 | 46912 |; | test | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1486,test,test,1486,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,ources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux test.cpp -MG -M -MF build/test.d -MT build/test.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux ibs.cpp -MG -M -MF build/ibs.d -MT build/ibs.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux davies.cpp -MG -M -MF build/davies.d -MT build/davies.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux cache-tests.cpp -MG -M -MF build/cache-tests.d -MT build/cache-tests.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux Upcalls.cpp -MG -M -MF build/Upcalls.d -MT build/Upcalls.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux Region_test.cpp -MG -M -MF build/Region_test.d -MT build/Region_test.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux Region.cpp -MG -M -MF build/Region.d -MT build/Region.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../reso,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5659:1980,test,tests,1980,https://hail.is,https://github.com/hail-is/hail/issues/5659,1,['test'],['tests']
Testability,"ow.</li>; </ul>; <h2>[2.0.1] - 2020-10-12</h2>; <h3>Added</h3>; <ul>; <li>Support Pypi long descripton - <a href=""https://github.com/ereli-cb""><code>@​ereli-cb</code></a></li>; </ul>; <h3>Changed</h3>; <ul>; <li>You can now rename output fields - <a href=""https://github.com/schlitzered""><code>@​schlitzered</code></a></li>; </ul>; <h2>[2.0.0] - 2020-09-26</h2>; <h3>Added</h3>; <ul>; <li>New Changelog</li>; <li>Added timezone support to timestamps - <a href=""https://github.com/lalten""><code>@​lalten</code></a></li>; <li>Refactored log record to function - <a href=""https://github.com/georgysavva""><code>@​georgysavva</code></a></li>; <li>Add python 3.8 support - <a href=""https://github.com/tommilligan""><code>@​tommilligan</code></a></li>; </ul>; <h3>Removed</h3>; <ul>; <li>Support for Python 2.7</li>; <li>Debian directory</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/madzak/python-json-logger/commit/076b407aa7f34bc64a729cc77da336fb159d7597""><code>076b407</code></a> Release 2.0.2</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/f51d8fe76154380cac2fe6a30a944d67dc09df2d""><code>f51d8fe</code></a> added test/build requirements to ci file</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/b07b580670c6c4e340c372c73d0e76cdddc8b456""><code>b07b580</code></a> moved release out of test workflow. setup.cfg specifies a proper wheel now</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/4df12f93928bb66b053d8693e5cd60f38588069a""><code>4df12f9</code></a> removing missed python3.4 support data</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/7c40f4abf46ee6f3b5f4290f12ff3e9872ff9892""><code>7c40f4a</code></a> removed typo around build badge</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/0837da313ea796e353b40b574e3f82591a698caf""><code>0837da3</code></a> added env to git ignore</li>; <li><a href=""https://github.com/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11467:2752,log,logger,2752,https://hail.is,https://github.com/hail-is/hail/pull/11467,1,['log'],['logger']
Testability,"p scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; <li>Declares incompatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; </ul>; <h2>pytest-asyncio 0.23.4a2</h2>; <h1>0.23.4 (UNRELEASED)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please contin",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:5835,test,test,5835,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['test']
Testability,"p4a9fxo7.git"",; ""clone_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7.git"",; ""svn_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""homepage"": null,; ""size"": 0,; ""stargazers_count"": 0,; ""watchers_count"": 0,; ""language"": null,; ""has_issues"": true,; ""has_projects"": true,; ""has_downloads"": true,; ""has_wiki"": true,; ""has_pages"": false,; ""forks_count"": 0,; ""mirror_url"": null,; ""archived"": false,; ""open_issues_count"": 0,; ""license"": null,; ""forks"": 0,; ""open_issues"": 0,; ""watchers"": 0,; ""default_branch"": ""master"",; ""permissions"": {; ""admin"": true,; ""push"": true,; ""pull"": true; },; ""allow_squash_merge"": true,; ""allow_merge_commit"": true,; ""allow_rebase_merge"": true,; ""organization"": {; ""login"": ""hail-ci-test"",; ""id"": 43152710,; ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjQzMTUyNzEw"",; ""avatar_url"": ""https://avatars1.githubusercontent.com/u/43152710?v=4"",; ""gravatar_id"": """",; ""url"": ""https://api.github.com/users/hail-ci-test"",; ""html_url"": ""https://github.com/hail-ci-test"",; ""followers_url"": ""https://api.github.com/users/hail-ci-test/followers"",; ""following_url"": ""https://api.github.com/users/hail-ci-test/following{/other_user}"",; ""gists_url"": ""https://api.github.com/users/hail-ci-test/gists{/gist_id}"",; ""starred_url"": ""https://api.github.com/users/hail-ci-test/starred{/owner}{/repo}"",; ""subscriptions_url"": ""https://api.github.com/users/hail-ci-test/subscriptions"",; ""organizations_url"": ""https://api.github.com/users/hail-ci-test/orgs"",; ""repos_url"": ""https://api.github.com/users/hail-ci-test/repos"",; ""events_url"": ""https://api.github.com/users/hail-ci-test/events{/privacy}"",; ""received_events_url"": ""https://api.github.com/users/hail-ci-test/received_events"",; ""type"": ""Organization"",; ""site_admin"": false; },; ""network_count"": 0,; ""subscribers_count"": 0; }; ```. [2]:; ```; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:7063,test,test,7063,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,9,['test'],['test']
Testability,"p</code> parameter from <code>RWLock</code> constructor</li>; </ul>; <p>1.2.0 (2021-11-09); ^^^^^^^^^^^^^^^^^^</p>; <ul>; <li>Fix a bug that makes concurrent writes possible under some (rare) conjunctions (<a href=""https://github-redirect.dependabot.com/aio-libs/aiorwlock/issues/235"">#235</a>)</li>; </ul>; <p>1.1.0 (2021-09-27); ^^^^^^^^^^^^^^^^^^</p>; <ul>; <li>Remove explicit loop usage in <code>asyncio.sleep()</code> call, make the library forward; compatible with Python 3.10</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/aio-libs/aiorwlock/commit/6599d10ba16f95f19d5b5963a00aa857bc98f656""><code>6599d10</code></a> Bump to 1.3.0</li>; <li><a href=""https://github.com/aio-libs/aiorwlock/commit/d4b41f54b57caf316c41c3973ab82bd53a418ff8""><code>d4b41f5</code></a> Drop deprecated 'loop' parameter from RWLock constructor</li>; <li><a href=""https://github.com/aio-libs/aiorwlock/commit/3edb2a1bc1636832df12671f035e21dd74440824""><code>3edb2a1</code></a> Fix tests</li>; <li><a href=""https://github.com/aio-libs/aiorwlock/commit/45a7418474a55defe9c53fd8e38df60af514cf84""><code>45a7418</code></a> Fix linters</li>; <li><a href=""https://github.com/aio-libs/aiorwlock/commit/e5150d6bb79f3f4efabfa087e249e2a519b4ce18""><code>e5150d6</code></a> Drop Python 3.6 support</li>; <li><a href=""https://github.com/aio-libs/aiorwlock/commit/7335622112df4a5f276df0101da99847a5a16d9a""><code>7335622</code></a> Use strict asyncio mode</li>; <li><a href=""https://github.com/aio-libs/aiorwlock/commit/489e6d65693a450f726d2a77b44818de6ae501d0""><code>489e6d6</code></a> Bump pytest-asyncio from 0.17.1 to 0.17.2 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiorwlock/issues/251"">#251</a>)</li>; <li><a href=""https://github.com/aio-libs/aiorwlock/commit/096ff12dde0ad3aa59a33a90c81a19defdce7cd5""><code>096ff12</code></a> Bump pytest-asyncio from 0.17.0 to 0.17.1 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiorwlock/issues/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11514:1893,test,tests,1893,https://hail.is,https://github.com/hail-is/hail/pull/11514,1,['test'],['tests']
Testability,"p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3""><code>e0c5fc0</code></a> feat: trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce""><code>97e32b6</code></a> fix: allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b""><code>a760e02</code></a> feat: add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc""><code>83d9ca8</code></a> feat!: make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422<",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:11994,log,logging,11994,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"p>; <ul>; <li>Respect <code>dot_notation</code> flag in ignore argument (<a href=""https://github.com/yoyonel""><code>@​yoyonel</code></a>) (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/107"">#107</a>)</li>; <li>Adds argument for toggling dot notation in diff. (<a href=""https://github.com/robinchew""><code>@​robinchew</code></a>)</li>; </ul>; <p>Version 0.7.2 (released 2019-02-22)</p>; <ul>; <li>Two NaN values are considered the same, hence they are not shown in <code>diff</code>; output. (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/114"">#114</a>) (<a href=""https://github.com/t-b""><code>@​t-b</code></a>)</li>; <li>Refactors <code>diff</code> method to reduce recursive call stack size. (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/112"">#112</a>); (<a href=""https://github.com/yoyonel""><code>@​yoyonel</code></a>)</li>; <li>Python porting best practice use feature detection instead; of version detection to save an import and pass both PyLint; and Flake8 tests with neither 'pragma' nor 'noqa'. (<a href=""https://github.com/cclauss""><code>@​cclauss</code></a>)</li>; </ul>; <p>Version 0.7.1 (released 2018-05-04)</p>; <ul>; <li>Resolves issue with keys containing dots. (<a href=""https://github-redirect.dependabot.com/inveniosoftware/dictdiffer/issues/101"">#101</a>)</li>; </ul>; <p>Version 0.7.0 (released 2017-10-16)</p>; <ul>; <li>Fixes problem with diff results that reference the original structure by; introduction of <code>deepcopy</code> for all possibly unhashable items. Thus the diff; does not change later when the diffed structures change.</li>; <li>Adds new option for patching and reverting patches in-place.</li>; <li>Adds Python 3.6 to test matrix.</li>; <li>Fixes the <code>ignore</code> argument when it contains a unicode value.</li>; </ul>; <p>Version 0.6.1 (released 2016-11-22)</p>; <ul>; <li>Changes order of items for REMOVE section of generated patches whe",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11485:4308,test,tests,4308,https://hail.is,https://github.com/hail-is/hail/pull/11485,1,['test'],['tests']
Testability,"pOnAppenders(AppenderAttachableImpl.java:66); at org.apache.log4j.Category.callAppenders(Category.java:206); at org.apache.log4j.Category.forcedLog(Category.java:391); at org.apache.log4j.Category.log(Category.java:856); at org.slf4j.impl.Log4jLoggerAdapter.warn(Log4jLoggerAdapter.java:400); at org.apache.spark.internal.Logging$class.logWarning(Logging.scala:66); at org.apache.spark.scheduler.TaskSetManager.logWarning(TaskSetManager.scala:52); at org.apache.spark.scheduler.TaskSetManager.handleFailedTask(TaskSetManager.scala:693); at org.apache.spark.scheduler.TaskSchedulerImpl.handleFailedTask(TaskSchedulerImpl.scala:421); at org.apache.spark.scheduler.TaskResultGetter$$anon$3$$anonfun$run$2.apply$mcV$sp(TaskResultGetter.scala:139); at org.apache.spark.scheduler.TaskResultGetter$$anon$3$$anonfun$run$2.apply(TaskResultGetter.scala:124); at org.apache.spark.scheduler.TaskResultGetter$$anon$3$$anonfun$run$2.apply(TaskResultGetter.scala:124); at org.apache.spark.util.Utils$.logUncaughtExceptions(Utils.scala:1953); at org.apache.spark.scheduler.TaskResultGetter$$anon$3.run(TaskResultGetter.scala:124); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ```; `pyhail-submit`:; ```bash; #!/bin/bash. if [ $# -ne 2 ]; then; echo 'usage: gcp-pyhail-submit <cluster> <py-file>'; exit 1; fi. cluster=$1; script=$2. echo cluster = $cluster; echo script = $script. HASH=`gsutil cat gs://hail-common/latest-hash.txt`. JAR_FILE=hail-hail-is-master-all-spark2.0.2-$HASH.jar; JAR=gs://hail-common/$JAR_FILE. PYHAIL_ZIP=gs://hail-common/pyhail-hail-is-master-$HASH.zip. gcloud dataproc jobs submit pyspark \; $script \; --cluster $cluster \; --files=$JAR \; --py-files=$PYHAIL_ZIP \; --properties=""spark.driver.extraClassPath=./$JAR_FILE,spark.executor.extraClassPath=./$JAR_FILE"" \; --; ```; cluster JSON:; ```; {; ""projectId"": ""broad-ctsa""",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1186#issuecomment-267416027:2109,log,logUncaughtExceptions,2109,https://hail.is,https://github.com/hail-is/hail/issues/1186#issuecomment-267416027,2,['log'],['logUncaughtExceptions']
Testability,"paces have all these credentials to the CloudSQL server. I'm glad this gets rid of that. ### Accessing the database server; We use the DB pod's service DNS name as the `host` so inside Kubernetes this Just Works. The one caveat is the CI pipeline in which we run migrations in batch jobs. Those jobs need a way to reach the DB pod. I achieve this with a NodePort and then use the job's K8s credentials to resolve the node and port that the DB is on. The code I've added to do this resolution feels a bit janky, wouldn't mind some feedback on that. In terms of security, if a user job was able to somehow resolve the address of a test db, they would still not have the credentials to access it, and this is currently also the case with the production database. Nevertheless, this does raise an action item that we should only allow traffic to the k8s and DB subnets for `network=private` jobs, but I think we should make that a separate PR. ### Database creation; In order to test this properly in a dev deploy, I needed to make some changes to `create_database.py`. In main, dev deploys can't create databases. I think they should be able to, and those operations should just be idempotent. When allowing dev deploys to create databases, I hit the `ALTER USER` lines in `create_database.py` which lock out any already-deployed application, which feels silly. Instead, I create the mysql user and create the corresponding secret iff the mysql username does not already exist. ### create_initial_account.py; When starting off with a fresh database, we encounter a bootstrapping problem where we need to add the developer's user. The current way to add the developer's user is through `create_initial_account.py` which assumes that the developer's gsa key secret is not already in the namespace, but now it could be, so I delete the key in the namespace if it exists before creating it. This could all change with my other PR to add devs to test namespaces. But this change to allow ephemeral dev databa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13030:1892,test,test,1892,https://hail.is,https://github.com/hail-is/hail/pull/13030,1,['test'],['test']
Testability,parallel test execution,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1444:9,test,test,9,https://hail.is,https://github.com/hail-is/hail/pull/1444,1,['test'],['test']
Testability,parameterize some IRSuite tests to avoid c++ recompilation,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5582:26,test,tests,26,https://hail.is,https://github.com/hail-is/hail/pull/5582,1,['test'],['tests']
Testability,"pare/7.7.0...7.7.1</a></p>; <h2>TestNG v7.7.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Replace FindBugs by SpotBugs by <a href=""https://github.com/gruenich""><code>@​gruenich</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li>Gradle: Drop forUseAtConfigurationTime() by <a href=""https://github.com/gruenich""><code>@​gruenich</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2783"">cbeust/testng#2783</a></li>; <li>Added ability to provide custom message to assertThrows\expectThrows methods by <a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li>Fix issue 2801 - Only resolve hostname once by <a href=""https://github.com/spkrka""><code>@​spkrka</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li>[SECURITY] Fix Zip Slip Vulnerability; by <a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li>GITHUB-2807 - Failsafe buildStackTrace by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2808"">cbeust/testng#2808</a></li>; <li>Prevent overlogging of debug msgs in Graph impl by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2813"">cbeust/testng#2813</a></li>; <li>Streamline dataprovider invoking in abstract classes by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2814"">cbeust/testng#2814</a></li>; <li>Streamline TestResult due to expectedExceptions by <a href=""https://github.com/krmahade",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:1639,test,testng,1639,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"park://localhost:7077 --work-dir /scratch/local/. Test:. import hail; hail.init(master=""spark://localhost:7077""); P = 1; S = 1000; V = 50000; for N in range(350, 400, 1):; try:; mt = hail.balding_nichols_model(P, S, V, N); mt = hail.sample_qc(mt); mt = mt.filter_cols(mt.sample_qc.n_hom_var > V*0.32); print(""\n[PASS] with"", N, ""partitions:"", mt.count()); except Exception:; print(""\n[FAIL] with "", N, ""partitions""); break. Test Output (SIGSEGV is reported in Spark worker logs, see end):. 2020-06-10 10:29:56 WARN NativeCodeLoader:62 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 	Setting default log level to ""WARN"".; 	To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; 	Running on Apache Spark version 2.4.5; 	SparkUI available at http://US0HPN0036.cm.cluster:4047; 	Welcome to; 		 __ __ <>__; 		/ /_/ /__ __/ /; 	 / __ / _ `/ / /; 	 /_/ /_/\_,_/_/_/ version 0.2.44-6cfa355a1954; 	LOGGING: writing to /bmrn/apps/bmrn-hugelib/0.3.0/test/hail-20200610-1029-0.2.44-6cfa355a1954.log; 	2020-06-10 10:29:59 Hail: INFO: balding_nichols_model: generating genotypes for 1 populations, 1000 samples, and 50000 variants...; 	[Stage 1:==========================> (171 + 80) / 350]; 	[PASS] with 350 partitions: (50000, 984); 	2020-06-10 10:30:08 Hail: INFO: balding_nichols_model: generating genotypes for 1 populations, 1000 samples, and 50000 variants...; 	[Stage 3:==========================> (169 + 80) / 351]; 	[PASS] with 351 partitions: (50000, 998); 	2020-06-10 10:30:10 Hail: INFO: balding_nichols_model: generating genotypes for 1 populations, 1000 samples, and 50000 variants...; 	[Stage 5:=====================================================> (344 + 8) / 352]; 	[PASS] with 352 partitions: (50000, 1000); 	2020-06-10 10:30:13 Hail: INFO: balding_nichols_model: generating genotypes for 1 populations, 1000 samples, and 50000 variants...; 	[Stage 7:=================================> (222 + 80) ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8944:1658,LOG,LOGGING,1658,https://hail.is,https://github.com/hail-is/hail/issues/8944,1,['LOG'],['LOGGING']
Testability,parkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66); 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109); ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3825,test,testng,3825,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604,29,"['Test', 'test']","['TestMethodWorker', 'TestNG', 'TestRunner', 'testng']"
Testability,"parsy/parsy/commit/c4f01f1f44b8e0afb6d3467051ca1d220cc005e3""><code>c4f01f1</code></a> Updated release process</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/03807bcef9cf0a5ff0583d6398f9d4a1eeb67ef2""><code>03807bc</code></a> Version bump - 1.4.0</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/c38eda7dfe58e9619d3b1a7f2210cdbb112bac1b""><code>c38eda7</code></a> Docs improvement</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/4486f90b4097805193d77c1c891817f281d89461""><code>4486f90</code></a> Fixed tests on Python 3.5</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/87e622e145482d93b9bb4fe137c4c76b4ef2a2b8""><code>87e622e</code></a> Added forward_declaration</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/2968580f9e98b44181d2c6c48c4890bc03081ebd""><code>2968580</code></a> Version bump for 1.4.0-dev1</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/bbc1d75065108a4de64f10e169ea542b6f3167b6""><code>bbc1d75</code></a> Test example code as part of tests</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/18df37a479f1bc4170999866433ca19f92f19f63""><code>18df37a</code></a> Dropped Python 3.4 from tox</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/1d7189b5bf78bd0d8d6e4bb2170dfeabba659c5c""><code>1d7189b</code></a> Merge branch 'master' of github.com:python-parsy/parsy</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/8ec01153ccf6c58e2811c0e4c760b98125aeebca""><code>8ec0115</code></a> Link to SQL example from README</li>; <li>Additional commits viewable in <a href=""https://github.com/python-parsy/parsy/compare/v1.1.0...v1.4.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=parsy&package-manager=pip&previous-version=1.1.0&new-version=1.4.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12007:2525,Test,Test,2525,https://hail.is,https://github.com/hail-is/hail/pull/12007,2,"['Test', 'test']","['Test', 'tests']"
Testability,"passes all tests, builds package locally; ripped out (now unused) mongo dependencies",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2656:11,test,tests,11,https://hail.is,https://github.com/hail-is/hail/pull/2656,1,['test'],['tests']
Testability,passes beside batch test,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8134#issuecomment-589502275:20,test,test,20,https://hail.is,https://github.com/hail-is/hail/pull/8134#issuecomment-589502275,1,['test'],['test']
Testability,"passes some tests, including IRSuite.testSelectFields",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8518:12,test,tests,12,https://hail.is,https://github.com/hail-is/hail/pull/8518,2,['test'],"['testSelectFields', 'tests']"
Testability,"path(path), _intervals=intervals); variant_data = hl.read_matrix_table(VariantDataset._variants_path(path), _intervals=intervals). - reference_data = VariantDataset._add_len_end(reference_data); + # if LEN is missing, add it, _add_len is a no-op if LEN is already present; + reference_data = VariantDataset._add_len(reference_data); if _drop_end:; - reference_data = reference_data.drop('END'); + if 'END' in reference_data.entry:; + reference_data = reference_data.drop('END'); + else: # if END is missing, add it, _add_end is a no-op if END is already present; + reference_data = VariantDataset._add_end(reference_data); +; vds = VariantDataset(reference_data, variant_data); if VariantDataset.ref_block_max_length_field not in vds.reference_data.globals:; fs = hl.current_backend().fs; ```. There was nothing in the IR that stood out when I examined it, but I will admit that I'm not the best at digging into it. ### Version. https://github.com/chrisvittal/hail/tree/vds/repro-example. ### Relevant log output. ```shell; E hail.utils.java.FatalError: RuntimeException: invalid memory access: 140a68008/00000001: not in 140a58008/00010000; E; E Java stack trace:; E java.lang.RuntimeException: invalid memory access: 140a68008/00000001: not in 140a58008/00010000; E 	at is.hail.annotations.Memory.checkAddress(Memory.java:226); E 	at is.hail.annotations.Memory.loadByte(Memory.java:130); E 	at is.hail.annotations.Region$.loadByte(Region.scala:28); E 	at is.hail.annotations.Region$.loadBit(Region.scala:86); E 	at __C23148collect_distributed_array_matrix_native_writer.__m23333split_ToArray(Unknown Source); E 	at __C23148collect_distributed_array_matrix_native_writer.apply_region478_486(Unknown Source); E 	at __C23148collect_distributed_array_matrix_native_writer.apply_region16_503(Unknown Source); E 	at __C23148collect_distributed_array_matrix_native_writer.apply_region14_529(Unknown Source); E 	at __C23148collect_distributed_array_matrix_native_writer.apply(Unknown Source); E 	at __C23148",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14705:2221,log,log,2221,https://hail.is,https://github.com/hail-is/hail/issues/14705,1,['log'],['log']
Testability,"pc_rel['kin'] >= 0.0883); print(""finding Max ind set""); related_samples_to_remove = hl.maximal_independent_set(pairs.i, pairs.j,keep=False); print(""writing related samples to remove""); related_samples_to_remove.export(""file:////restricted/projectnb/adgc/topmed.r2.analysis/pc_relate/related_samples_""+pop+"".tsv""); result = mt.filter_cols(; hl.is_defined(related_samples_to_remove[mt.col_key]), keep=False); print(""final unrelated count""); print(result.count); eigenvalues, scores, loadings = hl.hwe_normalized_pca(result.GT, k=10); scores.export('file:////restricted/projectnb/adgc/topmed.r2.analysis/pc_relate/unrelated_pcs_'+pop+'.tsv'). ```. ```; Running on Apache Spark version 2.4.3; SparkUI available at http://scc-hadoop.bu.edu:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.46-6ef64c08b000; LOGGING: writing to logs/adgc_pc_relate.autosome_all.log; 2020-08-20 10:14:00 Hail: INFO: Reading table to impute column types; [Stage 0:===========================================================(1 + 0) / 1]2020-08-20 10:14:07 Hail: INFO: Loading 76 fields. Counts by type:; 66 fields: user-specified int32; 6 fields: user-specified str; 3 fields: user-specified float64; 1 field: imputed int32; (63110, 64048); running omit filter; [Stage 1:> (0 + 1) / 1](63110, 52877); running pc_relate; [Stage 3:==================================================>(12794 + 2) / 12796]2020-08-20 10:14:38 Hail: INFO: hwe_normalized_pca: running PCA using 63110 variants.; [Stage 5:==================================================>(12795 + 1) / 12796]2020-08-20 10:14:59 Hail: INFO: pca: running PCA with 10 components...; [Stage 102:================================================>(12795 + 1) / 12796]Traceback (most recent call last):; File ""/restricted/projectnb/adgc/topmed.r2.analysis/pc_relate_pop2.py"", line 128, in <module>; pc_rel = hl.pc_relate(mt.GT, 0.01, k=10, statistics='kin',min_kinship=0.0883); File ""<decorator-gen-1543>"", line 2, in pc_relate; [Sta",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9293#issuecomment-677718403:4304,log,log,4304,https://hail.is,https://github.com/hail-is/hail/issues/9293#issuecomment-677718403,1,['log'],['log']
Testability,"pc_relate_pop2.py; import pandas as pd; import numpy as np; from scipy.special import chdtri; from numpy import median; from math import log,isnan; import matplotlib as mpl; import matplotlib.pyplot as plt; import seaborn as sns; import sys; import hail as hl; from bokeh.io import output_notebook, show, export_png, output_file, save; from pprint import pprint. pop=sys.argv[1]; maf_cutoff=0.10. # input files; #. # pfn=""file:///restricted/projectnb/adgc/imp.topmed_adsp5k/analysis/adgc.aa.pheno.txt""; # apoe_fn=""file:///restricted/projectnb/ukbiobank/ad/apoe/ukbb_hg38_imputed_phased.tsv""; mt_fn='/project/adgc/topmed2.2020_07/pop/adgc.'+pop+'.autosome.dose.mt'; mt_ld_fn='/project/adgc/topmed2.2020_07/pop/adgc.'+pop+'.autosome.dose.ld_pruned.mt'; pfn=""file:///restricted/projectnb/adgc/topmed.r2.analysis/pheno/ADGC_ea_aa_eas_hisp_graace_pheno.qced.txt""; #; # Initialize Hail for GRCh38. # hl.init(default_reference='GRCh38',log=""results/adgc_pc_relate.autosome.log"",tmp_dir=""file:///restricted/projectnb/ukbiobank/ad/analysis/ad.v1/tmp""). hl.init(default_reference='GRCh38',log=""logs/adgc_pc_relate.autosome_""+pop+"".log""); table = (hl.import_table(pfn,impute=True, missing=['','.','NA'],types={; 'FID': hl.tstr,; 'IID': hl.tstr,; 'vcfID': hl.tstr,; 'status': hl.tfloat,; 'age': hl.tfloat,; 'sex': hl.tfloat,; 'apoe': hl.tstr,; 'cohort': hl.tstr,; 'pop':hl.tstr,; 'omit':hl.tint,; 'AD': hl.tint,; 'MCI': hl.tint,; 'e2': hl.tint,; 'e3': hl.tint,; 'e4': hl.tint,; 'e44': hl.tint,; 'e34': hl.tint,; 'e33': hl.tint,; 'e24': hl.tint,; 'e23': hl.tint,; 'e22': hl.tint,; 'ACT_aa': hl.tint,; 'ACT1_ea': hl.tint,; 'ACT2_ea': hl.tint,; 'ADC1_ea': hl.tint,; 'ADC10_aa': hl.tint,; 'ADC10_eas': hl.tint,; 'ADC10_ea': hl.tint,; 'ADC10_hisp': hl.tint,; 'ADC12_aa': hl.tint,; 'ADC2_ea': hl.tint,; 'ADC3_aa': hl.tint,; 'ADC3_ea': hl.tint,; 'ADC4_ea': hl.tint,; 'ADC5_ea': hl.tint,; 'ADC6_ea': hl.tint,; 'ADC7_ea': hl.tint,; 'ADC8_aa': hl.tint,; 'ADC8_ea': hl.tint,; 'ADC8_hisp': hl.tint,; 'ADC9_aa': hl.tint,; 'AD",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9293#issuecomment-677718403:1060,log,log,1060,https://hail.is,https://github.com/hail-is/hail/issues/9293#issuecomment-677718403,1,['log'],['log']
Testability,"pendabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li>Gradle: Drop forUseAtConfigurationTime() by <a href=""https://github.com/gruenich""><code>@​gruenich</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2783"">cbeust/testng#2783</a></li>; <li>Added ability to provide custom message to assertThrows\expectThrows methods by <a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li>Fix issue 2801 - Only resolve hostname once by <a href=""https://github.com/spkrka""><code>@​spkrka</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li>[SECURITY] Fix Zip Slip Vulnerability; by <a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li>GITHUB-2807 - Failsafe buildStackTrace by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2808"">cbeust/testng#2808</a></li>; <li>Prevent overlogging of debug msgs in Graph impl by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2813"">cbeust/testng#2813</a></li>; <li>Streamline dataprovider invoking in abstract classes by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2814"">cbeust/testng#2814</a></li>; <li>Streamline TestResult due to expectedExceptions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2815"">cbeust/testng#2815</a></li>; <li>Unexpected test runs count with retry analyzer by <a href=""https://github.com/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:1862,test,testng,1862,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"pendabot.com/cbeust/testng/pull/2813"">cbeust/testng#2813</a></li>; <li>Streamline dataprovider invoking in abstract classes by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2814"">cbeust/testng#2814</a></li>; <li>Streamline TestResult due to expectedExceptions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2815"">cbeust/testng#2815</a></li>; <li>Unexpected test runs count with retry analyzer by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2816"">cbeust/testng#2816</a></li>; <li>Make PackageUtils compliant with JPMS by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2817"">cbeust/testng#2817</a></li>; <li>Ability to retry a data provider during failures by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2820"">cbeust/testng#2820</a></li>; <li>Refactoring by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2821"">cbeust/testng#2821</a></li>; <li>Fixing bug with DataProvider retry by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2822"">cbeust/testng#2822</a></li>; <li>Add config key for callback discrepancy behavior by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2823"">cbeust/testng#2823</a></li>; <li>Upgrading versions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redir",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:3239,test,testng,3239,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"pendencies of this project.</h3>. #### Changes included in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - hail/python/dev/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **556/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.4 | Open Redirect <br/>[SNYK-PYTHON-TORNADO-5537286](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5537286) | `tornado:` <br> `6.2 -> 6.3.2` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlNTZiOGU3Ni1mMTk3LTQ0MmMtOGVlMC04MjFhMDk5YzM3YTAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImU1NmI4ZTc2LWYxOTctNDQyYy04ZWUwLTgyMWEwOTljMzdhMCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13072:1126,test,tested,1126,https://hail.is,https://github.com/hail-is/hail/pull/13072,1,['test'],['tested']
Testability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1NDMwZTFmMi0wNDZjLTQwNDctYmI3Mi1hZmJkZmM1MDViNGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjU0MzBlMWYyLTA0NmMtNDA0Ny1iYjcyLWFmYmRmYzUwNWI0YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""5430e1f2-046c-4047-bb72-afbdfc505b4a"",""prPublicId"":""5430e1f2-046c-4047-bb72-afbdfc505b4a"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13304:2415,log,logic,2415,https://hail.is,https://github.com/hail-is/hail/pull/13304,1,['log'],['logic']
Testability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3Mzc3ZjFlZS1kMjJjLTQ0MDAtYmE1Yy04NGNkYWZmZWJmYzgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjczNzdmMWVlLWQyMmMtNDQwMC1iYTVjLTg0Y2RhZmZlYmZjOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7377f1ee-d22c-4400-ba5c-84cdaffebfc8"",""prPublicId"":""7377f1ee-d22c-4400-ba5c-84cdaffebfc8"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13305:2398,log,logic,2398,https://hail.is,https://github.com/hail-is/hail/pull/13305,1,['log'],['logic']
Testability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjMDQ5NzlhMC1iYWM3LTRiMjEtYmE0ZS02OWU5YjAzMTE5ZjAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImMwNDk3OWEwLWJhYzctNGIyMS1iYTRlLTY5ZTliMDMxMTlmMCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""c04979a0-bac7-4b21-ba4e-69e9b03119f0"",""prPublicId"":""c04979a0-bac7-4b21-ba4e-69e9b03119f0"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""7fad328c-8d01-4768-8813-73d6c644e2d4"",""projectUrl"":""https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13309:2400,log,logic,2400,https://hail.is,https://github.com/hail-is/hail/pull/13309,1,['log'],['logic']
Testability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkY2E2ZDI1ZC1hZGM3LTRiNTctYWU3Zi0yNjExOTYzNTY5MmUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImRjYTZkMjVkLWFkYzctNGI1Ny1hZTdmLTI2MTE5NjM1NjkyZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""dca6d25d-adc7-4b57-ae7f-26119635692e"",""prPublicId"":""dca6d25d-adc7-4b57-ae7f-26119635692e"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13294:2407,log,logic,2407,https://hail.is,https://github.com/hail-is/hail/pull/13294,1,['log'],['logic']
Testability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlMjNiYjk0OC04YjdmLTQ5MzUtYTRkMi05ZWJmNjg4NjZlMmUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImUyM2JiOTQ4LThiN2YtNDkzNS1hNGQyLTllYmY2ODg2NmUyZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e23bb948-8b7f-4935-a4d2-9ebf68866e2e"",""prPublicId"":""e23bb948-8b7f-4935-a4d2-9ebf68866e2e"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13316:2411,log,logic,2411,https://hail.is,https://github.com/hail-is/hail/pull/13316,1,['log'],['logic']
Testability,"pendency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmYWJiOGYzZi1mMDFjLTQxMjktODJjNC1kZjQzMjRmZTU4YTIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZhYmI4ZjNmLWYwMWMtNDEyOS04MmM0LWRmNDMyNGZlNThhMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""fabb8f3f-f01c-4129-82c4-df4324fe58a2"",""prPublicId"":""fabb8f3f-f01c-4129-82c4-df4324fe58a2"",""dependencies"":[{""name"":""certifi"",""from"":""2023.5.7"",""to"":""2023.7.22""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-5805047""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[471],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13296:2400,log,logic,2400,https://hail.is,https://github.com/hail-is/hail/pull/13296,1,['log'],['logic']
Testability,per.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.getKey$1(OrderingSuite.scala:345); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:347); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:318); 	at is.hail.utils.package$.using(package.scala:613); 	at is.hail.annotations.Region$.scoped(Region.scala:13); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:318); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:314); 	at is.hail.check.GenProp1$$anonfun$apply$1$$anonfun$1.apply$mcZ$sp(Prop.scala:28); 	at is.hail.check.GenProp1$$anonfun$apply$1$$anonfun$1.apply(Pro,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1957,Test,TestNG,1957,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['Test'],['TestNG']
Testability,per.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4881,Test,TestNG,4881,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['Test'],['TestNG']
Testability,per.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$100,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4688,Test,TestNG,4688,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,1,['Test'],['TestNG']
Testability,performance tests should catch stuff like this,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4178#issuecomment-414487778:12,test,tests,12,https://hail.is,https://github.com/hail-is/hail/pull/4178#issuecomment-414487778,1,['test'],['tests']
Testability,"performanceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false variant=[(RodBinding name=variant source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.recalibrated.vcf), (RodBinding name=variant2 source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.indels.filtered.vcf)] out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub genotypemergeoption=UNSORTED filteredrecordsmergetype=KEEP_IF_ANY_UNFILTERED multipleallelesmergetype=BY_TYPE rod_priority_list=null printComplexMerges=false filteredAreUncalled=false minimalVCF=false setKey=set assumeIdenticalSamples=true minimumN=1 suppressCommandLineHeader=false mergeInfoWithMaxAC=false filter_mismatching_base_and_quals=false""; ##FILTER=<ID=Indel_FS,Description=""FS>200.0"">; ##FILTER=<ID=Indel_InbreedingCoeff,Description=""InbreedingCoeff<-0.8"">; ##FILTER=<ID=Indel_QD,Description=""QD<2.0"">; ##FILTER=<ID=Indel_ReadPosRankSum,Description=""ReadPosRankSum<-20.0"">; ##FILTER=<ID=LowQual,Description=""Low quality"">; ##FILTER=<ID=VQSRTrancheSNP98.50to98.60,Description=""Truth sensitivity tranche level for SNP model at VQS Lod: -1.4503 <= x < -1.2551"">; ##FILTER=<ID=VQSRTrancheSNP98.60to98.80,Description=""Truth sensitivity tranche level for SNP model at VQS Lod: -2.0727 <= x < -1.4503",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:3794,stub,stubs,3794,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,"phinx/issues/11509"">#11509</a>)</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/0882914d5c5057ad3cec280c0142cfe5f6965844""><code>0882914</code></a> Target PyPI in create-release.yml</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/21fbee5e83a3e9d34e589d06c66d928f3a67923c""><code>21fbee5</code></a> Fix OIDC token payload</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/1a403e4f9ad4d8d7a3e4c7c34f55d9a45ed600bd""><code>1a403e4</code></a> Add informational log messaging</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/258b0ea9fcdd05221ebead5e5c162a7ad37c4412""><code>258b0ea</code></a> Revert &quot;Switch to using <code>github.request</code>&quot;</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/f9c89e5d8431155caa7be57d923f96004a2dd4bd""><code>f9c89e5</code></a> Switch to using <code>github.request</code></li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/52c7f66ce172f723e8227896fe02165d288cb28f""><code>52c7f66</code></a> Use the correct token minting URL for TestPyPI</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/6079f28faa2a60d00f62b02786f23cd489019cdb""><code>6079f28</code></a> Install twine in PyPI publish workflow</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/3d43b9efdb49706cad6947f0c4d877d603781fe6""><code>3d43b9e</code></a> Fix github-script syntax in create-release.yml</li>; <li>Additional commits viewable in <a href=""https://github.com/sphinx-doc/sphinx/compare/v6.2.1...v7.1.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=sphinx&package-manager=pip&previous-version=6.2.1&new-version=7.1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebas",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13295:6233,Test,TestPyPI,6233,https://hail.is,https://github.com/hail-is/hail/pull/13295,1,['Test'],['TestPyPI']
Testability,"pi.github.com/users/hail-ci-test/gists{/gist_id}"",; ""starred_url"": ""https://api.github.com/users/hail-ci-test/starred{/owner}{/repo}"",; ""subscriptions_url"": ""https://api.github.com/users/hail-ci-test/subscriptions"",; ""organizations_url"": ""https://api.github.com/users/hail-ci-test/orgs"",; ""repos_url"": ""https://api.github.com/users/hail-ci-test/repos"",; ""events_url"": ""https://api.github.com/users/hail-ci-test/events{/privacy}"",; ""received_events_url"": ""https://api.github.com/users/hail-ci-test/received_events"",; ""type"": ""Organization"",; ""site_admin"": false; },; ""html_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""description"": null,; ""fork"": false,; ""url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7"",; ""forks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/forks"",; ""keys_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/keys{/key_id}"",; ""collaborators_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/collaborators{/collaborator}"",; ""teams_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/teams"",; ""hooks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/hooks"",; ""issue_events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/events{/number}"",; ""events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/events"",; ""assignees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/assignees{/user}"",; ""branches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/tags"",; ""blobs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/blobs{/sha}"",; ""git_tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9f",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:2501,test,test,2501,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"pile configuration?**; > The Java Library Plugin has historically used the compile configuration for dependencies that are required to both compile and run a project’s production code. It is now deprecated, and will issue warnings when used, because it doesn’t distinguish between dependencies that impact the public API of a Java library project and those that don’t. You can learn more about the importance of this distinction in [Building Java libraries](https://docs.gradle.org/current/userguide/building_java_projects.html#sec:building_java_libraries). OK, so, we used to just dump everything into our runtime dependencies. I changed it so that we have three kinds of dependencies:; 1. `shadow`: these are provided by Dataproc/QoB at run-time. They are not in any JAR. They are not on the `testRuntimeClasspath` or `runtimeClasspath`. They are on the `testCompileClasspath` because I [explicitly requested](https://github.com/hail-is/hail/blob/main/hail/build.gradle#L98) that `testCompileOnly` bring in our `shadow` dependencies.; 2. `implementation`: these are included in all class paths and in shadow JARs (but not ""thin"" jars generated by `./gradlew jar`).; 3. `testImplementation`: these are included in test class paths and in shadow JARs. Our test code references these third-party classes:; ```; import breeze.linalg.DenseMatrix; import breeze.linalg._; import breeze.linalg.{*, diag, DenseMatrix => BDM, DenseVector => BDV}; import breeze.linalg.{DenseMatrix => BDM, _}; import breeze.linalg.{DenseMatrix => BDM}; import breeze.linalg.{DenseMatrix, DenseVector, eigSym, svd}; import breeze.linalg.{DenseMatrix, DenseVector}; import breeze.linalg.{DenseMatrix, Matrix, Vector}; import breeze.linalg.{Vector => BVector}; import htsjdk.samtools.reference.ReferenceSequenceFileFactory; import htsjdk.samtools.util.BlockCompressedFilePointerUtil; import htsjdk.tribble.readers.{TabixReader => HtsjdkTabixReader}; import org.apache.avro.SchemaBuilder; import org.apache.avro.file.DataFileWri",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13706#issuecomment-1738232741:1727,test,testCompileOnly,1727,https://hail.is,https://github.com/hail-is/hail/issues/13706#issuecomment-1738232741,2,['test'],['testCompileOnly']
Testability,"ping @chrisvittal ; There is 1 failure left, which seems difficult to replicate, and for which I have developed a (small) prior belief that it may be uncorrelated with this PR's changes. . The failure is in the Dataproc test of [cluster-tests/cluster-read-vcfs-check.py, line 143 of HadoopFS, in _fileSystem, new hadoop.fs.Path(filename).getFileSystem(conf)](https://ci2.hail.is/jobs/17044/log). This calls hadoop.fs.FileSystem.get , which in turn calls Configuration.get (instance method). ```java; // In Path.java; public FileSystem getFileSystem(Configuration conf) throws IOException {; return FileSystem.get(this.toUri(), conf);; }. // In FileSystem.java; public static FileSystem get(Configuration conf) throws IOException {; return get(getDefaultUri(conf), conf);; }. public static FileSystem get(final URI uri, final Configuration conf,; final String user) throws IOException, InterruptedException {; String ticketCachePath =; conf.get(CommonConfigurationKeys.KERBEROS_TICKET_CACHE_PATH);; UserGroupInformation ugi =; UserGroupInformation.getBestUGI(ticketCachePath, user);; return ugi.doAs(new PrivilegedExceptionAction<FileSystem>() {; @Override; public FileSystem run() throws IOException {; return get(uri, conf);; }; });; }; ```. For some reasons the line numbers reported in CI log don't quite match up (using either IntelliJ's goto def - which could say be the result of referencing a different copy on the system - or the [2.7.1 branch on GitHub](https://github.com/apache/hadoop/blob/branch-2.7.1/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java)), so I followed the parameterization. Still need to figure out why lines reported don't match, but I've seen line number differences before between that reported for the compiled binary, and the uncompiled source. Lines of evidence:; 1) The line specified in the ci log suggests that Hadoop's fileSystem.open() command fails. It appears from examining the line and source, that the Hadoop Configurat",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6083#issuecomment-494037803:220,test,test,220,https://hail.is,https://github.com/hail-is/hail/pull/6083#issuecomment-494037803,3,"['log', 'test']","['log', 'test', 'tests']"
Testability,"pipeline/pipeline-f559bb010746/__TASK__3/60d62d9d;; __RESOURCE_FILE__20=/io/pipeline/pipeline-f559bb010746/inputs/6d001f3e; Rscript; /usr/local/bin/step2_SPAtests.R --vcfFile=${__RESOURCE_FILE__18} --vcfFileIndex=${__RESOURCE_FILE__19}; --vcfField=GT --minMAF=0 --minMAC=1 --maxMAFforGroupTest=0.5 --chrom=chr1 --sampleFile=${__RESOURCE_FILE__747}; --GMMATmodelFile=${__RESOURCE_FILE__6} --varianceRatioFile=${__RESOURCE_FILE__8}; --SAIGEOutputFile=${__RESOURCE_FILE__748} --groupFile=${__RESOURCE_FILE__20}; --sparseSigmaFile=${__RESOURCE_FILE__9} --IsSingleVarinGroupTest=TRUE --IsOutputAFinCaseCtrl=TRUE; 2>&1 | tee ${__RESOURCE_FILE__749}; env:; - name: POD_IP; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: status.podIP; - name: POD_NAME; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: metadata.name; image: konradjk/saige:0.35.8.2.2; imagePullPolicy: IfNotPresent; name: main; resources:; requests:; cpu: ""1""; memory: 500M; terminationMessagePath: /dev/termination-log; terminationMessagePolicy: File; volumeMounts:; - mountPath: /gsa-key; name: gsa-key; - mountPath: /io; name: batch-2554-job-4-8vvgl; - mountPath: /var/run/secrets/kubernetes.io/serviceaccount; name: default-token-8h99c; readOnly: true; dnsPolicy: ClusterFirst; enableServiceLinks: true; nodeName: gke-vdc-preemptible-pool-9c7148b2-4gq2; priority: 500000; priorityClassName: user; restartPolicy: Never; schedulerName: default-scheduler; securityContext: {}; serviceAccount: default; serviceAccountName: default; terminationGracePeriodSeconds: 30; tolerations:; - key: preemptible; value: ""true""; - effect: NoExecute; key: node.kubernetes.io/not-ready; operator: Exists; tolerationSeconds: 300; - effect: NoExecute; key: node.kubernetes.io/unreachable; operator: Exists; tolerationSeconds: 300; volumes:; - name: gsa-key; secret:; defaultMode: 420; secretName: konradk-gsa-key; - name: batch-2554-job-4-8vvgl; persistentVolumeClaim:; claimName: batch-2554-job-4-8vvgl; - name: default-token-8h99c; secret:; defaultMode: ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6466:5816,log,log,5816,https://hail.is,https://github.com/hail-is/hail/issues/6466,1,['log'],['log']
Testability,"pipeline/pipeline-f559bb010746/__TASK__3/60d62d9d;; __RESOURCE_FILE__20=/io/pipeline/pipeline-f559bb010746/inputs/6d001f3e; Rscript; /usr/local/bin/step2_SPAtests.R --vcfFile=${__RESOURCE_FILE__18} --vcfFileIndex=${__RESOURCE_FILE__19}; --vcfField=GT --minMAF=0 --minMAC=1 --maxMAFforGroupTest=0.5 --chrom=chr1 --sampleFile=${__RESOURCE_FILE__747}; --GMMATmodelFile=${__RESOURCE_FILE__6} --varianceRatioFile=${__RESOURCE_FILE__8}; --SAIGEOutputFile=${__RESOURCE_FILE__748} --groupFile=${__RESOURCE_FILE__20}; --sparseSigmaFile=${__RESOURCE_FILE__9} --IsSingleVarinGroupTest=TRUE --IsOutputAFinCaseCtrl=TRUE; 2>&1 | tee ${__RESOURCE_FILE__749}; env:; - name: POD_IP; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: status.podIP; - name: POD_NAME; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: metadata.name; image: konradjk/saige:0.35.8.2.2; imagePullPolicy: IfNotPresent; name: main; resources:; requests:; cpu: ""1""; memory: 500M; terminationMessagePath: /dev/termination-log; terminationMessagePolicy: File; volumeMounts:; - mountPath: /gsa-key; name: gsa-key; - mountPath: /io; name: batch-2554-job-4-8vvgl; - mountPath: /var/run/secrets/kubernetes.io/serviceaccount; name: default-token-8h99c; readOnly: true; dnsPolicy: ClusterFirst; enableServiceLinks: true; nodeName: gke-vdc-preemptible-pool-9c7148b2-4gq2; priority: 500000; priorityClassName: user; restartPolicy: Never; schedulerName: default-scheduler; securityContext: {}; serviceAccount: default; serviceAccountName: default; terminationGracePeriodSeconds: 30; tolerations:; - key: preemptible; value: ""true""; - effect: NoExecute; key: node.kubernetes.io/not-ready; operator: Exists; tolerationSeconds: 300; - effect: NoExecute; key: node.kubernetes.io/unreachable; operator: Exists; tolerationSeconds: 300; volumes:; - name: gsa-key; secret:; defaultMode: 420; secretName: konradk-gsa-key; - name: batch-2554-job-4-8vvgl; persistentVolumeClaim:; claimName: batch-2554-job-4-8vvgl; - name: default-token-8h99c; secret:; defaultMode: ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6466#issuecomment-505429649:14091,log,log,14091,https://hail.is,https://github.com/hail-is/hail/issues/6466#issuecomment-505429649,1,['log'],['log']
Testability,"ple plink files to hailmatrix table using Terra platform in future, I need to figure the problem out. Any advise would be appreciated. ### Version. 0.2.127. ### Relevant log output. ```shell; 2024/01/17 20:20:25 Starting container setup.; 2024/01/17 20:20:26 Done container setup.; 2024/01/17 20:20:27 Starting localization.; 2024/01/17 20:20:34 Localization script execution started...; 2024/01/17 20:20:34 Localizing input gs://fc-5a8938eb-1299-4afc-957f-afb53ef602b9/submissions/e8747e74-47d1-4f52-acfc-1ac7f81d79ba/VUMCBed2HailMatrix/683447d9-9342-4058-bcfc-ba21422d3121/call-Bed2HailMatrix/script -> /cromwell_root/script; 2024/01/17 20:20:36 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bed -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bed; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.fam -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.fam; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bim -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bim; Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.fam...; / [0 files][ 0.0 B/910.3 KiB] / [1 files][910.3 KiB/910.3 KiB] Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.bim...; / [1 files][910.3 KiB/369.7 MiB] - - [1 files][ 51.9 MiB/369.7 MiB] \ | | [1 files][107.6 MiB/369.7 MiB] / - - [1 files][162.3 MiB/369.7 MiB] \ \ [1 files][213.9 MiB/369.7 MiB] | / / [1 files][286.6 MiB/369.7 MiB] - \ \ [1 files][342.1 MiB/369.7 MiB] |; Operation completed over 2 objects/369.7 MiB.; | [2 files][369.7 MiB/369.7 MiB] 2024/01/17 20:59:27 Localization script execution complete.; 2024/01/17 20:59:38 Done localization.; 2024/01/17 20:59:39 Running user action: docker run -v /mnt/local-disk:/cromwell_root --entrypoint=/bin/bash hailgenetics/hail@sha256:3f22576793ce3161893aed2bd40949b1fc822d2b7e6517dc0ac993b62badaff8 /cromwell_root/script; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp.81879b1c; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp.81879b1c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:9973,sandbox,sandbox,9973,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['sandbox'],['sandbox']
Testability,"ple, if I replace ""implicatedSample"" by pasting the body in the closure instead, then the serialization error at that point goes away. but there are a bunch of other ones from the toLine below. ```; org.apache.spark.SparkException: Task not serializable; at org.apache.spark.util.ClosureCleaner$.ensureSerializable(ClosureCleaner.scala:166); at org.apache.spark.util.ClosureCleaner$.clean(ClosureCleaner.scala:158); at org.apache.spark.SparkContext.clean(SparkContext.scala:1622); at org.apache.spark.rdd.RDD.map(RDD.scala:286); at org.broadinstitute.hail.methods.MendelErrors.writeMendel(MendelErrors.scala:143); at org.broadinstitute.hail.methods.MendelErrorsSuite.test(MendelErrorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.ru",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1275,test,testng,1275,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['test'],['testng']
Testability,"pling rate of; 1/30. This rate reduces if the VM is under load. This rate is immutable to us. 2. Within an ""aggregation interval"", packets are aggregated into ""records"" which are keyed (my term); by source & destination. There are currently six choices for aggregation interval: 5s, 30s, 1m,; 5m, 10m, and 15m. 3. Records are sampled. The sampling rate is a user configured floating point number (precision; unclear) between 0 and 1. 4. Metadata is optionally added to the records. The metadata captures information about the source; and destination VM such as project id, VM name, zone, region, GKE pod, GKE service, and geographic; information of external parties. The user may elect to receive all metadata, no metadata, or a; specific set of metadata fields. 5. The records are written to Google Cloud Logging. The pricing of VPC Flow Logs is described at the [network pricing page](https://cloud.google.com/vpc/network-pricing#network-telemetry). Notice that, if logs are only sent to Cloud Logging (not to BigQuery, Pub/Sub, or Cloud Storage):. > If you store your logs in Cloud Logging, logs generation charges are waived, and only Logging charges apply. I believe in this phrase ""logs generation charges"" refers to *VPC Flow logs* generation charges. The Google Cloud Logging [pricing page](https://cloud.google.com/stackdriver/pricing#google-clouds-operations-suite-pricing) indicates that, after 50 GiB of free logs, the user is charged 0.50 USD per GiB of logs. Storage is free for thirty days and 0.01 USD per GiB for each additional day. We can calculate the cost of our logs as follows. Refer to the [definition of the record format](https://cloud.google.com/vpc/docs/flow-logs#record_format) for details. ```python3; ip_string = len(""123.123.123.123""); ip_connection = 4 + ip_string + ip_string + 4 + 4; date_time = len(""1937-01-01T12:00:27.87+00:20""); record_bytes = sum((; ip_connection,; max(len('SRC'), len('DEST')),; 8,; 8,; 8,; date_time,; date_time,; )); assert record_bytes == 1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12883:1671,log,logs,1671,https://hail.is,https://github.com/hail-is/hail/pull/12883,2,"['Log', 'log']","['Logging', 'logs']"
Testability,"ployment my script ran against.; - Taking the `deploy.yaml` from the `deploy query` step of the dev deploy, adding the `TEST_VALUE` environment variable with some value and saving it as `new-deploy.yaml`; - Issuing the first wait request (for 50 seconds) (`https://internal.hail.populationgenomics.org.au/$NAMESPACE/query/api/v1alpha/wait?duration=50`); - Issuing the new deploy with:; ```bash; kubectl -n $NAMESPACE apply -f new-deploy.yaml; kubectl -n $NAMESPACE rollout status --timeout=10m deployment query; ```; - When the new pod is created (seen with `kubectl --namespace $NAMESPACE get pod`), issue the second request to the wait method.; - If all goes well, you should have:; - termination logs like those below,; - the first request successfully fulfilled with the response of env value being None (filled by the first pod); - The second request successfully filled, but has the value of the environment value, the one you set in the deploy.yaml (it got scheduled to the new node). Termination logs:. ```; {""severity"": ""INFO"", ""levelname"": ""INFO"", ""asctime"": ""2021-02-24 23:22:40,472"", ""filename"": ""query.py"", ""funcNameAndLine"": ""on_shutdown:253"", ""message"": ""On shutdown request received, with 2 tasks left"", ""hail_log"": 1}; ++ term; ++ kill -TERM 7; + true; + '[' no == yes ']'; + trap - SIGTERM SIGINT; + wait 7; {""severity"": ""INFO"", ""levelname"": ""INFO"", ""asctime"": ""2021-02-24 23:23:26,004"", ""filename"": ""hail_logging.py"", ""funcNameAndLine"": ""log:40"", ""message"": ""https GET /michaelfranklin/query/api/v1alpha/wait done in 50.029999999998836s: 200"", ""remote_address"": ""10.28.127.3"", ""request_start_time"": ""[24/Feb/2021:23:22:35 +0000]"", ""request_duration"": 50.029999999998836, ""response_status"": 200, ""x_real_ip"": ""124.170.20.28"", ""hail_log"": 1}; {""severity"": ""INFO"", ""levelname"": ""INFO"", ""asctime"": ""2021-02-24 23:23:26,005"", ""filename"": ""query.py"", ""funcNameAndLine"": ""on_shutdown:255"", ""message"": ""Tasks have all completed."", ""hail_log"": 1}; ```. Test duration endpoint; ```python; @ro",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10106:1527,log,logs,1527,https://hail.is,https://github.com/hail-is/hail/pull/10106,1,['log'],['logs']
Testability,plus some router config fixes. Mainly I'm PR'ing this so I can use the cached base image when testing.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6936:94,test,testing,94,https://hail.is,https://github.com/hail-is/hail/pull/6936,1,['test'],['testing']
Testability,ply$27.apply(ContextRDD.scala:359); 	at is.hail.sparkextras.ContextRDD$$anonfun$run$1$$anonfun$apply$5.apply(ContextRDD.scala:139); 	at is.hail.sparkextras.ContextRDD$$anonfun$run$1$$anonfun$apply$5.apply(ContextRDD.scala:139); 	at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:59); 	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:104); 	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:48); 	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:310); 	at scala.collection.AbstractIterator.to(Iterator.scala:1336); 	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:302); 	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1336); 	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:289); 	at scala.collection.AbstractIterator.toArray(Iterator.scala:1336); 	at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); 	at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); 	at org.apache.spark.scheduler.Task.run(Task.scala:108); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:338); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). Hail version: devel-15f58831fe57; Error summary: AssertionError: assertion failed; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4263:12329,Assert,AssertionError,12329,https://hail.is,https://github.com/hail-is/hail/issues/4263,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,ply$27.apply(ContextRDD.scala:359); 	at is.hail.sparkextras.ContextRDD$$anonfun$run$1$$anonfun$apply$5.apply(ContextRDD.scala:139); 	at is.hail.sparkextras.ContextRDD$$anonfun$run$1$$anonfun$apply$5.apply(ContextRDD.scala:139); 	at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434); 	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:59); 	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:104); 	at scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:48); 	at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:310); 	at scala.collection.AbstractIterator.to(Iterator.scala:1336); 	at scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:302); 	at scala.collection.AbstractIterator.toBuffer(Iterator.scala:1336); 	at scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:289); 	at scala.collection.AbstractIterator.toArray(Iterator.scala:1336); 	at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); 	at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); 	at org.apache.spark.scheduler.Task.run(Task.scala:108); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:338); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); 	at java.lang.Thread.run(Thread.java:748). Hail version: devel-f80a6f10bc84; Error summary: AssertionError: assertion failed; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4128#issuecomment-412764719:12335,Assert,AssertionError,12335,https://hail.is,https://github.com/hail-is/hail/pull/4128#issuecomment-412764719,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"plyBinaryPrimOp(Add(),GetField(Ref(__iruid_400,struct{x: call, y: int32}),y),GetField(GetTupleElement(Ref(__iruid_401,tuple(struct{AC: array<int32>, AF: array<float64>, AN: int32, homozygote_count: array<int32>})),0),AN))),WrappedArray(AggStateSignature(Map(CallStats() -> AggSignature(CallStats(),ArrayBuffer(int32),ArrayBuffer(call))),CallStats(),None)))))). is.hail.utils.HailException: not a streamable IR: (GetTupleElement 0; (In PCTuple[0:PCArray[PCStruct{x:PCCall,y:PInt32}]] 0)); ...; at is.hail.expr.ir.EmitStream$.is$hail$expr$ir$EmitStream$$emitStream$1(EmitStream.scala:850). ```scala; private def toStream(node: IR): IR = {; node match {; case _: ToStream => node; case _ => {; if(node.typ.isInstanceOf[TContainer]) {; ToStream(node); } else {; node; }; }; }; }; ````. with . ```scala; private def toStream(node: IR): IR = {; node match {; case _: ToStream => node; case _ => {; if(node.typ.isInstanceOf[TContainer]) {; ToStream(node); } else {; node; }; }; }; }. 4 failures in IRSuite, again testArrayAggScan:. Before Lower: ; MakeTuple(ArrayBuffer((0,RunAggScan(GetTupleElement(In(0,PCTuple[0:PCArray[PCStruct{x:PCCall,y:PInt32}]]),0),__iruid_400,Begin(ArrayBuffer(InitOp(0,ArrayBuffer(I32(2)),AggStateSignature(Map(CallStats() -> AggSignature(CallStats(),ArrayBuffer(int32),ArrayBuffer(call))),CallStats(),None),CallStats()))),Begin(ArrayBuffer(SeqOp(0,ArrayBuffer(GetField(Ref(__iruid_400,struct{x: call, y: int32}),x)),AggStateSignature(Map(CallStats() -> AggSignature(CallStats(),ArrayBuffer(int32),ArrayBuffer(call))),CallStats(),None),CallStats()))),Let(__iruid_401,ResultOp(0,WrappedArray(AggStateSignature(Map(CallStats() -> AggSignature(CallStats(),ArrayBuffer(int32),ArrayBuffer(call))),CallStats(),None))),ApplyBinaryPrimOp(Add(),GetField(Ref(__iruid_400,struct{x: call, y: int32}),y),GetField(GetTupleElement(Ref(__iruid_401,tuple(struct{AC: array<int32>, AF: array<float64>, AN: int32, homozygote_count: array<int32>})),0),AN))),WrappedArray(AggStateSignature(Map(CallStat",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-586602113:6771,test,testArrayAggScan,6771,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-586602113,1,['test'],['testArrayAggScan']
Testability,"populate the `aggregated_*_resources_by_date` tables.; 5. In 10-way parallelism (maxes out a 4 core database), randomly populate the tables for each chunk.; 6. From the last offset (original first running batch id), we sequentially process attempts in groups of 100. We take note of where we are at with tracking any updates to the attempts table (`attempts_time_msecs_diff`), populate the `aggregated_*_resources_by_date` tables, and then do a final catchup step where we apply any updates from `attempts_time_msecs_diff` for any attempts that we have already processed.; 7. Once we have reached the ""end"" of the attempts table, we lock all tables of interest especially the `attempts` table, and do one last final processing step before we add the new triggers that will auto-populate the `aggregated_*_resources_by_date` tables.; 8. Then we perform an audit and make sure things look correct. (I might need to change or eliminate the billing_project audit query because there are 5 batches with ~20 jobs that aren't perfectly tracked when we did the original switch over to the new billing tables).; 9. If there are any failures, we revert the triggers back to the original state. Also to note, is the new table for billing_projects is keyed by (billing_project, user) which will make queries much faster so they don't have to scan the batches aggregated resources table. I ran the migration successfully on a full test database and the audit was clean for jobs and batches except for the 5 batches that were running right when we started populating the original aggregated billing tables. . I'd like to gather all feedback and then will run the migration one more time to do a final test. Note, that most of the queries in the migration are not tested. The key thing to double check is the triggers will continue to insert data into the old tables and we get the end points correct (start is inclusive and end is exclusive) as unlike the previous migration, this set of updates is NOT idempotent.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11996:2407,test,test,2407,https://hail.is,https://github.com/hail-is/hail/pull/11996,3,['test'],"['test', 'tested']"
Testability,"port hail as hl. x = [hl.import_vcf(f, force_bgz=True, reference_genome='GRCh38', min_partitions=k).rows().select() for f, k in (; ('hail/src/test/resources/gvcfs/HG00096.g.vcf.gz', 100),; ('hail/src/test/resources/gvcfs/HG00268.g.vcf.gz', 1); )]; hl.Table.multi_way_zip_join(x, 'data', 'new_globals').write('/tmp/foo.ht', overwrite=True); ```; The error:; ```; 2024-02-02 15:39:35.977 Hail: INFO: scanning VCF for sortedness...; 2024-02-02 15:39:37.571 Hail: INFO: Coerced sorted VCF - no additional import work to do; 2024-02-02 15:39:38.925 Hail: INFO: wrote table with 234687 rows in 1 partition to /tmp/__iruid_1841-E0rqVWB0ysj7E0SIeJeumv; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); Cell In[2], line 7; 1 import hail as hl; 3 x = [hl.import_vcf(f, force_bgz=True, reference_genome='GRCh38', min_partitions=k).rows().select() for f, k in (; 4 ('hail/src/test/resources/gvcfs/HG00096.g.vcf.gz', 100),; 5 ('hail/src/test/resources/gvcfs/HG00268.g.vcf.gz', 1); 6 )]; ----> 7 hl.Table.multi_way_zip_join(x, 'data', 'new_globals').write('/tmp/foo.ht', overwrite=True). File <decorator-gen-1242>:2, in write(self, output, overwrite, stage_locally, _codec_spec). File ~/projects/hail/hail/python/hail/typecheck/check.py:584, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 581 @decorator; 582 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 583 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 584 return __original_func(*args_, **kwargs_). File ~/projects/hail/hail/python/hail/table.py:2002, in Table.write(self, output, overwrite, stage_locally, _codec_spec); 1976 """"""Write to disk.; 1977 ; 1978 Examples; (...); 1997 If ``True``, overwrite an existing file at the destination.; 1998 """"""; 2000 hl.current_backend().validate_file(output); -> 2002 Env.backend().execute(; 2003 ir.TableWrite(self._tir, ir.TableNativeWriter(output, overwr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14245:1074,test,test,1074,https://hail.is,https://github.com/hail-is/hail/issues/14245,1,['test'],['test']
Testability,"ppend,; 486 min_block_size,; 487 branching_factor,; 488 tmpdir,; 489 local_tmpdir,; 490 skip_logging_configuration,; 491 optimizer_iterations,; 492 gcs_requester_pays_project=gcs_requester_pays_project,; 493 gcs_requester_pays_buckets=gcs_requester_pays_buckets,; 494 ); 495 if not backend.fs.exists(tmpdir):; 496 backend.fs.mkdir(tmpdir); File /databricks/python/lib/python3.10/site-packages/hail/backend/spark_backend.py:126, in SparkBackend.__init__(self, idempotent, sc, spark_conf, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmpdir, local_tmpdir, skip_logging_configuration, optimizer_iterations, gcs_requester_pays_project, gcs_requester_pays_buckets); 124 jhc = hail_package.HailContext.getOrCreate(jbackend, branching_factor, optimizer_iterations); 125 else:; --> 126 jbackend = hail_package.backend.spark.SparkBackend.apply(; 127 jsc,; 128 app_name,; 129 master,; 130 local,; 131 log,; 132 True,; 133 append,; 134 skip_logging_configuration,; 135 min_block_size,; 136 tmpdir,; 137 local_tmpdir,; 138 gcs_requester_pays_project,; 139 gcs_requester_pays_buckets,; 140 ); 141 jhc = hail_package.HailContext.apply(jbackend, branching_factor, optimizer_iterations); 143 self._jsc = jbackend.sc(); File /databricks/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py:1355, in JavaMember.__call__(self, *args); 1349 command = proto.CALL_COMMAND_NAME +\; 1350 self.command_header +\; 1351 args_command +\; 1352 proto.END_COMMAND_PART; 1354 answer = self.gateway_client.send_command(command); -> 1355 return_value = get_return_value(; 1356 answer, self.gateway_client, self.target_id, self.name); 1358 for temp_arg in temp_args:; 1359 if hasattr(temp_arg, ""_detach""):; File /databricks/spark/python/pyspark/errors/exceptions/captured.py:230, in capture_sql_exception.<locals>.deco(*a, **kw); 226 converted = convert_exception(e.java_exception); 227 if not isinstance(converted, UnknownException):; 228 # Hide where the exception came from that shows a non-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14462:4951,log,log,4951,https://hail.is,https://github.com/hail-is/hail/issues/14462,1,['log'],['log']
Testability,"pport/issues/2090"">pypa/pypi-support#2090</a>).</li>; <li>The upstream repositories for <code>pyasn1</code> and <code>pyasn1-modules</code> are now; in the GitHub organization <a href=""https://github.com/pyasn1/"">https://github.com/pyasn1/</a>.</li>; <li>Added tox runner with a handful of basic jobs</li>; <li>Add RFC3125 providing Electronic Signature Policies</li>; <li>Add RFC5126 providing CMS Advanced Electronic Signatures (CAdES)</li>; <li>Removed support for EOL Pythons 2.4, 2.5, 2.6, 3.2, 3.3 and 3.4.</li>; <li>Improve test routines for RFC5126</li>; <li>Add RFC4387 providing Certificate Store Access via HTTP</li>; <li>Changed assertion in unit tests from Python built-in to <code>unittest</code>; provided</li>; <li>Add RFC8692 providing Algorithm Identifiers for RSASSA-PSS and; ECDSA Using SHAKEs</li>; <li>Add RFC5753 providing CMS Elliptic Curve Cryptography Algorithms</li>; <li>Add RFC3820 providing Proxy Certificates</li>; <li>Add RFC3370 providing Cryptographic Message Syntax (CMS) Algorithms</li>; <li>Add RFC3537 providing HMAC Key Wrapping</li>; <li>Add RFC3739 providing Qualified Certificates</li>; <li>Add RFC2876 providing KEA and SKIPJACK for CMS</li>; <li>Add RFC3058 providing IDEA Encryption Algorithm for CMS</li>; <li>Add RFC3657 providing Camellia Encryption Algorithm for CMS</li>; <li>Add RFC4010 providing SEED Encryption Algorithm for CMS</li>; <li>Add RFC4357 providing Additional Cryptographic Algorithms for Use with; GOST 28147-89, GOST R 34.10-94, GOST R 34.10-2001, and GOST R 34.11-94</li>; <li>Add RFC4490 providing GOST 28147-89, GOST R 34.11-94, GOST R 34.10-94,; and GOST R 34.10-2001 Algorithms for CMS</li>; <li>Add RFC4491 providing GOST R 34.10-94, GOST R 34.10-2001, and; GOST R 34.11-94 Algorithms for certificates and CRLs</li>; <li>Add RFC8696 providing using Pre-Shared Key (PSK) in the CMS</li>; <li>Add RFC5639 providing identifiers for the Brainpool curves in; Elliptic Curve Cryptography</li>; <li>Add RFC5697 providing Other Certific",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12928:4471,test,test,4471,https://hail.is,https://github.com/hail-is/hail/pull/12928,3,"['assert', 'test']","['assertion', 'test', 'tests']"
Testability,"precated in the 6.X series and are now; removed:</p>; <ul>; <li><code>pytest._fillfuncargs</code> function.</li>; <li><code>pytest_warning_captured</code> hook - use <code>pytest_warning_recorded</code> instead.</li>; <li><code>-k -foobar</code> syntax - use <code>-k 'not foobar'</code> instead.</li>; <li><code>-k foobar:</code> syntax.</li>; <li><code>pytest.collect</code> module - import from <code>pytest</code> directly.</li>; </ul>; <p>For more information consult; <a href=""https://docs.pytest.org/en/latest/deprecations.html"">Deprecations and Removals</a> in the docs.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9437"">#9437</a>: Dropped support for Python 3.6, which reached <a href=""https://devguide.python.org/#status-of-python-branches"">end-of-life</a> at 2021-12-23.</p>; </li>; </ul>; <h2>Improvements</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/5192"">#5192</a>: Fixed test output for some data types where <code>-v</code> would show less information.</p>; <p>Also, when showing diffs for sequences, <code>-q</code> would produce full diffs instead of the expected diff.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9362"">#9362</a>: pytest now avoids specialized assert formatting when it is detected that the default <code>__eq__</code> is overridden in <code>attrs</code> or <code>dataclasses</code>.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9536"">#9536</a>: When <code>-vv</code> is given on command line, show skipping and xfail reasons in full instead of truncating them to fit the terminal width.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9644"">#9644</a>: More information about the location of resources that led Python to raise <code>ResourceWarning</code>{.interpreted-text role=&quot;class&quot;} can now; be obtained by",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11571:1466,test,test,1466,https://hail.is,https://github.com/hail-is/hail/pull/11571,3,['test'],['test']
Testability,"preconditions, without generating redundant runtime checks. (I always hate when we're pushed to avoid using code generation abstractions (in this case, just factoring code into smaller functions), because they generate worse code.). The method is pretty simple. SNDArray shapes are now arrays of `SizeValue`, which is a sum type with cases `SizeValueDyn(Value[Long])` and `SizeValueStatic(Long)`. I don't think static sizes occur very often, but it was a simple addition. `SizeValue`s can be compared statically with `==`, or at runtime with `ceq`: the former is true only if we can prove statically that the two sizes must be equal, while the latter emits code to check equality at runtime, using static knowledge to elide dynamic checks where possible. The way we encode static knowledge that two sizes are equal is by using the same local variable to store both. The primary interface to introduce that static knowledge (other than using the same set of sizes to construct multiple SNDArrays), is the method `coerceToShape(cb: CodeBuilder, newShape: Seq[SizeValue]): SNDArrayValue`, which emits code to dynamically assert that `this.shape` agrees with `newShape`, then returns `this` with shape replaced by `newShape`. Thus, `a.coerceToShape(cb, newShape).shape == newShape` will always be true, preserving the static knowledge about the shape of `a`. As a simple example, `gemm` verifies its inputs with (simplifying to the case with no transposes); ```; val Seq(m, n) = C.shapes; val k = A.shapes(1); A.assertHasShape(cb, FastIndexedSeq(m, k), errMsg); B.assertHasShape(cb, FastIndexedSeq(k, n), errMsg); ```; If we call this with; ```; val m, n, k = \\ compute expected dim sizes. \\ emit dynamic size checks once; val A_ = A.coerceToShape(cb, IndexedSeq(m, k)); val B_ = B.coerceToShape(cb, IndexedSeq(k, n)); val C_ = C.coerceToShape(cb, IndexedSeq(m, n)). \\ this generates no new dynamic shape checks; SNDArray.gemm(cb, A, B, C); ```; then we can emit one set of runtime shape assertions, an",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10783:1333,assert,assert,1333,https://hail.is,https://github.com/hail-is/hail/pull/10783,1,['assert'],['assert']
Testability,presumably related to: https://hail.zulipchat.com/#narrow/stream/123010-Hail-0.2E2.20support/topic/mysterious.20behavior/near/182390817 (log posted next message down),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7638#issuecomment-561430746:137,log,log,137,https://hail.is,https://github.com/hail-is/hail/issues/7638#issuecomment-561430746,1,['log'],['log']
Testability,"priate init method. Edit: re-running ./gradlew shadowJar fixes this. Tests are not passing, but seemingly not because of any of these changes. If I checkout last commit in master, they also fail. Furthermore, I can restore all changes from last FS PR manually, and no benefit. ```; HEAD is now at 117c365c3 [ci] also handle batch Ready state (#5909); (hail) alex:~/projects/hail/hail/python:$ pytest test/ -x; ======================================================================================= test session starts ========================================================================================; platform darwin -- Python 3.6.8, pytest-3.8.0, py-1.7.0, pluggy-0.8.1; rootdir: /Users/alex/projects/hail/hail/python, inifile:; plugins: xdist-1.22.2, metadata-1.8.0, html-1.19.0, forked-1.0.2; collected 591 items . test/hail/test_context.py E. ============================================================================================== ERRORS ==============================================================================================; _______________________________________________________________________ ERROR at setup of Tests.test_init_hail_context_twice _______________________________________________________________________. def startTestHailContext():; global _initialized; if not _initialized:; url = os.environ.get('HAIL_TEST_SERVICE_BACKEND_URL'); if url:; hl.init(master='local[2]', min_block_size=0, quiet=True, _backend=hl.backend.ServiceBackend(url)); else:; > hl.init(master='local[2]', min_block_size=0, quiet=True). test/hail/helpers.py:18: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; hail/typecheck/check.py:561: in wrapper; return __original_func(*args_, **kwargs_); hail/context.py:264: in init; _optimizer_iterations,_backend); hail/typecheck/check.py:561: in wrapper; return __original_func(*args_, **kwa",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5878#issuecomment-484651928:1221,Test,Tests,1221,https://hail.is,https://github.com/hail-is/hail/pull/5878#issuecomment-484651928,1,['Test'],['Tests']
Testability,probably can unkey in python to fix this. also need to test.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4508#issuecomment-427574724:55,test,test,55,https://hail.is,https://github.com/hail-is/hail/issues/4508#issuecomment-427574724,1,['test'],['test']
Testability,"prometheus between every ten and twenty minutes. It seems likely that prometheus is spending more than ten minutes to load its database. This is surprising given that the database is a mere 31 GB:. ```; Filesystem Size Used Available Use% Mounted on; overlay 94.3G 46.4G 47.9G 49% /; tmpfs 64.0M 0 64.0M 0% /dev; tmpfs 14.7G 0 14.7G 0% /sys/fs/cgroup; /dev/sdd 49.0G 31.2G 17.8G 64% /prometheus; /dev/sda1 94.3G 46.4G 47.9G 49% /etc/prometheus; /dev/sda1 94.3G 46.4G 47.9G 49% /dev/termination-log; /dev/sda1 94.3G 46.4G 47.9G 49% /etc/resolv.conf; /dev/sda1 94.3G 46.4G 47.9G 49% /etc/hostname; /dev/sda1 94.3G 46.4G 47.9G 49% /etc/hosts; shm 64.0M 0 64.0M 0% /dev/shm; tmpfs 14.7G 12.0K 14.7G 0% /var/run/secrets/kubernetes.io/serviceaccount; tmpfs 14.7G 0 14.7G 0% /proc/acpi; tmpfs 64.0M 0 64.0M 0% /proc/kcore; tmpfs 64.0M 0 64.0M 0% /proc/keys; tmpfs 64.0M 0 64.0M 0% /proc/timer_list; tmpfs 14.7G 0 14.7G 0% /proc/scsi; tmpfs 14.7G 0 14.7G 0% /sys/firmware; ```. Which isn't much larger than it was before the scaling tests. It appears to slowly increase the amount of memory it needs:; ```; 1 0 nobody S 30.9g103.7 1 11.5 /bin/prometheus --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles --web.external; ```. caping out at 31.5 GB (the disk is 31.2 GB). Now, it is presumably trying to recover. It's been up for about 7 minutes. Still unavailable:; ```; /prometheus $ wget localhost:9090/monitoring/prometheus; Connecting to localhost:9090 (127.0.0.1:9090); wget: server returned error: HTTP/1.1 503 Service Unavailable; /prometheus $ ; ```. https://github.com/prometheus/prometheus/issues/5727#issuecomment-510818825; https://github.com/prometheus/prometheus/issues/4324#issuecomment-460243182. ```; # k logs -n monitoring prometheus-0 ; level=info ts=2019-07-31T15:45:51.990Z caller=main.go:286 msg=""no time or size retention was set so using t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6773:1453,test,tests,1453,https://hail.is,https://github.com/hail-is/hail/issues/6773,1,['test'],['tests']
Testability,"prs.items():. /home/hail/hail.zip/hail/matrixtable.py in _process_joins(self, *exprs); 2205 for j in list(e._joins)[::-1]:; 2206 if j.uid not in used_uids:; -> 2207 left = j.join_function(left); 2208 all_uids.extend(j.temp_vars); 2209 used_uids.add(j.uid). /home/hail/hail.zip/hail/matrixtable.py in <lambda>(left); 2157 prefix = 'va'; 2158 joiner = lambda left: (; -> 2159 MatrixTable(left._jvds.annotateRowsVDS(right._jvds, uid))); 2160 else:; 2161 return self.rows().index(*exprs). /usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args); 1131 answer = self.gateway_client.send_command(command); 1132 return_value = get_return_value(; -> 1133 answer, self.gateway_client, self.target_id, self.name); 1134; 1135 for temp_arg in temp_args:. /home/hail/hail.zip/hail/utils/java.py in deco(*args, **kwargs); 236 # this is a hack to suppress the original error's stack trace; 237 if _exception:; --> 238 raise _exception; 239; 240 return deco. FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.variant.MatrixTable.orderedRVDLeftJoinDistinctAndInsert(MatrixTable.scala:982); 	at is.hail.variant.MatrixTable.annotateRowsVDS(MatrixTable.scala:1449); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3119:2320,Assert,AssertionError,2320,https://hail.is,https://github.com/hail-is/hail/issues/3119,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"ps://api.github.com/users/hail-ci-test/received_events"",; ""type"": ""Organization"",; ""site_admin"": false; },; ""html_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""description"": null,; ""fork"": false,; ""url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7"",; ""forks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/forks"",; ""keys_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/keys{/key_id}"",; ""collaborators_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/collaborators{/collaborator}"",; ""teams_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/teams"",; ""hooks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/hooks"",; ""issue_events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/events{/number}"",; ""events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/events"",; ""assignees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/assignees{/user}"",; ""branches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/tags"",; ""blobs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/blobs{/sha}"",; ""git_tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/trees{/sha}"",; ""statuses_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/languages"",; ""stargazers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:2964,test,test,2964,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"ps://batch.hail.is/batches/8043496/jobs/22010 (wlu, all-by-aou). It seems that, on close, we encountered an exception. Google searches have not revealed much of use. There's [this stack overflow issue](https://stackoverflow.com/questions/77003149/java-function-to-upload-files-to-google-cloud-storage-fails-after-updating-packa) where the fix was to use a different part of the API. We're not using `createFrom` though. I can't even find the source code for `JsonResumableSessionFailureScenario`. ### Version. 0.2.124. ### Relevant log output. ```shell; 2023-09-24 01:58:16.721 JVMEntryway: INFO: is.hail.JVMEntryway received arguments:; 2023-09-24 01:58:16.721 JVMEntryway: INFO: 0: /hail-jars/gs:__hail-query-ger0g_jars_13536b531342a263b24a7165bfeec7bd02723e4b.jar.jar; 2023-09-24 01:58:16.721 JVMEntryway: INFO: 1: is.hail.backend.service.Main; 2023-09-24 01:58:16.721 JVMEntryway: INFO: 2: /batch/8cca2fb0e9764b6195f85b899fb76986; 2023-09-24 01:58:16.721 JVMEntryway: INFO: 3: /batch/8cca2fb0e9764b6195f85b899fb76986/log; 2023-09-24 01:58:16.721 JVMEntryway: INFO: 4: gs://hail-query-ger0g/jars/13536b531342a263b24a7165bfeec7bd02723e4b.jar; 2023-09-24 01:58:16.721 JVMEntryway: INFO: 5: worker; 2023-09-24 01:58:16.721 JVMEntryway: INFO: 6: gs://aou_tmp/parallelizeAndComputeWithIndex/OLkY5pgCTBWt2Yw4iCp6WsR2N5drFQmMiQJa7wSE_ik=; 2023-09-24 01:58:16.721 JVMEntryway: INFO: 7: 9571; 2023-09-24 01:58:16.721 JVMEntryway: INFO: 8: 12185; 2023-09-24 01:58:16.721 JVMEntryway: INFO: Yielding control to the QoB Job.; 2023-09-24 01:58:16.722 Worker$: INFO: is.hail.backend.service.Worker 13536b531342a263b24a7165bfeec7bd02723e4b; 2023-09-24 01:58:16.722 Worker$: INFO: running job 9571/12185 at root gs://aou_tmp/parallelizeAndComputeWithIndex/OLkY5pgCTBWt2Yw4iCp6WsR2N5drFQmMiQJa7wSE_ik= with scratch directory '/batch/8cca2fb0e9764b6195f85b899fb76986'; 2023-09-24 01:58:16.729 GoogleStorageFS$: INFO: Initializing google storage client from service account key; 2023-09-24 01:58:17.061 WorkerTimer$: ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721:1044,log,log,1044,https://hail.is,https://github.com/hail-is/hail/issues/13721,1,['log'],['log']
Testability,"ps://github-redirect.dependabot.com/cbeust/testng/pull/2814"">cbeust/testng#2814</a></li>; <li>Streamline TestResult due to expectedExceptions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2815"">cbeust/testng#2815</a></li>; <li>Unexpected test runs count with retry analyzer by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2816"">cbeust/testng#2816</a></li>; <li>Make PackageUtils compliant with JPMS by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2817"">cbeust/testng#2817</a></li>; <li>Ability to retry a data provider during failures by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2820"">cbeust/testng#2820</a></li>; <li>Refactoring by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2821"">cbeust/testng#2821</a></li>; <li>Fixing bug with DataProvider retry by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2822"">cbeust/testng#2822</a></li>; <li>Add config key for callback discrepancy behavior by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2823"">cbeust/testng#2823</a></li>; <li>Upgrading versions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""h",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:3472,test,testng,3472,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"pt_resources.batch_id = NEW.batch_id AND attempt_resources.job_id = NEW.job_id AND attempt_resources.attempt_id = NEW.attempt_id; FOR UPDATE; ON DUPLICATE KEY UPDATE `usage` = aggregated_job_group_resources_v3.`usage` + NAME_CONST('msec_diff_rollup',1671) * quanti. *** (2) HOLDS THE LOCK(S):; RECORD LOCKS space id 376 page no 8 n bits 408 index PRIMARY of table `dgoldste-batch`.`aggregated_billing_project_user_resources_v3` trx id 2486477 lock_mode X locks rec but not gap; Record lock, heap no 228 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 80000034; asc 4;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 810000021b01cd; asc ;;; 6: len 8; hex 80000000001b09e0; asc ;;. Record lock, heap no 249 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 800000ad; asc ;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c050d; asc ;;; 6: len 8; hex 8000000000471350; asc G P;;. Record lock, heap no 266 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 8000008b; asc ;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c0bd1; asc ;;; 6: len 8; hex 80000000004c0108; asc L ;;. Record lock, heap no 273 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 8000000a; asc ;;; 3: len 4; hex 80000038; asc 8;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c17e1; asc ;;; 6: len 8; hex 8000000000370dc0; asc 7 ;;. Record lock, heap no 284 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14380:4556,test,test,4556,https://hail.is,https://github.com/hail-is/hail/issues/14380,1,['test'],['test']
Testability,"pull/89594"">kubernetes/kubernetes#89594</a>, <a href=""https://github.com/wojtek-t""><code>@​wojtek-t</code></a>) [SIG Apps and Testing]</li>; <li>Remove <code>BindTimeoutSeconds</code> from schedule configuration <code>KubeSchedulerConfiguration</code> (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91580"">kubernetes/kubernetes#91580</a>, <a href=""https://github.com/cofyc""><code>@​cofyc</code></a>) [SIG Scheduling and Testing]</li>; <li>Remove kubescheduler.config.k8s.io/v1alpha1 (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/89298"">kubernetes/kubernetes#89298</a>, <a href=""https://github.com/gavinfish""><code>@​gavinfish</code></a>) [SIG Scheduling]</li>; <li>Reserve plugins that fail to reserve will trigger the unreserve extension point (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92391"">kubernetes/kubernetes#92391</a>, <a href=""https://github.com/adtac""><code>@​adtac</code></a>) [SIG Scheduling and Testing]</li>; <li>Resolve regression in <code>metadata.managedFields</code> handling in update/patch requests submitted by older API clients (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91748"">kubernetes/kubernetes#91748</a>, <a href=""https://github.com/apelisse""><code>@​apelisse</code></a>)</li>; <li>Scheduler: optionally check for available storage capacity before scheduling pods which have unbound volumes (alpha feature with the new <code>CSIStorageCapacity</code> feature gate, only works for CSI drivers and depends on support for the feature in a CSI driver deployment) (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92387"">kubernetes/kubernetes#92387</a>, <a href=""https://github.com/pohly""><code>@​pohly</code></a>) [SIG API Machinery, Apps, Auth, Scheduling, Storage and Testing]</li>; <li>Seccomp support has graduated to GA. A new <code>seccompProfile</code> field is added to pod and container securityContext objects. Supp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:12409,Test,Testing,12409,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,pushed a bunch more tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5201#issuecomment-459357328:20,test,tests,20,https://hail.is,https://github.com/hail-is/hail/pull/5201#issuecomment-459357328,1,['test'],['tests']
Testability,put messages on assertion errors,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1317:16,assert,assertion,16,https://hail.is,https://github.com/hail-is/hail/issues/1317,1,['assert'],['assertion']
Testability,put the test back in,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2422#issuecomment-343985863:8,test,test,8,https://hail.is,https://github.com/hail-is/hail/pull/2422#issuecomment-343985863,1,['test'],['test']
Testability,"putting a test in hail-ci-build seems like the wrong thing. We should just run all our tests against a cluster-mode spark, no?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5033#issuecomment-449492847:10,test,test,10,https://hail.is,https://github.com/hail-is/hail/pull/5033#issuecomment-449492847,2,['test'],"['test', 'tests']"
Testability,"py as much as possible from the buffer to the destination, then modify `InputBlockBuffer` so that it can read directly into the region while spilling any remainder into a provided buffer. For large reads this saves O(N_BLOCKS) copies and branches.; 8. `ZstdDecompressCtx.decompressByteArray0` (2017, 80). Yikes. Decompression ain't cheap, but, at least on this dataset, it's ~10x decompression ratio. If we had better datatype-aware compressors (like dictionary coding of strings) maybe we could skip Zstd and use something lighter weight. The remaining methods are pretty minor or would be addressed by one of the above mentioned mitigations. <img width=""1551"" alt=""Screenshot 2023-10-11 at 13 27 34"" src=""https://github.com/hail-is/hail/assets/106194/cfd855d6-8762-4b94-8e53-1ef881fde6ae"">. ---. ### Conclusions. LEB128 should not be a buffer spec for two reasons:; 1. It is too slow to be a our default integer encoding.; 2. InputBuffers and OutputBuffers do not expose vectorized `read` and `write` primitives. We could mitigate the slowness of LEB128 with something like Lemire's [MaskedVByte](https://github.com/lemire/MaskedVByte/tree/master) but only if we can communicate to the bufferspec that we want to read multiple integers at once. But buffer specs are the wrong place to do this. ETypes are supposed to be the interface between our in-memory types and a stream of bytes. It is natural to have an `EArrayInt32LEB128` that reads and writes blocks of integers using LEB128. Moreover, removing LEB128 as a buffer spec means that an EType knows if it is ""fixed-width"" or not. In particular, a struct containing only primitive types would know that it has a fixed bytesize. Reading such an EBaseStruct into a PBaseStruct can be a memcpy of the known bytesize because the on-disk and in-memory types are identical. ---. [1] Retrieved from `cat /Users/dking/projects/hail-data/foo.mt/entries/rows/metadata.json.gz|gunzip | jq '.'`. ### Version. 0.2.124. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13792:7911,log,log,7911,https://hail.is,https://github.com/hail-is/hail/issues/13792,1,['log'],['log']
Testability,"py"", line 155, in main; write_temp_gcs(ht, annotations_ht_path(data_type, location), args.overwrite); File ""/tmp/d30041623ee542dca820faecd29538a9/pyscripts_tyqA4p.zip/gnomad_hail/utils/generic.py"", line 36, in write_temp_gcs; t.write(temp_path, overwrite=True); File ""/tmp/d30041623ee542dca820faecd29538a9/hail-devel-cb98819b64ad.zip/hail/typecheck/check.py"", line 547, in wrapper; return f(*args_, **kwargs_); File ""/tmp/d30041623ee542dca820faecd29538a9/hail-devel-cb98819b64ad.zip/hail/table.py"", line 1183, in write; self._jt.write(output, overwrite, stage_locally, _codec_spec); File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; answer, self.gateway_client, self.target_id, self.name); File ""/tmp/d30041623ee542dca820faecd29538a9/hail-devel-cb98819b64ad.zip/hail/utils/java.py"", line 200, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: AssertionError: assertion failed: type mismatch:; name: global; actual: +Struct{}; expect: Struct{}. Java stack trace:; java.lang.AssertionError: assertion failed: type mismatch:; name: global; actual: +Struct{}; expect: Struct{}; at scala.Predef$.assert(Predef.scala:170); at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:55); at is.hail.expr.ir.TypeCheck$.is$hail$expr$ir$TypeCheck$$check$1(TypeCheck.scala:17); at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:186); at is.hail.expr.ir.Interpret$.apply(Interpret.scala:39); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1636); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapRows.execute(MatrixIR.scala:1147); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapCols.execute(MatrixIR.scala:1364); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.sca",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4127:1300,Assert,AssertionError,1300,https://hail.is,https://github.com/hail-is/hail/issues/4127,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"py<2', 'pandas>0.22,<0.24', 'parsimonious<0.9', 'PyJWT', 'python-json-logger==0.1.11', 'requests>=2.21.0,<2.21.1', 'scipy>1.2,<1.4', 'tabulate==0.8.3', 'slackclient==2.0.0', 'websocket-client', 'sklearn', 'tabulate', 'statsmodels', 'scikit-learn', 'hdbscan', 'matplotlib']; b""Double requirement given: tabulate (already in tabulate==0.8.3, name='tabulate')\nYou are using pip version 10.0.1, however version 19.1.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n""; Traceback (most recent call last):; File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 16, in safe_call; sp.check_output(args, stderr=sp.STDOUT); File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 336, in check_output; **kwargs).stdout; File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 418, in run; output=stdout, stderr=stderr); subprocess.CalledProcessError: Command '('pip', 'install', 'setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupyter', 'tornado<6', 'lxml<5', 'google-cloud==0.32.0', 'ipython<7', 'jgscm<0.2', 'jupyter-spark', 'aiohttp', 'bokeh>1.1,<1.3', 'decorator<5', 'gcsfs==0.2.1', 'hurry.filesize==0.9', 'ipykernel<5', 'nest_asyncio', 'numpy<2', 'pandas>0.22,<0.24', 'parsimonious<0.9', 'PyJWT', 'python-json-logger==0.1.11', 'requests>=2.21.0,<2.21.1', 'scipy>1.2,<1.4', 'tabulate==0.8.3', 'slackclient==2.0.0', 'websocket-client', 'sklearn', 'tabulate', 'statsmodels', 'scikit-learn', 'hdbscan', 'matplotlib')' returned non-zero exit status 1. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 66, in <module>; safe_call(*command); File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 18, in safe_call; print(e.output).decode(); AttributeError: 'NoneType' object has no attribute 'decode'; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:6728,log,logger,6728,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['log'],['logger']
Testability,"pycares seems to have no typing / stubs so lets ignore it via <code>mypy.ini</code></li>; <li>setup: typing exists since Python 3.5</li>; <li>Fix type annotation of gethostbyname()</li>; <li>Updated README</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/saghul/aiodns/blob/master/ChangeLog"">aiodns's changelog</a>.</em></p>; <blockquote>; <h1>3.0.0</h1>; <ul>; <li>Release wheels and source to PyPI with GH actions</li>; <li>Try to make tests more resilient</li>; <li>Don't build universal wheels</li>; <li>Migrate CI to GH Actions</li>; <li>Fix TXT CHAOS test</li>; <li>Add support for CAA queries</li>; <li>Support Python &gt;= 3.6</li>; <li>Bump pycares dependency</li>; <li>Drop tasks.py</li>; <li>Allow specifying dnsclass for queries</li>; <li>Set URL to https</li>; <li>Add license args in setup.py</li>; <li>Converted Type Annotations to Py3 syntax Closes</li>; <li>Only run mypy on cpython versions</li>; <li>Also fix all type errors with latest mypy - pycares seems to have no typing / stubs so lets ignore it via <code>mypy.ini</code></li>; <li>setup: typing exists since Python 3.5</li>; <li>Fix type annotation of gethostbyname()</li>; <li>Updated README</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/saghul/aiodns/commit/cdb33385f46be1e18bc525ccb153c8abc8ac92d4""><code>cdb3338</code></a> Updated changelog</li>; <li><a href=""https://github.com/saghul/aiodns/commit/a57968007a0e6f826e1a8a2160eade23c254bc42""><code>a579680</code></a> Updated README</li>; <li><a href=""https://github.com/saghul/aiodns/commit/efbbcd55493e11ff95cce7845ebe23438c4238aa""><code>efbbcd5</code></a> Release wheels and source to PyPI with GH actions</li>; <li><a href=""https://github.com/saghul/aiodns/commit/0c9ea6f60d5a9306b0c80e6ffea5ccc27c5fa5bd""><code>0c9ea6f</code></a> Try to make tests more resilient</li>; <li><a href=""https://github.com/saghul/aiodns/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11570:1935,stub,stubs,1935,https://hail.is,https://github.com/hail-is/hail/pull/11570,1,['stub'],['stubs']
Testability,pytest and jvm-test pass,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8124#issuecomment-588572988:15,test,test,15,https://hail.is,https://github.com/hail-is/hail/pull/8124#issuecomment-588572988,1,['test'],['test']
Testability,"pytest and jvm-test pass, so it seems the looser assertion can be tightened to make this safer.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8042:15,test,test,15,https://hail.is,https://github.com/hail-is/hail/pull/8042,2,"['assert', 'test']","['assertion', 'test']"
Testability,pytest-asyncio 0.23.* breaks most hail asyncio tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14130:47,test,tests,47,https://hail.is,https://github.com/hail-is/hail/issues/14130,1,['test'],['tests']
Testability,"pytest-asyncio's releases</a>.</em></p>; <blockquote>; <h2>pytest-asyncio 0.18.2</h2>; <hr />; <h2>title: 'pytest-asyncio: pytest support for asyncio'</h2>; <p><a href=""https://pypi.python.org/pypi/pytest-asyncio""><img src=""https://img.shields.io/pypi/v/pytest-asyncio.svg"" alt=""image"" /></a></p>; <p><a href=""https://github.com/pytest-dev/pytest-asyncio/actions?workflow=CI""><img src=""https://github.com/pytest-dev/pytest-asyncio/workflows/CI/badge.svg"" alt=""image"" /></a></p>; <p><a href=""https://codecov.io/gh/pytest-dev/pytest-asyncio""><img src=""https://codecov.io/gh/pytest-dev/pytest-asyncio/branch/master/graph/badge.svg"" alt=""image"" /></a></p>; <p><a href=""https://github.com/pytest-dev/pytest-asyncio""><img src=""https://img.shields.io/pypi/pyversions/pytest-asyncio.svg"" alt=""Supported Python versions"" /></a></p>; <p><a href=""https://github.com/ambv/black""><img src=""https://img.shields.io/badge/code%20style-black-000000.svg"" alt=""image"" /></a></p>; <p>pytest-asyncio is an Apache2 licensed library, written in Python, for; testing asyncio code with pytest.</p>; <p>asyncio code is usually written in the form of coroutines, which makes; it slightly more difficult to test using normal testing tools.; pytest-asyncio provides useful fixtures and markers to make testing; easier.</p>; <pre lang=""{.sourceCode"" data-meta="".python}""><code>@pytest.mark.asyncio; async def test_some_asyncio_code():; res = await library.do_something(); assert b&quot;expected result&quot; == res; </code></pre>; <p>pytest-asyncio has been strongly influenced by; <a href=""https://github.com/eugeniy/pytest-tornado"">pytest-tornado</a>.</p>; <h1>Features</h1>; <ul>; <li>fixtures for creating and injecting versions of the asyncio event; loop</li>; <li>fixtures for injecting unused tcp/udp ports</li>; <li>pytest markers for treating tests as asyncio coroutines</li>; <li>easy testing with non-default event loops</li>; <li>support for [async def]{.title-ref} fixtures and async generator; fixtures</li>; <li>sup",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11510:1257,test,testing,1257,https://hail.is,https://github.com/hail-is/hail/pull/11510,1,['test'],['testing']
Testability,"pytest-asyncio's releases</a>.</em></p>; <blockquote>; <h2>pytest-asyncio 0.20.1</h2>; <hr />; <h2>title: 'pytest-asyncio: pytest support for asyncio'</h2>; <p><a href=""https://pypi.python.org/pypi/pytest-asyncio""><img src=""https://img.shields.io/pypi/v/pytest-asyncio.svg"" alt=""image"" /></a></p>; <p><a href=""https://github.com/pytest-dev/pytest-asyncio/actions?workflow=CI""><img src=""https://github.com/pytest-dev/pytest-asyncio/workflows/CI/badge.svg"" alt=""image"" /></a></p>; <p><a href=""https://codecov.io/gh/pytest-dev/pytest-asyncio""><img src=""https://codecov.io/gh/pytest-dev/pytest-asyncio/branch/master/graph/badge.svg"" alt=""image"" /></a></p>; <p><a href=""https://github.com/pytest-dev/pytest-asyncio""><img src=""https://img.shields.io/pypi/pyversions/pytest-asyncio.svg"" alt=""Supported Python versions"" /></a></p>; <p><a href=""https://github.com/ambv/black""><img src=""https://img.shields.io/badge/code%20style-black-000000.svg"" alt=""image"" /></a></p>; <p>pytest-asyncio is an Apache2 licensed library, written in Python, for; testing asyncio code with pytest.</p>; <p>asyncio code is usually written in the form of coroutines, which makes; it slightly more difficult to test using normal testing tools.; pytest-asyncio provides useful fixtures and markers to make testing; easier.</p>; <pre lang=""{.sourceCode"" data-meta="".python}""><code>@pytest.mark.asyncio; async def test_some_asyncio_code():; res = await library.do_something(); assert b&quot;expected result&quot; == res; </code></pre>; <p>pytest-asyncio has been strongly influenced by; <a href=""https://github.com/eugeniy/pytest-tornado"">pytest-tornado</a>.</p>; <h1>Features</h1>; <ul>; <li>fixtures for creating and injecting versions of the asyncio event; loop</li>; <li>fixtures for injecting unused tcp/udp ports</li>; <li>pytest markers for treating tests as asyncio coroutines</li>; <li>easy testing with non-default event loops</li>; <li>support for [async def]{.title-ref} fixtures and async generator; fixtures</li>; <li>sup",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12390:1257,test,testing,1257,https://hail.is,https://github.com/hail-is/hail/pull/12390,1,['test'],['testing']
Testability,"pytest-asyncio's releases</a>.</em></p>; <blockquote>; <h2>pytest-asyncio 0.20.2</h2>; <hr />; <h2>title: 'pytest-asyncio: pytest support for asyncio'</h2>; <p><a href=""https://pypi.python.org/pypi/pytest-asyncio""><img src=""https://img.shields.io/pypi/v/pytest-asyncio.svg"" alt=""image"" /></a></p>; <p><a href=""https://github.com/pytest-dev/pytest-asyncio/actions?workflow=CI""><img src=""https://github.com/pytest-dev/pytest-asyncio/workflows/CI/badge.svg"" alt=""image"" /></a></p>; <p><a href=""https://codecov.io/gh/pytest-dev/pytest-asyncio""><img src=""https://codecov.io/gh/pytest-dev/pytest-asyncio/branch/master/graph/badge.svg"" alt=""image"" /></a></p>; <p><a href=""https://github.com/pytest-dev/pytest-asyncio""><img src=""https://img.shields.io/pypi/pyversions/pytest-asyncio.svg"" alt=""Supported Python versions"" /></a></p>; <p><a href=""https://github.com/ambv/black""><img src=""https://img.shields.io/badge/code%20style-black-000000.svg"" alt=""image"" /></a></p>; <p>pytest-asyncio is an Apache2 licensed library, written in Python, for; testing asyncio code with pytest.</p>; <p>asyncio code is usually written in the form of coroutines, which makes; it slightly more difficult to test using normal testing tools.; pytest-asyncio provides useful fixtures and markers to make testing; easier.</p>; <pre lang=""{.sourceCode"" data-meta="".python}""><code>@pytest.mark.asyncio; async def test_some_asyncio_code():; res = await library.do_something(); assert b&quot;expected result&quot; == res; </code></pre>; <p>pytest-asyncio has been strongly influenced by; <a href=""https://github.com/eugeniy/pytest-tornado"">pytest-tornado</a>.</p>; <h1>Features</h1>; <ul>; <li>fixtures for creating and injecting versions of the asyncio event; loop</li>; <li>fixtures for injecting unused tcp/udp ports</li>; <li>pytest markers for treating tests as asyncio coroutines</li>; <li>easy testing with non-default event loops</li>; <li>support for [async def]{.title-ref} fixtures and async generator; fixtures</li>; <li>sup",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12453:1257,test,testing,1257,https://hail.is,https://github.com/hail-is/hail/pull/12453,1,['test'],['testing']
Testability,python dataset tests have been restructured to test most functions on both VDS and GDS with for loop,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1596:15,test,tests,15,https://hail.is,https://github.com/hail-is/hail/pull/1596,2,['test'],"['test', 'tests']"
Testability,python tests are fucked. will look tomorrow.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7959#issuecomment-580019710:7,test,tests,7,https://hail.is,https://github.com/hail-is/hail/pull/7959#issuecomment-580019710,1,['test'],['tests']
Testability,"python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2>v2.7.0</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-logging/blob/main/CHANGELOG.md"">google-cloud-logging's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <u",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:4816,log,logging,4816,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,qmOq13; 	|> content-range: bytes */*; 	| ; 	|< HTTP/1.1 308 Resume Incomplete; 	|< content-length: 0; 	|< content-type: text/plain; charset=utf-8; 	|< x-guploader-uploadid: ADPycdv7y3A6GjTh6Kv7vrUu2ap2Kv0peLVWsVTAghIs7RCZk9X3fI1BDkeHag1cd9g3etP2sS4f13bN6iJPU_sbnRnyRE91VPtjUpuYLPqmOq13; 	| ; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:185) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:117) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:98) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionQueryTask.call(JsonResumableSessionQueryTask.java:100) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.query(JsonResumableSession.java:57) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.lambda$put$0(JsonResumableSession.java:73) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.Retrying.lambda$run$0(Retrying.java:102) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at com.google.api.gax.retrying.DirectRetryingExec,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:8822,test,test-,8822,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,"qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false input=[(RodBinding name=input source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.unfiltered.vcf)] recal_file=(RodBinding name=recal_file source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.recal) tranches_file=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.tranches out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub ts_filter_level=98.5 ignore_filter=null mode=SNP filter_mismatching_base_and_quals=false""; ##CombineVariants=""analysis_type=CombineVariants input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.padded.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta nonDeterministicRandomSeed=false disableRandomization=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_legacy_downsampler=false baq=OFF baqGapOpenPenalty=40.0 fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false performanceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defa",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:1953,stub,stubs,1953,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,query] Fix and reenable flaky ordering tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8271:39,test,tests,39,https://hail.is,https://github.com/hail-is/hail/pull/8271,1,['test'],['tests']
Testability,"quest; headers=headers); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/rest.py"", line 231, in GET; query_params=query_params); File ""/usr/local/lib/python3.6/dist-packages/kubernetes/client/rest.py"", line 222, in request; raise ApiException(http_resp=r); {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:39,924"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""mark_complete:591"", ""message"": ""no logs for batch-9-job-1-c8b9b2 due to previous error, rescheduling pod Error: (400)\nReason: Bad Request\nHTTP response headers: HTTPHeaderDict({'Audit-Id': '6a744afc-154f-4b48-b4bb-51a15078d999', 'Content-Type': 'application/json', 'Date': 'Thu, 11 Jul 2019 14:19:39 GMT', 'Content-Length': '179'})\nHTTP response body: {\""kind\"":\""Status\"",\""apiVersion\"":\""v1\"",\""metadata\"":{},\""status\"":\""Failure\"",\""message\"":\""container \\\""main\\\"" in pod \\\""batch-9-job-1-c8b9b2\\\"" is terminated\"",\""reason\"":\""BadRequest\"",\""code\"":400}\n\n""}; ```. And finally, this k8s refresh loop sequence repeats until CI kills the tests due to a timeout. ```; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:23:41,070"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""refresh_k8s_state:1261"", ""message"": ""started k8s state refresh""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:23:41,085"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""refresh_k8s_pods:1210"", ""message"": ""k8s had 3 pods""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:23:41,088"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (11, 1, 'output') with pod batch-11-job-1-4f1118""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:23:41,090"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (11, 2, 'output') with pod batch-11-job-2-ad1587""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:23:41,093"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (11, 3, 'output') with pod batch-11-job-3-d826dd""}; {",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:14741,test,tests,14741,https://hail.is,https://github.com/hail-is/hail/issues/6617,1,['test'],['tests']
Testability,"r example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.5.post1</h2>; <h1>0.23.5 (2024-02-09)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; <li>Prevent DeprecationWarning about internal use of <code>asyncio.get_event_loop()</code> from affecting test cases <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/757"">#757</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.5</h2>; <h1>0.23.5 (2024-02-09)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; <li>Prevent Deprecation",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:2035,test,tests,2035,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['tests']
Testability,"r node syslogs as well as the Hail log file. For some reason all logs other than the Hail logs are missing from this file. We separately need to determine why all the Spark logs etc. are missing. Based on the syslog, after system start up and just before the Jupyter notebook starts, the system is already using ~8,500MiB:; ```; Nov 22 14:29:51 vds-cluster-91f3f4c1-b737-m earlyoom[4115]: mem avail: 43808 of 52223 MiB (83.89%), swap free: 0 of 0 MiB ( 0.00%); ```; So, the effective maximum memory that Hail could possibly use is around 43808MiB. After the Notebook and Spark initialize we're down to 42,700 MiB (about ~1000MiB more in use).; ```; Nov 22 14:30:06 vds-cluster-91f3f4c1-b737-m earlyoom[4115]: mem avail: 42760 of 52223 MiB (81.88%), swap free: 0 of 0 MiB ( 0.00%); ```. `hailctl` sets the VM RAM limit to 80% of the instance type's memory, so 80% * 52GiB = 42598MiB. This means the JVM is permitted to effectively use all the remaining memory. At time of sigkill the total memory allocated by the JVM was about 2000MiB below the max heap size. Note that the heap is contained within all memory allocated by the JVM.; ```; Nov 22 15:31:05 vds-cluster-91f3f4c1-b737-m earlyoom[4115]: mem avail: 43 of 52223 MiB ( 0.08%), swap free: 0 of 0 MiB ( 0.00%); Nov 22 15:31:09 vds-cluster-91f3f4c1-b737-m earlyoom[4115]: low memory! at or below SIGTERM limits: mem 0.12%, swap 1.00%; Nov 22 15:31:09 vds-cluster-91f3f4c1-b737-m earlyoom[4115]: sending SIGTERM to process 8421 uid 0 ""java"": badness 1852, VmRSS 40578 MiB; ```. Indeed, the VmRSS is the memory in use from the kernel's perspective so it includes any off-heap memory created by Hail. The Hail log indicates the region pools are tiny, ~10s of MiB. Not a concern. After the JVM is killed, memory jumps back up to 40683MiB (which checks out, that's roughly what the killed process was using).; ```; Nov 22 15:31:10 vds-cluster-91f3f4c1-b737-m earlyoom[4115]: mem avail: 40683 of 52223 MiB (77.90%), swap free: 0 of 0 MiB ( 0.00%); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13960#issuecomment-1832531419:2461,log,log,2461,https://hail.is,https://github.com/hail-is/hail/issues/13960#issuecomment-1832531419,1,['log'],['log']
Testability,"r pods, stored in pod and job tables as json. See Pod.status and Container.status in worker.py for the format. Example at the end. Note, ""container_statuses"" items have a field ""container_status"", because container is used in two ways: as a substep of a pod/job, and as docker container. My last renaming proposal got shot down, but we clearly need to improve this in a later PR.; - Heavily reworked worker.py. I believe this fixes https://github.com/hail-is/hail/issues/7350. The main design idea is to having all state creation and cleanup in Pod.run and Container.run.; - worker: Just support pods/status and pods/log, not container level status or logs.; - Pod now writes final status, not containers. Individual containers write their logs.; - I time all the steps of the Pod container (creating, starting, running, uploading log, etc.) with a timing called ""runtime"" which is how long the docker container itself took to start/run. That's usually 4-6 seconds. However, if you log into a machine and run `docker run --rm ubuntu:18.04 echo hi` it takes 1-2 seconds. It would be good to find out where the extra 3-4 seconds are coming from (I feel like @jigold might have some insight into this. Comparing our container config to the docker command line's might be useful here.); - Stop using (value, err) style exception handling. I think we should be able to design this with very little explicit exception handling, mainly in critical blocks to maintain the program invariants.; - Pods can have error status in 1 of 3 ways: the pod itself failed (e.g. couldn't read k8s secrets), one of the pod containers error out (e.g. pull failed due to invalid image), and the docker container finished but the final container status had an ""Error"" field. Next step is to remove pods and merge the pod and job tables. ```; {; ""name"": ""batch-2-job-1"",; ""batch_id"": 2,; ""job_id"": 1,; ""user"": ""test"",; ""state"": ""succeeded"",; ""container_statuses"": {; ""setup"": {; ""name"": ""setup"",; ""state"": ""succeeded"",; ""timing",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7354:1119,log,log,1119,https://hail.is,https://github.com/hail-is/hail/pull/7354,1,['log'],['log']
Testability,r | resource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4063028160 |; | test | test | 6 | 1 | 189760 |; | test | test | 6 | 3 | 607168 |; | test | test | 6 | 4 | 749952 |; | test | test | 6 | 5 | 46912 |; | test | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1479,test,test,1479,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,r$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]; 	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_382]; Caused by: is.hail.relocated.com.google.cloud.storage.StorageException: Missing Range header in response; 	|> PUT https://storage.googleapis.com/upload/storage/v1/b/1-day/o?name=parallelizeAndComputeWithIndex/al3OJfYZMMNoi9F2jvcAf0jBirVTayRVqro03dnIa1g%3D/result.7028&uploadType=resumable&upload_id=ADPycdv7y3A6GjTh6Kv7vrUu2ap2Kv0peLVWsVTAghIs7RCZk9X3fI1BDkeHag1cd9g3etP2sS4f13bN6iJPU_sbnRnyRE91VPtjUpuYLPqmOq13; 	|> content-range: bytes */*; 	| ; 	|< HTTP/1.1 308 Resume Incomplete; 	|< content-length: 0; 	|< content-type: text/plain; charset=utf-8; 	|< x-guploader-uploadid: ADPycdv7y3A6GjTh6Kv7vrUu2ap2Kv0peLVWsVTAghIs7RCZk9X3fI1BDkeHag1cd9g3etP2sS4f13bN6iJPU_sbnRnyRE91VPtjUpuYLPqmOq13; 	| ; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:185) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:117) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:98) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionQueryTask.call(JsonResumableSessionQueryTask.java:100) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.query(JsonResumableSession.java:57) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:8301,test,test-,8301,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,"r(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/rows/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(tr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:10871,test,test,10871,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['test'],['test']
Testability,"r. I think this is currently impossible due to lack of permissions, but we should either explicitly prohibit this or ensure our solution encompasses it. In particular, I am concerned OpenID could be used to grant permission for a GCP identity to write to S3 or ABS. . Pulling an image shouldn’t trigger substantial egress. In the first case, there are three kinds of possible egress:; 1. Egress to the Public Internet.; 2. Egress to a VM in a different Google region.; 3. Egress to a Google Service in a different Google region (e.g. uploading to a bucket in a different region). I believe (2) and (3) are charged equivalently. (1) is simply Internet egress pricing. In (3), I’m not sure who pays the egress from a VM to a bucket in a different region. I assume the VM owner. In all three cases, the destination’s location matters. For public Internet egress, we can use GeoIP to determine the region of the planet. I’m not sure if we can determine the region of (2) and (3). If we can’t, we should either prevent such traffic or we should charge the maximum egress. A final caveat is that we use Premium Networking. As a result, our traffic can use Google’s internal backbone. It’s not clear to me if this means that a packet from us-central to a public IP in Australia incurs just Internet egress or that *and* a region-to-region egress to pay for the use of GCP’s internal global backbone. The priority of various considerations:; 1. Top priority within this issue is to track and recover costs. Even if this means charging a flat fee across all possible kinds of egress. Even if that fee is substantially higher than the real cost to us.; 2. Second priority is to surface this information to the user. Simply providing, in the job page, the usage and cost of each resource for this job.; 3. Fine grained egress so that users can actually intentionally use it at cost or near cost to, for example, move data between clouds or regions. . ### Version. 0.2.120. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13428:2398,log,log,2398,https://hail.is,https://github.com/hail-is/hail/issues/13428,1,['log'],['log']
Testability,r.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWrite,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4991,Test,TestNG,4991,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['Test'],['TestNG']
Testability,r.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWri,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4798,Test,TestNG,4798,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,1,['Test'],['TestNG']
Testability,r.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.Retrying.run(Retrying.java:99) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.put(JsonResumableSession.java:68) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.ApiaryUnbufferedWritableByteChannel.internalWrite(ApiaryUnbufferedWritableByteChannel.java:114) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.ApiaryUnbufferedWritableByteChannel.writeAndClose(ApiaryUnbufferedWritableByteChannel.java:65) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.UnbufferedWritableByteChannelSession$UnbufferedWritableByteChannel.writeAndClose(UnbufferedWritableByteChannelSession.java:40) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.DefaultBufferedWritableByteChannel.close(DefaultBufferedWritableByteChannel.java:166) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.StorageByteChannels$SynchronizedBufferedWritableByteChannel.close(StorageByteChannels.java:,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:10958,test,test-,10958,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,"r: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 17/08/10 09:10:21 WARN SparkConf: ; SPARK_CLASSPATH was detected (set to '/opt/Software/hail/build/libs/hail-all-spark.jar').; This is deprecated in Spark 1.0+. Please instead use:; - ./spark-submit with --driver-class-path to augment the driver classpath; - spark.executor.extraClassPath to augment the executor classpath; ; 17/08/10 09:10:21 WARN SparkConf: Setting 'spark.executor.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; 17/08/10 09:10:21 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 2.0.2; /_/. Using Python version 2.7.5 (default, Nov 6 2016 00:28:07); SparkSession available as 'spark'.; ```; ----------------------------; ```; >>> rdd = sc.textFile('/hail/test/BRCA1.raw_indel.vcf'); >>> from hail import *; >>> hc = HailContext(sc); hail: info: SparkUI: http://192.168.1.4:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.1-0320a61; ```; ----------------------------------; ```; >>> vds = hc.import_vcf('/hail/test/BRCA1.raw_indel.vcf'); hail: warning: `/hail/test/BRCA1.raw_indel.vcf' refers to no files; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-483>"", line 2, in import_vcf; File ""/opt/Software/hail/python/hail/java.py"", line 112, in handle_py4j; 'Error summary: %s' % (deepest, full, Env.hc().version, deepest)); hail.java.FatalError: HailException: arguments refer to no files. Java stack trace:; is.hail.utils.HailException: arguments refer to no files; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6); 	at is.hail.utils.package$.fatal(package.scala:25); 	at is.hail.io.vcf.LoadVCF$.globAllVCFs(LoadVCF.scala:105); 	at is.hail.HailCo",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-321424071:1649,test,test,1649,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-321424071,1,['test'],['test']
Testability,"r> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | Denial of Service (DoS) <br/>[SNYK-PYTHON-CRYPTOGRAPHY-5914629](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-5914629) | `cryptography:` <br> `3.3.2 -> 41.0.5` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | Missing Cryptographic Step <br/>[SNYK-PYTHON-CRYPTOGRAPHY-6036192](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-6036192) | `cryptography:` <br> `3.3.2 -> 41.0.5` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | Information Exposure <br/>[SNYK-PYTHON-REQUESTS-5595532](https://snyk.io/vuln/SNYK-PYTHON-REQUESTS-5595532) | `requests:` <br> `2.27.1 -> 2.31.0` <br> | No | No Known Exploit . Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5MmJjZjUxZi1jNzEwLTRhODUtOWFmMS01YWUxNzBhODc5N2EiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjkyYmNmNTFmLWM3MTAtNGE4NS05YWYxLTVhZTE3MGE4Nzk3YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13938:7314,test,tested,7314,https://hail.is,https://github.com/hail-is/hail/pull/13938,1,['test'],['tested']
Testability,rVariants$$anonfun$10.apply(Relational.scala:503); 	at is.hail.expr.FilterVariants$$anonfun$10.apply(Relational.scala:500); 	at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:463); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$9$$anon$5.hasNext(OrderedRVD.scala:658); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$9$$anon$5.hasNext(OrderedRVD.scala:658); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$9$$anon$5.hasNext(OrderedRVD.scala:658); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at is.hail.sparkextras.OrderedRDD$$anonfun$apply$5$$anon$2.hasNext(OrderedRDD.scala:194); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at is.hail.sparkextras.PartitionKeyInfo$.apply(PartitionKeyInfo.scala:30); 	at is.hail.sparkextras.OrderedRDD$$anonfun$4.apply(OrderedRDD.scala:72); 	at is.hail.sparkextras.OrderedRDD$$anonfun$4.apply(OrderedRDD.scala:70); 	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsWithIndex$1$$anonfun$apply$25.apply(RDD.scala:820); 	at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsWithIndex$1$$anonfun$apply$25.apply(RDD.scala:820); 	at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:38); 	at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:319); 	at org.apache.spark.rdd.RDD.iterator(RDD.scala:283); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:748). Hail version: devel-08a1543; Error summary: AssertionError: assertion failed; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2743:10304,Assert,AssertionError,10304,https://hail.is,https://github.com/hail-is/hail/issues/2743,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"ractiveshell.py"", line 2910, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-53-73b5a6c78295>"", line 1, in <module>; ht.show(); File ""/Users/laurent/tools/hail-release/devel/hail.zip/hail/typecheck/check.py"", line 547, in wrapper; return f(*args_, **kwargs_); File ""/Users/laurent/tools/hail-release/devel/hail.zip/hail/table.py"", line 1169, in show; print(self._show(n,width, truncate, types)); File ""/Users/laurent/tools/hail-release/devel/hail.zip/hail/table.py"", line 1172, in _show; return self._jt.showString(n, joption(truncate), types, width); File ""/Users/laurent/tools/spark-2.2.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; answer, self.gateway_client, self.target_id, self.name); File ""/Users/laurent/tools/hail-release/devel/hail.zip/hail/utils/java.py"", line 196, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: AssertionError: assertion failed; Java stack trace:; java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:78); at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:7); at is.hail.expr.ir.Emit$.emit(Emit.scala:42); at is.hail.expr.ir.Emit$.apply(Emit.scala:28); at is.hail.expr.ir.Compile$.apply(Compile.scala:49); at is.hail.expr.ir.Compile$.apply(Compile.scala:31); at is.hail.expr.ir.Compile$.apply(Compile.scala:62); at is.hail.expr.TableExplode.execute(Relational.scala:2201); at is.hail.expr.TableUnkey.execute(Relational.scala:1883); at is.hail.expr.TableMapRows.execute(Relational.scala:2090); at is.hail.expr.TableKeyBy.execute(Relational.scala:1846); at is.hail.expr.TableMapRows.execute(Relational.scala:2090); at is.hail.table.Table.value$lzycompute(Table.scala:243); at is.hail.table.Table.value(Table.scala:238); at is.hail.table.Table.x$5$lzycompute(Table.scala:246); at is.hail.table.Table.x$5(Table.scala:246); at is.hail.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3744:2613,Assert,AssertionError,2613,https://hail.is,https://github.com/hail-is/hail/issues/3744,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,rage.BaseStorageWriteChannel.close(BaseStorageWriteChannel.java:84) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$close$2(GoogleStorageFS.scala:310) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:280) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$close$1(GoogleStorageFS.scala:310) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23) ~[scala-library-2.12.15.jar:?]; 	at is.hail.services.package$.retryTransientErrors(package.scala:182) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.GoogleStorageFS$$anon$2.close(GoogleStorageFS.scala:308) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159) ~[?:1.8.0_382]; 	at is.hail.utils.package$.using(package.scala:677) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.FS.writePDOS(FS.scala:441) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.FS.writePDOS$(FS.scala:440) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.RouterFS.writePDOS(RouterFS.scala:3) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:13339,test,test-,13339,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,"raises. /scratch/PI/dpwall/computeEnvironments/miniconda2/lib/python2.7/subprocess.pyc in _execute_child(self, args, executable, preexec_fn, close_fds, cwd, env, universal_newlines, startupinfo, creationflags, shell, to_close, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite); 1022 raise; 1023 child_exception = pickle.loads(data); -> 1024 raise child_exception; 1025; 1026. OSError: [Errno 2] No such file or directory. and the second error we would get would be. ------------------------------------------------------------------------- Py4JJavaError Traceback (most recent call last) <ipython-input-6-93fa734a63bb> in <module>() ----> 1 hc_nate = HailContext() /scratch/PI/dpwall/computeEnvironments/hail/python/hail/context.pyc in __init__(self, sc, appName, master, local, log, quiet, append, parquet_compression, min_block_size, branching_factor, tmp_dir) 60 self._jhc = scala_object(self._hail, 'HailContext').apply( 61 jsc, appName, joption(master), local, log, quiet, append, ---> 62 parquet_compression, min_block_size, branching_factor, tmp_dir) 63 64 self._jsc = self._jhc.sc() /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args) 1131 answer = self.gateway_client.send_command(command) 1132 return_value = get_return_value( -> 1133 answer, self.gateway_client, self.target_id, self.name) 1134 1135 for temp_arg in temp_args: /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/pyspark/sql/utils.py in deco(*a, **kw) 61 def deco(*a, **kw): 62 try: ---> 63 return f(*a, **kw) 64 except py4j.protocol.Py4JJavaError as e: 65 s = e.java_exception.toString() /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py in get_return_value(answer, gateway_client, target_id, name) 317 raise Py4JJavaError( 318 ""An error occurred while calling {0}{1}{2}.\n"". --> 319 format(target_id, ""."", name), value) 320 else: 321 raise Py4JError( Py4JJavaError: An error occ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1525:3704,log,log,3704,https://hail.is,https://github.com/hail-is/hail/issues/1525,1,['log'],['log']
Testability,"rand_unif(0, 10) for i in range(10)}); mt = mt.annotate_entries(x = hl.rand_unif(0, 3)); mt = mt.key_rows_by(mt.gene_set, mt.consequence_category); mt = mt.key_cols_by(mt.col_id); return mt. def permute_phenotypes(np_pheno, n_perms):. np_pheno[np_pheno == None] = 2; np_pheno = np_pheno.astype(int); np_pheno_mat = np.repeat(np_pheno, n_perms).reshape(np_pheno.size, n_perms); for i in range(np_pheno_mat.shape[1]):; np.random.shuffle(np_pheno_mat[:,i]). return(np_pheno_mat). def run_regressions_perm(mt, phenotypes, n_perms):. mt = mt.add_col_index(). init = True; for phenotype in phenotypes:. mt = mt.annotate_globals(; pheno_perm = permute_phenotypes(np.array(mt.phenotype_boolean[phenotype].collect()), n_perms)); mt = mt.annotate_globals(; pheno_perm = mt.pheno_perm.map(; lambda x: { hl.array([False, True, hl.null(hl.tbool)])[hl.int(x)] }; )); return mt. mt = make_fake_data(); res = run_regressions_perm(mt, phenotypes_BP, 100); res.show(); ```. error:. ```; java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.expr.ir.agg.Extract$.extract(Extract.scala:331); at is.hail.expr.ir.agg.Extract$.is$hail$expr$ir$agg$Extract$$extract$1(Extract.scala:215); at is.hail.expr.ir.agg.Extract$$anonfun$extract$3.apply(Extract.scala:333); at is.hail.expr.ir.agg.Extract$$anonfun$extract$3.apply(Extract.scala:333); at is.hail.expr.ir.MapIR$$anonfun$apply$1.apply(MapIR.scala:8); at is.hail.expr.ir.MapIR$$anonfun$apply$1.apply(MapIR.scala:7); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.MapIR$.apply(MapIR.scala:",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8325:1530,Assert,AssertionError,1530,https://hail.is,https://github.com/hail-is/hail/issues/8325,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,random impex tests for VCFs,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2092:13,test,tests,13,https://hail.is,https://github.com/hail-is/hail/pull/2092,1,['test'],['tests']
Testability,random test failure...,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6349#issuecomment-504085816:7,test,test,7,https://hail.is,https://github.com/hail-is/hail/pull/6349#issuecomment-504085816,1,['test'],['test']
Testability,"rappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))) PASSED; Running test: Test method testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))) PASSED; Running test: Test method testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0)))) PASSED; Running test: Test method testForwardingOps[3](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyBinaryPrimOp(Add(),ApplyBinaryPrimOp(Add(),I32(2),Ref(x,int32)),I32(1))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[3](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyBinaryPrimOp(Add(),ApplyBinaryPrimOp(Add(),I32(2),Ref(x,int32)),I32(1)))) PASSED; Running test: Test method testForwardingOps[4](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyUnaryPrimOp(Negate(),Ref(x,int32))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[4](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyUnaryPrimOp(Negate(),Ref(x,int32)))) PASSED. BUILD SUCCESSFUL. Total time: 2 mins 12.282 secs; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925:3636,test,testForwardingOps,3636,https://hail.is,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925,11,"['Test', 'test']","['Test', 'test', 'testForwardingOps']"
Testability,"raries for August 2023 Release (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36239"">#36239</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/530cc4378c650f7fe7c7a528dd119993961088a3""><code>530cc43</code></a> mgmt, upgrade network 2023-04 (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36242"">#36242</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/7e3b6a5634be16f65c02523c7d84f9b5b27f4e42""><code>7e3b6a5</code></a> Update TRC API azure core (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36237"">#36237</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/4b74642902b11ee73b0982626f88cfff9c6af166""><code>4b74642</code></a> Redact error output (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36232"">#36232</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/3255f7fcd235d3eede34c8de5abe7102de7dd140""><code>3255f7f</code></a> Add logback classes that are initialized at build time (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36231"">#36231</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/4792bff2b30fb77ca29bd5eaa0502adf68502641""><code>4792bff</code></a> bump the proxy version (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36235"">#36235</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/Azure/azure-sdk-for-java/compare/azure-core-http-netty_1.13.3...azure-core-http-netty_1.13.6"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.azure:azure-core-http-netty&package-manager=gradle&previous-version=1.13.3&new-version=1.13.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflic",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13591:2416,log,logback,2416,https://hail.is,https://github.com/hail-is/hail/pull/13591,1,['log'],['logback']
Testability,"ration a bit by making `rand_unif` into a method, but eventually bailed out to focus on other improvements. I also originally used `vcf.bgz` but bgzip is quite slow and it obscured the slow parts of what I could control, i.e. hail. I finally settled on this test case run against the Spark backend:; ```; import hail as hl; hl.init(master='local[1]'); hl._set_flags(write_ir_files='1'); mt = hl.utils.range_matrix_table(n_rows=1000_000, n_cols=4_000); mt = mt.key_cols_by(s = hl.str(mt.col_idx)); mt = mt.key_rows_by(locus = hl.locus(""1"", mt.row_idx + 1), alleles = ['G', 'T']); mt = mt.annotate_entries(GT = hl.call(mt.row_idx % 2, mt.col_idx % 2)); hl.export_vcf(mt, '/tmp/foo.vcf'); ```; It generates a 15GiB file. My initial tests, which used the balding nichols model, had write times of ~8MiB/s. With all my changes, I once saw 177 MIB/s but I think that may have been a fluke. I see pretty consistent ~110MiB/s in the profiler's estimate of bandwidth to the FileOutputStream. When measured by `time python3 test.py` this script writes at ~93MiB/s. Ideally we would hit 250MiB/s (1/8th of an n1-standard-8's network bandwidth), but, considering that we have to split that bandwidth with reading in most cases, ~91 MiB/s ain't so bad. On main, this pipeline writes at 32 MiB/s. The wins in decreasing order of importance were:; 1. Use buffered I/O. All of our exporters should now use buffered I/O because I changed it in the EmitMethodBuilder. I didn't change it in HadoopFS because (a) Hail's native I/O has buffering and (b) buffering and position tracking requires work.; 2. Avoid String allocation, String to UTF8 conversion, and Array[Byte] allocation in VCF writing. In particular, for the most common types of Calls, I just return the UTF8 byte array in a switch statement.; 3. Use a fast path for diploid genotypes. In the worst case, we did 5 branches and now we do 2 which should be well predicted.; 4. Remove an allocation of a lambda in a hot method in Genotype.scala. Future Work:; ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12733:1221,test,test,1221,https://hail.is,https://github.com/hail-is/hail/pull/12733,1,['test'],['test']
Testability,rayBuffer.scala:49); 	at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:20); 	at is.hail.expr.ir.CompileAndEvaluate$._apply(CompileAndEvaluate.scala:50); 	at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:463); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$2(SparkBackend.scala:499); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:75); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:351); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:496); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.backend.spark.SparkBackend.executeEncode(SparkBackend.scala:495); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); 	at java.base/java.lang.Thread.run(Thread.java:829); ```. ### Version. 0.2.114. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12936:10785,log,log,10785,https://hail.is,https://github.com/hail-is/hail/issues/12936,1,['log'],['log']
Testability,rayIndexOutOfBoundsException: 3. 	at is.hail.check.GenProp1$$anonfun$apply$1.apply$mcVI$sp(Prop.scala:38); 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:160); 	at is.hail.check.GenProp1.apply(Prop.scala:26); 	at is.hail.check.Prop.check(Prop.scala:19); 	at is.hail.expr.ir.OrderingSuite.testBinarySearchOnDict(OrderingSuite.scala:357); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.WrappedArray$ofRef.apply(Wrap,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1235,Test,TestMethodWorker,1235,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['Test'],['TestMethodWorker']
Testability,rces_by_date_v3 where resource_id = 6 limit 100;; +--------------+----------------------------------+------+-------------+-------+------------+; | billing_date | billing_project | user | resource_id | token | usage |; +--------------+----------------------------------+------+-------------+-------+------------+; | 2023-07-13 | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | 2023-07-13 | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | 2023-07-13 | ci | ci | 6 | 0 | 79640784 |; | 2023-07-13 | test | test | 6 | 0 | 4142226688 |; | 2023-07-13 | test | test | 6 | 1 | 108608 |; | 2023-07-13 | test | test | 6 | 2 | 80576 |; | 2023-07-13 | test | test | 6 | 5 | 35648 |; | 2023-07-13 | test | test | 6 | 7 | 578240 |; | 2023-07-13 | test | test | 6 | 9 | 33024 |; | 2023-07-13 | test | test | 6 | 10 | 33472 |; | 2023-07-13 | test | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:8324,test,test,8324,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,"rcular, allow_nan, cls, indent, separators, default, sort_keys, **kw); 229 cls is None and indent is None and separators is None and; 230 default is None and not sort_keys and not kw):; --> 231 return _default_encoder.encode(obj); 232 if cls is None:; 233 cls = JSONEncoder. ~/anaconda2/envs/hail/lib/python3.6/json/encoder.py in encode(self, o); 197 # exceptions aren't as detailed. The list call should be roughly; 198 # equivalent to the PySequence_Fast that ''.join() would do.; --> 199 chunks = self.iterencode(o, _one_shot=True); 200 if not isinstance(chunks, (list, tuple)):; 201 chunks = list(chunks). ~/anaconda2/envs/hail/lib/python3.6/json/encoder.py in iterencode(self, o, _one_shot); 255 self.key_separator, self.item_separator, self.sort_keys,; 256 self.skipkeys, _one_shot); --> 257 return _iterencode(o, 0); 258 ; 259 def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,. ~/anaconda2/envs/hail/lib/python3.6/json/encoder.py in default(self, o); 178 """"""; 179 raise TypeError(""Object of type '%s' is not JSON serializable"" %; --> 180 o.__class__.__name__); 181 ; 182 def encode(self, o):. TypeError: Object of type 'Int32Expression' is not JSON serializable; ```; and; ```; ---------------------------------------------------------------------------; AssertionError Traceback (most recent call last); <ipython-input-7-d049e8be5f76> in <module>(); ----> 1 hl.eval_expr(hl.literal(hl.literal(3))). ~/projects/hail/python/hail/typecheck/check.py in wrapper(*args, **kwargs); 545 def wrapper(*args, **kwargs):; 546 args_, kwargs_ = check_all(f, args, kwargs, checkers, is_method=is_method); --> 547 return f(*args_, **kwargs_); 548 ; 549 update_wrapper(wrapper, f). ~/projects/hail/python/hail/expr/functions.py in literal(x, dtype); 115 elif is_primitive(dtype):; 116 if dtype == tint32:; --> 117 assert isinstance(x, builtins.int); 118 assert tint32.min_value <= x <= tint32.max_value; 119 return construct_expr(Literal('i32#{}'.format(x)), tint32). AssertionError: ; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3708:5118,Assert,AssertionError,5118,https://hail.is,https://github.com/hail-is/hail/issues/3708,4,"['Assert', 'assert']","['AssertionError', 'assert']"
Testability,"rdd cannot be accessed in package org.apache.spark.rdd; override def coalesce(maxPartitions: Int, shuffle: Boolean = false, partitionCoalescer: Option[PartitionCoalescer] = Option.empty); ^; missing or invalid dependency detected while loading class file 'package.class'.; Could not access type DataFrame in package org.apache.spark.sql.package,; because it (or its dependencies) are missing. Check your build definition for; missing or conflicting dependencies. (Re-run with `-Ylog-classpath` to see the problematic classpath.); A full rebuild may help if 'package.class' was compiled against an incompatible version of org.apache.spark.sql.package.; /gpfs/home/tpathare/haillatest/hail/src/main/scala/is/hail/variant/VariantSampleMatrix.scala:1143: ambiguous reference to overloaded definition,; both method coalesce in class OrderedRDD of type (maxPartitions: Int, shuffle: Boolean, partitionCoalescer: Option[<error>])(implicit ord: Ordering[(is.hail.variant.Variant, (is.hail.annotations.Annotation, Iterable[is.hail.variant.Genotype]))])org.apache.spark.rdd.RDD[(is.hail.variant.Variant, (is.hail.annotations.Annotation, Iterable[is.hail.variant.Genotype]))]; and method coalesce in class RDD of type (numPartitions: Int, shuffle: Boolean)(implicit ord: Ordering[(is.hail.variant.Variant, (is.hail.annotations.Annotation, Iterable[is.hail.variant.Genotype]))])org.apache.spark.rdd.RDD[(is.hail.variant.Variant, (is.hail.annotations.Annotation, Iterable[is.hail.variant.Genotype]))]; match argument types (Int,shuffle: Boolean); Error occurred in an application involving default arguments.; start.copy(rdd = start.rdd.coalesce(k, shuffle = shuffle)(null).asOrderedRDD); ^; 5 errors found; :compileScala FAILED. FAILURE: Build failed with an exception. * What went wrong:; Execution failed for task ':compileScala'.; > Compilation failed. * Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. BUILD FAILED. Total time: 42.509 secs",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1327#issuecomment-277494831:3444,log,log,3444,https://hail.is,https://github.com/hail-is/hail/issues/1327#issuecomment-277494831,1,['log'],['log']
Testability,"re than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1ZTRkMTU3Zi04YTdjLTRhNzctYTZlNC00YTdmNGU4Y2I0YzkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjVlNGQxNTdmLThhN2MtNGE3Ny1hNmU0LTRhN2Y0ZThjYjRjOSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""5e4d157f-8a7c-4a77-a6e4-4a7f4e8cb4c9"",""prPublicId"":""5e4d157f-8a7c-4a77-a6e4-4a7f4e8cb4c9"",""dependencies"":[{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.2""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-TORNADO-5537286""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[384],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13323:2466,log,logic,2466,https://hail.is,https://github.com/hail-is/hail/pull/13323,1,['log'],['logic']
Testability,"re the cookie expiry.</li>; </ul>; <h1>2.10.0 (2021-12-30)</h1>; <ul>; <li>Typing support</li>; <li>Add samesite cookie option</li>; <li>Support aioredis 2</li>; </ul>; <h1>2.9.0 (2019-11-04)</h1>; <ul>; <li>Fix memcached expiring time (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/398"">#398</a>)</li>; </ul>; <h1>2.8.0 (2019-09-17)</h1>; <ul>; <li>Make this compatible with Python 3.7+. Import from collections.abc, instead; of from collections. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/373"">#373</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/af0560812d3dc2043565de1108ac41b65caac7d0""><code>af05608</code></a> Release 2.11 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/673"">#673</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/16aa24292125aa59fed1ab4292c6576d800295f1""><code>16aa242</code></a> Bump pytest-mock from 3.6.1 to 3.7.0 (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/674"">#674</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/72d199d40689cb0a83f2b911044ab0ed9f6cc08e""><code>72d199d</code></a> Fix error in example</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/44e60f51bdb1ecfc22fa8bc87e8d025f2f17cd90""><code>44e60f5</code></a> Minor changes to typing. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/672"">#672</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/bf9a5f0b87470dd145cff326b0b05f898f775d94""><code>bf9a5f0</code></a> Fix session resetting before expiry. (<a href=""https://github-redirect.dependabot.com/aio-libs/aiohttp_session/issues/671"">#671</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp-session/commit/36b8a0a5ed2caaaba9d5d3ece8aaf03ca45b6c34""><code>36b8a0a</code></a> Allow",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11544:2096,mock,mock,2096,https://hail.is,https://github.com/hail-is/hail/pull/11544,1,['mock'],['mock']
Testability,"re this error, set spark.driver.allowMultipleContexts = true. The currently running SparkContext was created at: org.apache.spark.SparkContext.<init>(SparkContext.scala:76) is.hail.HailContext$.configureAndCreateSparkContext(HailContext.scala:84) is.hail.HailContext$.apply(HailContext.scala:164) sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) java.lang.reflect.Method.invoke(Method.java:498) py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244) py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357) py4j.Gateway.invoke(Gateway.java:280) py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132) py4j.commands.CallCommand.execute(CallCommand.java:79) py4j.GatewayConnection.run(GatewayConnection.java:214) java.lang.Thread.run(Thread.java:745) at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$2.apply(SparkContext.scala:2278) at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$2.apply(SparkContext.scala:2274) at scala.Option.foreach(Option.scala:257) at org.apache.spark.SparkContext$.assertNoOtherContextIsRunning(SparkContext.scala:2274) at org.apache.spark.SparkContext$.markPartiallyConstructed(SparkContext.scala:2353) at org.apache.spark.SparkContext.<init>(SparkContext.scala:85) at is.hail.HailContext$.configureAndCreateSparkContext(HailContext.scala:84) at is.hail.HailContext$.apply(HailContext.scala:164) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244) at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357) at py4j.Ga",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1525:5867,assert,assertNoOtherContextIsRunning,5867,https://hail.is,https://github.com/hail-is/hail/issues/1525,1,['assert'],['assertNoOtherContextIsRunning']
Testability,"re-sdk-for-java/issues/36385"">#36385</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/db5547e5add394b2639a3a2103b826fd4e9bbe02""><code>db5547e</code></a> mgmt, fix <code>VirtualMachineCustomImage</code> hyperv (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36659"">#36659</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/8d1552bd407977ec4083c42695e11488fd540bba""><code>8d1552b</code></a> Run MHSM tests weekly, disable attestation in Canary (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36651"">#36651</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/3c084d31b9842cc8d1eb7f539e66d15b845a9738""><code>3c084d3</code></a> Fixed response code for <code>mergeCertificate</code> operation. (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36563"">#36563</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/56bc1d19fb7037c97d0acde4d5ba0e516af81b89""><code>56bc1d1</code></a> Re-enabled sign/verify tests for EC keys. (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36591"">#36591</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/37df0ef26143ef41b662995ba8fd91959da1072c""><code>37df0ef</code></a> revert preserve ordering in bulk (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36638"">#36638</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/18e193399fd48d029f326cc54e036c994084c190""><code>18e1933</code></a> Migrate KeyVault Secrets to Autorest and stream-style serialization (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36461"">#36461</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-java/commit/910c88d6e85ba55d62062bf502055dfefa109530""><code>910c88d</code></a> mgmt compute, support convenience API listVmByVmss (<a href=""https://redirect.github.com/Azure/azure-sdk-for-java/issues/36631"">#36631</a>)</li>; <l",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13597:2400,test,tests,2400,https://hail.is,https://github.com/hail-is/hail/pull/13597,1,['test'],['tests']
Testability,"re: test failures, that policy makes sense.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3322#issuecomment-379580976:4,test,test,4,https://hail.is,https://github.com/hail-is/hail/pull/3322#issuecomment-379580976,1,['test'],['test']
Testability,"read</code> is graduated to GA (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108278"">kubernetes/kubernetes#108278</a>, <a href=""https://github.com/kerthcet""><code>@​kerthcet</code></a>)</li>; <li>Feature of <code>NonPreemptingPriority</code> is graduated to GA (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/107432"">kubernetes/kubernetes#107432</a>, <a href=""https://github.com/denkensk""><code>@​denkensk</code></a>)</li>; <li>Feature of <code>PodOverhead</code> is graduated to GA (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108441"">kubernetes/kubernetes#108441</a>, <a href=""https://github.com/pacoxu""><code>@​pacoxu</code></a>)</li>; <li>Fixed OpenAPI serialization of the x-kubernetes-validations field (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/107970"">kubernetes/kubernetes#107970</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>)</li>; <li>Fixed failed flushing logs in defer function when kubelet cmd exit 1. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104774"">kubernetes/kubernetes#104774</a>, <a href=""https://github.com/kerthcet""><code>@​kerthcet</code></a>)</li>; <li>Fixes a regression in v1beta1 PodDisruptionBudget handling of <code>strategic merge patch</code>-type API requests for the <code>selector</code> field. Prior to 1.21, these requests would merge <code>matchLabels</code> content and replace <code>matchExpressions</code> content. In 1.21, patch requests touching the <code>selector</code> field started replacing the entire selector. This is consistent with server-side apply and the v1 PodDisruptionBudget behavior, but should not have been changed for v1beta1. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108138"">kubernetes/kubernetes#108138</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>)</li>; <li>Improve kubectl's user help commands rea",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12196:5865,log,logs,5865,https://hail.is,https://github.com/hail-is/hail/pull/12196,1,['log'],['logs']
Testability,"read_matrix_table(wgs_acaf_bucket). intervals = create_intervals(variants); mt_filtered = mt.filter_rows(hl.literal(intervals).contains(mt.locus)). mt_filtered = split_multi_allelic(mt_filtered). GQ_CUTOFF = 20; mt_filtered = mt_filtered.filter_entries(mt_filtered.GQ >= GQ_CUTOFF). mt_filtered = hl.variant_qc(mt_filtered). ancestry_table = hl.Table.from_pandas(ancestry.astype({""person_id"":str}), key='person_id'); mt_filtered = mt_filtered.annotate_cols(ancestry = ancestry_table[mt_filtered.s].ancestry); mt_hwe = mt_filtered.group_cols_by(mt_filtered.ancestry).aggregate(hwe = hl.agg.hardy_weinberg_test(mt_filtered.GT)); hwe_bucket = os.path.join(bucket, ""hwe_vals.tsv""); mt_hwe.hwe.p_value.export(hwe_bucket). vcf_bucket = os.path.join(bucket, ""variants.vcf""); variant_call_rate_bucket = os.path.join(bucket, ""variant_call_rate.tsv""); mt_filtered.variant_qc.call_rate.export(variant_call_rate_bucket); hl.export_vcf(mt_filtered, vcf_bucket). ```. ### Version. 0.2.107-2387bb00ceee. ### Relevant log output. ```shell; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); /tmp/ipykernel_109/3358609846.py in <module>; ----> 1 mt_hwe.hwe.p_value.export(hwe_bucket). <decorator-gen-637> in export(self, path, delimiter, missing, header). /opt/conda/lib/python3.7/site-packages/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 575 def wrapper(__original_func, *args, **kwargs):; 576 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 577 return __original_func(*args_, **kwargs_); 578 ; 579 return wrapper. /opt/conda/lib/python3.7/site-packages/hail/expr/expressions/base_expression.py in export(self, path, delimiter, missing, header); 1068 **{output_col_name: hl.delimit(column_names, delimiter)}); 1069 file_contents = header_table.union(file_contents); -> 1070 file_contents.export(path, delimiter=delimiter, header=False); 1071 ; 1072 @typecheck_method(n=int,",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13287:1831,log,log,1831,https://hail.is,https://github.com/hail-is/hail/issues/13287,1,['log'],['log']
Testability,"ready for review, of course it's failing the tests right now.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9379#issuecomment-685130327:45,test,tests,45,https://hail.is,https://github.com/hail-is/hail/pull/9379#issuecomment-685130327,1,['test'],['tests']
Testability,ready to approve once tests passing (test_hail_java has current failures),MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8243#issuecomment-594854003:22,test,tests,22,https://hail.is,https://github.com/hail-is/hail/pull/8243#issuecomment-594854003,1,['test'],['tests']
Testability,"ready to look at, all tests pass. open to suggestions for the name, not happy with it. would prefer to just rename the new function, smaller change, limited time.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7958#issuecomment-578213912:22,test,tests,22,https://hail.is,https://github.com/hail-is/hail/pull/7958#issuecomment-578213912,1,['test'],['tests']
Testability,"rebased and testing locally first, then will push and let ol' CI have a go",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2908#issuecomment-367150888:12,test,testing,12,https://hail.is,https://github.com/hail-is/hail/pull/2908#issuecomment-367150888,1,['test'],['testing']
Testability,"rebased on diagonal bug fix, added the Python diagonal test back in",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3164#issuecomment-374383075:55,test,test,55,https://hail.is,https://github.com/hail-is/hail/pull/3164#issuecomment-374383075,1,['test'],['test']
Testability,rebased. one merge change in `object TableValue` `apply` I wasn't sure about (a constructor deleted). tests likely failing. will follow up on both tonight.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6425#issuecomment-509820038:102,test,tests,102,https://hail.is,https://github.com/hail-is/hail/pull/6425#issuecomment-509820038,1,['test'],['tests']
Testability,"recommended `importlib` if it has what you need: https://setuptools.pypa.io/en/latest/pkg_resources.html. I also have to admit that I discovered this while playing around with hail on a Raspberry Pi 4, so it is possible that something else broken caused this failure, but I believe I understand what's happening. Here's my full `pip freeze` for reference:. ```; (venv) (py312) alex@rpi400:~/hail $ pip freeze; aiodns==2.0.0; aiohttp==3.9.3; aiosignal==1.3.1; attrs==23.2.0; avro==1.11.3; azure-common==1.1.28; azure-core==1.30.1; azure-identity==1.15.0; azure-mgmt-core==1.4.0; azure-mgmt-storage==20.1.0; azure-storage-blob==12.19.1; bokeh==3.4.0; boto3==1.34.73; botocore==1.34.73; cachetools==5.3.3; certifi==2024.2.2; cffi==1.16.0; charset-normalizer==3.3.2; click==8.1.7; commonmark==0.9.1; contourpy==1.2.0; cryptography==42.0.5; decorator==4.4.2; Deprecated==1.2.14; dill==0.3.8; frozenlist==1.4.1; google-auth==2.29.0; google-auth-oauthlib==0.8.0; hail==0.2.128; humanize==1.1.0; idna==3.6; isodate==0.6.1; janus==1.0.0; Jinja2==3.1.3; jmespath==1.0.1; jproperties==2.1.1; MarkupSafe==2.1.5; msal==1.28.0; msal-extensions==1.1.0; msrest==0.7.1; multidict==6.0.5; nest-asyncio==1.6.0; numpy==1.26.4; oauthlib==3.2.2; orjson==3.9.11; packaging==24.0; pandas==2.2.1; parsimonious==0.10.0; pillow==10.2.0; plotly==5.20.0; portalocker==2.8.2; protobuf==3.20.2; py4j==0.10.9.5; pyasn1==0.6.0; pyasn1_modules==0.4.0; pycares==4.4.0; pycparser==2.21; Pygments==2.17.2; PyJWT==2.8.0; pyspark==3.3.4; python-dateutil==2.9.0.post0; python-json-logger==2.0.7; pytz==2024.1; PyYAML==6.0.1; regex==2023.12.25; requests==2.31.0; requests-oauthlib==2.0.0; rich==12.6.0; rsa==4.9; s3transfer==0.10.1; scipy==1.11.4; six==1.16.0; sortedcontainers==2.4.0; tabulate==0.9.0; tenacity==8.2.3; tornado==6.4; typer==0.11.1; typing_extensions==4.10.0; tzdata==2024.1; urllib3==2.2.1; uvloop==0.19.0; wrapt==1.16.0; xyzservices==2023.10.1; yarl==1.9.4; ```. ### Version. 0.2.128. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14428:2824,log,logger,2824,https://hail.is,https://github.com/hail-is/hail/issues/14428,2,['log'],"['log', 'logger']"
Testability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2ZWQ3MzlmOS1mZjc4LTQzYzgtYWQwOC05MThjNmRhMWNlOTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjZlZDczOWY5LWZmNzgtNDNjOC1hZDA4LTkxOGM2ZGExY2U5NiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""6ed739f9-ff78-43c8-ad08-918c6da1ce96"",""prPublicId"":""6ed739f9-ff78-43c8-ad08-918c6da1ce96"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13284:2390,log,logic,2390,https://hail.is,https://github.com/hail-is/hail/pull/13284,1,['log'],['logic']
Testability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4YTljZTU5Zi0yOTY3LTQ2MTQtOGE5YS1iY2M5YjU1ZWZkZGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjhhOWNlNTlmLTI5NjctNDYxNC04YTlhLWJjYzliNTVlZmRkZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""8a9ce59f-2967-4614-8a9a-bcc9b55efddd"",""prPublicId"":""8a9ce59f-2967-4614-8a9a-bcc9b55efddd"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13282:2405,log,logic,2405,https://hail.is,https://github.com/hail-is/hail/pull/13282,1,['log'],['logic']
Testability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJjZmU2NDEwYi1jYjQ3LTQ2YzgtOTYwYy1kOWRlY2UxMjI5ZTIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImNmZTY0MTBiLWNiNDctNDZjOC05NjBjLWQ5ZGVjZTEyMjllMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""cfe6410b-cb47-46c8-960c-d9dece1229e2"",""prPublicId"":""cfe6410b-cb47-46c8-960c-d9dece1229e2"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""b7c31419-ec34-40f1-8bc6-ad8303fb329b"",""projectUrl"":""https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13286:2396,log,logic,2396,https://hail.is,https://github.com/hail-is/hail/pull/13286,1,['log'],['logic']
Testability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlMjk5ZmU1Ni0wNGI1LTQ3MzEtYmUzYS03M2ZmYzgxZTZjYjgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImUyOTlmZTU2LTA0YjUtNDczMS1iZTNhLTczZmZjODFlNmNiOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e299fe56-04b5-4731-be3a-73ffc81e6cb8"",""prPublicId"":""e299fe56-04b5-4731-be3a-73ffc81e6cb8"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13283:2397,log,logic,2397,https://hail.is,https://github.com/hail-is/hail/pull/13283,1,['log'],['logic']
Testability,"rect dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmZmEwNjUyZi1hMzc2LTQ0NmQtYWJjNC04NmJhMzUwNmY3MzMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZmYTA2NTJmLWEzNzYtNDQ2ZC1hYmM0LTg2YmEzNTA2ZjczMyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/cbac91bd-aa95-4900-9a06-97404b268d6e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/cbac91bd-aa95-4900-9a06-97404b268d6e?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ffa0652f-a376-446d-abc4-86ba3506f733"",""prPublicId"":""ffa0652f-a376-446d-abc4-86ba3506f733"",""dependencies"":[{""name"":""aiohttp"",""from"":""3.8.4"",""to"":""3.8.5""}],""packageManager"":""pip"",""projectPublicId"":""cbac91bd-aa95-4900-9a06-97404b268d6e"",""projectUrl"":""https://app.snyk.io/org/danking/project/cbac91bd-aa95-4900-9a06-97404b268d6e?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-AIOHTTP-5798483""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[658],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13285:2391,log,logic,2391,https://hail.is,https://github.com/hail-is/hail/pull/13285,1,['log'],['logic']
Testability,"rect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3""><code>e0c5fc0</code></a> feat: trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce""><code>97e32b6</code></a> fix: allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b""><code>a760e02</code></a> feat: add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:11723,log,logging,11723,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,reduce pc relate test time,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2275:17,test,test,17,https://hail.is,https://github.com/hail-is/hail/pull/2275,1,['test'],['test']
Testability,"ree: 366.3 MB); 2018-10-09 15:04:38 SparkContext: INFO: Created broadcast 5 from broadcast at DAGScheduler.scala:1006; 2018-10-09 15:04:38 DAGScheduler: INFO: Submitting 1 missing tasks from ResultStage 5 (MapPartitionsRDD[28] at mapPartitions at ContextRDD.scala:137) (first 15 tasks are for partitions Vector(0)); 2018-10-09 15:04:38 TaskSchedulerImpl: INFO: Adding task set 5.0 with 1 tasks; 2018-10-09 15:04:38 TaskSetManager: INFO: Starting task 0.0 in stage 5.0 (TID 5, localhost, executor driver, partition 0, PROCESS_LOCAL, 4777 bytes); 2018-10-09 15:04:38 Executor: INFO: Running task 0.0 in stage 5.0 (TID 5); 2018-10-09 15:04:38 BlockManager: INFO: Found block rdd_9_0 locally; 2018-10-09 15:04:38 CodeGenerator: INFO: Code generated in 14.135243 ms; 2018-10-09 15:04:38 CodeGenerator: INFO: Code generated in 8.306294 ms; 2018-10-09 15:04:38 Executor: INFO: Finished task 0.0 in stage 5.0 (TID 5). 1119 bytes result sent to driver; ```; </details>. <details>; <summary>Broken hail.log</summary>. ```; 2018-10-09 14:46:38 Hail: INFO: SparkUI: http://10.32.119.167:4040; 2018-10-09 14:46:38 Hail: INFO: Running Hail version devel-e7552fd55a9d; 2018-10-09 14:46:38 SharedState: INFO: loading hive config file: file:/Users/michafla/spark/spark-2.2.0-bin-hadoop2.7/conf/hive-site.xml; 2018-10-09 14:46:38 SharedState: INFO: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir ('file:/Users/michafla/projects/R/pkg/hailr/inst/unitTests/spark-warehouse/').; 2018-10-09 14:46:38 SharedState: INFO: Warehouse path is 'file:/Users/michafla/projects/R/pkg/hailr/inst/unitTests/spark-warehouse/'.; 2018-10-09 14:46:38 ContextHandler: INFO: Started o.s.j.s.ServletContextHandler@28f0ac7{/SQL,null,AVAILABLE,@Spark}; 2018-10-09 14:46:38 ContextHandler: INFO: Started o.s.j.s.ServletContextHandler@49a30f89{/SQL/json,null,AVAILABLE,@Spark}; 2018-10-09 14:46:38 ContextHandler: INFO: Started o.s.j.s.ServletContextHandler@4495af6e{/SQL/execution,null,AVAILABLE,@Spark}; ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:30912,log,log,30912,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['log'],['log']
Testability,reenable all python tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3081:20,test,tests,20,https://hail.is,https://github.com/hail-is/hail/pull/3081,1,['test'],['tests']
Testability,"ref: https://hail.zulipchat.com/#narrow/stream/123010-Hail-0.2E2.20support/topic/Error.20importing.20dbsnp.20VCF/near/177209550. I have confirmed that the test I added fails with the same error laurent saw in the linked conversation, and passes with the change.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7182#issuecomment-537763919:155,test,test,155,https://hail.is,https://github.com/hail-is/hail/pull/7182#issuecomment-537763919,1,['test'],['test']
Testability,"ref=""https://github-redirect.dependabot.com/cbeust/testng/pull/2839"">cbeust/testng#2839</a></li>; <li>Honour regex in dependsOnMethods by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2838"">cbeust/testng#2838</a></li>; <li>Ensure All tests run all the time by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2842"">cbeust/testng#2842</a></li>; <li>Deprecate support for running Spock Tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2846"">cbeust/testng#2846</a></li>; <li>Streamline dependsOnMethods for configurations by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2845"">cbeust/testng#2845</a></li>; <li>Ensure ITestContext available for JUnit4 tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2848"">cbeust/testng#2848</a></li>; <li>Deprecate support for running JUnit tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2849"">cbeust/testng#2849</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/gruenich""><code>@​gruenich</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li><a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li><a href=""https://github.com/spkrka""><code>@​spkrka</code></a> made their first contribu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:7524,test,testng,7524,https://hail.is,https://github.com/hail-is/hail/pull/12665,3,['test'],"['testng', 'tests']"
Testability,"ref=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3""><code>e0c5fc0</code></a> feat: trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>)</li>; <l",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:11164,log,logging,11164,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"ref=""https://github.com/googleapis/python-logging/releases"">google-cloud-logging's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:1114,log,logging,1114,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"ref=""https://github.com/jaraco/keyrings.alt/commit/a2ef1a8e15859bb90f499e6be88c14468f246f8e""><code>a2ef1a8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/jaraco/keyrings.alt/issues/46"">#46</a> from TheChymera/cryptodome</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/dfab9b2846f7a19bebe788046b167a19a579fb45""><code>dfab9b2</code></a> 👹 Feed the hobgoblins (delint).</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/757afb5d5f3ada3d954eff981e9279f4e348f1e9""><code>757afb5</code></a> ⚫ Fade to black.</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/1614724e27124672f723735ff208a59a94d5c252""><code>1614724</code></a> Update changelog</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/fc04fc95dbcb5008c80e1814d2850de35802420a""><code>fc04fc9</code></a> Merge branch 'main' into cryptodome</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/799b8da31058a63fd47a1cf1d341e5acbe3a1e8a""><code>799b8da</code></a> Run crypto tests against both crypto implementations.</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/f36ec65595bc6b59243adc0cb9e5a1a367f1e50b""><code>f36ec65</code></a> Consolidate logic for resolving crypto lib.</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/3de7f4007c4cf749b97dd3acba4b00d7cf0b55a1""><code>3de7f40</code></a> Remove dependency on deprecated keyring.util.properties. Fixes <a href=""https://github-redirect.dependabot.com/jaraco/keyrings.alt/issues/47"">#47</a>.</li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/010fe59c64ffacbc0f97405d3bf21072d811baf1""><code>010fe59</code></a> Merge <a href=""https://github.com/jaraco/skeleton"">https://github.com/jaraco/skeleton</a></li>; <li><a href=""https://github.com/jaraco/keyrings.alt/commit/47c2cb324e20f784289496ef3a7b19a1cd23d196""><code>47c2cb3</code></a> Also update release to v4</li>; <li>Additional commits viewable in <a href=""https://github.com/jaraco/keyrings.alt/compar",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12448:2364,test,tests,2364,https://hail.is,https://github.com/hail-is/hail/pull/12448,1,['test'],['tests']
Testability,"ref=""https://github.com/madzak/python-json-logger/commit/4df12f93928bb66b053d8693e5cd60f38588069a""><code>4df12f9</code></a> removing missed python3.4 support data</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/7c40f4abf46ee6f3b5f4290f12ff3e9872ff9892""><code>7c40f4a</code></a> removed typo around build badge</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/0837da313ea796e353b40b574e3f82591a698caf""><code>0837da3</code></a> added env to git ignore</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/c58d7d4660780e3d4872189f9889200917a8930f""><code>c58d7d4</code></a> manifest will now include readme for setup.py long description. tox and</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/03e831488ce55e4aaf886806b2c66082fb8c4027""><code>03e8314</code></a> Removed references to travis</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/e8a8a20e09d66bcce41010f29b37107eafae6ba4""><code>e8a8a20</code></a> fixed python version mapping and typo in tox name</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/d02050343b58d4585145b5f19b0499d01ef9a1d8""><code>d020503</code></a> initial conversion from travis</li>; <li>Additional commits viewable in <a href=""https://github.com/madzak/python-json-logger/compare/v0.1.11...v2.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=python-json-logger&package-manager=pip&previous-version=0.1.11&new-version=2.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dep",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11467:4182,log,logger,4182,https://hail.is,https://github.com/hail-is/hail/pull/11467,1,['log'],['logger']
Testability,"regarding doc test failure, you need `g.DP`, not `g.dp`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2497#issuecomment-348701713:14,test,test,14,https://hail.is,https://github.com/hail-is/hail/pull/2497#issuecomment-348701713,1,['test'],['test']
Testability,relatedness test tutorial,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12097:12,test,test,12,https://hail.is,https://github.com/hail-is/hail/pull/12097,1,['test'],['test']
Testability,"rements (Krishnan Mahadevan); Fixed: GITHUB-2734: Keep the initial order of listeners (Andrei Solntsev); Fixed: GITHUB-2359: Testng <a href=""https://github.com/BeforeGroups""><code>@​BeforeGroups</code></a> is running in parallel with testcases in the group (Anton Velma); Fixed: Possible StringIndexOutOfBoundsException in XmlReporter (Anton Velma); Fixed: GITHUB-2754: <a href=""https://github.com/AfterGroups""><code>@​AfterGroups</code></a> is executed for each &quot;finished&quot; group when it has multiple groups defined (Anton Velma)</p>; <p>7.5; Fixed: GITHUB-2701: Bump gradle version to 7.3.3 to support java17 build (ZhangJian He); Fixed: GITHUB-2646: Streamline Logging Across TestNG (Krishnan Mahadevan); Fixed: GITHUB-2658: Inheritance + dependsOnMethods (Krishnan Mahadevan)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/cbeust/testng/commit/b94395dea479308ea3fe825269730b960f44d805""><code>b94395d</code></a> Bump version to 7.7.1 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/89dc5845fcb46c26af187e50ea907a7382d06e72""><code>89dc584</code></a> Streamline overloaded assertion methods for Groovy</li>; <li><a href=""https://github.com/cbeust/testng/commit/5ac0021d14f7eb00804fe235aaefc5c2fbce57d1""><code>5ac0021</code></a> Adding release notes</li>; <li><a href=""https://github.com/cbeust/testng/commit/c0e1e772f1fc0ab2142f3a4114a2b8cfe60fa7e1""><code>c0e1e77</code></a> Adjust version reference in deprecation msgs.</li>; <li><a href=""https://github.com/cbeust/testng/commit/011527d9bf0f91a40539f5e5467cc106888810d9""><code>011527d</code></a> Bump version to 7.7.0 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/7846c444a411647f7e401a097224702188c93835""><code>7846c44</code></a> Deprecate support for running JUnit tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/8630a7e8fe12985d71c00212f9362fd38fb0cb9e""><cod",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:14812,test,testng,14812,https://hail.is,https://github.com/hail-is/hail/pull/12665,1,['test'],['testng']
Testability,remove TestUtils.splitMultiHTS,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3742:7,Test,TestUtils,7,https://hail.is,https://github.com/hail-is/hail/pull/3742,1,['Test'],['TestUtils']
Testability,remove ibd-prune and tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2274:21,test,tests,21,https://hail.is,https://github.com/hail-is/hail/pull/2274,1,['test'],['tests']
Testability,remove numeric tests in favor of expected equivalence,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1427:15,test,tests,15,https://hail.is,https://github.com/hail-is/hail/pull/1427,1,['test'],['tests']
Testability,renceGenome.scala:407); 	at is.hail.backend.spark.SparkBackend.$anonfun$pyAddLiftover$2(SparkBackend.scala:613); 	at is.hail.backend.spark.SparkBackend.$anonfun$pyAddLiftover$2$adapted(SparkBackend.scala:612); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:76); 	at is.hail.utils.package$.using(package.scala:657); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:76); 	at is.hail.utils.package$.using(package.scala:657); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:62); 	at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$1(SparkBackend.scala:347); 	at is.hail.backend.spark.SparkBackend.$anonfun$pyAddLiftover$1(SparkBackend.scala:612); 	at is.hail.backend.spark.SparkBackend.$anonfun$pyAddLiftover$1$adapted(SparkBackend.scala:611); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:59); 	at is.hail.backend.spark.SparkBackend.pyAddLiftover(SparkBackend.scala:611); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); 	at java.base/java.lang.Thread.run(Thread.java:829). Hail version: 0.2.12,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13993:4620,log,logTime,4620,https://hail.is,https://github.com/hail-is/hail/issues/13993,1,['log'],['logTime']
Testability,renced case analysis in 2.17.1](https://github.com/googleapis/java-storage/blame/v2.17.1/google-cloud-storage/src/main/java/com/google/cloud/storage/BlobWriteChannel.java). There seems to have been a rewrite [two months ago](https://github.com/googleapis/java-storage/blame/main/google-cloud-storage/src/main/java/com/google/cloud/storage/BlobWriteChannel.java) (here's [the main commit](https://github.com/googleapis/java-storage/commit/1b52a1053130620011515060787bada10c324c0b)). That landed in [2.25.0](https://github.com/googleapis/java-storage/releases/tag/v2.25.0) which was released in July. ```; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:1502,test,test-ezlis,1502,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['test'],['test-ezlis']
Testability,"repare for 1.15 release</li>; <li><a href=""https://github.com/apache/commons-codec/commit/ba81ed5dc06661d931a4bb8f7abaa51ee5300396""><code>ba81ed5</code></a> Use gav=true for the maven central redirect</li>; <li><a href=""https://github.com/apache/commons-codec/commit/cb629f03516e21ba7daeb4dd9a7b5fe3c76fc841""><code>cb629f0</code></a> Update maven central badge</li>; <li><a href=""https://github.com/apache/commons-codec/commit/b8090b34914ef456a1262292b554c7a5e1e623e8""><code>b8090b3</code></a> Fix coverage badge to use the 'master' branch not the default 'trunk'</li>; <li><a href=""https://github.com/apache/commons-codec/commit/fa0562e71e2661768c4d2e324ff978aa2af1be08""><code>fa0562e</code></a> Test Context toString has debugging info</li>; <li><a href=""https://github.com/apache/commons-codec/commit/f39003c953df152ff737474d2d2f27b611963a1c""><code>f39003c</code></a> Test isInAlphabet</li>; <li><a href=""https://github.com/apache/commons-codec/commit/9ac33a12a500bbc3ea40685aac61c95169443957""><code>9ac33a1</code></a> Test all constructors</li>; <li><a href=""https://github.com/apache/commons-codec/commit/3535c17eccb2251fc518aa545a800b4922c8dc35""><code>3535c17</code></a> Test encode of null and empty array with an offset</li>; <li><a href=""https://github.com/apache/commons-codec/commit/e42dfe1ff2f273926fd759abea82b1c7b3021985""><code>e42dfe1</code></a> Fix test names</li>; <li><a href=""https://github.com/apache/commons-codec/commit/536587931cb77538709c57455165379a74e2f04f""><code>5365879</code></a> Test the codec policy property</li>; <li>Additional commits viewable in <a href=""https://github.com/apache/commons-codec/compare/commons-codec-1.11...rel/commons-codec-1.15"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=commons-codec:commons-codec&package-manager=gradle&previous-version=1.11&new-version=1.15)](https://docs.github.com/en/github/managing-security-vulner",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12385:3976,Test,Test,3976,https://hail.is,https://github.com/hail-is/hail/pull/12385,1,['Test'],['Test']
Testability,"replicate with:; ```; mt = hl.import_vcf('src/test/resources/sample2.vcf'); mt = hl.split_multi_hts(mt); mt.write('/tmp/foo.mt', overwrite=True); mt2 = hl.read_matrix_table('/tmp/foo.mt'); mt._same(mt2) # False; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3307:46,test,test,46,https://hail.is,https://github.com/hail-is/hail/issues/3307,1,['test'],['test']
Testability,"repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/languages"",; ""stargazers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/comments{/number}"",; ""issue_comment_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/comments{/number}"",; ""contents_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contents/{+path}"",; ""compare_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/compare/{base}...{head}"",; ""merges_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/merges"",. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 7030 100 6999 100 31 9306 41 --:--:-- --:--:-- --:--:-- 9319; ""archive_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/{archive_format}{/ref}"",; ""downloads_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/downloads"",; ""issues_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues{/number}"",; ""pulls_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/pulls{/number}"",; ""milestones_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/milestones{/number}"",; ""notifications_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/notifications{?since,all,participating}"",; ""labels_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/labels{/name",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:4569,test,test,4569,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"reproduces with this command:. ``` text; hail importvcf src/test/resources/sample.vcf annotatevariants expr -c 'va.filters = ""HELLO""' exportvcf -o /tmp/out.vcf; ```. ``` text; hail: exportvcf: caught exception: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 1.0 failed 1 times, most recent failure: Lost task 0.0 in stage 1.0 (TID 1, localhost): java.lang.ClassCastException: java.lang.String cannot be cast to scala.collection.immutable.Set; at org.broadinstitute.hail.driver.ExportVCF$$anonfun$6.apply(ExportVCF.scala:185); at org.broadinstitute.hail.driver.ExportVCF$$anonfun$6.apply(ExportVCF.scala:185); at scala.Option.map(Option.scala:145); at org.broadinstitute.hail.driver.ExportVCF$.org$broadinstitute$hail$driver$ExportVCF$$appendRow$1(ExportVCF.scala:185); at org.broadinstitute.hail.driver.ExportVCF$$anonfun$run$1$$anonfun$apply$11.apply(ExportVCF.scala:278); at org.broadinstitute.hail.driver.ExportVCF$$anonfun$run$1$$anonfun$apply$11.apply(ExportVCF.scala:276); at scala.collection.Iterator$$anon$11.next(Iterator.scala:328); at scala.collection.Iterator$$anon$11.next(Iterator.scala:328); at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13$$anonfun$apply$6.apply$mcV$sp(PairRDDFunctions.scala:1109); at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13$$anonfun$apply$6.apply(PairRDDFunctions.scala:1108); at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13$$anonfun$apply$6.apply(PairRDDFunctions.scala:1108); at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1206); at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1116); at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1095); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:66); at org.apache.spark.scheduler.Task.run(Task.scala:88); at o",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/785:60,test,test,60,https://hail.is,https://github.com/hail-is/hail/issues/785,1,['test'],['test']
Testability,"requests are processed by one of proxy_pass, fastcgi_pass, uwsgi_pass, scgi_pass, memcached_pass, or grpc_pass, then the special processing is performed. In response to a request with URI equal to this string, but without the trailing slash, a permanent redirect with the code 301 will be returned to the requested URI with the slash appended. The docs appear incomplete, though, because this is a `return` rule, but it gets the 301. Question two: does this redirect `hail.is/docs/foo` to `/docs/0.2/foo`. No, the docs redirect is an `=` or exact match so `hail.is/docs/foo` is a 404. Question three: does this redirect `/hail/overview.html` redirect to `docs/0.1/overview.html`. Yes, the regex for rules two matches `/hail`, `/hail/`, `/hail/overview.html`, etc. and redirects, replacing the hail with `docs/0.1`. One last note: I used 301 Permanent Redirect for the `/hail` since that's a dead url. I used 307 Temporary Redirect for `/docs` since that will change when versions change. Here's a test interaction. I interleaved my curl commands with the logs. ```; $ curl localhost/hail; 172.17.0.1 - - [07/Dec/2018:19:35:30 +0000] ""GET /hail HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:35:30 +0000] ""GET /docs/0.1 HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:35:30 +0000] ""GET /docs/0.1/ HTTP/1.1"" 200 11994 ""-"" ""curl/7.61.0""; $ curl localhost/hail/; 172.17.0.1 - - [07/Dec/2018:19:36:06 +0000] ""GET /hail/ HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:36:06 +0000] ""GET /docs/0.1/ HTTP/1.1"" 200 11994 ""-"" ""curl/7.61.0""; $ curl localhost/hail/overview.html; 172.17.0.1 - - [07/Dec/2018:19:36:27 +0000] ""GET /hail/overview.html HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:36:27 +0000] ""GET /docs/0.1/overview.html HTTP/1.1"" 200 37288 ""-"" ""curl/7.61.0""; $ curl localhost/docs; 172.17.0.1 - - [07/Dec/2018:19:36:37 +0000] ""GET /docs HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:36:37 +0",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4929:2367,test,test,2367,https://hail.is,https://github.com/hail-is/hail/pull/4929,1,['test'],['test']
Testability,"res=false allow_potentially_misencoded_quality_scores=false performanceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false variant=(RodBinding name=variant source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.indels.unfiltered.vcf) mask=(RodBinding name= source=UNBOUND) out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub filterExpression=[FS>200.0, QD<2.0, ReadPosRankSum<-20.0, InbreedingCoeff<-0.8] filterName=[Indel_FS, Indel_QD, Indel_ReadPosRankSum, Indel_InbreedingCoeff] genotypeFilterExpression=[] genotypeFilterName=[] clusterSize=3 clusterWindowSize=0 maskExtension=0 maskName=Mask missingValuesInExpressionsShouldEvaluateAsFailing=false invalidatePreviousFilters=false filter_mismatching_base_and_quals=false""; ##contig=<ID=1,length=248956422>; ##contig=<ID=2,length=242193529>; ##contig=<ID=3,length=198295559>; ##contig=<ID=4,length=190214555>; ##contig=<ID=5,length=181538259>; ##contig=<ID=6,length=170805979>; ##contig=<ID=7,length=159345973>; ##contig=<ID=8,length=145138636>; ##contig=<ID=9,length=138394717>; ##contig=<ID=10,length=133797422>; ##contig=<ID=11,length=135086622>; ##contig=<ID=12,length=133275309>; ##contig=<ID=13,length=114364328>; ##contig=<ID=14,length=107043718>; ##contig=<ID=15,length",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:20600,stub,stubs,20600,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,resource_id = 6 limit 100;; +----------------------------------+------+-------------+-------+------------+; | billing_project | user | resource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4063028160 |; | test | test | 6 | 1 | 189760 |; | test | test | 6 | 3 | 607168 |; | test | test | 6 | 4 | 749952 |; | test | test | 6 | 5 | 46912 |; | test | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1348,test,test,1348,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,"restarting job (9, 1, 'main')""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:23:41,093"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod None""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:23:41,093"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1148"", ""message"": ""job (9, 1, 'main') mark unscheduled""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:23:41,106"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""refresh_k8s_pvc:1237"", ""message"": ""k8s had 3 pvcs""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:23:41,113"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""refresh_k8s_state:1264"", ""message"": ""k8s state refresh complete""}; ```. Because job 1's batch is cancelled, we never restart the job/pod. However, the batch is stuck in an incomplete state. Before this PR's namespace was destroyed, I SSH'ed to the test_batch pod and looked at the batch's status:. ```; root@test-batch:/# curl -H ""Authorization: Bearer $(cat test-jwt/jwt)"" batch.pr-6604-default-ov5tgx24rrou/api/v1alpha/batches/9; {""id"": 9, ""state"": ""running"", ""complete"": false, ""closed"": 1, ""jobs"": [{""batch_id"": 9, ""job_id"": 1, ""state"": ""Running""}; ```. The batch is somehow in the state ""running"" and the only job is also in the; state ""Running"". Only two lines of code transition to the state 'Running'. They; both appear in the suffix of `Job._create_pod`:. ```python; pod, err = await app['k8s'].create_pod(body=pod_template); if err is not None:; if err.status == 409:; log.info(f'pod already exists for job {self.full_id}'); n_updated = await db.jobs.update_record(*self.id, compare_items={'state': self._state}, state='Running'); if n_updated == 0:; log.warning(f'changing the state for job {self.full_id} failed due to the expected state {self._state} not in db'); return; traceback.print_tb(err.__traceback__); log.info(f'pod creation failed for job {self.full_id} '; f'with the following error: {err}'); return. n_updated = a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:17029,test,test-batch,17029,https://hail.is,https://github.com/hail-is/hail/issues/6617,2,['test'],"['test-batch', 'test-jwt']"
Testability,"resting thing is, when I tried to convert the exactly same data in local computer using singularity instead of docker, it worked. Also, for the the other chromosomes with less variants but same samples, such as chr13, it worked well in Terra. Since we will convert multiple plink files to hailmatrix table using Terra platform in future, I need to figure the problem out. Any advise would be appreciated. ### Version. 0.2.127. ### Relevant log output. ```shell; 2024/01/17 20:20:25 Starting container setup.; 2024/01/17 20:20:26 Done container setup.; 2024/01/17 20:20:27 Starting localization.; 2024/01/17 20:20:34 Localization script execution started...; 2024/01/17 20:20:34 Localizing input gs://fc-5a8938eb-1299-4afc-957f-afb53ef602b9/submissions/e8747e74-47d1-4f52-acfc-1ac7f81d79ba/VUMCBed2HailMatrix/683447d9-9342-4058-bcfc-ba21422d3121/call-Bed2HailMatrix/script -> /cromwell_root/script; 2024/01/17 20:20:36 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bed -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bed; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.fam -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.fam; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bim -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bim; Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.fam...; / [0 files][ 0.0 B/910.3 KiB] / [1 files][910.3 KiB/910.3 KiB] Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.bim...; / [1 files][910.3 KiB/369.7 MiB] - - [1 files][ 51.9 MiB/369.7 MiB] \ | | [1 files][107.6 MiB/369.7 MiB] / - - [1 files][162.3 MiB/369.7 MiB] \ \ [1 files][213.9 MiB/369.7 MiB] | / / [1 files][286.6 MiB/369.7 MiB] - \ \ [1 files][342.1 MiB/369.7 MiB] |; Operation completed over 2 objects/369.7 MiB.; | [2 files][369.7 MiB/369.7 MiB] 2024/01/17 20:59:27 Localization script execution complete.; 2024/01/17 20:59:38 Done localization.; 2024/01/17 20:59:39 Running user action: docker run -v /mnt/local-disk:/cromwell_root --entr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:9703,sandbox,sandbox,9703,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['sandbox'],['sandbox']
Testability,"retry in get_userinfo; retry on ClientOSError (client connection error) on timeout; log errno to diagnose future failures. Some of the current errors are ClientOSErrors (ClientConnectionErrors, actually) with strerror ""Connect call failed"" but that doesn't correspond to a standard errno message returned by perror/os.strerror as far as I can tell. So I'm retrying on timeout (good) and logging the errno so we can diagnose future transient failures.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7279:84,log,log,84,https://hail.is,https://github.com/hail-is/hail/pull/7279,2,['log'],"['log', 'logging']"
Testability,retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at o,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:3115,test,testSeekMoreThanMaxInt,3115,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,2,['test'],['testSeekMoreThanMaxInt']
Testability,retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 	at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:317); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:299); 	at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:317); 	at java.io.DataOutputStream.flush(DataOutputStream.java:123); 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158); 	at is.hail.utils.package$.using(package.scala:640); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt(FSSuite.scala:341); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:339); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at o,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:3308,test,testSeekMoreThanMaxInt,3308,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['test'],['testSeekMoreThanMaxInt']
Testability,"return CreateDatabaseStep(; + return CreateDatabase2Step(; params,; json['databaseName'],; json['namespace'],; @@ -1111,12 +1113,12 @@ EOF; attributes={'name': self.name},; secrets=[; {; - 'namespace': self.database_server_config_namespace,; + 'namespace': self.namespace,; 'name': 'database-server-config',; 'mount_path': '/sql-config',; }; ],; - service_account={'namespace': DEFAULT_NAMESPACE, 'name': 'ci-agent'},; + service_account={'namespace': self.namespace, 'name': 'admin'},; input_files=input_files,; parents=[self.create_passwords_job] if self.create_passwords_job else self.deps_parents(),; network='private',; @@ -1125,42 +1127,4 @@ EOF; ); ; def cleanup(self, batch, scope, parents):; - if scope in ['deploy', 'dev'] or self.cant_create_database:; - return; -; - cleanup_script = f'''; -set -ex; -; -commands=$(mktemp); -; -cat >$commands <<EOF; -DROP DATABASE IF EXISTS \\`{self._name}\\`;; -DROP USER IF EXISTS '{self.admin_username}';; -DROP USER IF EXISTS '{self.user_username}';; -EOF; -; -until mysql --defaults-extra-file=/sql-config/sql-config.cnf <$commands; -do; - echo 'failed, will sleep 2 and retry'; - sleep 2; -done; -; -'''; -; - self.cleanup_job = batch.create_job(; - CI_UTILS_IMAGE,; - command=['bash', '-c', cleanup_script],; - attributes={'name': f'cleanup_{self.name}'},; - secrets=[; - {; - 'namespace': self.database_server_config_namespace,; - 'name': 'database-server-config',; - 'mount_path': '/sql-config',; - }; - ],; - service_account={'namespace': DEFAULT_NAMESPACE, 'name': 'ci-agent'},; - parents=parents,; - always_run=True,; - network='private',; - regions=[REGION],; - ); + pass; diff --git a/ci/test/resources/build.yaml b/ci/test/resources/build.yaml; index e6f67bb486..662c873590 100644; --- a/ci/test/resources/build.yaml; +++ b/ci/test/resources/build.yaml; @@ -190,7 +190,7 @@ steps:; to: /io/pyproject.toml; dependsOn:; - hello_image; - - kind: createDatabase; + - kind: createDatabase2; name: hello_database; databaseName: hello; image:; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13022#issuecomment-1542233600:3756,test,test,3756,https://hail.is,https://github.com/hail-is/hail/pull/13022#issuecomment-1542233600,4,['test'],['test']
Testability,"returned objects fail (<a href=""https://github-redirect.dependabot.com/tomplus/kubernetes_asyncio/pull/177"">#177</a>, <a href=""https://github.com/tomplus""><code>@​tomplus</code></a>)</li>; </ul>; <h1>v19.15.0</h1>; <ul>; <li>feat: Kubernetes API Version: v1.19.15</li>; </ul>; <h3>API Change</h3>; <ul>; <li>We have added a new Priority &amp; Fairness rule that exempts all probes (/readyz, /healthz, /livez) to prevent; restarting of &quot;healthy&quot; kube-apiserver instance(s) by kubelet. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/101113"">kubernetes/kubernetes#101113</a>, <a href=""https://github.com/tkashem""><code>@​tkashem</code></a>) [SIG API Machinery]</li>; <li>Fixes using server-side apply with APIService resources (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/100713"">kubernetes/kubernetes#100713</a>, <a href=""https://github.com/kevindelgado""><code>@​kevindelgado</code></a>) [SIG API Machinery, Apps, Scheduling and Testing]</li>; <li>Regenerate protobuf code to fix CVE-2021-3121 (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/100515"">kubernetes/kubernetes#100515</a>, <a href=""https://github.com/joelsmith""><code>@​joelsmith</code></a>) [SIG API Machinery, Auth, CLI, Cloud Provider, Cluster Lifecycle, Instrumentation, Node and Storage]</li>; <li>Kubernetes is now built using go1.15.8 (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/99093"">kubernetes/kubernetes#99093</a>, <a href=""https://github.com/cpanato""><code>@​cpanato</code></a>) [SIG Cloud Provider, Instrumentation, Release and Testing]</li>; <li>Fix conversions for custom metrics. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/94654"">kubernetes/kubernetes#94654</a>, <a href=""https://github.com/wojtek-t""><code>@​wojtek-t</code></a>) [SIG Instrumentation]</li>; <li>A new alpha-level field, <code>SupportsFsGroup</code>, has been introduced for CSIDrivers to allow th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:1385,Test,Testing,1385,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,rewrite MatrixExplodeRows using compiled IR functions; add tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4069:59,test,tests,59,https://hail.is,https://github.com/hail-is/hail/pull/4069,1,['test'],['tests']
Testability,rg.broadinstitute.hail.annotations.AnnotationsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.io.compress.BGzipCodecSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.CallSuite.testCall PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportPlinkSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrig PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.Li,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:1537,test,test,1537,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,2,['test'],['test']
Testability,"rged</h2>; <p>A total of 10 pull requests were merged for this release.</p>; <ul>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22489"">#22489</a>: TST, MAINT: Replace most setup with setup_method (also teardown)</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22490"">#22490</a>: MAINT, CI: Switch to cygwin/cygwin-install-action@v2</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22494"">#22494</a>: TST: Make test_partial_iteration_cleanup robust but require leak...</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22592"">#22592</a>: MAINT: Ensure graceful handling of large header sizes</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22593"">#22593</a>: TYP: Spelling alignment for array flag literal</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22594"">#22594</a>: BUG: Fix bounds checking for <code>random.logseries</code></li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22595"">#22595</a>: DEV: Update GH actions and Dockerfile for Gitpod</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22596"">#22596</a>: CI: Only fetch in actions/checkout</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22597"">#22597</a>: BUG: Decrement ref count in gentype_reduce if allocated memory...</li>; <li><a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/22625"">#22625</a>: BUG: Histogramdd breaks on big arrays in Windows</li>; </ul>; <h2>Checksums</h2>; <h3>MD5</h3>; <pre><code>8a412b79d975199cefadb465279fd569 numpy-1.23.5-cp310-cp310-macosx_10_9_x86_64.whl; 1b56e8e6a0516c78473657abf0710538 numpy-1.23.5-cp310-cp310-macosx_11_0_arm64.whl; c787f4763c9a5876e86a17f1651ba458 numpy-1.23.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl; db07645022e56747ba3f00c2d742232e numpy-1.23.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl; c63",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12515:1878,log,logseries,1878,https://hail.is,https://github.com/hail-is/hail/pull/12515,1,['log'],['logseries']
Testability,"rgument to <code>isinstance()</code>.</p>; </li>; <li>; <p>Eliminated deprecation warnings related to Python module import system, which; would have turned into broken code in Python 3.12. This was used by the post; import hook mechanism.</p>; </li>; </ul>; <p><strong>New Features</strong></p>; <ul>; <li>Binary wheels provided on PyPi for <code>aarch64</code> Linux systems and macOS; native silicon where supported by Python when using <code>pypa/cibuildwheel</code>.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/GrahamDumpleton/wrapt/commit/f2f1a680113d500f525de78da91ae19235efef16""><code>f2f1a68</code></a> Merge branch 'release/1.14.1'</li>; <li><a href=""https://github.com/GrahamDumpleton/wrapt/commit/97b72d49a8cda771c6006571486530ca84f3a834""><code>97b72d4</code></a> Update version of cibuildwheel for recent Python versions.</li>; <li><a href=""https://github.com/GrahamDumpleton/wrapt/commit/337072730beddd653f19c8b1a1157ecbb9d62790""><code>3370727</code></a> Only test Python 3.10 on aarch64 linux due to unreliability of GitHub runners...</li>; <li><a href=""https://github.com/GrahamDumpleton/wrapt/commit/982ddecf52013ce9bbdf8b48b76ae054844ba31b""><code>982ddec</code></a> Python 3.6 no longer available on aarch64 linux for testing.</li>; <li><a href=""https://github.com/GrahamDumpleton/wrapt/commit/240fea86df0357f3642db040f912031e4ecdfcb1""><code>240fea8</code></a> Update copyright notice year.</li>; <li><a href=""https://github.com/GrahamDumpleton/wrapt/commit/9668bbd7c7314d81b7cf8ce4293d04212ae1edee""><code>9668bbd</code></a> Update version in preparation for 1.14.1 release.</li>; <li><a href=""https://github.com/GrahamDumpleton/wrapt/commit/c86a4d37fa61494957153f76b1d6bbdacfd83205""><code>c86a4d3</code></a> Add classifier for Python 3.11.</li>; <li><a href=""https://github.com/GrahamDumpleton/wrapt/commit/07239ac21a68ced86860cf3bb52ee0c60faf0915""><code>07239ac</code></a> Document fix for module importers us",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12102:2678,test,test,2678,https://hail.is,https://github.com/hail-is/hail/pull/12102,1,['test'],['test']
Testability,rialization error at that point goes away. but there are a bunch of other ones from the toLine below. ```; org.apache.spark.SparkException: Task not serializable; at org.apache.spark.util.ClosureCleaner$.ensureSerializable(ClosureCleaner.scala:166); at org.apache.spark.util.ClosureCleaner$.clean(ClosureCleaner.scala:158); at org.apache.spark.SparkContext.clean(SparkContext.scala:1622); at org.apache.spark.rdd.RDD.map(RDD.scala:286); at org.broadinstitute.hail.methods.MendelErrors.writeMendel(MendelErrors.scala:143); at org.broadinstitute.hail.methods.MendelErrorsSuite.test(MendelErrorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1367,test,testng,1367,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['test'],['testng']
Testability,"right now just hard-codes three different sizes for the default block size. Not used yet, although I wrote a couple of tests; I hope to pipe this through the aggregator stuff. (broken out from #6580)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6606:119,test,tests,119,https://hail.is,https://github.com/hail-is/hail/pull/6606,1,['test'],['tests']
Testability,"rite_temp_gcs; t.write(temp_path, overwrite=True); File ""/tmp/d30041623ee542dca820faecd29538a9/hail-devel-cb98819b64ad.zip/hail/typecheck/check.py"", line 547, in wrapper; return f(*args_, **kwargs_); File ""/tmp/d30041623ee542dca820faecd29538a9/hail-devel-cb98819b64ad.zip/hail/table.py"", line 1183, in write; self._jt.write(output, overwrite, stage_locally, _codec_spec); File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; answer, self.gateway_client, self.target_id, self.name); File ""/tmp/d30041623ee542dca820faecd29538a9/hail-devel-cb98819b64ad.zip/hail/utils/java.py"", line 200, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: AssertionError: assertion failed: type mismatch:; name: global; actual: +Struct{}; expect: Struct{}. Java stack trace:; java.lang.AssertionError: assertion failed: type mismatch:; name: global; actual: +Struct{}; expect: Struct{}; at scala.Predef$.assert(Predef.scala:170); at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:55); at is.hail.expr.ir.TypeCheck$.is$hail$expr$ir$TypeCheck$$check$1(TypeCheck.scala:17); at is.hail.expr.ir.TypeCheck$.apply(TypeCheck.scala:186); at is.hail.expr.ir.Interpret$.apply(Interpret.scala:39); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1636); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapRows.execute(MatrixIR.scala:1147); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapCols.execute(MatrixIR.scala:1364); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapCols.execute(MatrixIR.scala:1364); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.hail.expr.ir.MatrixMapGlobals.execute(MatrixIR.scala:1634); at is.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4127:1548,assert,assert,1548,https://hail.is,https://github.com/hail-is/hail/issues/4127,1,['assert'],['assert']
Testability,"rk it as requiring <code>nptyping&lt;2</code></li>; </ul>; <h2>1.17.0</h2>; <ul>; <li>Add <code>typehints_use_rtype</code> option</li>; <li>Handles <code>TypeError</code> when getting source code via inspect</li>; </ul>; <h2>1.16.0</h2>; <ul>; <li>Add support for type subscriptions with multiple elements, where one or more elements are tuples; e.g.,; <code>nptyping.NDArray[(Any, ...), nptyping.Float]</code></li>; <li>Fix bug for arbitrary types accepting singleton subscriptions; e.g., <code>nptyping.Float[64]</code></li>; <li>Resolve forward references</li>; <li>Expand and better handle <code>TypeVar</code></li>; <li>Add intershpinx reference link for <code>...</code> to <code>Ellipsis</code> (as is just an alias)</li>; </ul>; <h2>1.15.3</h2>; <ul>; <li>Prevents reaching inner blocks that contains <code>if TYPE_CHECKING</code></li>; </ul>; <h2>1.15.2</h2>; <ul>; <li>Log a warning instead of crashing when a type guard import fails to resolve</li>; <li>When resolving type guard imports if the target module does not have source code (such is the case for C-extension; modules) do nothing instead of crashing</li>; </ul>; <h2>1.15.1</h2>; <ul>; <li>Fix <code>fully_qualified</code> should be <code>typehints_fully_qualified</code></li>; </ul>; <h2>1.15.0</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/bf27befb610426838d1f2926e470815c47cc8ab8""><code>bf27bef</code></a> Fix for new nptyping (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/235"">#235</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/7ee38919ba491d79918b1224ddcf0460db467514""><code>7ee3891</code></a> Support and require nptyping 2.1.1 (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/232"">#232</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-auto",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11909:3953,Log,Log,3953,https://hail.is,https://github.com/hail-is/hail/pull/11909,1,['Log'],['Log']
Testability,"rk it as requiring <code>nptyping&lt;2</code></li>; </ul>; <h2>1.17.0</h2>; <ul>; <li>Add <code>typehints_use_rtype</code> option</li>; <li>Handles <code>TypeError</code> when getting source code via inspect</li>; </ul>; <h2>1.16.0</h2>; <ul>; <li>Add support for type subscriptions with multiple elements, where one or more elements are tuples; e.g.,; <code>nptyping.NDArray[(Any, ...), nptyping.Float]</code></li>; <li>Fix bug for arbitrary types accepting singleton subscriptions; e.g., <code>nptyping.Float[64]</code></li>; <li>Resolve forward references</li>; <li>Expand and better handle <code>TypeVar</code></li>; <li>Add intershpinx reference link for <code>...</code> to <code>Ellipsis</code> (as is just an alias)</li>; </ul>; <h2>1.15.3</h2>; <ul>; <li>Prevents reaching inner blocks that contains <code>if TYPE_CHECKING</code></li>; </ul>; <h2>1.15.2</h2>; <ul>; <li>Log a warning instead of crashing when a type guard import fails to resolve</li>; <li>When resolving type guard imports if the target module does not have source code (such is the case for C-extension; modules) do nothing instead of crashing</li>; </ul>; <h2>1.15.1</h2>; <ul>; <li>Fix <code>fully_qualified</code> should be <code>typehints_fully_qualified</code></li>; </ul>; <h2>1.15.0</h2>; <ul>; <li>Resolve type guard imports before evaluating annotations for objects</li>; <li>Remove <code>set_type_checking_flag</code> flag as this is now done by default</li>; <li>Fix crash when the <code>inspect</code> module returns an invalid python syntax source</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/7ee38919ba491d79918b1224ddcf0460db467514""><code>7ee3891</code></a> Support and require nptyping 2.1.1 (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/232"">#232</a>)</li>; <li><a href=""https://github.com/tox-dev/sph",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11893:3394,Log,Log,3394,https://hail.is,https://github.com/hail-is/hail/pull/11893,1,['Log'],['Log']
Testability,"rk it as requiring <code>nptyping&lt;2</code></li>; </ul>; <h2>1.17.0</h2>; <ul>; <li>Add <code>typehints_use_rtype</code> option</li>; <li>Handles <code>TypeError</code> when getting source code via inspect</li>; </ul>; <h2>1.16.0</h2>; <ul>; <li>Add support for type subscriptions with multiple elements, where one or more elements are tuples; e.g.,; <code>nptyping.NDArray[(Any, ...), nptyping.Float]</code></li>; <li>Fix bug for arbitrary types accepting singleton subscriptions; e.g., <code>nptyping.Float[64]</code></li>; <li>Resolve forward references</li>; <li>Expand and better handle <code>TypeVar</code></li>; <li>Add intershpinx reference link for <code>...</code> to <code>Ellipsis</code> (as is just an alias)</li>; </ul>; <h2>1.15.3</h2>; <ul>; <li>Prevents reaching inner blocks that contains <code>if TYPE_CHECKING</code></li>; </ul>; <h2>1.15.2</h2>; <ul>; <li>Log a warning instead of crashing when a type guard import fails to resolve</li>; <li>When resolving type guard imports if the target module does not have source code (such is the case for C-extension; modules) do nothing instead of crashing</li>; </ul>; <h2>1.15.1</h2>; <ul>; <li>Fix <code>fully_qualified</code> should be <code>typehints_fully_qualified</code></li>; </ul>; <h2>1.15.0</h2>; <ul>; <li>Resolve type guard imports before evaluating annotations for objects</li>; <li>Remove <code>set_type_checking_flag</code> flag as this is now done by default</li>; <li>Fix crash when the <code>inspect</code> module returns an invalid python syntax source</li>; <li>Made formatting function configurable using the option <code>typehints_formatter</code></li>; </ul>; <h2>1.14.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/73aa9b6aea40720ca270b1107c1980b909943cb3""><code>73aa9b6</code></a> Fix mock imports on guarded imports (<a href=""https://github-redirect.dep",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11773:1463,Log,Log,1463,https://hail.is,https://github.com/hail-is/hail/pull/11773,1,['Log'],['Log']
Testability,"rk releases</li>; <li><a href=""https://github.com/apache/spark/commit/001d8b0cddcec46a44e7c6e31612dc2baada05d5""><code>001d8b0</code></a> [SPARK-37554][BUILD] Add PyArrow, pandas and plotly to release Docker image d...</li>; <li><a href=""https://github.com/apache/spark/commit/9dd4c07475c82f922c29d67a4db4bb42676c5c07""><code>9dd4c07</code></a> [SPARK-37730][PYTHON][FOLLOWUP] Split comments to comply pycodestyle check</li>; <li><a href=""https://github.com/apache/spark/commit/bc54a3f0c2e08893702c3929bfe7a9d543a08cdb""><code>bc54a3f</code></a> [SPARK-37730][PYTHON] Replace use of MPLPlot._add_legend_handle with MPLPlot....</li>; <li><a href=""https://github.com/apache/spark/commit/c5983c1691f20590abf80b17bdc029b584b89521""><code>c5983c1</code></a> [SPARK-38018][SQL][3.2] Fix ColumnVectorUtils.populate to handle CalendarInte...</li>; <li><a href=""https://github.com/apache/spark/commit/32aff86477ac001b0ee047db08591d89e90c6eb8""><code>32aff86</code></a> [SPARK-39447][SQL][3.2] Avoid AssertionError in AdaptiveSparkPlanExec.doExecu...</li>; <li><a href=""https://github.com/apache/spark/commit/be891ad99083564a7bf7f421e00b2cc4759a679f""><code>be891ad</code></a> [SPARK-39551][SQL][3.2] Add AQE invalid plan check</li>; <li><a href=""https://github.com/apache/spark/commit/1c0bd4c15a28d7c6a2dca846a5b8d0eb1d152aae""><code>1c0bd4c</code></a> [SPARK-39656][SQL][3.2] Fix wrong namespace in DescribeNamespaceExec</li>; <li><a href=""https://github.com/apache/spark/commit/3d084fe3217bea9af4c544f10ead8a2e5b97dad4""><code>3d084fe</code></a> [SPARK-39677][SQL][DOCS][3.2] Fix args formatting of the regexp and like func...</li>; <li>Additional commits viewable in <a href=""https://github.com/apache/spark/compare/v3.1.3...v3.2.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pyspark&package-manager=pip&previous-version=3.1.3&new-version=3.2.2)](https://docs.github.com/en/github/managing-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12452:1448,Assert,AssertionError,1448,https://hail.is,https://github.com/hail-is/hail/pull/12452,1,['Assert'],['AssertionError']
Testability,"rk.jar').; This is deprecated in Spark 1.0+. Please instead use:; - ./spark-submit with --driver-class-path to augment the driver classpath; - spark.executor.extraClassPath to augment the executor classpath; ; 17/08/09 18:18:30 WARN SparkConf: Setting 'spark.executor.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; 17/08/09 18:18:30 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 2.0.2; /_/. Using Python version 2.7.5 (default, Nov 6 2016 00:28:07); SparkSession available as 'spark'.; >>> from hail import *; >>> hc = HailContext(sc); hail: info: SparkUI: http://192.168.1.4:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.1-0320a61; >>> hc.import_vcf('/hail/test/BRCA1.raw_indel.vcf').write('/hail/test/brca1.vds'); hail: warning: `/hail/test/BRCA1.raw_indel.vcf' refers to no files; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-483>"", line 2, in import_vcf; File ""/opt/Software/hail/python/hail/java.py"", line 112, in handle_py4j; 'Error summary: %s' % (deepest, full, Env.hc().version, deepest)); hail.java.FatalError: HailException: arguments refer to no files. Java stack trace:; is.hail.utils.HailException: arguments refer to no files; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6); 	at is.hail.utils.package$.fatal(package.scala:25); 	at is.hail.io.vcf.LoadVCF$.globAllVCFs(LoadVCF.scala:105); 	at is.hail.HailContext.importVCFs(HailContext.scala:523); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-321215583:1928,test,test,1928,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-321215583,1,['test'],['test']
Testability,rkContext.scala:1622); at org.apache.spark.rdd.RDD.map(RDD.scala:286); at org.broadinstitute.hail.methods.MendelErrors.writeMendel(MendelErrors.scala:143); at org.broadinstitute.hail.methods.MendelErrorsSuite.test(MendelErrorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1731,Test,TestRunner,1731,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['Test'],['TestRunner']
Testability,"rly identical performance, over Uvicorn + httptools, which were both written by Yury Selivanov, the asyncio person I mention above. Starlette and Uvicorn are currently the fastest options, (Sanic isn't tested), by a relatively large margin, on Techempower's benchmarks. If there is a reference standard benchmark of http library performance, Techempower is it: https://www.techempower.com/benchmarks/#section=data-r17 . Starlette is something like base Go performance (though 1/5-1/10th the performance of Go's fasthttp library for simple responses, and much closer for anything involving database calls). Sanic also uses httptools and uvloop, but has more stuff.. so yeah maybe a bit slower than Starlette, or not, but the diff will probably be small. Regarding the benchmark you linked, it is benchmarking the power of sleep. There is something deeply wrong with their results. Sanic has 1800 timeouts, vs 200 for aiohttp, and 3x the connection errors. Fine, so Sanic is super slow. But look at their non-db tests. Sanic is >2x as fast, 0 timeouts. They aren't using anything Sanic specific to query the database, and both use the same event loop. Adding asyncio Postgres to two programs that fundamentally differ mainly in how the handle http requests and responses, shows the one that is faster at http requests/responses (Sanic) becoming much slower, and in fact reversing its relationship to Aiohttp. This is strange to say the least. I was really curious about this, so I ran the bench. First, I upgraded Sanic to a recent version. Then I ran their test. In short, their results were not what I found. Sanic is 50% faster, and the timeouts are what you'd expect. 26 timeouts for Sanic, 45 for aiohttp. Sanic Run 1:; Running 1m test @ http://localhost:8000/db; 12 threads and 2000 connections; Thread Stats Avg Stdev Max +/- Stdev; Latency 640.64ms 947.31ms 7.97s 85.89%; Req/Sec 385.62 137.55 2.32k 77.21%; 274143 requests in 1.00m, 41.70MB read; Socket errors: connect 0, read 2072, write 0, ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030:3132,test,tests,3132,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030,2,['test'],['tests']
Testability,"rm to read group (<a href=""https://redirect.github.com/samtools/htsjdk/issues/1635"">#1635</a>)</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/d486d53aac2cd52ac53d1c633ac89789871815a8""><code>d486d53</code></a> Zero len array (<a href=""https://redirect.github.com/samtools/htsjdk/issues/1674"">#1674</a>)</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/44817ee7182bd65e17a6215410f919a8b3e96a94""><code>44817ee</code></a> Update org.json</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/500cffda9c511d88a736bcbb91d3f10259b967fb""><code>500cffd</code></a> Test fix</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/662c8274fad42e001e63e2b9c9c2066714b42a0d""><code>662c827</code></a> Test fix</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/e58f8a2250fc47afecfa38611b0f51b02ac6b933""><code>e58f8a2</code></a> Minor code cleanup</li>; <li><a href=""https://github.com/samtools/htsjdk/commit/b1085dab46bc220b1f6d3eb92fcbe73818ade3eb""><code>b1085da</code></a> Test fixes</li>; <li>Additional commits viewable in <a href=""https://github.com/samtools/htsjdk/compare/3.0.4...4.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.github.samtools:htsjdk&package-manager=gradle&previous-version=3.0.4&new-version=4.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwritin",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13576:8027,Test,Test,8027,https://hail.is,https://github.com/hail-is/hail/pull/13576,1,['Test'],['Test']
Testability,"rm... using builtin-java classes where applicable; 17/08/10 08:41:32 WARN SparkConf: ; SPARK_CLASSPATH was detected (set to '/opt/Software/hail/build/libs/hail-all-spark.jar').; This is deprecated in Spark 1.0+. Please instead use:; - ./spark-submit with --driver-class-path to augment the driver classpath; - spark.executor.extraClassPath to augment the executor classpath; ; 17/08/10 08:41:32 WARN SparkConf: Setting 'spark.executor.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; 17/08/10 08:41:32 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 2.0.2; /_/. Using Python version 3.5.2 (default, Jul 12 2017 14:00:23); SparkSession available as 'spark'. In [1]: ; ```; -----------------------------; Step2 : read the file with sc.textFile; ```; In [1]: rdd = sc.textFile('/hail/test/BRCA1.raw_indel.vcf'); ```; -----------------------------; Step3, import hail and read the file with hail:; ```; In [2]: from hail import *; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-2-3181c5d8fca5> in <module>(); ----> 1 from hail import *. /opt/Software/hail/python/hail/__init__.py in <module>(); ----> 1 import hail.expr; 2 from hail.representation import *; 3 from hail.context import HailContext; 4 from hail.dataset import VariantDataset; 5 from hail.expr import *. /opt/Software/hail/python/hail/expr.py in <module>(); 1 import abc; 2 from hail.java import scala_object, Env, jset; ----> 3 from hail.representation import Variant, AltAllele, Genotype, Locus, Interval, Struct, Call; 4 ; 5 . /opt/Software/hail/python/hail/representation/__init__.py in <module>(); ----> 1 from hail.representation.variant import Variant, Locus, AltAllele; 2 from hail.representation.interval import Interv",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-321420160:2178,test,test,2178,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-321420160,1,['test'],['test']
Testability,"roduction work:; ```; /Users/dking/projects/hail/batch/batch/worker/worker.py:484: # * gcr.io/hail-vdc/hailgenetics/python-dill; /Users/dking/projects/hail/batch/batch/worker/worker.py:705: # DockerError(500, ""Head https://gcr.io/v2/genomics-tools/samtools/manifests/latest: unknown: Project 'project:genomics-tools' not found or deleted.""); /Users/dking/projects/hail/datasets/extract/extract_CADD.py:26: j.image(""gcr.io/broad-ctsa/datasets:050521""); /Users/dking/projects/hail/datasets/extract/extract_1000_Genomes_NYGC_30x_GRCh38.py:12: j.image(""gcr.io/broad-ctsa/datasets:041421""); /Users/dking/projects/hail/datasets/extract/extract_1000_Genomes_NYGC_30x_GRCh38.py:19: j.image(""gcr.io/broad-ctsa/datasets:041421""); /Users/dking/projects/hail/datasets/extract/extract_1000_Genomes_NYGC_30x_GRCh38.py:26: j.image(""gcr.io/broad-ctsa/datasets:041421""); /Users/dking/projects/hail/hail/scripts/update-terra-image.py:33:Image URL: `us.gcr.io/broad-dsp-gcr-public/{image_name}:{image_version}`; /Users/dking/projects/hail/hail/python/test/hailtop/utils/test_utils.py:115: x = parse_docker_image_reference('gcr.io/hail-vdc/batch-worker:123fds312'); /Users/dking/projects/hail/hail/python/test/hailtop/utils/test_utils.py:116: assert x.domain == 'gcr.io'; /Users/dking/projects/hail/hail/python/test/hailtop/utils/test_utils.py:120: assert x.name() == 'gcr.io/hail-vdc/batch-worker'; /Users/dking/projects/hail/hail/python/test/hailtop/utils/test_utils.py:121: assert str(x) == 'gcr.io/hail-vdc/batch-worker:123fds312'; /Users/dking/projects/hail/hail/python/hail/docs/change_log.md:278:- (hail#12230) The python-dill Batch images in `gcr.io/hail-vdc` are no longer supported.; /Users/dking/projects/hail/hail/python/hailtop/utils/utils.py:707: # DockerError(500, ""Head https://gcr.io/v2/genomics-tools/samtools/manifests/latest: unknown: Project 'project:genomics-tools' not found or deleted.""); /Users/dking/projects/hail/hail/python/hailtop/utils/utils.py:1061: return self.domain is not None and (sel",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12963#issuecomment-1531692013:1079,test,test,1079,https://hail.is,https://github.com/hail-is/hail/pull/12963#issuecomment-1531692013,1,['test'],['test']
Testability,"role: roles/storage.objectViewer; ```; which permits; ```; resourcemanager.projects.get; resourcemanager.projects.list; storage.managedFolders.get; storage.managedFolders.list; storage.objects.get; storage.objects.list; ```; Notably excluding; ```; storage.buckets.get; ```; Which is necessary for getting metadata like storage class about a bucket. Reported here: https://hail.zulipchat.com/#narrow/stream/123010-Hail-Query-0.2E2-support/topic/No.20storage.2Ebuckets.2Eget.20access.20to.20gs.3A.2F.2Fhail-common. ### Version. 0.2.127. ### Relevant log output. Example code:; ```; rg37.add_sequence(; ""gs://hail-common/references/human_g1k_v37.fasta.gz"",; ""gs://hail-common/references/human_g1k_v37.fasta.fai""; ); ```. ```; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.127-bb535cd096c5; LOGGING: writing to /Users/mkanai/Dropbox/Workspace/github.com/mkanai/immune_v2f/python/hail-20240214-1046-0.2.127-bb535cd096c5.log; Traceback (most recent call last):; File ""/Users/mkanai/Dropbox/Workspace/github.com/mkanai/immune_v2f/python/annotate_base_editing_variants.py"", line 21, in <module>; rg37.add_sequence(; File ""<decorator-gen-34>"", line 2, in add_sequence; File ""/Users/mkanai/.anyenv/envs/pyenv/versions/anaconda3-2022.05/lib/python3.9/site-packages/hail/typecheck/check.py"", line 584, in wrapper; return __original_func(*args_, **kwargs_); File ""/Users/mkanai/.anyenv/envs/pyenv/versions/anaconda3-2022.05/lib/python3.9/site-packages/hail/genetics/reference_genome.py"", line 390, in add_sequence; Env.backend().add_sequence(self.name, fasta_file, index_file); File ""/Users/mkanai/.anyenv/envs/pyenv/versions/anaconda3-2022.05/lib/python3.9/site-packages/hail/backend/service_backend.py"", line 548, in add_sequence; self.validate_file(blob); File ""/Users/mkanai/.anyenv/envs/pyenv/versions/anaconda3-2022.05/lib/python3.9/site-packages/hail/backend/service_backend.py"", line 337, in validate_file; validate_file(uri, self._async_fs, validate_scheme=True)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14291:1049,log,log,1049,https://hail.is,https://github.com/hail-is/hail/issues/14291,1,['log'],['log']
Testability,rorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144); Caused by: java.lang.reflect.InvocationTargetException; at sun.reflect.NativeMethodAccessorImpl.invoke0(Nati,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1955,test,testng,1955,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['test'],['testng']
Testability,"rough our own resource server... Firebase Auth seems to avoid these limitations. ## TODO:; 1. Create a structured description of this pull request; 2. Incorporate Firebase Auth in place of Auth0 for 3rd party access token benefits.; 3: Scorecard; 3a. Draft working GraphQL V4 scorecard implementation; 3b. Finish authenticated GraphQL V4 scorecard implementation; 4. Batch; 4a: Setup dev batch endpoint; 4b: Call batch endpoint (no auth), and return any data; 4c: List all available jobs; * By querying Batch api, or Kubernetes directly; 4d: Receive current status of 1 job; 4e: Authentication; 4f: Polish (longest step): make interacting with batch achievable within perceived 16ms.; * goal: subscribe to events in web socket; * may want to save user job state in a Hail-controlled database (possible to use Firebase or Mongo, may prefer relational db, maybe Postgres or MySQL).; 4other: Figure out state question (sufficient to use Kubernetes); 5. Basic notebook interface.; 6. Connect websocket logic (non-GraphQL); 7. Authenticate web socket via Oauth2; 8. Incorporate GraphQL subscriptions (first: GitHub API); 9. Write tests; 10. Mock GraphQL endpoints; 11. Integrate web and api server bits into CI (maybe should be prioritized earlier...I prefer to get draft of major functions done first; am new to writing tests for React/Node). ## Near-term goals (<= 6 mo); 1. Upload, download; 2. Launch clusters, pay for them; 3. ?. ## Longer-term goals; 1. Much simpler interface to Hail. I would like steps that can be performed without programming to be done so. I would prefer fasta->variant filtering to be done as in Bystro (at least from the interface standpoint), i.e without opening up a notebook. Common analyses pipelines should also be possible without any interaction with a python notebook: GWAS, rare-variant (SKAT) analyses have, it seems, relatively few permutations. Those should be behind UI primitives. At each stage of a ; 2. Social network bits: users should be able to share job s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:7626,log,logic,7626,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['log'],['logic']
Testability,"roughly:. ```python; In [77]: hl.utils.range_matrix_table(2, 1, n_partitions=2).annotate_entries(x=1).filter_rows(False).x.export('/tmp/foo.tsv.gz') ; 2019-10-10 08:59:22 Hail: INFO: merging 1 files totalling 30...; 2019-10-10 08:59:22 Hail: INFO: while writing:; /tmp/foo.tsv.gz; merge time: 12.641ms. In [78]: hl.import_matrix_table('/tmp/foo.tsv.gz')._force_count_rows(); ```. Also, hail should actually work, currently this test will fail.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7242:428,test,test,428,https://hail.is,https://github.com/hail-is/hail/issues/7242,1,['test'],['test']
Testability,"roxy-Authorization</code> header incorrectly, resulting in the value being; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>v2.30.0</h2>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>v2.29.0</h2>; <h2>2.29.0 (2023-04-26)</h2>; <p><strong>Improvements</strong></p>; <ul>; <li>Requests now defers chunked requests to the urllib3 implementation to improve; standardization. (<a href=""https://redirect.github.com/psf/requests/issues/6226"">#6226</a>)</li>; <li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=""https://redirect.github.com/psf/requests/issues/6356"">#6356</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/psf/requests/blob/main/HISTORY.md"">requests's changelog</a>.</em></p>; <blockquote>; <h2>2.31.0 (2023-05-22)</h2>; <p><strong>Security</",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13091:1891,test,testing,1891,https://hail.is,https://github.com/hail-is/hail/pull/13091,6,['test'],['testing']
Testability,"rray[Int32],DP:Int32,GQ:Int32,PL:Array[Int32]}]}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/entries/rows/parts/,Some((gs://danking/workshop-test/1kg.mt/index/,+PCStruct{locus:+PCLocus(GRCh37),alleles:+PCArray[+PCString]})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/rows/parts",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:9945,test,test,9945,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['test'],['test']
Testability,"rrent_backend().fs`), but I doubt anyone uses; it. `hail.utils.hadoop_utils` is a shim over `hail.fs`, there are no direct concrete implementations of; it. This PR adds `hail.fs.RouterFS` to `hail.fs`, a synchronous wrapper around; `hailtop.aiotools.fs.AsyncRouterFS`. A ""router"" file system is one which operates on URLs instead of; paths. It uses the URL's protocol to determine which concrete file system to use. For example, a; router fs can `open` both `gs://danking/abc` and `s3a://danking/abc`. Each Hail Query Python Backend is associated with one file system class. This PR associates the; ServiceBackend with `RouterFS`, enabling `hl.current_backend().fs.open`, `hl.hadoop_open`, etc. to; read from S3, GCS, ABS, and the local file system. We should deprecate `hail.utils.hadoop_utils`; because it is not Hadoop-specific. We should instead advertise the class-based `hail.fs` or create a; new function-based interface (e.g. `hl.fs.open(...)`. # Test Clean-up. The Hail Query local and spark tests should now work in Azure. I moved all the `hail.fs` and; `hailtop.aiotools.fs` tests into two build.yaml steps: `test_hail_python_fs` and; `test_hail_scala_fs`. These tests are exhaustive: they test every file system: S3, ABS, and GCS. The only file system tests that remain in the Hail Query tests are the tests of; `hail.utils.hadoop_utils`. The hadoop tests are not exhaustive: they only test the *current* file; system. In Azure, they test ABS. In Google, they test GCS. I have not decided yet if we should enable the hail python tests in Azure. It seems mostly wasteful. # Local Cache. I added a local cache directory. It defaults to `$XDG_CONFIG_HOME/hail/cache` or; `~/.config/hail/cache` if `XDG_CONFIG_HOME` is not set. I store Python reference genome metadata; here. # Batch Attributes. The ServiceBackend `batch_attributes` attribute specifies the attributes for any batch created by; the ServiceBackend. I modified the tests so that the test function name is use the ""name"" of the; ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11194:5646,test,tests,5646,https://hail.is,https://github.com/hail-is/hail/pull/11194,1,['test'],['tests']
Testability,"rs table is now auth.users.; - Added state to users table, `active` for active users. Adding (deleting) users just sets state to `adding` (`deleting`); - Added a new service (doesn't serve requests) auth-driver that watches the database and processes adding, deleting users. Only one replica, runs every ~60s; - Don't actually delete users, just mark them deleted. This is so we don't lose billing information for users we're deleting. This will need more thought once we understand what the financial record keeping constraints are. Maybe we purge users after 90 days? Maybe keep them forever?; - Added Auth > Users header link; - gsa-key now has a single file, `key.json` instead of `privateKeyData`.; - Added cleanup_auth_tables dev-only build step; - batch account not actually needed, removed (but we keep around batch-gsa-key). I have two more code sharing PRs after this goes in:; - Move GoogleClient to gear and unify with the existing logic in batch (which is a bit disorganized); - EventHandler is basically the same logic in the batch scheduler. Again, move to gear and use there. One last change that might be nice but I didn't bother with: auth could send auth-driver a notification when the database changes so it can process requests immediately. (We do this in batch, for example.) Maybe we if we expect to be adding more users. Obviously, we'll have to purge the old user resources and re-add the users once this goes in. A note on testing: I'm reluctant to give tests the privileges necessary to test this (basically full access to the google project and the cluster). I think I'm inclined to chalk this up a ""infrastructure"" and plan to test it on a separate staging k8s cluster for infrastructure changes. For now, I tested almost all the logic with a slightly tweaked version to get around the permissions issues with dev deploy and it looks good. The only thing I couldn't test was the database creation logic since that's virtualized inside a single database in dev namespaces.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7694:1646,test,testing,1646,https://hail.is,https://github.com/hail-is/hail/pull/7694,8,"['log', 'test']","['logic', 'test', 'tested', 'testing', 'tests']"
Testability,rs.scala:190); at is.hail.io.BlockingOutputBuffer.writeDouble(OutputBuffers.scala:234); at is.hail.io.LEB128OutputBuffer.writeDouble(OutputBuffers.scala:170); at __C9466collect_distributed_array_matrix_native_writer.__m13239ENCODE_SFloat64$_TO_o_float64(Unknown Source); at __C9466collect_distributed_array_matrix_native_writer.__m13243ENCODE_SBaseStructPointer_TO_o_struct_of_o_boolANDo_int32ANDo_float64ANDo_float64ANDo_float64ANDo_float64ANDo_float64END(Unknown Source); at __C9466collect_distributed_array_matrix_native_writer.__m13242ENCODE_SIndexablePointer_TO_r_array_of_o_struct_of_o_boolANDo_int32ANDo_float64ANDo_float64ANDo_float64ANDo_float64ANDo_float64END(Unknown Source); at __C9466collect_distributed_array_matrix_native_writer.__m13241ENCODE_SInsertFieldsStruct_TO_r_struct_of_r_array_of_o_struct_of_o_boolANDo_int32ANDo_float64ANDo_float64ANDo_float64ANDo_float64ANDo_float64ENDEND(Unknown Source); at __C9466collect_distributed_array_matrix_native_writer.__m9556split_Let(Unknown Source); at __C9466collect_distributed_array_matrix_native_writer.__m9536split_Let(Unknown Source); at __C9466collect_distributed_array_matrix_native_writer.apply(Unknown Source); at __C9466collect_distributed_array_matrix_native_writer.apply(Unknown Source); at is.hail.backend.BackendUtils.$anonfun$collectDArray$4(BackendUtils.scala:49); at is.hail.utils.package$.using(package.scala:635); at is.hail.annotations.RegionPool.scopedRegion(RegionPool.scala:162); at is.hail.backend.BackendUtils.$anonfun$collectDArray$3(BackendUtils.scala:48); at is.hail.backend.service.Worker$.$anonfun$main$10(Worker.scala:168); at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); at is.hail.services.package$.retryTransientErrors(package.scala:119); at is.hail.backend.service.Worker$.main(Worker.scala:168); at is.hail.backend.service.Main$.main(Main.scala:32); at is.hail.backend.service.Main.main(Main.scala); ... 12 more. ```. ### Version. 0.2.114. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950:6348,log,log,6348,https://hail.is,https://github.com/hail-is/hail/issues/12950,1,['log'],['log']
Testability,"rted Type Annotations to Py3 syntax Closes</li>; <li>Only run mypy on cpython versions</li>; <li>Also fix all type errors with latest mypy - pycares seems to have no typing / stubs so lets ignore it via <code>mypy.ini</code></li>; <li>setup: typing exists since Python 3.5</li>; <li>Fix type annotation of gethostbyname()</li>; <li>Updated README</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/saghul/aiodns/commit/cdb33385f46be1e18bc525ccb153c8abc8ac92d4""><code>cdb3338</code></a> Updated changelog</li>; <li><a href=""https://github.com/saghul/aiodns/commit/a57968007a0e6f826e1a8a2160eade23c254bc42""><code>a579680</code></a> Updated README</li>; <li><a href=""https://github.com/saghul/aiodns/commit/efbbcd55493e11ff95cce7845ebe23438c4238aa""><code>efbbcd5</code></a> Release wheels and source to PyPI with GH actions</li>; <li><a href=""https://github.com/saghul/aiodns/commit/0c9ea6f60d5a9306b0c80e6ffea5ccc27c5fa5bd""><code>0c9ea6f</code></a> Try to make tests more resilient</li>; <li><a href=""https://github.com/saghul/aiodns/commit/a1d4d550acc573f563196af73568c5227a1cfe20""><code>a1d4d55</code></a> Don't build universal wheels</li>; <li><a href=""https://github.com/saghul/aiodns/commit/1f84d1a0267e5629ead8355816d47d8ae892ef24""><code>1f84d1a</code></a> Migrate CI to GH Actions</li>; <li><a href=""https://github.com/saghul/aiodns/commit/7b58bcb798d32e07bba7391dd98c7405e2523095""><code>7b58bcb</code></a> Bump version to 3.0.0</li>; <li><a href=""https://github.com/saghul/aiodns/commit/5d94ab0b9f81ee1feabee6a222d9352d244d76f2""><code>5d94ab0</code></a> Fix TXT CHAOS test</li>; <li><a href=""https://github.com/saghul/aiodns/commit/7bb002ea8eee1a8c1651f21d5ae0350857f00233""><code>7bb002e</code></a> Add support for CAA queries</li>; <li><a href=""https://github.com/saghul/aiodns/commit/c81387fd26d2e1c9bdcb85f7d12a13cda1c389d4""><code>c81387f</code></a> Support Python &gt;= 3.6</li>; <li>Additional commits viewable in <a href=""h",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11570:2785,test,tests,2785,https://hail.is,https://github.com/hail-is/hail/pull/11570,1,['test'],['tests']
Testability,rtionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFunctions PASSED; Running test: Test method testNativeBuild(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeCallSpeed PASSED; Running test: Test method testNativeGlobal(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeGlobal PASSED; Running test: Test method testNativePtr(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativePtr PASSED; Running test: Test method testNativeUpcall(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeUpcall PASSED; Running test: Test method testObjectArray(is.hai,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:8077,test,test,8077,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,"rtionError: assertion failed', tpl = JavaObject id=o550; deepest = 'AssertionError: assertion failed'; full = 'java.lang.AssertionError: assertion failed\n\tat scala.Predef$.assert(Predef.scala:208)\n\tat is.hail.expr.ir.BlockMa...lientServerConnection.run(ClientServerConnection.java:106)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n\n\n'; error_id = -1. def deco(*args, **kwargs):; import pyspark; try:; return f(*args, **kwargs); except py4j.protocol.Py4JJavaError as e:; s = e.java_exception.toString(); ; # py4j catches NoSuchElementExceptions to stop array iteration; if s.startswith('java.util.NoSuchElementException'):; raise; ; tpl = Env.jutils().handleForPython(e.java_exception); deepest, full, error_id = tpl._1(), tpl._2(), tpl._3(); > raise fatal_error_from_java_error_triplet(deepest, full, error_id) from None; E hail.utils.java.FatalError: AssertionError: assertion failed; E ; E Java stack trace:; E java.lang.AssertionError: assertion failed; E 	at scala.Predef$.assert(Predef.scala:208); E 	at is.hail.expr.ir.BlockMatrixMap.execute(BlockMatrixIR.scala:269); E 	at is.hail.expr.ir.BlockMatrixMap2.execute(BlockMatrixIR.scala:393); E 	at is.hail.expr.ir.Interpret$.run(Interpret.scala:875); E 	at is.hail.expr.ir.Interpret$.alreadyLowered(Interpret.scala:59); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.evaluate$1(LowerOrInterpretNonCompilable.scala:20); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:67); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.rewrite$1(LowerOrInterpretNonCompilable.scala:53); E 	at is.hail.expr.ir.LowerOrInterpretNonCompilable$.apply(LowerOrInterpretNonCompilable.scala:72); E 	at is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass$.transform(LoweringPass.scala:69); E 	at is.hail.expr.ir.lowering.LoweringPass.$anonfun$apply$3(LoweringPass.scala:16); E 	at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:81); E 	at is.hail.expr.ir.lowering.LoweringPass.$a",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229:2850,assert,assert,2850,https://hail.is,https://github.com/hail-is/hail/pull/12754#issuecomment-1456467229,1,['assert'],['assert']
Testability,"rtyom Arutyunyan).</li>; </ul>; <h2>3.1.30</h2>; <ul>; <li>Reduced size for project with <code>brotli</code> compression (by Anton Khlynovskiy).</li>; </ul>; <h2>3.1.29</h2>; <ul>; <li>Reduced npm package size.</li>; </ul>; <h2>3.1.28</h2>; <ul>; <li>Reduced npm package size.</li>; </ul>; <h2>3.1.27</h2>; <ul>; <li>Cleaned <code>dependencies</code> from development tools.</li>; </ul>; <h2>3.1.26</h2>; <ul>; <li>Improved performance (by Eitan Har-Shoshanim).</li>; <li>Reduced npm package size.</li>; </ul>; <h2>3.1.25</h2>; <ul>; <li>Fixed <code>browserify</code> support.</li>; </ul>; <h2>3.1.24</h2>; <ul>; <li>Fixed <code>browserify</code> support (by Artur Paikin).</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ai/nanoid/commit/23b136929a6d58f32e31b269534a3ce3f680a086""><code>23b1369</code></a> Release 3.2 version</li>; <li><a href=""https://github.com/ai/nanoid/commit/967788efce880960512f969a56f8f22f3fc20bae""><code>967788e</code></a> Remove TS test tools</li>; <li><a href=""https://github.com/ai/nanoid/commit/27eaa90cd207a7782bbcf17343092ae87dd62164""><code>27eaa90</code></a> Simplify new binary tool</li>; <li><a href=""https://github.com/ai/nanoid/commit/a9d91239931dc77506381874826d297aee71d6ef""><code>a9d9123</code></a> Update dependencies</li>; <li><a href=""https://github.com/ai/nanoid/commit/32b9bdaab1fbc28576b17de8516164ce0360f292""><code>32b9bda</code></a> Allows passing size or custom alphabet via cli as args (<a href=""https://github-redirect.dependabot.com/ai/nanoid/issues/334"">#334</a>)</li>; <li><a href=""https://github.com/ai/nanoid/commit/246d5f87b6b34e23b5e401bdf3da1f80c810ac4c""><code>246d5f8</code></a> Update vite</li>; <li><a href=""https://github.com/ai/nanoid/commit/afdf9c92b41427f35476fbe14b5af5d73dd7fbdb""><code>afdf9c9</code></a> doc: Fixed Typo (<a href=""https://github-redirect.dependabot.com/ai/nanoid/issues/335"">#335</a>)</li>; <li><a href=""https://github.com/ai/nanoid/commit/90a446fe",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11284:1750,test,test,1750,https://hail.is,https://github.com/hail-is/hail/pull/11284,2,['test'],['test']
Testability,"ruby_abi_version to exported symbols. (<a href=""https://github-redirect.dependabot.com/grpc/grpc/pull/28976"">#28976</a>)</li>; </ul>; <h2>Objective-C</h2>; <p>First developer preview of XCFramework binary distribution via Cocoapod (<a href=""https://github-redirect.dependabot.com/grpc/grpc/issues/28749"">#28749</a>).</p>; <p>This brings in significant speed up to local compile time and includes support for Apple Silicon build.</p>; <ul>; <li>The following binary pods are made available for ObjC V1 &amp; V2 API</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/grpc/grpc/commit/d52ed193d11dee797c0d51dc8db06032998b33f4""><code>d52ed19</code></a> Bump version to v1.48.1 (<a href=""https://github-redirect.dependabot.com/grpc/grpc/issues/30782"">#30782</a>)</li>; <li><a href=""https://github.com/grpc/grpc/commit/2c7ba6410e5f9849a4848ff2e23839d6f8339f1e""><code>2c7ba64</code></a> xDS interop: Python LB tests build and use the python server (<a href=""https://github-redirect.dependabot.com/grpc/grpc/issues/30637"">#30637</a>) (<a href=""https://github-redirect.dependabot.com/grpc/grpc/issues/30655"">#30655</a>)</li>; <li><a href=""https://github.com/grpc/grpc/commit/d0f491285f74f8b07dec7f1c745a6636f3a691de""><code>d0f4912</code></a> Bump version to 1.48.1-pre1 (on v1.48.x branch) (<a href=""https://github-redirect.dependabot.com/grpc/grpc/issues/30627"">#30627</a>)</li>; <li><a href=""https://github.com/grpc/grpc/commit/a8065cb662ca35f2b57efd636b1ac193d327ed74""><code>a8065cb</code></a> Backport EventEngine Forkables (<a href=""https://github-redirect.dependabot.com/grpc/grpc/issues/30605"">#30605</a>)</li>; <li><a href=""https://github.com/grpc/grpc/commit/796a8ddcfe629c1ef7beae117efce2004886ecd9""><code>796a8dd</code></a> xDS interop: add missing image tagging to the buildscripts (<a href=""https://github-redirect.dependabot.com/grpc/grpc/issues/30520"">#30520</a>) (<a href=""http",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12201:3625,test,tests,3625,https://hail.is,https://github.com/hail-is/hail/pull/12201,1,['test'],['tests']
Testability,rument.dylib. One of the two will be used. Which one is undefined. Gradle suite > Gradle test > org.broadinstitute.hail.annotations.AnnotationsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.io.compress.BGzipCodecSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.CallSuite.testCall PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportPlinkSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrig PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneH,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:1483,test,test,1483,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,1,['test'],['test']
Testability,"runcated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/cbeust/testng/commit/b94395dea479308ea3fe825269730b960f44d805""><code>b94395d</code></a> Bump version to 7.7.1 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/89dc5845fcb46c26af187e50ea907a7382d06e72""><code>89dc584</code></a> Streamline overloaded assertion methods for Groovy</li>; <li><a href=""https://github.com/cbeust/testng/commit/5ac0021d14f7eb00804fe235aaefc5c2fbce57d1""><code>5ac0021</code></a> Adding release notes</li>; <li><a href=""https://github.com/cbeust/testng/commit/c0e1e772f1fc0ab2142f3a4114a2b8cfe60fa7e1""><code>c0e1e77</code></a> Adjust version reference in deprecation msgs.</li>; <li><a href=""https://github.com/cbeust/testng/commit/011527d9bf0f91a40539f5e5467cc106888810d9""><code>011527d</code></a> Bump version to 7.7.0 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/7846c444a411647f7e401a097224702188c93835""><code>7846c44</code></a> Deprecate support for running JUnit tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/8630a7e8fe12985d71c00212f9362fd38fb0cb9e""><code>8630a7e</code></a> Ensure ITestContext available for JUnit4 tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/7070b020def0089d0d9dc695a5762ad16e974ce6""><code>7070b02</code></a> Streamline dependsOnMethods for configurations</li>; <li><a href=""https://github.com/cbeust/testng/commit/d7e0bb1cbcd7933d34d704678e75cbaf42704505""><code>d7e0bb1</code></a> Deprecate support for running Spock Tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/ca7a3a293008389096be75fea4936af8e5f79650""><code>ca7a3a2</code></a> Ensure All tests run all the time</li>; <li>Additional commits viewable in <a href=""https://github.com/cbeust/testng/compare/testng-6.8.21...7.7.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:15628,test,testng,15628,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],"['testng', 'tests']"
Testability,running tests now!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10900#issuecomment-978194003:8,test,tests,8,https://hail.is,https://github.com/hail-is/hail/pull/10900#issuecomment-978194003,1,['test'],['tests']
Testability,"ry: 7G; terminationMessagePath: /dev/termination-log; terminationMessagePolicy: File; volumeMounts:; - mountPath: /gsa-key; name: gsa-key; - mountPath: /io; name: batch-12728-job-287-742170; - mountPath: /var/run/secrets/kubernetes.io/serviceaccount; name: batch-output-pod-token-8pkmz; readOnly: true; - command:; - /bin/sh; - -c; - ""\n set -ex\n python3 -m batch.cleanup_sidecar\n ""; env:; - name: COPY_OUTPUT_CMD; value: set -ex; (gcloud -q auth activate-service-account --key-file=/gsa-key/privateKeyData; || (sleep $(( 5 + (RANDOM % 5) )); gcloud -q auth activate-service-account; --key-file=/gsa-key/privateKeyData)) && gsutil -m cp -R /io/pipeline/pipeline-1cac3dd4e66d/__TASK__286/8926feac; gs://hail-wang-ukps2/pipeline/pipeline-1cac3dd4e66d/__TASK__286/8926feac; image: gcr.io/hail-vdc/batch:s32fqwbuz8nv; imagePullPolicy: IfNotPresent; name: cleanup; ports:; - containerPort: 5000; protocol: TCP; resources:; requests:; cpu: 500m; terminationMessagePath: /dev/termination-log; terminationMessagePolicy: File; volumeMounts:; - mountPath: /batch-gsa-key; name: batch-gsa-key; - mountPath: /gsa-key; name: gsa-key; - mountPath: /io; name: batch-12728-job-287-742170; - mountPath: /var/run/secrets/kubernetes.io/serviceaccount; name: batch-output-pod-token-8pkmz; readOnly: true; - command:; - /bin/sh; - -c; - ""\n set -ex\n python3 -m batch.keep_alive_sidecar\n ""; image: gcr.io/hail-vdc/batch:s32fqwbuz8nv; imagePullPolicy: IfNotPresent; name: keep-alive; ports:; - containerPort: 5001; protocol: TCP; resources:; requests:; cpu: 1m; terminationMessagePath: /dev/termination-log; terminationMessagePolicy: File; volumeMounts:; - mountPath: /gsa-key; name: gsa-key; - mountPath: /io; name: batch-12728-job-287-742170; - mountPath: /var/run/secrets/kubernetes.io/serviceaccount; name: batch-output-pod-token-8pkmz; readOnly: true; dnsPolicy: ClusterFirst; enableServiceLinks: true; initContainers:; - command:; - /bin/sh; - -c; - ""\n set -ex\n (gcloud -q auth activate-service-account --key-fi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7016:7180,log,log,7180,https://hail.is,https://github.com/hail-is/hail/issues/7016,1,['log'],['log']
Testability,ry>; <Function test_tiny_worker_has_tiny_memory>; <Function test_big_worker_has_big_memory>; <Function test_regions>; <Package expr>; <Module test_expr.py>; <UnitTestCase Tests>; <TestCaseFunction test_aggregators>; <TestCaseFunction test_densify_table>; <TestCaseFunction test_scan>; <Package genetics>; <Module test_reference_genome.py>; <Function test_reference_genome>; <Function test_reference_genome_sequence>; <Function test_reference_genome_liftover>; <Function test_read_custom_reference_genome>; <Package matrixtable>; <Module test_grouped_matrix_table.py>; <UnitTestCase Tests>; <TestCaseFunction test_joins_work_correctly>; <Module test_matrix_table.py>; <UnitTestCase Tests>; <TestCaseFunction test_collect_cols_by_key>; <TestCaseFunction test_naive_coalesce>; <TestCaseFunction test_range_count>; <Package methods>; <Module test_family_methods.py>; <UnitTestCase Tests>; <TestCaseFunction test_trio_matrix_1>; <Module test_impex.py>; <UnitTestCase VCFTests>; <TestCaseFunction test_glob>; <TestCaseFunction test_import_gvcfs>; <Module test_qc.py>; <UnitTestCase Tests>; <TestCaseFunction test_sample_qc>; <TestCaseFunction test_variant_qc>; <Module test_skat.py>; <Function test_logistic_skat_phenotypes_are_binary>; <Function test_logistic_skat_no_weights_R_truth>; <Module test_statgen.py>; <UnitTestCase Tests>; <TestCaseFunction test_impute_sex_same_as_plink>; <TestCaseFunction test_linreg_basic>; <Package relatedness>; <Module test_identity_by_descent.py>; <Function test_ibd_default_arguments>; <Module test_pc_relate.py>; <Function test_pc_relate_simple_example>; <Package table>; <Module test_grouped_table.py>; <UnitTestCase GroupedTableTests>; <TestCaseFunction test_aggregate_by>; <Module test_table.py>; <UnitTestCase Tests>; <TestCaseFunction test_aggregate1>; <TestCaseFunction test_annotate>; <Function test_lowered_persist>; <Function test_lowered_shuffle>; <Package utils>; <Module test_hl_hadoop_and_hail_fs.py>; <Function test_hadoop_methods_1[remote]>; <Function t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13620#issuecomment-1720268851:2371,Test,TestCaseFunction,2371,https://hail.is,https://github.com/hail-is/hail/pull/13620#issuecomment-1720268851,2,['Test'],['TestCaseFunction']
Testability,"ry>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/pytest-dev/pytest-asyncio/releases"">pytest-asyncio's releases</a>.</em></p>; <blockquote>; <h2>pytest-asyncio 0.23.6</h2>; <h1>0.23.6 (2024-03-19)</h1>; <ul>; <li>Fix compatibility with pytest 8.2 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/pull/800"">#800</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.5.post1</h2>; <h1>0.23.5 (2024-02-09)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; <li>Prevent DeprecationWarning about internal use of <code>asyncio.get_event_loop()</code> from affecting test cases <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/757"">#757</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio curre",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:1045,test,test,1045,https://hail.is,https://github.com/hail-is/hail/pull/14507,2,['test'],"['test', 'tests']"
Testability,"ry>⚠️ <b>Warning</b></summary>. ```; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **611/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 6.5 | Denial of Service (DoS) <br/>[SNYK-PYTHON-CRYPTOGRAPHY-5914629](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-5914629) | `cryptography:` <br> `41.0.3 -> 41.0.4` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkNGViNWEyYS04NmZjLTRhZDQtYmM5MC1mZDViZWU4Mjg3YWUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImQ0ZWI1YTJhLTg2ZmMtNGFkNC1iYzkwLWZkNWJlZTgyODdhZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13701:1443,test,tested,1443,https://hail.is,https://github.com/hail-is/hail/pull/13701,1,['test'],['tested']
Testability,"ry>⚠️ <b>Warning</b></summary>. ```; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **611/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 6.5 | Denial of Service (DoS) <br/>[SNYK-PYTHON-CRYPTOGRAPHY-5914629](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-5914629) | `cryptography:` <br> `41.0.3 -> 41.0.4` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmOTk4OWJlMC0yOWQ3LTQyYTctYTAzMC04NzljMTRmOGE2N2YiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImY5OTg5YmUwLTI5ZDctNDJhNy1hMDMwLTg3OWMxNGY4YTY3ZiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13700:1435,test,tested,1435,https://hail.is,https://github.com/hail-is/hail/pull/13700,1,['test'],['tested']
Testability,"ryStore: MemoryStore started with capacity 15.8 GB; 17/01/17 09:24:46 INFO SparkEnv: Registering OutputCommitCoordinator; 17/01/17 09:24:46 INFO Utils: Successfully started service 'SparkUI' on port 4040.; 17/01/17 09:24:46 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://129.94.72.55:4040; 17/01/17 09:24:46 INFO Executor: Starting executor ID driver on host localhost; 17/01/17 09:24:46 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 37833.; 17/01/17 09:24:46 INFO NettyBlockTransferService: Server created on 129.94.72.55:37833; 17/01/17 09:24:46 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 129.94.72.55, 37833); 17/01/17 09:24:46 INFO BlockManagerMasterEndpoint: Registering block manager 129.94.72.55:37833 with 15.8 GB RAM, BlockManagerId(driver, 129.94.72.55, 37833); 17/01/17 09:24:46 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 129.94.72.55, 37833); hail: info: running: read test.in.vds; SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"".; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.; hail: info: running: annotatevariants expr -c 'va = {}'; hail: info: running: write -o test.out.vds; [Stage 1:==> (1 + 24) / 25]hail: write: caught exception: org.apache.spark.SparkException: Job aborted.; at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1.apply$mcV$sp(InsertIntoHadoopFsRelationCommand.scala:149); at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1.apply(InsertIntoHadoopFsRelationCommand.scala:115); at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1.apply(InsertIntoHadoopFsRelationCommand.scala:115); at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:57); at org.apache",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1260:2561,test,test,2561,https://hail.is,https://github.com/hail-is/hail/issues/1260,1,['test'],['test']
Testability,"s (which are invoked by hail/Makefile) combine the two architecture-specific dylibs into a ""universal"" dylib. You can verify this by running `file` on the dylibs. Here I run them on the new ""prebuilt"" files which are in this PR:. ```; (base) dking@wm28c-761 hail % file hail/prebuilt/lib/darwin/libboot.dylib; hail/prebuilt/lib/darwin/libboot.dylib: Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit dynamically linked shared library x86_64] [arm64:Mach-O 64-bit dynamically linked shared library arm64]; hail/prebuilt/lib/darwin/libboot.dylib (for architecture x86_64):	Mach-O 64-bit dynamically linked shared library x86_64; hail/prebuilt/lib/darwin/libboot.dylib (for architecture arm64):	Mach-O 64-bit dynamically linked shared library arm64; (base) dking@wm28c-761 hail % file hail/prebuilt/lib/darwin/libhail.dylib; hail/prebuilt/lib/darwin/libhail.dylib: Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit dynamically linked shared library x86_64] [arm64:Mach-O 64-bit dynamically linked shared library arm64]; hail/prebuilt/lib/darwin/libhail.dylib (for architecture x86_64):	Mach-O 64-bit dynamically linked shared library x86_64; hail/prebuilt/lib/darwin/libhail.dylib (for architecture arm64):	Mach-O 64-bit dynamically linked shared library arm64; ```. @chrisvittal , I need you to test this new makefile in Linux:. ```; make -C hail pytest HAIL_COMPILE_NATIVES=1 PYTEST_ARGS='-k test_ibd_does_not_error_with_dummy_maf_float64'; ```. I am fairly certain this Makefile will not work on old macbooks because they cannot compile for Apple M1. This means that we always need someone with an Apple M1 macbook to build the prebuilts. *A MAJOR CAVEAT OF THIS CHANGE*: Users of Apple M1 macbooks must upgrade to an arm64 JVM. They *must not* use Rosetta 2 to simulate an x86_64 JVM. In particular, this means that Apple M1 users must upgrade to JVM 11 because there are [no Adopt OpenJDK JVMs for arm64](https://adoptium.net/temurin/releases/?version=8&os=mac).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14006:2858,test,test,2858,https://hail.is,https://github.com/hail-is/hail/pull/14006,1,['test'],['test']
Testability,"s /hail/test; Found 1 items; -rw-r--r-- 3 hdfs supergroup 21194 2017-08-08 18:20 /hail/test/BRCA1.raw_indel.vcf; ```; But when I excuted the command:; ```; hc.import_vcf('/hail/test/BRCA1.raw_indel.vcf').write('/hail/test/brca1.vds'); ```; there are some errors：; ```; [hdfs@tele-1 root]$ python; Python 2.7.13 |Anaconda 4.4.0 (64-bit)| (default, Dec 20 2016, 23:09:15) ; [GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; Anaconda is brought to you by Continuum Analytics.; Please check out: http://continuum.io/thanks and https://anaconda.org; >>> import hail; >>> hc = hail.HailContext(); Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; hail: info: SparkUI: http://192.168.1.4:4041; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.1-0320a61; >>> hc.import_vcf('/hail/test/BRCA1.raw_indel.vcf').write('/hail/test/brca1.vds'); hail: warning: `/hail/test/BRCA1.raw_indel.vcf' refers to no files; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-483>"", line 2, in import_vcf; File ""/opt/Software/hail/python/hail/java.py"", line 112, in handle_py4j; 'Error summary: %s' % (deepest, full, Env.hc().version, deepest)); hail.java.FatalError: HailException: arguments refer to no files. Java stack trace:; is.hail.utils.HailException: arguments refer to no files; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6); 	at is.hail.utils.package$.fatal(package.scala:25); 	at is.hail.io.vcf.LoadVCF$.globAllVCFs(LoadVCF.scala:105); 	at is.hail.HailContext.importVCFs(HailContext.scala:523); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorI",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076:1610,test,test,1610,https://hail.is,https://github.com/hail-is/hail/issues/2076,1,['test'],['test']
Testability,s UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :test; objc[30146]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/bin/java and /Library/Java/JavaVirtualMachines/jdk1.8.0_66.jdk/Contents/Home/jre/lib/libinstrument.dylib. One of the two will be used. Which one is undefined. Gradle suite > Gradle test > org.broadinstitute.hail.annotations.AnnotationsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.io.compress.BGzipCodecSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.CallSuite.testCall PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportPlinkSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrig PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSui,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:1060,test,testSameAsOrig,1060,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,2,['test'],"['test', 'testSameAsOrig']"
Testability,"s at least one pre-existing blank line (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2736"">#2736</a>)</li>; <li>Black now normalizes string prefix order (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2297"">#2297</a>)</li>; <li>Remove spaces around power operators if both operands are simple (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2726"">#2726</a>)</li>; <li>Work around bug that causes unstable formatting in some cases in the presence of the magic trailing comma (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2807"">#2807</a>)</li>; <li>Use parentheses for attribute access on decimal float and int literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Don't add whitespace for attribute access on hexadecimal, binary, octal, and complex literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Treat blank lines in stubs the same inside top-level if statements (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2820"">#2820</a>)</li>; <li>Fix unstable formatting with semicolons and arithmetic expressions (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2817"">#2817</a>)</li>; <li>Fix unstable formatting around magic trailing comma (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2572"">#2572</a>)</li>; </ul>; <h3>Parser</h3>; <ul>; <li>Fix mapping cases that contain as-expressions, like <code>case {&quot;key&quot;: 1 | 2 as password}</code> (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2686"">#2686</a>)</li>; <li>Fix cases that contain multiple top-level as-expressions, like <code>case 1 as a, 2 as b</code> (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2716"">#2716</a>)</li>; <li>Fix call patterns that contain as-expressions with keyword arguments, like <code>case Foo(bar=baz as quux)</code> (<a href=""https://github-redi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11468:2093,stub,stubs,2093,https://hail.is,https://github.com/hail-is/hail/pull/11468,1,['stub'],['stubs']
Testability,"s config was needed & works successfuly for an old version of Hail (0.2.60)... can be revisit if not appropriate for recent version; ```sh; sudo mkdir /opt/hail/; sudo ln -sf /home/hadoop/.local/lib/python3.9/site-packages/hail/backend /opt/hail/backend; ```; * start pyspark; ```sh; $ pyspark; Python 3.9.18 (main, Oct 25 2023, 05:26:35) ; [GCC 7.3.1 20180712 (Red Hat 7.3.1-17)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 3.3.2-amzn-0.1; /_/. Using Python version 3.9.18 (main, Oct 25 2023 05:26:35); Spark context Web UI available at http://ip-192-168-125-39.ap-southeast-1.compute.internal:4040; Spark context available as 'sc' (master = yarn, app id = application_1698211907929_0001).; SparkSession available as 'spark'.; >>> import hail as hl; >>> hl.version(); '0.2.124-e739a95489e4'; hl.init(sc); pip-installed Hail requires additional configuration options in Spark referring; to the path to the Hail Python module directory HAIL_DIR,; e.g. /path/to/python/site-packages/hail:; spark.jars=HAIL_DIR/backend/hail-all-spark.jar; spark.driver.extraClassPath=HAIL_DIR/backend/hail-all-spark.jar; spark.executor.extraClassPath=./hail-all-spark.jarRunning on Apache Spark version 3.3.2-amzn-0.1; SparkUI available at http://ip-192-168-110-1",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1778834949:1766,log,logging,1766,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1778834949,1,['log'],['logging']
Testability,"s follows:; ```; [root@tele-1 ~]# PYSPARK_PYTHON=""ipython"" pyspark --conf spark.sql.files.openCostInBytes=1099511627776 --conf spark.sql.files.maxPartitionBytes=1099511627776 --conf spark.hadoop.parquet.block.size=1099511627776 --conf spark.serializer=org.apache.spark.serializer.KryoSerializer; /usr/local/lib/python3.5/site-packages/IPython/core/history.py:228: UserWarning: IPython History requires SQLite, your history will not be saved; warn(""IPython History requires SQLite, your history will not be saved""); Python 3.5.2 (default, Jul 12 2017, 14:00:23) ; Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.1.0 -- An enhanced Interactive Python.; ? -> Introduction and overview of IPython's features.; %quickref -> Quick reference.; help -> Python's own help system.; object? -> Details about 'object', use 'object??' for extra details.; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; 17/08/09 12:51:55 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 17/08/09 12:51:55 WARN SparkConf: ; SPARK_CLASSPATH was detected (set to '/opt/Software/hail/build/libs/hail-all-spark.jar').; This is deprecated in Spark 1.0+. Please instead use:; - ./spark-submit with --driver-class-path to augment the driver classpath; - spark.executor.extraClassPath to augment the executor classpath; ; 17/08/09 12:51:55 WARN SparkConf: Setting 'spark.executor.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; 17/08/09 12:51:55 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; 17/08/09 12:51:56 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ ver",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-321152609:1053,log,logging,1053,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-321152609,1,['log'],['logging']
Testability,"s lazy-object-proxy, which is not installed.; argon2-cffi-bindings 21.2.0 requires cffi, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **556/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.4 | Cross-site Scripting (XSS) <br/>[SNYK-PYTHON-JINJA2-6150717](https://snyk.io/vuln/SNYK-PYTHON-JINJA2-6150717) | `jinja2:` <br> `3.1.2 -> 3.1.3` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlOTc1OTMyYy1kNmNhLTQ0NTUtYmU4ZC04NzY1ZGY0MTZjMWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImU5NzU5MzJjLWQ2Y2EtNDQ1NS1iZThkLTg3NjVkZjQxNmMxYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14141:1801,test,tested,1801,https://hail.is,https://github.com/hail-is/hail/pull/14141,1,['test'],['tested']
Testability,"s portalocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiodns 2.0.0 requires pycares, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **581/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.9 | NULL Pointer Dereference <br/>[SNYK-PYTHON-CRYPTOGRAPHY-6261585](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-6261585) | `cryptography:` <br> `42.0.2 -> 42.0.4` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1MzAxOWZkZC04YjQwLTQ5NmUtYjRmYS0wMzA5MTAxOTBkZWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjUzMDE5ZmRkLThiNDAtNDk2ZS1iNGZhLTAzMDkxMDE5MGRlYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14344:1509,test,tested,1509,https://hail.is,https://github.com/hail-is/hail/pull/14344,1,['test'],['tested']
Testability,"s prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.5a0</h2>; <h1>0.23.5 (UNRELEASED)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; <li>Declares incom",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:4570,test,tests,4570,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['tests']
Testability,"s project.</h3>. #### Changes included in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - ci/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **581/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.9 | NULL Pointer Dereference <br/>[SNYK-PYTHON-CRYPTOGRAPHY-6261585](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-6261585) | `cryptography:` <br> `42.0.2 -> 42.0.4` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiYWUwMDM5My05NGUzLTRhNjYtYTE5Ni0xMjUwZDg0ZGZiZDgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImJhZTAwMzkzLTk0ZTMtNGE2Ni1hMTk2LTEyNTBkODRkZmJkOCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14343:1235,test,tested,1235,https://hail.is,https://github.com/hail-is/hail/pull/14343,1,['test'],['tested']
Testability,"s release introduces the APPSYNC_JS runtime, and adds support for JavaScript in AppSync functions and AppSync pipeline resolvers.</li>; <li>api-change:<code>dms</code>: [<code>botocore</code>] Adds support for Internet Protocol Version 6 (IPv6) on DMS Replication Instances</li>; <li>api-change:<code>ec2</code>: [<code>botocore</code>] This release adds a new optional parameter &quot;privateIpAddress&quot; for the CreateNatGateway API. PrivateIPAddress will allow customers to select a custom Private IPv4 address instead of having it be auto-assigned.</li>; <li>api-change:<code>elbv2</code>: [<code>botocore</code>] Update elbv2 client to latest version</li>; <li>api-change:<code>emr-serverless</code>: [<code>botocore</code>] Adds support for AWS Graviton2 based applications. You can now select CPU architecture when creating new applications or updating existing ones.</li>; <li>api-change:<code>ivschat</code>: [<code>botocore</code>] Adds LoggingConfiguration APIs for IVS Chat - a feature that allows customers to store and record sent messages in a chat room to S3 buckets, CloudWatch logs, or Kinesis firehose.</li>; <li>api-change:<code>lambda</code>: [<code>botocore</code>] Add Node 18 (nodejs18.x) support to AWS Lambda.</li>; <li>api-change:<code>personalize</code>: [<code>botocore</code>] This release provides support for creation and use of metric attributions in AWS Personalize</li>; <li>api-change:<code>polly</code>: [<code>botocore</code>] Add two new neural voices - Ola (pl-PL) and Hala (ar-AE).</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/boto/boto3/commit/cc2984fc4fe2a399404a81711eb9ece3fb8d6eb7""><code>cc2984f</code></a> Merge branch 'release-1.26.15'</li>; <li><a href=""https://github.com/boto/boto3/commit/0cb8b0e0b79f9b73494172bafcf25dba43205a59""><code>0cb8b0e</code></a> Bumping version to 1.26.15</li>; <li><a href=""https://github.com/bot",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12498:6779,Log,LoggingConfiguration,6779,https://hail.is,https://github.com/hail-is/hail/pull/12498,2,"['Log', 'log']","['LoggingConfiguration', 'logs']"
Testability,"s state refresh complete""}; ```. Because job 1's batch is cancelled, we never restart the job/pod. However, the batch is stuck in an incomplete state. Before this PR's namespace was destroyed, I SSH'ed to the test_batch pod and looked at the batch's status:. ```; root@test-batch:/# curl -H ""Authorization: Bearer $(cat test-jwt/jwt)"" batch.pr-6604-default-ov5tgx24rrou/api/v1alpha/batches/9; {""id"": 9, ""state"": ""running"", ""complete"": false, ""closed"": 1, ""jobs"": [{""batch_id"": 9, ""job_id"": 1, ""state"": ""Running""}; ```. The batch is somehow in the state ""running"" and the only job is also in the; state ""Running"". Only two lines of code transition to the state 'Running'. They; both appear in the suffix of `Job._create_pod`:. ```python; pod, err = await app['k8s'].create_pod(body=pod_template); if err is not None:; if err.status == 409:; log.info(f'pod already exists for job {self.full_id}'); n_updated = await db.jobs.update_record(*self.id, compare_items={'state': self._state}, state='Running'); if n_updated == 0:; log.warning(f'changing the state for job {self.full_id} failed due to the expected state {self._state} not in db'); return; traceback.print_tb(err.__traceback__); log.info(f'pod creation failed for job {self.full_id} '; f'with the following error: {err}'); return. n_updated = await db.jobs.update_record(*self.id, compare_items={'state': self._state}, state='Running'); if n_updated == 0:; log.warning(f'changing the state for job {self.full_id} failed due to the expected state {self._state} not in db'); ```. For either of these database updates to succeed, the thread of control must have; thought the `_state` was `Cancelled` or we moved through some intermediate; state. We continue under the assumption that we went directly to `Running`. Who calls `_create_pod`?. - `start_pod`, but it checks that the state is in `Ready`; - `mark_complete`, but that's only if there's a ""next task"", this job has only; one task. That leaves `create_if_ready` and `mark_unscheduled`. `cre",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:17782,log,log,17782,https://hail.is,https://github.com/hail-is/hail/issues/6617,1,['log'],['log']
Testability,"s to process for format version < 3. ; 2. Divide the search space into chunks of size 100 attempts (empirically determined this was the best chunk size) and randomize the order of the chunks.; 3. Serially process 5000 chunks with only 10 out of the 100 records as a ""burn in period"" to avoid the birthday problem when trying to insert records in parallel.; 4. In parallel, process all the chunks with 10 way parallelism (empirically determined to max CPU for a 4 core db instance); 5. Do an audit of the results to make sure the attempt resources now has the correct number of rows and the billing is within $0.001 per job with the old way and new way of computing the billing. The tolerance of $0.001 was empirically determined. At a threshold of $0.0001, 33/30,000,000 attempts failed. I think this is good enough as there's always going to be rounding errors. I did not do an explicit audit in the code to make sure the other aggregated_*_resources tables did not change. I spot checked this was correct in my test database. To do the complete audit during the actual migration would take more time. I made sure all the inserts were idempotent. Please double check this. The inserts use a temporary table with an isolation level of read committed. The reason for this is because `INSERT INTO ... SELECT` locks the next gap lock if the isolation level is not read committed. Maybe what I did is overkill and it's no longer a problem with the new burn in period. https://dev.mysql.com/doc/refman/8.0/en/innodb-locks-set.html I'd be interested to hear @danking feedback on what the best query here is to allow parallelism. There are ~30 million attempts that need to be processed for hail-vdc (~60% of the attempts). This will add ~20Gi to the existing database. I use 4 cores to get this migration to be ~3 hours, so we will want to **upgrade the database to 8 cores** while this migration is running. The inserting takes about 2 hours and the audit is 45 minutes or so. For the Australians, I think ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11990:2194,test,test,2194,https://hail.is,https://github.com/hail-is/hail/pull/11990,1,['test'],['test']
Testability,"s would be great. My current thoughts on this:. I only looked at the failure in PCA. I was never able to reproduce. My next step to try to reproduce was to run PCA on Lindo's full dataset on dataproc (can't use batch because the error is in spark PCA). I did look carefully through the stack trace, trying to understand what could possibly be happening. The number 177860 from the error isn't either matrix dimension, which is 210234 by 8893. Everything in `org.apache.spark.mllib.linalg.EigenValueDecomposition$.symmetricEigs(EigenValueDecomposition.scala:106)` is independent of the number of rows, so only the number 8893 of cols should be relevent. I wrote a simple test to execute spark PCA with 8893 rows in scala, so I could step through with a debugger:; ```scala; var mt = rangeMatrix(10000, 8893); mt = MatrixMapEntries(mt, InsertFields(Ref(""g"", mt.typ.entryType), Seq(""a"" -> F64(1)))); val t = MatrixToTableApply(mt, PCA(""a"", 10, false)); val n = TableToValueApply(t, ForceCountTable()); assertEvalsTo(n, 8893L); ```; The array `v` in `symmetricEigs` has length 177860 = 8893*20, and I didn't find anything else with that size. The only line I could find that could generate an exception that looks like this is line 555 of `dev.ludovic.netlib.arpack.AbstractARPACK.dsaupd`; ```scala; public void dsaupd(org.netlib.util.intW ido, String bmat, int n, String which, int nev, org.netlib.util.doubleW tol, double[] resid, int offsetresid, int ncv, double[] v, int offsetv, int ldv, int[] iparam, int offsetiparam, int[] ipntr, int offsetipntr, double[] workd, int offsetworkd, double[] workl, int offsetworkl, int lworkl, org.netlib.util.intW info) {; if (debug) System.err.println(""dsaupd"");; checkArgument(""DSAUPD"", 2, lsame(""I"", bmat) || lsame(""G"", bmat));; checkArgument(""DSAUPD"", 3, n >= 0);; checkArgument(""DSAUPD"", 4, lsame(""LA"", which) || lsame(""SA"", which) || lsame(""LM"", which) || lsame(""SM"", which) || lsame(""BE"", which));; checkArgument(""DSAUPD"", 5, 0 < nev && nev < n);; checkArgum",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13688#issuecomment-1760360313:1025,assert,assertEvalsTo,1025,https://hail.is,https://github.com/hail-is/hail/issues/13688#issuecomment-1760360313,2,['assert'],['assertEvalsTo']
Testability,"s, 1m,; 5m, 10m, and 15m. 3. Records are sampled. The sampling rate is a user configured floating point number (precision; unclear) between 0 and 1. 4. Metadata is optionally added to the records. The metadata captures information about the source; and destination VM such as project id, VM name, zone, region, GKE pod, GKE service, and geographic; information of external parties. The user may elect to receive all metadata, no metadata, or a; specific set of metadata fields. 5. The records are written to Google Cloud Logging. The pricing of VPC Flow Logs is described at the [network pricing page](https://cloud.google.com/vpc/network-pricing#network-telemetry). Notice that, if logs are only sent to Cloud Logging (not to BigQuery, Pub/Sub, or Cloud Storage):. > If you store your logs in Cloud Logging, logs generation charges are waived, and only Logging charges apply. I believe in this phrase ""logs generation charges"" refers to *VPC Flow logs* generation charges. The Google Cloud Logging [pricing page](https://cloud.google.com/stackdriver/pricing#google-clouds-operations-suite-pricing) indicates that, after 50 GiB of free logs, the user is charged 0.50 USD per GiB of logs. Storage is free for thirty days and 0.01 USD per GiB for each additional day. We can calculate the cost of our logs as follows. Refer to the [definition of the record format](https://cloud.google.com/vpc/docs/flow-logs#record_format) for details. ```python3; ip_string = len(""123.123.123.123""); ip_connection = 4 + ip_string + ip_string + 4 + 4; date_time = len(""1937-01-01T12:00:27.87+00:20""); record_bytes = sum((; ip_connection,; max(len('SRC'), len('DEST')),; 8,; 8,; 8,; date_time,; date_time,; )); assert record_bytes == 126. hours_per_month = 24 * 60; seconds_per_hour = 60 * 60. seconds_per_interval = 15 * 60; vms = 10000; sampling_rate = 0.5; connections_per_vm_per_aggregation_interval = 100. intervals_per_hour = seconds_per_hour / seconds_per_interval; records_per_hour = intervals_per_hour * vms * c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12883:1979,Log,Logging,1979,https://hail.is,https://github.com/hail-is/hail/pull/12883,1,['Log'],['Logging']
Testability,"s-0-18</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/9298b3e142d48420a8c1edbb353c5d9be3e69348""><code>9298b3e</code></a> Update message catalogs</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/bdeb627c14174d53e0eeaf51ff8d69eb5b296565""><code>bdeb627</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10486"">#10486</a> from tk0miya/fix_babel_extract_message</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/16ca3237bdcdc1b45b6c839af201802aeaf937c2""><code>16ca323</code></a> Fix imgconverter: Failed to extract translation messages</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/dc30920db0a8159da2a4e94cfa107322b83f7cda""><code>dc30920</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10481"">#10481</a> from AA-Turner/lang-none-en</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/200414982c768c213ca66f41fa331a5b4d129d94""><code>2004149</code></a> Update test</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/78c478a579b9d3f57091544d1717ee7f1c507ff1""><code>78c478a</code></a> Merge remote-tracking branch 'upstream/5.0.x' into lang-none-en</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/479e48266c025c99025787a8004a82b2afda8e6c""><code>479e482</code></a> Update warning, revert my original warning patch</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/fb6db30c1024ce5838dcf330f275cdf2adbd94b6""><code>fb6db30</code></a> Update comment</li>; <li>Additional commits viewable in <a href=""https://github.com/sphinx-doc/sphinx/compare/v3.5.4...v5.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=sphinx&package-manager=pip&previous-version=3.5.4&new-version=5.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-u",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11871:5609,test,test,5609,https://hail.is,https://github.com/hail-is/hail/pull/11871,1,['test'],['test']
Testability,"s. If you have an Apple M1 or Apple M2 and `/usr/libexec/java_home -V` does not include `(arm64)`, you must switch to an arm64 version of the JVM. Fixes (hail#14000). Fixes #14000. Hail has never supported its native functionality on Mac OS X Apple M1 chips. In particular, we only built x86_64 compatible dylibs. M1 chips will try to simulate a very basic x86_64 ISA using Rosetta 2 but our x86_64 dylibs expect the ISA of at least sandybridge, which includes some SIMD instructions not supported by Rosetta 2. This PR bifurcates our native build into x86_64 and arm64 targets which live in build/x86_64 and build/arm64, respectively. In Linux, this moves where the object files live, but should otherwise have no effect. The test and benchmark targets use the ""native"" build which always points at the x86_64 object files. The shared object targets, LIBBOOT & LIBHAIL, explicitly depend on x86_64 because that is the only linux architecture we support. In OS X, we only test and benchmark the ""native"" build, which is detected using `uname -m`. For the shared objects (the dylibs) we have four new files: libboot and libbhail for x86_64 and for arm64. Each pair files is placed in `darwin/x86_64/` and `darwin/arm64/`, respectively. Those dylibs are never meant to escape the src/main/c world. The LIBBOOT and LIBHAIL targets (which are invoked by hail/Makefile) combine the two architecture-specific dylibs into a ""universal"" dylib. You can verify this by running `file` on the dylibs. Here I run them on the new ""prebuilt"" files which are in this PR:. ```; (base) dking@wm28c-761 hail % file hail/prebuilt/lib/darwin/libboot.dylib; hail/prebuilt/lib/darwin/libboot.dylib: Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit dynamically linked shared library x86_64] [arm64:Mach-O 64-bit dynamically linked shared library arm64]; hail/prebuilt/lib/darwin/libboot.dylib (for architecture x86_64):	Mach-O 64-bit dynamically linked shared library x86_64; hail/prebuilt/lib/darwin/libb",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14006:1175,test,test,1175,https://hail.is,https://github.com/hail-is/hail/pull/14006,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,s.hail.annotations.AnnotationsSuite). Gradle suite > Gradle test > is.hail.annotations.AnnotationsSuite.testReadWrite FAILED; org.apache.spark.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsI,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1569,test,testIterateFromUntil,1569,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['testIterateFromUntil']
Testability,s.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGi,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1843,test,test,1843,https://hail.is,https://github.com/hail-is/hail/issues/4718,3,"['Test', 'test']","['Test', 'test', 'testQueryByKey']"
Testability,s.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[3]([Ljava.lang.String;@3c90c5dc)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[3]([Ljava.lang.String;@3c90c5dc) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[4]([Ljava.lang.String;@165d0f2d)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[4]([Ljava.lang.String;@165d0f2d) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[5]([Ljava.lang.String;@2cb6cb35)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[5]([Ljava.lang.String;@2cb6cb35) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[6]([Ljava.lang.String;@4c09f4c5)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[6]([Ljava.la,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:3241,test,test,3241,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,s.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:6236,Assert,AssertionError,6236,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['Assert'],['AssertionError']
Testability,s.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:6514,Assert,AssertionError,6514,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['Assert'],['AssertionError']
Testability,s.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFunctions PASSED; Running test: Test method testNativeBuild(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeCallSpeed PASSED; Running test: Test method testNativeGlobal(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeGlobal PASSED; Running test: Test method testNativePtr(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativePtr PASSED; Running test: Test method testNativeUpcall(is.hail.nativecode.NativeCodeSuite); DEBUG: Loggin,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:7900,Assert,AssertionError,7900,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['Assert'],['AssertionError']
Testability,"s.name()</code>_ longer</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/giampaolo/psutil/commit/f1a54ad88527e0706fb8a88ad7daae80686acc62""><code>f1a54ad</code></a> pre-release</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/d81e75e94a1dd2b8d64caa0e72c771a7196a5d15""><code>d81e75e</code></a> HISTORY.rst add hyperlinks pointing to psutil API doc (<a href=""https://github-redirect.dependabot.com/giampaolo/psutil/issues/2042"">#2042</a>)</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/a7165b5c02670cb7c4886425dd3911dd1b1116a6""><code>a7165b5</code></a> add sponsorhips / supporters <a href=""https://github.com/indeedeng""><code>@​indeedeng</code></a> and <a href=""https://github.com/PySimpleGUI""><code>@​PySimpleGUI</code></a>; thanks a lot! ;)</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/ff2f4d4c4986bffbc5348a197396e11bef057346""><code>ff2f4d4</code></a> assert scripts have +x bit</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/ebbaae8d1f42f051282af79d60f19cb1161088a5""><code>ebbaae8</code></a> git pre commit hook: use shlex.split()</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/39dc44bfa5fbb9500166b3480295379602e5bbc5""><code>39dc44b</code></a> Automatically sort imports (isort CLI tool) (<a href=""https://github-redirect.dependabot.com/giampaolo/psutil/issues/2033"">#2033</a>)</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/b490b5d51af6ed29709c357a00fcdb6bda26df78""><code>b490b5d</code></a> fix missing arg passed to C psutil_debug()</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/eb2f74c153987b4e0d03aa16931d97e8137d9257""><code>eb2f74c</code></a> Fix CI tests / wheels / workflow (<a href=""https://github-redirect.dependabot.com/giampaolo/psutil/issues/2024"">#2024</a>)</li>; <li><a href=""https://github.com/giampaolo/psutil/commit/a1ae994cabff37eb86c6ca4564b4f193a73a7b0",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11459:4628,assert,assert,4628,https://hail.is,https://github.com/hail-is/hail/pull/11459,1,['assert'],['assert']
Testability,"s.py:1869: in _run_once; event_list = self._selector.select(timeout); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <selectors.EpollSelector object at 0x7fae890f2d30>; timeout = 15.402000000000001. def select(self, timeout=None):; if timeout is None:; timeout = -1; elif timeout <= 0:; timeout = 0; else:; # epoll_wait() has a resolution of 1 millisecond, round away; # from zero to wait *at least* timeout seconds.; timeout = math.ceil(timeout * 1e3) * 1e-3; ; # epoll_wait() expects `maxevents` to be greater than zero;; # we want to make sure that `select()` can be called when no; # FD is registered.; max_ev = max(len(self._fd_to_key), 1); ; ready = []; try:; > fd_event_list = self._selector.poll(timeout, max_ev); E Failed: Timeout >360.0s. usr/lib/python3.9/selectors.py:469: Failed; ------------------------------ Captured log setup ------------------------------; 2023-09-06T21:45:24 INFO test.conftest conftest.py:14:log_before_after starting test; 2023-09-06T21:45:24 INFO hailtop.aiocloud.aioazure.credentials credentials.py:99:default_credentials using credentials file /test-gsa-key/key.json; ------------------------------ Captured log call -------------------------------; 2023-09-06T21:45:25 INFO azure.identity.aio._internal.get_token_mixin get_token_mixin.py:93:get_token ClientSecretCredential.get_token succeeded; 2023-09-06T21:45:25 INFO batch_client.aioclient aioclient.py:809:_submit created batch 191; 2023-09-06T21:47:17 WARNING hailtop.utils utils.py:842:retry_transient_errors_with_debug_string A transient error occured. We will automatically retry. Do not be alarmed. We have thus far seen 2 transient errors (next delay: 3.794s). The most recent error was <class 'asyncio.exceptions.TimeoutError'> . ------------------------------ live log teardown -------------------------------; 2023-09-06T21:51:25 INFO test.conftest conftest.py:16:log_before_after ending test. ```. ### Version. 0.2.120. ### Relevant log output. _No resp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13582:3830,test,test,3830,https://hail.is,https://github.com/hail-is/hail/issues/13582,1,['test'],['test']
Testability,"s/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logg",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:1986,log,logging,1986,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"s/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c5",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:1793,log,logging,1793,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"s/master-init.sh \; 	--packages slackclient==2.0.0,websocket-client,sklearn,tabulate,statsmodels,scikit-learn,hdbscan,matplotlib bw2. Fails with the following error:; ```; gcloud beta dataproc clusters create \; bw2 \; --image-version=1.4-debian9 \; --properties=spark:spark.driver.maxResultSize=0,spark:spark.task.maxFailures=20,spark:spark.kryoserializer.buffer.max=1g,spark:spark.driver.extraJavaOptions=-Xss4M,spark:spark.executor.extraJavaOptions=-Xss4M,hdfs:dfs.replication=1,dataproc:dataproc.logging.stackdriver.enable=false,dataproc:dataproc.monitoring.stackdriver.enable=false,spark:spark.driver.memory=41g \; --initialization-actions=gs://hail-common/hailctl/dataproc/0.2.18/init_notebook.py,gs://gnomad-public/tools/inits/master-init.sh \; --metadata=^|||^WHEEL=gs://hail-common/hailctl/dataproc/0.2.18/hail-0.2.18-py3-none-any.whl|||PKGS=aiohttp|bokeh>1.1,<1.3|decorator<5|gcsfs==0.2.1|hurry.filesize==0.9|ipykernel<5|nest_asyncio|numpy<2|pandas>0.22,<0.24|parsimonious<0.9|PyJWT|python-json-logger==0.1.11|requests>=2.21.0,<2.21.1|scipy>1.2,<1.4|tabulate==0.8.3|slackclient==2.0.0|websocket-client|sklearn|tabulate|statsmodels|scikit-learn|hdbscan|matplotlib \; --master-machine-type=n1-highmem-8 \; --master-boot-disk-size=100GB \; --num-master-local-ssds=0 \; --num-preemptible-workers=0 \; --num-worker-local-ssds=0 \; --num-workers=2 \; --preemptible-worker-boot-disk-size=40GB \; --worker-boot-disk-size=40 \; --worker-machine-type=n1-standard-8 \; --zone=us-central1-b \; --initialization-action-timeout=20m \; --labels=creator=weisburd_broadinstitute_org \; --max-idle=12h; Starting cluster 'bw2'...; Waiting on operation [projects/seqr-project/regions/global/operations/46f1d37d-798a-3fc0-8f70-eac304448a08].; Waiting for cluster creation operation...; WARNING: For PD-Standard without local SSDs, we strongly recommend provisioning 1TB or larger to ensure consistently high I/O performance. See https://cloud.google.com/compute/docs/disks/performance for information on disk I/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:1087,log,logger,1087,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['log'],['logger']
Testability,"s/py4j/clientserver.py"", line 58 in run; File ""/usr/lib/python3.9/threading.py"", line 980 in _bootstrap_inner; File ""/usr/lib/python3.9/threading.py"", line 937 in _bootstrap. Current thread 0x00007fa52bd6b000 (most recent call first):; File ""/usr/local/lib/python3.9/dist-packages/hail/backend/py4j_backend.py"", line 217 in _rpc; File ""/usr/local/lib/python3.9/dist-packages/hail/backend/backend.py"", line 212 in table_type; File ""/usr/local/lib/python3.9/dist-packages/hail/ir/table_ir.py"", line 438 in _compute_type; File ""/usr/local/lib/python3.9/dist-packages/hail/ir/base_ir.py"", line 406 in compute_type; File ""/usr/local/lib/python3.9/dist-packages/hail/ir/base_ir.py"", line 415 in typ; File ""/usr/local/lib/python3.9/dist-packages/hail/table.py"", line 393 in __init__; File ""/usr/local/lib/python3.9/dist-packages/hail/methods/impex.py"", line 3293 in read_table; File ""/usr/local/lib/python3.9/dist-packages/hail/typecheck/check.py"", line 584 in wrapper; File ""<decorator-gen-1482>"", line 2 in read_table; File ""/io/test/hail/matrixtable/test_file_formats.py"", line 104 in test_backward_compatability_ht; File ""/usr/local/lib/python3.9/dist-packages/_pytest/python.py"", line 194 in pytest_pyfunc_call; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_callers.py"", line 102 in _multicall; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_manager.py"", line 119 in _hookexec; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_hooks.py"", line 501 in __call__; File ""/usr/local/lib/python3.9/dist-packages/_pytest/python.py"", line 1792 in runtest; File ""/usr/local/lib/python3.9/dist-packages/_pytest/runner.py"", line 169 in pytest_runtest_call; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_callers.py"", line 102 in _multicall; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_manager.py"", line 119 in _hookexec; File ""/usr/local/lib/python3.9/dist-packages/pluggy/_hooks.py"", line 501 in __call__; File ""/usr/local/lib/python3.9/dist-packages/_pytest/runner.py"", line 262 in",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14299:4709,test,test,4709,https://hail.is,https://github.com/hail-is/hail/issues/14299,1,['test'],['test']
Testability,"s://cloud.githubusercontent.com/assets/3201642/22859658/c6d27e12-f0b1-11e6-814f-b4a75dd54162.png). Comparison of iterations until convergence, note that LRT is bimodal due to quasi-separation, whereas Firth is not. When well-posed, Firth takes more iterations to converge as expected:; ![logregiter](https://cloud.githubusercontent.com/assets/3201642/22859638/df6c31ee-f0b0-11e6-9443-1a00bb2e9848.png). LRT iterations:; ![logreglrtiter](https://cloud.githubusercontent.com/assets/3201642/22859676/816119b4-f0b2-11e6-8401-2b6600d6f443.png). Firth iterations:; ![logregfirthiter](https://cloud.githubusercontent.com/assets/3201642/22859677/883c4a6a-f0b2-11e6-9aad-b79e613f2ba7.png). For the record, Wald is mis-calibrated for small counts:; ![logregpvalwaldlrt](https://cloud.githubusercontent.com/assets/3201642/22859691/f629f5fe-f0b2-11e6-98fe-b96b3ef497ec.png). Score is more conservative than LRT:; ![logregpvalscorelrt](https://cloud.githubusercontent.com/assets/3201642/22859708/92750f7a-f0b3-11e6-93af-3219eb9e025f.png). Firth is more conservative than score:; ![logregpvalscorefirth](https://cloud.githubusercontent.com/assets/3201642/22859693/fed4555a-f0b2-11e6-9636-2a8075b0a04a.png). And linear betas are super conservative:; ![logregbetafirthlin](https://cloud.githubusercontent.com/assets/3201642/22867304/c63d2b76-f153-11e6-87b3-445c58796695.png). But linear pvals are okay:; ![logregpvalfirthlin](https://cloud.githubusercontent.com/assets/3201642/22867309/dc0f0d70-f153-11e6-840d-308dc0570a6a.png). And essentially identical to score test:; ![logregpvalscorelin](https://cloud.githubusercontent.com/assets/3201642/22867310/e475f730-f153-11e6-9cba-acec78a12964.png). Here's a QQ-plot:; ![logreg qqplot](https://cloud.githubusercontent.com/assets/3201642/23096398/c6c3db0e-f5e9-11e6-97e8-4a565bcc9cb8.png). Here's a QQ-plot restricted to variants with > 20 hets:; ![logreg qqplot 20het](https://cloud.githubusercontent.com/assets/3201642/23096496/ed0cf5b4-f5eb-11e6-8283-d4c02dfb9f76.png)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1375#issuecomment-279196409:3176,log,logregpvalscorefirth,3176,https://hail.is,https://github.com/hail-is/hail/pull/1375#issuecomment-279196409,7,"['log', 'test']","['logreg', 'logregbetafirthlin', 'logregpvalfirthlin', 'logregpvalscorefirth', 'logregpvalscorelin', 'test']"
Testability,"s://redirect.github.com/Textualize/rich/issues/2875"">Textualize/rich#2875</a></li>; <li>Fix rich.pretty.install breakage in iPython <a href=""https://redirect.github.com/Textualize/rich/issues/3013"">Textualize/rich#3013</a></li>; </ul>; <h3>Added</h3>; <ul>; <li>Added Text.extend_style method.</li>; <li>Added Span.extend method.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Text.tab_size now defaults to <code>None</code> to indicate that Console.tab_size should be used.</li>; </ul>; <h2>v13.4.2</h2>; <h2>[13.4.2] - 2023-06-12</h2>; <h3>Changed</h3>; <ul>; <li>Relaxed markdown-it-py dependency</li>; </ul>; <h2>Hot fix for typing extension issue</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/Textualize/rich/blob/master/CHANGELOG.md"">rich's changelog</a>.</em></p>; <blockquote>; <h2>[13.5.2] - 2023-08-01</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tab assertion error</li>; </ul>; <h2>[13.5.1] - 2023-07-31</h2>; <h3>Fixed</h3>; <ul>; <li>Fix tilde character (<code>~</code>) not included in link regex when printing to console <a href=""https://redirect.github.com/Textualize/rich/issues/3057"">Textualize/rich#3057</a></li>; </ul>; <h2>[13.5.0] - 2023-07-29</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs not expanding spans.</li>; <li>Fixed TimeElapsedColumn from showing negative.</li>; <li>Fix for escaping strings with a trailing backslash <a href=""https://redirect.github.com/Textualize/rich/issues/2987"">Textualize/rich#2987</a></li>; <li>Fixed exception in Markdown with partial table <a href=""https://redirect.github.com/Textualize/rich/issues/3053"">Textualize/rich#3053</a></li>; <li>Fixed the HTML export template so that the <code>&lt;html&gt;</code> tag comes before the <code>&lt;head&gt;</code> tag <a href=""https://redirect.github.com/Textualize/rich/issues/3021"">Textualize/rich#3021</a></li>; <li>Fixed issue with custom classes overwriting",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13380:2675,assert,assertion,2675,https://hail.is,https://github.com/hail-is/hail/pull/13380,2,['assert'],['assertion']
Testability,"s://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-6036192) | `cryptography:` <br> `3.3.2 -> 41.0.6` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **616/1000** <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.9 | NULL Pointer Dereference <br/>[SNYK-PYTHON-CRYPTOGRAPHY-6092044](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-6092044) | `cryptography:` <br> `3.3.2 -> 41.0.6` <br> | No | Proof of Concept ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **519/1000** <br/> **Why?** Has a fix available, CVSS 6.1 | Information Exposure <br/>[SNYK-PYTHON-REQUESTS-5595532](https://snyk.io/vuln/SNYK-PYTHON-REQUESTS-5595532) | `requests:` <br> `2.27.1 -> 2.31.0` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0Yzg3NGFkNy01NjNmLTQ5Y2QtOTc3My04YjlmMTA5NWUzNmMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjRjODc0YWQ3LTU2M2YtNDljZC05NzczLThiOWYxMDk1ZTM2YyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14148:9020,test,tested,9020,https://hail.is,https://github.com/hail-is/hail/pull/14148,1,['test'],['tested']
Testability,"s</code></a> is running in parallel with testcases in the group (Anton Velma); Fixed: Possible StringIndexOutOfBoundsException in XmlReporter (Anton Velma); Fixed: GITHUB-2754: <a href=""https://github.com/AfterGroups""><code>@​AfterGroups</code></a> is executed for each &quot;finished&quot; group when it has multiple groups defined (Anton Velma)</p>; <p>7.5; Fixed: GITHUB-2701: Bump gradle version to 7.3.3 to support java17 build (ZhangJian He); Fixed: GITHUB-2646: Streamline Logging Across TestNG (Krishnan Mahadevan); Fixed: GITHUB-2658: Inheritance + dependsOnMethods (Krishnan Mahadevan)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/cbeust/testng/commit/b94395dea479308ea3fe825269730b960f44d805""><code>b94395d</code></a> Bump version to 7.7.1 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/89dc5845fcb46c26af187e50ea907a7382d06e72""><code>89dc584</code></a> Streamline overloaded assertion methods for Groovy</li>; <li><a href=""https://github.com/cbeust/testng/commit/5ac0021d14f7eb00804fe235aaefc5c2fbce57d1""><code>5ac0021</code></a> Adding release notes</li>; <li><a href=""https://github.com/cbeust/testng/commit/c0e1e772f1fc0ab2142f3a4114a2b8cfe60fa7e1""><code>c0e1e77</code></a> Adjust version reference in deprecation msgs.</li>; <li><a href=""https://github.com/cbeust/testng/commit/011527d9bf0f91a40539f5e5467cc106888810d9""><code>011527d</code></a> Bump version to 7.7.0 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/7846c444a411647f7e401a097224702188c93835""><code>7846c44</code></a> Deprecate support for running JUnit tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/8630a7e8fe12985d71c00212f9362fd38fb0cb9e""><code>8630a7e</code></a> Ensure ITestContext available for JUnit4 tests</li>; <li><a href=""https://github.com/cbeust/testng/commit/7070b020def0089d0d9dc695a5762ad16e974ce6""><code>7070b02</code></a> ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:14972,test,testng,14972,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,"['assert', 'test']","['assertion', 'testng']"
Testability,"s</h2>; <ul>; <li>The minimum supported python version is now 2.7 or 3.4 and greater (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1093"">#1093</a>)</li>; <li>The minimum supported Sphinx version is now 1.6 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1091"">#1091</a>)</li>; </ul>; <h2>Deprecated</h2>; <ul>; <li>Support for Sphinx's HTML4 writer is deprecated and will be removed in version 2.0 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1091"">#1091</a>)</li>; </ul>; <h2>Features</h2>; <ul>; <li>Add support for Sphinx 4.x (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1123"">#1123</a>)</li>; <li>Add support for Docutils 0.17 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1185"">#1185</a> and <a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1199"">#1199</a>)</li>; <li>Fixed logo scaling on IE11 (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1183"">#1183</a>)</li>; <li>Added support for logos as URLs (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1171"">#1171</a>)</li>; <li>Align top and side navigation background colors on mobile (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1132"">#1132</a>)</li>; <li>Added support for deep toc levels (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1089"">#1089</a>)</li>; <li>Updated translations for Chinese, Dutch, Estonian, French, German, Italian,; Lithuanian, Persian, Polish, Portuguese, Russian, Spanish, Swedish, and; Turkish locales</li>; </ul>; <p>A number of accessibility features were added in this release:</p>; <ul>; <li>Allow keyboard to toggle menu expansion (<a href=""https://github-redirect.dependabot.com/readthedocs/sphinx_rtd_theme/issues/1167"">#1167</",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11464:1352,log,logo,1352,https://hail.is,https://github.com/hail-is/hail/pull/11464,2,['log'],['logo']
Testability,"s=false performanceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false input=[(RodBinding name=input source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.unfiltered.vcf)] recal_file=(RodBinding name=recal_file source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.recal) tranches_file=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.tranches out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub ts_filter_level=98.5 ignore_filter=null mode=SNP filter_mismatching_base_and_quals=false""; ##CombineVariants=""analysis_type=CombineVariants input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.padded.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta nonDeterministicRandomSeed=false disableRandomization=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_legacy_downsampler=false baq=OFF baqGapOpenPenalty=40.0 fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false performanceLog=n",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:1810,stub,stubs,1810,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,"s`: this parameter now defaults to `True` and includes the; response body text in the error message. Both; Both parameters may be overridden on a per-request basis. - `httpx.ResponseManager` and `httpx.ClientSession` work together to enable; `retry_transient` and `raise_for_status`. Aiohttp has this unusual structure where; all the request methods are synchronous but they return an object that is both; awaitable and an async context manager. I mirror their structure exactly. The; `httpx.ResponseManager` is both awaitable and an async context manager. Its; `response_coroutine` field is a coroutine that includes the retry and; raise-for-status logic. - The `HailResolver` overrides domain name resolution to first consult the Hail; `address` service. `address` is effectively a domain name server. It watches; kubernetes services and publishes the pod IPs. It supports two name styles:; `service` and `service.namespace`. The former uses the deploy config to; determine in which namespace to find the given service. Currently, the; client-side library only looks up IPs for `shuffler` and `address`. - `BlockingClientSession` and `BlockingContextManager` wrap the; aforementioned `httpx` classes. `BlockingClientResponse` wraps an; `aiohttp.ClientResponse`. ---. Examples of correct usage:. A blocking HTTPS request:. ```python3; with httpx.blocking_client_session() as session:; with session.post(url, json=config, headers=headers) as resp:; assert resp.status == 200; print(resp.text()); ```. An asynchronous HTTPS request to auth:; ```python3; async with httpx.client_session() as session:; async with session.get(; deploy_config.url('auth', '/api/v1alpha/userinfo'),; headers=headers) as resp:; assert resp.status == 200; print(await resp.json()); ```. A blocking HTTPS session with a large default timeout:. ```python3; httpx.blocking_client_session(; headers=service_auth_headers(deploy_config, 'query'),; timeout=aiohttp.ClientTimeout(total=600)); ```. cc: @catoverdrive @Dania-Abuhijleh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9554:2894,assert,assert,2894,https://hail.is,https://github.com/hail-is/hail/pull/9554,2,['assert'],['assert']
Testability,sableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInne,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2194,Test,TestUtils,2194,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604,1,['Test'],['TestUtils']
Testability,"saghul/pycares/releases"">pycares's releases</a>.</em></p>; <blockquote>; <h2>4.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump cibuildwheel to build for Python 3.11 + CI total time speedups by <a href=""https://github.com/Jackenmen""><code>@​Jackenmen</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/174"">saghul/pycares#174</a></li>; <li>Fix tests that depended on external sites by <a href=""https://github.com/Jackenmen""><code>@​Jackenmen</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/180"">saghul/pycares#180</a></li>; <li>Complete the Python 3.11 support by <a href=""https://github.com/Jackenmen""><code>@​Jackenmen</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/179"">saghul/pycares#179</a></li>; <li>Drop CPython 3.6 by <a href=""https://github.com/saghul""><code>@​saghul</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/181"">saghul/pycares#181</a></li>; <li>Improve test compatibility with pytest by <a href=""https://github.com/saghul""><code>@​saghul</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/182"">saghul/pycares#182</a></li>; <li>Update c-ares submodule to 1.18.1 by <a href=""https://github.com/saghul""><code>@​saghul</code></a> in <a href=""https://github-redirect.dependabot.com/saghul/pycares/pull/183"">saghul/pycares#183</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/saghul/pycares/compare/pycares-4.2.2...pycares-4.3.0"">https://github.com/saghul/pycares/compare/pycares-4.2.2...pycares-4.3.0</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/saghul/pycares/commit/036aafd253b39f7459a86a5574daae8c5b681bc2""><code>036aafd</code></a> Bump version to 4.3.0</li>; <li><a href=""https://github.com/saghul/pycares/commit/22a37d760349787704f8901c19e149915a7f1b26""><code>22a37d7</code></a> Update c-ares submodule to 1.18.1</li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12559:1172,test,test,1172,https://hail.is,https://github.com/hail-is/hail/pull/12559,1,['test'],['test']
Testability,"sal_newlines, startupinfo, creationflags); 388 p2cread, p2cwrite,; 389 c2pread, c2pwrite,; --> 390 errread, errwrite); 391 except Exception:; 392 # Preserve original exception in case os.close raises. /scratch/PI/dpwall/computeEnvironments/miniconda2/lib/python2.7/subprocess.pyc in _execute_child(self, args, executable, preexec_fn, close_fds, cwd, env, universal_newlines, startupinfo, creationflags, shell, to_close, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite); 1022 raise; 1023 child_exception = pickle.loads(data); -> 1024 raise child_exception; 1025; 1026. OSError: [Errno 2] No such file or directory. and the second error we would get would be. ------------------------------------------------------------------------- Py4JJavaError Traceback (most recent call last) <ipython-input-6-93fa734a63bb> in <module>() ----> 1 hc_nate = HailContext() /scratch/PI/dpwall/computeEnvironments/hail/python/hail/context.pyc in __init__(self, sc, appName, master, local, log, quiet, append, parquet_compression, min_block_size, branching_factor, tmp_dir) 60 self._jhc = scala_object(self._hail, 'HailContext').apply( 61 jsc, appName, joption(master), local, log, quiet, append, ---> 62 parquet_compression, min_block_size, branching_factor, tmp_dir) 63 64 self._jsc = self._jhc.sc() /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py in __call__(self, *args) 1131 answer = self.gateway_client.send_command(command) 1132 return_value = get_return_value( -> 1133 answer, self.gateway_client, self.target_id, self.name) 1134 1135 for temp_arg in temp_args: /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/pyspark/sql/utils.py in deco(*a, **kw) 61 def deco(*a, **kw): 62 try: ---> 63 return f(*a, **kw) 64 except py4j.protocol.Py4JJavaError as e: 65 s = e.java_exception.toString() /share/sw/free/spark.2.1.0/spark-2.1.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py in get_return_value(answer, gateway_client, tar",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1525:3517,log,log,3517,https://hail.is,https://github.com/hail-is/hail/issues/1525,1,['log'],['log']
Testability,"same as #9851, will rollup if it passes tests",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9852#issuecomment-754163535:40,test,tests,40,https://hail.is,https://github.com/hail-is/hail/pull/9852#issuecomment-754163535,1,['test'],['tests']
Testability,sample mmskat group test: . /humgen/gsa-hphome1/sek/akihiro/Software/EPACTS-3.2.6/bin/epacts group --groupf ${GROUP}.txt \; --vcf ${VCF_dir}/FinEst.WGS.QCed_Lipids.chr1.vcf.gz \; --ped ${Phen_dir}/EstoniaOnlyLipids.ped --max-maf 0.01 \; --kin ${Kin_dir}/FinEstKinship.kinf --sepchr --pheno ${PHENO} \; --cov AGE --cov FAST10 --cov SEX \; --cov LCSET.7048 --cov LCSET.7049 --cov LCSET.7123 --cov LCSET.7125 --cov LCSET.7130 --cov LCSET.7131 --cov LCSET.7132 --cov LCSET.7148 --cov LCSET.7162 --cov LCSET.7174 --cov LCSET.7175 --cov LCSET.7176 --cov LCSET.7257 --cov LCSET.7263 --cov LCSET.7308 --cov LCSET.7331 --cov LCSET.7334 --cov LCSET.7339 --cov LCSET.7340 --cov LCSET.7341 --cov LCSET.7353 --cov LCSET.7354 --cov LCSET.7355 --cov LCSET.7356 --cov LCSET.7357 --cov LCSET.7419 --cov LCSET.7420 --cov LCSET.7473 --cov LCSET.7494 \; --test mmskat --out ${OUT}.ESTonly --run 4,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/363#issuecomment-248430677:20,test,test,20,https://hail.is,https://github.com/hail-is/hail/issues/363#issuecomment-248430677,2,['test'],['test']
Testability,"sandbox/hail [master|𝚫8?2]; snafu$ ipython ; Python 3.8.6 (default, Jan 27 2021, 15:42:20) ; Type 'copyright', 'credits' or 'license' for more information; IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-e24d842d2b9a> in <module>; ----> 1 import hail. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/__init__.py in <module>; 32 # F401 '.expr.*' imported but unused; 33 # E402 module level import not at top of file; ---> 34 from .table import Table, GroupedTable, asc, desc # noqa: E402; 35 from .matrixtable import MatrixTable, GroupedMatrixTable # noqa: E402; 36 from .expr import * # noqa: F401,F403,E402. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/table.py in <module>; 2 import itertools; 3 import pandas; ----> 4 import pyspark; 5 from typing import Optional, Dict, Callable; 6 . ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py in <module>; 49 ; 50 from pyspark.conf import SparkConf; ---> 51 from pyspark.context import SparkContext; 52 from pyspark.rdd import RDD, RDDBarrier; 53 from pyspark.files import SparkFiles. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py in <module>; 29 from py4j.protocol import Py4JError; 30 ; ---> 31 from pyspark import accumulators; 32 from pyspark.accumulators import Accumulator; 33 from pyspark.broadcast import Broadcast, BroadcastPickleRegistry. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py in <module>; 95 import socketserver as SocketServer; 96 import threading; ---> 97 from pyspark.serializers import read_int, PickleSerializer; 98 ; 99 . ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/serializers.py in <module>; 69 xrange = range; 70 ; ---> 71 from pyspark import cloudpickle; 72 from pyspark.util import _exception_message; 73 . ~/sandbox/hail/venv/3.8/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10197:10437,sandbox,sandbox,10437,https://hail.is,https://github.com/hail-is/hail/issues/10197,1,['sandbox'],['sandbox']
Testability,"sc ;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c0bd1; asc ;;; 6: len 8; hex 80000000004c0108; asc L ;;. Record lock, heap no 273 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 8000000a; asc ;;; 3: len 4; hex 80000038; asc 8;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c17e1; asc ;;; 6: len 8; hex 8000000000370dc0; asc 7 ;;. Record lock, heap no 284 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 800000bd; asc ;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c204f; asc O;;; 6: len 8; hex 8000000000427f70; asc B p;;. Record lock, heap no 288 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 80000038; asc 8;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c17a6; asc ;;; 6: len 8; hex 8000000000370dc0; asc 7 ;;. Record lock, heap no 316 PHYSICAL RECORD: n_fields 7; compact format; info bits 0; 0: len 4; hex 74657374; asc test;;; 1: len 8; hex 64676f6c64737465; asc dgoldste;;; 2: len 4; hex 80000009; asc ;;; 3: len 4; hex 8000008f; asc ;;; 4: len 6; hex 00000025f0cd; asc % ;;; 5: len 7; hex 010000008c10d0; asc ;;; 6: len 8; hex 800000000030c078; asc 0 x;;. *** (2) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 312 page no 896 n bits 168 index PRIMARY of table `dgoldste-batch`.`jobs` trx id 2486477 lock_mode X locks rec but not gap waiting; Record lock, heap no 27 PHYSICAL RECORD: n_fields 18; compact format; info bits 128; 0: len 8; hex 8000000000000095; asc ;;; 1: len 4; hex 80002156; asc !V;;; 2: len 6; hex 00000025eff8; asc % ;;; 3: len 7; hex 020000018e1add; asc ;;; 4: len 7; hex 52756e6e696e67; asc Runni",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14380:5956,test,test,5956,https://hail.is,https://github.com/hail-is/hail/issues/14380,1,['test'],['test']
Testability,scala test is failing due to failed typecheck I think,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3895#issuecomment-405244577:6,test,test,6,https://hail.is,https://github.com/hail-is/hail/pull/3895#issuecomment-405244577,1,['test'],['test']
Testability,"scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:289); at scala.collection.AbstractIterator.toArray(Iterator.scala:1336); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); at org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$13.apply(RDD.scala:936); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2069); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:338); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:748); Hail version: devel-824968e; Error summary: AssertionError: assertion failed; ```; import_vcf error:; Just stayed at 0 out of 1 complete on the cloud, looked into the processes, it had failed 9 times, and here's the message I could dig out:; ```; is.hail.utils.HailException: hapmap_3.3_hg19_pop_stratified_af.vcf.gz: caught java.lang.NegativeArraySizeException: null; offending line: chr7 71494997 rs844684 A C . PASS AC=1191;AF=0.42627;ALL={A*...; at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:17); at is.hail.utils.package$.fatal(package.scala:26); at is.hail.utils.Context.wrapException(Context.scala:23); at is.hail.io.vcf.LoadVCF$$anonfun$parseLines$1$$anon$1.hasNext(LoadVCF.scala:767); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.hasNext(OrderedRVD.scala:911); at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:438); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3507:11528,Assert,AssertionError,11528,https://hail.is,https://github.com/hail-is/hail/issues/3507,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,scala:32); 	at is.hail.expr.ir.IRParser$.$anonfun$parse_value_ir$1(Parser.scala:2157); 	at is.hail.expr.ir.IRParser$.parse(Parser.scala:2153); 	at is.hail.expr.ir.IRParser$.parse_value_ir(Parser.scala:2157); 	at is.hail.backend.spark.SparkBackend.$anonfun$parse_value_ir$2(SparkBackend.scala:691); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:76); 	at is.hail.utils.package$.using(package.scala:637); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:76); 	at is.hail.utils.package$.using(package.scala:637); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:62); 	at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$1(SparkBackend.scala:345); 	at is.hail.backend.spark.SparkBackend.$anonfun$parse_value_ir$1(SparkBackend.scala:690); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:59); 	at is.hail.backend.spark.SparkBackend.parse_value_ir(SparkBackend.scala:689); 	at sun.reflect.GeneratedMethodAccessor193.invoke(Unknown Source); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); 	at java.lang.Thread.run(Thread.java:750). java.lang.ClassCastException: null; 	at . Hail version: 0.2.123-a21b8ad2f534; Error summary: ClassCastException: null; ```. ### Version. 0.2.123. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13693:2695,log,log,2695,https://hail.is,https://github.com/hail-is/hail/issues/13693,1,['log'],['log']
Testability,scala:323); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:321); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&u,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4141,Test,TestRunner,4141,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,1,['Test'],['TestRunner']
Testability,scala:341); 	at is.hail.fs.FSSuite.testSeekMoreThanMaxInt$(FSSuite.scala:339); 	at is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt(GoogleStorageFSSuite.scala:12); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&u,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4334,Test,TestRunner,4334,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['Test'],['TestRunner']
Testability,scooped! Cotton must have fixed this in order to make tests pass after rowType is always required.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8443#issuecomment-609863055:54,test,tests,54,https://hail.is,https://github.com/hail-is/hail/pull/8443#issuecomment-609863055,1,['test'],['tests']
Testability,"scussion forum: http://discuss.hail.is/. -------------------------------------------------------------------------------------------. ### Hail version: 0.2.11. ### What you did: ./gradlew -Dspark.version=2.2.1 -Dspark.version=2.2.1 -Dpy4j.version=0.10.4 -Dbreeze.version=0.13.1 shadowJar. ### What went wrong (all error messages here, including the full java stack trace):; :compileJava UP-TO-DATE; :generateBuildInfo; :nativeLib; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux testutils/unit-tests.cpp -MG -M -MF build/testutils/unit-tests.d -MT build/testutils/unit-tests.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux test.cpp -MG -M -MF build/test.d -MT build/test.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux ibs.cpp -MG -M -MF build/ibs.d -MT build/ibs.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux davies.cpp -MG -M -MF build/davies.d -MT build/davies.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/usr/lib/jvm/java-8-openjdk-amd64/include -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux cache-tests.cpp -MG -M -MF build/cache-tests.d -MT build/cache-tests.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Werror -Wextra -fPIC -ggdb -fno-strict-aliasing -I.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5659:1109,test,test,1109,https://hail.is,https://github.com/hail-is/hail/issues/5659,1,['test'],['test']
Testability,"se preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false variant=(RodBinding name=variant source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.unannotated.vcf) snpEffFile=(RodBinding name=snpEffFile source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snpeff.vcf) dbsnp=(RodBinding name= source=UNBOUND) comp=[] resource=[] out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub annotation=[SnpEff] excludeAnnotation=[] group=[] expression=[] useAllAnnotations=false list=false alwaysAppendDbsnpId=false MendelViolationGenotypeQualityThreshold=0.0 requireStrictAlleleMatch=false filter_mismatching_base_and_quals=false""; ##VariantFiltration=""analysis_type=VariantFiltration input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.padded.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta nonDeterministicRandomSeed=false disableRandomization=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_legacy_downsampler=false baq=OFF baqGapOpenPenalty=40.0 fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false perf",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:18664,stub,stubs,18664,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,"search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:261, in IR.search(self, criteria); 260 def search(self, criteria):; --> 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:261, in <listcomp>(.0); 260 def search(self, criteria):; --> 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:261, in IR.search(self, criteria); 260 def search(self, criteria):; --> 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:261, in <listcomp>(.0); 260 def search(self, criteria):; --> 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; 262 if criteria(self):; 263 return others + [self]. File ~/.local/lib/python3.9/site-packages/hail/ir/base_ir.py:262, in IR.search(self, criteria); 260 def search(self, criteria):; 261 others = [node for child in self.children if isinstance(child, IR) for node in child.search(criteria)]; --> 262 if criteria(self):; 263 return others + [self]; 264 return others. File ~/.local/lib/python3.9/site-packages/hail/utils/misc.py:496, in process_joins.<locals>.<lambda>(a); 493 used_joins = set(); 495 for e in exprs:; --> 496 joins = e._ir.search(lambda a: isinstance(a, hail.ir.Join)); 497 for j in sorted(joins, key=lambda j: j.idx): # Make sure joins happen in order; 498 if j.idx not in used_joins:. AttributeError: module 'hail' has no attribute 'ir'; ```. ### Version. 0.2.119-ca0ff87b1687. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13230:7185,log,log,7185,https://hail.is,https://github.com/hail-is/hail/issues/13230,1,['log'],['log']
Testability,sed by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1763,test,testLowerBound,1763,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['testLowerBound']
Testability,see test for example.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7766:4,test,test,4,https://hail.is,https://github.com/hail-is/hail/pull/7766,1,['test'],['test']
Testability,"seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); 425 app_name = app_name or 'Hail'; 426 gcs_requester_pays_project, gcs_requester_pays_buckets = convert_gcs_requester_pays_configuration_to_hadoop_conf_style(gcs_requester_pays_configuration); --> 427 backend = SparkBackend(; 428 idempotent, sc, spark_conf, app_name, master, local, log,; 429 quiet, append, min_block_size, branching_factor, tmpdir, local_tmpdir,. TypeError: SparkBackend__init__() got an unexpected keyword argument 'gcs_requester_pays_project'`. - Hail was able to initialize by itself; `import hail as hl; print(hl.version()); hl.init()`; `0.2.112-31ceff2fb5fd; Running on Apache Spark version 3.3.2; SparkUI available at http://57ba6dc5f4a9:4040/; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.112-31ceff2fb5fd; LOGGING: writing to /content/hail-20230410-0617-0.2.112-31ceff2fb5fd.log`. ### Version. 0.2.112. ### Relevant log output. ```shell; using variant-spark jar at '/usr/local/lib/python3.9/dist-packages/varspark/jars/variant-spark_2.12-0.5.2-all.jar'; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-8-3d2ff0083f18> in <cell line: 3>(); 1 import hail as hl; 2 import varspark.hail as vshl; ----> 3 vshl.init(). 4 frames; <decorator-gen-1907> in init(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, backend, driver_cores, driver_memory, worker_cores, worker_memory, gcs_requester_pays_configuration, regions). <decorator-gen-1909> in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12859:2574,log,log,2574,https://hail.is,https://github.com/hail-is/hail/issues/12859,1,['log'],['log']
Testability,"self.assertEqual is unittest style. We use pytest now, which rewrites Python assert statements to provide good failure messages. New code should use `assert`, I think.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7611#issuecomment-559186521:5,assert,assertEqual,5,https://hail.is,https://github.com/hail-is/hail/pull/7611#issuecomment-559186521,3,['assert'],"['assert', 'assertEqual']"
Testability,"separate nodes?). The type of a `Ref` node was already mutable to allow this sort of deferred annotation, and I've had to make a few other things mutable as well. Alternatively we could rebuild the entire IR to include type annotations, but I think the mutation is sufficiently well localized, and this is a common compiler pattern. This touches a lot of lines, but the high level changes are:; * Remove the `refMap` from the `IRParserEnvironment`, and remove all code that modifies the typing environment from the parser. Nodes like `Ref` that need a type from the environment get types set to `null`, to be filled in after parsing.; * Add `annotateTypes` pass to fill in type annotations from the environment. This is currently written in the parser, and always called after parsing. This means for the moment we can only parse type correct IR. But in the future we could move this to a separate stage of the compilation pipeline.; * Move typechecking logic on relational nodes from the constructors to a `typecheck` method, which is called from the `TypeCheck` pass.; * Make the `typ` field on IR nodes consistently lazy (or a def when the type is a child's type without modification). Before we sometimes did this for performance, but it's now required to avoid querying children's types during construction.; * Make types mutable on `AggSignature` and `ComparisonOp`, so they can be filled in after parsing.; * Ensure that the structure in `Binds.scala` satisfies the following invariant: to construct the typing environment of child `i`, we only need the types of children with index less than `i`. This was almost always satisfied already, and allows us to use the generic binds infrastucture in the pass to annotate types (where when visiting child `i`, we can only query types of already visited children).; * Change the text representation of `TailLoop`/`Recur` to move the explicit type annotation from `Recur` to `TailLoop`. This is necessary to comply with the previous point. It's also c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13990:2735,log,logic,2735,https://hail.is,https://github.com/hail-is/hail/pull/13990,1,['log'],['logic']
Testability,separate steps for Java and cpp codegen tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6194:40,test,tests,40,https://hail.is,https://github.com/hail-is/hail/pull/6194,1,['test'],['tests']
Testability,seqr-project.internal): org.apache.spark.SparkException: Task failed while writing rows; 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer.writeRows(WriterContainer.scala:261); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand$$anonfun$run$1$$anonfun$apply$mcV$sp$1.apply(InsertIntoHadoopFsRelationCommand.scala:143); 	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:70); 	at org.apache.spark.scheduler.Task.run(Task.scala:86); 	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.methods.VEP$$anonfun$16$$anon$1.hasNext(VEP.scala:398); 	at is.hail.sparkextras.OrderedRDD$$anonfun$apply$7$$anon$2.hasNext(OrderedRDD.scala:211); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply$mcV$sp(WriterContainer.scala:253); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply(WriterContainer.scala:252); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer$$anonfun$writeRows$1.apply(WriterContainer.scala:252); 	at org.apache.spark.util.Utils$.tryWithSafeFinallyAndFailureCallbacks(Utils.scala:1348); 	at org.apache.spark.sql.execution.datasources.DefaultWriterContainer.writeRows(WriterContainer.scala:258); 	,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822:4619,Assert,AssertionError,4619,https://hail.is,https://github.com/hail-is/hail/issues/1822,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"ser move_selected_cells/main. COPY ./resources/ /home/jovyan; ```. And the actual worker creation in notebook.py. ```py; def start_pod(jupyter_token, image, labels={}):; print(""IMAGE IN START IS"", image); pod_id = uuid.uuid4().hex; service_spec = kube.client.V1ServiceSpec(; selector={; 'app': 'notebook-worker',; 'hail.is/notebook-instance': INSTANCE_ID,; 'uuid': pod_id},; ports=[kube.client.V1ServicePort(port=80, target_port=8888)]); service_template = kube.client.V1Service(; metadata=kube.client.V1ObjectMeta(; generate_name='notebook-worker-service-',; labels={; 'app': 'notebook-worker',; 'hail.is/notebook-instance': INSTANCE_ID,; 'uuid': pod_id,; **labels}),; spec=service_spec); svc = k8s.create_namespaced_service(; 'default',; service_template,; _request_timeout=KUBERNETES_TIMEOUT_IN_SECONDS; ); pod_spec = kube.client.V1PodSpec(; containers=[; kube.client.V1Container(; command=[; 'jupyter',; 'notebook',; f'--NotebookApp.token={jupyter_token}',; f'--NotebookApp.base_url=/instance/{svc.metadata.name}/'; ],; name='default',; image=image,; ports=[kube.client.V1ContainerPort(container_port=8888)],; resources=kube.client.V1ResourceRequirements(; requests={'cpu': '1.601', 'memory': '1.601G'}),; readiness_probe=kube.client.V1Probe(; http_get=kube.client.V1HTTPGetAction(; path=f'/instance/{svc.metadata.name}/login',; port=8888)))]); pod_template = kube.client.V1Pod(; metadata=kube.client.V1ObjectMeta(; generate_name='notebook-worker-',; labels={; 'app': 'notebook-worker',; 'hail.is/notebook-instance': INSTANCE_ID,; 'uuid': pod_id,; 'svc_name': svc.metadata.name,; **labels; },),; spec=pod_spec); pod = k8s.create_namespaced_pod(; 'default',; pod_template,; _request_timeout=KUBERNETES_TIMEOUT_IN_SECONDS,; ). return svc, pod; ``` . In the pod definition he runs `jupyter notebook --NotebookApp.token={jupyter_token} --NotebookApp.base_url=/instance/{svc.metadata.name}/` which overrides yours. I'm going to try to run headless mode, and if not, maybe we should install jupyterlab?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5243#issuecomment-460097218:3634,log,login,3634,https://hail.is,https://github.com/hail-is/hail/pull/5243#issuecomment-460097218,1,['log'],['login']
Testability,"ser) throws IOException, InterruptedException {; String ticketCachePath =; conf.get(CommonConfigurationKeys.KERBEROS_TICKET_CACHE_PATH);; UserGroupInformation ugi =; UserGroupInformation.getBestUGI(ticketCachePath, user);; return ugi.doAs(new PrivilegedExceptionAction<FileSystem>() {; @Override; public FileSystem run() throws IOException {; return get(uri, conf);; }; });; }; ```. For some reasons the line numbers reported in CI log don't quite match up (using either IntelliJ's goto def - which could say be the result of referencing a different copy on the system - or the [2.7.1 branch on GitHub](https://github.com/apache/hadoop/blob/branch-2.7.1/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java)), so I followed the parameterization. Still need to figure out why lines reported don't match, but I've seen line number differences before between that reported for the compiled binary, and the uncompiled source. Lines of evidence:; 1) The line specified in the ci log suggests that Hadoop's fileSystem.open() command fails. It appears from examining the line and source, that the Hadoop Configuration object could be null, which suggests a serialization error in HadoopFS. However, there are many others tests that by touch HadoopFS serialization, and none of them have problems. If it's not a serialization error (say the URI object that hadoop looks for is null, or CACHE is null), it would not seem PR specific. 2) On local, with or without the google storage connector, I cannot replicate the error in cluster-read-vcfs.py. Attempts to replicate:; 1) Local hail install, not using google storage connector, and reading 2 local vcfs:. ```python; gvcfs = ['./HG00096.g.vcf.gz',; './HG00268.g.vcf.gz']; hl.init(default_reference='GRCh38'); parts = [; {'start': {'locus': {'contig': 'chr20', 'position': 17821257}},; 'end': {'locus': {'contig': 'chr20', 'position': 18708366}},; 'includeStart': True,; 'includeEnd': True},; {'start': {'locus': {'contig': 'c",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6083#issuecomment-494037803:1868,log,log,1868,https://hail.is,https://github.com/hail-is/hail/pull/6083#issuecomment-494037803,1,['log'],['log']
Testability,"ser=ci; uuid=f53f127847864f1cbf7d4bdc911a6646; Annotations: <none>; Status: Pending; IP: ; Containers:; main:; Container ID: ; Image: gcr.io/hail-vdc/ci-intermediate:oyyg6y2um4kx; Image ID: ; Port: <none>; Host Port: <none>; Command:; bash; -c; set -e; gcloud -q auth activate-service-account --key-file=/test-gsa-key/privateKeyData; gsutil -m cp -r /test/resources/* gs://hail-test-1c9nm/sj0nb47zqys1/pipeline/input/; State: Waiting; Reason: ContainerCreating; Ready: False; Restart Count: 0; Requests:; cpu: 100m; memory: 500M; Environment:; POD_IP: (v1:status.podIP); POD_NAME: batch-3-job-41-39d17b (v1:metadata.name); Mounts:; /gsa-key from gsa-key (rw); /test-gsa-key from test-gsa-key (rw); /var/run/secrets/kubernetes.io/serviceaccount from default-token-8h99c (ro); Conditions:; Type Status; Initialized True ; Ready False ; ContainersReady False ; PodScheduled True ; Volumes:; test-gsa-key:; Type: Secret (a volume populated by a Secret); SecretName: test-gsa-key; Optional: false; gsa-key:; Type: Secret (a volume populated by a Secret); SecretName: ci-gsa-key; Optional: false; default-token-8h99c:; Type: Secret (a volume populated by a Secret); SecretName: default-token-8h99c; Optional: false; QoS Class: Burstable; Node-Selectors: <none>; Tolerations: node.kubernetes.io/not-ready:NoExecute for 300s; node.kubernetes.io/unreachable:NoExecute for 300s; preemptible=true; Events:; Type Reason Age From Message; ---- ------ ---- ---- -------; Normal Scheduled 13m default-scheduler Successfully assigned batch-pods/batch-3-job-41-39d17b to gke-vdc-preemptible-pool-9c7148b2-1f89; Warning FailedCreatePodSandBox 13m kubelet, gke-vdc-preemptible-pool-9c7148b2-1f89 Failed create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container ""99ac9edad98221dbfaf4ab8eb443bc6d3fdc6df84164594469900813652fd913"" network for pod ""batch-3-job-41-39d17b"": NetworkPlugin kubenet failed to set up pod ""batch-3-job-41-39d17b_batch-pods"" network: Error adding container to network",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6625:1476,test,test-gsa-key,1476,https://hail.is,https://github.com/hail-is/hail/issues/6625,2,['test'],['test-gsa-key']
Testability,"serguide/building_java_projects.html#sec:java_dependency_management_overview) (search for ""compile""):. > **Why no compile configuration?**; > The Java Library Plugin has historically used the compile configuration for dependencies that are required to both compile and run a project’s production code. It is now deprecated, and will issue warnings when used, because it doesn’t distinguish between dependencies that impact the public API of a Java library project and those that don’t. You can learn more about the importance of this distinction in [Building Java libraries](https://docs.gradle.org/current/userguide/building_java_projects.html#sec:building_java_libraries). OK, so, we used to just dump everything into our runtime dependencies. I changed it so that we have three kinds of dependencies:; 1. `shadow`: these are provided by Dataproc/QoB at run-time. They are not in any JAR. They are not on the `testRuntimeClasspath` or `runtimeClasspath`. They are on the `testCompileClasspath` because I [explicitly requested](https://github.com/hail-is/hail/blob/main/hail/build.gradle#L98) that `testCompileOnly` bring in our `shadow` dependencies.; 2. `implementation`: these are included in all class paths and in shadow JARs (but not ""thin"" jars generated by `./gradlew jar`).; 3. `testImplementation`: these are included in test class paths and in shadow JARs. Our test code references these third-party classes:; ```; import breeze.linalg.DenseMatrix; import breeze.linalg._; import breeze.linalg.{*, diag, DenseMatrix => BDM, DenseVector => BDV}; import breeze.linalg.{DenseMatrix => BDM, _}; import breeze.linalg.{DenseMatrix => BDM}; import breeze.linalg.{DenseMatrix, DenseVector, eigSym, svd}; import breeze.linalg.{DenseMatrix, DenseVector}; import breeze.linalg.{DenseMatrix, Matrix, Vector}; import breeze.linalg.{Vector => BVector}; import htsjdk.samtools.reference.ReferenceSequenceFileFactory; import htsjdk.samtools.util.BlockCompressedFilePointerUtil; import htsjdk.tribble.read",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13706#issuecomment-1738232741:1601,test,testCompileClasspath,1601,https://hail.is,https://github.com/hail-is/hail/issues/13706#issuecomment-1738232741,2,['test'],['testCompileClasspath']
Testability,sertionError: java.lang.ArrayIndexOutOfBoundsException: 3. 	at is.hail.check.GenProp1$$anonfun$apply$1.apply$mcVI$sp(Prop.scala:38); 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:160); 	at is.hail.check.GenProp1.apply(Prop.scala:26); 	at is.hail.check.Prop.check(Prop.scala:19); 	at is.hail.expr.ir.OrderingSuite.testBinarySearchOnDict(OrderingSuite.scala:357); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.Wra,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1200,Test,TestMethodWorker,1200,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['Test'],['TestMethodWorker']
Testability,sertions.scala:501); at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:445); at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:430); at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136); at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:658); at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:219); at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50); at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:923); at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:192); at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128); at java.util.ArrayList.forEach(ArrayList.java:1259); at org.testng.TestRunner.privateRun(TestRunner.java:808); at org.testng.TestRunner.run(TestRunner.java:603); at org.testng.SuiteRunner.runTest(SuiteRunner.java:429); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383); at org.testng.SuiteRunner.run(SuiteRunner.java:326); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249); at org.testng.TestNG.runSuitesLocally(TestNG.java:1169); at org.testng.TestNG.runSuites(TestNG.java:1092); at org.testng.TestNG.run(TestNG.java:1060); at org.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827#issuecomment-1957725547:1561,test,testng,1561,https://hail.is,https://github.com/hail-is/hail/issues/13827#issuecomment-1957725547,1,['test'],['testng']
Testability,"server. I'm glad this gets rid of that. ### Accessing the database server; We use the DB pod's service DNS name as the `host` so inside Kubernetes this Just Works. The one caveat is the CI pipeline in which we run migrations in batch jobs. Those jobs need a way to reach the DB pod. I achieve this with a NodePort and then use the job's K8s credentials to resolve the node and port that the DB is on. The code I've added to do this resolution feels a bit janky, wouldn't mind some feedback on that. In terms of security, if a user job was able to somehow resolve the address of a test db, they would still not have the credentials to access it, and this is currently also the case with the production database. Nevertheless, this does raise an action item that we should only allow traffic to the k8s and DB subnets for `network=private` jobs, but I think we should make that a separate PR. ### Database creation; In order to test this properly in a dev deploy, I needed to make some changes to `create_database.py`. In main, dev deploys can't create databases. I think they should be able to, and those operations should just be idempotent. When allowing dev deploys to create databases, I hit the `ALTER USER` lines in `create_database.py` which lock out any already-deployed application, which feels silly. Instead, I create the mysql user and create the corresponding secret iff the mysql username does not already exist. ### create_initial_account.py; When starting off with a fresh database, we encounter a bootstrapping problem where we need to add the developer's user. The current way to add the developer's user is through `create_initial_account.py` which assumes that the developer's gsa key secret is not already in the namespace, but now it could be, so I delete the key in the namespace if it exists before creating it. This could all change with my other PR to add devs to test namespaces. But this change to allow ephemeral dev databases will make testing that other PR *way* easier.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13030:2855,test,test,2855,https://hail.is,https://github.com/hail-is/hail/pull/13030,2,['test'],"['test', 'testing']"
Testability,"service] make user cache thread-safe; - [ ] (@tpoterba) c315fcb0b1 [query-service] bugfix: preserve globals through a shuffle; - [ ] (@catoverdrive) 912c21f709 [shuffler] log ShuffleCodecSpec anytime it is created; - [x] (@daniel-goldstein) c2495837e7 [scala-lsm] bugfix: least key may equal greatest key; - [x] (@daniel-goldstein) 5fb3db703e [services] discovered new transient error; - [x] (@daniel-goldstein) 9cd0999938 [shuffler] more assertions in ShuffleClient; - [x] (@daniel-goldstein) a71a3c9b8c [shuffler] bugfix: shuffler needs a HailContext to decode loci; - [x] (@daniel-goldstein) 41b06aeaa8 [query-service] move hail.jar earlier in Dockerfile; - [x] (@daniel-goldstein) 8df4029698 [query-service] permit pod scaling and remove cpu limit; - [ ] (@catoverdrive) 0354e1f557 [query-service] simplify socket handling; - [x] (@jigold) 6690a4decc [batch] teach JVMJob where to find the hail configuration files; - [x] (@daniel-goldstein) ae2e3d2996 [query-service] switch to services team approved logging; - [ ] (@tpoterba) b18f86e647 [query-service] query workers need a hail context; - [ ] (@daniel-goldstein, @catoverdrive) 6d5d0b68af [query-service] use a UNIX Domain Socket for Py-Scala communication; - [ ] (@daniel-goldstein, @catoverdrive) 0d42df8b08 [query-service] run tests against query service; - [x] (@jigold) f9d361e686 [query-service] aiohttp.ClientSession must be created in async code; - [ ] (@cseed) c35f2e10e3 [query-service][hail][build.yaml] address miscellaneous comments from cotton; - [x] (@daniel-goldstein) 7f1b1363e9 [query-service] use two containers sharing an empty volume; - [x] (@daniel-goldstein) 2a8f23404a [query-service] in the service, log everything to stdout; - [x] (trivial) d8104a1dc4 [query-service] do not catch CancelledError; - [x] (trivial) efcb345185 [query-service] slightly more useful error message when socket dies; - [ ] (@tpoterba) f79c4023cf [shuffler] if we have an ExecuteContext, use it; - [x] (@daniel-goldstein,fyi: @tpoterba) 259f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10100:1485,log,logging,1485,https://hail.is,https://github.com/hail-is/hail/pull/10100,2,"['log', 'test']","['logging', 'tests']"
Testability,set content-type: text/plain on uploaded logs,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4536:41,log,logs,41,https://hail.is,https://github.com/hail-is/hail/pull/4536,1,['log'],['logs']
Testability,"sets of intervals. The visual conception of the partitioning of this matrix table (with its globals, column margin data, row margin data, and entry data) might look like:. ```; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; +--+ +-----+--+--++---+------+------+. ck1 ck2 ...; +--+ rk1 +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; +--+ rk2 +-----+--+--++---+------+------+; | | | | | || | | |; +--+ ... +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; ```. The first row-key interval is `[rk1, rk2)`. The first col-key interval is `[ck1, ck2)`. These intervals are define a ""rectangle"" corresponding to the first partition. . All the partitions in the fourth partition column are empty (perhaps these column keys are absent in this dataset). Likewise, all the partitions in the fifth partition row are empty. ---. Global values are still global and must be stored in memory for each partition. The columns table becomes a distributed table like the rows table. Its partitioning must match the column partitioning of the blocks. `annotate_cols` and `aggregate_cols` become distributed operations. The rows table is mostly unchanged. `annotate_rows` and `annotate_cols`, when used with aggregation, become symmetric. They both aggregate across partitions as column aggregation did before. `annotate_entries`, `annotate_rows` with aggregation, and `annotate_cols` with aggregation now read the corresponding row and column partition. Each row partition is read once per column block. Similarly for column partitions. In particular, we need not load the entire column table into RAM for each partition. ### Version. 0.2.124. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13800:2830,log,log,2830,https://hail.is,https://github.com/hail-is/hail/issues/13800,1,['log'],['log']
Testability,"setup.py opens the requirements.txt file, because of this it must be in any source distribution. This will become more relevant as we start distributing more (any) native code, reducing the number of platforms where `pip install hail` installs a binary distribution. tested manually with:; ```; make copy-py-files; cd build/deploy; python3 setup.py sdist; cd dist; tar xf hail-0.2.64.tar.gz; cd hail-0.2.64; python setup.py bdist_wheel; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10339:267,test,tested,267,https://hail.is,https://github.com/hail-is/hail/pull/10339,1,['test'],['tested']
Testability,"shed to avoid using code generation abstractions (in this case, just factoring code into smaller functions), because they generate worse code.). The method is pretty simple. SNDArray shapes are now arrays of `SizeValue`, which is a sum type with cases `SizeValueDyn(Value[Long])` and `SizeValueStatic(Long)`. I don't think static sizes occur very often, but it was a simple addition. `SizeValue`s can be compared statically with `==`, or at runtime with `ceq`: the former is true only if we can prove statically that the two sizes must be equal, while the latter emits code to check equality at runtime, using static knowledge to elide dynamic checks where possible. The way we encode static knowledge that two sizes are equal is by using the same local variable to store both. The primary interface to introduce that static knowledge (other than using the same set of sizes to construct multiple SNDArrays), is the method `coerceToShape(cb: CodeBuilder, newShape: Seq[SizeValue]): SNDArrayValue`, which emits code to dynamically assert that `this.shape` agrees with `newShape`, then returns `this` with shape replaced by `newShape`. Thus, `a.coerceToShape(cb, newShape).shape == newShape` will always be true, preserving the static knowledge about the shape of `a`. As a simple example, `gemm` verifies its inputs with (simplifying to the case with no transposes); ```; val Seq(m, n) = C.shapes; val k = A.shapes(1); A.assertHasShape(cb, FastIndexedSeq(m, k), errMsg); B.assertHasShape(cb, FastIndexedSeq(k, n), errMsg); ```; If we call this with; ```; val m, n, k = \\ compute expected dim sizes. \\ emit dynamic size checks once; val A_ = A.coerceToShape(cb, IndexedSeq(m, k)); val B_ = B.coerceToShape(cb, IndexedSeq(k, n)); val C_ = C.coerceToShape(cb, IndexedSeq(m, n)). \\ this generates no new dynamic shape checks; SNDArray.gemm(cb, A, B, C); ```; then we can emit one set of runtime shape assertions, and further calls to methods with shape preconditions generate no new runtime assertions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10783:1723,assert,assertHasShape,1723,https://hail.is,https://github.com/hail-is/hail/pull/10783,4,['assert'],"['assertHasShape', 'assertions']"
Testability,"shing when a type guard import fails to resolve</li>; <li>When resolving type guard imports if the target module does not have source code (such is the case for C-extension; modules) do nothing instead of crashing</li>; </ul>; <h2>1.15.1</h2>; <ul>; <li>Fix <code>fully_qualified</code> should be <code>typehints_fully_qualified</code></li>; </ul>; <h2>1.15.0</h2>; <ul>; <li>Resolve type guard imports before evaluating annotations for objects</li>; <li>Remove <code>set_type_checking_flag</code> flag as this is now done by default</li>; <li>Fix crash when the <code>inspect</code> module returns an invalid python syntax source</li>; <li>Made formatting function configurable using the option <code>typehints_formatter</code></li>; </ul>; <h2>1.14.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/73aa9b6aea40720ca270b1107c1980b909943cb3""><code>73aa9b6</code></a> Fix mock imports on guarded imports (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/225"">#225</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/4d5867d5a235040b3e7d3373a56c5b2b580db7b7""><code>4d5867d</code></a> Handle UnionType (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/221"">#221</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/13ca2b458b0ee9c8d1c980b6a5e97a6ee78f46c7""><code>13ca2b4</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/tox-dev/sphinx-autodoc-typehints/issues/226"">#226</a>)</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/def37f75a11237a3889c9179d17a6635f8062604""><code>def37f7</code></a> Support and require nptyping 2</li>; <li><a href=""https://github.com/tox-dev/sphinx-autodoc-typehints/commit/ede082a858e1f7353cc502fd89a80736b",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11773:2516,mock,mock,2516,https://hail.is,https://github.com/hail-is/hail/pull/11773,1,['mock'],['mock']
Testability,"shoudn't be terribly surprising that `rand_unif` has weird behavior, but here's a case that is definitely The Wrong Thing:. ```; Python 3.6.0 |Continuum Analytics, Inc.| (default, Dec 23 2016, 13:19:00); Type 'copyright', 'credits' or 'license' for more information; IPython 7.6.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail as hl. In [2]: r = hl.rand_unif(0, 1). In [3]: hl.eval(r); Out[3]: 0.5387579341676381. In [4]: hl.eval(hl.tuple([r, r])); Out[4]: (0.5387579341676381, 0.5387579341676381); ```. okay, this makes sense becuase they have the same seed:; ```; In [5]: print(hl.tuple([r, r])._ir); (MakeTuple (0 1) (ApplySeeded rand_unif 806694938962853089 Float64 (Apply toFloat64 Float64 (I32 0)) (Apply toFloat64 Float64 (I32 1))) (ApplySeeded rand_unif 806694938962853089 Float64 (Apply toFloat64 Float64 (I32 0)) (Apply toFloat64 Float64 (I32 1)))); ```. how about this:; ```; In [6]: hl.eval(hl.range(2).map(lambda x: r)); Out[6]: [0.5387579341676381, 0.9394799645512691]; ```. odd. but maybe rand_unif inside an iteration has some semantics for advancing the RNG (like an aggregation). ```; In [7]: p = 1 - r. In [8]: hl.eval(hl.range(2).map(lambda x: p)); Out[8]: [0.46124206583236194, 0.06052003544873086]; ```; ok... ```; In [9]: hl.eval((p, hl.range(2).map(lambda x: p))); Out[9]: (0.46124206583236194, [0.46124206583236194, 0.46124206583236194]); ```; wtf? . if you look in the logs, its explained by the fact that only the final IR triggers CSE:; ```; (Let __cse_1; (ApplyBinaryPrimOp Subtract; (ApplyIR toFloat64 Float64; (I32 1)); (ApplySeeded rand_unif 806694938962853089 Float64; (ApplyIR toFloat64 Float64; (I32 0)); (ApplyIR toFloat64 Float64; (I32 1)))); (MakeTuple (0 1); (Ref __cse_1); (ArrayMap __uid_5; (ArrayRange; (I32 0); (I32 2); (I32 1)); (Ref __cse_1)))); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7572:1423,log,logs,1423,https://hail.is,https://github.com/hail-is/hail/issues/7572,1,['log'],['logs']
Testability,should make the tests significantly faster by removing the slowest one.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2202#issuecomment-327510614:16,test,tests,16,https://hail.is,https://github.com/hail-is/hail/pull/2202#issuecomment-327510614,1,['test'],['tests']
Testability,"should pass now. I reverted the requiredness change in TableRange, so I think the test would pass on master now, but will fail as soon as Cotton's meatball goes in (Without my fix)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8443#issuecomment-609062840:82,test,test,82,https://hail.is,https://github.com/hail-is/hail/pull/8443#issuecomment-609062840,1,['test'],['test']
Testability,simplified python normalization logic in pca,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2529:32,log,logic,32,https://hail.is,https://github.com/hail-is/hail/pull/2529,2,['log'],['logic']
Testability,simplify error handling logic,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1888:24,log,logic,24,https://hail.is,https://github.com/hail-is/hail/pull/1888,2,['log'],['logic']
Testability,"sing for years for sequence datasets, I now run into an error during parsing of certain lines from the VCF file. Specifically, the Hail outputs the error ""cannot set missing field for required type +PFloat64"". I was concerned that there may have been issues in the actual VCF file, and therefore I tested the script on older datasets that I managed to process without any problem previously; the error was recapitulated on all these old datasets. Therefore I do not think there is an intrinsic issue in the VCFs, but rather in the way the current version of Hail (inside the terra container) is parsing information from the lines. I was not capable of running older versions of the Terra container (1.0.x) because the versions of Hail implemented there are not compatible with the current version of Spark on Terra. . I hope you may have a solution to this irritating problem. I have added the scripts and logs below. . Thanks in advance,; Sean Jurgens. ### Version. 0.2.126-ee77707f4fab. ### Relevant log output. ```shell; ## PLEASE NOTE: to protect privacy as much as possible, I have removed almost all entries shown by the code, and for the few line entries that remain I have changed/randomized the numeric values. The order and structure is preserved for enrtries nonetheless. `#import libraries; import os; import hail as hl; from pprint import pprint. #### Start hail; hl.init(); hl.spark_context()`. /opt/conda/lib/python3.10/site-packages/hailtop/aiocloud/aiogoogle/user_config.py:44: UserWarning:. Reading spark-defaults.conf to determine GCS requester pays configuration. This is deprecated. Please use `hailctl config set gcs_requester_pays/project` and `hailctl config set gcs_requester_pays/buckets`. SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14102:1294,log,log,1294,https://hail.is,https://github.com/hail-is/hail/issues/14102,1,['log'],['log']
Testability,"sion?. Thank you for your services. My <bashrc>, <conf/spark-defaults.conf> and <./spark-env.sh> are below. **<.bashrc>**; ```; #SPARK; export SPARK_HOME=/home/edu1/tools/spark-2.2.0-bin-hadoop2.6; export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/python:$PATH; export PYTHONPATH=$HAIL_HOME/python:$SPARK_HOME/python:$(echo ${SPARK_HOME}/python/lib/py4j-*-src.zip):$PYTHONPATH. # Hail; export HAIL_HOME=/home/edu1/miniconda2/envs/Hail-on-spark/lib/python3.7/site-packages/hail; export PATH=$PATH:$HAIL_HOME/bin; export PYTHONPATH=$PYTHONPATH:$HAIL_HOME/python; export SPARK_CLASSPATH=$HAIL_HOME/backend/hail-all-spark.jar. # JAVA (I just can modify .bashrc, so This would not apply to java path.); export JAVA_HOME=/home/edu1/tools/jdk-1.8.0_231; export PATH=$PATH:$JAVA_HOME/bin; export CLASSPATH=$JAVA_HOME/lib/tools.jar. # Hadoop; export HADOOP_INSTALL=/home/edu1/tools/hadoop-2.6.0; export PAHT=$PATH:$HADOOP_INSTALL/bin; export LD_LIBRARY_PATH=$HADOOP_INSTALL/lib/native; ```; **</spark/conf/spark-defaults.conf>**; ```; spark.master spark://training.server:7077. spark.serializer org.apache.spark.serializer.KryoSerializer; spark.kryo.registrator is.hail.kryo.HailKryoRegistrator; spark.speculation True. spark.driver.memory 37414m; spark.executor.memory 37414m; spark.executor.instances 1. spark.driver.extraClassPath /home/edu1/miniconda2/envs/Hail-on-spark/lib/python3.7/site-packages/hail/backend/hail-all-spark.jar; spark.executor.extraClassPath /home/edu1/miniconda2/envs/Hail-on-spark/lib/python3.7/site-packages/hail/hail-all-spark.jar; spark.jars /home/edu1/miniconda2/envs/Hail-on-spark/lib/python3.7/site-packages/hail/backend/hail-all-spark.jar. spark.eventLog.enabled true; spark.history.fs.logDirectory file:/tmp/spark-events; spark.enevtLog.dir file:/tmp/spark-events. spark.ui.reverseProxy true; spark.ui.reverseProxyUrl spark://training.server/spark; spark.executor.extraJavaOptions -Dlog4j.debug=true; ```; **</spark/conf/spark-env.sh>**; ```; export SPARK_WORKER_INSTANCES=1; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10590:2760,log,logDirectory,2760,https://hail.is,https://github.com/hail-is/hail/issues/10590,1,['log'],['logDirectory']
Testability,sionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:98) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionQueryTask.call(JsonResumableSessionQueryTask.java:100) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.query(JsonResumableSession.java:57) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.lambda$put$0(JsonResumableSession.java:73) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.Retrying.lambda$run$0(Retrying.java:102) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.Retrying.run(Retrying.java:99) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.put(JsonResumableSession.java:68) ~[gs:__hail-test-ezlis_dking_jars_ch,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:9699,test,test-,9699,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,"small improvements to BlockMatrix write logic, added add / subtract to Python",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2861:40,log,logic,40,https://hail.is,https://github.com/hail-is/hail/pull/2861,1,['log'],['logic']
Testability,"so like to report a similar `orjson.JSONDecodeError: unexpected character: line 1 column 1 (char 0)` bug first reported by https://discuss.hail.is/t/hail-fails-after-installing-it-on-a-single-computer/3653. Hail installed from https://anaconda.org/sfe1ed40/hail; EDIT: the same error occurs after `pip install hail` into a fresh conda env, which produced hail `version 0.2.130-bea04d9c79b5`. Terminal output: ; ```; Python 3.10.13 | packaged by conda-forge | (main, Dec 23 2023, 15:36:39) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import hail as hl; hl.init(); >>> hl.init(); SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"".; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.; Running on Apache Spark version 3.4.1; SparkUI available at http://xxxx:xxxx; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.127-d18228b9bc5b; LOGGING: writing to xxxx.log; >>> hl.utils.range_table(10).collect(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-1234>"", line 2, in collect; File ""/xxxx/lib/python3.10/site-packages/hail/typecheck/check.py"", line 584, in wrapper; return __original_func(*args_, **kwargs_); File ""/xxxx/lib/python3.10/site-packages/hail/table.py"", line 2213, in collect; return Env.backend().execute(e._ir, timed=_timed); File ""/xxxx/lib/python3.10/site-packages/hail/backend/backend.py"", line 188, in execute; result, timings = self._rpc(ActionTag.EXECUTE, payload); File ""/xxxx/lib/python3.10/site-packages/hail/backend/py4j_backend.py"", line 219, in _rpc; error_json = orjson.loads(resp.content); orjson.JSONDecodeError: unexpected character: line 1 column 1 (char 0); ```. Log file:; ```; 2024-04-25 16:07:16.773 Hail: INFO: SparkUI: http://xxxx:xxxx; 2024-04-25 16:07:21.589 Hail: INFO: Running Hail version 0.2.127-d18228b9bc5b; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14049#issuecomment-2077624076:1081,LOG,LOGGING,1081,https://hail.is,https://github.com/hail-is/hail/issues/14049#issuecomment-2077624076,3,"['LOG', 'Log', 'log']","['LOGGING', 'Log', 'log']"
Testability,so tests pass; happy to throw this behind a feature flag anyway,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8522#issuecomment-615506715:3,test,tests,3,https://hail.is,https://github.com/hail-is/hail/pull/8522#issuecomment-615506715,1,['test'],['tests']
Testability,"so the scan operations are just built in to MatrixMapRows, MatrixMapCols, TableMapRows, as an alternative to #3855. I had to modify the CompileWithAggregators interface slightly so that aggregations could be extracted in multiple steps. This lets us have aggregations within a scan expression pretty easily. I've implemented scans in MatrixMapRows for testing but plan to save the MatrixMapCols and TableMapRows implementation for a separate PR since this one is getting large.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3874:352,test,testing,352,https://hail.is,https://github.com/hail-is/hail/pull/3874,1,['test'],['testing']
Testability,"so using the basic usage of the vds on a small data set with a single region, . ```; result = vds.aggregate_intervals('region_test.log',; 'n_total = variants.count()','out.log'); ```; ; has an out.log file like so . ```; Contig Start End [Ljava.lang.String;@1787beef; 22	16050213 16050608 21; ```. As I understand it, the first line should have the header to the fourth column as n_total. Thought would give a heads up",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1567:131,log,log,131,https://hail.is,https://github.com/hail-is/hail/issues/1567,3,['log'],['log']
Testability,some arguments in favor:; 1) symmetry (more logical from dev standpoint); 2) future proofing (i'd bet there are labs focused on structural variation in Y that already phase in PAR); 3) this way we are very explicit about our definition of PAR on Y. Who knows how it was defined for any given data set (though our current settings are consistent with GATK).,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/499#issuecomment-235430971:44,log,logical,44,https://hail.is,https://github.com/hail-is/hail/pull/499#issuecomment-235430971,1,['log'],['logical']
Testability,some failing tests,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8574#issuecomment-615356354:13,test,tests,13,https://hail.is,https://github.com/hail-is/hail/pull/8574#issuecomment-615356354,1,['test'],['tests']
Testability,some header tweaks to speed up C++ IR tests a tad,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4868:38,test,tests,38,https://hail.is,https://github.com/hail-is/hail/pull/4868,1,['test'],['tests']
Testability,some inference assertion failures,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8013#issuecomment-580526563:15,assert,assertion,15,https://hail.is,https://github.com/hail-is/hail/pull/8013#issuecomment-580526563,1,['assert'],['assertion']
Testability,some version of `hl.float('test')` that returns `None` if it can't be coerced (rather than throw `NumberFormatException`) would be super useful. or a regex check could also accomplish this (with a `case`).,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7408:27,test,test,27,https://hail.is,https://github.com/hail-is/hail/issues/7408,1,['test'],['test']
Testability,"something is wrong with CI tests, I'll look into it as soon as I can",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4924#issuecomment-447375781:27,test,tests,27,https://hail.is,https://github.com/hail-is/hail/pull/4924#issuecomment-447375781,1,['test'],['tests']
Testability,"sorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:237); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748). ```. I instead tried to run the same code in two separate jupyter notebooks, with the same code inside but different ways to initialize the hailcontext, one like this (works and exports):. ```; from hail import *; hc = HailContext(); ```; With startup messages looking like this:. ```; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; 18/01/08 13:51:03 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 18/01/08 13:51:03 WARN SparkConf: In Spark 1.0 and later spark.local.dir will be overridden by the value set by the cluster manager (via SPARK_LOCAL_DIRS in mesos/standalone and LOCAL_DIRS in YARN).; 18/01/08 13:51:03 WARN SparkConf: ; SPARK_CLASSPATH was detected (set to '/home/ludvig/Programs/hail/jars/hail-all-spark.jar').; This is deprecated in Spark 1.0+. Please instead use:; - ./spark-submit with --driver-class-path to augment the driver classpath; - spark.executor.extraClassPath to augment the executor classpath; ; 18/01/08 13:51:03 WARN SparkConf: Setting 'spark.executor.extraClassPath' to '/home/ludvig/Programs/hail/jars/hail-all-spark.jar' as a work-around.; 18/01/08 13:51:03 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/home/ludvig/Programs/hail/jars/hail-all-spark.jar' as a work-a",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2527#issuecomment-355985783:5828,log,logging,5828,https://hail.is,https://github.com/hail-is/hail/issues/2527#issuecomment-355985783,1,['log'],['logging']
Testability,"sorry, I didn't quite understand your last comment. Suppose we have a `PFixedLengthArray(length: Int, element: PType, required: Boolean)`. We need an algorithm that will have the following properties:; ```; unify(; PCanonicalArray(PInt32Required, true),; PFixedLengthArray(1, PInt32Required, false)); returns PCanonicalArray(PInt32Required, false); ```. ```; unify(; PFixedLengthArray(1, PInt32Required, false)); PCanonicalArray(PInt32Required, true),; returns PCanonicalArray(PInt32Required, false); ```. ```; unify(; PFixedLengthArray(1, PInt32Required, false),; PFixedLengthArray(1, PInt32Required, true)); returns PFixedLengthArray(1, PInt32Required, false); ```. calling something on the head is wrong, as is matching on the head alone. This is going to be a complicated thing, and I want all the logic (at least for each interface like PArray) in the same place.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7927#issuecomment-576372543:802,log,logic,802,https://hail.is,https://github.com/hail-is/hail/pull/7927#issuecomment-576372543,1,['log'],['logic']
Testability,"sortBy is called by hl.sorted in Python in the case you give it a comparison function. You should be able to test it from Python (there are not tests, I just checked.)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3816#issuecomment-399561532:109,test,test,109,https://hail.is,https://github.com/hail-is/hail/pull/3816#issuecomment-399561532,2,['test'],"['test', 'tests']"
Testability,source_id | token | usage |; +--------------+----------------------------------+------+-------------+-------+------------+; | 2023-07-13 | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | 2023-07-13 | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | 2023-07-13 | ci | ci | 6 | 0 | 79640784 |; | 2023-07-13 | test | test | 6 | 0 | 4142226688 |; | 2023-07-13 | test | test | 6 | 1 | 108608 |; | 2023-07-13 | test | test | 6 | 2 | 80576 |; | 2023-07-13 | test | test | 6 | 5 | 35648 |; | 2023-07-13 | test | test | 6 | 7 | 578240 |; | 2023-07-13 | test | test | 6 | 9 | 33024 |; | 2023-07-13 | test | test | 6 | 10 | 33472 |; | 2023-07-13 | test | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:8513,test,test,8513,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,source_usage BlockBlob Hot 64 application/octet-stream 2023-06-09T12:43:36+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/1/i4CoSh/status.json BlockBlob Hot 1240 application/octet-stream 2023-06-09T12:43:36+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/2/31Owgv/main/log BlockBlob Hot 16626 application/octet-stream 2023-06-09T12:44:22+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/2/31Owgv/main/resource_usage BlockBlob Hot 680 application/octet-stream 2023-06-09T12:44:22+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/2/31Owgv/status.json BlockBlob Hot 4453 application/octet-stream 2023-06-09T12:44:22+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/bunch/dK3o5ZfXmYSkP5TA/specs BlockBlob Hot 1264 application/octet-stream 2023-06-09T12:43:37+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/bunch/dK3o5ZfXmYSkP5TA/specs.idx BlockBlob Hot 16 application/octet-stream 2023-06-09T12:43:37+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/bunch/eOrFpVrN98GBIizi/specs BlockBlob Hot 1264 application/octet-stream 2023-06-09T12:43:34+00:00; batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/bunch/eOrFpVrN98GBIizi/specs.idx BlockBlob Hot 16 application/octet-stream 2023-06-09T12:43:34+00:00; ```. I looked at the status:. ```; az storage blob download --account-name haildevtest --container test --name batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/2/31Owgv/status.json | jq '.' | less; ```. which contained an error (I un-escaped the string here):. ```; JVMUserError: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.lang.reflect.InvocationTargetException; 	at java.util.concurrent.FutureTask.report(FutureTask.java:122); 	at java.util.concurrent.FutureTask.get(FutureTask.java:192); 	at is.hail.JVMEntryway.retrieveException(JVMEntryway.java:253); 	at is.hail.JVMEntryway.finishFutures(JVMEntryway.java:215); 	at is.hail.JVMEntryway.main(JVMEntryway.java:185); Caused by: java.lang.RuntimeException: java.lang.reflect.InvocationTargetException; 	a,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13160:3159,log,logs,3159,https://hail.is,https://github.com/hail-is/hail/pull/13160,2,['log'],['logs']
Testability,"sources/build-info.properties; echo 'date=2023-10-19T03:09:40Z' >> src/main/resources/build-info.properties; echo 'sparkVersion=3.3.2' >> src/main/resources/build-info.properties; echo 'hailPipVersion=0.2.124' >> src/main/resources/build-info.properties; creating env/HAIL_DEBUG_MODE which does not exist; ELASTIC_MAJOR_VERSION is set to ""7"" which is different from old value """"; printf ""7"" > env/ELASTIC_MAJOR_VERSION; make -C src/main/c prebuilt; make[1]: Entering directory `/mnt/tmp/hail/hail/src/main/c'; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Upcalls.cpp -MG -M -MF build/Upcalls.d -MT build/Upcalls.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux testutils/unit-tests.cpp -MG -M -MF build/testutils/unit-tests.d -MT build/testutils/unit-tests.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux test.cpp -MG -M -MF build/test.d -MT build/test.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Region_test.cpp -MG -M -MF build/Region_test.d -MT build/Region_test.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/include/linux Region.cpp -MG -M -MF build/Region.d -MT build/Region.o; g++ -march=sandybridge -O3 -std=c++14 -Ilibsimdpp-2.1 -Wall -Wextra -fPIC -ggdb -fno-strict-aliasing -I../resources/include -I/etc/alternatives/jre/include -I/etc/alternatives/jre/i",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221:5065,test,testutils,5065,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221,2,['test'],"['tests', 'testutils']"
Testability,"sp-5k.hg38.tileDB.recalibrate_SNP.chr22.biallelic.4795samples.g.vcf.bgz').write('/project/casa/vdf.5k/test.vdf'). ### What went wrong (all error messages here, including the full java stack trace):; Error summary: ClassNotFoundException: is.hail.utils.SerializableHadoopConfiguration; Running on Apache Spark version 2.2.0; SparkUI available at http://10.48.225.55:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version devel-abac611; NOTE: This is a beta version. Interfaces may change; during the beta period. We also recommend pulling; the latest changes weekly.; [Stage 1:======================================================>(243 + 1) / 244]2018-04-10 09:30:24 Hail: INFO: Coerced sorted dataset; Traceback (most recent call last):; File ""/restricted/projectnb/genpro/github/hail/test.py"", line 3, in <module>; hl.import_vcf('/project/casa/vcf.5k/gatk.hc/adsp-5k.hg38.tileDB.recalibrate_SNP.chr22.biallelic.4795samples.g.vcf.bgz').write('/project/casa/vdf.5k/test. vdf'); File ""<decorator-gen-546>"", line 2, in write; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 481, in _typecheck; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/matrixtable.py"", line 1956, in write; File ""/share/pkg/spark/2.2.0/install/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/restricted/projectnb/genpro/github/hail/build/distributions/hail-python.zip/hail/utils/java.py"", line 196, in deco; hail.utils.java.FatalError: ClassNotFoundException: is.hail.utils.SerializableHadoopConfiguration. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 6 in stage 2.0 failed 4 times, most recent failure: Lost task 6.3 in stage 2.0 (TID 2 53, scc-q15.scc.bu.edu, executor 1): java.io.IOException: com.esotericsoftware.kryo.KryoException: Error during Java deserialization.; at org.apache.spark.util.Utils$.t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3342:1605,test,test,1605,https://hail.is,https://github.com/hail-is/hail/issues/3342,1,['test'],['test']
Testability,"spark.jar' as a work-around.; 18/01/08 13:51:03 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/home/ludvig/Programs/hail/jars/hail-all-spark.jar' as a work-around.; 18/01/08 13:51:03 WARN Utils: Your hostname, <my computer name> resolves to a loopback address: <my local IP>; using <my IP> instead (on interface enp3s0); 18/01/08 13:51:03 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address; ```. And the other initialize hail like this (crashes with the stack trace/error in the issue):; ```; from pyspark import *; from hail import *; conf = SparkConf(); conf.set('spark.sql.files.maxPartitionBytes','60000000000') ; conf.set('spark.sql.files.openCostInBytes','60000000000') ; conf.set('spark.driver.cores','1') #test with 1 core; sc = SparkContext(conf=conf); hc = HailContext(sc); ```. With startup messages looking like this:; ```; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; 18/01/08 15:16:23 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 18/01/08 15:16:23 WARN SparkConf: In Spark 1.0 and later spark.local.dir will be overridden by the value set by the cluster manager (via SPARK_LOCAL_DIRS in mesos/standalone and LOCAL_DIRS in YARN).; 18/01/08 15:16:23 WARN SparkConf: ; SPARK_CLASSPATH was detected (set to '/home/ludvig/Programs/hail/jars/hail-all-spark.jar').; This is deprecated in Spark 1.0+. Please instead use:; - ./spark-submit with --driver-class-path to augment the driver classpath; - spark.executor.extraClassPath to augment the executor classpath; ; 18/01/08 15:16:23 WARN SparkConf: Setting 'spark.executor.extraClassPath' to '/home/ludvig/Programs/hail/jars/hail-all-spark.jar' as a work-around.; 18/01/08 15:16:23 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/home/ludvig/Programs/hail/jars/hail-all-spark.jar' as a work-a",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2527#issuecomment-355985783:7660,log,logging,7660,https://hail.is,https://github.com/hail-is/hail/issues/2527#issuecomment-355985783,1,['log'],['logging']
Testability,"specific Hail Query functionality, let's mirror that structure. Let's move REGENIE and any non-Python dependencies of it into `hailtop/batch/genetics/regenie`. Sure. > How is the Dockerfile meant to be used? As written it doesn't appear that it would work because there doesn't exist any regenie source code to COPY in. It's meant to create a Regenie docker image that we could use. It's a copy of the regenie c++ repo's dockerfile, with the removal of the ENTRYPOINT /usr/local/bin/regenie, so that I could issue a command that included an executable, which is convenient to give me the ability to check that intermediate files are actually created (wc, ls) by batch, and because that seems more idiomatic for batch. I don't think there is a published regenie image, but docker hub is down so can't double check. . You're right, I shouldn't have deleted the bulk of the repo, kept as is. Didn't want to deal with submodules. > I've made some other in-line comments in the python file. It's not clear to me how all those other files are related to the python files and I'm a bit uncomfortable adding a whole directory with a LICENSE file, especially when not all the files in the directory fall under that license (e.g. the regenie py file) and moreover the license makes claims about things linking to BGEN, which none of our code here does. The license is only contained within the folder with the licensed files. In a previous conversation with Nate/Cotton, if we use any open-source software, best to keep those files segregated, alongside their license (license must be kept alongside the code, easier to see the demarcation if in a separate folder). > We have some BGEN files for testing in the Hail src/test/resources. I already have an example provided. The example folder contains the config for that, and the regenie folder contains the example. We need an example that has a known result, and regenie's c++ repo conveniently provides that. This is what the regenie/regenie folder contains.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9194#issuecomment-668357987:2014,test,testing,2014,https://hail.is,https://github.com/hail-is/hail/pull/9194#issuecomment-668357987,4,['test'],"['test', 'testing']"
Testability,specify how to find lmmreg delta table in log file,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2667:42,log,log,42,https://hail.is,https://github.com/hail-is/hail/pull/2667,1,['log'],['log']
Testability,"sprojects.com/en/2.10.x/changelog/#version-2-10-3"">http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-3</a></li>; </ul>; <h2>2.10.2</h2>; <ul>; <li>Changes: <a href=""http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-2"">http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-2</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/master/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 2.11.3</h2>; <p>Released 2021-01-31</p>; <ul>; <li>Improve the speed of the <code>urlize</code> filter by reducing regex; backtracking. Email matching requires a word character at the start; of the domain part, and only word characters in the TLD. :pr:<code>1343</code></li>; </ul>; <h2>Version 2.11.2</h2>; <p>Released 2020-04-13</p>; <ul>; <li>Fix a bug that caused callable objects with <code>__getattr__</code>, like; :class:<code>~unittest.mock.Mock</code> to be treated as a; :func:<code>contextfunction</code>. :issue:<code>1145</code></li>; <li>Update <code>wordcount</code> filter to trigger :class:<code>Undefined</code> methods; by wrapping the input in :func:<code>soft_str</code>. :pr:<code>1160</code></li>; <li>Fix a hang when displaying tracebacks on Python 32-bit.; :issue:<code>1162</code></li>; <li>Showing an undefined error for an object that raises; <code>AttributeError</code> on access doesn't cause a recursion error.; :issue:<code>1177</code></li>; <li>Revert changes to :class:<code>~loaders.PackageLoader</code> from 2.10 which; removed the dependency on setuptools and pkg_resources, and added; limited support for namespace packages. The changes caused issues; when using Pytest. Due to the difficulty in supporting Python 2 and; :pep:<code>451</code> simultaneously, the changes are reverted until 3.0.; :pr:<code>1182</code></li>; <li>Fix line numbers in error messages when newlines are stripped.; :pr:<code>1178</c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10209:3228,mock,mock,3228,https://hail.is,https://github.com/hail-is/hail/pull/10209,1,['mock'],['mock']
Testability,"ss/releases/tag/3.6.2"">3.6.2</a>. [#302 by Anthony Sottile]</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/sass/libsass-python/blob/master/docs/changes.rst"">libsass's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>Version 0.21.1</h2>; <p>Released on May 20, 2021.</p>; <ul>; <li>Fix build on OpenBSD. [:issue:<code>310</code> by Denis Fondras].</li>; <li>Produce abi3 wheels on windows. [:issue:<code>322</code> by Anthony Sottile]</li>; <li>Make the manpage build reproducible. [:issue:<code>319</code> by Chris Lamb]</li>; <li>Follow up the libsass upstream: 3.6.5 --- See the release notes of LibSass; 3.6.5__. [:issue:<code>344</code> by Anthony Sottile]</li>; </ul>; <p>__ <a href=""https://github.com/sass/libsass/releases/tag/3.6.5"">https://github.com/sass/libsass/releases/tag/3.6.5</a></p>; <h2>Version 0.20.1</h2>; <p>Released on August 27, 2020.</p>; <ul>; <li>(no changes, re-releasing to test build automation)</li>; </ul>; <h2>Version 0.20.0</h2>; <p>Released on May 1, 2020.</p>; <ul>; <li>Produce abi3 wheels on macos / linux [:issue:<code>307</code> by Anthony Sottile]</li>; <li>Follow up the libsass upstream: 3.6.4 --- See the release notes of LibSass; 3.6.4__. [:issue:<code>313</code> by Anthony Sottile]</li>; </ul>; <p>__ <a href=""https://github.com/sass/libsass/releases/tag/3.6.4"">https://github.com/sass/libsass/releases/tag/3.6.4</a></p>; <h2>Version 0.19.4</h2>; <p>Released on November 3, 2019.</p>; <ul>; <li>Follow up the libsass upstream: 3.6.3 --- See the release notes of LibSass; 3.6.3__. [:issue:<code>304</code> by Anthony Sottile]</li>; </ul>; <p>__ <a href=""https://github.com/sass/libsass/releases/tag/3.6.3"">https://github.com/sass/libsass/releases/tag/3.6.3</a></p>; <h2>Version 0.19.3</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/sass/libsass-p",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11508:2426,test,test,2426,https://hail.is,https://github.com/hail-is/hail/pull/11508,1,['test'],['test']
Testability,"ssBuilder.scala b/hail/src/main/scala/is/hail/expr/ir/EmitClassBuilder.scala; index 115df824b3..6e5ee81e6a 100644; --- a/hail/src/main/scala/is/hail/expr/ir/EmitClassBuilder.scala; +++ b/hail/src/main/scala/is/hail/expr/ir/EmitClassBuilder.scala; @@ -59,6 +59,35 @@ class EmitModuleBuilder(val ctx: ExecuteContext, val modb: ModuleBuilder) {; new StaticFieldRef(rgField); }; ; + class LoweredReferenceGenome(; + name: SStringPointerValue,; + contigs: SIndexablePointerValue,; + lengths: SIndexablePointerValue,; + xContigs: SIndexablePointerValue,; + yContigs: SIndexablePointerValue,; + mtContigs: SIndexablePointerValue,; + parInterval: SIntervalPointerValue; + ); +; + private val loweredReferences: mutable.Map[String, StaticField[Long]] = mutable.Map.empty; +; + def getLoweredReferenceGenome(cb: EmitCodeBuilder, name: String): LoweredReferenceGenome = {; + loweredReferences.getOrElseUpdate(name, {; + val ecb = genEmitClass[Unit](s""lowered_reference_${name}""); + val rg = ctx.getReference(name); + assert(rg.name == name); + new LoweredReferenceGenome(; + ecb.addLiteral(cb, rg.name, VirtualTypeWithReq.fullyRequired(TString)).asInstanceOf[SStringPointerValue],; + ecb.addLiteral(cb, rg.contigs, VirtualTypeWithReq.fullyRequired(TArray(TString))).asInstanceOf[SIndexablePointerValue],; + ecb.addLiteral(cb, rg.lengths, VirtualTypeWithReq.fullyRequired(TArray(TInt32))).asInstanceOf[SIndexablePointerValue],; + ecb.addLiteral(cb, rg.xContigs, VirtualTypeWithReq.fullyRequired(TSet(TString))).asInstanceOf[SIndexablePointerValue],; + ecb.addLiteral(cb, rg.yContigs, VirtualTypeWithReq.fullyRequired(TSet(TString))).asInstanceOf[SIndexablePointerValue],; + ecb.addLiteral(cb, rg.mtContigs, VirtualTypeWithReq.fullyRequired(TSet(TString))).asInstanceOf[SIndexablePointerValue],; + ecb.addLiteral(cb, Interval(rg.parInput._1, rg.parInput._2), VirtualTypeWithReq.fullyRequired(TInterval(TLocus(rg.name)))).asInstanceOf[SIntervalPointerValue]; + ); + }; + }; +; def referenceGenomes(): IndexedSeq[Re",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13862#issuecomment-1771508011:1522,assert,assert,1522,https://hail.is,https://github.com/hail-is/hail/issues/13862#issuecomment-1771508011,1,['assert'],['assert']
Testability,ssLoader.java:756); 	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142); 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:468); 	at java.net.URLClassLoader.access$100(URLClassLoader.java:74); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:369); 	at java.net.URLClassLoader$1.run(URLClassLoader.java:363); 	at java.security.AccessController.doPrivileged(Native Method); 	at java.net.URLClassLoader.findClass(URLClassLoader.java:362); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:351); 	at org.testng.internal.ClassHelper.forName(ClassHelper.java:94); 	at org.testng.xml.XmlClass.loadClass(XmlClass.java:78); 	at org.testng.xml.XmlClass.getSupportClass(XmlClass.java:89); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:25); 	at org.testng.internal.ClassInfoMap.<init>(ClassInfoMap.java:18); 	at org.testng.TestRunner.initMethods(TestRunner.java:408); 	at org.testng.TestRunner.init(TestRunner.java:235); 	at org.testng.TestRunner.init(TestRunner.java:205); 	at org.testng.TestRunner.<init>(TestRunner.java:153); 	at org.testng.SuiteRunner$DefaultTestRunnerFactory.newTestRunner(SuiteRunner.java:536); 	at org.testng.SuiteRunner.init(SuiteRunner.java:159); 	at org.testng.SuiteRunner.<init>(SuiteRunner.java:113); 	at org.testng.TestNG.createSuiteRunner(TestNG.java:1299); 	at org.testng.TestNG.createSuiteRunners(TestNG.java:1286); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); Caused by: java.lang.ClassNotFoundException: is.hail.relocated.org.apache.commons.math3.distribution.AbstractIntegerDistribution; 	at java.net.URLClassLoader.findClass(URLClassLoader.java:382); 	at java.lang.ClassLoader.loadClass(ClassLoader.java:418); 	at sun.misc.Launcher$App,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460:1578,Test,TestRunner,1578,https://hail.is,https://github.com/hail-is/hail/pull/8700#issuecomment-624324460,1,['Test'],['TestRunner']
Testability,"ssages here, including the full java stack trace):; ```; testCppCodegen; :compileJava UP-TO-DATE; :generateBuildInfo; :nativeLib; tar -xzf libsimdpp-2.1.tar.gz; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :testCppCodegen; Running test: Test method testReadWrite(is.hail.annotations.AnnotationsSuite). Gradle suite > Gradle test > is.hail.annotations.AnnotationsSuite.testReadWrite FAILED; org.apache.spark.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1158,Assert,AssertionError,1158,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['Assert'],['AssertionError']
Testability,"sses; :compileTestJava UP-TO-DATE; :compileTestScala; :processTestResources UP-TO-DATE; :testClasses; :test; Running test: Test method testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))) PASSED; Running test: Test method testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))) PASSED; Running test: Test method testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0)))) PASSED; Running test: Test method testForwardingOps[3](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyBinaryPrimOp(Add(),ApplyBinaryPrimOp(Add(),I32(2),Ref(x,int32)),I32(1))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[3](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyBinaryPrimOp(Add(),ApplyBinaryPrimOp(Add(),I32(2),Ref(x,int32)),I32(1)))) PASSED; Running test: Test method testForwardingOps[4](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyUnaryPrimOp(Negate(),Ref(x,int32))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gra",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925:3240,test,testForwardingOps,3240,https://hail.is,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925,4,"['Test', 'test']","['Test', 'test', 'testForwardingOps']"
Testability,"sspath. We cache jars on the local filesystem. I had to abandon the old approach for two reasons:. 1. Multiple JVMs race to download the JAR. In the new approach, the python worker process uses a; lock to ensure at most one coroutine is downloading a given version of a JAR at the same time. 2. The JVM assumes that a child ClassLoader does not redefine a class from the parent; ClassLoader. That's why ClassLoaders always prefer to load a class from the parent ClassLoader's; classes. When we decide to re-use JVMs or use a single multi-threaded JVM, we'll need to ensure the top-level; ClassLoader *does not have Hail on its classpath*. I looked briefly at this approach and found it; more work than the current approach. ---. My apologies for eliminating JVMProcess in this PR. It's an unrelated change which facilitated my; understanding worker.py. I essentially inlined JVMProcess into JVMJob and eliminated any duplicative; code. ---. After making this change I restored the tests. Some tests had bitrotted. In the process of fixing; those tests, I found a few other bugs. Fixing these lower-level bugs unlocked a number of new; tests. A couple tests (which were added since the service tests were removed) had to be marked as; failing. Here are the bugs I fixed:. 1. Correct the error message raised when tests are run in a non-main thread (we look for this; message and start an event loop for Hail's async code because asyncio refuses to start an event; loop in a non-main thread). 2. Use a `SafeRow` to copy the globals data out of a Region and into durable, GC'ed objects. 3. Re-enable serialization of GoogleStorageFS (including its private key, which we really shouldn't; do; Tim is working on it), which was broken (presumably) when we changed Scala versions. The; `var` modifier ensures the name is compiled as a JVM field. 4. Correctly convert from a `Byte` to an `Int`. By default `Byte` to `Int` conversion (which is done; automatically when you return a `Byte` from a function whos",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10390:1408,test,tests,1408,https://hail.is,https://github.com/hail-is/hail/pull/10390,1,['test'],['tests']
Testability,st > is.hail.io.IndexSuite.writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([L,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:6835,test,test,6835,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,st > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFu,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:7113,test,test,7113,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,st > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[15]([Ljava.lang.String;@51684a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFunctions PASSED; Running test: Test method testNativeBuild(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:7391,test,test,7391,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,"st from GHSA-29gw-9793-fvw7</li>; <li><a href=""https://github.com/ipython/ipython/commit/e548ee23ac460a99901f1cd43b94ae84a35ec393""><code>e548ee2</code></a> Swallow potential exceptions from showtraceback() (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13934"">#13934</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/0694b08b436203817059ec7e7136cf8561a6f013""><code>0694b08</code></a> MAINT: mock slowest test. (<a href=""https://github-redirect.dependabot.com/ipython/ipython/issues/13885"">#13885</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/865591252a67c6907fe03228b4053305715286e6""><code>8655912</code></a> MAINT: mock slowest test.</li>; <li><a href=""https://github.com/ipython/ipython/commit/a011765b44febfb11bae122d2ed7db763621ac8f""><code>a011765</code></a> Isolate the attack tests with setUp and tearDown methods</li>; <li><a href=""https://github.com/ipython/ipython/commit/c7a9470e540392c575aac46c3ee5cf4fe5123eb1""><code>c7a9470</code></a> Add some regression tests for this change</li>; <li><a href=""https://github.com/ipython/ipython/commit/fd34cf5f1f6e243243c738c6e0cf62eb682c4d68""><code>fd34cf5</code></a> Swallow potential exceptions from showtraceback()</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.34.0...8.10.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.34.0&new-version=8.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12683:1842,test,tests,1842,https://hail.is,https://github.com/hail-is/hail/pull/12683,1,['test'],['tests']
Testability,st | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2554,test,test,2554,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2588,test,test,2588,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2966,test,test,2966,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 44928 |;,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3070,test,test,3070,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 44928 |; | test | test | 6 | 112 | 37696 |; +----------------------------------+------+-------------+-------+---,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3174,test,test,3174,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11365,test,test,11365,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13 | test | test | 6 | 136 | 51840 |; | 2023-07-13,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11413,test,test,11413,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 0 | 4142226688 |; | 2023-07-13 | test | test | 6 | 1 | 108608 |; | 2023-07-13 | test | test | 6 | 2 | 80576 |; | 2023-07-13 | test | test | 6 | 5 | 35648 |; | 2023-07-13 | test | test | 6 | 7 | 578240 |; | 2023-07-13 | test | test | 6 | 9 | 33024 |; | 2023-07-13 | test | test | 6 | 10 | 33472 |; | 2023-07-13 | test | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:8852,test,test,8852,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9182,test,test,9182,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9230,test,test,9230,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9751,test,test,9751,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2547,test,test,2547,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9798,test,test,9798,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2581,test,test,2581,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9845,test,test,9845,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10223,test,test,10223,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2959,test,test,2959,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 4,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3063,test,test,3063,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 44928 |; | test | test | 6 | 112 | 37696 |; +----------------------------------+------+-------------+----,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3167,test,test,3167,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 5 | 46912 |; | test | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1897,test,test,1897,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10508,test,test,10508,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 44928 |; | test | test | 6 | 112 | 37696 |; +----------------------------------+------+-------------+-------+------------+; 100 rows in set,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3201,test,test,3201,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 202,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11358,test,test,11358,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,st | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13 | test | test | 6 | 136 | 51840 |; | 202,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11406,test,test,11406,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,"st); 366 return hail_event_loop().run_until_complete(; 367 init_batch(; 368 log=log,; (...); 383 ); 384 ); 385 if backend == 'spark':; --> 386 return init_spark(; 387 sc=sc,; 388 app_name=app_name,; 389 master=master,; 390 local=local,; 391 min_block_size=min_block_size,; 392 branching_factor=branching_factor,; 393 spark_conf=spark_conf,; 394 _optimizer_iterations=_optimizer_iterations,; 395 log=log,; 396 quiet=quiet,; 397 append=append,; 398 tmp_dir=tmp_dir,; 399 local_tmpdir=local_tmpdir,; 400 default_reference=default_reference,; 401 global_seed=global_seed,; 402 skip_logging_configuration=skip_logging_configuration,; 403 gcs_requester_pays_configuration=gcs_requester_pays_configuration,; 404 ); 405 if backend == 'local':; 406 return init_local(; 407 log=log,; 408 quiet=quiet,; (...); 414 gcs_requester_pays_configuration=gcs_requester_pays_configuration,; 415 ); File <decorator-gen-1762>:2, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); File /databricks/python/lib/python3.10/site-packages/hail/typecheck/check.py:584, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 581 @decorator; 582 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 583 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 584 return __original_func(*args_, **kwargs_); File /databricks/python/lib/python3.10/site-packages/hail/context.py:476, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); 467 app_name = app_name or 'Hail'; 468 (; 469 gcs_requester_pays_project,; 470 gcs_requester_pays_buckets,; (...)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14462:2816,log,log,2816,https://hail.is,https://github.com/hail-is/hail/issues/14462,1,['log'],['log']
Testability,"st); File ""/usr/local/lib/python3.6/dist-packages/aiohttp_session/__init__.py"", line 152, in factory; response = await handler(request); File ""/usr/local/lib/python3.6/dist-packages/prometheus_async/aio/_decorators.py"", line 42, in time_decorator; rv = await wrapped(*args, **kw); File ""/usr/local/lib/python3.6/dist-packages/gear/auth.py"", line 86, in wrapped; return await fun(request, userdata, *args, **kwargs); File ""/usr/local/lib/python3.6/dist-packages/batch/front_end/front_end.py"", line 383, in ui_get_job_log; 'job_log': await _get_job_log(request.app, batch_id, job_id, user); File ""/usr/local/lib/python3.6/dist-packages/batch/front_end/front_end.py"", line 112, in _get_job_log; job_log = await job._read_logs(); File ""/usr/local/lib/python3.6/dist-packages/batch/batch.py"", line 57, in _read_logs; return {k: v for k, v in await future_logs}; File ""/usr/local/lib/python3.6/dist-packages/batch/batch.py"", line 52, in _read_log_from_gcs; pod_log = await self.app['log_store'].read_gs_file(LogStore.container_log_path(self.directory, task_name)); File ""/usr/local/lib/python3.6/dist-packages/batch/log_store.py"", line 40, in read_gs_file; return await self.gcs.read_gs_file(uri); File ""/usr/local/lib/python3.6/dist-packages/batch/google_storage.py"", line 27, in read_gs_file; return await self._wrapped_read_gs_file(self, uri); File ""/usr/local/lib/python3.6/dist-packages/batch/google_storage.py"", line 37, in wrapped; **kwargs); File ""/usr/local/lib/python3.6/dist-packages/hailtop/utils/utils.py"", line 33, in blocking_to_async; thread_pool, lambda: fun(*args, **kwargs)); File ""/usr/lib/python3.6/concurrent/futures/thread.py"", line 56, in run; result = self.fn(*self.args, **self.kwargs); File ""/usr/local/lib/python3.6/dist-packages/hailtop/utils/utils.py"", line 33, in <lambda>; thread_pool, lambda: fun(*args, **kwargs)); File ""/usr/local/lib/python3.6/dist-packages/batch/google_storage.py"", line 53, in _read_gs_file; content = f.download_as_string(); File ""/usr/local/lib/pyth",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7412:4031,Log,LogStore,4031,https://hail.is,https://github.com/hail-is/hail/pull/7412,1,['Log'],['LogStore']
Testability,"st-6boype3d'...; Traceback (most recent call last):; File ""/home/hail/.conda/envs/hail/bin/cluster"", line 10, in <module>; sys.exit(main()); File ""/home/hail/.conda/envs/hail/lib/python3.6/site-packages/cloudtools/__main__.py"", line 85, in main; start.main(args); File ""/home/hail/.conda/envs/hail/lib/python3.6/site-packages/cloudtools/start.py"", line 210, in main; check_call(cmd); File ""/home/hail/.conda/envs/hail/lib/python3.6/subprocess.py"", line 291, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '['gcloud', 'beta', 'dataproc', 'clusters', 'create', 'ci-test-6boype3d', '--image-version=1.2-deb9', '--metadata=MINICONDA_VERSION=4.4.10,JAR=gs://hail-ci-0-1/temp/25aa42b2d6d442615931b2eb65c5f8e012de52a0/96d6daa14989dd0cff08b30ac1f1d53288171a54/hail.jar,ZIP=gs://hail-ci-0-1/temp/25aa42b2d6d442615931b2eb65c5f8e012de52a0/96d6daa14989dd0cff08b30ac1f1d53288171a54/hail.zip', '--properties=spark:spark.driver.memory=3g,spark:spark.driver.maxResultSize=0,spark:spark.task.maxFailures=20,spark:spark.kryoserializer.buffer.max=1g,spark:spark.driver.extraJavaOptions=-Xss4M,spark:spark.executor.extraJavaOptions=-Xss4M,hdfs:dfs.replication=1,dataproc:dataproc.logging.stackdriver.enable=false,dataproc:dataproc.monitoring.stackdriver.enable=false', '--initialization-actions=gs://dataproc-initialization-actions/conda/bootstrap-conda.sh,gs://hail-common/cloudtools/init_notebook1.py,gs://hail-common/vep/vep/vep85-loftee-1.0-GRCh37-init-docker.sh', '--master-machine-type=n1-standard-1', '--master-boot-disk-size=40GB', '--num-master-local-ssds=0', '--num-preemptible-workers=0', '--num-worker-local-ssds=0', '--num-workers=2', '--preemptible-worker-boot-disk-size=40GB', '--worker-boot-disk-size=40', '--worker-machine-type=n1-standard-1', '--zone=us-central1-b', '--initialization-action-timeout=20m', '--bucket=hail-ci-0-1-dataproc-staging-bucket', '--max-idle=10m']' returned non-zero exit status 1. real	20m34.381s; user	0m6.329s; sys	0m1.522s; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4530#issuecomment-475782518:10715,log,logging,10715,https://hail.is,https://github.com/hail-is/hail/issues/4530#issuecomment-475782518,2,['log'],['logging']
Testability,"st-7.4.3, pluggy-1.3.0; rootdir: /private/tmp; configfile: pytest.ini; plugins: xdist-2.5.0, timeout-2.2.0, instafail-0.5.0, devtools-0.12.2, asyncio-0.21.1, timestamper-0.0.9, metadata-3.0.0, html-1.22.1, anyio-4.2.0, forked-1.6.0, accept-0.1.9, image-diff-0.0.11; asyncio: mode=strict; collected 1 item . foo.py F [100%]. ================================================= FAILURES =================================================; ___________________________________________________ test ___________________________________________________. def test():; > assert False, 'b' * 1000; E AssertionError: bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb; E assert False. foo.py:2: AssertionError; ========================================= short test summary info ==========================================; FAILED foo.py::test - AssertionError: bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb...; ============================================ 1 failed in 0.05s =============================================; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14151#issuecomment-1889800019:925,test,test,925,https://hail.is,https://github.com/hail-is/hail/pull/14151#issuecomment-1889800019,8,"['Assert', 'assert', 'test']","['AssertionError', 'assert', 'test']"
Testability,"st.collect</code> module - import from <code>pytest</code> directly.</li>; </ul>; <p>For more information consult; <a href=""https://docs.pytest.org/en/latest/deprecations.html"">Deprecations and Removals</a> in the docs.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9437"">#9437</a>: Dropped support for Python 3.6, which reached <a href=""https://devguide.python.org/#status-of-python-branches"">end-of-life</a> at 2021-12-23.</p>; </li>; </ul>; <h2>Improvements</h2>; <ul>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/5192"">#5192</a>: Fixed test output for some data types where <code>-v</code> would show less information.</p>; <p>Also, when showing diffs for sequences, <code>-q</code> would produce full diffs instead of the expected diff.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9362"">#9362</a>: pytest now avoids specialized assert formatting when it is detected that the default <code>__eq__</code> is overridden in <code>attrs</code> or <code>dataclasses</code>.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9536"">#9536</a>: When <code>-vv</code> is given on command line, show skipping and xfail reasons in full instead of truncating them to fit the terminal width.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9644"">#9644</a>: More information about the location of resources that led Python to raise <code>ResourceWarning</code>{.interpreted-text role=&quot;class&quot;} can now; be obtained by enabling <code>tracemalloc</code>{.interpreted-text role=&quot;mod&quot;}.</p>; <p>See <code>resource-warnings</code>{.interpreted-text role=&quot;ref&quot;} for more information.</p>; </li>; <li>; <p><a href=""https://github-redirect.dependabot.com/pytest-dev/pytest/issues/9678"">#9678</a>: More types are now accepted in the <code>ids</code> argument to <cod",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11571:1809,assert,assert,1809,https://hail.is,https://github.com/hail-is/hail/pull/11571,3,['assert'],['assert']
Testability,"st: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFunctions PASSED; Running test: Test method testNativeBuild(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeCallSpeed PASSED; Running test: Test method testNativeGlobal(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeGlobal PASSED; Running test: Test method testNativePtr(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativePtr PASSED; Running test: Test method testNativeUpcall(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeUpcall PASSED; Running test: Test method testObjectArray(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testObjectArray PASSED; Running test: Test method testShuffleAndJoinDoesntMemoryLeak(is.hail.expr.ir.TableIRSuite). Gradle suite > Gradle test > is.hail.expr.ir.TableIRSuite.testShuffleAndJoinDoesntMemoryLeak PASSED; Running test: Test method testBufferWriteReadDoubles(is.hail.annotations.UnsafeSuite). Gradle suite > Gradle test > is.hail.annotations.UnsafeSuite.testBufferWriteReadDoubles PASSED; Running test: Test method testCodec(is.hail.annotations.UnsafeSuite); #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007fe4a85738ec, pid=23790, tid=0x00007fe48cdfa700; #; # JRE version: OpenJDK Runtime Environment (8.0_181-b13) (build 1.8.0_181-8u181-b13-0ubuntu0.18.04.1-b13); # Java VM: OpenJDK 64-Bit Server VM (25.181-b13 mixed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:8956,test,test,8956,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,"st; tmpfs 14.7G 0 14.7G 0% /proc/scsi; tmpfs 14.7G 0 14.7G 0% /sys/firmware; ```. Which isn't much larger than it was before the scaling tests. It appears to slowly increase the amount of memory it needs:; ```; 1 0 nobody S 30.9g103.7 1 11.5 /bin/prometheus --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles --web.external; ```. caping out at 31.5 GB (the disk is 31.2 GB). Now, it is presumably trying to recover. It's been up for about 7 minutes. Still unavailable:; ```; /prometheus $ wget localhost:9090/monitoring/prometheus; Connecting to localhost:9090 (127.0.0.1:9090); wget: server returned error: HTTP/1.1 503 Service Unavailable; /prometheus $ ; ```. https://github.com/prometheus/prometheus/issues/5727#issuecomment-510818825; https://github.com/prometheus/prometheus/issues/4324#issuecomment-460243182. ```; # k logs -n monitoring prometheus-0 ; level=info ts=2019-07-31T15:45:51.990Z caller=main.go:286 msg=""no time or size retention was set so using the default time retention"" duration=15d; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:322 msg=""Starting Prometheus"" version=""(version=2.10.0, branch=HEAD, revision=d20e84d0fb64aff2f62a977adc8cfb656da4e286)""; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:323 build_context=""(go=go1.12.5, user=root@a49185acd9b0, date=20190525-12:28:13)""; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:324 host_details=""(Linux 4.14.127+ #1 SMP Tue Jun 18 18:32:10 PDT 2019 x86_64 prometheus-0 (none))""; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:325 fd_limits=""(soft=1048576, hard=1048576)""; level=info ts=2019-07-31T15:45:51.991Z caller=main.go:326 vm_limits=""(soft=unlimited, hard=unlimited)""; level=info ts=2019-07-31T15:45:51.993Z caller=main.go:645 msg=""Starting TSDB ...""; level=info ts=2019-07-31T15:45:51.994Z caller=web.go:417 component=web msg=""Start listening ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6773:2287,log,logs,2287,https://hail.is,https://github.com/hail-is/hail/issues/6773,1,['log'],['logs']
Testability,stSameAsOrigBGzip PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigNoCompression PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.SampleQCSuite.testSt,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:1452,test,test,1452,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,stUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:3050,assert,assertEvalsTo,3050,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604,2,"['Test', 'assert']","['TestUtils', 'assertEvalsTo']"
Testability,"stacked on 3 other ci2 PRs. - add heal logic; - add job log endpoint; - some simplifications: PRs have a watched branch target (which has a sha) and a source sha, but don't need the source branch. Got rid of FQSHA.; - Ran by hand, seems to work. Will add tests back once build is actually doing something non-trivial.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5814:39,log,logic,39,https://hail.is,https://github.com/hail-is/hail/pull/5814,3,"['log', 'test']","['log', 'logic', 'tests']"
Testability,stacked on: https://github.com/hail-is/hail/pull/6139. create test jwt-secret-key secret and corresponding Hail service accounts.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6140:62,test,test,62,https://hail.is,https://github.com/hail-is/hail/pull/6140,1,['test'],['test']
Testability,"stacks on #5540. Will re-assign when notebook2-no-svc is merged. This is needed because, unwittingly due to networking issues, or just having 2 open sessions, two notebooks could be created. If so, this would trigger the assert len(notebooks) == 1 and prevent the user from using the service again. Adresses: https://github.com/hail-is/hail/issues/5487. Relevant commits:; https://github.com/hail-is/hail/pull/5549/commits/901b1e16daeda9209424319ebbeea2b451862876. Once that goes in, a few small changes to notebook.py to store multiple notebooks in a session (and pass the notebooks array to templates), and then loop over the array in notebook-state.html (which retains all of the same per-notebook ui). . I also removed the explicit reachability check on refresh for {% if ready %}. I believe when you .watch(list_namespaced_pods), the first request gets up-to-date status, so no real need to separately check reachability on refresh (we could back port this to #5540 if needed). <img width=""607"" alt=""screen shot 2019-03-06 at 3 58 32 pm"" src=""https://user-images.githubusercontent.com/5543229/53919928-b28d8780-4028-11e9-8665-4d2a7c10c8cf.png"">. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5549:221,assert,assert,221,https://hail.is,https://github.com/hail-is/hail/pull/5549,1,['assert'],['assert']
Testability,"static openapi file captured in api/openapi-spec (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/109179"">kubernetes/kubernetes#109179</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG Apps and Auth]</li>; <li>Fixes a regression in v1beta1 PodDisruptionBudget handling of &quot;strategic merge patch&quot;-type API requests for the <code>selector</code> field. Prior to 1.21, these requests would merge <code>matchLabels</code> content and replace <code>matchExpressions</code> content. In 1.21, patch requests touching the <code>selector</code> field started replacing the entire selector. This is consistent with server-side apply and the v1 PodDisruptionBudget behavior, but should not have been changed for v1beta1. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108139"">kubernetes/kubernetes#108139</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG Auth and Testing]</li>; <li>Fix OpenAPI serialization of the x-kubernetes-validations field (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/108030"">kubernetes/kubernetes#108030</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery]</li>; <li>A new field <code>omitManagedFields</code> has been added to both <code>audit.Policy</code> and <code>audit.PolicyRule</code>; so cluster operators can opt in to omit managed fields of the request and response bodies from; being written to the API audit log. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/94986"">kubernetes/kubernetes#94986</a>, <a href=""https://github.com/tkashem""><code>@​tkashem</code></a>) [SIG API Machinery, Auth, Cloud Provider and Testing]</li>; <li>A small regression in Service updates was fixed. The circumstances are so unlikely that probably nobody would ever hit it. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104601"">kubernetes/kubernetes#10",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:1352,Test,Testing,1352,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['Test'],['Testing']
Testability,"status description is limited to like 120 characters, so I gave up on this a while ago, but never removed the code). - `.strip()` the GitHub token in case there are newlines. - print the SHA being deployed in the log statement. - add `hail-ci-build.sh` to CI, which just invokes `make test-in-cluster`(which in turn runs `test-in-cluster.sh`. - `test-in-cluster.sh` copies the secrets for testing to the expected locations and exposes the pod in which it is running with an internal service, recent changes to `site` [redirect sub URLs of ci.test.is to services named using this scheme](https://github.com/hail-is/hail/blob/master/site/hail.nginx.conf#L38-L41). GitHub uses these URLs to send updates to the CI under test about the watched repositories. - `test-locally.sh` now installs `../batch` into the currently running `pip` before testing (NB: if you edit batch and run the tests without committing the changes you've made to batch, this will pass tests but fail when pushed to a PR!). - `test-locally.sh` activates the `hail-ci` conda environment itself because it was not being propagated from the `Makefile`. I don't know why, but this is a simple fix. - `test-locally.sh` starts the ci after the repository is created. CI will print error messages if a watched repository doesn't exist. - `test/test-ci.py` now uses access tokens for all interaction with GitHub, previously it relied on the latent privileges that I and Cotton had in our environments. - `test/test-ci.py` uses a temporary, but not automatically deleted, directory when the environment variable `IN_CLUSTER` is set to `true` (to which it is set by `test-in-cluster.sh`). I noticed that, when running in a batch job pod, if an error occurred, `pytest` failed to print any error information and instead failed because the current working directory no longer existed. I found very little information on Google about this. It seems safe to not clean up temporary directories created in the batch job pod because pods are ephemer",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4474:1362,test,test-locally,1362,https://hail.is,https://github.com/hail-is/hail/pull/4474,1,['test'],['test-locally']
Testability,status is just status returned by worker; unify job /log and /status into single job page (batch2 and ci); include spec in GET job (api and ui) calls,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7530:53,log,log,53,https://hail.is,https://github.com/hail-is/hail/pull/7530,1,['log'],['log']
Testability,still failing test.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1632#issuecomment-291121033:14,test,test,14,https://hail.is,https://github.com/hail-is/hail/pull/1632#issuecomment-291121033,1,['test'],['test']
Testability,still failing:; ```gsutil cat gs://hail-ci-0-1/deploy/c28a3f9863a0\*/job-log ```; ```; + gcloud -q auth activate-service-account --key-file=/secrets/gcr-push-service-account-key.json; Activated service account credentials for: [gcr-push@broad-ctsa.iam.gserviceaccount.com]; + gcloud -q auth configure-docker; Docker configuration file updated.; + make push-batch; docker build -t batch .; Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.38/build?buildargs=%7B%7D&cachefrom=%5B%5D&cgroupparent=&cpuperiod=0&cpuquota=0&cpusetcpus=&cpusetmems=&cpushares=0&dockerfile=Dockerfile&labels=%7B%7D&memory=0&memswap=0&networkmode=default&rm=1&session=nt5ube8nzit2kbdia2afrfify&shmsize=0&t=batch&target=&ulimits=null&version=1: dial unix /var/run/docker.sock: connect: permission denied; make: *** [build-batch] Error 1; Makefile:14: recipe for target 'build-batch' failed. ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4443#issuecomment-424716708:73,log,log,73,https://hail.is,https://github.com/hail-is/hail/issues/4443#issuecomment-424716708,1,['log'],['log']
Testability,still got test failures: https://ci.hail.is/batches/48405/jobs/45,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8778#issuecomment-631468022:10,test,test,10,https://hail.is,https://github.com/hail-is/hail/pull/8778#issuecomment-631468022,1,['test'],['test']
Testability,still needs test.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11086:12,test,test,12,https://hail.is,https://github.com/hail-is/hail/pull/11086,1,['test'],['test']
Testability,stitute.hail.methods.ExportPlinkSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrig PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSu,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:1824,test,test,1824,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,2,['test'],['test']
Testability,"stng/pull/2820"">cbeust/testng#2820</a></li>; <li>Refactoring by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2821"">cbeust/testng#2821</a></li>; <li>Fixing bug with DataProvider retry by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2822"">cbeust/testng#2822</a></li>; <li>Add config key for callback discrepancy behavior by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2823"">cbeust/testng#2823</a></li>; <li>Upgrading versions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""https://github.com/melloware""><code>@​melloware</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li>JarFileUtils.delete(File f) throw actual exception (instead of FileNotFound) when file cannot be deleted <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2825"">#2825</a> by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; <li>GITHUB-2830 - Failsafe parameter.toString by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2831"">cbeust/testng#2831</a></li>; <li>Changing assertion message of the osgitest by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:4433,test,testng,4433,https://hail.is,https://github.com/hail-is/hail/pull/12665,1,['test'],['testng']
Testability,stry/client/__pycache__/docker_name_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_puller_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_pusher_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/docker_appender_.py; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_appender_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_puller_.cpython-39.pyc; /usr/lib/google-cloud-sdk/lib/third_party/containerregistry/tools/__pycache__/docker_pusher_.cpython-39.pyc; /usr/local/share/google/dataproc/npd-config/docker-monitor-counter.json; /usr/local/share/google/dataproc/npd-config/docker-monitor.json; /usr/local/share/google/dataproc/npd-config/health-checker-docker.json; /usr/local/share/google/dataproc/npd-config/docker-monitor-filelog.json; /usr/local/share/google/dataproc/bdutil/fluentd/container_logging/plugin/test/Dockerfile; /usr/local/share/google/dataproc/bdutil/components/initialize/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/post-install/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/activate/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/components/shared/docker.sh; /usr/local/share/google/dataproc/bdutil/components/pre-uninstall/docker-ce.sh; /usr/local/share/google/dataproc/bdutil/configure_docker.sh; /run/docker.sock; /tmp/dataproc/uninstall/docker-ce; /tmp/dataproc/components/uninstall/docker-ce.running; /tmp/dataproc/components/uninstall/docker-ce.done; /tmp/dataproc/components/pre-uninstall/docker-ce.running; /tmp/dataproc/components/pre-uninstall/docker-ce.done; /etc/apt/preferences.d/docker-ce.pref; /etc/apt/preferences.d/docker-ce-cli.pref; /etc/apt/sources.list.d/docker.list; /var/lib/apt/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751:11962,test,test,11962,https://hail.is,https://github.com/hail-is/hail/issues/12936#issuecomment-1709120751,1,['test'],['test']
Testability,submitting benchmarks now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10581#issuecomment-860829964:11,benchmark,benchmarks,11,https://hail.is,https://github.com/hail-is/hail/pull/10581#issuecomment-860829964,1,['benchmark'],['benchmarks']
Testability,"such as chr13, it worked well in Terra. Since we will convert multiple plink files to hailmatrix table using Terra platform in future, I need to figure the problem out. Any advise would be appreciated. ### Version. 0.2.127. ### Relevant log output. ```shell; 2024/01/17 20:20:25 Starting container setup.; 2024/01/17 20:20:26 Done container setup.; 2024/01/17 20:20:27 Starting localization.; 2024/01/17 20:20:34 Localization script execution started...; 2024/01/17 20:20:34 Localizing input gs://fc-5a8938eb-1299-4afc-957f-afb53ef602b9/submissions/e8747e74-47d1-4f52-acfc-1ac7f81d79ba/VUMCBed2HailMatrix/683447d9-9342-4058-bcfc-ba21422d3121/call-Bed2HailMatrix/script -> /cromwell_root/script; 2024/01/17 20:20:36 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bed -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bed; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.fam -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.fam; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bim -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bim; Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.fam...; / [0 files][ 0.0 B/910.3 KiB] / [1 files][910.3 KiB/910.3 KiB] Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.bim...; / [1 files][910.3 KiB/369.7 MiB] - - [1 files][ 51.9 MiB/369.7 MiB] \ | | [1 files][107.6 MiB/369.7 MiB] / - - [1 files][162.3 MiB/369.7 MiB] \ \ [1 files][213.9 MiB/369.7 MiB] | / / [1 files][286.6 MiB/369.7 MiB] - \ \ [1 files][342.1 MiB/369.7 MiB] |; Operation completed over 2 objects/369.7 MiB.; | [2 files][369.7 MiB/369.7 MiB] 2024/01/17 20:59:27 Localization script execution complete.; 2024/01/17 20:59:38 Done localization.; 2024/01/17 20:59:39 Running user action: docker run -v /mnt/local-disk:/cromwell_root --entrypoint=/bin/bash hailgenetics/hail@sha256:3f22576793ce3161893aed2bd40949b1fc822d2b7e6517dc0ac993b62badaff8 /cromwell_root/script; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp.81879b1c; P",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:9918,sandbox,sandbox,9918,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['sandbox'],['sandbox']
Testability,"sues/1765"">#1765</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/3b8d137a113376d7dac9010b9207d435df2622f7""><code>3b8d137</code></a> docs: annotate all Option factory methods with their Nullability bounds (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1775"">#1775</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/ba49f9d903d1c68f2a67ea56489fc64907d7d31d""><code>ba49f9d</code></a> test(deps): update kms.version to v0.100.0 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1774"">#1774</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/8c59c64ccf0dd7753467b4c0f0bcf5f4b49c5bf0""><code>8c59c64</code></a> fix: update GrpcStorageImpl#get(BlobId) to return null on 404 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1772"">#1772</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/2770a38409e89f4f291ebf9ef23db0def0458b02""><code>2770a38</code></a> test(deps): update dependency org.mockito:mockito-core to v4.9.0 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1773"">#1773</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/45b2b38c3850da1795a7fbd33e0560b949cb7810""><code>45b2b38</code></a> chore: use gcp-docuploader 0.6.3 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1708"">#1708</a>) (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1769"">#1769</a>)</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/e0efa85c3cc7a0a092ab96a13f121b2d0e553c38""><code>e0efa85</code></a> test(deps): update dependency com.google.cloud:google-cloud-pubsub to v1.120....</li>; <li><a href=""https://github.com/googleapis/java-storage/commit/feb9f06d7031915ce50a609f99a4d885e2b21f34""><code>feb9f06</code></a> test(deps): update dependency com.google.api.grpc:proto-google-cloud-pubsub-v...</li>; <",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12529:12314,test,test,12314,https://hail.is,https://github.com/hail-is/hail/pull/12529,1,['test'],['test']
Testability,"sues/6"">#6</a>...</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/19e6531068cf95d602054ff8638adcb79971d552""><code>19e6531</code></a> Fix crash on unbalanced tuple unpacking</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/2066cab9bbe43341b84014ac9610e275db586431""><code>2066cab</code></a> Bump pylint to 2.13.2, update changelog</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/6a25d7048edadc18a05e999021049ade86ef2bd9""><code>6a25d70</code></a> Better error message when we cant write the crash files (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5987"">#5987</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/c42fe73a1613bbfb52a5ba9129efa45a3fd76401""><code>c42fe73</code></a> Fix false negative for <code>protected-access</code> on functions (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5990"">#5990</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/dec241b1787e6c99a092bb9ef6a993abf51fea91""><code>dec241b</code></a> Add regression test for <a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5982"">#5982</a> upgrade astroid to 2.11.2 (<a href=""https://github-redirect.dependabot.com/PyCQA/pylint/issues/5988"">#5988</a>)</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/b25859c4a56ccce61087f7a1270f40deaed68169""><code>b25859c</code></a> Fix false positive for <code>superfluous-parens</code> for <code>return (a or b) in iterable</code>...</li>; <li><a href=""https://github.com/PyCQA/pylint/commit/0e1ca11ac65cbe5a65437518fca1e25f1ad0e48e""><code>0e1ca11</code></a> Bump pylint to 2.13.1, update changelog</li>; <li>Additional commits viewable in <a href=""https://github.com/PyCQA/pylint/compare/v2.12.2...v2.13.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pylint&package-manager=pip&previous-version=2.12.2&new-version=2.13.3)](https://docs.github.c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11702:3984,test,test,3984,https://hail.is,https://github.com/hail-is/hail/pull/11702,1,['test'],['test']
Testability,support larger class of tests in linear,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/133:24,test,tests,24,https://hail.is,https://github.com/hail-is/hail/issues/133,1,['test'],['tests']
Testability,switched up module test setup,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3090:19,test,test,19,https://hail.is,https://github.com/hail-is/hail/pull/3090,1,['test'],['test']
Testability,"synchronous wrapper around; `hailtop.aiotools.fs.AsyncRouterFS`. A ""router"" file system is one which operates on URLs instead of; paths. It uses the URL's protocol to determine which concrete file system to use. For example, a; router fs can `open` both `gs://danking/abc` and `s3a://danking/abc`. Each Hail Query Python Backend is associated with one file system class. This PR associates the; ServiceBackend with `RouterFS`, enabling `hl.current_backend().fs.open`, `hl.hadoop_open`, etc. to; read from S3, GCS, ABS, and the local file system. We should deprecate `hail.utils.hadoop_utils`; because it is not Hadoop-specific. We should instead advertise the class-based `hail.fs` or create a; new function-based interface (e.g. `hl.fs.open(...)`. # Test Clean-up. The Hail Query local and spark tests should now work in Azure. I moved all the `hail.fs` and; `hailtop.aiotools.fs` tests into two build.yaml steps: `test_hail_python_fs` and; `test_hail_scala_fs`. These tests are exhaustive: they test every file system: S3, ABS, and GCS. The only file system tests that remain in the Hail Query tests are the tests of; `hail.utils.hadoop_utils`. The hadoop tests are not exhaustive: they only test the *current* file; system. In Azure, they test ABS. In Google, they test GCS. I have not decided yet if we should enable the hail python tests in Azure. It seems mostly wasteful. # Local Cache. I added a local cache directory. It defaults to `$XDG_CONFIG_HOME/hail/cache` or; `~/.config/hail/cache` if `XDG_CONFIG_HOME` is not set. I store Python reference genome metadata; here. # Batch Attributes. The ServiceBackend `batch_attributes` attribute specifies the attributes for any batch created by; the ServiceBackend. I modified the tests so that the test function name is use the ""name"" of the; batch. When a Hail Query driver job executes `parallelizeAndComputeWithIndex`, it uses its name with; a unique suffix as the name of the batch of worker jobs. # Changes to Hail Scala. I think the only cha",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11194:5819,test,tests,5819,https://hail.is,https://github.com/hail-is/hail/pull/11194,2,['test'],"['test', 'tests']"
Testability,t * from aggregated_billing_project_user_resources_v3 where resource_id = 6 limit 100;; +----------------------------------+------+-------------+-------+------------+; | billing_project | user | resource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4094463424 |; +----------------------------------+------+-------------+-------+------------+; 4 rows in set (0.00 sec). mysql> select * from aggregated_billing_project_user_resources_v3 where resource_id = 6 limit 100;; +----------------------------------+------+-------------+-------+------------+; | billing_project | user | resource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4094463424 |; | test | test | 6 | 15 | 54592 |; | test | test | 6 | 35 | 53568 |; | test | test | 6 | 78 | 39104 |; | test | test | 6 | 135 | 35712 |; | test | test | 6 | 164 | 54080 |; +----------------------------------+------+-------------+-------+------------+; 9 rows in set (0.00 sec). mysql> select * from aggregated_billing_project_user_resources_v3 where resource_id = 6 limit 100;; +----------------------------------+------+-------------+-------+------------+; | billing_project | user | resource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4094463424 |; | test | test | 6 | 10 | 49984 |; | test | test | 6 | 15 | 54592 |; | test | test | ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:5193,test,test,5193,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,14,['test'],['test']
Testability,"t = meta_ht.repartition(1000); - meta_ht = meta_ht.checkpoint(; - re.sub("".tsv(.b?gz)?"", """", args.sample_metadata_tsv) + "".ht"", overwrite=True, _read_if_exists=True); -; + hl.init(log=""/tmp/select_samples"", default_reference=""GRCh38"", idempotent=True, tmp_dir=args.temp_bucket); vds = gnomad_v4_genotypes.vds(); ; # see https://github.com/broadinstitute/ukbb_qc/pull/227/files; @@ -55,19 +48,8 @@ def main(args):; ; v4_qc_meta_ht = meta.ht(); ; - mt = vds.variant_data; - #mt = vds.variant_data._filter_partitions([41229]); -; - mt = mt.filter_cols(v4_qc_meta_ht[mt.s].release); -; - meta_join = meta_ht[mt.s]; - mt = mt.annotate_cols(; - meta=hl.struct(; - sex_karyotype=meta_join.sex_karyotype,; - cram=meta_join.cram_path,; - crai=meta_join.crai_path,; - ); - ); + #mt = vds.variant_data; + mt = vds.variant_data._filter_partitions([41229]); ; logger.info(""Adjusting samples' sex ploidy""); lgt_expr = hl.if_else(; @@ -88,9 +70,9 @@ def main(args):; logger.info(""Filter variants with at least one non-ref GT""); mt = mt.filter_rows(hl.agg.any(mt.GT.is_non_ref())); ; - #logger.info(f""Saving checkpoint""); - #mt = mt.checkpoint(os.path.join(args.temp_bucket, ""readviz_select_samples_checkpoint1.vds""),; - # overwrite=True, _read_if_exists=True); + logger.info(f""Saving checkpoint""); + mt = mt.checkpoint(""readviz_select_samples_checkpoint1.vds"",; + overwrite=True, _read_if_exists=True); ; def sample_ordering_expr(mt):; """"""For variants that are present in more than 10 samples (or whatever number args.num_samples is set to),; ```. And tried running the bad step:. ```bash; python3 step1__select_samples.py; ```. I was able to get past the checkpoint: ; ```; INFO (Readviz_prep 73): Saving checkpoint; [Stage 0:> (0 + 1) / 1]. 2023-09-01 18:10:29.262 Hail: INFO: wrote matrix table with 11450 rows and 955359 columns in 1 partition to readviz_select_samples_checkpoint1.vds; ```. @bw2 are you still encountering this issue? Did my diff oversimplify it? Do you suspect the issue after the checkpoint?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13248#issuecomment-1703383664:2089,log,logger,2089,https://hail.is,https://github.com/hail-is/hail/issues/13248#issuecomment-1703383664,2,['log'],['logger']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0MmRjMDIwMC02MDI1LTQ1M2QtYWUxNC00NDRlZjM5MmU4NTciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQyZGMwMjAwLTYwMjUtNDUzZC1hZTE0LTQ0NGVmMzkyZTg1NyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""42dc0200-6025-453d-ae14-444ef392e857"",""prPublicId"":""42dc0200-6025-453d-ae14-444ef392e857"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13854:2660,log,logic,2660,https://hail.is,https://github.com/hail-is/hail/pull/13854,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3OWQ3MTdiYy05MThjLTRlMjctOGQ2OC0xNTNhNWIxZGFmM2YiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijc5ZDcxN2JjLTkxOGMtNGUyNy04ZDY4LTE1M2E1YjFkYWYzZiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""79d717bc-918c-4e27-8d68-153a5b1daf3f"",""prPublicId"":""79d717bc-918c-4e27-8d68-153a5b1daf3f"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13850:2658,log,logic,2658,https://hail.is,https://github.com/hail-is/hail/pull/13850,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4MmZhNTRjZC0yOGI4LTQ3OTUtYWFjNy02MDE0NjY3NjMwNTUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjgyZmE1NGNkLTI4YjgtNDc5NS1hYWM3LTYwMTQ2Njc2MzA1NSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""82fa54cd-28b8-4795-aac7-601466763055"",""prPublicId"":""82fa54cd-28b8-4795-aac7-601466763055"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13771:2576,log,logic,2576,https://hail.is,https://github.com/hail-is/hail/pull/13771,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxNGQyZDIxMi00ZjI4LTQ0OGEtYWRkNS02NThkNDEwNzQxZDYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE0ZDJkMjEyLTRmMjgtNDQ4YS1hZGQ1LTY1OGQ0MTA3NDFkNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""14d2d212-4f28-448a-add5-658d410741d6"",""prPublicId"":""14d2d212-4f28-448a-add5-658d410741d6"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13847:2576,log,logic,2576,https://hail.is,https://github.com/hail-is/hail/pull/13847,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxOGU4YzI4Yi1kYWQ0LTQ5ZDUtOTExNi04NjFkYTdkODk5OTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE4ZThjMjhiLWRhZDQtNDlkNS05MTE2LTg2MWRhN2Q4OTk5NiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""18e8c28b-dad4-49d5-9116-861da7d89996"",""prPublicId"":""18e8c28b-dad4-49d5-9116-861da7d89996"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13773:2660,log,logic,2660,https://hail.is,https://github.com/hail-is/hail/pull/13773,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiNzM0YmY4Ni1mNzQyLTQyMjMtOWVlYS1lNGU3ZjNmMTVlYWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI3MzRiZjg2LWY3NDItNDIyMy05ZWVhLWU0ZTdmM2YxNWVhYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b734bf86-f742-4223-9eea-e4e7f3f15eac"",""prPublicId"":""b734bf86-f742-4223-9eea-e4e7f3f15eac"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13772:2590,log,logic,2590,https://hail.is,https://github.com/hail-is/hail/pull/13772,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiODhmOTA3Ny02ZjlmLTRiZjEtYjFiYy0yZjNkNTE1MDEwYWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI4OGY5MDc3LTZmOWYtNGJmMS1iMWJjLTJmM2Q1MTUwMTBhYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b88f9077-6f9f-4bf1-b1bc-2f3d515010aa"",""prPublicId"":""b88f9077-6f9f-4bf1-b1bc-2f3d515010aa"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13783:2652,log,logic,2652,https://hail.is,https://github.com/hail-is/hail/pull/13783,1,['log'],['logic']
Testability,"t all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmNDI4YzVjNi05NmZmLTQ1ZTMtYjY4ZC0zYzU5NjY3MjA3MGUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImY0MjhjNWM2LTk2ZmYtNDVlMy1iNjhkLTNjNTk2NjcyMDcwZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""f428c5c6-96ff-45e3-b68d-3c596672070e"",""prPublicId"":""f428c5c6-96ff-45e3-b68d-3c596672070e"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13851:2652,log,logic,2652,https://hail.is,https://github.com/hail-is/hail/pull/13851,1,['log'],['logic']
Testability,"t array *must* be the JAR URL and the SHA-1 is confusing. Instead, there are now two keys in a JVM process specification:; 1. `jar_spec`, which may be either `{""type"": ""jar_url"", ""value"": ""gs://..../abc123....jar""}` or `{""type"":""git_revision"", ""value"": ""abc123...""}`.; 2. `argv`, an opaque list of strings which are passed, by the JVMEntryway, along with a few more args, to `is.hail.backend.service.Main`. The `Main` class dispatches to either `ServiceBackendSocketAPI2` or the `Worker` based on the first element of `argv`. Each class expects different contents in `argv` that suits its needs. Second, I completely eliminated the HAIL_SHA/revision from the Worker and Hail Query Java code. This was only ever used as unique name for the JAR. Instead, I just use the full JAR URL as a unique name for the JAR. If you need to defeat the cache, just create a new git commit before running `make -C query ipython`. If defeating the cache becomes a common problem, we can add a ""reload_jar"" parameter or similar to the job spec. Third, I renamed `push-jar` in `query/Makefile` to `upload-query-jar` to mirror the build.yaml step. Fourth, I embraced the use of `NAMEPSACE` in `query/Makefile` instead of relying on the minor hack that our laptop usernames match our namespace names. This does mean you need to always specify NAMESPACE when uploading a jar. Finally, a pleasant outcome of this change is the elimination of a bunch of conditional build.yaml logic in the service backend tests!. I think this will simplify the use of Hail Query by Australia et al. because I've isolated the use of hail-specific data to `query/Makefile`. If there's a way to access the relevant global-config variables from `query/Makefile`, I can also fix the `query/Makefile` to be deployment-independent. cc: @lgruen @illusional @tpoterba . [1] For our default namespace deployment, `gs://hail-query/jars/{GIT_REVISION}.jar`. In general, `{HAIL_QUERY_STORAGE_URI}{HAIL_QUERY_ACCEPTABLE_JAR_SUBFOLDER}/{GIT_REVISION}.jar`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11645:2887,log,logic,2887,https://hail.is,https://github.com/hail-is/hail/pull/11645,2,"['log', 'test']","['logic', 'tests']"
Testability,"t dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzNTM4YWIwOC03Yzk4LTRjMDUtOTQ0Ny0yMjYwYjliNjhmY2IiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjM1MzhhYjA4LTdjOTgtNGMwNS05NDQ3LTIyNjBiOWI2OGZjYiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""3538ab08-7c98-4c05-9447-2260b9b68fcb"",""prPublicId"":""3538ab08-7c98-4c05-9447-2260b9b68fcb"",""dependencies"":[{""name"":""pillow"",""from"":""9.5.0"",""to"":""10.0.1""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-PILLOW-5918878""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown""],""priorityScoreList"":[null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13708:2528,log,logic,2528,https://hail.is,https://github.com/hail-is/hail/pull/13708,1,['log'],['logic']
Testability,"t even attempt to fit.; - `max_iter == 1` means take one gradient step, if you've converged, then return successfully, otherwise fail.; - etc. The `main` branch currently always fails if you set `max_iter == 1`, even if the first step lands on the true maximum likelihood fit. I substantially refactored logistic regression. There were dead code paths (e.g. the covariates array is known to be non-empty). I also found all the function currying and comingling of fitting and testing really confusing. To be fair, the Scala code does this (and its really confusing). I think the current structure is easier to follow:. 1. Fit the null model.; 2. If wald, assume the beta for the genotypes is zero and use the rest of the parameters from the null model fit to compute the score (i.e. the gradient of the likelihood). Recall calculus: gradient near zero => value near the maximum. Return: this is the test.; 3. Otherwise, fit the full model starting at the null fit parameters.; 4. Test the ""goodness"" of this new & full fit. ---. Poisson regression is similar but with a different likelihood function and gradient thereof. Notice that I `key_cols_by()` to indicate to Hail that the order of the cols is irrelevant (the result is a locus-keyed table after all). This is necessary at least until #12753 merges. I think it's generally a good idea though: it indicates to Hail that the ordering of the columns is irrelevant, which is potentially useful information for the optimizer!. ---. Both logistic and Poisson regression can benefit from BLAS3 by running at least the score test for multiple variants at once. ---. I'll attach an image in the comments, but I spend ~6 seconds compiling this trivial model and ~140ms testing it. ```python3; import hail as hl; mt = hl.utils.range_matrix_table(1, 3); mt = mt.annotate_entries(x=hl.literal([1, 3, 10, 5])); ht = hl.poisson_regression_rows(; 'wald', y=hl.literal([0, 1, 1, 0])[mt.col_idx], x=mt.x[mt.col_idx], covariates=[1], max_iterations=2); ht.collec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12793:1415,Test,Test,1415,https://hail.is,https://github.com/hail-is/hail/pull/12793,1,['Test'],['Test']
Testability,"t is resolved.</p>; <h2>pytest-asyncio 0.23.5a0</h2>; <h1>0.23.5 (UNRELEASED)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; <li>Declares incompatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; </ul>; <h2>pytest-asyncio 0.23.4a2</h2>; <h1>0.23.4 (UNRELEASED)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test col",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:4956,test,test,4956,https://hail.is,https://github.com/hail-is/hail/pull/14507,2,['test'],"['test', 'tests']"
Testability,"t is.hail.methods.MendelErrors.nErrorPerNuclearFamily(MendelErrors.scala:144); 	at is.hail.methods.MendelErrors.fMendelKT(MendelErrors.scala:183); 	at is.hail.variant.MatrixTable.mendelErrors(MatrixTable.scala:1915); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748). Hail version: devel-42db165; Error summary: AssertionError: assertion failed; ```; Pipeline (happens on the 2nd mendel_errrors):; ```; vds = vds.select_rows(vds.locus, vds.alleles); fam_kt = hl.import_fam(fam_file); vds = vds.annotate_cols(fam=fam_kt[vds.s]). # Unphased for now, since mendel_errors does not support phased alleles; vds = vds.annotate_entries(GT=hl.call(vds.GT[0], vds.GT[1], phased=False)); ped = hl.Pedigree.read(fam_file); tdt_table = hl.tdt(vds, ped); _, _, per_sample, per_variant = hl.mendel_errors(vds, ped); family_stats = Struct(mendel=per_variant[(vds.locus, vds.alleles)],; tdt=tdt_table[(vds.locus, vds.alleles)],; ac_unrelated_qc=hl.agg.sum(hl.agg.filter(; True & hl.is_missing(vds.fam.pat_id),; vds.GT.num_alt_alleles())),; meta={'group': 'raw'}); vds = vds.annotate_rows(family_stats=[family_stats]). vds = filter_to_adj(vds); adj_tdt_table = hl.tdt(vds, ped); _, _, adj_per_sample, adj_per_variant = hl.mendel_errors(vds, ped); family_stats_adj = Struct(mendel=adj_per_variant[(vds.locus, vds.alleles)],; tdt=adj_tdt_table[(vds.locus, vds.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3039:11636,Assert,AssertionError,11636,https://hail.is,https://github.com/hail-is/hail/issues/3039,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"t one pre-existing blank line (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2736"">#2736</a>)</li>; <li>Black now normalizes string prefix order (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2297"">#2297</a>)</li>; <li>Remove spaces around power operators if both operands are simple (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2726"">#2726</a>)</li>; <li>Work around bug that causes unstable formatting in some cases in the presence of the; magic trailing comma (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2807"">#2807</a>)</li>; <li>Use parentheses for attribute access on decimal float and int literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Don't add whitespace for attribute access on hexadecimal, binary, octal, and complex; literals (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2799"">#2799</a>)</li>; <li>Treat blank lines in stubs the same inside top-level <code>if</code> statements (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2820"">#2820</a>)</li>; <li>Fix unstable formatting with semicolons and arithmetic expressions (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2817"">#2817</a>)</li>; <li>Fix unstable formatting around magic trailing comma (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2572"">#2572</a>)</li>; </ul>; <h3>Parser</h3>; <ul>; <li>Fix mapping cases that contain as-expressions, like <code>case {&quot;key&quot;: 1 | 2 as password}</code>; (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2686"">#2686</a>)</li>; <li>Fix cases that contain multiple top-level as-expressions, like <code>case 1 as a, 2 as b</code>; (<a href=""https://github-redirect.dependabot.com/psf/black/issues/2716"">#2716</a>)</li>; <li>Fix call patterns that contain as-expressions with keyword arguments, like; <code>case Foo(bar=baz as quux)</code> (<a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11468:9096,stub,stubs,9096,https://hail.is,https://github.com/hail-is/hail/pull/11468,1,['stub'],['stubs']
Testability,t org.apache.spark.SparkContext.clean(SparkContext.scala:1622); at org.apache.spark.rdd.RDD.map(RDD.scala:286); at org.broadinstitute.hail.methods.MendelErrors.writeMendel(MendelErrors.scala:143); at org.broadinstitute.hail.methods.MendelErrorsSuite.test(MendelErrorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(Delegating,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1689,Test,TestMethodWorker,1689,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['Test'],['TestMethodWorker']
Testability,t org.broadinstitute.hail.methods.MendelErrorsSuite.test(MendelErrorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144); Caused by: java.lang.reflect.InvocationTarg,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1890,test,testng,1890,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['test'],['testng']
Testability,"t will identify the correct version of mill to use for the project you're in and invoke that. For more details on the installation options, see the github for the wrapper script [here](https://github.com/lefou/millw). To verify that it's working, and download the actual mill jar, run `./millw --version` (or `mill --version` if you put it on your path) from the `hail/` subdirectory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill _",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1218,test,test,1218,https://hail.is,https://github.com/hail-is/hail/pull/14147,4,['test'],['test']
Testability,t | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2623,test,test,2623,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2657,test,test,2657,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2898,test,test,2898,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2932,test,test,2932,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3001,test,test,3001,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3036,test,test,3036,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 44928 |; | test | test | 6 | 112 | 37696 |;,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3105,test,test,3105,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 44928 |; | test | test | 6 | 112 | 37696 |; +---------------------------------,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3140,test,test,3140,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13 | test | test | 6 | 136 | 51840 |; | 2023-07-13 | test | test | 6 | 137 | 68224 |; +-----------,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11461,test,test,11461,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13 | test | test | 6 | 136 | 51840 |; | 2023-07-13 | test | test | 6 | 137 | 68224 |; +--------------+----------------------------------+------+--,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11509,test,test,11509,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13 | test | test | 6 | 136 | 51840 |; | 2023-07-13 | test | test | 6 | 137 | 68224 |; +--------------+----------------------------------+------+-------------+-------+------------+; 100 rows in s,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11557,test,test,11557,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 44928 |; | test | test | 6 | 112 | 37696 |; +----------------------------------+------+-------------+-------+------------+; 100 rows in set (0.00 sec). mysql> select * from aggregated_billing_project_user_resources_v3 where resource_id = 6 limit 100;; +----------------------------------+------+-------------+-------+------------+; | billing_project | user | resource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4094463424 |; +----------------------------------+------+-------------+-------+------------+; 4 rows in set (0.00 sec). mysql> select * from aggregated_billing_project_user_resources_v3 where resource_id = 6 limit 100;; +----------------------------------+------+-------------+-------+------------+; | billing_project | user | resource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4094463424 |; | test | test | 6 | 15 | 54592 |; | test | test | 6 | 35 | 53568 |; | test | test | 6 | 78 | 39104 |; | test | test | 6 | 135 | 35712 |; | test | test | 6 | 164 | 54080 |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:4572,test,test,4572,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,4,['test'],['test']
Testability,t | test | 6 | 0 | 4063028160 |; | test | test | 6 | 1 | 189760 |; | test | test | 6 | 3 | 607168 |; | test | test | 6 | 4 | 749952 |; | test | test | 6 | 5 | 46912 |; | test | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1758,test,test,1758,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9278,test,test,9278,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9609,test,test,9609,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2616,test,test,2616,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9893,test,test,9893,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2650,test,test,2650,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9940,test,test,9940,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10176,test,test,10176,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2891,test,test,2891,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 1148,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2925,test,test,2925,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2994,test,test,2994,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3029,test,test,3029,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 44928 |; | test | test | 6 | 112 | 3,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3098,test,test,3098,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test | test | 6 | 105 | 399872 |; | test | test | 6 | 106 | 617600 |; | test | test | 6 | 107 | 114880 |; | test | test | 6 | 108 | 47616 |; | test | test | 6 | 109 | 98304 |; | test | test | 6 | 110 | 73472 |; | test | test | 6 | 111 | 44928 |; | test | test | 6 | 112 | 37696 |; +--------------------------,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:3133,test,test,3133,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10556,test,test,10556,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10603,test,test,10603,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10651,test,test,10651,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1931,test,test,1931,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13 | test | test | 6 | 136 | 51840 |; | 2023-07-13 | test | test | 6 | 137 | 68224 |; +----,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11454,test,test,11454,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13 | test | test | 6 | 136 | 51840 |; | 2023-07-13 | test | test | 6 | 137 | 68224 |; +--------------+----------------------------------+--,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11502,test,test,11502,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,t | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13 | test | test | 6 | 136 | 51840 |; | 2023-07-13 | test | test | 6 | 137 | 68224 |; +--------------+----------------------------------+------+-------------+-------+------------+; 100 ro,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11550,test,test,11550,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,"t(mt.count()); print(""running pc_relate""); pc_rel = hl.pc_relate(mt.GT, 0.01, k=10, statistics='kin',min_kinship=0.0883); pairs = pc_rel.filter(pc_rel['kin'] >= 0.0883); print(""finding Max ind set""); related_samples_to_remove = hl.maximal_independent_set(pairs.i, pairs.j,keep=False); print(""writing related samples to remove""); related_samples_to_remove.export(""file:////restricted/projectnb/adgc/topmed.r2.analysis/pc_relate/related_samples_""+pop+"".tsv""); result = mt.filter_cols(; hl.is_defined(related_samples_to_remove[mt.col_key]), keep=False); print(""final unrelated count""); print(result.count); eigenvalues, scores, loadings = hl.hwe_normalized_pca(result.GT, k=10); scores.export('file:////restricted/projectnb/adgc/topmed.r2.analysis/pc_relate/unrelated_pcs_'+pop+'.tsv'). ```. ```; Running on Apache Spark version 2.4.3; SparkUI available at http://scc-hadoop.bu.edu:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.46-6ef64c08b000; LOGGING: writing to logs/adgc_pc_relate.autosome_all.log; 2020-08-20 10:14:00 Hail: INFO: Reading table to impute column types; [Stage 0:===========================================================(1 + 0) / 1]2020-08-20 10:14:07 Hail: INFO: Loading 76 fields. Counts by type:; 66 fields: user-specified int32; 6 fields: user-specified str; 3 fields: user-specified float64; 1 field: imputed int32; (63110, 64048); running omit filter; [Stage 1:> (0 + 1) / 1](63110, 52877); running pc_relate; [Stage 3:==================================================>(12794 + 2) / 12796]2020-08-20 10:14:38 Hail: INFO: hwe_normalized_pca: running PCA using 63110 variants.; [Stage 5:==================================================>(12795 + 1) / 12796]2020-08-20 10:14:59 Hail: INFO: pca: running PCA with 10 components...; [Stage 102:================================================>(12795 + 1) / 12796]Traceback (most recent call last):; File ""/restricted/projectnb/adgc/topmed.r2.analysis/pc_relate_pop2.py"", line 128, in ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9293#issuecomment-677718403:4251,LOG,LOGGING,4251,https://hail.is,https://github.com/hail-is/hail/issues/9293#issuecomment-677718403,2,"['LOG', 'log']","['LOGGING', 'logs']"
Testability,"t, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, gcs_requester_pays_configuration); 425 app_name = app_name or 'Hail'; 426 gcs_requester_pays_project, gcs_requester_pays_buckets = convert_gcs_requester_pays_configuration_to_hadoop_conf_style(gcs_requester_pays_configuration); --> 427 backend = SparkBackend(; 428 idempotent, sc, spark_conf, app_name, master, local, log,; 429 quiet, append, min_block_size, branching_factor, tmpdir, local_tmpdir,. TypeError: SparkBackend__init__() got an unexpected keyword argument 'gcs_requester_pays_project'`. - Hail was able to initialize by itself; `import hail as hl; print(hl.version()); hl.init()`; `0.2.112-31ceff2fb5fd; Running on Apache Spark version 3.3.2; SparkUI available at http://57ba6dc5f4a9:4040/; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.112-31ceff2fb5fd; LOGGING: writing to /content/hail-20230410-0617-0.2.112-31ceff2fb5fd.log`. ### Version. 0.2.112. ### Relevant log output. ```shell; using variant-spark jar at '/usr/local/lib/python3.9/dist-packages/varspark/jars/variant-spark_2.12-0.5.2-all.jar'; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-8-3d2ff0083f18> in <cell line: 3>(); 1 import hail as hl; 2 import varspark.hail as vshl; ----> 3 vshl.init(). 4 frames; <decorator-gen-1907> in init(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations, backend, driver_cores, driver_memory, worker_cores, worker_memory, gcs_requester_pays_configuration, regions). <decorator-gen-1909> in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent,",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12859:2464,LOG,LOGGING,2464,https://hail.is,https://github.com/hail-is/hail/issues/12859,1,['LOG'],['LOGGING']
Testability,"t-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.5a0</h2>; <h1>0.23.5 (UNRELEASED)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Address",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:4494,test,test,4494,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['test']
Testability,"t.</h3>. #### Changes included in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - hail/python/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **581/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.9 | Denial of Service (DoS) <br/>[SNYK-PYTHON-CRYPTOGRAPHY-5663682](https://snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-5663682) | `cryptography:` <br> `40.0.2 -> 41.0.0` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhYmU2OWI5ZC1kMzViLTQ1Y2ItYWY2NS04ZDEwN2YxZWMzZmMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFiZTY5YjlkLWQzNWItNDVjYi1hZjY1LThkMTA3ZjFlYzNmYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13139:1243,test,tested,1243,https://hail.is,https://github.com/hail-is/hail/pull/13139,1,['test'],['tested']
Testability,t.GenotypeStreamSuite.testGenotypeStream PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.SampleQCSuite.testStoreAfterFilter PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.vcf.SplitSuite.SplitTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testD_$eq$eq PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testFlushDouble PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testFilterSamples PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testSame PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.VariantSuite.testVariant PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.gqDpStatsSuite.test PASS,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:2116,test,test,2116,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,"t.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-logging/compare/v2.6.0...v2.7.0"">2.7.0</a> (2021-11-02)</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usag",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:10807,log,logging,10807,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"t.extend_style method.</li>; <li>Added Span.extend method.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Text.tab_size now defaults to <code>None</code> to indicate that Console.tab_size should be used.</li>; </ul>; <h2>[13.4.2] - 2023-06-12</h2>; <h3>Changed</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/Textualize/rich/commit/e9f75c9912ed25b9777bc0257853370951220b17""><code>e9f75c9</code></a> Merge branch 'py312'</li>; <li><a href=""https://github.com/Textualize/rich/commit/35b64f1237f1c64326329b4668b116809a7fc596""><code>35b64f1</code></a> Merge pull request <a href=""https://redirect.github.com/Textualize/rich/issues/3139"">#3139</a> from Textualize/py312</li>; <li><a href=""https://github.com/Textualize/rich/commit/c8ff546416b086c92d1ab9a1a0bb24447da12826""><code>c8ff546</code></a> version bump</li>; <li><a href=""https://github.com/Textualize/rich/commit/3f8c4af45133590590257de90fcbdc40834c0775""><code>3f8c4af</code></a> tests for 3.12</li>; <li><a href=""https://github.com/Textualize/rich/commit/ef90daf98f113dee532761d069baebf9b4de646e""><code>ef90daf</code></a> enable py312</li>; <li><a href=""https://github.com/Textualize/rich/commit/ec91917deb47b43188312e0e3f03bbab7e4e2e7e""><code>ec91917</code></a> changelog</li>; <li><a href=""https://github.com/Textualize/rich/commit/5360fe6fe4f582e5a5bec591cf7433ed85e6863d""><code>5360fe6</code></a> version bump</li>; <li><a href=""https://github.com/Textualize/rich/commit/e0d3aee1eccd424c98d05b94910f9d5ddb821a40""><code>e0d3aee</code></a> Merge pull request <a href=""https://redirect.github.com/Textualize/rich/issues/3132"">#3132</a> from Textualize/fix-markdown-on-light</li>; <li><a href=""https://github.com/Textualize/rich/commit/db07a2aad2c18a1a4ab2345bb2d5adbd2f9c0eaa""><code>db07a2a</code></a> Restore text</li>; <li><a href=""https://github.com/Textualize/rich/commit/44e36aaf6f8c5b4aba4d66bcf895b25c3b5fa32e""><code>44e36aa</code",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13758:5700,test,tests,5700,https://hail.is,https://github.com/hail-is/hail/pull/13758,2,['test'],['tests']
Testability,"t.primitives.serialization.load_pem_private_key</code>,; :func:<code>~cryptography.hazmat.primitives.serialization.load_der_private_key</code>,; and; :meth:<code>~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateNumbers.private_key</code>.; This speeds up key loading but is :term:<code>unsafe</code> if you are loading potentially; attacker supplied keys.</li>; <li>Significantly improved performance for; :class:<code>~cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305</code></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pyca/cryptography/commit/d6951dca25de45abd52da51b608055371fbcde4e""><code>d6951dc</code></a> changelog + security fix backport (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8231"">#8231</a>)</li>; <li><a href=""https://github.com/pyca/cryptography/commit/138da90c8450446b19619e3faa77b9da54c34be3""><code>138da90</code></a> workaround scapy bug in downstream tests (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8218"">#8218</a>) (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8228"">#8228</a>)</li>; <li><a href=""https://github.com/pyca/cryptography/commit/69527bc79095c9646d7e839121f0783477892ecc""><code>69527bc</code></a> bookworm is py311 now (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8200"">#8200</a>)</li>; <li><a href=""https://github.com/pyca/cryptography/commit/111deefb659b8d73c56d3ce89458f2df973d60e4""><code>111deef</code></a> backport main branch CI to 39.0.x (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/8153"">#8153</a>)</li>; <li><a href=""https://github.com/pyca/cryptography/commit/338a65a7df74e189f6b5d1d3a6315ffa911b21c2""><code>338a65a</code></a> 39.0.0 version bump (<a href=""https://github-redirect.dependabot.com/pyca/cryptography/issues/7954"">#7954</a>)</li>; <li><a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12668:3766,test,tests,3766,https://hail.is,https://github.com/hail-is/hail/pull/12668,4,['test'],['tests']
Testability,"t/.pixi/envs/default/lib/python3.12/site-packages/hail/fs/hadoop_fs.py"", line 8, in <module>; from hailtop.fs.fs import FS; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/__init__.py"", line 1, in <module>; from .fs_utils import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/fs_utils.py"", line 4, in <module>; from hailtop.aiocloud.aiogoogle import GCSRequesterPaysConfiguration; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/__init__.py"", line 1, in <module>; from .client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/__init__.py"", line 8, in <module>; from .storage_client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/storage_client.py"", line 14, in <module>; from hailtop.aiotools import FeedableAsyncIterable, WriteBuffer; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/__init__.py"", line 1, in <module>; from .fs import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/__init__.py"", line 1, in <module>; from .copier import Copier, CopyReport, SourceCopier, SourceReport, Transfer, TransferReport; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/copier.py"", line 7, in <module>; import humanize; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/humanize/__init__.py"", line 1, in <module>; import pkg_resources; ModuleNotFoundError: No module named 'pkg_resources'. ```. I think this is largely because hail requires an ancient version of humanize (v1 vs v4). In any case, the wheel on PyPI is broken and un-importable. . There are other issues stemming from the underlying issue that there is no clear description of requirements and dependenc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14630:1820,test,test,1820,https://hail.is,https://github.com/hail-is/hail/issues/14630,1,['test'],['test']
Testability,"t/5cf810870073693f7ec2e1f2efe030567c973fb4""><code>5cf8108</code></a> [SPARK-37959][ML] Fix the UT of checking norm in KMeans &amp; BiKMeans</li>; <li><a href=""https://github.com/apache/spark/commit/75ea6457471cf3df55e7641c4dc6ba66b03e733b""><code>75ea645</code></a> Preparing development version 3.2.2-SNAPSHOT</li>; <li><a href=""https://github.com/apache/spark/commit/ea8ce995b7651bda7ef8c2e89c39b92f17e55402""><code>ea8ce99</code></a> Preparing Spark release v3.2.1-rc2</li>; <li><a href=""https://github.com/apache/spark/commit/66e1231621fc0721a8b1a5e77a8ff84b8e665ea8""><code>66e1231</code></a> [SPARK-37859][SQL] Do not check for metadata during schema comparison</li>; <li><a href=""https://github.com/apache/spark/commit/a58b8a864bb03bcdfe69b157bc7aec39b68556fa""><code>a58b8a8</code></a> [SPARK-37855][SQL][3.2] IllegalStateException when transforming an array insi...</li>; <li><a href=""https://github.com/apache/spark/commit/31dfbdeb1b076f521bc3fa4fd9b97e425c20da31""><code>31dfbde</code></a> [SPARK-37871][TESTS] Use <code>python3</code> instead of <code>python</code> in BaseScriptTransform...</li>; <li><a href=""https://github.com/apache/spark/commit/deb6776b705423141abe92715c3d93b23f082503""><code>deb6776</code></a> [SPARK-37866][TESTS] Set <code>file.encoding</code> to UTF-8 for SBT tests</li>; <li><a href=""https://github.com/apache/spark/commit/db1023c728c5e0bdcd4ef457cf5f7ba4f13cb79d""><code>db1023c</code></a> [SPARK-37860][UI] Fix taskindex in the stage page task event timeline</li>; <li>Additional commits viewable in <a href=""https://github.com/apache/spark/compare/v3.1.1...v3.2.1"">compare view</a></li>; </ul>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11547:1569,TEST,TESTS,1569,https://hail.is,https://github.com/hail-is/hail/pull/11547,1,['TEST'],['TESTS']
Testability,"t/75ea6457471cf3df55e7641c4dc6ba66b03e733b""><code>75ea645</code></a> Preparing development version 3.2.2-SNAPSHOT</li>; <li><a href=""https://github.com/apache/spark/commit/ea8ce995b7651bda7ef8c2e89c39b92f17e55402""><code>ea8ce99</code></a> Preparing Spark release v3.2.1-rc2</li>; <li><a href=""https://github.com/apache/spark/commit/66e1231621fc0721a8b1a5e77a8ff84b8e665ea8""><code>66e1231</code></a> [SPARK-37859][SQL] Do not check for metadata during schema comparison</li>; <li><a href=""https://github.com/apache/spark/commit/a58b8a864bb03bcdfe69b157bc7aec39b68556fa""><code>a58b8a8</code></a> [SPARK-37855][SQL][3.2] IllegalStateException when transforming an array insi...</li>; <li><a href=""https://github.com/apache/spark/commit/31dfbdeb1b076f521bc3fa4fd9b97e425c20da31""><code>31dfbde</code></a> [SPARK-37871][TESTS] Use <code>python3</code> instead of <code>python</code> in BaseScriptTransform...</li>; <li><a href=""https://github.com/apache/spark/commit/deb6776b705423141abe92715c3d93b23f082503""><code>deb6776</code></a> [SPARK-37866][TESTS] Set <code>file.encoding</code> to UTF-8 for SBT tests</li>; <li><a href=""https://github.com/apache/spark/commit/db1023c728c5e0bdcd4ef457cf5f7ba4f13cb79d""><code>db1023c</code></a> [SPARK-37860][UI] Fix taskindex in the stage page task event timeline</li>; <li>Additional commits viewable in <a href=""https://github.com/apache/spark/compare/v3.1.1...v3.2.1"">compare view</a></li>; </ul>; </details>; <br />. Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11547:1797,TEST,TESTS,1797,https://hail.is,https://github.com/hail-is/hail/pull/11547,1,['TEST'],['TESTS']
Testability,"t/casa/bayestyper/vcf/adsp5k.cadre.chr*.norm.ann2.ruth.fix.vcf.gz""; mt=""/project/casa/bayestyper/mt/adsp5k.cadre.bayestyper.autosome.mt""; print(""Converting vcf ""+vcf+"" to mt ""+ mt); hl.import_vcf(vcf,force_bgz=True).write(mt); ```; -----------------------------------------------------------------------------; ```; $ submit ./vcf2mt_all.py; Loading modules; /share/pkg.7/gcc/8.3.0/install/lib64:/share/pkg.7/gcc/8.3.0/install/lib:/share/pkg.7/python3/3.7.7/install/lib:/usr/hdp/2.6.5.0-292/hadoop/lib/native/; Export env vars; Submitting Spark job; 20/08/17 23:24:46 WARN util.Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.; Running on Apache Spark version 2.4.3; SparkUI available at http://scc-hadoop.bu.edu:4041; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.46-6ef64c08b000; LOGGING: writing to /restricted/projectnb/casa/wgs.hg38/pipelines/bayestyper/merge/hail-20200817-2324-0.2.46-6ef64c08b000.log; Converting vcf /project/casa/bayestyper/vcf/adsp5k.cadre.chr*.norm.ann2.ruth.fix.vcf.gz to mt /project/casa/bayestyper/mt/adsp5k.cadre.bayestyper.autosome.mt; [Stage 1:==================================================>(30467 + 1) / 30468]2020-08-17 23:59:36 Hail: INFO: Coerced almost-sorted dataset; 2020-08-17 23:59:37 Hail: INFO: Coerced dataset with out-of-order partitions.; [Stage 2:================> (9622 + 90) / 30468]Traceback (most recent call last):; File ""/restricted/projectnb/casa/wgs.hg38/pipelines/bayestyper/merge/./vcf2mt_all.py"", line 10, in <module>; hl.import_vcf(vcf,force_bgz=True).write(mt); File ""<decorator-gen-1213>"", line 2, in write; File ""/share/pkg.7/hail/0.2.46/install/lib/python3.7/site-packages/hail/typecheck/check.py"", line 614, in wrapper; return __original_func(*args_, **kwargs_); File ""/share/pkg.7/hail/0.2.46/install/lib/python3.7/site-packages/hail/matrixtable.py"", line 2524, in write; Env.backend().execute(ir.MatrixWrite(self._mir, writer)); File ""/share/pkg.7/hail/0.2.46/i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9293:1366,log,log,1366,https://hail.is,https://github.com/hail-is/hail/issues/9293,1,['log'],['log']
Testability,"t/chardet) from 4.0.0 to 5.0.0.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/chardet/chardet/releases"">chardet's releases</a>.</em></p>; <blockquote>; <h2>chardet 5.0.0</h2>; <p>⚠️ This release is the first release of chardet that no longer supports Python &lt; 3.6 ⚠️</p>; <p>In addition to that change, it features the following user-facing changes:</p>; <ul>; <li>Added a prober for Johab Korean (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/207"">#207</a>, <a href=""https://github.com/grizlupo""><code>@​grizlupo</code></a>)</li>; <li>Added a prober for UTF-16/32 BE/LE (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/109"">#109</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/206"">#206</a>, <a href=""https://github.com/jpz""><code>@​jpz</code></a>)</li>; <li>Added test data for Croatian, Czech, Hungarian, Polish, Slovak, Slovene, Greek, and Turkish, which should help prevent future errors with those languages</li>; <li>Improved XML tag filtering, which should improve accuracy for XML files (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/208"">#208</a>)</li>; <li>Tweaked <code>SingleByteCharSetProber</code> confidence to match latest uchardet (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/209"">#209</a>)</li>; <li>Made <code>detect_all</code> return child prober confidences (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/210"">#210</a>)</li>; <li>Updated examples in docs (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/223"">#223</a>, <a href=""https://github.com/domdfcoding""><code>@​domdfcoding</code></a>)</li>; <li>Documentation fixes (<a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/212"">#212</a>, <a href=""https://github-redirect.dependabot.com/chardet/chardet/issues/224"">#224</a>, <a href=""https://github-redirect.dependabot.com/chardet/c",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12107:934,test,test,934,https://hail.is,https://github.com/hail-is/hail/pull/12107,1,['test'],['test']
Testability,"t/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-logging/commit/10727ef3c8cca7e20484e58e6afdc79e81a4d4c9""><code>10727ef</code></a> chore(main): release 3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/473"">#473</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/d86be6cf83c3f3b91c4fc0b2e0666b0ca1d7e248""><code>d86be6c</code></a> chore(deps): update dependency google-cloud-storage to v2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/469"">#469</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544""><code>8a67b73</code></a> docs: update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3""><code>e0c5fc0</code></a> feat: trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>)</li>; <li><a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce""><code>97e32b6</code></a> fix: allow reading logs f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:11340,log,logging,11340,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"t/testng/pull/2832"">cbeust/testng#2832</a></li>; <li>hidden spotbugs in release <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2829"">#2829</a> by <a href=""https://github.com/bobshie""><code>@​bobshie</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2833"">cbeust/testng#2833</a></li>; <li>Enhancing the Matrix by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2834"">cbeust/testng#2834</a></li>; <li>Avoid Compilation errors on Semeru JDK flavour. by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2835"">cbeust/testng#2835</a></li>; <li>Add addition yml extension by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2837"">cbeust/testng#2837</a></li>; <li>Support getting dependencies info for a test by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2839"">cbeust/testng#2839</a></li>; <li>Honour regex in dependsOnMethods by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2838"">cbeust/testng#2838</a></li>; <li>Ensure All tests run all the time by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2842"">cbeust/testng#2842</a></li>; <li>Deprecate support for running Spock Tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2846"">cbeust/testng#2846</a></li>; <li>Streamline dependsOnMethods for configurations by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</cod",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:6403,test,testng,6403,https://hail.is,https://github.com/hail-is/hail/pull/12665,3,['test'],"['test', 'testng']"
Testability,t; fixed css sort tringles (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/409&quot;&gt;#409&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/e00532d9c8a598fb848d16b0ce23665789e3517a&quot;&gt;&lt;code&gt;e00532d&lt;/code&gt;&lt;/a&gt; Use scss nesting &amp;amp; variables (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/393&quot;&gt;#393&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/9bd4907682f10849dde1fe866b5a71402c74e551&quot;&gt;&lt;code&gt;9bd4907&lt;/code&gt;&lt;/a&gt; remove all read the doc documentation from the repo (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/405&quot;&gt;#405&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/21fafe40b19e7d1c8b4b8bceb7fe1410e2cbdc2a&quot;&gt;&lt;code&gt;21fafe4&lt;/code&gt;&lt;/a&gt; Document how to modify the environment section after tests are finished (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/400&quot;&gt;#400&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/8b7bdc1fc5f21e94610c3b7bcb06006271c27390&quot;&gt;&lt;code&gt;8b7bdc1&lt;/code&gt;&lt;/a&gt; Better error on missing CSS files. (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/390&quot;&gt;#390&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/817d04df5875b143bc23fa6f4c78d0bc9ccece58&quot;&gt;&lt;code&gt;817d04d&lt;/code&gt;&lt;/a&gt; Move documentation to read the docs (&lt;a href=&quot;https://github-redirect.dependabot.com/pytest-dev/pytest-html/issues/402&quot;&gt;#402&lt;/a&gt;)&lt;/li&gt;; &lt;li&gt;&lt;a href=&quot;https://github.com/pytest-dev/pytest-html/commit/ba4f15431c42f6b650e78c9d3895e9212cf35663&quot;&gt;&lt,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11524:15291,test,tests,15291,https://hail.is,https://github.com/hail-is/hail/pull/11524,1,['test'],['tests']
Testability,tIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[3]([Ljava.lang.String;@3c90c5dc)(is.hail.io.IndexSuite). Gradl,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:2333,test,testUpperBound,2333,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['testUpperBound']
Testability,tNGSuite.newAssertionFailedException(TestNGSuite.scala:67); 	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:413); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:398); 	at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333). test is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations FAILURE; ```. ### Version. 0.2.124. ### Relevant log outpu,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827:1645,Test,TestMethodWorker,1645,https://hail.is,https://github.com/hail-is/hail/issues/13827,1,['Test'],['TestMethodWorker']
Testability,tRelation.scala:404); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation.org$apache$spark$sql$execution$datasources$parquet$ParquetRelation$$metadataCache$lzycompute(ParquetRelation.scala:145); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation.org$apache$spark$sql$execution$datasources$parquet$ParquetRelation$$metadataCache(ParquetRelation.scala:143); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation$$anonfun$6.apply(ParquetRelation.scala:196); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation$$anonfun$6.apply(ParquetRelation.scala:196); at scala.Option.getOrElse(Option.scala:120); at org.apache.spark.sql.execution.datasources.parquet.ParquetRelation.dataSchema(ParquetRelation.scala:196); at org.apache.spark.sql.sources.HadoopFsRelation.schema$lzycompute(interfaces.scala:561); at org.apache.spark.sql.sources.HadoopFsRelation.schema(interfaces.scala:560); at org.apache.spark.sql.execution.datasources.LogicalRelation.<init>(LogicalRelation.scala:31); at org.apache.spark.sql.SQLContext.baseRelationToDataFrame(SQLContext.scala:389); at org.apache.spark.sql.DataFrameReader.parquet(DataFrameReader.scala:267); at org.broadinstitute.hail.variant.VariantSampleMatrix$.read(VariantSampleMatrix.scala:132); at org.broadinstitute.hail.driver.Read$.run(Read.scala:29); at org.broadinstitute.hail.driver.Read$.run(Read.scala:6); at org.broadinstitute.hail.driver.Command.runCommand(Command.scala:238); at org.broadinstitute.hail.driver.Main$.runCommand(Main.scala:86); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1$$anonfun$1.apply(Main.scala:111); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1$$anonfun$1.apply(Main.scala:111); at org.broadinstitute.hail.Utils$.time(Utils.scala:1185); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1.apply(Main.scala:110); at org.broadinstitute.hail.driver.Main$$anonfun$runCommands$1.apply(Main.scala:104); at scala.collection.IndexedS,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/621:2137,Log,LogicalRelation,2137,https://hail.is,https://github.com/hail-is/hail/issues/621,1,['Log'],['LogicalRelation']
Testability,"tTask.scala:70); at org.apache.spark.scheduler.Task.run(Task.scala:86); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:274); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); Caused by: java.lang.RuntimeException: Error while encoding: java.lang.RuntimeException: org.apache.spark.sql.catalyst.expressions.GenericRow is not a valid external type for schema of boolean; named_struct(contig, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true], top level row object), 0, variant), StructField(contig,StringType,false), StructField(start,IntegerType,false), StructField(ref,StringType,false), StructField(altAlleles,ArrayType(StructType(StructField(ref,StringType,false), StructField(alt,StringType,false)),false),false)), 0, contig), StringType), true), start, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true], top level row object), 0, variant), StructField(contig,StringType,false), StructField(start,IntegerType,false), StructField(ref,StringType,false), StructField(altAlleles,ArrayType(StructType(StructField(ref,StringType,false), StructField(alt,StringType,false)),false),false)), 1, start), IntegerType), ref, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true], top level row object), 0, variant), StructField(contig,StringType,false), StructField(start,IntegerType,false), StructField(ref,StringType,false), StructField(altAlleles,ArrayType(StructType(StructField(ref,StringType,false",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1260:8091,assert,assertnotnull,8091,https://hail.is,https://github.com/hail-is/hail/issues/1260,1,['assert'],['assertnotnull']
Testability,t_reference_genome_sequence>; <Function test_reference_genome_liftover>; <Function test_read_custom_reference_genome>; <Package matrixtable>; <Module test_grouped_matrix_table.py>; <UnitTestCase Tests>; <TestCaseFunction test_joins_work_correctly>; <Module test_matrix_table.py>; <UnitTestCase Tests>; <TestCaseFunction test_collect_cols_by_key>; <TestCaseFunction test_naive_coalesce>; <TestCaseFunction test_range_count>; <Package methods>; <Module test_family_methods.py>; <UnitTestCase Tests>; <TestCaseFunction test_trio_matrix_1>; <Module test_impex.py>; <UnitTestCase VCFTests>; <TestCaseFunction test_glob>; <TestCaseFunction test_import_gvcfs>; <Module test_qc.py>; <UnitTestCase Tests>; <TestCaseFunction test_sample_qc>; <TestCaseFunction test_variant_qc>; <Module test_skat.py>; <Function test_logistic_skat_phenotypes_are_binary>; <Function test_logistic_skat_no_weights_R_truth>; <Module test_statgen.py>; <UnitTestCase Tests>; <TestCaseFunction test_impute_sex_same_as_plink>; <TestCaseFunction test_linreg_basic>; <Package relatedness>; <Module test_identity_by_descent.py>; <Function test_ibd_default_arguments>; <Module test_pc_relate.py>; <Function test_pc_relate_simple_example>; <Package table>; <Module test_grouped_table.py>; <UnitTestCase GroupedTableTests>; <TestCaseFunction test_aggregate_by>; <Module test_table.py>; <UnitTestCase Tests>; <TestCaseFunction test_aggregate1>; <TestCaseFunction test_annotate>; <Function test_lowered_persist>; <Function test_lowered_shuffle>; <Package utils>; <Module test_hl_hadoop_and_hail_fs.py>; <Function test_hadoop_methods_1[remote]>; <Function test_hadoop_methods_1[local]>; <Function test_hadoop_methods_2[remote]>; <Function test_hadoop_methods_2[local]>; <Function test_hadoop_methods_3[remote]>; <Function test_hadoop_methods_3[local]>; <Function test_read_overwrite[remote]>; <Function test_read_overwrite[local]>; <Function test_hadoop_exists[remote]>; <Function test_hadoop_exists[local]>; <Function test_hadoop_is_file[remote,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13620#issuecomment-1720268851:2718,Test,Tests,2718,https://hail.is,https://github.com/hail-is/hail/pull/13620#issuecomment-1720268851,3,['Test'],"['TestCaseFunction', 'Tests']"
Testability,"table1:; ```; 'Table{global:+Struct{},key:[s],row:Struct{s:String,PC1:Float64,PC2:Float64,PC3:Float64,PC4:Float64,PC5:Float64,PC6:Float64,PC7:Float64,PC8:Float64,PC9:Float64,PC10:Float64,PC11:Float64,PC12:Float64,PC13:Float64,PC14:Float64,PC15:Float64,PC16:Float64,PC17:Float64,PC18:Float64,PC19:Float64,PC20:Float64,source:String}}'; ```. table2:; ```; 'Table{global:Struct{},key:[s],row:Struct{s:String,PC1:Float64,PC2:Float64,PC3:Float64,PC4:Float64,PC5:Float64,PC6:Float64,PC7:Float64,PC8:Float64,PC9:Float64,PC10:Float64,PC11:Float64,PC12:Float64,PC13:Float64,PC14:Float64,PC15:Float64,PC16:Float64,PC17:Float64,PC18:Float64,PC19:Float64,PC20:Float64,source:String}}'; ```. `table1.union(table2)` fails with:; ```; Java stack trace:; java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.expr.TableUnion.<init>(Relational.scala:1996); at is.hail.table.Table.union(Table.scala:947); at is.hail.table.Table.union(Table.scala:945); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3639:749,Assert,AssertionError,749,https://hail.is,https://github.com/hail-is/hail/issues/3639,3,"['Assert', 'assert']","['AssertionError', 'assert', 'assertion']"
Testability,tables README logic typo fix,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5311:14,log,logic,14,https://hail.is,https://github.com/hail-is/hail/pull/5311,1,['log'],['logic']
Testability,"tadata:; creationTimestamp: ""2019-07-12T17:17:15Z""; labels:; app: batch-job; batch_id: ""3""; hail.is/batch-instance: cd50b95a89914efb897965a5e982a29d; job_id: ""41""; task: main; user: ci; uuid: f53f127847864f1cbf7d4bdc911a6646; name: batch-3-job-41-39d17b; namespace: batch-pods; resourceVersion: ""87247110""; selfLink: /api/v1/namespaces/batch-pods/pods/batch-3-job-41-39d17b; uid: e4d87ac3-a4c8-11e9-a4bb-42010a8000af; spec:; containers:; - command:; - bash; - -c; - |-; set -e; gcloud -q auth activate-service-account --key-file=/test-gsa-key/privateKeyData; gsutil -m cp -r /test/resources/* gs://hail-test-1c9nm/sj0nb47zqys1/pipeline/input/; env:; - name: POD_IP; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: status.podIP; - name: POD_NAME; valueFrom:; fieldRef:; apiVersion: v1; fieldPath: metadata.name; image: gcr.io/hail-vdc/ci-intermediate:oyyg6y2um4kx; imagePullPolicy: IfNotPresent; name: main; resources:; requests:; cpu: 100m; memory: 500M; terminationMessagePath: /dev/termination-log; terminationMessagePolicy: File; volumeMounts:; - mountPath: /test-gsa-key; name: test-gsa-key; - mountPath: /gsa-key; name: gsa-key; - mountPath: /var/run/secrets/kubernetes.io/serviceaccount; name: default-token-8h99c; readOnly: true; dnsPolicy: ClusterFirst; enableServiceLinks: true; nodeName: gke-vdc-preemptible-pool-9c7148b2-1f89; priority: 500000; priorityClassName: user; restartPolicy: Never; schedulerName: default-scheduler; securityContext: {}; serviceAccount: default; serviceAccountName: default; terminationGracePeriodSeconds: 30; tolerations:; - key: preemptible; value: ""true""; - effect: NoExecute; key: node.kubernetes.io/not-ready; operator: Exists; tolerationSeconds: 300; - effect: NoExecute; key: node.kubernetes.io/unreachable; operator: Exists; tolerationSeconds: 300; volumes:; - name: test-gsa-key; secret:; defaultMode: 420; optional: false; secretName: test-gsa-key; - name: gsa-key; secret:; defaultMode: 420; secretName: ci-gsa-key; - name: default-token-8h99c; secret",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6625:3767,log,log,3767,https://hail.is,https://github.com/hail-is/hail/issues/6625,3,"['log', 'test']","['log', 'test-gsa-key']"
Testability,"tain a fixed width (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91207"">kubernetes/kubernetes#91207</a>, <a href=""https://github.com/iamchuckss""><code>@​iamchuckss</code></a>) [SIG Apps and Node]</li>; <li>Generic ephemeral volumes, a new alpha feature under the <code>GenericEphemeralVolume</code> feature gate, provide a more flexible alternative to <code>EmptyDir</code> volumes: as with <code>EmptyDir</code>, volumes are created and deleted for each pod automatically by Kubernetes. But because the normal provisioning process is used (<code>PersistentVolumeClaim</code>), storage can be provided by third-party storage vendors and all of the usual volume features work. Volumes don't need to be empt; for example, restoring from snapshot is supported. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92784"">kubernetes/kubernetes#92784</a>, <a href=""https://github.com/pohly""><code>@​pohly</code></a>) [SIG API Machinery, Apps, Auth, CLI, Instrumentation, Node, Scheduling, Storage and Testing]</li>; <li>Go1.14.4 is now the minimum version required for building Kubernetes (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92438"">kubernetes/kubernetes#92438</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery, Auth, CLI, Cloud Provider, Cluster Lifecycle, Instrumentation, Network, Node, Release, Storage and Testing]</li>; <li>Hide managedFields from kubectl edit command (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91946"">kubernetes/kubernetes#91946</a>, <a href=""https://github.com/soltysh""><code>@​soltysh</code></a>) [SIG CLI]</li>; <li>K8s.io/apimachinery - scheme.Convert() now uses only explicitly registered conversions - default reflection based conversion is no longer available. <code>+k8s:conversion-gen</code> tags can be used with the <code>k8s.io/code-generator</code> component to generate conversions. (<a href=""https://gi",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:8005,Test,Testing,8005,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,"takes 10m, similar to other tests.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7864#issuecomment-583542097:28,test,tests,28,https://hail.is,https://github.com/hail-is/hail/pull/7864#issuecomment-583542097,1,['test'],['tests']
Testability,"talocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **496/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 4.2 | Information Exposure Through Sent Data <br/>[SNYK-PYTHON-URLLIB3-6002459](https://snyk.io/vuln/SNYK-PYTHON-URLLIB3-6002459) | `urllib3:` <br> `1.26.17 -> 1.26.18` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0MmRjMDIwMC02MDI1LTQ1M2QtYWUxNC00NDRlZjM5MmU4NTciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQyZGMwMjAwLTYwMjUtNDUzZC1hZTE0LTQ0NGVmMzkyZTg1NyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13854:1514,test,tested,1514,https://hail.is,https://github.com/hail-is/hail/pull/13854,1,['test'],['tested']
Testability,"talocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **496/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 4.2 | Information Exposure Through Sent Data <br/>[SNYK-PYTHON-URLLIB3-6002459](https://snyk.io/vuln/SNYK-PYTHON-URLLIB3-6002459) | `urllib3:` <br> `1.26.17 -> 1.26.18` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmNDI4YzVjNi05NmZmLTQ1ZTMtYjY4ZC0zYzU5NjY3MjA3MGUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImY0MjhjNWM2LTk2ZmYtNDVlMy1iNjhkLTNjNTk2NjcyMDcwZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13851:1506,test,tested,1506,https://hail.is,https://github.com/hail-is/hail/pull/13851,1,['test'],['tested']
Testability,"talocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **581/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.9 | Information Exposure Through Sent Data <br/>[SNYK-PYTHON-URLLIB3-5926907](https://snyk.io/vuln/SNYK-PYTHON-URLLIB3-5926907) | `urllib3:` <br> `1.26.16 -> 1.26.17` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxOGU4YzI4Yi1kYWQ0LTQ5ZDUtOTExNi04NjFkYTdkODk5OTYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE4ZThjMjhiLWRhZDQtNDlkNS05MTE2LTg2MWRhN2Q4OTk5NiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13773:1514,test,tested,1514,https://hail.is,https://github.com/hail-is/hail/pull/13773,1,['test'],['tested']
Testability,"talocker, which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **581/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 5.9 | Information Exposure Through Sent Data <br/>[SNYK-PYTHON-URLLIB3-5926907](https://snyk.io/vuln/SNYK-PYTHON-URLLIB3-5926907) | `urllib3:` <br> `1.26.16 -> 1.26.17` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiODhmOTA3Ny02ZjlmLTRiZjEtYjFiYy0yZjNkNTE1MDEwYWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI4OGY5MDc3LTZmOWYtNGJmMS1iMWJjLTJmM2Q1MTUwMTBhYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13783:1506,test,tested,1506,https://hail.is,https://github.com/hail-is/hail/pull/13783,1,['test'],['tested']
Testability,"tandard TLS [X.509 certificates](https://en.wikipedia.org/wiki/X.509). Our; private keys are RSA 4096 keys. The configuration file lists every principal in the system and the ""ssl-mode"" of; the system. The ""ssl-mode"" is inspired by MySQL's ssl-mode's and is one of (in; order from most to least secure): VERIFY_CA, REQUIRED, DISABLED. |mode | incoming connections must use TLS | clients verify hostnames on server cert | servers only accept trusted clients |; |---|---|---|---|; |VERIFY_CA|yes|yes|yes|; |REQUIRED|yes|no|no|; |DISABLED|no|no|no|. `create_certs.py` converts this global configuration file into a secret for each; principal. For NGINX principals, we generate the nginx conf in; `create_certs.py`. Unfortunately, I have no simple way to change the ports and; `ssl` status on nginx servers. For DISABLED, we send empty configuration; files. For REQUIRED, we load server certs and client certs, but we do not verify; (proxied) servers. I load the client certificates anyway so that I can smoke; test them before I require servers verify them. For VERIFY_CA, we load server; certs, load client certs, verify clients, and verify (proxied) servers. For Hail principals, we only generate a json configuration; file containing the ssl mode and some named paths. The new `hailtop/ssl.py`; module defines the mapping from configuration to Python's; [`SSLContext`](https://docs.python.org/3.6/library/ssl.html#ssl.SSLContext). There is also one ""curl"" principal: the admin-pod. REQUIRED and DISABLED are; mostly the same because required passes the `insecure` flag. As curl is; client-only, there is no notion of ""incoming connection"". ---. FAQ. Does this recreate certs on each deploy?. Yes. How do services speak to each other while a deploy is happening? Newly deployed; services will only trust newly deployed clients?. `create_certs.py` includes the previous deploy's certificates in the trust; chain, so we can always accept clients from one deploy backwards. Old services; will not trust th",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8513:4690,test,test,4690,https://hail.is,https://github.com/hail-is/hail/pull/8513,1,['test'],['test']
Testability,"tandard-1 \; --master-boot-disk-size=40GB \; --num-master-local-ssds=0 \; --num-preemptible-workers=0 \; --num-worker-local-ssds=0 \; --num-workers=2 \; --preemptible-worker-boot-disk-size=40GB \; --worker-boot-disk-size=40 \; --worker-machine-type=n1-standard-1 \; --zone=us-central1-b \; --initialization-action-timeout=20m \; --bucket=hail-ci-0-1-dataproc-staging-bucket \; --max-idle=10m; Starting cluster 'ci-test-6boype3d'...; Traceback (most recent call last):; File ""/home/hail/.conda/envs/hail/bin/cluster"", line 10, in <module>; sys.exit(main()); File ""/home/hail/.conda/envs/hail/lib/python3.6/site-packages/cloudtools/__main__.py"", line 85, in main; start.main(args); File ""/home/hail/.conda/envs/hail/lib/python3.6/site-packages/cloudtools/start.py"", line 210, in main; check_call(cmd); File ""/home/hail/.conda/envs/hail/lib/python3.6/subprocess.py"", line 291, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '['gcloud', 'beta', 'dataproc', 'clusters', 'create', 'ci-test-6boype3d', '--image-version=1.2-deb9', '--metadata=MINICONDA_VERSION=4.4.10,JAR=gs://hail-ci-0-1/temp/25aa42b2d6d442615931b2eb65c5f8e012de52a0/96d6daa14989dd0cff08b30ac1f1d53288171a54/hail.jar,ZIP=gs://hail-ci-0-1/temp/25aa42b2d6d442615931b2eb65c5f8e012de52a0/96d6daa14989dd0cff08b30ac1f1d53288171a54/hail.zip', '--properties=spark:spark.driver.memory=3g,spark:spark.driver.maxResultSize=0,spark:spark.task.maxFailures=20,spark:spark.kryoserializer.buffer.max=1g,spark:spark.driver.extraJavaOptions=-Xss4M,spark:spark.executor.extraJavaOptions=-Xss4M,hdfs:dfs.replication=1,dataproc:dataproc.logging.stackdriver.enable=false,dataproc:dataproc.monitoring.stackdriver.enable=false', '--initialization-actions=gs://dataproc-initialization-actions/conda/bootstrap-conda.sh,gs://hail-common/cloudtools/init_notebook1.py,gs://hail-common/vep/vep/vep85-loftee-1.0-GRCh37-init-docker.sh', '--master-machine-type=n1-standard-1', '--master-boot-disk-size=40GB', '--num-master-loca",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4530#issuecomment-475782518:10118,test,test-,10118,https://hail.is,https://github.com/hail-is/hail/issues/4530#issuecomment-475782518,2,['test'],['test-']
Testability,"tdt: added pval, fixed tests, updated and editted docs",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1054:23,test,tests,23,https://hail.is,https://github.com/hail-is/hail/pull/1054,1,['test'],['tests']
Testability,"te `0000 1111` is converted to the `Int` 15 and the byte; `1000 1111` is converted to the `Int` -113. The contract of; [`InputStream.read`](https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html#read--); is to return the unsigned integeral value of the next `Byte` or `-1` if we've reached the end of; the stream. `DataInputStream` treats any negative value as EOS which lead to perplexing EOSes; when reading data from GCS. 5. Retain the `gs://` protocol when reading MTs and Ts. `uriPath` strips *all* protocols. Before the; Query Service, these code paths were only used by the LocalBackend. In the LocalBackend, the only; URIs generated are `file://`. However, UNIX/JVM file system operations do not support URIs, they; want bare paths. 6. Implement missing cases for EShuffle and PShuffle. 7. BLAS and LAPACK need to be thread-local. 8. The LSM-tree used by the Shuffler needs to permit multiple values for the same key. There was; some subtlety here around fine-grained locking. Unfortunately, the LSM doesn't expose the right; operations (putIfAbsent) to make this easy, so I had to use a concurrent hash map of locks. ---. I've already updated the cluster with the new bucket and the corresponding change to the; `global-config` secret. We'll should notify Leo et al. about the Terraform changes. ---. Small changes and fixes:. - Rename `key.json` to `/worker-key.json` for clarity, this is the worker's own GCP service account; key. - Create a test query-gsa-key in test and dev namespaces. - Add terraform rules for the query service account. It already existed, but it was missing from the; Terraform file. You can verify the permissions grant by inspecting `gsutil iam get; gs://hail-query`. - The `query` user was missing from bootstrap-create-accounts. - Remove the auto-scaling and remove the k8s grace period. Neither of these really works right. We; will live without the auto-scaling for now. I have to fix the grace period thing before we let; users run real pipelines.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10390:3947,test,test,3947,https://hail.is,https://github.com/hail-is/hail/pull/10390,2,['test'],['test']
Testability,"te about the `compile` configuration [here](https://docs.gradle.org/current/userguide/building_java_projects.html#sec:java_dependency_management_overview) (search for ""compile""):. > **Why no compile configuration?**; > The Java Library Plugin has historically used the compile configuration for dependencies that are required to both compile and run a project’s production code. It is now deprecated, and will issue warnings when used, because it doesn’t distinguish between dependencies that impact the public API of a Java library project and those that don’t. You can learn more about the importance of this distinction in [Building Java libraries](https://docs.gradle.org/current/userguide/building_java_projects.html#sec:building_java_libraries). OK, so, we used to just dump everything into our runtime dependencies. I changed it so that we have three kinds of dependencies:; 1. `shadow`: these are provided by Dataproc/QoB at run-time. They are not in any JAR. They are not on the `testRuntimeClasspath` or `runtimeClasspath`. They are on the `testCompileClasspath` because I [explicitly requested](https://github.com/hail-is/hail/blob/main/hail/build.gradle#L98) that `testCompileOnly` bring in our `shadow` dependencies.; 2. `implementation`: these are included in all class paths and in shadow JARs (but not ""thin"" jars generated by `./gradlew jar`).; 3. `testImplementation`: these are included in test class paths and in shadow JARs. Our test code references these third-party classes:; ```; import breeze.linalg.DenseMatrix; import breeze.linalg._; import breeze.linalg.{*, diag, DenseMatrix => BDM, DenseVector => BDV}; import breeze.linalg.{DenseMatrix => BDM, _}; import breeze.linalg.{DenseMatrix => BDM}; import breeze.linalg.{DenseMatrix, DenseVector, eigSym, svd}; import breeze.linalg.{DenseMatrix, DenseVector}; import breeze.linalg.{DenseMatrix, Matrix, Vector}; import breeze.linalg.{Vector => BVector}; import htsjdk.samtools.reference.ReferenceSequenceFileFactory; import ht",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13706#issuecomment-1738232741:1539,test,testRuntimeClasspath,1539,https://hail.is,https://github.com/hail-is/hail/issues/13706#issuecomment-1738232741,2,['test'],['testRuntimeClasspath']
Testability,"te repository with the expected name, `REPO_NAME=ci-test-p4a9fxo7`) [1]. It is unclear if repository deletion succeeded [2], I should find a way to make curl print the HTTP status code returned by cluster deletion. FWIW, the repository appears to be deleted now (https://github.com/hail-ci-test/ci-test-p4a9fxo7), and, AFAIK, no other part of our system deletes these repositories. [1]:; ```; {; ""id"": 152339517,; ""node_id"": ""MDEwOlJlcG9zaXRvcnkxNTIzMzk1MTc="",; ""name"": ""ci-test-p4a9fxo7"",; ""full_name"": ""hail-ci-test/ci-test-p4a9fxo7"",; ""private"": false,; ""owner"": {; ""login"": ""hail-ci-test"",; ""id"": 43152710,; ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjQzMTUyNzEw"",; ""avatar_url"": ""https://avatars1.githubusercontent.com/u/43152710?v=4"",; ""gravatar_id"": """",; ""url"": ""https://api.github.com/users/hail-ci-test"",; ""html_url"": ""https://github.com/hail-ci-test"",; ""followers_url"": ""https://api.github.com/users/hail-ci-test/followers"",; ""following_url"": ""https://api.github.com/users/hail-ci-test/following{/other_user}"",; ""gists_url"": ""https://api.github.com/users/hail-ci-test/gists{/gist_id}"",; ""starred_url"": ""https://api.github.com/users/hail-ci-test/starred{/owner}{/repo}"",; ""subscriptions_url"": ""https://api.github.com/users/hail-ci-test/subscriptions"",; ""organizations_url"": ""https://api.github.com/users/hail-ci-test/orgs"",; ""repos_url"": ""https://api.github.com/users/hail-ci-test/repos"",; ""events_url"": ""https://api.github.com/users/hail-ci-test/events{/privacy}"",; ""received_events_url"": ""https://api.github.com/users/hail-ci-test/received_events"",; ""type"": ""Organization"",; ""site_admin"": false; },; ""html_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""description"": null,; ""fork"": false,; ""url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7"",; ""forks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/forks"",; ""keys_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/keys{/key_id}"",; ""collaborators_url"": ""https://api.github.com/repos/hail-",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:1478,test,test,1478,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,1,['test'],['test']
Testability,"te(); File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 840, in create; await self._run_until_done_or_deleted(self.image.pull); File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 1014, in _run_until_done_or_deleted; raise ContainerDeletedError from e; ContainerDeletedError. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 1887, in run_container; await container.run(on_completion); File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 920, in run; await on_completion(*args, **kwargs); File ""/usr/lib/python3.9/contextlib.py"", line 137, in __exit__; self.gen.throw(typ, value, traceback); File ""/usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py"", line 1154, in step; yield; File ""/usr/local/lib/python3.9/dist-packages/batch/worker/worker.py"", line 1873, in on_completion; await self.worker.fs.read(container.log_path),; File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/fs/fs.py"", line 281, in read; async with await self.open(url) as f:; File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/router_fs.py"", line 76, in open; return await fs.open(url); File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/local_fs.py"", line 252, in open; f = await blocking_to_async(self._thread_pool, open, self._get_path(url), 'rb'); File ""/usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py"", line 181, in blocking_to_async; return await asyncio.get_event_loop().run_in_executor(; File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 58, in run; result = self.fn(*self.args, **self.kwargs); File ""/usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py"", line 182, in <lambda>; thread_pool, lambda: fun(*args, **kwargs)); FileNotFoundError: [Errno 2] No such file or directory: '/batch/35055eff18f547de9c77b9e80744e362/main/container.log'; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13906:2831,log,log,2831,https://hail.is,https://github.com/hail-is/hail/issues/13906,1,['log'],['log']
Testability,te). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[2]([Ljava.lang.String;@7c5e570e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[3]([Ljava.lang.String;@3c90c5dc)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[3]([Ljava.lang.String;@3c90c5dc) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[4]([Ljava.lang.String;@165d0f2d)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[4]([Ljava.la,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:2689,test,test,2689,https://hail.is,https://github.com/hail-is/hail/issues/4718,2,"['Test', 'test']","['Test', 'test']"
Testability,te.hail.io.compress.BGzipCodecSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.CallSuite.testCall PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigBGzip PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigNoCompression PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hai,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:1132,test,testGenotypeStream,1132,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['testGenotypeStream']
Testability,"tebook; user_id: e7e7b9c420f0b0ff503ab6711355f27748522a8a37d9d22b2c8e0af4; uuid: 84873cf540014e128cce18f5481fb682; name: notebook2-worker-d4snh; namespace: default; resourceVersion: ""41241284""; selfLink: /api/v1/namespaces/default/pods/notebook2-worker-d4snh; uid: 8cb3c1c2-5580-11e9-bcd4-42010a8000c9; spec:; containers:; - command:; - jupyter; - notebook; - --NotebookApp.token=484b71e2c12d42c79b169b1991602d45; - --NotebookApp.base_url=/instance/84873cf540014e128cce18f5481fb682/; - --ip; - 0.0.0.0; - --no-browser; image: gcr.io/hail-vdc/hail-jupyter:2c2281012d0b2171837e99fe50c8656395c7adafd93b3821af6c0a605ffaea1e; imagePullPolicy: IfNotPresent; name: default; ports:; - containerPort: 8888; protocol: TCP; readinessProbe:; failureThreshold: 3; httpGet:; path: /instance/84873cf540014e128cce18f5481fb682/login; port: 8888; scheme: HTTP; periodSeconds: 5; successThreshold: 1; timeoutSeconds: 1; resources:; requests:; cpu: ""1.601""; memory: 1.601G; terminationMessagePath: /dev/termination-log; terminationMessagePolicy: File; volumeMounts:; - mountPath: /gsa-key-secret-name; name: gsa-key-secret-name; readOnly: true; - mountPath: /var/run/secrets/kubernetes.io/serviceaccount; name: user-kmpnh-token-hbdd4; readOnly: true; dnsPolicy: ClusterFirst; nodeName: gke-vdc-non-preemptible-pool-0106a51b-l48l; restartPolicy: Always; schedulerName: default-scheduler; securityContext: {}; serviceAccount: user-kmpnh; serviceAccountName: user-kmpnh; terminationGracePeriodSeconds: 30; tolerations:; - effect: NoExecute; key: node.kubernetes.io/not-ready; operator: Exists; tolerationSeconds: 300; - effect: NoExecute; key: node.kubernetes.io/unreachable; operator: Exists; tolerationSeconds: 300; volumes:; - name: gsa-key-secret-name; secret:; defaultMode: 420; secretName: gsa-key-j7gwm; - name: user-kmpnh-token-hbdd4; secret:; defaultMode: 420; secretName: user-kmpnh-token-hbdd4. hostIP: 10.128.0.32; phase: Running; podIP: 10.32.19.165; qosClass: Burstable; startTime: ""2019-04-02T19:50:21Z""; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5753#issuecomment-479174611:2591,log,log,2591,https://hail.is,https://github.com/hail-is/hail/pull/5753#issuecomment-479174611,2,['log'],['log']
Testability,ted at: org.apache.spark.SparkContext.<init>(SparkContext.scala:76) is.hail.HailContext$.configureAndCreateSparkContext(HailContext.scala:84) is.hail.HailContext$.apply(HailContext.scala:164) sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) java.lang.reflect.Method.invoke(Method.java:498) py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244) py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357) py4j.Gateway.invoke(Gateway.java:280) py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132) py4j.commands.CallCommand.execute(CallCommand.java:79) py4j.GatewayConnection.run(GatewayConnection.java:214) java.lang.Thread.run(Thread.java:745) at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$2.apply(SparkContext.scala:2278) at org.apache.spark.SparkContext$$anonfun$assertNoOtherContextIsRunning$2.apply(SparkContext.scala:2274) at scala.Option.foreach(Option.scala:257) at org.apache.spark.SparkContext$.assertNoOtherContextIsRunning(SparkContext.scala:2274) at org.apache.spark.SparkContext$.markPartiallyConstructed(SparkContext.scala:2353) at org.apache.spark.SparkContext.<init>(SparkContext.scala:85) at is.hail.HailContext$.configureAndCreateSparkContext(HailContext.scala:84) at is.hail.HailContext$.apply(HailContext.scala:164) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244) at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357) at py4j.Gateway.invoke(Gateway.java:280) at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132) at,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1525:5972,assert,assertNoOtherContextIsRunning,5972,https://hail.is,https://github.com/hail-is/hail/issues/1525,1,['assert'],['assertNoOtherContextIsRunning']
Testability,"ted dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIxNjVmNDVkMi00ZDM3LTRmNzAtOGU1OC00OGIxOGJhNmVlOTgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjE2NWY0NWQyLTRkMzctNGY3MC04ZTU4LTQ4YjE4YmE2ZWU5OCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""165f45d2-4d37-4f70-8e58-48b18ba6ee98"",""prPublicId"":""165f45d2-4d37-4f70-8e58-48b18ba6ee98"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[479,616],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14203:3027,log,logic,3027,https://hail.is,https://github.com/hail-is/hail/pull/14203,1,['log'],['logic']
Testability,"ted dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJkYWIzNjU3Mi1hNTUwLTQwY2EtYThjZi0zN2ZjODljOWI1OGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImRhYjM2NTcyLWE1NTAtNDBjYS1hOGNmLTM3ZmM4OWM5YjU4YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""dab36572-a550-40ca-a8cf-37fc89c9b58a"",""prPublicId"":""dab36572-a550-40ca-a8cf-37fc89c9b58a"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[265,402],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14201:2977,log,logic,2977,https://hail.is,https://github.com/hail-is/hail/pull/14201,1,['log'],['logic']
Testability,"ted issues and pull requests on GitHub:</em>; <a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8012"">#8012</a>.</p>; </li>; <li>; <p>Fixed double compress when compression enabled and compressed file exists in server file responses.</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/aio-libs/aiohttp/blob/master/CHANGES.rst"">aiohttp's changelog</a>.</em></p>; <blockquote>; <h1>3.9.3 (2024-01-29)</h1>; <h2>Bug fixes</h2>; <ul>; <li>; <p>Fixed backwards compatibility breakage (in 3.9.2) of <code>ssl</code> parameter when set outside; of <code>ClientSession</code> (e.g. directly in <code>TCPConnector</code>) -- by :user:<code>Dreamsorcerer</code>.</p>; <p><em>Related issues and pull requests on GitHub:</em>; :issue:<code>8097</code>, :issue:<code>8098</code>.</p>; </li>; </ul>; <h2>Miscellaneous internal changes</h2>; <ul>; <li>; <p>Improved test suite handling of paths and temp files to consistently use pathlib and pytest fixtures.</p>; <p><em>Related issues and pull requests on GitHub:</em>; :issue:<code>3957</code>.</p>; </li>; </ul>; <hr />; <h1>3.9.2 (2024-01-28)</h1>; <h2>Bug fixes</h2>; <ul>; <li>; <p>Fixed server-side websocket connection leak.</p>; <p><em>Related issues and pull requests on GitHub:</em>; :issue:<code>7978</code>.</p>; </li>; <li>; <p>Fixed <code>web.FileResponse</code> doing blocking I/O in the event loop.</p>; <p><em>Related issues and pull requests on GitHub:</em>; :issue:<code>8012</code>.</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/aio-libs/aiohttp/commit/bf4edce5d6c967fa1d6a581b3aaab1bd2f5121cd""><code>bf4edce</code></a> Release v3.9.3 (<a href=""https://redirect.github.com/aio-libs/aiohttp/issues/8102"">#8102</a>)</li>; <li><a href=""https://github.com/aio-libs/aiohttp/co",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14219:2413,test,test,2413,https://hail.is,https://github.com/hail-is/hail/pull/14219,2,['test'],['test']
Testability,"ted the command above, the results are as follows:; ```; [root@tele-1 ~]# PYSPARK_PYTHON=""ipython"" pyspark --conf spark.sql.files.openCostInBytes=1099511627776 --conf spark.sql.files.maxPartitionBytes=1099511627776 --conf spark.hadoop.parquet.block.size=1099511627776 --conf spark.serializer=org.apache.spark.serializer.KryoSerializer; /usr/local/lib/python3.5/site-packages/IPython/core/history.py:228: UserWarning: IPython History requires SQLite, your history will not be saved; warn(""IPython History requires SQLite, your history will not be saved""); Python 3.5.2 (default, Jul 12 2017, 14:00:23) ; Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.1.0 -- An enhanced Interactive Python.; ? -> Introduction and overview of IPython's features.; %quickref -> Quick reference.; help -> Python's own help system.; object? -> Details about 'object', use 'object??' for extra details.; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; 17/08/09 12:51:55 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; 17/08/09 12:51:55 WARN SparkConf: ; SPARK_CLASSPATH was detected (set to '/opt/Software/hail/build/libs/hail-all-spark.jar').; This is deprecated in Spark 1.0+. Please instead use:; - ./spark-submit with --driver-class-path to augment the driver classpath; - spark.executor.extraClassPath to augment the executor classpath; ; 17/08/09 12:51:55 WARN SparkConf: Setting 'spark.executor.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; 17/08/09 12:51:55 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; 17/08/09 12:51:56 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-321152609:1021,log,log,1021,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-321152609,1,['log'],['log']
Testability,"tedcontainers/commit/7dc426c95a0c329d5514e6198d92080f1ffc1e5e""><code>7dc426c</code></a> Fix update() ordering to be more consistent with add() ordering (<a href=""https://github-redirect.dependabot.com/grantjenks/python-sortedcontainers/issues/159"">#159</a>)</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/13d30bc654eb9e6be092282ca502967fcb7f0113""><code>13d30bc</code></a> Bump version to 2.2.2</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/4997d0e849f2275d1931772a5432163ecc20e0b0""><code>4997d0e</code></a> Refactor small slice optimization in SortedList.<strong>getitem</strong></li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/6ee5d57fc8d691fbab4972b853a60348d0f922ef""><code>6ee5d57</code></a> improve SortedList.<strong>getitem</strong>() performance for small slices</li>; <li><a href=""https://github.com/grantjenks/python-sortedcontainers/commit/ac80254fb6a08045ced7d9704412878ff8000fa7""><code>ac80254</code></a> suppress warning in test of deprecated function (<a href=""https://github-redirect.dependabot.com/grantjenks/python-sortedcontainers/issues/118"">#118</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/grantjenks/python-sortedcontainers/compare/v2.1.0...v2.4.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=sortedcontainers&package-manager=pip&previous-version=2.1.0&new-version=2.4.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11476:3458,test,test,3458,https://hail.is,https://github.com/hail-is/hail/pull/11476,1,['test'],['test']
Testability,"ter this PR is that devs will be able to access `internal.hail.is/<PR-namespace>/<service>` while it is running and see jobs submitted by tests. Well, that and you can add another developer to a dev namespace as a developer without destroying the developer's existing namespace. Subsequent PRs will introduce on-demand dev namespaces and the ability to suspend the deletion of a test namespace. New context added to the CI pipeline is treated as optional to be backward compatible with the current CI. So devs won't be able to log in to test namespaces on *this* PR but will be able to once this PR becomes main. ### What has changed; - All developers from default are now added to all test namespaces using the `add_users` build.yaml step and removed at the end of the PR run through the `delete_users` step. These use the normal create and delete API instead of copying the user's gsa from the production namespace. This relies on / tests that the delete user endpoint is properly deleting cloud identities when the users are deleted (previously broken in GCP but fixed in this PR.; - The developer role no longer implicitly deletes and recreates a corresponding namespace. I wanted adding developers to test namespaces not to have side-effects that leaked out of the namespace. A follow-up PR will incorporate the ability for a developer to request an on-demand dev namespace, which should be made a lot easier after these changes. I think this also means that we can remove some permissions from the auth K8s ServiceAccount since it no longer needs the ability to create and delete namespaces.; - A fixed-but-sufficient number of oauth2 callbacks are hard-coded into the oauth2 secret from GCP/azure and then allocated to a given namespace. This is fairly self-contained, all that needs to happen is to tell `auth` what callback to use and rewrite those callback urls in gateway to route back to the appropriate auth. This is done only for test namespaces, production still just uses `auth.hail.i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12751:964,test,tests,964,https://hail.is,https://github.com/hail-is/hail/pull/12751,1,['test'],['tests']
Testability,"ter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 430, in main; run(); File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/adapter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 284, in run_file; runpy.run_path(target, run_name=""__main__""); File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 321, in run_path; return _run_module_code(code, init_globals, run_name,; File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 135, in _run_module_code; _run_code(code, mod_globals, init_globals,; File ""/home/edmund/.vscode/extensions/ms-python.debugpy-2024.6.0-linux-x64/bundled/libs/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 124, in _run_code; exec(code, run_globals); File ""/home/edmund/.local/src/hail/test.py"", line 34, in <module>; main(); File ""/home/edmund/.local/src/hail/test.py"", line 28, in main; r2_adj = r2_adj.checkpoint(f'{tmp}/adj', overwrite=args.overwrite); File ""<decorator-gen-1508>"", line 2, in checkpoint; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 584, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/hail/python/hail/linalg/blockmatrix.py"", line 679, in checkpoint; self.write(path, overwrite, force_row_major, stage_locally); File ""<decorator-gen-1506>"", line 2, in write; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 584, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/hail/python/hail/linalg/blockmatrix.py"", line 656, in write; Env.backend().execute(BlockMatrixWrite(self._bmir, writer)); File ""/home/edmund/.local/src/hail/hail/python/hail/backend/backend.py"", line 190, in execute; raise e.maybe_user_error(ir) from N",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14537:3132,test,test,3132,https://hail.is,https://github.com/hail-is/hail/issues/14537,1,['test'],['test']
Testability,"ter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 430, in main; run(); File ""/home/edmund/.vscode/extensions/ms-python.python-2023.10.1/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/../debugpy/server/cli.py"", line 284, in run_file; runpy.run_path(target, run_name=""__main__""); File ""/home/edmund/.vscode/extensions/ms-python.python-2023.10.1/pythonFiles/lib/python/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 321, in run_path; return _run_module_code(code, init_globals, run_name,; File ""/home/edmund/.vscode/extensions/ms-python.python-2023.10.1/pythonFiles/lib/python/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 135, in _run_module_code; _run_code(code, mod_globals, init_globals,; File ""/home/edmund/.vscode/extensions/ms-python.python-2023.10.1/pythonFiles/lib/python/debugpy/_vendored/pydevd/_pydevd_bundle/pydevd_runpy.py"", line 124, in _run_code; exec(code, run_globals); File ""/home/edmund/.local/src/hail/test.py"", line 10, in <module>; expr = hl.any(lambda x:; File ""/home/edmund/.local/src/hail/hail/python/hail/expr/functions.py"", line 3530, in any; collection = arg_check(args[1], 'any', 'collection', collection_type); File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 586, in arg_check; raise TypeError(""{fname}: parameter '{argname}': ""; TypeError: any: parameter 'collection': expected expression of type set<any> or array<any>, found list: [['10', 123, 'G', 'C'], ['10', 456, 'T', 'A']]; ```; So, hail doesn't support heterogeneous arrays. Converting to a homogeneous array:. ```python; variants = [(""10"", 123, [""G"", ""C""]), (""10"", 456, [""T"", ""A""])]. expr = hl.any(; lambda x:; (mt.locus.contig == hl.literal(x[0])) & \; (mt.locus.position == hl.literal(int(x[1]))) & \; (mt.alleles == hl.literal(x[2])),; variants; ). hl.eval(expr). ```; Leads to the following error (which looks like the bug!):; ```; Traceback (most recent call last):; File ""test.py"", line 10, ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13046#issuecomment-1624278982:4242,test,test,4242,https://hail.is,https://github.com/hail-is/hail/issues/13046#issuecomment-1624278982,1,['test'],['test']
Testability,"tes.io/last-applied-configuration"":""""]] ""spec"":map[""replicas"":'\x01' ""selector"":map[""matchLabels"":map[""app"":""batch""]] ""template"":map[""metadata"":map[""labels"":map[""app"":""batch"" ""hail.is/sha"":""1c6dbf20333a""]] ""spec"":map[""containers"":[map[""image"":""gcr.io/broad-ctsa/batch:4b4139c73fe9be3bee6c2895aa74059e157eb861d2bdac7d2304ba44b5421f88"" ""name"":""batch"" ""ports"":[map[""containerPort"":'\u1388']]]] ""serviceAccountName"":""batch-svc""]]]]}; from server for: ""deployment.yaml"": deployments.apps ""batch-deployment"" is forbidden: User ""system:serviceaccount:batch-pods:deploy-svc"" cannot get deployments.apps in the namespace ""batch-pods"": Unknown user ""system:serviceaccount:batch-pods:deploy-svc""; Error from server (Forbidden): error when retrieving current configuration of:; Resource: ""/v1, Resource=services"", GroupVersionKind: ""/v1, Kind=Service""; Name: ""batch"", Namespace: ""batch-pods""; Object: &{map[""apiVersion"":""v1"" ""kind"":""Service"" ""metadata"":map[""namespace"":""batch-pods"" ""annotations"":map[""kubectl.kubernetes.io/last-applied-configuration"":""""] ""labels"":map[""app"":""batch""] ""name"":""batch""] ""spec"":map[""ports"":[map[""port"":'P' ""protocol"":""TCP"" ""targetPort"":'\u1388']] ""selector"":map[""app"":""batch""]]]}; from server for: ""deployment.yaml"": services ""batch"" is forbidden: User ""system:serviceaccount:batch-pods:deploy-svc"" cannot get services in the namespace ""batch-pods"": Unknown user ""system:serviceaccount:batch-pods:deploy-svc""; make: *** [deploy-batch] Error 1; Makefile:45: recipe for target 'deploy-batch' failed; ```; [deploy.log](https://github.com/hail-is/hail/files/2504429/deploy.log). Service accounts:; ```; error: the server doesn't have a resource type ""service-accounts""; # kubectl get serviceaccounts ; NAME SECRETS AGE; batch-svc 1 9h; default 1 113d; # kubectl get serviceaccounts -n batch-pods; NAME SECRETS AGE; default 1 7d; deploy-svc 1 1d; test-svc 1 1d; # kubectl get serviceaccounts -n test ; NAME SECRETS AGE; default 1 1d; ```. Apparently this is caused by a lack of permissions",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4609:5172,log,log,5172,https://hail.is,https://github.com/hail-is/hail/issues/4609,4,"['log', 'test']","['log', 'test', 'test-svc']"
Testability,"tes/kubernetes/pull/106163"">kubernetes/kubernetes#106163</a>, <a href=""https://github.com/aojea""><code>@​aojea</code></a>) [SIG API Machinery, Apps, Architecture, Auth, Autoscaling, CLI, Cloud Provider, Contributor Experience, Instrumentation, Network, Node, Release, Scalability, Scheduling, Storage, Testing and Windows]</li>; <li>If a conflict occurs when creating an object with <code>generateName</code>, the server now returns an &quot;AlreadyExists&quot; error with a retry option. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104699"">kubernetes/kubernetes#104699</a>, <a href=""https://github.com/vincepri""><code>@​vincepri</code></a>)</li>; <li>Implement support for recovering from volume expansion failures (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/106154"">kubernetes/kubernetes#106154</a>, <a href=""https://github.com/gnufied""><code>@​gnufied</code></a>) [SIG API Machinery, Apps and Storage]</li>; <li>In kubelet, log verbosity and flush frequency can also be configured via the configuration file and not just via command line flags. In other commands (kube-apiserver, kube-controller-manager), the flags are listed in the &quot;Logs flags&quot; group and not under &quot;Global&quot; or &quot;Misc&quot;. The type for <code>-vmodule</code> was made a bit more descriptive (<code>pattern=N,...</code> instead of <code>moduleSpec</code>). (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/106090"">kubernetes/kubernetes#106090</a>, <a href=""https://github.com/pohly""><code>@​pohly</code></a>) [SIG API Machinery, Architecture, CLI, Cluster Lifecycle, Instrumentation, Node and Scheduling]</li>; <li>Introduce <code>OS</code> field in the PodSpec (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104693"">kubernetes/kubernetes#104693</a>, <a href=""https://github.com/ravisantoshgudimetla""><code>@​ravisantoshgudimetla</code></a>)</li>; <li>Introduce <code>v1beta3</code> API",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:4866,log,log,4866,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['log'],['log']
Testability,test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9481:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/9481,4,['test'],['test']
Testability,test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[16]([Ljava.lang.String;@4a971368) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[17]([Ljava.lang.String;@47162b74) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[18]([Ljava.lang.String;@70bfbb33) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[19]([Ljava.lang.String;@3e391ee2) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testCXXCodeFunctions(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testCXXCodeFunctions PASSED; Running test: Test method testNativeBuild(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeCallSpeed PASSED; Running test: Test method testNativeGlobal(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeGlobal PASSED; Running test: Test method testNativePtr(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativePtr PASSED; Running test: Test method testNativeUpcall(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle tes,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:7947,test,test,7947,https://hail.is,https://github.com/hail-is/hail/issues/4718,3,"['Test', 'test']","['Test', 'test', 'testCXXCodeFunctions']"
Testability,test VSM.read with no partitioner,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/794:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/794,1,['test'],['test']
Testability,test against central1-b to ensure AVX2 instructions are available,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2164:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/2164,1,['test'],['test']
Testability,test against central1-b to ensure AVX2 instructions are available (0.1),MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2165:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/2165,1,['test'],['test']
Testability,test against python3,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1392:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/1392,1,['test'],['test']
Testability,test export .columns files,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/277:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/277,1,['test'],['test']
Testability,test expr with scalacheck,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/231:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/231,1,['test'],['test']
Testability,test failures,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8231#issuecomment-594308654:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/8231#issuecomment-594308654,3,['test'],['test']
Testability,"test failures related to locals, ugh.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8394#issuecomment-606100914:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/8394#issuecomment-606100914,1,['test'],['test']
Testability,test failures were caused by PType inference bugs that are now fixed,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8297#issuecomment-600361269:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/8297#issuecomment-600361269,1,['test'],['test']
Testability,test file format forward compatibility,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8249:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/8249,1,['test'],['test']
Testability,test how?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2998#issuecomment-368885298:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/2998#issuecomment-368885298,1,['test'],['test']
Testability,test issue,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/1,1,['test'],['test']
Testability,test module doesn't compile,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8536#issuecomment-613042838:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/8536#issuecomment-613042838,1,['test'],['test']
Testability,test nan conversion,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3021:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/3021,1,['test'],['test']
Testability,test only,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11029:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/11029,1,['test'],['test']
Testability,test pull request,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/365:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/365,1,['test'],['test']
Testability,test representation of variants/etc against htsjdk,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1670:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/1670,1,['test'],['test']
Testability,"test time seemed a little bit lower, but not as much as I'd hoping (and probably not statistically lower)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8246#issuecomment-595892761:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/8246#issuecomment-595892761,1,['test'],['test']
Testability,test upload,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4539:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/issues/4539,1,['test'],['test']
Testability,test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2070,test,test,2070,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2104,test,test,2104,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2139,test,test,2139,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2174,test,test,2174,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2208,test,test,2208,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2381,test,test,2381,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2415,test,test,2415,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2450,test,test,2450,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11127,test,test,11127,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11174,test,test,11174,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11221,test,test,11221,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2063,test,test,2063,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2097,test,test,2097,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2132,test,test,2132,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2167,test,test,2167,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2201,test,test,2201,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2374,test,test,2374,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2408,test,test,2408,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2443,test,test,2443,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 3 | 607168 |; | test | test | 6 | 4 | 749952 |; | test | test | 6 | 5 | 46912 |; | test | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1827,test,test,1827,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11120,test,test,11120,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-0,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11167,test,test,11167,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11214,test,test,11214,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 7 | 578240 |; | 2023-07-13 | test | test | 6 | 9 | 33024 |; | 2023-07-13 | test | test | 6 | 10 | 33472 |; | 2023-07-13 | test | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9040,test,test,9040,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,test | test | 6 | 9 | 33024 |; | 2023-07-13 | test | test | 6 | 10 | 33472 |; | 2023-07-13 | test | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:9087,test,test,9087,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,"test, ignore",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10151:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/10151,1,['test'],['test']
Testability,test-dataproc passed.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13573#issuecomment-1709205959:0,test,test-dataproc,0,https://hail.is,https://github.com/hail-is/hail/pull/13573#issuecomment-1709205959,1,['test'],['test-dataproc']
Testability,test-dataproc passes after latest change,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10523#issuecomment-880104667:0,test,test-dataproc,0,https://hail.is,https://github.com/hail-is/hail/pull/10523#issuecomment-880104667,1,['test'],['test-dataproc']
Testability,"test-dataproc was taking over an hour, for two reasons:. 1. Starting two vep clusters sequentially is slow.; 2. A very small cluster was working on submits that sometimes had 10k partitions. To solve this, I've:. 1. Split test-dataproc into test-dataproc-37 and test-dataproc-38; 2. Added a few preemptibles to cluster create script.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11273:0,test,test-dataproc,0,https://hail.is,https://github.com/hail-is/hail/pull/11273,4,['test'],"['test-dataproc', 'test-dataproc-']"
Testability,"test-dev/pytest-xdist/blob/master/CHANGELOG.rst"">pytest-xdist's changelog</a>.</em></p>; <blockquote>; <h1>pytest-xdist 2.5.0 (2021-12-10)</h1>; <h2>Deprecations and Removals</h2>; <ul>; <li><code>[#468](https://github.com/pytest-dev/pytest-xdist/issues/468) &lt;https://github.com/pytest-dev/pytest-xdist/issues/468&gt;</code>_: The <code>--boxed</code> command line argument is deprecated. Install pytest-forked and use <code>--forked</code> instead. pytest-xdist 3.0.0 will remove the <code>--boxed</code> argument and pytest-forked dependency.</li>; </ul>; <h2>Features</h2>; <ul>; <li>; <p><code>[#722](https://github.com/pytest-dev/pytest-xdist/issues/722) &lt;https://github.com/pytest-dev/pytest-xdist/issues/722&gt;</code>_: Full compatibility with pytest 7 - no deprecation warnings or use of legacy features.</p>; </li>; <li>; <p><code>[#733](https://github.com/pytest-dev/pytest-xdist/issues/733) &lt;https://github.com/pytest-dev/pytest-xdist/issues/733&gt;</code>_: New <code>--dist=loadgroup</code> option, which ensures all tests marked with <code>@pytest.mark.xdist_group</code> run in the same session/worker. Other tests run distributed as in <code>--dist=load</code>.</p>; </li>; </ul>; <h2>Trivial Changes</h2>; <ul>; <li>; <p><code>[#708](https://github.com/pytest-dev/pytest-xdist/issues/708) &lt;https://github.com/pytest-dev/pytest-xdist/issues/708&gt;</code>_: Use <code>@pytest.hookspec</code> decorator to declare hook options in <code>newhooks.py</code> to avoid warnings in <code>pytest 7.0</code>.</p>; </li>; <li>; <p><code>[#719](https://github.com/pytest-dev/pytest-xdist/issues/719) &lt;https://github.com/pytest-dev/pytest-xdist/issues/719&gt;</code>_: Use up-to-date <code>setup.cfg</code>/<code>pyproject.toml</code> packaging setup.</p>; </li>; <li>; <p><code>[#720](https://github.com/pytest-dev/pytest-xdist/issues/720) &lt;https://github.com/pytest-dev/pytest-xdist/issues/720&gt;</code>_: Require pytest&gt;=6.2.0.</p>; </li>; <li>; <p><code>[#721](https://",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11491:1218,test,tests,1218,https://hail.is,https://github.com/hail-is/hail/pull/11491,2,['test'],['tests']
Testability,test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:117) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:98) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionQueryTask.call(JsonResumableSessionQueryTask.java:100) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.query(JsonResumableSession.java:57) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.lambda$put$0(JsonResumableSession.java:73) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.Retrying.lambda$run$0(Retrying.java:102) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50) ~[gs:__hail-test-e,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:9274,test,test-,9274,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,"test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/comments{/number}"",; ""issue_comment_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/comments{/number}"",; ""contents_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contents/{+path}"",; ""compare_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/compare/{base}...{head}"",; ""merges_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/merges"",. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 7030 100 6999 100 31 9306 41 --:--:-- --:--:-- --:--:-- 9319; ""archive_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/{archive_format}{/ref}"",; ""downloads_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/downloads"",; ""issues_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues{/number}"",; ""pulls_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/pulls{/number}"",; ""milestones_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/milestones{/number}"",; ""notifications_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/notifications{?since,all,participating}"",; ""labels_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/labels{/name}"",; ""releases_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/releases{/id}"",; ""deployments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/deployments"",; ""created_at"": ""2018-10-10T00:32:59Z"",; ""updated_at"": ""2018-10-10T00:32:59Z"",; ""pushed_at"": ""2018-10-10T00:33:00Z"",; ""git_url"": ""git://github.com/hail-ci-test/ci-test-p4a9fxo7.git"",; ""ssh_url"": ""git@github.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:4962,test,test,4962,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/comments{/number}"",; ""issue_comment_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/comments{/number}"",; ""contents_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contents/{+path}"",; ""compare_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/compare/{base}...{head}"",; ""merges_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/merges"",. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 7030 100 6999 100 31 9306 41 --:--:-- --:--:-- --:--:-- 9319; ""archive_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/{archive_format}{/ref}"",; ""downloads_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/downloads"",; ""issues_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues{/number}"",; ""pulls_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/pulls{/number}"",; ""milestones_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/milestones{/number}"",; ""notifications_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/notifications{?since,all,participating}"",; ""labels_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/labels{/name}"",; ""releases_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/releases{/id}"",; ""deployments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/deployments"",; ""created_at"": ""2018-10-10T00:32:59Z"",; ""updated_at"": ""2018-10-10T00:32:59Z"",; ""pushed_at"": ""2018-10-10T00:33:00Z"",; ""git_url"": ""git://github.com/hail-ci-test/ci-test-p4a9fxo7.git"",; ""ssh_url"": ""git@github.com:hail-ci-test/ci-test-p4a9fxo7.git"",; ""clone_url"": ""https://github.com/hail-ci-test/ci-test-",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:5065,test,test,5065,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,test.Assertions.newAssertionFailedException$(Assertions.scala:527); at org.scalatest.testng.TestNGSuite.newAssertionFailedException(TestNGSuite.scala:67); at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501); at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:445); at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:430); at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136); at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:658); at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:219); at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50); at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:923); at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:192); at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146); at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128); at java.util.ArrayList.forEach(ArrayList.java:1259); at org.testng.TestRunner.privateRun(TestRunner.java:808); at org.testng.TestRunner.run(TestRunner.java:603); at org.testng.SuiteRunner.runTest(SuiteRunner.java:429); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383); at org.testng.SuiteRunner.run(SuiteRunner.java:326); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95); at org,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827#issuecomment-1957725547:1353,Test,TestInvoker,1353,https://hail.is,https://github.com/hail-is/hail/issues/13827#issuecomment-1957725547,1,['Test'],['TestInvoker']
Testability,test/hail/methods/test_impex.py::BGENTests::test_import_bgen_no_entries FAILED. a deserialization error,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8282#issuecomment-598486137:0,test,test,0,https://hail.is,https://github.com/hail-is/hail/pull/8282#issuecomment-598486137,1,['test'],['test']
Testability,testAll triggers testHail and test. test no longer triggers testHail. **WARNING:** the CI server will not run `testHail` on this branch nor will it run `testHail` after this branch is merged; we must manually edit the,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1769:0,test,testAll,0,https://hail.is,https://github.com/hail-is/hail/pull/1769,7,['test'],"['test', 'testAll', 'testHail']"
Testability,testCppCodegen; :compileJava UP-TO-DATE; :generateBuildInfo; :nativeLib; tar -xzf libsimdpp-2.1.tar.gz; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :testCppCodegen; Running test: Test method testReadWrite(is.hail.annotations.AnnotationsSuite). Gradle suite > Gradle test > is.hail.annotations.AnnotationsSuite.testReadWrite FAILED; org.apache.spark.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test:,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1205,test,test,1205,https://hail.is,https://github.com/hail-is/hail/issues/4718,3,"['Test', 'test']","['Test', 'test', 'testIntervalIteratorWorksWithGeneralEndpoints']"
Testability,testTableJoin takes five minutes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9139#issuecomment-663255065:0,test,testTableJoin,0,https://hail.is,https://github.com/hail-is/hail/pull/9139#issuecomment-663255065,1,['test'],['testTableJoin']
Testability,"test_ld_score_regression is failing now, caused by . ```scala; case GetTupleElement(o, idx) =>; infer(o); val t = coerce[PTuple](o.pType2); assert(idx >= 0 && idx < t.size); ```. in inferPType throwing. Will track down. I've seen this before, once. edit:. t.size 1, idx: 1; GetTupleElement(Ref(__iruid_28388,tuple(1:float64))),1)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-586753124:140,assert,assert,140,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-586753124,1,['assert'],['assert']
Testability,"tested 3 cases, when a commit has a results file, doesn't have a results file but has a running batch, or no file and no running batch.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9689:0,test,tested,0,https://hail.is,https://github.com/hail-is/hail/pull/9689,1,['test'],['tested']
Testability,"tested this out in my dev namespace with [this PR](https://github.com/hail-ci-test/ci-test-fhkslcwtu6ij/pull/1) in the associated test repo, which didn't merge until it was approved and had the `ci-test` commit status passing, while the `hail-ci-azure` commit status has failed (the test repo configuration requires one approval and just the `ci-test` commit status to be passing)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14676#issuecomment-2349266606:0,test,tested,0,https://hail.is,https://github.com/hail-is/hail/pull/14676#issuecomment-2349266606,7,['test'],"['test', 'test-', 'tested']"
Testability,"tested, it works.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9502#issuecomment-698604882:0,test,tested,0,https://hail.is,https://github.com/hail-is/hail/pull/9502#issuecomment-698604882,1,['test'],['tested']
Testability,testing,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11126:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11126,8,['test'],['testing']
Testability,testing,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/370#issuecomment-217297231:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/370#issuecomment-217297231,2,['test'],['testing']
Testability,testing 1 2 3,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9057:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/9057,1,['test'],['testing']
Testability,testing a merge of all active service backend PRs,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11618:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11618,1,['test'],['testing']
Testability,"testing is changing a lot, wont fix",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5199#issuecomment-506360273:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/issues/5199#issuecomment-506360273,1,['test'],['testing']
Testability,testing lmm changes on 0.1,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2077:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/2077,1,['test'],['testing']
Testability,"testing on CI, please ignore",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11616:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11616,1,['test'],['testing']
Testability,testing only,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11073:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11073,1,['test'],['testing']
Testability,testing things do not merge,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5917:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/5917,1,['test'],['testing']
Testability,"testing, nothing to see here",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11761:0,test,testing,0,https://hail.is,https://github.com/hail-is/hail/pull/11761,1,['test'],['testing']
Testability,testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144); Caused by: java.lang.reflect.InvocationTargetException; at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.apache.spark.serializer.SerializationDebugger$ObjectStreamClassMethods$.getObjFieldValues$extension(SerializationDebugger.scala:240); at org.apache.spark.serializer.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:2364,test,testng,2364,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['test'],['testng']
Testability,"tests all passing (python and jvm), ready to look.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7959#issuecomment-580063888:0,test,tests,0,https://hail.is,https://github.com/hail-is/hail/pull/7959#issuecomment-580063888,1,['test'],['tests']
Testability,tests and lints resolved,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12571#issuecomment-1397707655:0,test,tests,0,https://hail.is,https://github.com/hail-is/hail/pull/12571#issuecomment-1397707655,1,['test'],['tests']
Testability,tests are green now,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11323#issuecomment-1041946188:0,test,tests,0,https://hail.is,https://github.com/hail-is/hail/pull/11323#issuecomment-1041946188,1,['test'],['tests']
Testability,tests pass rolling up,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9851#issuecomment-754182658:0,test,tests,0,https://hail.is,https://github.com/hail-is/hail/pull/9851#issuecomment-754182658,1,['test'],['tests']
Testability,"tests should pass when this re-runs, ready for review.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2961#issuecomment-367779655:0,test,tests,0,https://hail.is,https://github.com/hail-is/hail/pull/2961#issuecomment-367779655,1,['test'],['tests']
Testability,tests still failing,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7868#issuecomment-574486661:0,test,tests,0,https://hail.is,https://github.com/hail-is/hail/pull/7868#issuecomment-574486661,1,['test'],['tests']
Testability,tests took 8m for this PR and 10m for another recent PR that didn't change pipeline,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7864#issuecomment-580362794:0,test,tests,0,https://hail.is,https://github.com/hail-is/hail/pull/7864#issuecomment-580362794,1,['test'],['tests']
Testability,"tfilter</code> and <code>environmentfunction</code> are replaced; by <code>pass_environment</code>.</li>; <li><code>Markup</code> and <code>escape</code> should be imported from MarkupSafe.</li>; <li>Compiled templates from very old Jinja versions may need to be; recompiled.</li>; <li>Legacy resolve mode for <code>Context</code> subclasses is no longer; supported. Override <code>resolve_or_missing</code> instead of; <code>resolve</code>.</li>; <li><code>unicode_urlencode</code> is renamed to <code>url_quote</code>.</li>; </ul>; </li>; <li>; <p>Add support for native types in macros. :issue:<code>1510</code></p>; </li>; <li>; <p>The <code>{% trans %}</code> tag can use <code>pgettext</code> and <code>npgettext</code> by; passing a context string as the first token in the tag, like; <code>{% trans &quot;title&quot; %}</code>. :issue:<code>1430</code></p>; </li>; <li>; <p>Update valid identifier characters from Python 3.6 to 3.7.; :pr:<code>1571</code></p>; </li>; <li>; <p>Filters and tests decorated with <code>@async_variant</code> are pickleable.; :pr:<code>1612</code></p>; </li>; <li>; <p>Add <code>items</code> filter. :issue:<code>1561</code></p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/b08cd4bc64bb980df86ed2876978ae5735572280""><code>b08cd4b</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1660"">#1660</a> from pallets/release-3.1.2</li>; <li><a href=""https://github.com/pallets/jinja/commit/1e68ba86177504bb6404288610608b855eab93fa""><code>1e68ba8</code></a> release version 3.1.2</li>; <li><a href=""https://github.com/pallets/jinja/commit/8efee35092404ba67ede8316566be4f430e7b61d""><code>8efee35</code></a> pre-commit updates latest release branch</li>; <li><a href=""https://github.com/pallets/jinja/commit/a24df26d54fa2ccbe9bdaa0bb9419075a00e2699""><code>a24df26</code></a> ignor",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12173:4237,test,tests,4237,https://hail.is,https://github.com/hail-is/hail/pull/12173,1,['test'],['tests']
Testability,"than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0M2ViODJhZS04ZDkwLTRjZWUtYjIzMS01ZDMyYmZiZWM4OWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjQzZWI4MmFlLThkOTAtNGNlZS1iMjMxLTVkMzJiZmJlYzg5YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""43eb82ae-8d90-4cee-b231-5d32bfbec89a"",""prPublicId"":""43eb82ae-8d90-4cee-b231-5d32bfbec89a"",""dependencies"":[{""name"":""jinja2"",""from"":""3.1.2"",""to"":""3.1.3""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JINJA2-6150717""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14136:2629,log,logic,2629,https://hail.is,https://github.com/hail-is/hail/pull/14136,1,['log'],['logic']
Testability,"than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlOTc1OTMyYy1kNmNhLTQ0NTUtYmU4ZC04NzY1ZGY0MTZjMWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImU5NzU5MzJjLWQ2Y2EtNDQ1NS1iZThkLTg3NjVkZjQxNmMxYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e975932c-d6ca-4455-be8d-8765df416c1c"",""prPublicId"":""e975932c-d6ca-4455-be8d-8765df416c1c"",""dependencies"":[{""name"":""jinja2"",""from"":""3.1.2"",""to"":""3.1.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JINJA2-6150717""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14141:2947,log,logic,2947,https://hail.is,https://github.com/hail-is/hail/pull/14141,1,['log'],['logic']
Testability,"than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlYTQ5ODFkZC02M2FmLTQ4YzYtYTIwMC05NjkyZjg2ZTlhNjIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImVhNDk4MWRkLTYzYWYtNDhjNi1hMjAwLTk2OTJmODZlOWE2MiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ea4981dd-63af-48c6-a200-9692f86e9a62"",""prPublicId"":""ea4981dd-63af-48c6-a200-9692f86e9a62"",""dependencies"":[{""name"":""jinja2"",""from"":""3.1.2"",""to"":""3.1.3""}],""packageManager"":""pip"",""projectPublicId"":""b7c31419-ec34-40f1-8bc6-ad8303fb329b"",""projectUrl"":""https://app.snyk.io/org/danking/project/b7c31419-ec34-40f1-8bc6-ad8303fb329b?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-JINJA2-6150717""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[556],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14140:2503,log,logic,2503,https://hail.is,https://github.com/hail-is/hail/pull/14140,1,['log'],['logic']
Testability,"thank you very much for the reply,; when I upgrade the decorator from 3.4.0 to 4.1.2 , this error disappears：. ```; Installing collected packages: decorator; Found existing installation: decorator 3.4.0; Uninstalling decorator-3.4.0:; Successfully uninstalled decorator-3.4.0; Successfully installed decorator-4.1.2. ```. But there is another error, as follows：. ```; bash-4.2$ pyspark; WARNING: User-defined SPARK_HOME (/opt/cloudera/parcels/SPARK2-2.2.0.cloudera1-1.cdh5.12.0.p0.142354/lib/spark2) overrides detected (/opt/cloudera/parcels/SPARK2/lib/spark2).; WARNING: Running pyspark from user-defined location.; Python 2.7.5 (default, Nov 6 2016, 00:28:07) ; [GCC 4.8.5 20150623 (Red Hat 4.8.5-11)] on linux2; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 2.2.0.cloudera1; /_/. Using Python version 2.7.5 (default, Nov 6 2016 00:28:07); SparkSession available as 'spark'.; >>> from hail import *; >>> hc = hail.Context(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'hail' is not defined; >>> hc = hail.HailContext(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'hail' is not defined; >>> hc = HailContext(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-470>"", line 2, in __init__; File ""/opt/Software/hail/python/hail/typecheck/check.py"", line 245, in _typecheck; return f(*args, **kwargs); File ""/opt/Software/hail/python/hail/context.py"", line 88, in __init__; parquet_compression, min_block_size, branching_factor, tmp_dir); TypeError: 'JavaPackage' object is not callable; ```; My Java version; ```; [root@mg opt]# java -version; java version ""1.8.0_91""; Java(TM) SE Runtime Environment (bui",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-337132579:803,log,log,803,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-337132579,2,['log'],"['log', 'logging']"
Testability,thanks. I had an initial version of the artifacts stuff using `.log` extensions but that wasn't enough! I hypothesized that .log was auto downloaded and never changed it back from no-ext. :(,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4536#issuecomment-429328072:64,log,log,64,https://hail.is,https://github.com/hail-is/hail/pull/4536#issuecomment-429328072,2,['log'],['log']
Testability,"that start with <code>_</code>.</li>; </ul>; <h2>1.2.0 - 2017-11-15</h2>; <ul>; <li>Added <code>transform</code> argument to :func:<code>string</code> and :func:<code>string_from</code>.</li>; <li>Made :meth:<code>Parser.combine_dict</code> accept lists of name value pairs,; and filter out keys with value <code>None</code>.</li>; <li>Added :func:<code>from_enum</code>.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-parsy/parsy/commit/c4f01f1f44b8e0afb6d3467051ca1d220cc005e3""><code>c4f01f1</code></a> Updated release process</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/03807bcef9cf0a5ff0583d6398f9d4a1eeb67ef2""><code>03807bc</code></a> Version bump - 1.4.0</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/c38eda7dfe58e9619d3b1a7f2210cdbb112bac1b""><code>c38eda7</code></a> Docs improvement</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/4486f90b4097805193d77c1c891817f281d89461""><code>4486f90</code></a> Fixed tests on Python 3.5</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/87e622e145482d93b9bb4fe137c4c76b4ef2a2b8""><code>87e622e</code></a> Added forward_declaration</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/2968580f9e98b44181d2c6c48c4890bc03081ebd""><code>2968580</code></a> Version bump for 1.4.0-dev1</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/bbc1d75065108a4de64f10e169ea542b6f3167b6""><code>bbc1d75</code></a> Test example code as part of tests</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/18df37a479f1bc4170999866433ca19f92f19f63""><code>18df37a</code></a> Dropped Python 3.4 from tox</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/1d7189b5bf78bd0d8d6e4bb2170dfeabba659c5c""><code>1d7189b</code></a> Merge branch 'master' of github.com:python-parsy/parsy</li>; <li><a href=""https://github.com/python-parsy/parsy/commit/8ec01153ccf6c58e2811c0e4c760b98125aeebca""><code",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12007:2058,test,tests,2058,https://hail.is,https://github.com/hail-is/hail/pull/12007,1,['test'],['tests']
Testability,that was the plan. done. http://discuss.hail.is/t/breaking-change-rename-of-methods-fields-ctt-chisq-hardy-weinberg-hardy-weinberg-p-variant-qc-transition-disequilibrium-test/590/2,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4032#issuecomment-409216569:170,test,test,170,https://hail.is,https://github.com/hail-is/hail/pull/4032#issuecomment-409216569,1,['test'],['test']
Testability,that's almost certainly within the (considerable) measurement noise. I'll run that benchmark locally to make sure.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8292#issuecomment-598094208:83,benchmark,benchmark,83,https://hail.is,https://github.com/hail-is/hail/pull/8292#issuecomment-598094208,1,['benchmark'],['benchmark']
Testability,the 1b_1k benchmark goes from 100s to 0.12s,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7176:10,benchmark,benchmark,10,https://hail.is,https://github.com/hail-is/hail/pull/7176,1,['benchmark'],['benchmark']
Testability,"the PR namespace from the CI:. ```; pr-13135-default-u5tt5011yt5w; ```. Then I went to the Azure [Log Analytics workspace haildev-logs](https://portal.azure.com/#@haildev.onmicrosoft.com/resource/subscriptions/22cd45fe-f996-4c51-af67-ef329d977519/resourceGroups/haildev/providers/Microsoft.OperationalInsights/workspaces/haildev-logs/logs). I went to ""Queries"", selected ""DK's AKS Pod Logs"", modified the namespace to the aforementioned one, and added a filter for ""hail-az://"". ```; let startTimestamp = ago(2h);; KubePodInventory; | where TimeGenerated > startTimestamp; | extend PodName=Name; | where Namespace == ""pr-13135-default-u5tt5011yt5w"" and PodName startswith ""batch-driver""; | distinct ContainerID, PodName, Namespace; | join (; ContainerLog; | where TimeGenerated > startTimestamp; ) on ContainerID; | project TimeGenerated, message=parse_json(LogEntry).message, LogEntry=parse_json(LogEntry); | where message contains ""hail-az://""; | order by TimeGenerated desc; ```. That revealed the batch logs path:. ```; EXAMPLE BATCH_JOB_LOGS_PATH hail-az://haildevtest/test/batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1/1/abc123/main/log; ```. In the [failing PR test job logs](https://ci.azure.hail.is/batches/3956877/jobs/152), I found the batch id:. ```; [2023-06-09 12:43:34] test/hail/methods/test_impex.py::BGENTests::test_import_bgen_row_fields; -------------------------------- live log call ---------------------------------; INFO batch_client.aioclient:aioclient.py:753 created batch 1148. INFO batch_client.aioclient:aioclient.py:770 updated batch 1148. FAILED; ```. I listed the job logs:. ```; (base) dking@wm28c-761 hail % az storage blob list --account-name haildevtest --container test --prefix batch/logs/we5a79QlczzdluUx8kT2Vh/batch/1148/ -o table; Name Blob Type Blob Tier Length Content Type Last Modified Snapshot; ----------------------------------------------------------------------------- ----------- ----------- -------- ------------------------ ------------------------- -",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13160:1026,log,logs,1026,https://hail.is,https://github.com/hail-is/hail/pull/13160,1,['log'],['logs']
Testability,the PR that concatenated global fields in table join didn't put logic in PruneDeadFields for that,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4311#issuecomment-420252895:64,log,logic,64,https://hail.is,https://github.com/hail-is/hail/issues/4311#issuecomment-420252895,1,['log'],['logic']
Testability,"the `@benchmark` decorator).; By convention, benchmarks are python tests whose names are prefixed by `benchmark_` and are located in files with the same prefix.; Nothing enforces this, however, so you could name your benchmarks `test_*` and put them in files named `test_*.py`.; Benchmarks may import and use any test code or utilities defined in `test/`.; The results of each benchmark are outputted as json lines (`.jsonl`) to the file specified by the `--output` pytest arg or stdout. The folder structure should be familiar, resembling our `test/` directory.; I believe this is flexible enough to add `hailtop` benchmarks should we so wish:; ```; pytest.ini - hoisted from `test/` to include benchmark marks; benchmark/; - conftest.py for custom pytest command line args ; - hail/; - confest.py for custom plugin that runs hail benchmarks; - benchmark_*.py hail query benchmark code; - tools/; - shared utilites, including the `@benchmark`; ```; Supporting pytest fixtures required writing a custom plugin to run benchmarks, as using off-the-shelf; solutions like `pytest-benchmark` would forbid method level fixtures like `tmp_path` etc.; The plugin is designed to run ""macro-benchmarks"" (ie long-running tests) and fully supports pytest parameterisation.; For each benchmark, the plugin initialises hail and then repeats (for a number of iterations defined by the pytest mark); acquiring fixtures, timing invocation and tearing-down fixtures, finally stopping hail. It is therefore unsuitable for; microbenchmarks, for which we currenly have none in python. If we add them we'd need to tweak this so support them.; Perhaps an inner loop or something. The process of submitting benchmarks to batch is greatly simplified as the old `Makefile` infrastructure for ; building wheels and docker images etc has been replaced with the script `benchmark_in_batch.py`.; Benchmark images are now based off the `hail-dev` image built in CI (or via the `hail-dev-image` make target). ; Furthermore, you can ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14565:1269,benchmark,benchmark,1269,https://hail.is,https://github.com/hail-is/hail/pull/14565,4,['benchmark'],"['benchmark', 'benchmarks']"
Testability,"the `resource` directory is `src/test/resources`, not meant for output.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6315:33,test,test,33,https://hail.is,https://github.com/hail-is/hail/pull/6315,1,['test'],['test']
Testability,the `test_dataproc` steps need what is in ci-utils but also the tools in base_image to build hail. Tested with a dev deploy of `test_dataproc-37`,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12874:99,Test,Tested,99,https://hail.is,https://github.com/hail-is/hail/pull/12874,1,['Test'],['Tested']
Testability,the artifacts page has the same problem - testing multiple projects means you have to encode the full set of information somewhere...,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4667#issuecomment-433943710:42,test,testing,42,https://hail.is,https://github.com/hail-is/hail/pull/4667#issuecomment-433943710,1,['test'],['testing']
Testability,"the current structure is easier to follow:. 1. Fit the null model.; 2. If wald, assume the beta for the genotypes is zero and use the rest of the parameters from the null model fit to compute the score (i.e. the gradient of the likelihood). Recall calculus: gradient near zero => value near the maximum. Return: this is the test.; 3. Otherwise, fit the full model starting at the null fit parameters.; 4. Test the ""goodness"" of this new & full fit. ---. Poisson regression is similar but with a different likelihood function and gradient thereof. Notice that I `key_cols_by()` to indicate to Hail that the order of the cols is irrelevant (the result is a locus-keyed table after all). This is necessary at least until #12753 merges. I think it's generally a good idea though: it indicates to Hail that the ordering of the columns is irrelevant, which is potentially useful information for the optimizer!. ---. Both logistic and Poisson regression can benefit from BLAS3 by running at least the score test for multiple variants at once. ---. I'll attach an image in the comments, but I spend ~6 seconds compiling this trivial model and ~140ms testing it. ```python3; import hail as hl; mt = hl.utils.range_matrix_table(1, 3); mt = mt.annotate_entries(x=hl.literal([1, 3, 10, 5])); ht = hl.poisson_regression_rows(; 'wald', y=hl.literal([0, 1, 1, 0])[mt.col_idx], x=mt.x[mt.col_idx], covariates=[1], max_iterations=2); ht.collect(); ```. I grabbed some [sample code from; scikit-learn](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.PoissonRegressor.html) for Poisson regression (doing a score test rather than a wald test) and timed it. It takes ~8ms. So we're 3 orders of magnitude including the compiler, and ~1.2 orders of magnitude off without the compiler. Digging in a bit:; - ~65ms for class loading.; - ~15ms for region allocation.; - ~20ms various little spots. Leaving about 40ms strictly executing generated code That's about 5x which is starting to feel reasonable.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12793:2152,test,testing,2152,https://hail.is,https://github.com/hail-is/hail/pull/12793,3,['test'],"['test', 'testing']"
Testability,"the data should be really deterministic so I'm not sure why those counts are off, but at least those counts and times are more accurate to what we are seeing so probably it means your test environment is reasonable. I would recommend against using the `hail_search/fixtures` data for anything other than running the test suite, its not designed to play nicely with real data",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13882#issuecomment-1821636774:184,test,test,184,https://hail.is,https://github.com/hail-is/hail/issues/13882#issuecomment-1821636774,2,['test'],['test']
Testability,"the driver classpath; - spark.executor.extraClassPath to augment the executor classpath; ; 17/08/10 09:10:21 WARN SparkConf: Setting 'spark.executor.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; 17/08/10 09:10:21 WARN SparkConf: Setting 'spark.driver.extraClassPath' to '/opt/Software/hail/build/libs/hail-all-spark.jar' as a work-around.; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 2.0.2; /_/. Using Python version 2.7.5 (default, Nov 6 2016 00:28:07); SparkSession available as 'spark'.; ```; ----------------------------; ```; >>> rdd = sc.textFile('/hail/test/BRCA1.raw_indel.vcf'); >>> from hail import *; >>> hc = HailContext(sc); hail: info: SparkUI: http://192.168.1.4:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.1-0320a61; ```; ----------------------------------; ```; >>> vds = hc.import_vcf('/hail/test/BRCA1.raw_indel.vcf'); hail: warning: `/hail/test/BRCA1.raw_indel.vcf' refers to no files; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-483>"", line 2, in import_vcf; File ""/opt/Software/hail/python/hail/java.py"", line 112, in handle_py4j; 'Error summary: %s' % (deepest, full, Env.hc().version, deepest)); hail.java.FatalError: HailException: arguments refer to no files. Java stack trace:; is.hail.utils.HailException: arguments refer to no files; 	at is.hail.utils.ErrorHandling$class.fatal(ErrorHandling.scala:6); 	at is.hail.utils.package$.fatal(package.scala:25); 	at is.hail.io.vcf.LoadVCF$.globAllVCFs(LoadVCF.scala:105); 	at is.hail.HailContext.importVCFs(HailContext.scala:523); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2076#issuecomment-321424071:1996,test,test,1996,https://hail.is,https://github.com/hail-is/hail/issues/2076#issuecomment-321424071,1,['test'],['test']
Testability,"the error in #4529 was:; ```; ERROR: Create cluster failed!; ERROR: gcloud crashed (AttributeError): 'Operation' object has no attribute 'details'. If you would like to report this issue, please run the following command:; gcloud feedback. To check gcloud for common problems, please run the following command:; gcloud info --run-diagnostics; Traceback (most recent call last):; File ""/home/hail/.conda/envs/hail/bin/cluster"", line 11, in <module>; sys.exit(main()); File ""/home/hail/.conda/envs/hail/lib/python3.6/site-packages/cloudtools/__main__.py"", line 76, in main; start.main(args); File ""/home/hail/.conda/envs/hail/lib/python3.6/site-packages/cloudtools/start.py"", line 237, in main; check_call(cmd); File ""/home/hail/.conda/envs/hail/lib/python3.6/subprocess.py"", line 291, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '['gcloud', 'beta', 'dataproc', 'clusters', 'create', 'ci-test-nhxn5owt', '--image-version=1.2-deb9', '--metadata=MINICONDA_VERSION=4.4.10,JAR=gs://hail-ci-0-1/temp/ba8134f0f121a49ea96d7dd30ea3be330802cfef/784ab2796878cd2f825c554e80d29d304f21d0f4/hail.jar,ZIP=gs://hail-ci-0-1/temp/ba8134f0f121a49ea96d7dd30ea3be330802cfef/784ab2796878cd2f825c554e80d29d304f21d0f4/hail.zip', '--properties=spark:spark.driver.memory=41g,spark:spark.driver.maxResultSize=0,spark:spark.task.maxFailures=20,spark:spark.kryoserializer.buffer.max=1g,spark:spark.driver.extraJavaOptions=-Xss4M,spark:spark.executor.extraJavaOptions=-Xss4M,hdfs:dfs.replication=1', '--initialization-actions=gs://dataproc-initialization-actions/conda/bootstrap-conda.sh,gs://hail-common/cloudtools/init_notebook1.py,gs://hail-common/vep/vep/vep85-loftee-init-docker.sh', '--master-machine-type=n1-highmem-8', '--master-boot-disk-size=100GB', '--num-master-local-ssds=0', '--num-preemptible-workers=0', '--num-worker-local-ssds=0', '--num-workers=2', '--preemptible-worker-boot-disk-size=40GB', '--worker-boot-disk-size=40', '--worker-machine-type=n1-highmem-8', '--",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4530#issuecomment-431996515:936,test,test-,936,https://hail.is,https://github.com/hail-is/hail/issues/4530#issuecomment-431996515,2,['test'],['test-']
Testability,"the error. ### What went wrong (all error messages here, including the full java stack trace):; ```; [Stage 6:> (0 + 8) / 5000]; [Stage 6:> (0 + 4) / 5000]; [Stage 6:> (0 + 8) / 5000]Traceback (most recent call last):; File ""/home/hail/hail.zip/hail/utils/java.py"", line 185, in handle_py4j; File ""/home/hail/hail.zip/hail/table.py"", line 1058, in aggregate; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/usr/lib/spark/python/lib/pyspark.zip/pyspark/sql/utils.py"", line 63, in deco; File ""/usr/lib/spark/python/lib/py4j-0.10.4-src.zip/py4j/protocol.py"", line 319, in get_return_value; py4j.protocol.Py4JJavaError: An error occurred while calling o30335.query.; : org.apache.spark.SparkException: Job aborted due to stage failure: Task 7 in stage 6.0 failed 20 times, most recent failure: Lost task 7.19 in stage 6.0 (TID 179, robert1-w-0.c.ccdg-wgs.internal, executor 4): java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.RegionValueBuilder.endStruct(RegionValueBuilder.scala:109); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2645); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2615); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collectio",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3063:1472,assert,assert,1472,https://hail.is,https://github.com/hail-is/hail/issues/3063,1,['assert'],['assert']
Testability,"the following tests causes a segfault:. ```python; def test_agg_table_take(self):; ht = hl.utils.range_table(10).annotate(x = 'a'); ht.aggregate(agg.take(ht.x, 2)); ```. *only* as long as you run the test `test_init_hail_context_twice` in the same execution, i.e. ```; hail/python $ pytest -k 'test_init_hail_context_twice or test_agg_table_take'; platform darwin -- Python 3.6.0, pytest-4.5.0, py-1.8.0, pluggy-0.12.0; collected 653 items / 651 deselected / 2 selected ; test/hail/test_context.py . [ 50%]; test/hail/expr/test_expr.py F [100%]. .... # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000000010ac8bbe2, pid=92110, tid=0x0000000000013d03; #; # JRE version: Java(TM) SE Runtime Environment (8.0_211-b12) (build 1.8.0_211-b12); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.211-b12 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # J 5335 C1 is.hail.annotations.Region$.loadInt(J)I (5 bytes) @ 0x000000010ac8bbe2 [0x000000010ac8bb40+0xa2]; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/mturner/Documents/hail/hail/python/hs_err_pid92110.log; Compiled method (c1) 4061 5335 3 is.hail.annotations.Region$::loadInt (5 bytes); total in heap [0x000000010ac8b9d0,0x000000010ac8bd78] = 936; relocation [0x000000010ac8baf8,0x000000010ac8bb28] = 48; main code [0x000000010ac8bb40,0x000000010ac8bc60] = 288; stub code [0x000000010ac8bc60,0x000000010ac8bcf0] = 144; oops [0x000000010ac8bcf0,0x000000010ac8bcf8] = 8; metadata [0x000000010ac8bcf8,0x000000010ac8bd08] = 16; scopes data [0x000000010ac8bd08,0x000000010ac8bd30] = 40; scopes pcs [0x000000010ac8bd30,0x000000010ac8bd70] = 64; dependencies [0x000000010ac8bd70,0x000000010ac8bd78] = 8; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp. ....; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6860:14,test,tests,14,https://hail.is,https://github.com/hail-is/hail/issues/6860,6,"['log', 'stub', 'test']","['log', 'stub', 'test', 'tests']"
Testability,"the gcloud command write to `stderr` which gets interpreted as errors in the logs and causes [a lot of noise](https://console.cloud.google.com/logs/query;query=resource.type%3D%22k8s_container%22%0Aseverity%3DERROR%0Aresource.labels.namespace_name%3D%22default%22%0Aresource.labels.container_name%3D%22image-fetcher%22;timeRange=PT3H?project=hail-vdc&folder=true&organizationId=548622027621&query=%0A). . Added `gcr.io` because without it `configure-docker` would configure all the registries it can find, which is unnecessary. Also removed `-x` from the site script since each line of that goes to error logs and none of it is helpful. If errors occur they will show up in some other form.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9991:77,log,logs,77,https://hail.is,https://github.com/hail-is/hail/pull/9991,3,['log'],['logs']
Testability,"the local_path_uri function simply prepends 'file://' to the path provided. This leads to an odd situation were a relative path is transformed into 'file://relative/path/to/log', which parses as:. SCHEME: file; HOST : relative; PATH : path/to/log. To fix this, compute the real path of the log file and use that as the path for the local_path_uri",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13340:173,log,log,173,https://hail.is,https://github.com/hail-is/hail/pull/13340,3,['log'],['log']
Testability,the test case that I added was failing before this fix.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4304:4,test,test,4,https://hail.is,https://github.com/hail-is/hail/pull/4304,1,['test'],['test']
Testability,"the test:; ```; ___________________ Tests.test_balding_nichols_model_phased ____________________; [gw1] linux -- Python 3.7.15 /usr/bin/python3. self = <test.hail.methods.test_statgen.Tests testMethod=test_balding_nichols_model_phased>. def test_balding_nichols_model_phased(self):; bn_ds = hl.balding_nichols_model(1, 5, 5, phased=True); assert bn_ds.aggregate_entries(hl.agg.all(bn_ds.GT.phased)) == True; actual = bn_ds.GT.collect(); expected = [; hl.Call(a, phased=True); for a in [; [0, 1], [0, 0], [0, 1], [0, 0], [1, 0],; [1, 1], [0, 1], [1, 1], [0, 0], [0, 1],; [1, 0], [0, 0], [1, 0], [0, 0], [0, 0],; [1, 1], [1, 1], [1, 0], [0, 1], [1, 1],; [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]]]; > assert actual == expected; E assert [Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[1, 1], phased=True)] == [Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[1, 0], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 1], phased=True), Call(alleles=[0, 0], phased=True), Call(alleles=[0, 1], phased=True), Call(alleles=[1, 0], phased=True), Call",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495:4,test,test,4,https://hail.is,https://github.com/hail-is/hail/pull/12588#issuecomment-1397330495,6,"['Test', 'assert', 'test']","['Tests', 'assert', 'test', 'testMethod']"
Testability,the uri got dropped in refactoring on PR that just went in #5686. Reverted the change and added a test to cluster sanity check.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5709:98,test,test,98,https://hail.is,https://github.com/hail-is/hail/pull/5709,1,['test'],['test']
Testability,"the virtual type is serialized without requiredness now. earlier versions have assertions that `decodedPType.virtualType == encodedVirtualType`, and this assertion fails on new files",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8257#issuecomment-595910770:79,assert,assertions,79,https://hail.is,https://github.com/hail-is/hail/pull/8257#issuecomment-595910770,2,['assert'],"['assertion', 'assertions']"
Testability,"there aren't any scorecard tests, and running it in tests is blowing; out Github request limits. FYI @tpoterba",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6309:27,test,tests,27,https://hail.is,https://github.com/hail-is/hail/pull/6309,2,['test'],['tests']
Testability,"there's also a small amount of refactoring that was necessary to send TableIRSuite.testRangeCount through the lowered, jvm-emitted path to test the CollectDistributedArray implementation. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6087:83,test,testRangeCount,83,https://hail.is,https://github.com/hail-is/hail/pull/6087,2,['test'],"['test', 'testRangeCount']"
Testability,these are the last of the changes from #6480; really this should be several distinct PRs and if I have a chance to refactor the tests I'll split it apart. notes to follow in the morning.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6518:128,test,tests,128,https://hail.is,https://github.com/hail-is/hail/pull/6518,1,['test'],['tests']
Testability,"thibaudcolas/curlylint/pull/68"">#68</a>).</li>; <li>Declare support for Python 3.9.</li>; <li>Tentatively declare support for Python 3.10 (tested with <code>Python 3.10.0a6+</code>).</li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Fix Python 3.10 deprecation warning by importing Iterable from collections.abc (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.2"">v0.12.2</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The <code>image_alt</code> rule no longer crashes when encountering template conditionals in img attributes (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/57"">#57</a>). Thanks to <a href=""https://github.com/adrien-delhorme""><code>@​adrien-delhorme</code></a>.</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.1"">v0.12.1</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The project’s sdist now includes all needed files to run the test suite (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/49"">#49</a>, <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/50"">#50</a>). Thanks to <a href=""https://github.com/jayvdb""><code>@​jayvdb</code></a>.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/20d279d3cba11d64529ee88c5a2092c5c09919b6""><code>20d279d</code></a> Release v0.13.1</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/5bd2922633791277f3073135f779fee3e6684bb4""><code>5bd2922</code></a> Update <code>patch_click</code> to fix compatibility issue with click 8.1.0. Fix <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/132"">#132</a> (#...</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/e16056828523d9af3e13b67243d62830ff03d89d""><code>e160568</code></a> chore(deps): update act",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11713:6499,test,test,6499,https://hail.is,https://github.com/hail-is/hail/pull/11713,1,['test'],['test']
Testability,"thibaudcolas/curlylint/pull/68"">#68</a>).</li>; <li>Declare support for Python 3.9.</li>; <li>Tentatively declare support for Python 3.10 (tested with <code>Python 3.10.0a6+</code>).</li>; </ul>; <h3>Fixed</h3>; <ul>; <li>Fix Python 3.10 deprecation warning by importing Iterable from collections.abc (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/68"">#68</a>).</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.2"">v0.12.2</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The <code>image_alt</code> rule no longer crashes when encountering template conditionals in img attributes (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/57"">#57</a>). Thanks to <a href=""https://github.com/adrien-delhorme""><code>@​adrien-delhorme</code></a>.</li>; </ul>; <h2><a href=""https://github.com/thibaudcolas/curlylint/releases/tag/v0.12.1"">v0.12.1</a> 2021-03-06</h2>; <h3>Fixed</h3>; <ul>; <li>The project’s sdist now includes all needed files to run the test suite (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/49"">#49</a>, <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/pull/50"">#50</a>). Thanks to <a href=""https://github.com/jayvdb""><code>@​jayvdb</code></a>.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/e6f6869fddbf307e3267ac164561c669039d557a""><code>e6f6869</code></a> Release v0.13.0 (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/78"">#78</a>)</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/2afa4b2934c3b61b96259d548c26cd49e03daf24""><code>2afa4b2</code></a> Implement --template-tags CLI flag</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/28316eea40acb6f67f267a0fa1545d81fb3ed59a""><code>28316ee</code></a> Re-add repo token</li>; <li><a href=""https://github.com/thibaudcolas/curlyl",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11494:4879,test,test,4879,https://hail.is,https://github.com/hail-is/hail/pull/11494,2,['test'],['test']
Testability,"this adds a substantial amount of time to the tests, so don't approve until I've given some thought to that",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11444#issuecomment-1067243551:46,test,tests,46,https://hail.is,https://github.com/hail-is/hail/pull/11444#issuecomment-1067243551,1,['test'],['tests']
Testability,this deploys a standard ghost installation to the default namespace and routes to it from blog.hail.is; can be customized once deployed. This won't pass tests until #7413 is in.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7381:153,test,tests,153,https://hail.is,https://github.com/hail-is/hail/pull/7381,1,['test'],['tests']
Testability,"this is now failing (previously passed, no issues on output) due to subsetTo assertion in master. edit: Strange the subsetTo commit was made 19 days ago. The assertion failure originates from subsetTo, but must have been caused by something else. Ah, my local master branch was old.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8008#issuecomment-582140545:77,assert,assertion,77,https://hail.is,https://github.com/hail-is/hail/pull/8008#issuecomment-582140545,2,['assert'],['assertion']
Testability,this is ready for review. the tests failed spectacularly for reasons I don't understand with py4j errors. https://ci.hail.is/batches/7644244,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1638415522:30,test,tests,30,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1638415522,1,['test'],['tests']
Testability,"this project.</h3>. #### Changes included in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - hail/python/dev/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | **591/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 6.1 | Information Exposure <br/>[SNYK-PYTHON-REQUESTS-5595532](https://snyk.io/vuln/SNYK-PYTHON-REQUESTS-5595532) | `requests:` <br> `2.28.2 -> 2.31.0` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzYWEwNDk2OC02NDIxLTRmODktYTBjYy03MjE4MzExNDNiZGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjNhYTA0OTY4LTY0MjEtNGY4OS1hMGNjLTcyMTgzMTE0M2JkZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13100:1232,test,tested,1232,https://hail.is,https://github.com/hail-is/hail/pull/13100,1,['test'],['tested']
Testability,"this seems like a lot of hassle, and doesn't test an important piece - whether idempotent initialization actually works from Python. We can test creation of a JVM much more easily from Python than from Scala.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5871#issuecomment-482346641:45,test,test,45,https://hail.is,https://github.com/hail-is/hail/pull/5871#issuecomment-482346641,2,['test'],['test']
Testability,"this the exception (attached the log):. ``` ; File ""/tmp/7f8f775e-2ec3-40ee-ad5b-3e4df5649682/annotate_and_generate_scores_cloud.py"", line 24, in <module>; .vep(config='/vep/vep-gcloud.properties', root='va.vep', force=True); File ""/home/teamcity/TeamCityAgent1/work/591c293e3f6bfb1d/python/hail/dataset.py"", line 3095, in vep; File ""/home/teamcity/TeamCityAgent1/work/591c293e3f6bfb1d/python/hail/context.py"", line 81, in run_command; File ""/home/teamcity/TeamCityAgent1/work/591c293e3f6bfb1d/python/hail/java.py"", line 5, in jarray; File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/java_collections.py"", line 228, in __setitem__; File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/java_collections.py"", line 211, in __set_item; File ""/usr/lib/spark/python/lib/py4j-0.10.3-src.zip/py4j/protocol.py"", line 323, in get_return_value; py4j.protocol.Py4JError: An error occurred while calling None.None. Trace:; java.lang.IllegalArgumentException: array element type mismatch; at java.lang.reflect.Array.set(Native Method); at py4j.commands.ArrayCommand.setArray(ArrayCommand.java:141); at py4j.commands.ArrayCommand.execute(ArrayCommand.java:94); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:745) ; ```. [hail.txt](https://github.com/hail-is/hail/files/725407/hail.txt)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1284:33,log,log,33,https://hail.is,https://github.com/hail-is/hail/issues/1284,1,['log'],['log']
Testability,this was blocked on no lowering for TableCalculateNewPartitions. Added that; testing now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11665#issuecomment-1079066630:77,test,testing,77,https://hail.is,https://github.com/hail-is/hail/pull/11665#issuecomment-1079066630,1,['test'],['testing']
Testability,"thlib-1.3.0 rsa-4.7.2 scipy-1.6.1 six-1.15.0 tabulate-0.8.3 tornado-6.1 tqdm-4.42.1 traitlets-5.0.5 typing-extensions-3.7.4.3 urllib3-1.25.11 wcwidth-0.2.5 wrapt-1.12.1 yarl-1.6.3; (3.8) ✔ ~/sandbox/hail [master|𝚫8?2]; snafu$ ipython ; Python 3.8.6 (default, Jan 27 2021, 15:42:20) ; Type 'copyright', 'credits' or 'license' for more information; IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: import hail; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-e24d842d2b9a> in <module>; ----> 1 import hail. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/__init__.py in <module>; 32 # F401 '.expr.*' imported but unused; 33 # E402 module level import not at top of file; ---> 34 from .table import Table, GroupedTable, asc, desc # noqa: E402; 35 from .matrixtable import MatrixTable, GroupedMatrixTable # noqa: E402; 36 from .expr import * # noqa: F401,F403,E402. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/hail/table.py in <module>; 2 import itertools; 3 import pandas; ----> 4 import pyspark; 5 from typing import Optional, Dict, Callable; 6 . ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/__init__.py in <module>; 49 ; 50 from pyspark.conf import SparkConf; ---> 51 from pyspark.context import SparkContext; 52 from pyspark.rdd import RDD, RDDBarrier; 53 from pyspark.files import SparkFiles. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/context.py in <module>; 29 from py4j.protocol import Py4JError; 30 ; ---> 31 from pyspark import accumulators; 32 from pyspark.accumulators import Accumulator; 33 from pyspark.broadcast import Broadcast, BroadcastPickleRegistry. ~/sandbox/hail/venv/3.8/lib/python3.8/site-packages/pyspark/accumulators.py in <module>; 95 import socketserver as SocketServer; 96 import threading; ---> 97 from pyspark.serializers import read_int, PickleSerializer; 98 ; 99 . ~/sandbox/hail/venv/3.8/lib/python3.8/s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/10197:10246,sandbox,sandbox,10246,https://hail.is,https://github.com/hail-is/hail/issues/10197,1,['sandbox'],['sandbox']
Testability,thods.ExportVcfSuite.testSameAsOrigBGzip PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrigNoCompression PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.metho,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:1417,test,test,1417,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,thods.MendelErrors.writeMendel(MendelErrors.scala:143); at org.broadinstitute.hail.methods.MendelErrorsSuite.test(MendelErrorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMa,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1833,test,testng,1833,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['test'],['testng']
Testability,"thon-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2>v2.7.0</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-logging/blob/main/CHANGELOG.md"">google-cloud-logging's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/pytho",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:5356,log,logging,5356,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,though I would like to see some repr/eval tests!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2060#issuecomment-322287098:42,test,tests,42,https://hail.is,https://github.com/hail-is/hail/pull/2060#issuecomment-322287098,1,['test'],['tests']
Testability,"thub.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2820"">cbeust/testng#2820</a></li>; <li>Refactoring by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2821"">cbeust/testng#2821</a></li>; <li>Fixing bug with DataProvider retry by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2822"">cbeust/testng#2822</a></li>; <li>Add config key for callback discrepancy behavior by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2823"">cbeust/testng#2823</a></li>; <li>Upgrading versions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""https://github.com/melloware""><code>@​melloware</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li>JarFileUtils.delete(File f) throw actual exception (instead of FileNotFound) when file cannot be deleted <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2825"">#2825</a> by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; <li>GITHUB-2830 - Failsafe parameter.toString by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2831"">cbeust/testng#2831</a></li>; <li>Changing assertion message of the osgitest by <a href=""https://github.com/krm",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:4323,test,testng,4323,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"time"": ""2019-07-11 14:19:34,974"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""_delete_pvc:251"", ""message"": ""deleting persistent volume claim batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,976"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,977"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""GET /api/v1alpha/batches/9 HTTP/1.1\"" 200 279 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""GET /api/v1alpha/batches/9 HTTP/1.1"", ""response_status"": 200, ""response_size"": 279, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,985"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""GET /api/v1alpha/batches/9 HTTP/1.1\"" 200 279 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""GET /api/v1alpha/batches/9 HTTP/1.1"", ""response_status"": 200, ""response_size"": 279, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,991"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; ```. Recall that pod creation happens in the background, so the `batches/9/create` and `batches/9/close` endpoints return to the client before pods are necessarily created. See batch.py:866, `Batch.close`. Likewise, the `batches/9/cancel` endpoint returns before the individual jobs are cancelled. There are now at most three concurrent threads of control interacting with the ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:4001,log,log,4001,https://hail.is,https://github.com/hail-is/hail/issues/6617,1,['log'],['log']
Testability,"timings for `cseed/fs-baseline` (`hail-is/main` plus some bug fixes to get the tests to run): https://gist.github.com/cseed/80a3f1bca7a91a1b0f1240cd3663184c. timings for this branch, `cseed/s3-opt`: https://gist.github.com/cseed/6d6a541784d6bb3dc7610ae9a99c70b4. `hail-is/main` actually does pretty well, which surprised me, when I was testing earlier (but similar?) versions copying data from GCS to S3, I saw much slower speeds and I'm not totally sure why. Note, I didn't do cloud-to-cloud tests here, so you should do that.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10752#issuecomment-894603668:79,test,tests,79,https://hail.is,https://github.com/hail-is/hail/pull/10752#issuecomment-894603668,3,['test'],"['testing', 'tests']"
Testability,"timizer_iterations, backend, driver_cores, driver_memory); 299 return asyncio.get_event_loop().run_until_complete(init_batch(; 300 log=log,; 301 quiet=quiet,; (...); 309 name_prefix=app_name; 310 )); 311 if backend == 'spark':; --> 312 return init_spark(; 313 app_name=app_name,; 314 master=master,; 315 local=local,; 316 min_block_size=min_block_size,; 317 branching_factor=branching_factor,; 318 spark_conf=spark_conf,; 319 _optimizer_iterations=_optimizer_iterations,; 320 log=log,; 321 quiet=quiet,; 322 append=append,; 323 tmp_dir=tmp_dir,; 324 local_tmpdir=local_tmpdir,; 325 default_reference=default_reference,; 326 global_seed=global_seed,; 327 skip_logging_configuration=skip_logging_configuration; 328 ); 329 if backend == 'local':; 330 return init_local(; 331 log=log,; 332 quiet=quiet,; (...); 337 skip_logging_configuration=skip_logging_configuration; 338 ). File <decorator-gen-1705>:2, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations). File ~/miniforge3/envs/hail/lib/python3.9/site-packages/hail/typecheck/check.py:577, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 574 @decorator; 575 def wrapper(__original_func, *args, **kwargs):; 576 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 577 return __original_func(*args_, **kwargs_). File ~/miniforge3/envs/hail/lib/python3.9/site-packages/hail/context.py:384, in init_spark(sc, app_name, master, local, log, quiet, append, min_block_size, branching_factor, tmp_dir, default_reference, idempotent, global_seed, spark_conf, skip_logging_configuration, local_tmpdir, _optimizer_iterations); 381 optimizer_iterations = get_env_or_default(_optimizer_iterations, 'HAIL_OPTIMIZER_ITERATIONS', 3); 383 app_name = app_name or 'Hail'; --> 384 backend = SparkBackend(; 385 idempotent, sc, spark_conf, a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/11827:4116,log,log,4116,https://hail.is,https://github.com/hail-is/hail/issues/11827,1,['log'],['log']
Testability,"ting grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/pyt",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:2824,log,logging,2824,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"tion, rather than a class)](https://reactjs.org/docs/components-and-props.html). 4) NextJS includes a light, fast router. Routes are matched based on the names of files in `pages/`, with index.js mapping to `/`. For instance, to navigate to `domain.com/scorecard/users`, you'd make the folder structure:. pages/; * scorecard.tsx; * scorecard/; * users.tsx. These 'pages' components are just like normal react components, except they expose `getInitialProps`, described above. Each page file must export 1 default component:. ```js; #Page file; import React from 'react';. const index = () => <div>Hello World</div>; export default index;; ```. There is nothing else to do to get routing to work, a quite nice solution. ### JS pragma; 1. `this` is different than in most (every?) other language. scope of this is bound to caller, not object containing the method; * Solution: use arrow functions. ```js; class Something {; constructor() {; this.bar = 'foo';; } ; //Do; onSubmit = () => {; console.log(this.bar) //prints foo; }. // Don't; onSubmitBad() {; console.log(this.bar) //may be undefined; }; }. const barrer = new Something();; console.info(""good"", barrer.onSubmit());; console.info(""bad"", barrer.onSubmitBad());; ```. # Tips . ### Client-side routing; Wrap a normal anchor tag in `<Link ></Link>`; ex:; ```jsx; <Link href='/path/to/page'><a>Page Name</a></Link>; ```. This simply adds the client-side routing logic, and passes the href to <a href=. . ### Prefetching; One of the neat things about Next is how easy it makes prefetching pages. This allows perceived page loading times on the order of 5ms, even when the page requires very complex state (say a GraphQL or series of REST calls with large responses). ```jsx; <Link href='/expensive-page' prefetch><a>Expensive Page</a></Link>; ```; ### Make your app do ONLY server-side routing; Meaning every time you click on a link in your page, you hit the server, just like the first visited page. . Simply use `<a>` directly. ### Caching and ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5162:13169,log,log,13169,https://hail.is,https://github.com/hail-is/hail/pull/5162,1,['log'],['log']
Testability,"tionCounts: int64}),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/cols/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""EBaseStruct{s:EBinary}"",""_vType"":""Struct{s:String}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(MakeArray(ArrayBuffer(GetField(Ref(__iruid_368,struct{filePath: str, partitionCounts: int64}),partitionCounts)),array<int64>),TableSpecWriter(gs://danking/workshop-test/1kg.mt/cols,Table{global:Struct{},key:[s],row:Struct{s:String}},rows,../globals/rows,../references,false)), Let(__iruid_374,ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_375,GetField(Ref(__iruid_375,struct{filePath: str, partitionCounts: int64}),filePath))),Begin(ArrayBuffer(WriteMetadata(Ref(__iruid_374,array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/rows/rows,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{locus:+EBaseStruct{contig:+EBinary,position:+EInt32},alleles:+EArray[+EBinary],rsid:EBinary,qual:EFloat64,filters:EArray[+EBinary],info:+EBaseStruct{AC:EArray[EInt32],AF:EArray[EFloat64],AN:EInt32,BaseQRankSum:EFloat64,ClippingRankSum:EFloat64,DP:EInt32,DS:+EBoolean,FS:EFloat64,HaplotypeScore:EFloat64,InbreedingCoeff:EFloat64,MLEAC:EArray[EInt32],MLEAF:EArray[EFloat64],MQ:EFloat64,MQ0:EInt32,MQRankSum:EFloat64,QD:EFloat64,ReadPosRankSum:EFloat64,set:EBinary}}"",""_vType"":""Struct{locus:Locus(GRCh37),alleles:Array[String],rsid:String,qual:Float64,filters:Set[String],info:Struct{AC:Array[Int32],AF:Array[Float64],AN:Int32,BaseQRankSum:Float64,ClippingRankSum:Float64,DP:Int32,DS:Boolean,FS:Float64,HaplotypeScore:Float64,InbreedingCoeff:Float64,MLEAC:Ar",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856:12879,test,test,12879,https://hail.is,https://github.com/hail-is/hail/issues/9856,1,['test'],['test']
Testability,tionFailedException(TestNGSuite.scala:67); 	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:413); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:398); 	at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333). test is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations FAILURE; ```. ### Version. 0.2.124. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827:1680,Test,TestMethodWorker,1680,https://hail.is,https://github.com/hail-is/hail/issues/13827,33,"['Test', 'log', 'test']","['TestMethodWorker', 'TestNG', 'TestRunner', 'log', 'test', 'testng']"
Testability,tionHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); 	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123); Caused by: java.lang.ArrayIndexOutOfBoundsException: 3; 	at scala.collection.mutable.WrappedArray$ofRef.apply(WrappedArray.scala:127); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.getKey$1(OrderingSuite.scala:345); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:347); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33$$anonfun$apply$19.apply(OrderingSuite.scala:318); 	at is.hail.utils.package$.using(package.scala:613); 	at is.hail.annotations.Region$.scoped(Region.scala:13); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:318); 	at is.hail.expr.ir.OrderingSuite$$anonfun$33.apply(OrderingSuite.scala:314); 	at is.hail.check.GenProp1$$anonfun$apply$1$$anonfun$1.apply$mcZ$sp(Prop.scala:28); 	at is.hail.check.GenProp1$$anonfun$apply$1$$anonfun$1.ap,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5630:1950,test,testng,1950,https://hail.is,https://github.com/hail-is/hail/issues/5630,1,['test'],['testng']
Testability,tionHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.acces,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:4874,test,testng,4874,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['test'],['testng']
Testability,tionHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.acc,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:4681,test,testng,4681,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,2,['test'],['testng']
Testability,tionHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144); Caused by: java.lang.reflect.InvocationTargetException; at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.apache.spark.serializer.SerializationDebugger$ObjectStreamClassMethods$.getObjFieldValues$extension(SerializationDebugger.scala:240); at ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:2338,Test,TestNG,2338,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['Test'],['TestNG']
Testability,"tition the `size` of a random generator, we partition using a [Dirichlet-Multinomial distribution](https://en.wikipedia.org/wiki/Dirichlet-multinomial_distribution) with all α_n set to `parts`, which tends towards a uniformly distributed vector. Upon writing this PR, I realize it might be more desirable to set all α_n to 1. Commentary welcome. 3. When we choose the length of a random sequence, we choose it using the [Beta-Binomial Distribution](https://en.wikipedia.org/wiki/Beta-binomial_distribution) with `n` set to the maximum sequence size (usually the Gen's `size`), α set to `3` and β set to `6 * ln(n + 0.01)`. My choice of β is motivated by keeping the mass away from `0` when `n` is small. In particular, I'd like the mean to be greater than or equal to one, so `nα/(α+β) >= 1` so for, say, n=4, `β/α <= 3`. For large values of `n` I want values closer to zero than given by α=3, β=4. I really want commentary on how to choose sequence lengths. Choosing from a Beta-Binomial with a beta weighted by the natural log (shifted by 0.01 to avoid ln(1) = 0) seems very unnatural. Here's α=3, β=6, at n=4 and n=100:. <img width=""752"" alt=""screen shot 2017-06-05 at 2 40 04 pm"" src=""https://cloud.githubusercontent.com/assets/106194/26798031/1c14c0d4-49fd-11e7-9423-0cc46f412145.png"">; <img width=""752"" alt=""screen shot 2017-06-05 at 2 40 18 pm"" src=""https://cloud.githubusercontent.com/assets/106194/26798032/1c16b7d6-49fd-11e7-9a5c-04766ddab9ba.png"">. Note that the mean for n=100 is close to 35, pretty big. Now here's α=3, β=6*ln(n+0.01), at n=4 and n=100:. <img width=""752"" alt=""screen shot 2017-06-05 at 2 40 54 pm"" src=""https://cloud.githubusercontent.com/assets/106194/26798030/1bfc3e06-49fd-11e7-80d9-882e050c5087.png"">; <img width=""752"" alt=""screen shot 2017-06-05 at 2 40 34 pm"" src=""https://cloud.githubusercontent.com/assets/106194/26798033/1c1ad85c-49fd-11e7-8294-b8a5466ade4c.png"">. The n=4 case doesn't change much but the n=100 case biases towards smaller values, which is gener",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1902:10936,log,log,10936,https://hail.is,https://github.com/hail-is/hail/pull/1902,1,['log'],['log']
Testability,titute.hail.methods.ExportSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrig PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.vcf.SplitSuite.SplitTe,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:1916,test,test,1916,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,2,['test'],['test']
Testability,titute.hail.variant.CallSuite.testCall PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportPlinkSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSameAsOrig PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportVcfSuite.testSorted PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.evalTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Sui,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:1733,test,testGenotype,1733,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,2,['test'],"['test', 'testGenotype']"
Testability,"tiveBuild PASSED; Running test: Test method testNativeCallSpeed(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeCallSpeed PASSED; Running test: Test method testNativeGlobal(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeGlobal PASSED; Running test: Test method testNativePtr(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativePtr PASSED; Running test: Test method testNativeUpcall(is.hail.nativecode.NativeCodeSuite); DEBUG: Logging set_test_msg ... Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testNativeUpcall PASSED; Running test: Test method testObjectArray(is.hail.nativecode.NativeCodeSuite). Gradle suite > Gradle test > is.hail.nativecode.NativeCodeSuite.testObjectArray PASSED; Running test: Test method testShuffleAndJoinDoesntMemoryLeak(is.hail.expr.ir.TableIRSuite). Gradle suite > Gradle test > is.hail.expr.ir.TableIRSuite.testShuffleAndJoinDoesntMemoryLeak PASSED; Running test: Test method testBufferWriteReadDoubles(is.hail.annotations.UnsafeSuite). Gradle suite > Gradle test > is.hail.annotations.UnsafeSuite.testBufferWriteReadDoubles PASSED; Running test: Test method testCodec(is.hail.annotations.UnsafeSuite); #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00007fe4a85738ec, pid=23790, tid=0x00007fe48cdfa700; #; # JRE version: OpenJDK Runtime Environment (8.0_181-b13) (build 1.8.0_181-8u181-b13-0ubuntu0.18.04.1-b13); # Java VM: OpenJDK 64-Bit Server VM (25.181-b13 mixed mode linux-amd64 compressed oops); # Problematic frame:; # J 9008 C1 is.hail.annotations.UnsafeRow$.readBinary(Lis/hail/annotations/Region;J)[B (39 bytes) @ 0x00007fe4a85738ec [0x00007fe4a8573600+0x2ec]; #; # Core dump written. Default location: /home/BROAD.MIT.EDU/cvittal/src/hail/hail/core or core.23790 (max size 9223372036854775 kB). To ensur",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:9304,test,test,9304,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,"to complete before it starts the next iteration of the scheduler. This leaves the scheduler vulnerable to problematic workers or workers that happen to be preempted during the scheduling process. So, the driver sets a [2 second timeout](https://github.com/hail-is/hail/blob/b27737f67bf9e69f1abed2fec07fc7c921790ef8/batch/batch/driver/job.py#L585) on the call to `/api/v1alpha/batches/jobs/create`. Additionally, this general design means that in the event of a request timeout or transient error, Batch cannot guarantee that there is always at most one concurrent running attempt for a given job. This ends up being a fine (and intentional) concession in practice because the idempotent design of preemptible jobs tends to cover this scenario, but it is regardless wasted compute and cost to users. Nevertheless, we strive to minimize cases where we might halt the scheduling loop or double-schedule work, and one way to do that in the current design is to minimize the variance in latency of `/api/v1alpha/batches/jobs/create`. The largest source of this latency is the request to blob storage. While GCS and ABS are relatively fast and highly available, Batch in Azure Terra requires first obtaining SAS tokens from the Terra control plane, which can introduce much higher and more variable latency. There have also been occurrences in the past of corrupted or deleted specs, which introduce unexpected failure modes that should error the job but instead disrupt the scheduling loop. Many of these problems would be mitigated by moving the read from object storage outside of the `/api/v1alpha/batches/jobs/create` endpoint. The endpoint should push this read into the asynchronous task that ultimately runs the job and therefore return its acknowledgement to the driver faster. If the worker encounters errors later on while reading the spec, those should result in `error`ing the job instead of raising a 500 in the scheduling request. ### Version. 0.2.129. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14456:2920,log,log,2920,https://hail.is,https://github.com/hail-is/hail/issues/14456,1,['log'],['log']
Testability,"to download the JAR. In the new approach, the python worker process uses a; lock to ensure at most one coroutine is downloading a given version of a JAR at the same time. 2. The JVM includes assumes that a child ClassLoader does not redefine a class from the parent; ClassLoader. That's why ClassLoaders always prefer to load a class from the parent ClassLoader's; classes. When we decide to re-use JVMs or use a single multi-threaded JVM, we'll need to ensure the top-level; ClassLoader *does not have Hail on its classpath*. I looked briefly at this approach and found it; more work than the current approach. ---. My apologies for eliminating JVMProcess in this PR. It's an unrelated change which facilitated my; understanding of worker.py. I essentially inlined JVMProcess into JVMJob and eliminated any duplicative; code. ---. After making this change I restored the tests. Some tests had bitrotted. In the process of fixing; those tests, I found a few other bugs. Fixing these lower-level bugs unlocked a number of new; tests. One test (which was added since the service tests were removed) had to be marked as failing. Some; Hail operations rely on writing to the local file system. Implementing that properly in the Query; Worker will take some thought. Here are the bugs I fixed:. 1. Correct the error message raised when tests are run in a non-main thread (we look for this; message and start an event loop for Hail's async code because asyncio refuses to start an event; loop in a non-main thread). 2. Use a `SafeRow` to copy the globals data out of a Region and into durable, GC'ed objects. 3. Re-enable serialization of GoogleStorageFS (including its private key, which we really shouldn't; do; Tim is working on it), which was broken (presumably) when we changed Scala versions. The; `var` modifier ensures the name is compiled as a JVM field. 4. Correctly convert from a `Byte` to an `Int`. By default `Byte` to `Int` conversion (which is done; automatically when you return a `Byte` fr",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10314:1563,test,tests,1563,https://hail.is,https://github.com/hail-is/hail/pull/10314,1,['test'],['tests']
Testability,"to elaborate, I'm seeing this test case hit the same error:; ```; t = hl.utils.range_table(10).annotate(**{f'f{i}': 0 for i in range(1300)}); mt = hl.utils.range_matrix_table(10, 10). mt.annotate_cols(foo=t[mt.col_idx])._force_count_rows(); ```. with the following stack trace: ; ```; 2019-10-28 17:15:08 root: ERROR: Verify Output 1 for is/hail/codegen/generated/C_etypeDecode_9:; 2019-10-28 17:15:08 root: ERROR: RuntimeException: Method code too large!; From java.lang.RuntimeException: Method code too large!; 	at is.hail.relocated.org.objectweb.asm.MethodWriter.a(Unknown Source); 	at is.hail.relocated.org.objectweb.asm.ClassWriter.toByteArray(Unknown Source); 	at is.hail.asm4s.FunctionBuilder.classAsBytes(FunctionBuilder.scala:333); 	at is.hail.asm4s.FunctionBuilder.result(FunctionBuilder.scala:372); 	at is.hail.expr.types.encoded.EType$.buildDecoder(EType.scala:199); 	at is.hail.io.TypedCodecSpec.buildDecoder(RowStore.scala:36); 	at is.hail.rvd.RVD.collect(RVD.scala:694); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:750); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:90); 	at is.hail.expr.ir.Interpret$.apply(Interpret.scala:59); 	at is.hail.expr.ir.InterpretNonCompilable$$anonfun$5.apply(InterpretNonCompilable.scala:16); 	at is.hail.expr.ir.InterpretNonCompilable$$anonfun$5.apply(InterpretNonCompilable.scala:16); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186); 	at is.hail.expr.ir.InterpretNonCompilable$.apply(InterpretNonCompilable.scala:16); 	at is.hail.expr.ir.TableMapGlobals.execute(TableIR.scala:1125); 	at is.hail.expr.ir.Interpr",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7396#issuecomment-547153723:30,test,test,30,https://hail.is,https://github.com/hail-is/hail/issues/7396#issuecomment-547153723,1,['test'],['test']
Testability,to ensure that combOps are being tested somewhere.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3806:33,test,tested,33,https://hail.is,https://github.com/hail-is/hail/pull/3806,1,['test'],['tested']
Testability,"to link `hail-all-spark.jar`... This config was needed & works successfuly for an old version of Hail (0.2.60)... can be revisit if not appropriate for recent version; ```sh; sudo mkdir /opt/hail/; sudo ln -sf /home/hadoop/.local/lib/python3.9/site-packages/hail/backend /opt/hail/backend; ```; * start pyspark; ```sh; $ pyspark; Python 3.9.18 (main, Oct 25 2023, 05:26:35) ; [GCC 7.3.1 20180712 (Red Hat 7.3.1-17)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Welcome to; ____ __; / __/__ ___ _____/ /__; _\ \/ _ \/ _ `/ __/ '_/; /__ / .__/\_,_/_/ /_/\_\ version 3.3.2-amzn-0.1; /_/. Using Python version 3.9.18 (main, Oct 25 2023 05:26:35); Spark context Web UI available at http://ip-192-168-125-39.ap-southeast-1.compute.internal:4040; Spark context available as 'sc' (master = yarn, app id = application_1698211907929_0001).; SparkSession available as 'spark'.; >>> import hail as hl; >>> hl.version(); '0.2.124-e739a95489e4'; hl.init(sc); pip-installed Hail requires additional configuration options in Spark referring; to the path to the Hail Python module directory HAIL_DIR,; e.g. /path/to/python/site-packages/hail:; spark.jars=HAIL_DIR/backend/hail-all-spark.jar; spark.driver.extraClassPath=HAIL_DIR/backend/hail-all-spark.jar; spark.executor.extraClassPath=./hail-all-spark.jarRunning on Apache Spark version 3.3.2-amzn-0.1; SparkUI ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1778834949:1734,log,log,1734,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1778834949,1,['log'],['log']
Testability,"to merge 22 vcf.gz into a matrix table.; ```python3; import hail as hl; import sys. hl.init(default_reference='GRCh38'); vcf=""/project/casa/bayestyper/vcf/adsp5k.cadre.chr*.norm.ann2.ruth.fix.vcf.gz""; mt=""/project/casa/bayestyper/mt/adsp5k.cadre.bayestyper.autosome.mt""; print(""Converting vcf ""+vcf+"" to mt ""+ mt); hl.import_vcf(vcf,force_bgz=True).write(mt); ```; -----------------------------------------------------------------------------; ```; $ submit ./vcf2mt_all.py; Loading modules; /share/pkg.7/gcc/8.3.0/install/lib64:/share/pkg.7/gcc/8.3.0/install/lib:/share/pkg.7/python3/3.7.7/install/lib:/usr/hdp/2.6.5.0-292/hadoop/lib/native/; Export env vars; Submitting Spark job; 20/08/17 23:24:46 WARN util.Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.; Running on Apache Spark version 2.4.3; SparkUI available at http://scc-hadoop.bu.edu:4041; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.46-6ef64c08b000; LOGGING: writing to /restricted/projectnb/casa/wgs.hg38/pipelines/bayestyper/merge/hail-20200817-2324-0.2.46-6ef64c08b000.log; Converting vcf /project/casa/bayestyper/vcf/adsp5k.cadre.chr*.norm.ann2.ruth.fix.vcf.gz to mt /project/casa/bayestyper/mt/adsp5k.cadre.bayestyper.autosome.mt; [Stage 1:==================================================>(30467 + 1) / 30468]2020-08-17 23:59:36 Hail: INFO: Coerced almost-sorted dataset; 2020-08-17 23:59:37 Hail: INFO: Coerced dataset with out-of-order partitions.; [Stage 2:================> (9622 + 90) / 30468]Traceback (most recent call last):; File ""/restricted/projectnb/casa/wgs.hg38/pipelines/bayestyper/merge/./vcf2mt_all.py"", line 10, in <module>; hl.import_vcf(vcf,force_bgz=True).write(mt); File ""<decorator-gen-1213>"", line 2, in write; File ""/share/pkg.7/hail/0.2.46/install/lib/python3.7/site-packages/hail/typecheck/check.py"", line 614, in wrapper; return __original_func(*args_, **kwargs_); File ""/share/pkg.7/hail/0.2.46/install/lib/python3.7/site-packages/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9293:1244,LOG,LOGGING,1244,https://hail.is,https://github.com/hail-is/hail/issues/9293,1,['LOG'],['LOGGING']
Testability,"to mirror MakeArray; typecheck in evalsEqualTo; add If asserts in constructor, Emit",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4664:55,assert,asserts,55,https://hail.is,https://github.com/hail-is/hail/pull/4664,1,['assert'],['asserts']
Testability,"to replicate:. ```python; def tmt2(table, row_key, col_key, row_fields=[], col_fields=[], n_partitions=None):; ht = table.key_by(). non_entry_fields = set(itertools.chain(row_key, col_key, row_fields, col_fields)); entry_fields = [x for x in ht.row if x not in non_entry_fields]. if not entry_fields:; raise ValueError(...). col_data = hl.rbind(; hl.array(; hl.dict(; ht.aggregate(; hl.agg.collect_as_set(; (ht.row.select(*col_key),; ht.row.select(*col_fields)))))),; lambda data: hl.struct(data=data,; key_to_index=hl.dict(hl.range(0, hl.len(data)).map(lambda i: (data[i][0], i)))); ). col_data_uid = Env.get_uid(); ht = ht.drop(*col_fields); ht = ht.annotate_globals(**{col_data_uid: col_data}). entries_uid = Env.get_uid(); ht = (ht.group_by(*row_key); .partition_hint(n_partitions); .aggregate(**{x: hl.agg._prev_nonnull(ht[x]) for x in row_fields},; **{entries_uid: hl.rbind(; hl.dict(hl.agg.collect((ht[col_data_uid]['key_to_index'][ht.row.select(*col_key)],; ht.row.select(*entry_fields)))),; lambda entry_dict: hl.range(0, hl.len(ht[col_data_uid]['key_to_index'])); .map(lambda i: entry_dict.get(i))); })); ht = ht.annotate_globals(; **{col_data_uid: hl.array(ht[col_data_uid]['data'].map(lambda elt: hl.struct(**elt[0], **elt[1])))}); return ht._unlocalize_entries(entries_uid, col_data_uid, col_key). N, M = 50, 50; mt = hl.utils.range_matrix_table(N, M); mt = mt.key_cols_by(s = 'Col' + hl.str(M - mt.col_idx)); mt = mt.annotate_cols(c1 = hl.rand_bool(0.5)); mt = mt.annotate_rows(r1 = hl.rand_bool(0.5)); mt = mt.annotate_entries(e1 = hl.rand_bool(0.5)). re_mt = tmt2(mt.entries(), ['row_idx'], ['s'], ['r1'], ['col_idx', 'c1']); new_col_order = re_mt.col_idx.collect(); mapping = [t[1] for t in sorted([(old, new) for new, old in enumerate(new_col_order)])]. assert re_mt.choose_cols(mapping).drop('col_idx')._same(mt.drop('col_idx')); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5345:1772,assert,assert,1772,https://hail.is,https://github.com/hail-is/hail/issues/5345,1,['assert'],['assert']
Testability,"to replicate:; ```python; In [2]: mt = hl.import_vcf('src/test/resources/sample.vcf'); In [3]: mt.aggregate_entries(hl.agg.counter(hl.agg.explode(mt.PL))); ```; ```; Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 2.0 failed 1 times, most recent failure: Lost task 0.0 in stage 2.0 (TID 2, localhost, executor driver): java.lang.NullPointerException; 	at is.hail.codegen.generated.C1.apply(Unknown Source); 	at is.hail.codegen.generated.C1.apply(Unknown Source); 	at is.hail.expr.CM$$anonfun$runWithDelayedValues$1.apply(CM.scala:84); 	at is.hail.expr.CM$$anonfun$runWithDelayedValues$1.apply(CM.scala:82); 	at is.hail.expr.AST$$anonfun$runAggregator$1.apply(AST.scala:270); 	at is.hail.expr.AST$$anonfun$runAggregator$1.apply(AST.scala:268); 	at is.hail.methods.Aggregators$$anonfun$11.apply(Aggregators.scala:304); 	at is.hail.methods.Aggregators$$anonfun$11.apply(Aggregators.scala:300); 	at is.hail.variant.MatrixTable$$anonfun$82$$anonfun$apply$64$$anonfun$apply$65.apply(MatrixTable.scala:1743); 	at is.hail.variant.MatrixTable$$anonfun$82$$anonfun$apply$64$$anonfun$apply$65.apply(MatrixTable.scala:1741); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at is.hail.annotations.UnsafeIndexedSeq.foreach(UnsafeRow.scala:51); 	at is.hail.variant.MatrixTable$$anonfun$82$$anonfun$apply$64.apply(MatrixTable.scala:1741); 	at is.hail.variant.MatrixTable$$anonfun$82$$anonfun$apply$64.apply(MatrixTable.scala:1734); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at is.hail.variant.MatrixTable$$anonfun$82.apply(MatrixTable.scala:1734); 	at is.hail.variant.MatrixTable$$anonfun$82.apply(MatrixTable.scala:1728); 	at org.apache.spark.rdd.RDD$$anonfun$mapPartitions$1$$anonfun$apply$23.apply(RDD.scala:79",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3276:58,test,test,58,https://hail.is,https://github.com/hail-is/hail/issues/3276,1,['test'],['test']
Testability,"to solve Duncan's problems in time for conference, still needs docs and tests but I think the math is right. PRing now so @danking and I can hack on it tomorrow",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4501:72,test,tests,72,https://hail.is,https://github.com/hail-is/hail/pull/4501,1,['test'],['tests']
Testability,"today in a fairly simple and isolated test. I'm beginning to wonder if this is just a new form of transient error. We pick 22 random characters from a 62 character alphabet. Odds of collision are minuscule:; ```; In [2]: (1/62)**22; Out[2]: 3.693029961058969e-40; ```; I verified `SecureRandom` with no constructor uses a randomly chosen seed. There's three exceptions there (all the same one). The deepest one came during a write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:1006,test,testSeekMoreThanMaxInt,1006,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,2,['test'],['testSeekMoreThanMaxInt']
Testability,too bad I haven't added a PCA benchmark yet :(,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6666#issuecomment-512274651:30,benchmark,benchmark,30,https://hail.is,https://github.com/hail-is/hail/pull/6666#issuecomment-512274651,1,['benchmark'],['benchmark']
Testability,"tools:htsjdk's releases</a>.</em></p>; <blockquote>; <h3>3.0.4</h3>; <p>Hotfix for <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1637"">#1637</a></p>; <p>This is a single change e2943b78ff595e144281b8a3c126be5a4d70085d which reverts <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1593"">#1593</a></p>; <h2>3.0.3</h2>; <h1>Serious Known issue</h1>; <p>We've introduced a serious bug by making the VCF sort order more stable in many situations when outputting vcfs. This introduced the side effect of causing many valid VCF's to be incorrectly flagged as invalid when reading existing VCFS.</p>; <p><strong>We recommend against updating to this version, prefer 3.0.4 or 3.0.2</strong></p>; <h2>What's Changed</h2>; <ul>; <li>Use allele info in VariantContext comparisons for stable sorts by <a href=""https://github.com/clintval""><code>@​clintval</code></a> in <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/pull/1593"">samtools/htsjdk#1593</a></li>; <li>Fix HtsCRAMCodec test data provider. by <a href=""https://github.com/cmnbroad""><code>@​cmnbroad</code></a> in <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/pull/1632"">samtools/htsjdk#1632</a></li>; <li>Allow the BAM index to be up to 5 seconds older than the BAM before e… by <a href=""https://github.com/tfenne""><code>@​tfenne</code></a> in <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/pull/1634"">samtools/htsjdk#1634</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/samtools/htsjdk/compare/3.0.2...3.0.3"">https://github.com/samtools/htsjdk/compare/3.0.2...3.0.3</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/samtools/htsjdk/commit/e2943b78ff595e144281b8a3c126be5a4d70085d""><code>e2943b7</code></a> Revert &quot;Use allele info in VariantContext comparisons for stable sorts (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/159",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12700:1258,test,test,1258,https://hail.is,https://github.com/hail-is/hail/pull/12700,1,['test'],['test']
Testability,"top_level references are references to things that should be in the EvalContext. top_level=False are references intermediate variables. Inside the view_join_x stuff, we constructed top_level=False references to things like `row` and `va`, so these threw errors if used inside aggregators. I'll add a test for this.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3055#issuecomment-369985720:300,test,test,300,https://hail.is,https://github.com/hail-is/hail/pull/3055#issuecomment-369985720,1,['test'],['test']
Testability,"tors and matrices with primary dimension the number of samples (as in QR), and because BLAS3 matrix multiplication is fast. I also checked that upping to 8 covariates didn't balance things out. It didn't. The fancy approach basically trades X.t * X and generic k-dim solve for a QR on X and triangular k-dim solve...better for larger k and smaller n. ```; Standard. 2 cov; Lin 7s; Score 54.5s; LRT 93s; Wald 90s. 2 cov, QR / TriSolve; Lin 7.42s; Score 53.6s, 53.1s; LRT 2m06s, 1m59s; Wald 1m53s, 1m54s. 8 cov; Lin 7.16s; Score 59.1s; LRT 2m25s, 2m20s, 2m26s; Wald 2m27s, 2m27s, 2m25s. 8 cov, QR / TriSolve; Lin 7.76s; Score 52.7s; LRT 3m30s; Wald 3m26s; ```. For Firth, since I'm using QR anyway, may as will use TriSolve (though the timing is not particularly effected even with 8 covariates):. ```; 2 cov:; Firth 5m 10s, 4m55s, 5m7s. 8 cov:; Firth 10m37s, 10m50s, 10m28s; ```. For reference, here's the core logic of the QR approach. This corresponds to another version of LogisticRegressionFit where I tried to reduce unnecessary computation, see below. ```; while (!converged && !exploded && iter <= maxIter) {; try {; val mu = sigmoid(X * b); val sqrtW = sqrt(mu :* (1d - mu)); val QR = qr.reduced(X(::, *) :* sqrtW). deltaB = TriSolve(QR.r, QR.q.t * ((y - mu) :/ sqrtW)). if (max(abs(deltaB)) < tol) {; converged = true; if (computeScoreR) {; optScore = Some(X.t * (y - mu)); optR = Some(QR.r); }; if (computeSe) {; val invR = inv(QR.r) // could speed up inverting as upper triangular, or avoid altogether as 1 / se(-1) = fit.fisherSqrt(-1, -1); optSe = Some(norm(invR(*, ::))); }; if (computeLogLkld); optLogLkhd = Some(sum(breeze.numerics.log((y :* mu) + ((1d - y) :* (1d - mu))))); } else {; iter += 1; b += deltaB; }; }; ```. ```; case class LogisticRegressionFit(; b: DenseVector[Double],; optScore: Option[DenseVector[Double]],; optR: Option[DenseMatrix[Double]],; optSe: Option[DenseVector[Double]],; optLogLkhd: Option[Double],; nIter: Int,; converged: Boolean,; exploded: Boolean); ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1375#issuecomment-279532833:1872,log,log,1872,https://hail.is,https://github.com/hail-is/hail/pull/1375#issuecomment-279532833,2,"['Log', 'log']","['LogisticRegressionFit', 'log']"
Testability,"tp://127.0.0.1:5000/pod_changed', json={'pod_name': name}, timeout=120); File ""/usr/lib/python3.6/site-packages/requests/api.py"", line 116, in post; return request('post', url, data=data, json=json, **kwargs); File ""/usr/lib/python3.6/site-packages/requests/api.py"", line 60, in request; return session.request(method=method, url=url, **kwargs); File ""/usr/lib/python3.6/site-packages/requests/sessions.py"", line 524, in request; resp = self.send(prep, **send_kwargs); File ""/usr/lib/python3.6/site-packages/requests/sessions.py"", line 637, in send; r = adapter.send(request, **kwargs); File ""/usr/lib/python3.6/site-packages/requests/adapters.py"", line 529, in send; raise ReadTimeout(e, request=request); requests.exceptions.ReadTimeout: HTTPConnectionPool(host='127.0.0.1', port=5000): Read timed out. (read timeout=120); INFO | 2018-10-23 03:58:08,124 | server.py | run_forever:416 | run_forever: run target kube_event_loop; INFO | 2018-10-23 03:59:30,729 | server.py | mark_complete:175 | wrote log for job 153 to logs/job-153.log; INFO | 2018-10-23 03:59:30,730 | server.py | set_state:141 | job 153 changed state: Created -> Complete; INFO | 2018-10-23 03:59:30,730 | server.py | mark_complete:184 | job 153 complete, exit_code 2; INFO | 2018-10-23 03:59:30,737 | _internal.py | _log:88 | 127.0.0.1 - - [23/Oct/2018 03:59:30] ""POST /pod_changed HTTP/1.1"" 204 -; INFO | 2018-10-23 03:59:30,806 | _internal.py | _log:88 | 10.56.142.33 - - [23/Oct/2018 03:59:30] ""GET /jobs HTTP/1.1"" 200 -; INFO | 2018-10-23 03:59:30,815 | _internal.py | _log:88 | 127.0.0.1 - - [23/Oct/2018 03:59:30] ""POST /pod_changed HTTP/1.1"" 204 -; INFO | 2018-10-23 03:59:30,816 | _internal.py | _log:88 | 127.0.0.1 - - [23/Oct/2018 03:59:30] ""POST /pod_changed HTTP/1.1"" 204 -; INFO | 2018-10-23 03:59:30,817 | server.py | refresh_k8s_state:385 | started k8s state refresh; INFO | 2018-10-23 03:59:31,183 | server.py | _create_pod:80 | created pod name: job-99-f4gwv for job 99; INFO | 2018-10-23 03:59:31,191 | server.py ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4608#issuecomment-432083038:2163,log,log,2163,https://hail.is,https://github.com/hail-is/hail/issues/4608#issuecomment-432083038,2,['log'],"['log', 'logs']"
Testability,"tp://dev.hail.is/t/proposal-for-aggregators/93/3. Builds on: https://github.com/hail-is/hail/pull/3552. I still need to finish converting some tests from ExtractAggregatorSuite (they are currently commented out). Old-style aggregators (filter, map, flatMap) are expanded at toIR conversion time to ApplyAggOp and SeqOp. ApplyAggOp returns the result of the aggregation. ApplyAggOp's first argument, which must be of type TVoid, is the expression to run for each element being aggregated over. SeqOp merges a computed value into the RegionValueAggregator. I added a AggSignature that holds the AggOp, type being aggregated over and the RegionValueAggregator constructor argument types. This is stored by the ApplyAggOp and the SeqOp. @tpoterba I believe TAggregable is no longer used in the IR code and can go away when the AST gets ripped out. @danking I added some IR testing logic to TestUtils. Namely, `eval` evaluates an IR with environments, args and/or aggregations with a single call (and verifies that the interpret with and without optimization and compiler all agree). There are also functions for asserting the result of aggregations, for example:. ```; val aggSig = AggSignature(Sum(), TFloat64(), FastSeq()); assertEvalsTo(ApplyAggOp(; SeqOp(ApplyBinaryPrimOp(Multiply(), Ref(""a"", TFloat64()), Ref(""b"", TFloat64())), I32(0), aggSig),; FastSeq(), aggSig),; (FastIndexedSeq(Row(1.0, 10.0), Row(10.0, 10.0), Row(null, 10.0)), TStruct(""a"" -> TFloat64(), ""b"" -> TFloat64())),; 110.0); ```. The line:. > (FastIndexedSeq(Row(1.0, 10.0), ...), TStruct(""a"" -> TFloat64(), ""b"" -> TFloat64())),. is the IndexedSeq of values to aggregate over, along with their signature. The struct type is used to build the scope in which aggregators are evaluated. (A little noisy because of the aggregator syntax. It's noisier than I'd like it to be.). This nicely paves the way for aggregators with multi-argument seqOps (like takeBy) that were previously handled by lambdas and we didn't have a clear plan for.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3570:1168,assert,asserting,1168,https://hail.is,https://github.com/hail-is/hail/pull/3570,2,['assert'],"['assertEvalsTo', 'asserting']"
Testability,"tps://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li>Fix issue 2801 - Only resolve hostname once by <a href=""https://github.com/spkrka""><code>@​spkrka</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li>[SECURITY] Fix Zip Slip Vulnerability; by <a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li>GITHUB-2807 - Failsafe buildStackTrace by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2808"">cbeust/testng#2808</a></li>; <li>Prevent overlogging of debug msgs in Graph impl by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2813"">cbeust/testng#2813</a></li>; <li>Streamline dataprovider invoking in abstract classes by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2814"">cbeust/testng#2814</a></li>; <li>Streamline TestResult due to expectedExceptions by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2815"">cbeust/testng#2815</a></li>; <li>Unexpected test runs count with retry analyzer by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2816"">cbeust/testng#2816</a></li>; <li>Make PackageUtils compliant with JPMS by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2817"">cbeust/testng#2817</a></li>; <li>Ability to retry a data provider during failures by <a href=""https://github.com/krmahad",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:2317,test,testng,2317,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"tps://github.com/thockin""><code>@​thockin</code></a>)</li>; <li>Added a feature gate <code>StatefulSetAutoDeletePVC</code>, which allows PVCs automatically created for StatefulSet pods to be automatically deleted. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/99728"">kubernetes/kubernetes#99728</a>, <a href=""https://github.com/mattcary""><code>@​mattcary</code></a>)</li>; <li>Client-go impersonation config can specify a UID to pass impersonated uid information through in requests. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/104483"">kubernetes/kubernetes#104483</a>, <a href=""https://github.com/margocrawf""><code>@​margocrawf</code></a>)</li>; <li>Create HPA v2 from v2beta2 with some fields changed. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/102534"">kubernetes/kubernetes#102534</a>, <a href=""https://github.com/wangyysde""><code>@​wangyysde</code></a>) [SIG API Machinery, Apps, Auth, Autoscaling and Testing]</li>; <li>Ephemeral containers graduated to beta and are now available by default. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/105405"">kubernetes/kubernetes#105405</a>, <a href=""https://github.com/verb""><code>@​verb</code></a>)</li>; <li>Fix kube-proxy regression on UDP services because the logic to detect stale connections was not considering if the endpoint was ready. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/106163"">kubernetes/kubernetes#106163</a>, <a href=""https://github.com/aojea""><code>@​aojea</code></a>) [SIG API Machinery, Apps, Architecture, Auth, Autoscaling, CLI, Cloud Provider, Contributor Experience, Instrumentation, Network, Node, Release, Scalability, Scheduling, Storage, Testing and Windows]</li>; <li>If a conflict occurs when creating an object with <code>generateName</code>, the server now returns an &quot;AlreadyExists&quot; error with a retry option. (<a href=""https://github-redirect.depend",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11957:3405,Test,Testing,3405,https://hail.is,https://github.com/hail-is/hail/pull/11957,1,['Test'],['Testing']
Testability,"tps://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-logging/blob/main/CHANGELOG.md"">google-cloud-logging's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields ext",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:5994,log,logging,5994,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"tr, *, oauth2_client: dict) -> Optional[str]:; + oauth2_client_audience = oauth2_client['installed']['client_id']; + try:; + userinfo = await retry_transient_errors(; + session.get_read_json,; + 'https://www.googleapis.com/oauth2/v3/tokeninfo',; + params={'access_token': access_token},; + ); + if userinfo['aud'] != oauth2_client_audience and userinfo['aud'] != userinfo['sub']:; + return None; +; + email = userinfo['email']; + if email.endswith('iam.gserviceaccount.com'):; + return userinfo['sub']; + # We don't currently track user's unique GCP IAM ID (sub) in the database, just their email.; + return email; + except httpx.ClientResponseError as e:; + if e.status in (400, 401):; + return None; + raise; +; +; +class AadJwk(TypedDict):; + kid: str; + x5c: List[str]; +; ; class AzureFlow(Flow):; + _aad_keys: Optional[List[AadJwk]] = None; +; def __init__(self, credentials_file: str):; with open(credentials_file, encoding='utf-8') as f:; data = json.loads(f.read()); ; tenant_id = data['tenant']; authority = f'https://login.microsoftonline.com/{tenant_id}'; - client = msal.ConfidentialClientApplication(data['appId'], data['password'], authority); -; - self._client = client; + self._client = msal.ConfidentialClientApplication(data['appId'], data['password'], authority); self._tenant_id = tenant_id; ; def initiate_flow(self, redirect_uri: str) -> dict:; @@ -107,10 +170,31 @@ class AzureFlow(Flow):; ; return FlowResult(token['id_token_claims']['oid'], token['id_token_claims']['preferred_username'], token); ; -; -def get_flow_client(credentials_file: str) -> Flow:; - cloud = get_global_config()['cloud']; - if cloud == 'azure':; - return AzureFlow(credentials_file); - assert cloud == 'gcp'; - return GoogleFlow(credentials_file); + @staticmethod; + def perform_installed_app_login_flow(oauth2_client: Dict[str, Any]) -> Dict[str, Any]:; + tenant_id = oauth2_client['tenant']; + authority = f'https://login.microsoftonline.com/{tenant_id}'; + app = msal.PublicClientApplication(oauth2",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13131#issuecomment-1668558329:4762,log,login,4762,https://hail.is,https://github.com/hail-is/hail/pull/13131#issuecomment-1668558329,1,['log'],['login']
Testability,"transmitted. In `start.py` we just use exec-style invocation, so there's no equivalent issue. ```; 7c7; < --properties=^|||^spark:spark.task.maxFailures=20|||spark:spark.driver.extraJavaOptions=-Xss4M|||spark:spark.executor.extraJavaOptions=-Xss4M|||spark:spark.speculation=true|||hdfs:dfs.replication=1|||dataproc:dataproc.logging.stackdriver.enable=false|||dataproc:dataproc.monitoring.stackdriver.enable=false|||spark:spark.driver.memory=36g|||yarn:yarn.nodemanager.resource.memory-mb=29184|||yarn:yarn.scheduler.maximum-allocation-mb=14592|||spark:spark.executor.cores=4|||spark:spark.executor.memory=5837m|||spark:spark.executor.memoryOverhead=8755m|||spark:spark.memory.storageFraction=0.2|||spark:spark.executorEnv.HAIL_WORKER_OFF_HEAP_MEMORY_PER_CORE_MB=3648 \; ---; > '--properties=^|||^spark:spark.task.maxFailures=20|||spark:spark.driver.extraJavaOptions=-Xss4M|||spark:spark.executor.extraJavaOptions=-Xss4M|||spark:spark.speculation=true|||hdfs:dfs.replication=1|||dataproc:dataproc.logging.stackdriver.enable=false|||dataproc:dataproc.monitoring.stackdriver.enable=false|||spark:spark.driver.memory=36g|||yarn:yarn.nodemanager.resource.memory-mb=29184|||yarn:yarn.scheduler.maximum-allocation-mb=14592|||spark:spark.executor.cores=4|||spark:spark.executor.memory=5837m|||spark:spark.executor.memoryOverhead=8755m|||spark:spark.memory.storageFraction=0.2|||spark:spark.executorEnv.HAIL_WORKER_OFF_HEAP_MEMORY_PER_CORE_MB=3648' \; 9c9; < --metadata=^|||^WHEEL=gs://hail-30-day/hailctl/dataproc/dking-dev/0.2.126-a51eabd65859/hail-0.2.126-py3-none-any.whl|||PKGS=aiodns==2.0.0|aiohttp==3.9.1|aiosignal==1.3.1|async-timeout==4.0.3|attrs==23.1.0|avro==1.11.3|azure-common==1.1.28|azure-core==1.29.5|azure-identity==1.15.0|azure-mgmt-core==1.4.0|azure-mgmt-storage==20.1.0|azure-storage-blob==12.19.0|bokeh==3.3.1|boto3==1.33.1|botocore==1.33.1|cachetools==5.3.2|certifi==2023.11.17|cffi==1.16.0|charset-normalizer==3.3.2|click==8.1.7|commonmark==0.9.1|contourpy==1.2.0|cryptography==41.0.7|d",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14127:1238,log,logging,1238,https://hail.is,https://github.com/hail-is/hail/pull/14127,1,['log'],['logging']
Testability,"ts for STG78 GA (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/20491"">#20491</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/e572c97e53510572b0a515547bb711a9c7282ae5""><code>e572c97</code></a> [Storage]fix live test (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/20463"">#20463</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/d3d7e3e719a079415b0d955112b7e185791b5f0c""><code>d3d7e3e</code></a> Fix type annotation in azure.storage.blob (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/20084"">#20084</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/7e7f55233be72e999ffee255697665921df14f76""><code>7e7f552</code></a> keyvault and storage have a conflict between mindependency and what local azu...</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/a152bfbd45103013f6ca27dbbded03913cd43dc0""><code>a152bfb</code></a> [Storage]fix live test (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/20217"">#20217</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/Azure/azure-sdk-for-python/compare/azure-storage-blob_12.8.1...azure-storage-blob_12.9.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=azure-storage-blob&package-manager=pip&previous-version=12.8.1&new-version=12.9.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11484:2809,test,test,2809,https://hail.is,https://github.com/hail-is/hail/pull/11484,2,['test'],['test']
Testability,"ts for Sanic, 45 for aiohttp. Sanic Run 1:; Running 1m test @ http://localhost:8000/db; 12 threads and 2000 connections; Thread Stats Avg Stdev Max +/- Stdev; Latency 640.64ms 947.31ms 7.97s 85.89%; Req/Sec 385.62 137.55 2.32k 77.21%; 274143 requests in 1.00m, 41.70MB read; Socket errors: connect 0, read 2072, write 0, timeout 26; Requests/sec: 4563.11; Transfer/sec: 710.67KB. Sanic Run 2:; alexkotlar:~/projects/aiohttp-vs-sanic-vs-japronto:$ wrk -d 60 -c 2000 -t 12 --timeout 8 http://localhost:8000/db; Running 1m test @ http://localhost:8000/db; 12 threads and 2000 connections; Thread Stats Avg Stdev Max +/- Stdev; Latency 615.91ms 878.25ms 7.86s 85.85%; Req/Sec 391.30 118.76 1.61k 72.83%; 278943 requests in 1.00m, 42.46MB read; Socket errors: connect 0, read 2079, write 0, timeout 12; Requests/sec: 4642.59; Transfer/sec: 723.58KB. Sanic Run 3 (very large background task spike in last 1-2s of run):; alexkotlar:~/projects/aiohttp-vs-sanic-vs-japronto:$ wrk -d 60 -c 2000 -t 12 --timeout 8 http://localhost:8000/db; Running 1m test @ http://localhost:8000/db; 12 threads and 2000 connections; Thread Stats Avg Stdev Max +/- Stdev; Latency 543.65ms 839.00ms 7.93s 87.81%; Req/Sec 392.47 118.69 1.42k 73.81%; 279206 requests in 1.00m, 42.54MB read; Socket errors: connect 0, read 2101, write 0, timeout 35; Requests/sec: 4646.20; Transfer/sec: 724.97KB. Aiohttp Run 1:; alexkotlar:~/projects/aiohttp-vs-sanic-vs-japronto:$ wrk -d 60 -c 2000 -t 12 --timeout 8 http://localhost:8000/db; Running 1m test @ http://localhost:8000/db; 12 threads and 2000 connections; Thread Stats Avg Stdev Max +/- Stdev; Latency 747.49ms 1.00s 7.88s 86.77%; Req/Sec 280.95 103.65 1.60k 79.52%; 199147 requests in 1.00m, 36.47MB read; Socket errors: connect 0, read 2058, write 1, timeout 45; Requests/sec: 3313.70; Transfer/sec: 621.36KB. Aiohttp Run 2:; Running 1m test @ http://localhost:8000/db; 12 threads and 2000 connections; Thread Stats Avg Stdev Max +/- Stdev; Latency 696.00ms 967.04ms 7.93s 86.48%; ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030:4841,test,test,4841,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030,2,['test'],['test']
Testability,"ts pod via nginx). We're failing on that last step. It appears that the repository creation succeeded, the response to that REST call was a successful looking JSON object (which indicates a create repository with the expected name, `REPO_NAME=ci-test-p4a9fxo7`) [1]. It is unclear if repository deletion succeeded [2], I should find a way to make curl print the HTTP status code returned by cluster deletion. FWIW, the repository appears to be deleted now (https://github.com/hail-ci-test/ci-test-p4a9fxo7), and, AFAIK, no other part of our system deletes these repositories. [1]:; ```; {; ""id"": 152339517,; ""node_id"": ""MDEwOlJlcG9zaXRvcnkxNTIzMzk1MTc="",; ""name"": ""ci-test-p4a9fxo7"",; ""full_name"": ""hail-ci-test/ci-test-p4a9fxo7"",; ""private"": false,; ""owner"": {; ""login"": ""hail-ci-test"",; ""id"": 43152710,; ""node_id"": ""MDEyOk9yZ2FuaXphdGlvbjQzMTUyNzEw"",; ""avatar_url"": ""https://avatars1.githubusercontent.com/u/43152710?v=4"",; ""gravatar_id"": """",; ""url"": ""https://api.github.com/users/hail-ci-test"",; ""html_url"": ""https://github.com/hail-ci-test"",; ""followers_url"": ""https://api.github.com/users/hail-ci-test/followers"",; ""following_url"": ""https://api.github.com/users/hail-ci-test/following{/other_user}"",; ""gists_url"": ""https://api.github.com/users/hail-ci-test/gists{/gist_id}"",; ""starred_url"": ""https://api.github.com/users/hail-ci-test/starred{/owner}{/repo}"",; ""subscriptions_url"": ""https://api.github.com/users/hail-ci-test/subscriptions"",; ""organizations_url"": ""https://api.github.com/users/hail-ci-test/orgs"",; ""repos_url"": ""https://api.github.com/users/hail-ci-test/repos"",; ""events_url"": ""https://api.github.com/users/hail-ci-test/events{/privacy}"",; ""received_events_url"": ""https://api.github.com/users/hail-ci-test/received_events"",; ""type"": ""Organization"",; ""site_admin"": false; },; ""html_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""description"": null,; ""fork"": false,; ""url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7"",; ""forks_url"": ""https://api.github",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:1294,test,test,1294,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,1,['test'],['test']
Testability,"ttps://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/trees{/sha}"",; ""statuses_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/languages"",; ""stargazers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/comments{/number}"",; ""issue_comment_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/comments{/number}"",; ""contents_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contents/{+path}"",; ""compare_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/compare/{base}...{head}"",; ""merges_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/merges"",. 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; 100 7030 100 6999 100 31 9306 41 --:--:-- --:--:-- --:--:-- 9319; ""archive_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/{archive_format}{/ref}"",; ""downloads_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/downloads"",; ""issues_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues{/number}"",; ""pulls_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/pulls{/number}"",; ""mileston",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:4266,test,test,4266,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"ttps://avatars1.githubusercontent.com/u/43152710?v=4"",; ""gravatar_id"": """",; ""url"": ""https://api.github.com/users/hail-ci-test"",; ""html_url"": ""https://github.com/hail-ci-test"",; ""followers_url"": ""https://api.github.com/users/hail-ci-test/followers"",; ""following_url"": ""https://api.github.com/users/hail-ci-test/following{/other_user}"",; ""gists_url"": ""https://api.github.com/users/hail-ci-test/gists{/gist_id}"",; ""starred_url"": ""https://api.github.com/users/hail-ci-test/starred{/owner}{/repo}"",; ""subscriptions_url"": ""https://api.github.com/users/hail-ci-test/subscriptions"",; ""organizations_url"": ""https://api.github.com/users/hail-ci-test/orgs"",; ""repos_url"": ""https://api.github.com/users/hail-ci-test/repos"",; ""events_url"": ""https://api.github.com/users/hail-ci-test/events{/privacy}"",; ""received_events_url"": ""https://api.github.com/users/hail-ci-test/received_events"",; ""type"": ""Organization"",; ""site_admin"": false; },; ""html_url"": ""https://github.com/hail-ci-test/ci-test-p4a9fxo7"",; ""description"": null,; ""fork"": false,; ""url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7"",; ""forks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/forks"",; ""keys_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/keys{/key_id}"",; ""collaborators_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/collaborators{/collaborator}"",; ""teams_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/teams"",; ""hooks_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/hooks"",; ""issue_events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/events{/number}"",; ""events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/events"",; ""assignees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/assignees{/user}"",; ""branches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:2138,test,test,2138,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"ttps://github.com/Azure/azure-sdk-for-python/commit/e40d3e1d985cee13a2e0d070fb8e04958905f468""><code>e40d3e1</code></a> [storage.blob] Remove aiohttp as dependency for storage.blob.aio (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24965"">#24965</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/7915719f211cc1217dfca6f3973a2b1f04c2e3f5""><code>7915719</code></a> [Storage] Prepare for STG83 GA release (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25040"">#25040</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/155eb8b69b3cd2f8ef992cf1436bf2751769ac42""><code>155eb8b</code></a> [Storage] Add <code>progress_hook</code> to file-share upload/download (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24997"">#24997</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/66dd3bef2d6e531e83cefd65be4cbbf41fcf2531""><code>66dd3be</code></a> [Storage] Fix more flaky lease tests (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/25011"">#25011</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/030141734a239fa6fb1aa7a8c43d322c82753510""><code>0301417</code></a> [Storage] Add argument to perf tests to use client-side encryption (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/24978"">#24978</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/Azure/azure-sdk-for-python/compare/azure-storage-blob_12.11.0...azure-storage-blob_12.13.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=azure-storage-blob&package-manager=pip&previous-version=12.11.0&new-version=12.13.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12109:4023,test,tests,4023,https://hail.is,https://github.com/hail-is/hail/pull/12109,1,['test'],['tests']
Testability,"ttps://www.github.com/googleapis/python-storage/commit/f81a2d054616c1ca1734997a16a8f47f98ab346b"">f81a2d0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>raise a ValueError in BucketNotification.create() if a topic name is not set (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/617"">#617</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/9dd78df444d21af51af7858e8958b505a26c0b79"">9dd78df</a>)</li>; </ul>; <h3>Documentation</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/googleapis/python-storage/commit/8622440f216a9de36698f6af67af249a52134bd7""><code>8622440</code></a> chore(main): release 2.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/695"">#695</a>)</li>; <li><a href=""https://github.com/googleapis/python-storage/commit/46c3e66862b536393503ad213a30670f2f5e752e""><code>46c3e66</code></a> chore(python): Noxfile recognizes that tests can live in a folder (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/696"">#696</a>)</li>; <li><a href=""https://github.com/googleapis/python-storage/commit/8789afaaa1b2bd6f03fae72e3d87ce004ec10129""><code>8789afa</code></a> feat: avoid authentication with storage emulator (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/679"">#679</a>)</li>; <li><a href=""https://github.com/googleapis/python-storage/commit/71a453531603b442e26f1c78ab519cc0248e16c8""><code>71a4535</code></a> samples: add async upload sample (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/665"">#665</a>)</li>; <li><a href=""https://github.com/googleapis/python-storage/commit/4dafc815470480ce9de7f0357e331d3fbd0ae9b7""><code>4dafc81</code></a> feat: add turbo replication support and samples (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/622"">#622</a>)<",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11520:6055,test,tests,6055,https://hail.is,https://github.com/hail-is/hail/pull/11520,1,['test'],['tests']
Testability,"ttpserver/sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:442); 	at jdk.httpserver/sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:408); 	at java.base/java.lang.Thread.run(Thread.java:834). Hail version: 0.2.128-ce3ca9c77507; Error summary: SocketTimeoutException: connect timed out; File ""/home/edmund/.local/src/hail/hail/python/hail/backend/py4j_backend.py"", line 223, in _rpc; raise fatal_error_from_java_error_triplet(; File ""/home/edmund/.local/src/hail/hail/python/hail/backend/backend.py"", line 190, in execute; raise e.maybe_user_error(ir) from None; File ""/home/edmund/.local/src/hail/hail/python/hail/backend/backend.py"", line 190, in execute; raise e.maybe_user_error(ir) from None; File ""/home/edmund/.local/src/hail/hail/python/hail/table.py"", line 2002, in write; Env.backend().execute(; File ""/home/edmund/.local/src/hail/hail/python/hail/typecheck/check.py"", line 584, in wrapper; return __original_func(*args_, **kwargs_); File ""/home/edmund/.local/src/hail/test.py"", line 6, in <module>; ht.write('gs://ehigham-hail-tmp/test_hail_in_notebook.ht'); hail.utils.java.FatalError: SocketTimeoutException: connect timed out. Java stack trace:; java.io.IOException: Error getting access token from metadata server at: http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token; 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.util.CredentialFactory.getCredentialFromMetadataServiceAccount(CredentialFactory.java:254); 	at com.google.cloud.hadoop.repackaged.gcs.com.google.cloud.hadoop.util.CredentialFactory.getCredential(CredentialFactory.java:406); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.getCredential(GoogleHadoopFileSystemBase.java:1471); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.createGcsFs(GoogleHadoopFileSystemBase.java:1630); 	at com.google.cloud.hadoop.fs.gcs.GoogleHadoopFileSystemBase.configure(GoogleHadoopFileSystemBase.java:1612); 	at com.google.cloud.hadoop",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13904#issuecomment-1973731699:11447,test,test,11447,https://hail.is,https://github.com/hail-is/hail/issues/13904#issuecomment-1973731699,1,['test'],['test']
Testability,"tures attribute for CMS</li>; <li>Add RFC5275 providing CMS Symmetric Key Management and Distribution</li>; <li>Add RFC8702 providing SHAKE One-way Hash Functions in the CMS</li>; <li>Add RFC8708 providing HSS/LMS Hash-based Signature Algorithm for CMS</li>; <li>Advance copyright statement to the year 2020</li>; <li>Add RFC8769 providing CBOR and CBOR Sequence content types for CMS</li>; </ul>; <p>A full list of changes could be seen in the <a href=""https://github.com/pyasn1/pyasn1-modules/blob/main/CHANGES.txt"">CHANGELOG</a>.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pyasn1/pyasn1-modules/blob/main/CHANGES.txt"">pyasn1-modules's changelog</a>.</em></p>; <blockquote>; <h2>Revision 0.3.0, released 19-04-2023</h2>; <ul>; <li>Added support for Python 3.8, 3.9, 3.10, 3.11</li>; <li>Removed support for EOL Pythons 2.4, 2.5, 2.6, 3.2, 3.3, 3.4, 3.5</li>; <li>Added support for PyPy 3.7, 3.8, 3.9</li>; <li>Modernized packaging and testing. pyasn1-modules now uses <code>setup.cfg</code>,; <code>pyproject.toml</code>, <a href=""https://pypi.org/project/build/"">build</a>, and; GitHub Actions.</li>; <li>PyPI package ownership for <code>pyasn1</code> and <code>pyasn1-module</code> has been; transfered to <em>Christian Heimes</em> and <em>Simon Pichugin</em> in; [PyPI support ticket <a href=""https://redirect.github.com/pyasn1/pyasn1-modules/issues/2090"">#2090</a>](<a href=""https://redirect.github.com/pypa/pypi-support/issues/2090"">pypa/pypi-support#2090</a>).</li>; <li>The upstream repositories for <code>pyasn1</code> and <code>pyasn1-modules</code> are now; in the GitHub organization <a href=""https://github.com/pyasn1/"">https://github.com/pyasn1/</a>.</li>; <li>Added tox runner with a handful of basic jobs</li>; <li>Add RFC3125 providing Electronic Signature Policies</li>; <li>Add RFC5126 providing CMS Advanced Electronic Signatures (CAdES)</li>; <li>Removed support for EOL Pythons 2.4, 2.5, 2.6, 3.2, 3.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12928:3456,test,testing,3456,https://hail.is,https://github.com/hail-is/hail/pull/12928,1,['test'],['testing']
Testability,turn off lowered compile except for tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6321:36,test,tests,36,https://hail.is,https://github.com/hail-is/hail/pull/6321,1,['test'],['tests']
Testability,"tus.o build/ObjectArray.o build/PartitionIterators.o build/Region.o build/Upcalls.o build/Hadoop.o -o lib/darwin/libhail.dylib; > Building 33% > :compileScala. :compileScala; :processResources; :classes; :compileTestJava UP-TO-DATE; :compileTestScala; :processTestResources UP-TO-DATE; :testClasses; :test; Running test: Test method testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[0](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeStruct(WrappedArray((a,I32(1)), (b,ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))) PASSED; Running test: Test method testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2))))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[1](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),MakeTuple(WrappedArray(I32(1), ApplyBinaryPrimOp(Add(),Ref(x,int32),I32(2)))))) PASSED; Running test: Test method testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[2](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),If(True(),Ref(x,int32),I32(0)))) PASSED; Running test: Test method testForwardingOps[3](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyBinaryPrimOp(Add(),ApplyBinaryPrimOp(Add(),I32(2),Ref(x,int32)),I32(1))))(is.hail.expr.ir.ForwardLetsSuite). Gradle suite > Gradle test > is.hail.expr.ir.ForwardLetsSuite.testForwardingOps[3](Let(x,ApplyBinaryPrimOp(Add(),In(0,int32),In(0,int32)),ApplyBinaryPrimOp(Add(),ApplyBinaryPrimOp(Add(),I32(2),Ref(x,int32)),I32(1)))) PASSED; ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925:3200,test,test,3200,https://hail.is,https://github.com/hail-is/hail/pull/6083#issuecomment-492893925,1,['test'],['test']
Testability,"tute.hail.variant.GenotypeSuite.testGenotype PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.SampleQCSuite.testStoreAfterFilter PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.vcf.SplitSuite.SplitTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testD_$eq$eq PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testFlushDouble PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testFilterSamples PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testSame PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.VariantSuite.testVariant PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.gqDpStatsSuite.test PASSED; :check. BUILD SUCCESSFUL; ```. **TIMING**. import, write chr22; - Current master, best o",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:2208,test,test,2208,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,"tute.hail.variant.IntervalListSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.SampleQCSuite.testStoreAfterFilter PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.vcf.SplitSuite.SplitTest PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testD_$eq$eq PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testFlushDouble PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testFilterSamples PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testSame PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.variant.VariantSuite.testVariant PASSED. Gradle suite > Gradle test > org.broadinstitute.hail.methods.gqDpStatsSuite.test PASSED; :check. BUILD SUCCESSFUL; ```. **TIMING**. import, write chr22; - Current master, best of 3: 1m48.5s; - map-any, best of 3: 1m43.1s. read, filtervariants --keep -c 'va.info.MQ>20' filtergenotypes --keep -c 'g.gq > 20' count; - master, best of 3: 2m55s; - map-any, bes",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/158#issuecomment-173700450:2387,test,test,2387,https://hail.is,https://github.com/hail-is/hail/pull/158#issuecomment-173700450,1,['test'],['test']
Testability,tweak to logreg doc,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1412:9,log,logreg,9,https://hail.is,https://github.com/hail-is/hail/pull/1412,1,['log'],['logreg']
Testability,two tests were broken but have been fixed in another branch.; disabling for now.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2875:4,test,tests,4,https://hail.is,https://github.com/hail-is/hail/pull/2875,1,['test'],['tests']
Testability,"type; (namely, <code>module</code>, <code>keyword</code>, <code>operator</code>, <code>object</code>, <code>exception</code>,; <code>statement</code>, and <code>builtin</code>) in the :rst:dir:<code>index</code> directive, and; set the removal version to Sphinx 9. Patch by Adam Turner.</li>; </ul>; <h2>Features added</h2>; <ul>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11415"">#11415</a>: Add a checksum to JavaScript and CSS asset URIs included within; generated HTML, using the CRC32 algorithm.</li>; <li>:meth:<code>~sphinx.application.Sphinx.require_sphinx</code> now allows the version; requirement to be specified as <code>(major, minor)</code>.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11011"">#11011</a>: Allow configuring a line-length limit for object signatures, via; :confval:<code>maximum_signature_line_length</code> and the domain-specific variants.; If the length of the signature (in characters) is greater than the configured; limit, each parameter in the signature will be split to its own logical line.; This behaviour may also be controlled by options on object description; directives, for example :rst:dir:<code>py:function:single-line-parameter-list</code>.; Patch by Thomas Louf, Adam Turner, and Jean-François B.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/10983"">#10983</a>: Support for multiline copyright statements in the footer block.; Patch by Stefanie Molin</li>; <li><code>sphinx.util.display.status_iterator</code> now clears the current line; with ANSI control codes, rather than overprinting with space characters.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11431"">#11431</a>: linkcheck: Treat SSL failures as broken links.; Patch by Bénédikt Tran</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11157"">#11157</a>: Keep the <code>translated</code> attribute on translated nodes.</li>; <li><a href=""https://redirect.github.com",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13295:2643,log,logical,2643,https://hail.is,https://github.com/hail-is/hail/pull/13295,1,['log'],['logical']
Testability,"u linked, it is benchmarking the power of sleep. There is something deeply wrong with their results. Sanic has 1800 timeouts, vs 200 for aiohttp, and 3x the connection errors. Fine, so Sanic is super slow. But look at their non-db tests. Sanic is >2x as fast, 0 timeouts. They aren't using anything Sanic specific to query the database, and both use the same event loop. Adding asyncio Postgres to two programs that fundamentally differ mainly in how the handle http requests and responses, shows the one that is faster at http requests/responses (Sanic) becoming much slower, and in fact reversing its relationship to Aiohttp. This is strange to say the least. I was really curious about this, so I ran the bench. First, I upgraded Sanic to a recent version. Then I ran their test. In short, their results were not what I found. Sanic is 50% faster, and the timeouts are what you'd expect. 26 timeouts for Sanic, 45 for aiohttp. Sanic Run 1:; Running 1m test @ http://localhost:8000/db; 12 threads and 2000 connections; Thread Stats Avg Stdev Max +/- Stdev; Latency 640.64ms 947.31ms 7.97s 85.89%; Req/Sec 385.62 137.55 2.32k 77.21%; 274143 requests in 1.00m, 41.70MB read; Socket errors: connect 0, read 2072, write 0, timeout 26; Requests/sec: 4563.11; Transfer/sec: 710.67KB. Sanic Run 2:; alexkotlar:~/projects/aiohttp-vs-sanic-vs-japronto:$ wrk -d 60 -c 2000 -t 12 --timeout 8 http://localhost:8000/db; Running 1m test @ http://localhost:8000/db; 12 threads and 2000 connections; Thread Stats Avg Stdev Max +/- Stdev; Latency 615.91ms 878.25ms 7.86s 85.85%; Req/Sec 391.30 118.76 1.61k 72.83%; 278943 requests in 1.00m, 42.46MB read; Socket errors: connect 0, read 2079, write 0, timeout 12; Requests/sec: 4642.59; Transfer/sec: 723.58KB. Sanic Run 3 (very large background task spike in last 1-2s of run):; alexkotlar:~/projects/aiohttp-vs-sanic-vs-japronto:$ wrk -d 60 -c 2000 -t 12 --timeout 8 http://localhost:8000/db; Running 1m test @ http://localhost:8000/db; 12 threads and 2000 connect",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030:3856,test,test,3856,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030,2,['test'],['test']
Testability,"uality_scores=false performanceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false variant=(RodBinding name=variant source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.unannotated.vcf) snpEffFile=(RodBinding name=snpEffFile source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snpeff.vcf) dbsnp=(RodBinding name= source=UNBOUND) comp=[] resource=[] out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub annotation=[SnpEff] excludeAnnotation=[] group=[] expression=[] useAllAnnotations=false list=false alwaysAppendDbsnpId=false MendelViolationGenotypeQualityThreshold=0.0 requireStrictAlleleMatch=false filter_mismatching_base_and_quals=false""; ##VariantFiltration=""analysis_type=VariantFiltration input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.padded.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta nonDeterministicRandomSeed=false disableRandomization=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_leg",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:18521,stub,stubs,18521,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,"uals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false input=[(RodBinding name=input source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.unfiltered.vcf)] recal_file=(RodBinding name=recal_file source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.recal) tranches_file=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.tranches out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub ts_filter_level=98.5 ignore_filter=null mode=SNP filter_mismatching_base_and_quals=false""; ##CombineVariants=""analysis_type=CombineVariants input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.padded.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta nonDeterministicRandomSeed=false disableRandomization=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_legacy_downsampler=false baq=OFF baqGapOpenPenalty=40.0 fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false performanceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_qua",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:1885,stub,stubs,1885,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,uate.scala:45); at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:600); at is.hail.backend.spark.SparkBackend.$anonfun$execute$4(SparkBackend.scala:636); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:84); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3(SparkBackend.scala:631); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3$adapted(SparkBackend.scala:630); at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:78); at is.hail.utils.package$.using(package.scala:664); at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:78); at is.hail.utils.package$.using(package.scala:664); at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:65); at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$2(SparkBackend.scala:407); at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:55); at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:62); at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:393); at is.hail.backend.spark.SparkBackend.execute(SparkBackend.scala:630); at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:88); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750). Hail version: 0.2.127-d82c34a83360; Error summary: NullPointerException: null; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14249:6503,log,logTime,6503,https://hail.is,https://github.com/hail-is/hail/issues/14249,1,['log'],['logTime']
Testability,uate.scala:45); at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:601); at is.hail.backend.spark.SparkBackend.$anonfun$execute$4(SparkBackend.scala:637); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:84); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3(SparkBackend.scala:632); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3$adapted(SparkBackend.scala:631); at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:64); at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$2(SparkBackend.scala:407); at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:55); at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:62); at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:393); at is.hail.backend.spark.SparkBackend.execute(SparkBackend.scala:631); at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:89); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750). Hail version: 0.2.127-bb535cd096c5; Error summary: NegativeArraySizeException: nul,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:25240,log,logTime,25240,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['log'],['logTime']
Testability,uate.scala:45); at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:601); at is.hail.backend.spark.SparkBackend.$anonfun$execute$4(SparkBackend.scala:637); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:84); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3(SparkBackend.scala:632); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3$adapted(SparkBackend.scala:631); at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:64); at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$2(SparkBackend.scala:407); at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:55); at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:62); at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:393); at is.hail.backend.spark.SparkBackend.execute(SparkBackend.scala:631); at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:89); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750). java.lang.NegativeArraySizeException: null; at com.esotericsoftware.kryo.util.Iden,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:17712,log,logTime,17712,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['log'],['logTime']
Testability,"uate.scala:45); at is.hail.backend.spark.SparkBackend._execute(SparkBackend.scala:601); at is.hail.backend.spark.SparkBackend.$anonfun$execute$4(SparkBackend.scala:637); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:84); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3(SparkBackend.scala:632); at is.hail.backend.spark.SparkBackend.$anonfun$execute$3$adapted(SparkBackend.scala:631); at is.hail.backend.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:77); at is.hail.utils.package$.using(package.scala:665); at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:64); at is.hail.backend.spark.SparkBackend.$anonfun$withExecuteContext$2(SparkBackend.scala:407); at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:55); at is.hail.utils.ExecutionTimer$.logTime(ExecutionTimer.scala:62); at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:393); at is.hail.backend.spark.SparkBackend.execute(SparkBackend.scala:631); at is.hail.backend.BackendHttpHandler.handle(BackendServer.scala:89); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750); ```. Interesting thing is, when I tried to convert the exactly same data in local ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:7765,log,logTime,7765,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['log'],['logTime']
Testability,"ub-redirect.dependabot.com/cbeust/testng/pull/2824"">cbeust/testng#2824</a></li>; <li>Fix <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2770"">#2770</a>: FileAlreadyExistsException on copy by <a href=""https://github.com/melloware""><code>@​melloware</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li>JarFileUtils.delete(File f) throw actual exception (instead of FileNotFound) when file cannot be deleted <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2825"">#2825</a> by <a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; <li>GITHUB-2830 - Failsafe parameter.toString by <a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2831"">cbeust/testng#2831</a></li>; <li>Changing assertion message of the osgitest by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2832"">cbeust/testng#2832</a></li>; <li>hidden spotbugs in release <a href=""https://github-redirect.dependabot.com/cbeust/testng/issues/2829"">#2829</a> by <a href=""https://github.com/bobshie""><code>@​bobshie</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2833"">cbeust/testng#2833</a></li>; <li>Enhancing the Matrix by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2834"">cbeust/testng#2834</a></li>; <li>Avoid Compilation errors on Semeru JDK flavour. by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2835"">cbeust/testng#2835</a></li>; <li>Add addition yml extension by <a href=""https://githu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:5234,test,testng,5234,https://hail.is,https://github.com/hail-is/hail/pull/12665,3,"['assert', 'test']","['assertion', 'testng']"
Testability,"ub-redirect.dependabot.com/cbeust/testng/pull/2842"">cbeust/testng#2842</a></li>; <li>Deprecate support for running Spock Tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2846"">cbeust/testng#2846</a></li>; <li>Streamline dependsOnMethods for configurations by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2845"">cbeust/testng#2845</a></li>; <li>Ensure ITestContext available for JUnit4 tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2848"">cbeust/testng#2848</a></li>; <li>Deprecate support for running JUnit tests by <a href=""https://github.com/krmahadevan""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2849"">cbeust/testng#2849</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/gruenich""><code>@​gruenich</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li><a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li><a href=""https://github.com/spkrka""><code>@​spkrka</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li><a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li><a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> made their first contribution in <a href=""https://githu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:7981,test,testng,7981,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"ub.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24ffa881"">6fa1773</a>)</li>; <li>trace improvements (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/450"">#450</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:3541,log,logging,3541,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],['logging']
Testability,"ub.com/madzak/python-json-logger/commit/7c40f4abf46ee6f3b5f4290f12ff3e9872ff9892""><code>7c40f4a</code></a> removed typo around build badge</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/0837da313ea796e353b40b574e3f82591a698caf""><code>0837da3</code></a> added env to git ignore</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/c58d7d4660780e3d4872189f9889200917a8930f""><code>c58d7d4</code></a> manifest will now include readme for setup.py long description. tox and</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/03e831488ce55e4aaf886806b2c66082fb8c4027""><code>03e8314</code></a> Removed references to travis</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/e8a8a20e09d66bcce41010f29b37107eafae6ba4""><code>e8a8a20</code></a> fixed python version mapping and typo in tox name</li>; <li><a href=""https://github.com/madzak/python-json-logger/commit/d02050343b58d4585145b5f19b0499d01ef9a1d8""><code>d020503</code></a> initial conversion from travis</li>; <li>Additional commits viewable in <a href=""https://github.com/madzak/python-json-logger/compare/v0.1.11...v2.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=python-json-logger&package-manager=pip&previous-version=0.1.11&new-version=2.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate t",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11467:4370,log,logger,4370,https://hail.is,https://github.com/hail-is/hail/pull/11467,1,['log'],['logger']
Testability,"ub.com/saschagrunert""><code>@​saschagrunert</code></a>) [SIG Apps, Auth, CLI and Node]</li>; <li>Adds the ability to disable Accelerator/GPU metrics collected by Kubelet (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91930"">kubernetes/kubernetes#91930</a>, <a href=""https://github.com/RenaudWasTaken""><code>@​RenaudWasTaken</code></a>) [SIG Node]</li>; <li>Admission webhooks can now return warning messages that are surfaced to API clients, using the <code>.response.warnings</code> field in the admission review response. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92667"">kubernetes/kubernetes#92667</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery and Testing]</li>; <li>CertificateSigningRequest API conditions were updated:; <ul>; <li>a <code>status</code> field was added; this field defaults to <code>True</code>, and may only be set to <code>True</code> for <code>Approved</code>, <code>Denied</code>, and <code>Failed</code> conditions</li>; <li>a <code>lastTransitionTime</code> field was added</li>; <li>a <code>Failed</code> condition type was added to allow signers to indicate permanent failure; this condition can be added via the <code>certificatesigningrequests/status</code> subresource.</li>; <li><code>Approved</code> and <code>Denied</code> conditions are mutually exclusive</li>; <li><code>Approved</code>, <code>Denied</code>, and <code>Failed</code> conditions can no longer be removed from a CSR (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/90191"">kubernetes/kubernetes#90191</a>, <a href=""https://github.com/liggitt""><code>@​liggitt</code></a>) [SIG API Machinery, Apps, Auth, CLI and Node]</li>; </ul>; </li>; <li>Cluster admins can now turn off /logs endpoint in kubelet by setting enableSystemLogHandler to false in their kubelet configuration file. enableSystemLogHandler can be set to true only when enableDebuggingHandlers is also set ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:4032,Test,Testing,4032,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,"uded in this PR. - Changes to the following files to upgrade the vulnerable dependencies to a fixed version:; - hail/python/hailtop/pinned-requirements.txt. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png ""low severity"") | **471/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 3.7 | Improper Following of a Certificate&#x27;s Chain of Trust <br/>[SNYK-PYTHON-CERTIFI-5805047](https://snyk.io/vuln/SNYK-PYTHON-CERTIFI-5805047) | `certifi:` <br> `2023.5.7 -> 2023.7.22` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1NDMwZTFmMi0wNDZjLTQwNDctYmI3Mi1hZmJkZmM1MDViNGEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjU0MzBlMWYyLTA0NmMtNDA0Ny1iYjcyLWFmYmRmYzUwNWI0YSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13304:1269,test,tested,1269,https://hail.is,https://github.com/hail-is/hail/pull/13304,1,['test'],['tested']
Testability,"ues/22625"">#22625</a>)</li>; <li>Added <code>resource_id</code> support for user-assigned managed identity (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/22329"">#22329</a>)</li>; <li>Added <code>ClientAssertionCredential</code> support (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/22328"">#22328</a>)</li>; <li>Updated App service API version to &quot;2019-08-01&quot; (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23034"">#23034</a>)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/e650a8ca8b4cf01ec7a2961f4a50187d1528a122""><code>e650a8c</code></a> update troubleshooting (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23681"">#23681</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/58613a167a5383a459a57b34c6208d7762b90264""><code>58613a1</code></a> enable pii logging (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23658"">#23658</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/ab4c52ce05bb3fda401a834cbf669c32d6d83b90""><code>ab4c52c</code></a> add doc string for authority setting (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23659"">#23659</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/68dda72cab22a13014012c6b88137684180e941b""><code>68dda72</code></a> add app service api 2017 backward compatibility support (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23626"">#23626</a>)</li>; <li><a href=""https://github.com/Azure/azure-sdk-for-python/commit/1b23cab27114193fa8c19bfd47627093052d8212""><code>1b23cab</code></a> remove validate_authority (<a href=""https://github-redirect.dependabot.com/Azure/azure-sdk-for-python/issues/23625"">#23625</a>)</li>; <li><",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11752:2566,log,logging,2566,https://hail.is,https://github.com/hail-is/hail/pull/11752,1,['log'],['logging']
Testability,"ues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grpc when explicitly disabled (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/416"">#416</a>) (<a href=""https://github.com/googleapis/python-logging/commit/818213e143d6a1941211a48e0b23069a426ac300"">818213e</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>) (<a href=""https://github.com/googleapis/python-logging/commit/c63250399fcd6e1317d341e98fab11095c443e5e"">c632503</a>)</li>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>) (<a href=""https://github.com/googleapis/python-logging/commit/83d9ca8521fe7c470bb6755a48a97496515d7abc"">83d9ca8</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>) (<a href=""https://github.com/googleapis/python-logging/commit/5267152574b2ee96eb6f5c536a762f58bd2f886e"">5267152</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>) (<a href=""https://github.com/googleapis/python-logging/commit/6fa17735fe3edb45483ec5e3abd1f53c24f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:2063,log,logging,2063,https://hail.is,https://github.com/hail-is/hail/pull/11574,4,['log'],"['logger', 'logging']"
Testability,uesterPays(GoogleStorageFS.scala:280) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$close$1(GoogleStorageFS.scala:310) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23) ~[scala-library-2.12.15.jar:?]; 	at is.hail.services.package$.retryTransientErrors(package.scala:182) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.GoogleStorageFS$$anon$2.close(GoogleStorageFS.scala:308) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at java.io.FilterOutputStream.close(FilterOutputStream.java:159) ~[?:1.8.0_382]; 	at is.hail.utils.package$.using(package.scala:677) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.FS.writePDOS(FS.scala:441) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.FS.writePDOS$(FS.scala:440) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.io.fs.RouterFS.writePDOS(RouterFS.scala:3) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.backend.service.Worker$.$anonfun$main$4(Worker.scala:124) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.backend.service.Worker$.$anonfun$main$4$adapted(Worker.scala:124) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.backend.service.Worker$.$anonfun$main$13(Worker.scala:1,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:13774,test,test-,13774,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,uffer.scala:49); 	at scala.collection.TraversableLike.map(TraversableLike.scala:286); 	at scala.collection.TraversableLike.map$(TraversableLike.scala:279); 	at scala.collection.AbstractTraversable.map(Traversable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(Te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2060,Test,TestUtils,2060,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604,1,['Test'],['TestUtils']
Testability,ugh actually doing this is not super straightforward! so unless you have super strong objections to this I'll probably jut put the logic directly into emit.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3357#issuecomment-380967820:131,log,logic,131,https://hail.is,https://github.com/hail-is/hail/pull/3357#issuecomment-380967820,1,['log'],['logic']
Testability,"ugh, ok. On Mon, Aug 17, 2020 at 10:41 AM Tim Poterba <notifications@github.com>; wrote:. > *@tpoterba* requested changes on this pull request.; >; > needs a test; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/hail-is/hail/pull/9283#pullrequestreview-468525706>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZNYW26LMF4NJHR4TDHL23SBE6SNANCNFSM4QBW7UJA>; > .; >",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9283#issuecomment-674927789:158,test,test,158,https://hail.is,https://github.com/hail-is/hail/pull/9283#issuecomment-674927789,1,['test'],['test']
Testability,"ugh, test failure in local backend. Will debug in a bit.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9618#issuecomment-713077513:5,test,test,5,https://hail.is,https://github.com/hail-is/hail/pull/9618#issuecomment-713077513,1,['test'],['test']
Testability,"ugh, this PR is quite mislabeled. This was meant to be the secondary indexing stub -- the last commit here -- but was stacked on the keyed_intersection stuff (which has merged to main in another PR) and I didn't fix up the title. I'll rebase to make this clearer as an example for us to poke at indexing for seqr, and make the warning fix in another PR.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12539#issuecomment-1349720433:78,stub,stub,78,https://hail.is,https://github.com/hail-is/hail/pull/12539#issuecomment-1349720433,2,['stub'],['stub']
Testability,"ugh. This must depend on another PR I have open, to remove that assertion.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5740#issuecomment-478736550:64,assert,assertion,64,https://hail.is,https://github.com/hail-is/hail/pull/5740#issuecomment-478736550,1,['assert'],['assertion']
Testability,ugh. inexplicable NPE in TestNG with that version. Switching to the lowest version known to work.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8801#issuecomment-629588732:25,Test,TestNG,25,https://hail.is,https://github.com/hail-is/hail/pull/8801#issuecomment-629588732,1,['Test'],['TestNG']
Testability,"uilder. I didn't change it in HadoopFS because (a) Hail's native I/O has buffering and (b) buffering and position tracking requires work.; 2. Avoid String allocation, String to UTF8 conversion, and Array[Byte] allocation in VCF writing. In particular, for the most common types of Calls, I just return the UTF8 byte array in a switch statement.; 3. Use a fast path for diploid genotypes. In the worst case, we did 5 branches and now we do 2 which should be well predicted.; 4. Remove an allocation of a lambda in a hot method in Genotype.scala. Future Work:; 1. The randomness stuff still has a lot of low hanging fruit. NumPy can generate random numbers at bandwidths far above what we're managing here.; 2. For VCFs with more entry fields, we should not write ints and floats by generating strings and getting their UTF8 encoding; 3. Invert the writing control flow: serialization methods should take an OutputStream and write bytes directly into it. Contrast that with passing around arrays which are memcopied into a buffer. ---. Range table test:; ```; import hail as hl; hl.init(master='local[1]'); hl._set_flags(write_ir_files='1'); mt = hl.utils.range_matrix_table(n_rows=1000_000, n_cols=4_000); mt = mt.key_cols_by(s = hl.str(mt.col_idx)); mt = mt.key_rows_by(locus = hl.locus(""1"", mt.row_idx + 1), alleles = ['G', 'T']); mt = mt.annotate_entries(GT = hl.call(mt.row_idx % 2, mt.col_idx % 2)); hl.export_vcf(mt, '/tmp/foo.vcf'); ```. Balding Nichols Test:; ```; import hail as hl; hl.init(master='local[1]'); hl._set_flags(write_ir_files='1'); mt = hl.balding_nichols_model(1, n_variants=100_000, n_samples=4_000); mt = mt.key_cols_by(s = hl.str(mt.sample_idx)); hl.export_vcf(mt, '/tmp/foo.vcf'); ```. Bandwidth is: `time python3 file.py` / `ls -l /tmp/foo.vcf`. | code | test | size | bandwidth (MiB/s) |; | ---- | ----- | ------- | ----------------- |; | main | range | 1Mx4K | 32 |; | this | range | 1Mx4K | 93 (~3x) |; | main | BN | 100Kx4K | 19 |; | this | BN | 100Kx4K | 28 (~1.5x) |",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12733:2695,test,test,2695,https://hail.is,https://github.com/hail-is/hail/pull/12733,3,"['Test', 'test']","['Test', 'test']"
Testability,"ul>; <li>install <code>colorama</code> on Windows (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1139"">#1139</a>, <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/454"">#454</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tqdm/tqdm/commit/f3fb54eb161a9f5de13352e16a70a9960946605b""><code>f3fb54e</code></a> bump version, merge pull request <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1302"">#1302</a> from tqdm/devel</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/a6139189856349e96b5bfad30e0c296d44861fb1""><code>a613918</code></a> tests: pin py3.5 keras</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/02b29234f88272778b879b3da7589cbb9ce13dfd""><code>02b2923</code></a> tests: drop py3.6 nbval</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/2a9f1d23d3033c40ba9568285a144d711aa7d02b""><code>2a9f1d2</code></a> tests: fix pytest-nbval, tidy versions</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/6ba43f2631a18f8bfe2cd1bb2071c507e88ce6d8""><code>6ba43f2</code></a> tests: fix pytest-asyncio usage</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/6426c55b0f546a51be6e60034f34fbcaa87f679b""><code>6426c55</code></a> cli: fix py3.9 <code>importlib</code> usage</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/c1e7acebad76c0a6d17ce005d46e55f06bda1c09""><code>c1e7ace</code></a> tests: coverage warning</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/2190b1b76d4c496a75a5e37560c5f24edfff6a74""><code>2190b1b</code></a> tests: add py3.10</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/a14ea74a81be2bc0abe5b64e45e57cbd1d2687b1""><code>a14ea74</code></a> tests: fix nbval</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/7cdbfee224f94c8bc63dceaab42637962f2f2a04""><code>7cdbfee</code></a> autonotebook: check for ipywidgets</li>; <li>Additional commits viewable in <a href=""ht",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11587:5230,test,tests,5230,https://hail.is,https://github.com/hail-is/hail/pull/11587,1,['test'],['tests']
Testability,"ule named 'pyspark'. During handling of the above exception, another exception occurred:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_233/4275665471.py in <module>; ----> 1 combined_pandas = pd.read_pickle(gwas_pandas_file). /opt/conda/lib/python3.7/site-packages/pandas/io/pickle.py in read_pickle(filepath_or_buffer, compression, storage_options); 220 # ""No module named 'pandas.core.sparse.series'""; 221 # ""Can't get attribute '__nat_unpickle' on <module 'pandas._libs.tslib""; --> 222 return pc.load(handles.handle, encoding=None); 223 except UnicodeDecodeError:; 224 # e.g. can occur for files written in py27; see GH#28645 and GH#31988. /opt/conda/lib/python3.7/site-packages/pandas/compat/pickle_compat.py in load(fh, encoding, is_verbose); 272 up.is_verbose = is_verbose; 273 ; --> 274 return up.load(); 275 except (ValueError, TypeError):; 276 raise. /opt/conda/lib/python3.7/pickle.py in load(self); 1086 raise EOFError; 1087 assert isinstance(key, bytes_types); -> 1088 dispatch[key[0]](self); 1089 except _Stop as stopinst:; 1090 return stopinst.value. /opt/conda/lib/python3.7/pickle.py in load_stack_global(self); 1383 if type(name) is not str or type(module) is not str:; 1384 raise UnpicklingError(""STACK_GLOBAL requires str""); -> 1385 self.append(self.find_class(module, name)); 1386 dispatch[STACK_GLOBAL[0]] = load_stack_global; 1387 . /opt/conda/lib/python3.7/site-packages/pandas/compat/pickle_compat.py in find_class(self, module, name); 204 key = (module, name); 205 module, name = _class_locations_map.get(key, key); --> 206 return super().find_class(module, name); 207 ; 208 . /opt/conda/lib/python3.7/pickle.py in find_class(self, module, name); 1424 elif module in _compat_pickle.IMPORT_MAPPING:; 1425 module = _compat_pickle.IMPORT_MAPPING[module]; -> 1426 __import__(module, level=0); 1427 if self.proto >= 4:; 1428 return _getattribute(sys.modules[module], name)[0]. /opt/conda/lib/python3.7/site-packages/hail/__init__.py in <module>; 31 # F401",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14004:3148,assert,assert,3148,https://hail.is,https://github.com/hail-is/hail/issues/14004,1,['assert'],['assert']
Testability,ule test_family_methods.py>; <UnitTestCase Tests>; <TestCaseFunction test_trio_matrix_1>; <Module test_impex.py>; <UnitTestCase VCFTests>; <TestCaseFunction test_glob>; <TestCaseFunction test_import_gvcfs>; <Module test_qc.py>; <UnitTestCase Tests>; <TestCaseFunction test_sample_qc>; <TestCaseFunction test_variant_qc>; <Module test_skat.py>; <Function test_logistic_skat_phenotypes_are_binary>; <Function test_logistic_skat_no_weights_R_truth>; <Module test_statgen.py>; <UnitTestCase Tests>; <TestCaseFunction test_impute_sex_same_as_plink>; <TestCaseFunction test_linreg_basic>; <Package relatedness>; <Module test_identity_by_descent.py>; <Function test_ibd_default_arguments>; <Module test_pc_relate.py>; <Function test_pc_relate_simple_example>; <Package table>; <Module test_grouped_table.py>; <UnitTestCase GroupedTableTests>; <TestCaseFunction test_aggregate_by>; <Module test_table.py>; <UnitTestCase Tests>; <TestCaseFunction test_aggregate1>; <TestCaseFunction test_annotate>; <Function test_lowered_persist>; <Function test_lowered_shuffle>; <Package utils>; <Module test_hl_hadoop_and_hail_fs.py>; <Function test_hadoop_methods_1[remote]>; <Function test_hadoop_methods_1[local]>; <Function test_hadoop_methods_2[remote]>; <Function test_hadoop_methods_2[local]>; <Function test_hadoop_methods_3[remote]>; <Function test_hadoop_methods_3[local]>; <Function test_read_overwrite[remote]>; <Function test_read_overwrite[local]>; <Function test_hadoop_exists[remote]>; <Function test_hadoop_exists[local]>; <Function test_hadoop_is_file[remote]>; <Function test_hadoop_is_file[local]>; <Function test_hadoop_stat[remote]>; <Function test_hadoop_stat[local]>; <Function test_subdirs[remote]>; <Function test_subdirs[local]>; <Function test_rmtree_empty_is_ok[remote]>; <Function test_rmtree_empty_is_ok[local]>; <Function test_rmtree_empty_subdir_is_ok[remote]>; <Function test_rmtree_empty_subdir_is_ok[local]>; <Function test_remove_and_rmtree[remote]>; <Function test_remove_and_rmtree[lo,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13620#issuecomment-1720268851:3143,Test,Tests,3143,https://hail.is,https://github.com/hail-is/hail/pull/13620#issuecomment-1720268851,3,['Test'],"['TestCaseFunction', 'Tests']"
Testability,"ull sample_ploidy=2 min_quality_score=1 max_quality_score=40 site_quality_prior=20 min_power_threshold_for_calling=0.95 min_reference_depth=100 exclude_filtered_reference_sites=false heterozygosity=0.0010 genotyping_mode=DISCOVERY output_mode=EMIT_VARIANTS_ONLY standard_min_confidence_threshold_for_calling=30.0 standard_min_confidence_threshold_for_emitting=30.0 alleles=(RodBinding name= source=UNBOUND) max_alternate_alleles=6 p_nonref_model=EXACT_INDEPENDENT contamination_fraction_to_filter=0.0 contamination_percentage_per_sample_file=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.v1.contamination_levels.txt logRemovedReadsFromContaminationFiltering=null exactcallslog=null dbsnp=(RodBinding name=dbsnp source=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.dbsnp.vcf) comp=[] out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub debug_file=null metrics_file=null annotation=[] excludeAnnotation=[] filter_mismatching_base_and_quals=false""; ##VariantAnnotator=""analysis_type=VariantAnnotator input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/references/HybSelOligos/whole_exome_agilent_1.1_refseq_plus_3_boosters/whole_exome_agilent_1.1_refseq_plus_3_boosters.Homo_sapiens_assembly19.targets.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=50 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta nonDeterministicRandomSeed=false disableRandomization=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_legacy_downsampler=false baq=OFF baqGapOpenPenalty=40.0 fix_misencoded_quality_scores=false allow_potent",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:16503,stub,stubs,16503,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,"ull/93264"">kubernetes/kubernetes#93264</a>, <a href=""https://github.com/justaugustus""><code>@​justaugustus</code></a>) [SIG API Machinery, Auth, CLI, Cloud Provider, Cluster Lifecycle, Instrumentation, Network, Node, Release, Scalability, Storage and Testing]</li>; </ul>; </li>; <li>Promote Immutable Secrets/ConfigMaps feature to Beta and enable the feature by default.; This allows to set <code>Immutable</code> field in Secrets or ConfigMap object to mark their contents as immutable. (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/89594"">kubernetes/kubernetes#89594</a>, <a href=""https://github.com/wojtek-t""><code>@​wojtek-t</code></a>) [SIG Apps and Testing]</li>; <li>Remove <code>BindTimeoutSeconds</code> from schedule configuration <code>KubeSchedulerConfiguration</code> (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91580"">kubernetes/kubernetes#91580</a>, <a href=""https://github.com/cofyc""><code>@​cofyc</code></a>) [SIG Scheduling and Testing]</li>; <li>Remove kubescheduler.config.k8s.io/v1alpha1 (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/89298"">kubernetes/kubernetes#89298</a>, <a href=""https://github.com/gavinfish""><code>@​gavinfish</code></a>) [SIG Scheduling]</li>; <li>Reserve plugins that fail to reserve will trigger the unreserve extension point (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/92391"">kubernetes/kubernetes#92391</a>, <a href=""https://github.com/adtac""><code>@​adtac</code></a>) [SIG Scheduling and Testing]</li>; <li>Resolve regression in <code>metadata.managedFields</code> handling in update/patch requests submitted by older API clients (<a href=""https://github-redirect.dependabot.com/kubernetes/kubernetes/pull/91748"">kubernetes/kubernetes#91748</a>, <a href=""https://github.com/apelisse""><code>@​apelisse</code></a>)</li>; <li>Scheduler: optionally check for available storage capacity before scheduling pods which have unbound volu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11462:11857,Test,Testing,11857,https://hail.is,https://github.com/hail-is/hail/pull/11462,1,['Test'],['Testing']
Testability,"ummary changes:; - batch and batch2: Removed /batch endpoint limit and offset options, added include_jobs. Limit was ever only 0 or None. Going forward, /batch should never return jobs, and /jobs endpoint should always paginate.; - Got rid of pods. There is no pod_status options on the client, but they are left in for legacy reasons (batch).; - Simplified worker startup and cleaned up logging paths. The old code could restart the worker after a failure after it had activated. I don't think we're equipped for that case. I do explicitly pull the worker image (with one retry) before trying to run it.; - Batch and Job are gone. database.py is effectively gone. Almost everywhere interacts directly with the database using the simple gear.Database interface, and drops down to aiomysql directly when that is insufficient (e.g. transaction with multiple executemany for /jobs/create). When we pass around data representing a job or batch, it's normally a data record (a dict).; - Added the running log test from your PR.; - The job status is no longer written to a file, just in the database jobs.status.; - I moved the INSTANCE_ID to the database. There is now a table called tokens. It has the instance id and a token for securing communication between the front end and the driver (currently unused).; - Operations that need to be atomic in the database are now implemented as stored procedures which can be called with the check_call_procedure helper in database.py. They return a row with a field rc (return code) that is 0 on success and non-zero on failure.; - Renamed Driver => Scheduler. Scheduler has two threads, one that schedules jobs that are in the Ready state, and one that cancels cancelled jobs in the Running state. There is a new job state Ready. A job is Ready if its parents are complete and it is not scheduled (instance_id is null). A job is Running if it is scheduled (instance_id is not null).; - The full set of instances are mirrored in memory as Instance objects.; - Ad",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7420:1040,log,log,1040,https://hail.is,https://github.com/hail-is/hail/pull/7420,2,"['log', 'test']","['log', 'test']"
Testability,"un$22.apply(RDD.scala:1113); at org.apache.spark.SparkContext$$anonfun$33.apply(SparkContext.scala:2118); at org.apache.spark.SparkContext$$anonfun$33.apply(SparkContext.scala:2118); at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:87); at org.apache.spark.scheduler.Task.run(Task.scala:108); at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); ... 1 more. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/tmp/b09ec92a-49f4-4d16-ad6d-efc5a5805e92/05_variant_qc.py"", line 201, in <module>; cumcounts = {'step0': rt.aggregate(hl.agg.sum(hl.cond(rt.qccum.step0, 1, 0))),; File ""<decorator-gen-519>"", line 2, in aggregate; File ""/home/hail/hail.zip/hail/utils/java.py"", line 191, in handle_py4j; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 7 in stage 6.0 failed 20 times, most recent failure: Lost task 7.19 in stage 6.0 (TID 179, robert1-w-0.c.ccdg-wgs.internal, executor 4): java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.annotations.RegionValueBuilder.endStruct(RegionValueBuilder.scala:109); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2645); at is.hail.variant.MatrixTable$$anonfun$filterGenotypes$1$$anonfun$apply$80.apply(MatrixTable.scala:2615); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:730); at scala.collection.Iterator$$anon$11.next(Iterator.scala:409); at is.hail.rvd.OrderedRVD$$anonfun$apply$6$$anon$5.next(OrderedRVD.scala:736); ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3063:11741,Assert,AssertionError,11741,https://hail.is,https://github.com/hail-is/hail/issues/3063,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,un$main$6(ServiceBackend.scala:462); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$6$adapted(ServiceBackend.scala:461); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$5(ServiceBackend.scala:461); E 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); E 	at is.hail.services.package$.retryTransientErrors(package.scala:134); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$4(ServiceBackend.scala:460); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$4$adapted(ServiceBackend.scala:459); E 	at is.hail.utils.package$.using(package.scala:635); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.$anonfun$main$3(ServiceBackend.scala:459); E 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23); E 	at is.hail.services.package$.retryTransientErrors(package.scala:134); E 	at is.hail.backend.service.ServiceBackendSocketAPI2$.main(ServiceBackend.scala:458); E 	at is.hail.backend.service.Main$.main(Main.scala:15); E 	at is.hail.backend.service.Main.main(Main.scala); E 	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source); E 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); E 	at java.lang.reflect.Method.invoke(Method.java:498); E 	at is.hail.JVMEntryway$1.run(JVMEntryway.java:119); E 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); E 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); E 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); E 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); E 	at java.lang.Thread.run(Thread.java:750); ```. ### Version. 0.2.116. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13074:15749,log,log,15749,https://hail.is,https://github.com/hail-is/hail/issues/13074,1,['log'],['log']
Testability,"understand one commit at a time, because it actually worked out quite cleanly. I'll describe each commit, to make review easier:; * **remove `TableValue.enforceOrderingRVD`** - I could have removed `enforceOrderingRVD` earlier, as soon as tables were always sorted by key. This also loosens the `TableValue` invariant: Before, we required that if `key=None` then the `rvd` is an `UnpartitionedRVD`, but it was okay to have `key=Some(..)` and an `UnpartitionedRVD`. Then, once all tables were sorted by key, I strengthened it to `key=None` if and only if `rvd` is an `UnpartitionedRVD`. Now, I'm weakening it in the other direction, to allow `key=None` with `rvd` an `OrderedRVD`, possibly with some non-empty key. This is consistent with the rule that the `rvd` must always have a stronger/longer key than the `TableType`.; * **small tweaks** - Now I start working through the `TableIR` nodes, rewriting them to remove explicit uses of `UnpartitionedRVD`. The general plan is to sandwich the rvd logic between `toOrderedRVD` and `toOldStyleRVD`. The first takes an `UnpartitionedRVD` to an `OrderedRVD` with empty key (and leaves `OrderedRVD`s alone), and the second takes an `OrderedRVD` to an `UnpartitionedRVD` if its key was empty, and leaves it alone otherwise. Once they're all rewritten this way, I redefine `toOldStyleRVD` to always return `OrderedRVD`, and `UnpartitionedRVD` is no longer used.; * **remove `TableUnkey`** - With `UnpartitionedRVD` going away, `TableUnkey` is no longer necessary, it's equivalent to keying by an empty key.; * **small tweaks** - these next two rewrite more `TableIR` nodes; * **Merge master** - the big one; * **tweak MatrixColsTable** - 1) Optimize `coerce` by checking if the requested key is empty, avoiding a scan in that case. 2) Optimize `sortedColsValue` by checking if the column key is empty, avoiding the sort in that case. 3) Simplify `colsRVD`, removing the case on the type of the `RVD`, just calling `coerce` and letting the previous optimizati",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4319:1146,log,logic,1146,https://hail.is,https://github.com/hail-is/hail/pull/4319,1,['log'],['logic']
Testability,unify logic for ir.Compile.apply methods of various argument lengths,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3183:6,log,logic,6,https://hail.is,https://github.com/hail-is/hail/pull/3183,1,['log'],['logic']
Testability,unning test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testUpperBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[0]([Ljava.lang.String;@49613eb0) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[1]([Ljava.lang.String;@326709be) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSa,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1984,Assert,AssertionError,1984,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['Assert'],['AssertionError']
Testability,"up fails because the `…/counts.counts.tsv` file no longer exists because it was removed by `bgzip`. In any case, we don't want to write that one to the final bucket anyway. Hence the two separate `write_output` invocations for the two desired output files.). This fails in the second `write_output` with a fairly mysterious exception:. ```; File ""…"", line 92, in test; b.write_output(j.counts['tsv.gz.tbi'], output_index_path); File ""…/lib/python/site-packages/hailtop/batch/batch.py"", line 595, in write_output; name = resource._source._resources_inverse[resource]; KeyError: __RESOURCE_FILE__11; ```. Checking that line of _batch.py_, it is failing while trying to print an error message because `_resources_inverse` is not set up for the JobResourceFiles within ResourceGroups. PR #13192 is a suggested fix for this. With that PR applied, this results in a more useful hail error message exception:. ```; hailtop.batch.exceptions.BatchException: undefined resource 'counts[""tsv.gz.tbi""]'; Hint: resources must be defined within the job methods 'command' or 'declare_resource_group'; ```. This can be worked around by mentioning the filename in the commands to be run — in a comment, because none of the commands actually need to specify the `.tbi` output filename:. ```python; …; j.command(f""""""; gatk SubCommand … --output {j.counts['tsv']}; bgzip {j.counts['tsv']}; gatk IndexFeatureFile --input {j.counts['tsv.gz']}; : {j.counts['tsv.gz.tbi']}; """"""); …; ```. This produces the desired two files — compressed data and the associated index — written to the final bucket. Is it kosher to use `write_output` on the individual items within a ResourceGroup like this?. However this resource **was** defined by a `declare_resource_group` invocation. So it seems to me that this too (namely, the BatchException encountered) is a bug and it should not be necessary to work around the lack of `j.counts['tsv.gz.tbi']` being mentioned like this. ### Version. 0.2.118. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13191:2945,log,log,2945,https://hail.is,https://github.com/hail-is/hail/issues/13191,1,['log'],['log']
Testability,"update (#14233). ```; The [relevant part of the diff](https://github.com/hail-is/hail/commit/d2615543476bde5d01061499c92f26124b85caf3#diff-332ea445eb23998f4f4e34a9bb687fa533a063641eb05f791c105a187bf0c19bL101-R101; ):; ```diff; -orjson==3.9.10; +orjson==3.9.12; ```. orjson [reduced the frequency of this segfault in 3.9.13](https://github.com/ijl/orjson/commit/58a8bd3e31aa3b5fd3d962fb5b03479fa0014ee9) by eliding some of the code that caused buffer overheads; however, [the problem persists](https://github.com/ijl/orjson/issues/452#issuecomment-1943053799). I complete fix is currently awaiting [pull request review](https://github.com/ijl/orjson/pull/457). Reports:; - https://hail.zulipchat.com/#narrow/stream/127527-team/topic/seg.20faults.20in.20tests; - https://hail.zulipchat.com/#narrow/stream/123011-Hail-Query-Dev/topic/segfault.20in.20ci.20tests. Batches:; - https://batch.hail.is/batches/8123269/jobs/86; - https://batch.hail.is/batches/8127894/jobs/53. ### Version. 0.2.127. ### Relevant log output. ```shell; [2024-02-08 22:36:47] test/hail/matrixtable/test_file_formats.py::test_backward_compatability_ht[/io/resources/backward_compatability/1.6.0/table/6.ht/] Fatal Python error: Segmentation fault. Thread 0x00007fa51d817640 (most recent call first):; File ""/usr/lib/python3.9/selectors.py"", line 416 in select; File ""/usr/lib/python3.9/socketserver.py"", line 232 in serve_forever; File ""/usr/lib/python3.9/threading.py"", line 917 in run; File ""/usr/lib/python3.9/threading.py"", line 980 in _bootstrap_inner; File ""/usr/lib/python3.9/threading.py"", line 937 in _bootstrap. Thread 0x00007fa5273ff640 (most recent call first):; File ""/usr/local/lib/python3.9/dist-packages/py4j/clientserver.py"", line 58 in run; File ""/usr/lib/python3.9/threading.py"", line 980 in _bootstrap_inner; File ""/usr/lib/python3.9/threading.py"", line 937 in _bootstrap. Current thread 0x00007fa52bd6b000 (most recent call first):; File ""/usr/local/lib/python3.9/dist-packages/hail/backend/py4j_backend.py"", li",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14299:3000,log,log,3000,https://hail.is,https://github.com/hail-is/hail/issues/14299,1,['log'],['log']
Testability,update test-gcp.sh to be closer to modern use,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14272:7,test,test-gcp,7,https://hail.is,https://github.com/hail-is/hail/pull/14272,1,['test'],['test-gcp']
Testability,"update: I made checking the keys in the RVD constructor optional, as it forced the broadcast of the partitioner every time we construct an RVD, and enabled it (via a flag HailContext.checkRVDKeys) only for the Scala tests. @tpoterba Thoughts on this? Should keep it enabled in production and just add a flag to disable it for the joint caller? If not, should we enable it for the Python tests? If so, we'll probably want some additional tests with it disabled so we at least test somewhat we release.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5424#issuecomment-466819533:216,test,tests,216,https://hail.is,https://github.com/hail-is/hail/pull/5424#issuecomment-466819533,4,['test'],"['test', 'tests']"
Testability,"update: `calculateKeyRanges` doesn't work correctly when there's only one element (which we never hit, since `coerce` considers those to be sorted), which was causing the shuffle to drop the only moved element in some of my tests (which is why the tests were running so much faster than the non-shuffling version). . I did fix something in the ReorderedPartitions dependencies that was causing an extra partition to be included in the dependencies during the `union_rows`, and now this branch (sans explode_rows changes) is running at about the same speed as SplitMulti was previously, although there's still generally noticeable bump for the first iteration. so @tpoterba I think this is probably set for review.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4076#issuecomment-410349941:224,test,tests,224,https://hail.is,https://github.com/hail-is/hail/pull/4076#issuecomment-410349941,2,['test'],['tests']
Testability,upload is a service that displays uploaded data. It uses Google authentication to only allow the Hail team to view uploads. Pipeline uploads can be enabled with `enable_pipeline_upload(email)` and you can upload the current Hail log with `hl.upload_log(email)`. Pipeline uploads happen in the background asynchronously (and errors are ignored). Log upload is synchronous. I generated certs for upload and this is the upload that is currently deployed.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4509:229,log,log,229,https://hail.is,https://github.com/hail-is/hail/pull/4509,2,"['Log', 'log']","['Log', 'log']"
Testability,upload/storage/v1/b/1-day/o?name=parallelizeAndComputeWithIndex/al3OJfYZMMNoi9F2jvcAf0jBirVTayRVqro03dnIa1g%3D/result.7028&uploadType=resumable&upload_id=ADPycdv7y3A6GjTh6Kv7vrUu2ap2Kv0peLVWsVTAghIs7RCZk9X3fI1BDkeHag1cd9g3etP2sS4f13bN6iJPU_sbnRnyRE91VPtjUpuYLPqmOq13; 	|> content-range: bytes */*; 	| ; 	|< HTTP/1.1 308 Resume Incomplete; 	|< content-length: 0; 	|< content-type: text/plain; charset=utf-8; 	|< x-guploader-uploadid: ADPycdv7y3A6GjTh6Kv7vrUu2ap2Kv0peLVWsVTAghIs7RCZk9X3fI1BDkeHag1cd9g3etP2sS4f13bN6iJPU_sbnRnyRE91VPtjUpuYLPqmOq13; 	| ; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:185) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:117) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:98) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionQueryTask.call(JsonResumableSessionQueryTask.java:100) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.query(JsonResumableSession.java:57) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.lambda$put$0(JsonResumableSession.java:73) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-S,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:8562,test,test-,8562,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 0; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:189); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.flush(BaseWriteChannel.java:112); 		at is.hail.relocated.com.google.cloud.BaseWriteChannel.write(BaseWriteChannel.java:139); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.$anonfun$flush$1(GoogleStorageFS.scala:297); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.doHandlingRequesterPays(GoogleStorageFS.scala:279); 		at is.hail.io.fs.GoogleStorageFS$$anon$2.flush(GoogleStorageFS.scala:297); 		at is.hail.io.fs.FSPositionedOutputStream.write(FS.scala:219); 		at java.io.DataOutputStream.write(DataOutputStream.java:107); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1(FSSuite.scala:329); 		at is.hail.fs.FSSuite.$anonfun$testSeekMoreThanMaxInt$1$adapted(FSSuite.scala:323); 		at is.hail.utils.package$.using(package.scala:635); 		... 26 more; ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:8916,test,testSeekMoreThanMaxInt,8916,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,4,['test'],['testSeekMoreThanMaxInt']
Testability,"ups: [""""]; resources: [""pods""]; verbs: [""*""]; ---; kind: RoleBinding; apiVersion: rbac.authorization.k8s.io/v1; metadata:; namespace: default; name: notebook-create-services-and-pods; subjects:; - kind: ServiceAccount; name: notebook; namespace: default; roleRef:; kind: Role; name: create-services #this was causing the error, and of course the create-services role is superseded by the the create-services-and-pods role; apiGroup: """"; ---; ```. After:; ```yaml; kind: Role; apiVersion: rbac.authorization.k8s.io/v1; metadata:; namespace: default; name: create-services-and-pods; rules:; - apiGroups: [""""]; resources: [""services""]; verbs: [""*""]; - apiGroups: [""""]; resources: [""pods""]; verbs: [""*""]; ---; kind: RoleBinding; apiVersion: rbac.authorization.k8s.io/v1; metadata:; namespace: default; name: notebook-create-services-and-pods; subjects:; - kind: ServiceAccount; name: notebook; namespace: default; roleRef:; kind: Role; name: create-services-and-pods; apiGroup: """"; ---; ```. ### Results of test runs. Before:. ```sh; kubectl apply -f k8s-config.yaml; ERROR: (gcloud.compute.addresses.describe) Could not fetch resource:; - Required 'compute.addresses.get' permission for 'projects/hail-vdc-staging/regions/us-central1/addresses/site'. namespace/batch-pods unchanged; ...; The RoleBinding ""notebook-create-services-and-pods"" is invalid: roleRef: Invalid value: rbac.RoleRef{APIGroup:""rbac.authorization.k8s.io"", Kind:""Role"", Name:""create-services""}: cannot change roleRef; make: *** [k8s-config] Error 1; ```. After:; ```sh; ERROR: (gcloud.compute.addresses.describe) Could not fetch resource:; - Required 'compute.addresses.get' permission for 'projects/hail-vdc-staging/regions/us-central1/addresses/site'. ...; role.rbac.authorization.k8s.io/create-services-and-pods unchanged; rolebinding.rbac.authorization.k8s.io/notebook-create-services-and-pods configured; role.rbac.authorization.k8s.io/read-get-user-secret unchanged; rolebinding.rbac.authorization.k8s.io/notebook-read-get-user",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5746:2348,test,test,2348,https://hail.is,https://github.com/hail-is/hail/pull/5746,1,['test'],['test']
Testability,"ure storage. Basic summary of the changes:; 	- Update `AzureAsyncFS` url parsing function to look for and separate out a SAS-token-like query string. Note: made fairly specific to SAS tokens - generic detection of query string syntax interferes with glob support and '?' characters in file names; 	- Added `generate_sas_token` convenience function to `AzureAsyncFS`. Adds new `azure-mgmt-storage` package requirement.; 	- Updated `AzureAsyncFS` to use `(account, credential)` tuple as internal `BlobServiceClient` cache key; 	- Updated `AzureAsyncFSURL` and `AzureFileListEntry` to track the token separately from the name, and extend the base classes to allow returning url with or without a token ; 	- Update `RouterFS.ls` function and associated `listfiles` function to allow for trailing query strings during path traversal ; 	- Change to existing behavior: `LocalAsyncFSURL.__str__`no longer returns 'file:' prefix. Done to make `str()` output be appropriate for input to `fs` functions across all subclasses; 	- Updated `inter_cloud/test_fs.py` to generically use query-string-friendly file path building functions; - Updated InputResource to not include the SAS token as part of the destination file name . `test_fs.py` has been updated to respect the new model, where it is no longer safe to extend URLs by just appending new segments with + ""/"" because there may be a query string. But actually running those tests for the SAS case will require some new test variables to allow the test code to generate SAS tokens (`build.yaml/test_hail_python_fs`): ; ```; export HAIL_TEST_AZURE_ACCOUNT=hailtest; export HAIL_TEST_AZURE_CONTAINER=hail-test-4nxei; # Required for SAS testing on Azure; export HAIL_TEST_AZURE_RESGRP=hailms02; export HAIL_TEST_AZURE_SUBID=12ab51c6-da79-4a99-8dec-3d2decc97343; ```; So the SAS case is disabled for now (`test_fs.py`):; ```; @pytest.fixture(params=['file', 'gs', 's3', 'hail-az', 'router/file', 'router/gs', 'router/s3', 'router/hail-az']) # 'sas/hail-az'; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12877:1533,test,tests,1533,https://hail.is,https://github.com/hail-is/hail/pull/12877,5,['test'],"['test', 'test-', 'testing', 'tests']"
Testability,"us"": 200, ""response_size"": 158, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,967"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,969"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""set_state:501"", ""message"": ""job (9, 1, 'main') changed state: Ready -> Cancelled""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,974"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""_delete_pvc:251"", ""message"": ""deleting persistent volume claim batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,976"", ""filename"": ""batch.py"", ""funcNameAndLine"": ""update_job_with_pod:1145"", ""message"": ""update job (9, 1, 'main') with pod batch-9-job-1-c8b9b2""}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,977"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""GET /api/v1alpha/batches/9 HTTP/1.1\"" 200 279 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""GET /api/v1alpha/batches/9 HTTP/1.1"", ""response_status"": 200, ""response_size"": 279, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:34,985"", ""filename"": ""web_log.py"", ""funcNameAndLine"": ""log:233"", ""message"": ""10.32.4.199 [11/Jul/2019:14:19:34 +0000] \""GET /api/v1alpha/batches/9 HTTP/1.1\"" 200 279 \""-\"" \""Python/3.6 aiohttp/3.5.4\"""", ""remote_address"": ""10.32.4.199"", ""request_start_time"": ""[11/Jul/2019:14:19:34 +0000]"", ""first_request_line"": ""GET /api/v1alpha/batches/9 HTTP/1.1"", ""response_status"": 200, ""response_size"": 279, ""request_header"": {""Referer"": ""-"", ""User-Agent"": ""Python/3.6 aiohttp/3.5.4""}}; {""levelname"": ""INFO"", ""asctime"": ""2019-07-11 14:19:3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6617:3474,log,log,3474,https://hail.is,https://github.com/hail-is/hail/issues/6617,1,['log'],['log']
Testability,"us-east4/us-west1/us-west2/us-west3/us-west4]: us-east1; WARNING: remote temporary directory ""gs://hail-batch-jigold-oxmmp/bar/foo"" is not located in the selected compute region for Batch jobs ""us-east1"".; Which backend do you want to use for Hail Query? [spark/batch/local]: batch; --------------------; FINAL CONFIGURATION:; --------------------; global/domain=hail.is; batch/remote_tmpdir=gs://hail-batch-jigold-oxmmp/bar/foo; batch/regions=us-east1; batch/backend=service; query/backend=batch; WARNING: Initialized Hail with warnings! The currently specified configuration will result in additional ingress and egress fees when using Hail Batch.; ```. Existing multiregional bucket:. ```; (py311) jigold@wm349-8c4 hail % hailctl batch init; Do you want to create a new bucket in project for temporary files generated by Hail? [y/n]: n; Enter a path to an existing remote temporary directory (ex: gs://my-bucket/batch/tmp): gs://hail-jigold-test-multi-regional; WARNING: remote temporary directory gs://hail-jigold-test-multi-regional is multi-regional. Using this bucket with the Batch Service will incur addtional ingress and egress fees.; Do you want to give service account jigold-59hi5@hail-vdc.iam.gserviceaccount.com read/write access to bucket hail-jigold-test-multi-regional? [y/n]: y; Granted service account jigold-59hi5@hail-vdc.iam.gserviceaccount.com read and write access to hail-jigold-test-multi-regional.; Which region do you want your jobs to run in? [us-central1/us-east1/us-east4/us-west1/us-west2/us-west3/us-west4]: us-east1; Which backend do you want to use for Hail Query? [spark/batch/local]: batch; --------------------; FINAL CONFIGURATION:; --------------------; global/domain=hail.is; batch/remote_tmpdir=gs://hail-jigold-test-multi-regional; batch/regions=us-east1; batch/backend=service; query/backend=batch; WARNING: Initialized Hail with warnings! The currently specified configuration will result in additional ingress and egress fees when using Hail Batch.; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13279#issuecomment-1679133568:6268,test,test-multi-regional,6268,https://hail.is,https://github.com/hail-is/hail/pull/13279#issuecomment-1679133568,3,['test'],['test-multi-regional']
Testability,use a smaller test cluster,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4625:14,test,test,14,https://hail.is,https://github.com/hail-is/hail/pull/4625,1,['test'],['test']
Testability,use combOps in ir.TestUtils.eval,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3806:18,Test,TestUtils,18,https://hail.is,https://github.com/hail-is/hail/pull/3806,1,['Test'],['TestUtils']
Testability,use nonExtremeDouble to avoid test failures,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2366:30,test,test,30,https://hail.is,https://github.com/hail-is/hail/pull/2366,1,['test'],['test']
Testability,"use the sample file of GWAS Tutorial. Code: ; hl.utils.get_1kg('data/'); vcfVds = hl.import_vcf('data/1kg.vcf.bgz', min_partitions=8); vds = hl.nirvana(vcfVds,'data/nirvana.properties'). Version:; Running on Apache Spark version 2.2.1; Hail version: 0.2.10-ceb85fc87544. We got this error massage:; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""</usr/local/lib/python3.6/dist-packages/decorator.py:decorator-gen-1226>"", line 2, in nirvana; File ""/seqslab/hail/hail/build/distributions/hail-python.zip/hail/typecheck/check.py"", line 561, in wrapper; File ""/seqslab/hail/hail/build/distributions/hail-python.zip/hail/methods/qc.py"", line 860, in nirvana; File ""/usr/local/spark/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; File ""/seqslab/hail/hail/build/distributions/hail-python.zip/hail/utils/java.py"", line 227, in deco; hail.utils.java.FatalError: AssertionError: assertion failed. Java stack trace:; java.lang.AssertionError: assertion failed; at scala.Predef$.assert(Predef.scala:156); at is.hail.methods.Nirvana$.annotate(Nirvana.scala:361); at is.hail.methods.Nirvana$.apply(Nirvana.scala:487); at is.hail.methods.Nirvana.apply(Nirvana.scala); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); at py4j.Gateway.invoke(Gateway.java:280); at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); at py4j.commands.CallCommand.execute(CallCommand.java:79); at py4j.GatewayConnection.run(GatewayConnection.java:214); at java.lang.Thread.run(Thread.java:748). Hail version: 0.2.10-ceb85fc87544; Error summary: AssertionError: assertion failed. W",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5657:1036,Assert,AssertionError,1036,https://hail.is,https://github.com/hail-is/hail/issues/5657,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,"user endpoint is properly deleting cloud identities when the users are deleted (previously broken in GCP but fixed in this PR.; - The developer role no longer implicitly deletes and recreates a corresponding namespace. I wanted adding developers to test namespaces not to have side-effects that leaked out of the namespace. A follow-up PR will incorporate the ability for a developer to request an on-demand dev namespace, which should be made a lot easier after these changes. I think this also means that we can remove some permissions from the auth K8s ServiceAccount since it no longer needs the ability to create and delete namespaces.; - A fixed-but-sufficient number of oauth2 callbacks are hard-coded into the oauth2 secret from GCP/azure and then allocated to a given namespace. This is fairly self-contained, all that needs to happen is to tell `auth` what callback to use and rewrite those callback urls in gateway to route back to the appropriate auth. This is done only for test namespaces, production still just uses `auth.hail.is/oauth2callback`. This gets around a long-standing limitation of Google oauth2 clients where there is no programmatic way to change the oauth2 callbacks. ### What has stayed the same; - The lifecycle of dev and test namespaces has not changed (future PR).; - The semantics of a dev deploy has not changed (other than a different oauth2 callback which the user will not notice). ### Testing; I've tested this branch in my own google project both by deploying main and updating to this branch and by deploying this branch from the beginning. The CI in my project ran both some dev deploys and a test batch because I PR'd this branch against my fork. Tested that I could access both my dev namespace and the test namespace in that deployment. I manually verified that dev cloud identities in the test namespace were deleted after the namespace was cleaned up. I dev deployed this branch in Azure and made sure that create-user and delete-user created and delet",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12751:1973,test,test,1973,https://hail.is,https://github.com/hail-is/hail/pull/12751,1,['test'],['test']
Testability,"ustomPlugin and DescribeConnector responses to return errors from asynchronous resource creation.</li>; </ul>; <h1>1.21.9</h1>; <ul>; <li>api-change:<code>finspace-data</code>: [<code>botocore</code>] Add new APIs for managing Users and Permission Groups.</li>; <li>api-change:<code>amplify</code>: [<code>botocore</code>] Add repositoryCloneMethod field for hosting an Amplify app. This field shows what authorization method is used to clone the repo: SSH, TOKEN, or SIGV4.</li>; <li>api-change:<code>fsx</code>: [<code>botocore</code>] This release adds support for the following FSx for OpenZFS features: snapshot lifecycle transition messages, force flag for deleting file systems with child resources, LZ4 data compression, custom record sizes, and unsetting volume quotas and reservations.</li>; <li>api-change:<code>fis</code>: [<code>botocore</code>] This release adds logging support for AWS Fault Injection Simulator experiments. Experiment templates can now be configured to send experiment activity logs to Amazon CloudWatch Logs or to an S3 bucket.</li>; <li>api-change:<code>route53-recovery-cluster</code>: [<code>botocore</code>] This release adds a new API option to enable overriding safety rules to allow routing control state updates.</li>; <li>api-change:<code>amplifyuibuilder</code>: [<code>botocore</code>] We are adding the ability to configure workflows and actions for components.</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/boto/boto3/commit/67b84e02c185294c54a8e49510d4cb962e89cee2""><code>67b84e0</code></a> Merge branch 'release-1.21.13'</li>; <li><a href=""https://github.com/boto/boto3/commit/99acd545b20fe30ffa2f589a674c5a7ad74c266b""><code>99acd54</code></a> Bumping version to 1.21.13</li>; <li><a href=""https://github.com/boto/boto3/commit/83a8f662655bada44d442df7f33cb20d71ead257""><code>83a8f66</code></a> Add changelog entries from botocore",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11504:5046,log,logs,5046,https://hail.is,https://github.com/hail-is/hail/pull/11504,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"ustomPlugin and DescribeConnector responses to return errors from asynchronous resource creation.</li>; </ul>; <h1>1.21.9</h1>; <ul>; <li>api-change:<code>finspace-data</code>: [<code>botocore</code>] Add new APIs for managing Users and Permission Groups.</li>; <li>api-change:<code>amplify</code>: [<code>botocore</code>] Add repositoryCloneMethod field for hosting an Amplify app. This field shows what authorization method is used to clone the repo: SSH, TOKEN, or SIGV4.</li>; <li>api-change:<code>fsx</code>: [<code>botocore</code>] This release adds support for the following FSx for OpenZFS features: snapshot lifecycle transition messages, force flag for deleting file systems with child resources, LZ4 data compression, custom record sizes, and unsetting volume quotas and reservations.</li>; <li>api-change:<code>fis</code>: [<code>botocore</code>] This release adds logging support for AWS Fault Injection Simulator experiments. Experiment templates can now be configured to send experiment activity logs to Amazon CloudWatch Logs or to an S3 bucket.</li>; <li>api-change:<code>route53-recovery-cluster</code>: [<code>botocore</code>] This release adds a new API option to enable overriding safety rules to allow routing control state updates.</li>; <li>api-change:<code>amplifyuibuilder</code>: [<code>botocore</code>] We are adding the ability to configure workflows and actions for components.</li>; <li>api-change:<code>athena</code>: [<code>botocore</code>] This release adds support for updating an existing named query.</li>; <li>api-change:<code>ec2</code>: [<code>botocore</code>] This release adds support for new AMI property 'lastLaunchedTime'</li>; <li>api-change:<code>servicecatalog-appregistry</code>: [<code>botocore</code>] AppRegistry is deprecating Application and Attribute-Group Name update feature. In this release, we are marking the name attributes for Update APIs as deprecated to give a heads up to our customers.</li>; </ul>; <h1>1.21.8</h1>; <ul>; <li>api-chan",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11486:3599,log,logs,3599,https://hail.is,https://github.com/hail-is/hail/pull/11486,2,"['Log', 'log']","['Logs', 'logs']"
Testability,"ut it on your path) from the `hail/` subdirectory. It should report version `0.11.6`. ## Mill from the command line. * `mill clean` - delete all output files (in `hail/hail/out`). Or only delete the output of one target, e.g. `mill clean test.compile`; * `mill compile` - compiles the root module (not including tests); * `mill test.compile` - compiles tests (and, transitively, the rest of the root module); * `mill test.test`, or for short `mill test` - run all tests. You can pass options to the test runner (TestNG currently), e.g.* * `mill test -methods is.hail.expr.ir.CallFunctionsSuite.constructors` to run one test, or `mill test -threadcount 4 -parallel classes` to use 4 threads and parallelize over test classes; * `mill test.testOnly is.hail.expr.ir.CallFunctionsSuite` - run all tests in one or more specified classes. You can use `*` to match anything, e.g. `mill test.testOnly ""*.CallFunctionsSuite""`, or `mill test.testOnly ""is.hail.expr.ir.*""`. You can pass options to the test runner (TestNG currently) after a `--`, e.g. `mill test.testOnly ""is.hail.expr.ir.*"" -- -parallel classes`; * `mill __.testCached` - once the codebase is more modularized, will run tests on only modules whose dependencies have changed since the last test run; * `mill reformat` - runs scalafmt on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.reformat` runs scalaformat on all sources in all modules. `mill __.checkFormat` only checks for rule failures (we run this in ci); * `mill fix` - runs scalafix on all sources in the root module (currently that's all scala sources, but hopefully not for long). `mill __.fix` runs scalafix on all sources in all modules. `mill __.fix --check` only checks for rule failures (we run this in ci). You can pass any options to scalafix, e.g. `mill fix --help`.; * `mill inspect` - see the docstring and dependencies for any target, e.g. `mill inspect compile`; * `mill ivyDepsTree` - show the tree of externa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14147:1590,test,test,1590,https://hail.is,https://github.com/hail-is/hail/pull/14147,2,"['Test', 'test']","['TestNG', 'test']"
Testability,"ut.committer.class org.apache.spark.sql.parquet.DirectParquetOutputCommitter; spark.hadoop.mapred.output.committer.class org.apache.hadoop.mapred.DirectFileOutputCommitter; spark.hadoop.mapreduce.use.directfileoutputcommitter true; spark.hadoop.spark.sql.parquet.output.committer.class org.apache.spark.sql.parquet.DirectParquetOutputCommitter; ```. Code and stack trace:; ```; ================================================================================================== FAILURES ===================================================================================================; __________________________________________________________________________________________ TestHAIL.test_export_vcf ___________________________________________________________________________________________. self = <test_hail.TestHAIL testMethod=test_export_vcf>. def test_export_vcf(self):; # define files; bgen_file = os.path.join(self.testdir, 'example.10bits.bgen'); sample_file = os.path.join(self.testdir, 'example.sample'); # make index; self.hc.index_bgen(bgen_file); # load to vds; bgen_vds = self.hc.import_bgen(bgen_file, sample_file=sample_file); # export vcf; out_path = 'file://' + os.path.join(self.tmpdir, 'test_vcf_export.vcf.bgz'); > bgen_vds.export_vcf(out_path, export_pp=False, parallel=False). tests/hail/test_hail.py:55:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; <decorator-gen-398>:2: in export_vcf; ???; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. func = <function export_vcf at 0x7fa13c4d9938>, args = (<hail.dataset.VariantDataset object at 0x7fa13c3c9390>, 'file:///scratch/test_vcf_export.vcf.bgz', None, False, False), kwargs = {}; e = Py4JJavaError",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3946:1618,test,testdir,1618,https://hail.is,https://github.com/hail-is/hail/issues/3946,1,['test'],['testdir']
Testability,ute.hail.methods.FilterSuite.filterTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.FilterSuite.treeTransformerTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.GQByDPBinSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeStreamSuite.testGenotypeStream PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.GenotypeSuite.testGenotype PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.HWESuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.IntervalListSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.LEB128Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.exactTestsTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.meanTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.modeTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.pmfTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.stats.LeveneHaldaneSuite.varianceTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.LinearRegressionSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MendelErrorsSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.MultiArray2Suite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.PedigreeSuite.test PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.vcf.SplitSuite.SplitTest PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testD_$eq$eq PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.utils.UtilsSuite.testFlushDouble PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.testFilterSamples PASSED; Gradle suite > Gradle test > org.broadinstitute.hail.variant.vsm.VSMSuite.tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/136#issuecomment-171361971:2326,test,test,2326,https://hail.is,https://github.com/hail-is/hail/pull/136#issuecomment-171361971,1,['test'],['test']
Testability,"uting eigendecomposition of kinship matrix...; 2017-08-28 21:47:49 Hail: INFO: lmmreg: Estimating delta using REML... ; 2017-08-28 21:47:49 Hail: INFO: lmmreg: Evals 1 to 7: 3.09757, 2.66667, 2.23576, 0.00000, 0.00000, -0.00000, -0.00000; 2017-08-28 21:47:49 Hail: INFO: lmmreg: Evals 7 to 1: -0.00000, -0.00000, 0.00000, 0.00000, 2.23576, 2.66667, 3.09757; 2017-08-28 21:47:50 Hail: INFO: lmmreg: global model fit: beta = Map(intercept -> 0.48721539559123606, sa.cov.Cov1 -> 0.5924758486080468, sa.cov.Cov2 -> -0.23132255249379874); 2017-08-28 21:47:50 Hail: INFO: lmmreg: global model fit: sigmaG2 = 0.25961182888248313; 2017-08-28 21:47:50 Hail: INFO: lmmreg: global model fit: sigmaE2 = 0.02099926061895032; 2017-08-28 21:47:50 Hail: INFO: lmmreg: global model fit: delta = 0.08088714874566029; 2017-08-28 21:47:50 Hail: INFO: lmmreg: global model fit: h2 = 0.9251659631261897; 2017-08-28 21:47:50 Hail: INFO: lmmreg: global model fit: seH2 = 0.11525741506951385; 2017-08-28 21:47:50 Hail: INFO: baldingnichols: generating genotypes for 10 populations, 100 samples, and 300 variants...; 2017-08-28 21:47:50 Hail: INFO: Coerced sorted dataset; bash: line 12: 5047 Segmentation fault spark-submit --class org.testng.TestNG --jars ./hail-all-spark-test.jar --conf ""spark.driver.extraClassPath=./hail-all-spark-test.jar"" --conf 'spark.executor.extraClassPath=./hail-all-spark-test.jar' ./hail-all-spark-test.jar ./testng.xml; + TEST_EXIT_CODE=139; + set -e; + gcloud --project broad-ctsa compute scp --recurse cluster-ci-d1n0nk3vmzf4-m:test-output test-output; scp: test-output: No such file or directory; ERROR: (gcloud.compute.scp) [/usr/bin/scp] exited with return code [1].; + cleanup; + gcloud --project broad-ctsa -q dataproc clusters delete --async cluster-ci-d1n0nk3vmzf4; Deleting [https://dataproc.googleapis.com/v1/projects/broad-ctsa/regions/global/clusters/cluster-ci-d1n0nk3vmzf4] with operation [projects/broad-ctsa/regions/global/operations/3a35ffb5-aac5-4329-9762-67a8f4fadf66].; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2132#issuecomment-325495835:7423,test,testng,7423,https://hail.is,https://github.com/hail-is/hail/pull/2132#issuecomment-325495835,10,"['Test', 'test']","['TestNG', 'test', 'test-output', 'testng']"
Testability,v6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12\n2022-11-15 20:31:30.968 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.12 response 200\n2022-11-15 20:31:30.990 ServiceBackend$: INFO: result 12 complete - 8157265 bytes\n2022-11-15 20:31:30.990 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.13\n2022-11-15 20:31:31.186 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:41528,test,test-,41528,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:36799,test,test-,36799,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.0\n2022-11-15 20:31:28.080 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.0 response 200\n2022-11-15 20:31:28.104 ServiceBackend$: INFO: result 0 complete - 8157265 bytes\n2022-11-15 20:31:28.104 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:36584,test,test-,36584,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:37324,test,test-,37324,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.1\n2022-11-15 20:31:28.293 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.1 response 200\n2022-11-15 20:31:28.313 ServiceBackend$: INFO: result 1 complete - 8157265 bytes\n2022-11-15 20:31:28.313 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:37109,test,test-,37109,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:37849,test,test-,37849,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.2\n2022-11-15 20:31:28.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.2 response 200\n2022-11-15 20:31:28.587 ServiceBackend$: INFO: result 2 complete - 8157265 bytes\n2022-11-15 20:31:28.587 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:37634,test,test-,37634,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:38374,test,test-,38374,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.3\n2022-11-15 20:31:28.782 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.3 response 200\n2022-11-15 20:31:28.812 ServiceBackend$: INFO: result 3 complete - 8157265 bytes\n2022-11-15 20:31:28.812 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:38159,test,test-,38159,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:38899,test,test-,38899,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.4\n2022-11-15 20:31:29.027 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.4 response 200\n2022-11-15 20:31:29.057 ServiceBackend$: INFO: result 4 complete - 8157265 bytes\n2022-11-15 20:31:29.057 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:38684,test,test-,38684,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:39424,test,test-,39424,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.5\n2022-11-15 20:31:29.250 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.5 response 200\n2022-11-15 20:31:29.272 ServiceBackend$: INFO: result 5 complete - 8157265 bytes\n2022-11-15 20:31:29.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:39209,test,test-,39209,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objec,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:39949,test,test-,39949,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.6\n2022-11-15 20:31:29.462 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.6 response 200\n2022-11-15 20:31:29.486 ServiceBackend$: INFO: result 6 complete - 8157265 bytes\n2022-11-15 20:31:29.487 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/object,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:39734,test,test-,39734,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/ob,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:40474,test,test-,40474,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.7\n2022-11-15 20:31:29.704 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.7 response 200\n2022-11-15 20:31:29.795 ServiceBackend$: INFO: result 7 complete - 8157265 bytes\n2022-11-15 20:31:29.795 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/obj,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:40259,test,test-,40259,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,vXjgv6-LMY%3D%2Fresult.8\n2022-11-15 20:31:29.983 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.8 response 200\n2022-11-15 20:31:30.006 ServiceBackend$: INFO: result 8 complete - 8157265 bytes\n2022-11-15 20:31:30.006 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9\n2022-11-15 20:31:30.249 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.9 response 200\n2022-11-15 20:31:30.271 ServiceBackend$: INFO: result 9 complete - 8157265 bytes\n2022-11-15 20:31:30.272 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10\n2022-11-15 20:31:30.499 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.10 response 200\n2022-11-15 20:31:30.522 ServiceBackend$: INFO: result 10 complete - 8157265 bytes\n2022-11-15 20:31:30.522 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11\n2022-11-15 20:31:30.691 Requester: INFO: request GET http://memory.hail/api/v1alpha/objects?q=gs%3A%2F%2Fhail-test-dmk9z%2FparallelizeAndComputeWithIndex%2Fpty4D81uzQk6XN9LVVebj6KNvkh8SC3EzvXjgv6-LMY%3D%2Fresult.11 response 200\n2022-11-15 20:31:30.712 ServiceBackend$: INFO: result 11 complete - 8157265 bytes\n2022-11-15 20:31:30.712 Requester: INFO: request GET http://memory.hail/api/v1alpha/,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284:40784,test,test-,40784,https://hail.is,https://github.com/hail-is/hail/pull/12470#issuecomment-1315959284,2,['test'],['test-']
Testability,va.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124); at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448); at java.lang.StringBuffer.append(StringBuffer.java:270); at org.apache.log4j.helpers.PatternParser$LiteralPatternConverter.format(PatternParser.java:419); at org.apache.log4j.PatternLayout.format(PatternLayout.java:506); at org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:310); at org.apache.log4j.WriterAppender.append(WriterAppender.java:162); at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251); at org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66); at org.apache.log4j.Category.callAppenders(Category.java:206); at org.apache.log4j.Category.forcedLog(Category.java:391); at org.apache.log4j.Category.log(Category.java:856); at org.slf4j.impl.Log4jLoggerAdapter.warn(Log4jLoggerAdapter.java:400); at org.apache.spark.internal.Logging$class.logWarning(Logging.scala:66); at org.apache.spark.scheduler.TaskSetManager.logWarning(TaskSetManager.scala:52); at org.apache.spark.scheduler.TaskSetManager.handleFailedTask(TaskSetManager.scala:693); at org.apache.spark.scheduler.TaskSchedulerImpl.handleFailedTask(TaskSchedulerImpl.scala:421); at org.apache.spark.scheduler.TaskResultGetter$$anon$3$$anonfun$run$2.apply$mcV$sp(TaskResultGetter.scala:139); at org.apache.spark.scheduler.TaskResultGetter$$anon$3$$anonfun$run$2.apply(TaskResultGetter.scala:124); at org.apache.spark.scheduler.TaskResultGetter$$anon$3$$anonfun$run$2.apply(TaskResultGetter.scala:124); at org.apache.spark.util.Utils$.logUncaughtExceptions(Utils.scala:1953); at org.apache.spark.scheduler.TaskResultGetter$$anon$3.run(TaskResultGetter.scala:124); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745); ```; `pyhail-submit`:,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1186#issuecomment-267416027:1459,log,logWarning,1459,https://hail.is,https://github.com/hail-is/hail/issues/1186#issuecomment-267416027,3,"['Log', 'log']","['Logging', 'logWarning']"
Testability,va.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[8]([Ljava.lang.String;@3c215dd4) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[9]([Ljava.lang.String;@5a40cc5) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[10]([Ljava.lang.String;@69594c0e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[11]([Ljava.lang.String;@5ea39a14) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[12]([Ljava.lang.String;@21ebf782) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[13]([Ljava.lang.String;@3bda762a) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e)(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.writeReadGivesSameAsInput[14]([Ljava.lang.String;@4898b38e) FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: ,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:5573,test,test,5573,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,va:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); 	at org.testng.TestNG.run(TestNG.java:1057); 	at org.testng.TestNG.privateMain(TestNG.java:1364); 	at org.testng.TestNG.main(TestNG.java:1333); 	Suppressed: is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-2LzGioRNy6RqIS2pfXIoSO&uploadType=resumable&upload_id=ADPycdvZ5HhnGfOKt5TE1qXWiHpqIpZnXVTYWuWUCXNPRF9HqyCB-4LvRsxNX6SUWRgk13pYrzYaa9-wXlvNZt1oct0ptaEz0bS3; chunkOffset: 16777216; chunkLength: 16777216; localOffset: 268435456; remoteOffset: 285212672; lastChunk: false. 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 		at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 		at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 		at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 		at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 		at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.fl,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911:5285,test,test-ezlis,5285,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1704346911,1,['test'],['test-ezlis']
Testability,"va:83); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:82); at sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:822); at com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:79); at sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:794); at sun.net.httpserver.ServerImpl$DefaultExecutor.execute(ServerImpl.java:199); at sun.net.httpserver.ServerImpl$Dispatcher.handle(ServerImpl.java:544); at sun.net.httpserver.ServerImpl$Dispatcher.run(ServerImpl.java:509); at java.lang.Thread.run(Thread.java:750); ```. Interesting thing is, when I tried to convert the exactly same data in local computer using singularity instead of docker, it worked. Also, for the the other chromosomes with less variants but same samples, such as chr13, it worked well in Terra. Since we will convert multiple plink files to hailmatrix table using Terra platform in future, I need to figure the problem out. Any advise would be appreciated. ### Version. 0.2.127. ### Relevant log output. ```shell; 2024/01/17 20:20:25 Starting container setup.; 2024/01/17 20:20:26 Done container setup.; 2024/01/17 20:20:27 Starting localization.; 2024/01/17 20:20:34 Localization script execution started...; 2024/01/17 20:20:34 Localizing input gs://fc-5a8938eb-1299-4afc-957f-afb53ef602b9/submissions/e8747e74-47d1-4f52-acfc-1ac7f81d79ba/VUMCBed2HailMatrix/683447d9-9342-4058-bcfc-ba21422d3121/call-Bed2HailMatrix/script -> /cromwell_root/script; 2024/01/17 20:20:36 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bed -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bed; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.fam -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.fam; 2024/01/17 20:59:18 Localizing input gs://hui-sandbox/ICA-AGD/plink1/chr12.bim -> /cromwell_root/hui-sandbox/ICA-AGD/plink1/chr12.bim; Copying gs://hui-sandbox/ICA-AGD/plink1/chr12.fam...; / [0 files][ 0.0 B/910.3 KiB] / [1 files][910.3 KiB/910.3 KiB] Copying gs://hui-sa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:9144,log,log,9144,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['log'],['log']
Testability,"van""><code>@​krmahadevan</code></a> in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2849"">cbeust/testng#2849</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/gruenich""><code>@​gruenich</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2781"">cbeust/testng#2781</a></li>; <li><a href=""https://github.com/anatolyuzhakov""><code>@​anatolyuzhakov</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2793"">cbeust/testng#2793</a></li>; <li><a href=""https://github.com/spkrka""><code>@​spkrka</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2802"">cbeust/testng#2802</a></li>; <li><a href=""https://github.com/JLLeitschuh""><code>@​JLLeitschuh</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2806"">cbeust/testng#2806</a></li>; <li><a href=""https://github.com/seregamorph""><code>@​seregamorph</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2808"">cbeust/testng#2808</a></li>; <li><a href=""https://github.com/melloware""><code>@​melloware</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2827"">cbeust/testng#2827</a></li>; <li><a href=""https://github.com/speedythesnail""><code>@​speedythesnail</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/cbeust/testng/pull/2826"">cbeust/testng#2826</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/cbeust/testng/blob/master/CHANGES.txt"">org.testng:testng's changelog</a>.</em></p>; <blockquote>; <p>7.7.1; Fixed: GITHUB-2854: overloaded assertEquals methods do not work from",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:8855,test,testng,8855,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,['test'],['testng']
Testability,"vascript brings to mind ""bloated""; this is an implementation issue. PHP/Python/Perl websites also used to be slow and ugly (Geocities).; * NodeJS/Javascript/V8 JIT is consistently faster than PHP, Python, and ~Java: https://www.techempower.com/benchmarks/. ## Why NodeJS, React, etc; 1. Javascript is the only language supported by modern browsers. Web assembly will change this (compile target == web assembly, language == rust | go | python), but is not nearly as mature; 2. Ecosystem. Chosen technologies are (likely) by far the most popular. We should quantify this better; 3. Performance. NodeJS is faster than Flask, React is ~fastest JS view layer. Next makes it really easy to split app into page bundles, and (on localhost) achieves DOMContentLoaded of ~70-100ms, and faster interactivity: first loaded page (the page of the current route) is ~6-10ms.; * [Techempower]: https://www.techempower.com/benchmarks/; * [Node vs , ](https://medium.com/@mihaigeorge.c/web-rest-api-benchmark-on-a-real-life-application-ebb743a5d7a3). * React vs other client side micro bench (pay attention to ""Non-keyed""): https://krausest.github.io/js-framework-benchmark/current.html; 4. Structure, aforementioned; 5. Path to relatively performant desktop and mobile applications, via [Electron](https://getstream.io/blog/takeaways-on-building-a-react-based-app-with-electron/). [Visual Studio Code](https://github.com/Microsoft/vscode) and [Slack](https://slack.engineering/growing-pains-migrating-slacks-desktop-app-to-browserview-2759690d9c7b) are good examples. Facebook Messenger written in React Native, which we have an even more straightforward path to.; 6. Low cognitive cost (relative to Angular, others. React is just a view layer, and has a tiny API. I've develop a large application in AngularJS, and have spent a bit of time with Angular2+. There is no comparison: Angular takes months to know well, React days at worst. Also, by not buying into a full framework, we achieve modularity: If we end up ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:3744,benchmark,benchmark-on-a-real-life-application-,3744,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['benchmark'],['benchmark-on-a-real-life-application-']
Testability,"vascript/V8 JIT is consistently faster than PHP, Python, and ~Java: https://www.techempower.com/benchmarks/. ## Why NodeJS, React, etc; 1. Javascript is the only language supported by modern browsers. Web assembly will change this (compile target == web assembly, language == rust | go | python), but is not nearly as mature; 2. Ecosystem. Chosen technologies are (likely) by far the most popular. We should quantify this better; 3. Performance. NodeJS is faster than Flask, React is ~fastest JS view layer. Next makes it really easy to split app into page bundles, and (on localhost) achieves DOMContentLoaded of ~70-100ms, and faster interactivity: first loaded page (the page of the current route) is ~6-10ms.; * [Techempower]: https://www.techempower.com/benchmarks/; * [Node vs , ](https://medium.com/@mihaigeorge.c/web-rest-api-benchmark-on-a-real-life-application-ebb743a5d7a3). * React vs other client side micro bench (pay attention to ""Non-keyed""): https://krausest.github.io/js-framework-benchmark/current.html; 4. Structure, aforementioned; 5. Path to relatively performant desktop and mobile applications, via [Electron](https://getstream.io/blog/takeaways-on-building-a-react-based-app-with-electron/). [Visual Studio Code](https://github.com/Microsoft/vscode) and [Slack](https://slack.engineering/growing-pains-migrating-slacks-desktop-app-to-browserview-2759690d9c7b) are good examples. Facebook Messenger written in React Native, which we have an even more straightforward path to.; 6. Low cognitive cost (relative to Angular, others. React is just a view layer, and has a tiny API. I've develop a large application in AngularJS, and have spent a bit of time with Angular2+. There is no comparison: Angular takes months to know well, React days at worst. Also, by not buying into a full framework, we achieve modularity: If we end up finding React too slow, even with [planned 2019 improvements](https://reactjs.org/blog/2018/11/27/react-16-roadmap.html), there are plenty of others",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:3909,benchmark,benchmark,3909,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['benchmark'],['benchmark']
Testability,"vcf; running: write -o /Users/cseed/sample.vds; Exception in thread ""main"" java.lang.AssertionError: assertion failed: Unsound substitution from List(type T) to List(); at scala.reflect.internal.Types$SubstMap.<init>(Types.scala:4644); at scala.reflect.internal.Types$SubstTypeMap.<init>(Types.scala:4761); at scala.reflect.internal.Types$Type.subst(Types.scala:796); at scala.reflect.internal.Types$TypeApiImpl.substituteTypes(Types.scala:321); at scala.reflect.internal.Types$TypeApiImpl.substituteTypes(Types.scala:298); ```. and so on. I'm guessing this has to do with the doubly-nested Maps. The following fixes the problem (but of course throws out all the annotations):. ```; diff --git a/src/main/scala/org/broadinstitute/hail/variant/VariantSampleMatrix.scala b/src/main/scala/org/broadinstitute/hail/variant/VariantSampleMatrix.scala; index 2c95bd0..c480c86 100644; --- a/src/main/scala/org/broadinstitute/hail/variant/VariantSampleMatrix.scala; +++ b/src/main/scala/org/broadinstitute/hail/variant/VariantSampleMatrix.scala; @@ -30,7 +30,7 @@ object VariantSampleMatrix {; // val df = sqlContext.read.parquet(dirname + ""/rdd.parquet""); val df = sqlContext.parquetFile(dirname + ""/rdd.parquet""); new VariantSampleMatrix[Genotype](metadata, df.rdd.map(r =>; - (r.getVariant(0), r.getVariantAnnotations(1), r.getGenotypeStream(2)))); + (r.getVariant(0), Annotations.emptyOfData(), r.getGenotypeStream(1)))); }; }. @@ -326,7 +326,7 @@ class RichVDS(vds: VariantDataset) {. // rdd.toDF().write.parquet(dirname + ""/rdd.parquet""); vds.rdd; - .map { case (v, va, gs) => (v, va, gs.toGenotypeStream(v, compress)) }; + .map[(Variant, GenotypeStream)] { case (v, va, gs) => (v, gs.toGenotypeStream(v, compress)) }; .toDF(); .saveAsParquetFile(dirname + ""/rdd.parquet""); }; ```. You should probably serialize the Annotations in some way in the map before writing them out (and deserialize when reading them in). Ugh. Also: add a test that does write vds, read, compare! I can't believe we missed this.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/116:2076,test,test,2076,https://hail.is,https://github.com/hail-is/hail/issues/116,1,['test'],['test']
Testability,"vds: caught exception: java.lang.IllegalArgumentException: requirement failed: nPartitions = 2847, ranges = 2844; 	at scala.Predef$.require(Predef.scala:233); 	at org.broadinstitute.hail.sparkextras.OrderedPartitioner.<init>(OrderedPartitioner.scala:27); 	at org.broadinstitute.hail.sparkextras.OrderedPartitioner$.read(OrderedPartitioner.scala:110); 	at org.broadinstitute.hail.variant.VariantSampleMatrix$$anonfun$8.apply(VariantSampleMatrix.scala:185); 	at org.broadinstitute.hail.variant.VariantSampleMatrix$$anonfun$8.apply(VariantSampleMatrix.scala:184); 	at org.broadinstitute.hail.utils.richUtils.RichHadoopConfiguration$.readObjectFile$extension(RichHadoopConfiguration.scala:205); 	at org.broadinstitute.hail.variant.VariantSampleMatrix$.read(VariantSampleMatrix.scala:184); 	at org.broadinstitute.hail.driver.Read$$anonfun$1.apply(Read.scala:41); 	at org.broadinstitute.hail.driver.Read$$anonfun$1.apply(Read.scala:41); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244); 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244); 	at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:108); 	at org.broadinstitute.hail.driver.Read$.run(Read.scala:41); 	at org.broadinstitute.hail.driver.Read$.run(Read.scala:9); 	at org.broadinstitute.hail.driver.Command.runCommand(Command.scala:259); 	at org.broadinstitute.hail.driver.Command.run(Command.scala:264); 	at org.broadinstitute.hail.driver.AnnotateVariantsVDS$.run(AnnotateVariantsVDS.scala:61); 	at org.broadinstitute.hail.driver.AnnotateVariantsVDS$.run(AnnotateVariantsVDS.scala:9)```. however, the same commands work on the hail version built on Spark 2. ; Here the log: https://storage.googleapis.com/maryam_lipids/hailL.log. thanks",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1213:2030,log,log,2030,https://hail.is,https://github.com/hail-is/hail/issues/1213,2,['log'],['log']
Testability,"ve all metadata, no metadata, or a; specific set of metadata fields. 5. The records are written to Google Cloud Logging. The pricing of VPC Flow Logs is described at the [network pricing page](https://cloud.google.com/vpc/network-pricing#network-telemetry). Notice that, if logs are only sent to Cloud Logging (not to BigQuery, Pub/Sub, or Cloud Storage):. > If you store your logs in Cloud Logging, logs generation charges are waived, and only Logging charges apply. I believe in this phrase ""logs generation charges"" refers to *VPC Flow logs* generation charges. The Google Cloud Logging [pricing page](https://cloud.google.com/stackdriver/pricing#google-clouds-operations-suite-pricing) indicates that, after 50 GiB of free logs, the user is charged 0.50 USD per GiB of logs. Storage is free for thirty days and 0.01 USD per GiB for each additional day. We can calculate the cost of our logs as follows. Refer to the [definition of the record format](https://cloud.google.com/vpc/docs/flow-logs#record_format) for details. ```python3; ip_string = len(""123.123.123.123""); ip_connection = 4 + ip_string + ip_string + 4 + 4; date_time = len(""1937-01-01T12:00:27.87+00:20""); record_bytes = sum((; ip_connection,; max(len('SRC'), len('DEST')),; 8,; 8,; 8,; date_time,; date_time,; )); assert record_bytes == 126. hours_per_month = 24 * 60; seconds_per_hour = 60 * 60. seconds_per_interval = 15 * 60; vms = 10000; sampling_rate = 0.5; connections_per_vm_per_aggregation_interval = 100. intervals_per_hour = seconds_per_hour / seconds_per_interval; records_per_hour = intervals_per_hour * vms * connections_per_vm_per_aggregation_interval * sampling_rate; bytes_per_hour = records_per_hour * record_bytes; bytes_per_month = bytes_per_hour * hours_per_month; GiB_per_month = bytes_per_month / 1024. / 1024 / 1024. USD_per_month = max(0, GiB_per_month - 50) * 0.5. print(GiB_per_month); print(USD_per_month); ```. This works out to 143 USD to run a 10,000 VM cluster 24 hours a day for 30 days. I suspect o",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12883:2390,log,logs,2390,https://hail.is,https://github.com/hail-is/hail/pull/12883,1,['log'],['logs']
Testability,"ve summary. Excess JVM memory use is almost certainly not the issue. I've taken a close look at the import_gvs.py loop and the related Hail Python code. No obvious accumulation of RAM use. AFAICT, the oomkiller keeps killing the pipelines. We need to stop this because the oomkiller (a) acts before the JVM GC can free things and (b) prevents us from getting JVM diagnostics on failure. We control the JVM's max heap with hailctl's --master-memory-fraction (default is 0.8 for 80% of the master machine type's advertised RAM). I suggest we set this down to 0.6 and continue using an n1-highmem-16 driver.; If Hail is (incorrectly) accumulating garbage memory per-group, we'll have a better chance diagnosing that with a running JVM instead of one that's been SIGKILL'ed. To understand what's going on, we gotta see what is using RAM in the n1-highmem-16 case. If I could SSH to the cluster, a simple solution is a screen with top -s 300 -n 100 >memory.log (I'd guess no more than 500KiB per hour of logs) and retrieve that file if the cluster fails. If we could get Google Monitoring set up to retrieve process-level memory statistics from the driver node that should also work. Just to be clear, I don't anticipate any changes to Hail in the next week that would change the memory use of this pipeline. There could be a memory leak, but I have no clews that lead to it. I realize this is an unsatisfying answer. I'm pretty perplexed as to what could be the issue here. #### technical details. We'll call the second to most recent run Run A and the most recent run Run B. Run A (like all runs before it) only manages two sample groups before failing. Run B made it through 50 groups before failing on 51. Why did they fail? The syslog for Run A is clear: the oomkiller killed Run A. We lack syslogs for Run B, so we cannot be certain but the lack of a JVM stack trace suggests to me that (a) the driver failed and (b) the driver was killed by the system.; Let's focus on the driver machines. In Run A,",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13960#issuecomment-1832666449:1026,log,log,1026,https://hail.is,https://github.com/hail-is/hail/issues/13960#issuecomment-1832666449,4,['log'],"['log', 'logs']"
Testability,"veLongFunc.o build/NativeModule.o build/NativePtr.o build/NativeStatus.o build/ObjectArray.o build/PartitionIterators.o build/Region.o build/Upcalls.o build/FS.o -o lib/linux-x86-64/libhail.so; cp -p -f lib/linux-x86-64/libboot.so lib/linux-x86-64/libhail.so ../../../prebuilt/lib/linux-x86-64/; make[1]: Leaving directory `/mnt/tmp/hail/hail/src/main/c'; ./gradlew shadowJar -Dscala.version=2.12.15 -Dspark.version=3.3.2 -Delasticsearch.major-version=7; Downloading https://services.gradle.org/distributions/gradle-8.3-bin.zip; ............10%............20%.............30%............40%.............50%............60%.............70%............80%.............90%............100%. Welcome to Gradle 8.3!. Here are the highlights of this release:; - Faster Java compilation; - Reduced memory usage; - Support for running on Java 20. For more details see https://docs.gradle.org/8.3/release-notes.html. Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; WARNING: Hail primarily tested with Spark 3.3.0, use other versions at your own risk. > Task :shadedazure:compileJava NO-SOURCE; > Task :shadedazure:processResources NO-SOURCE; > Task :shadedazure:classes UP-TO-DATE; > Task :shadedazure:shadowJar; > Task :compileJava NO-SOURCE; > Task :compileScala; > Task :processResources; > Task :classes; > Task :shadowJar. BUILD SUCCESSFUL in 4m 20s; 4 actionable tasks: 4 executed; cp -f build/libs/hail-all-spark.jar python/hail/backend/hail-all-spark.jar; rm -rf build/deploy; mkdir -p build/deploy; mkdir -p build/deploy/src; cp ../README.md build/deploy/; rsync -r \; --exclude '.eggs/' \; --exclude '.pytest_cache/' \; --exclude '__pycache__/' \; --exclude 'benchmark_hail/' \; --exclude '.mypy_cache/' \; --exclude 'docs/' \; --exclude 'dist/' \; --exclude 'test/' \; --exclude '*.log' \; python/ build/deploy/; # Clear the bdist build cache before building the wheel; cd build/deploy; rm -rf build; python3 setup.py -q sdist bdist_wheel; WARNING: The wheel packa",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221:15964,test,tested,15964,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221,1,['test'],['tested']
Testability,"ved for enrtries nonetheless. `#import libraries; import os; import hail as hl; from pprint import pprint. #### Start hail; hl.init(); hl.spark_context()`. /opt/conda/lib/python3.10/site-packages/hailtop/aiocloud/aiogoogle/user_config.py:44: UserWarning:. Reading spark-defaults.conf to determine GCS requester pays configuration. This is deprecated. Please use `hailctl config set gcs_requester_pays/project` and `hailctl config set gcs_requester_pays/buckets`. SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.18.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Running on Apache Spark version 3.3.0; SparkUI available at http://saturn-3f2d119c-05e5-496d-97b9-8f40efff98a3-m.c.terra-db12d060.internal:36235/; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version 0.2.126-ee77707f4fab; LOGGING: writing to /home/jupyter/Ellinor_Lubitz_PHB_Joint_Analyses/edit/hail-20231216-1801-0.2.126-ee77707f4fab.log. SparkContext. [Spark UI](http://saturn-3f2d119c-05e5-496d-97b9-8f40efff98a3-m.c.terra-db12d060.internal:36235/). Version; v3.3.0; Master; yarn; AppName; pyspark-shell. `#### Read vcf; vcfs = [""gs://path/to/bucket/chrY.*.hard_filtered_with_genotypes.vcf.gz""]. #####; ##### Read vcf file; mt = hl.import_vcf(vcfs , force_bgz= True, reference_genome='GRCh38', find_replace=('null', '.')). mt.count(); `. 2023-12-16 18:02:00.897 Hail: INFO: scanning VCF for sortedness... (4 + 3) / 7]; 2023-12-16 18:02:16.278 Hail: INFO: Coerced sorted VCF - no additiona",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14102:2541,log,logging,2541,https://hail.is,https://github.com/hail-is/hail/issues/14102,1,['log'],['logging']
Testability,"ved the code). - `.strip()` the GitHub token in case there are newlines. - print the SHA being deployed in the log statement. - add `hail-ci-build.sh` to CI, which just invokes `make test-in-cluster`(which in turn runs `test-in-cluster.sh`. - `test-in-cluster.sh` copies the secrets for testing to the expected locations and exposes the pod in which it is running with an internal service, recent changes to `site` [redirect sub URLs of ci.test.is to services named using this scheme](https://github.com/hail-is/hail/blob/master/site/hail.nginx.conf#L38-L41). GitHub uses these URLs to send updates to the CI under test about the watched repositories. - `test-locally.sh` now installs `../batch` into the currently running `pip` before testing (NB: if you edit batch and run the tests without committing the changes you've made to batch, this will pass tests but fail when pushed to a PR!). - `test-locally.sh` activates the `hail-ci` conda environment itself because it was not being propagated from the `Makefile`. I don't know why, but this is a simple fix. - `test-locally.sh` starts the ci after the repository is created. CI will print error messages if a watched repository doesn't exist. - `test/test-ci.py` now uses access tokens for all interaction with GitHub, previously it relied on the latent privileges that I and Cotton had in our environments. - `test/test-ci.py` uses a temporary, but not automatically deleted, directory when the environment variable `IN_CLUSTER` is set to `true` (to which it is set by `test-in-cluster.sh`). I noticed that, when running in a batch job pod, if an error occurred, `pytest` failed to print any error information and instead failed because the current working directory no longer existed. I found very little information on Google about this. It seems safe to not clean up temporary directories created in the batch job pod because pods are ephemeral. cc: @cseed. Assigning to @tpoterba since he has the most context on this stuff other than Cotton.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4474:1532,test,test-locally,1532,https://hail.is,https://github.com/hail-is/hail/pull/4474,6,['test'],"['test', 'test-ci', 'test-in-cluster', 'test-locally']"
Testability,versable.scala:108); 	at is.hail.expr.ir.Emit.emitI(Emit.scala:815); 	at is.hail.expr.ir.Emit$.$anonfun$apply$4(Emit.scala:99); 	at is.hail.expr.ir.EmitCodeBuilder$.scoped(EmitCodeBuilder.scala:19); 	at is.hail.expr.ir.EmitCodeBuilder$.scopedCode(EmitCodeBuilder.scala:24); 	at is.hail.expr.ir.EmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1044); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.WrappedEmitMethodBuilder.emitWithBuilder$(EmitClassBuilder.scala:1095); 	at is.hail.expr.ir.EmitFunctionBuilder.emitWithBuilder(EmitClassBuilder.scala:1192); 	at is.hail.expr.ir.Emit$.apply(Emit.scala:97); 	at is.hail.expr.ir.Compile$.apply(Compile.scala:78); 	at is.hail.TestUtils$.eval(TestUtils.scala:256); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$5(TestUtils.scala:366); 	at scala.collection.immutable.Set$Set4.foreach(Set.scala:289); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4(TestUtils.scala:348); 	at is.hail.TestUtils$.$anonfun$assertEvalsTo$4$adapted(TestUtils.scala:339); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$3(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:47); 	at is.hail.utils.package$.using(package.scala:618); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:13); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:46); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:276); 	at is.hail.expr.ir.ExecuteContext$.$anonfun$scoped$1(ExecuteContext.scala:40); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.expr.ir.ExecuteContext$.scoped(ExecuteContext.scala:39); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:339); 	at is.hail.TestUtils$.assertEvalsTo(TestUtils.scala:314); 	at is.hail.expr.ir.IRSuite.testStreamLenUnconsumedInnerStream(IRSuite.scala:1800); 	at sun.reflect.NativeMethodAccessorImpl.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604:2264,Test,TestUtils,2264,https://hail.is,https://github.com/hail-is/hail/pull/10330#issuecomment-827119604,1,['Test'],['TestUtils']
Testability,very helpful when executing tests locally. Most of the lines here are noise because I added a function that wraps `client.create_batch` so needed to replace usages everywhere.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12884:28,test,tests,28,https://hail.is,https://github.com/hail-is/hail/pull/12884,1,['test'],['tests']
Testability,"vsm.annotatesamples had a really bad problem with it, where it was reducing the dimension of sampleAnnotations to the dimension of localSamples. Broke it with a test, and fixed the problem.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/239:161,test,test,161,https://hail.is,https://github.com/hail-is/hail/pull/239,1,['test'],['test']
Testability,"w index to support this. In case it's hard to find the exact comment in the PR, I pasted an example thread below:. Example comment from Dan: https://github.com/hail-is/hail/pull/14170/files#r1476847018. This is my concrete critqiue: the two SQL queries are nearly the same, but they are long enough to; make seeing that challenging. ```sql; SELECT jobs.batch_id, jobs.job_id; FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); WHERE batch_id = %s AND job_group_id = %s AND state = 'Ready' AND always_run = 0; LIMIT %s;; ```. ```sql; SELECT jobs.batch_id, jobs.job_id; FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); WHERE batch_id = %s AND job_group_id = %s AND state = 'Ready' AND always_run = 0 AND cancelled = 1; LIMIT %s;; ```. They only differ in the cancelled condition. As a reader, I'd prefer code that revealed that; similarity and used names to suggest what the difference was doing, and maybe a comment, if there is; no better way to say it, indicaing what you indicated in your GitHub comment. ```python3; if job_group['cancelled']:; where_job_needs_cancelling = '' # every job in a cancelled group needs cancelling; else:; where_job_needs_cancelling = 'AND jobs.cancelled' # jobs.cancelled means child of a failed job; query_for_jobs_to_be_cancelled = f""""""; SELECT jobs.batch_id, jobs.job_id; FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); WHERE batch_id = %s; AND job_group_id = %s; AND state = 'Ready'; AND NOT always_run; {where_job_needs_cancelling}; LIMIT %s;; """"""; async for record in self.db.select_and_fetchall(; query_for_jobs_to_be_cancelled,; (job_group['batch_id'], job_group['job_group_id'], remaining.value),; ):; yield record; ```. Other similar threads:. - https://github.com/hail-is/hail/pull/14282#discussion_r1487118601; - https://github.com/hail-is/hail/pull/14282#discussion_r1487150061; - https://github.com/hail-is/hail/pull/14282#discussion_r1487156802. ### Version. 0.2.128. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14412:2481,log,log,2481,https://hail.is,https://github.com/hail-is/hail/issues/14412,1,['log'],['log']
Testability,wait 900s for pipeline test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6092:23,test,test,23,https://hail.is,https://github.com/hail-is/hail/pull/6092,1,['test'],['test']
Testability,wait for deployment before testing service,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6011:27,test,testing,27,https://hail.is,https://github.com/hail-is/hail/pull/6011,1,['test'],['testing']
Testability,"we don't have a way to test this right now, right? (we could write something that templates with mock data). I want to next add something that colors the status link - but this will involve a bit of jinja language which I'll probably get wrong at first.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6105#issuecomment-491834040:23,test,test,23,https://hail.is,https://github.com/hail-is/hail/pull/6105#issuecomment-491834040,2,"['mock', 'test']","['mock', 'test']"
Testability,"we have a benchmarking suite in Python - it's very early, though, and not run as part of the CI. I'll add something there.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5075#issuecomment-454046705:10,benchmark,benchmarking,10,https://hail.is,https://github.com/hail-is/hail/pull/5075#issuecomment-454046705,1,['benchmark'],['benchmarking']
Testability,"we have some random failures of tests for some of our services related to resource contention, it's a big problem :(. If you push an empty commit, I can rerun the tests and hope they succeed this time...",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6676#issuecomment-512935301:32,test,tests,32,https://hail.is,https://github.com/hail-is/hail/pull/6676#issuecomment-512935301,2,['test'],['tests']
Testability,we need to add CI logic to prevent merging things that are stacked. This should have gone in after #6298,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6302#issuecomment-500597278:18,log,logic,18,https://hail.is,https://github.com/hail-is/hail/pull/6302#issuecomment-500597278,1,['log'],['logic']
Testability,"we now have our dev test environment running with hail 0.2.126 and this query took ~92 seconds. So faster, but we do still need some performance enhancements. @ehigham let me know what would be helpful for you to get you started on this effort",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13882#issuecomment-1795785654:20,test,test,20,https://hail.is,https://github.com/hail-is/hail/issues/13882#issuecomment-1795785654,1,['test'],['test']
Testability,"we only use 1 core in the benchmarks anyway -- I think the right solution is to set the executor env by default, set them all in the docker script for benchmarks, and not worry too much about non-benchmark local mode for now",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8050#issuecomment-583465417:26,benchmark,benchmarks,26,https://hail.is,https://github.com/hail-is/hail/pull/8050#issuecomment-583465417,3,['benchmark'],"['benchmark', 'benchmarks']"
Testability,"we recently locked down our CI to run PRs only from the development team -- we intend to add a feature to our CI to let us run the test suite on a specific PR and SHA, but don't have that feature yet... 😦 . @cseed 	@danking this isn't hard, right?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6262#issuecomment-498911743:131,test,test,131,https://hail.is,https://github.com/hail-is/hail/pull/6262#issuecomment-498911743,1,['test'],['test']
Testability,"we recommend that users check that; their own code does not use deprecated SciPy functionality (to do so,; run your code with <code>python -Wd</code> and check for <code>DeprecationWarning</code> s).; Our development attention will now shift to bug-fix releases on the; 1.8.x branch, and on adding new features on the master branch.</p>; <p>This release requires Python <code>3.8+</code> and <code>NumPy 1.17.3</code> or greater.</p>; <p>For running on PyPy, PyPy3 <code>6.0+</code> is required.</p>; <h1>Highlights of this release</h1>; <ul>; <li>A sparse array API has been added for early testing and feedback; this; work is ongoing, and users should expect minor API refinements over; the next few releases.</li>; <li>The sparse SVD library PROPACK is now vendored with SciPy, and an interface; is exposed via <code>scipy.sparse.svds</code> with <code>solver='PROPACK'</code>. It is currently; default-off due to potential issues on Windows that we aim to; resolve in the next release, but can be optionally enabled at runtime for; friendly testing with an environment variable setting of <code>USE_PROPACK=1</code>.</li>; <li>A new <code>scipy.stats.sampling</code> submodule that leverages the <code>UNU.RAN</code> C; library to sample from arbitrary univariate non-uniform continuous and; discrete distributions</li>; <li>All namespaces that were private but happened to miss underscores in; their names have been deprecated.</li>; </ul>; <h1>New features</h1>; <h1><code>scipy.fft</code> improvements</h1>; <p>Added an <code>orthogonalize=None</code> parameter to the real transforms in <code>scipy.fft</code>; which controls whether the modified definition of DCT/DST is used without; changing the overall scaling.</p>; <p><code>scipy.fft</code> backend registration is now smoother, operating with a single</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/scipy/scipy/commit/b5d8",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11538:1765,test,testing,1765,https://hail.is,https://github.com/hail-is/hail/pull/11538,1,['test'],['testing']
Testability,we should also add logic to cloudtools that checks if it's looking at an out-of-date hash,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4239#issuecomment-417437115:19,log,logic,19,https://hail.is,https://github.com/hail-is/hail/pull/4239#issuecomment-417437115,1,['log'],['logic']
Testability,we should do a random test:; - gen a multiallelic vds; - annotate variants (Still multi) with range(v.nAlleles).map(x => if (x == 0) NA: AltAllele else va.altAlleles[x]); - split; - ensure that va.anno[va.aIndex] == va.altAllele,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1160:22,test,test,22,https://hail.is,https://github.com/hail-is/hail/issues/1160,1,['test'],['test']
Testability,we test split multi,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1160#issuecomment-422370912:3,test,test,3,https://hail.is,https://github.com/hail-is/hail/issues/1160#issuecomment-422370912,1,['test'],['test']
Testability,"we; timeout substantially more frequently. I have observed this myself on my laptop. Just this; morning I saw it happen to Daniel. 2. When using an `aiohttp.AsyncIterablePayload`, it is *critical* to always check if the coroutine; which actually writes to GCS (which is stashed in the variable `request_task`) is still; alive. In the current `main`, we do not do this which causes hangs (in particular the timeout; exceptions are never thrown ergo we never retry). To understand the second problem, you must first recall how writing works in aiogoogle. There are; two Tasks and an `asyncio.Queue`. The terms ""writer"" and ""reader"" are somewhat confusing, so let's; use left and right. The left Task has the owning reference to both the source ""file"" and the; destination ""file"". In particular, it is the *left* Task which closes both ""files"". Moreover, the; left Task reads chunks from the source file and places those chunks on the `asyncio.Queue`. The; right Task takes chunks off the queue and writes those chunks to the destination file. This situation can go awry in two ways. First, if the right Task encounters any kind of failure, it will stop taking chunks off of the; queue. When the queue (which has a size limit of one) is full, the left Task will hang. The system; is stuck. The left Task will wait forever for the right Task to empty the queue. The second scenario is exactly the same except that the left Task is trying to add the ""stop""; message to the queue rather than a chunk. In either case, it is critical that the left Task waits simultaneously on the queue operation *and*; on the right Task completing. If the right Task has died, no further writes can occur and the left; Task must raise an exception. In the first scenario, we do not observe the right Task's exception; because that will be done when we close the `InsertObjectStream` (which represents the destination; ""file""). ---. I also added several types, assertions, and a few missing `async with ... as resp:` blocks.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11830:2156,assert,assertions,2156,https://hail.is,https://github.com/hail-is/hail/pull/11830,1,['assert'],['assertions']
Testability,"well, this is odd. I just rebuilt it for the 6th time on the HPC and it is registering the breeze function. It still fails these tests on the most current version pulled from the github today. ` Gradle suite > Gradle test > is.hail.methods.IBDSuite.ibdPlinkSameOnRealVCF FAILED; Gradle suite > Gradle test > is.hail.methods.IBDSuite.testIBDPlink FAILED; Gradle suite > Gradle test > is.hail.methods.ImputeSexSuite.testImputeSexPlinkVersion FAILED; Gradle suite > Gradle test > is.hail.stats.InbreedingCoefficientSuite.testIbcPlinkVersion FAILED; Gradle suite > Gradle test > is.hail.methods.LinearMixedRegressionSuite.genAndFitLMM FAILED`. It fails out with 244 tests completed and 5 failed. I've attached the test report ; [tests.zip](https://github.com/hail-is/hail/files/795132/tests.zip). There are two differences that I can tell between the current build and the previous times I've tried. 1. I was using a local installation of spark when it worked, whereas now I am using the HPC's version of spark 2.1.0. However, it passed the tests just fine when I was using a local copy of spark 2.0.2 on both my laptop and HPC. . 2. Initially I followed the recommendations on the doc pages to setup the python path references to py4j under `alias hail=""PYTHONPATH=$SPARK_HOME/python:$SPARK_HOME/python/lib/py4j-0.10.4-src.zip:$HAIL_HOME/python SPARK_CLASSPATH=$HAIL_HOME/build/libs/hail-all-spark.jar python""` This perhaps didn't export the PYTHONPATH to the py4j 10.4 .zip library if I hadn't run the `hail` command before I tried testing. My initial reaction was to just install a local copy of py4j via pip in my local copy of python since the tests were failing out with complaints about missing py4j module. That worked to get a little farther in the test script, to the point where it was failing out with the breeze function. But, since then I've re-jiggered the PYTHONPATH in the .bash_profile to always be defined to point to the SPARK_HOME version of py4j. This doesn't seem like it would be a",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1419#issuecomment-281846721:129,test,tests,129,https://hail.is,https://github.com/hail-is/hail/issues/1419#issuecomment-281846721,13,['test'],"['test', 'testIBDPlink', 'testIbcPlinkVersion', 'testImputeSexPlinkVersion', 'tests']"
Testability,what if you do a simpler benchmark: `filter_genotypes('g.gq > 20')`,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1292#issuecomment-275122784:25,benchmark,benchmark,25,https://hail.is,https://github.com/hail-is/hail/pull/1292#issuecomment-275122784,2,['benchmark'],['benchmark']
Testability,what's my review responsibility here? Standard review process? How does this interact with Jon setting up tests?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3872#issuecomment-409783596:106,test,tests,106,https://hail.is,https://github.com/hail-is/hail/pull/3872#issuecomment-409783596,1,['test'],['tests']
Testability,which do you mean?. - switch our exclusive spark testing/deployment from 2.2.0 to 2.3.X?; - test and deploy against 2.3.X as well as 2.2.0?; - something else?. I know people are using Hail with 2.3 successfully right now.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4578#issuecomment-431602419:49,test,testing,49,https://hail.is,https://github.com/hail-is/hail/issues/4578#issuecomment-431602419,2,['test'],"['test', 'testing']"
Testability,"which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png ""high severity"") | **661/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5 | Improper Neutralization of Special Elements in Data Query Logic <br/>[SNYK-PYTHON-MSAL-5904284](https://snyk.io/vuln/SNYK-PYTHON-MSAL-5904284) | `msal:` <br> `1.24.0 -> 1.24.1` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2NWVkZTk2ZC0xYjZkLTQ1ZjktOTU3OC00NzdjMWNmNDhiZmQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjY1ZWRlOTZkLTFiNmQtNDVmOS05NTc4LTQ3N2MxY2Y0OGJmZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13754:1524,test,tested,1524,https://hail.is,https://github.com/hail-is/hail/pull/13754,1,['test'],['tested']
Testability,"which is not installed.; aiosignal 1.3.1 requires frozenlist, which is not installed.; aiohttp 3.8.5 requires frozenlist, which is not installed. ```; </details>. #### Vulnerabilities that will be fixed. ##### By pinning:; Severity | Priority Score (*) | Issue | Upgrade | Breaking Change | Exploit Maturity; :-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------; ![high severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/h.png ""high severity"") | **661/1000** <br/> **Why?** Recently disclosed, Has a fix available, CVSS 7.5 | Improper Neutralization of Special Elements in Data Query Logic <br/>[SNYK-PYTHON-MSAL-5904284](https://snyk.io/vuln/SNYK-PYTHON-MSAL-5904284) | `msal:` <br> `1.24.0 -> 1.24.1` <br> | No | No Known Exploit . (*) Note that the real score may have changed since the PR was raised. Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJhYjlhNGM2ZS0xOTg1LTRmYTctYjg0OC0zOTNmOWE3MGJkMWEiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImFiOWE0YzZlLTE5ODUtNGZhNy1iODQ4LTM5M2Y5YTcwYmQxYSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13753:1516,test,tested,1516,https://hail.is,https://github.com/hail-is/hail/pull/13753,1,['test'],['tested']
Testability,"while the 1kg vcf that generated the assertion error looks like ; ```; ##fileformat=VCFv4.2; ##ApplyRecalibration=""analysis_type=ApplyRecalibration input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.padded.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta nonDeterministicRandomSeed=false disableRandomization=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_legacy_downsampler=false baq=OFF baqGapOpenPenalty=40.0 fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false performanceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false input=[(RodBinding name=input source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.unfiltered.vcf)] recal_file=(RodBinding name=recal_file source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.recal) tranches_file=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.tranches out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub ts_filter_level=9",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:37,assert,assertion,37,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['assert'],['assertion']
Testability,will be interesting to see how rebase incorporating #3185 affects benchmark,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3335#issuecomment-383291647:66,benchmark,benchmark,66,https://hail.is,https://github.com/hail-is/hail/pull/3335#issuecomment-383291647,1,['benchmark'],['benchmark']
Testability,will benchmark then assign.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11663#issuecomment-1095136763:5,benchmark,benchmark,5,https://hail.is,https://github.com/hail-is/hail/pull/11663#issuecomment-1095136763,1,['benchmark'],['benchmark']
Testability,will experiment with automatically generating TMP nodes and benchmark that.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8028#issuecomment-586726766:60,benchmark,benchmark,60,https://hail.is,https://github.com/hail-is/hail/pull/8028#issuecomment-586726766,1,['benchmark'],['benchmark']
Testability,will go here:; https://github.com/hail-is/hail/blob/18b57caf7779310eb0cbc2a70f47eda06fb037c5/benchmark/scripts/benchmark_in_pipeline.py#L56. Can you add those? Thanks!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8050#issuecomment-583414827:93,benchmark,benchmark,93,https://hail.is,https://github.com/hail-is/hail/pull/8050#issuecomment-583414827,1,['benchmark'],['benchmark']
Testability,will look again with high prio when tests are passing,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7009#issuecomment-531305458:36,test,tests,36,https://hail.is,https://github.com/hail-is/hail/pull/7009#issuecomment-531305458,1,['test'],['tests']
Testability,"wip. A few remaining tests fail. Includes a number of fixes to InferPType, InferType. Plan is to get this working before optimize, since that is the simple case, and then move to pre-simplify",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063:21,test,tests,21,https://hail.is,https://github.com/hail-is/hail/pull/8063,1,['test'],['tests']
Testability,wip; testing,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6608:5,test,testing,5,https://hail.is,https://github.com/hail-is/hail/pull/6608,1,['test'],['testing']
Testability,with no assert,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8063#issuecomment-587144436:8,assert,assert,8,https://hail.is,https://github.com/hail-is/hail/pull/8063#issuecomment-587144436,1,['assert'],['assert']
Testability,"with profile75.vds:; linreg with 10 PCs: 58s, 59s, 59s; plink2: 38s, 39s, 39s; variantqc: 142s, 141s, 144s; sampleqc: 231s, 233s, 233s; linreg with 10 PCs, 8 cores: 23s, 24s, 24s; pca, 8 cores: 179s. hail command:; ~/hail/build/install/hail/bin/hail read -i ~/data/profile75.vds linreg -c ~/data/profile75.cov -f ~/data/profile.fam -o ~/data/profile75.linreg. read: 1570.888546; linreg: 58496.508588. plink vcf command to create bed/bim/fam:; ./plink --vcf ~/data/profile75.vcf.bgz; - rename plink.bed/bim/fam to profile75.bed/bim/fam; - create covar with FID column by doubling first column of cov file (use cut and paste in bash). plink linreg command:; time ./plink --bfile profile75 --double-id --pheno ~/data/profile.pheno --allow-no-sex --covar ~/data/profile75.covar --linear --out ~/data/profile75.plink. PLINK v1.90b3w 64-bit (3 Sep 2015) https://www.cog-genomics.org/plink2; (C) 2005-2015 Shaun Purcell, Christopher Chang GNU General Public License v3; Logging to /Users/Jon/data/profile75.plink.log.; Options in effect:; --allow-no-sex; --bfile profile75; --covar /Users/Jon/data/profile75.covar; --double-id; --linear; --out /Users/Jon/data/profile75.plink; --pheno /Users/Jon/data/profile.pheno. 16384 MB RAM detected; reserving 8192 MB for main workspace.; 74885 variants loaded from .bim file.; 2535 people (0 males, 0 females, 2535 ambiguous) loaded from .fam.; Ambiguous sex IDs written to /Users/Jon/data/profile75.plink.nosex .; 2535 phenotype values present after --pheno.; Using 1 thread.; Warning: This run includes BLAS/LAPACK linear algebra operations which; currently disregard the --threads limit. If this is problematic, you may want; to recompile against single-threaded BLAS/LAPACK.; --covar: 10 covariates loaded.; Before main variant filters, 2535 founders and 0 nonfounders present.; Calculating allele frequencies... done.; Total genotyping rate is 0.914041.; 74885 variants and 2535 people pass filters and QC.; Phenotype data is quantitative.; Writing linear model a",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/61:963,Log,Logging,963,https://hail.is,https://github.com/hail-is/hail/pull/61,1,['Log'],['Logging']
Testability,"with the new mypy update, mypy complains if we don't use the type stubs for our dependencies. This is fixed in main (we add the type stubs) but not in the previously released pip hail, because well it's already released. One option is we decide we don't like this requirement and disable that for mypy (though I do enjoy having the type hints). The problem remains that we lint the released version with the `setup.cfg` on main, so this will fail if we ever tighten our linting. It's not clear to me why we want to lint already-released hail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409:66,stub,stubs,66,https://hail.is,https://github.com/hail-is/hail/pull/11502#issuecomment-1061947409,4,['stub'],['stubs']
Testability,"work updates; <ul>; <li>enable <code>py3.10</code> tests</li>; <li>add <code>conda</code> dependencies</li>; <li>update pre-commit hooks</li>; <li>fix <code>pytest</code> config (<code>nbval</code>, <code>asyncio</code>)</li>; <li>fix dependencies &amp; tests</li>; <li>fix site deployment</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.3 stable</h2>; <ul>; <li>fix minor typo (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>minor example fix (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>misc tidying &amp; refactoring</li>; <li>misc build/dev framework updates; <ul>; <li>update dependencies</li>; <li>update linters</li>; <li>update docs deployment branches</li>; </ul>; </li>; <li>misc test/ci updates; <ul>; <li>test forks</li>; <li>tidy OS &amp; Python version tests</li>; <li>bump primary python version 3.7 =&gt; 3.8</li>; <li>beta py3.10 testing</li>; <li>fix py2.7 tests</li>; <li>better timeout handling</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.2 stable</h2>; <ul>; <li>fix notebook memory leak (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1216"">#1216</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/tqdm/tqdm/commit/6791e8c5b3d6c30bdd2060c346996bfb5a6f10d1""><code>6791e8c</code></a> bump version, merge pull request <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1366"">#1366</a> from tqdm/devel</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/754186291e6b4e28ea8b56c9493adc03bf14c404""><code>7541862</code></a> tests: hotfix skip windows errors</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/8fb3d91f561e2a286a7fda13291eda16613dac39""><code>8fb3d91</code></a> fix ipywidgets&gt;=8 display</li>; <li><a href=""https://github.com/tqdm/tqdm/commit/05e3d32a5fc8559e133e6d627d44afda93018637""><code>05e3d32</code></a> fix jupyterla",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12260:3644,test,tests,3644,https://hail.is,https://github.com/hail-is/hail/pull/12260,1,['test'],['tests']
Testability,"work updates; <ul>; <li>enable <code>py3.10</code> tests</li>; <li>add <code>conda</code> dependencies</li>; <li>update pre-commit hooks</li>; <li>fix <code>pytest</code> config (<code>nbval</code>, <code>asyncio</code>)</li>; <li>fix dependencies &amp; tests</li>; <li>fix site deployment</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.3 stable</h2>; <ul>; <li>fix minor typo (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>minor example fix (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1246"">#1246</a>)</li>; <li>misc tidying &amp; refactoring</li>; <li>misc build/dev framework updates; <ul>; <li>update dependencies</li>; <li>update linters</li>; <li>update docs deployment branches</li>; </ul>; </li>; <li>misc test/ci updates; <ul>; <li>test forks</li>; <li>tidy OS &amp; Python version tests</li>; <li>bump primary python version 3.7 =&gt; 3.8</li>; <li>beta py3.10 testing</li>; <li>fix py2.7 tests</li>; <li>better timeout handling</li>; </ul>; </li>; </ul>; <h2>tqdm v4.62.2 stable</h2>; <ul>; <li>fix notebook memory leak (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1216"">#1216</a>)</li>; <li>fix <code>contrib.concurrent</code> with generators (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1233"">#1233</a> &lt;- <a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1231"">#1231</a>)</li>; </ul>; <h2>tqdm v4.62.1 stable</h2>; <ul>; <li><code>contrib.logging</code>: inherit existing handler output stream (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1191"">#1191</a>)</li>; <li>fix <code>PermissionError</code> by using <code>weakref</code> in <code>DisableOnWriteError</code> (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1207"">#1207</a>)</li>; <li>fix <code>contrib.telegram</code> creation rate limit handling (<a href=""https://github-redirect.dependabot.com/tqdm/tqdm/issues/1223"">#1223</a>, <a href=""https://github-redirect.depend",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11587:1854,test,tests,1854,https://hail.is,https://github.com/hail-is/hail/pull/11587,1,['test'],['tests']
Testability,write codegen tests to their own directory,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5275:14,test,tests,14,https://hail.is,https://github.com/hail-is/hail/pull/5275,1,['test'],['tests']
Testability,write gVCF combiner tests,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5390:20,test,tests,20,https://hail.is,https://github.com/hail-is/hail/issues/5390,1,['test'],['tests']
Testability,"write. The next two came during closes. The outermost exception is from the `using` cleaning up. I'm not sure where the middle exception comes from, I can't imagine who would try to `close` the stream other than `using`. Regardless, it appears that the upload fails in some unrecoverable way. We're writing 2GiB in 256 8MiB chunks in this test, so we have more chances for something to go wrong. Maybe we just have to retry the entire partition when this happens?. https://ci.hail.is/batches/7404773/jobs/145; ```; starting test is.hail.fs.gs.GoogleStorageFSSuite.testSeekMoreThanMaxInt...; Exception:; is.hail.relocated.com.google.cloud.storage.StorageException: Unable to recover in upload.; This may be a symptom of multiple clients uploading to the same upload session. For debugging purposes:; uploadId: https://storage.googleapis.com/upload/storage/v1/b/hail-test-ezlis/o?name=fs-suite-tmp-6BO4gZ18Lheigp3ir9RSOh&uploadType=resumable&upload_id=ADPycduiXx2Jtiy_0Ll131_pPeEYKnnA23Hlk28_9TFESUMaubA9OqLK_n8Td5rPhTXnlpssGo796Q4bJxUeblhmSaYcCSWAMg2k; chunkOffset: 16777216; chunkLength: 8388608; localOffset: 1325400064; remoteOffset: 1342177280; lastChunk: false. 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:131); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.unrecoverableState(BlobWriteChannel.java:87); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.access$1000(BlobWriteChannel.java:35); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:267); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.api.gax.retrying.DirectRetryingExecutor.submit(DirectRetryingExecutor.java:103); 	at is.hail.relocated.com.google.cloud.RetryHelper.run(RetryHelper.java:76); 	at is.hail.relocated.com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:50); 	at is.hail.relocated.com.google.cloud.storage.BlobWriteChannel.flushBuffer",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756:1307,test,test-ezlis,1307,https://hail.is,https://github.com/hail-is/hail/issues/12950#issuecomment-1544209756,2,['test'],['test-ezlis']
Testability,"writing a simple command such as read and write produces different type of error, but all related to memory issues. ; The most explicit error is: . ```; error='Cannot allocate memory' (errno=12); # There is insufficient memory for the Java Runtime Environment to continue.; # Native memory allocation (mmap) failed to map 7376207872 bytes for committing reserved memory.; ```. But also get this issue in other occasions:. ```; ExecutorLostFailure (executor 2265 exited caused by one of the running tasks) Reason: Container marked as failed: container_1481808189977_0001_01_002296 on host: gnomadpsychk-sw-wpt8.c.wgspd-147615.internal. Exit status: 50. Diagnostics: Exception from container-launch.; Container id: container_1481808189977_0001_01_002296; Exit code: 50; Stack trace: ExitCodeException exitCode=50:; 	at org.apache.hadoop.util.Shell.runCommand(Shell.java:582); 	at org.apache.hadoop.util.Shell.run(Shell.java:479); 	at org.apache.hadoop.util.Shell$ShellCommandExecutor.execute(Shell.java:773); 	at org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor.launchContainer(DefaultContainerExecutor.java:212); 	at org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch.call(ContainerLaunch.java:302); 	at org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch.call(ContainerLaunch.java:82); 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745). Container exited with a non-zero exit code 50. Driver stacktrace:; ```. Log for this last error is here: https://storage.googleapis.com/wgspd_urv/hailNEW.log. I tried different projects and get the same error, both with pyhail and native hail. I don't see the same error when running on cray.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1186:1716,Log,Log,1716,https://hail.is,https://github.com/hail-is/hail/issues/1186,2,"['Log', 'log']","['Log', 'log']"
Testability,"ww.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/googleapis/python-logging/blob/main/CHANGELOG.md"">google-cloud-logging's changelog</a>.</em></p>; <blockquote>; <h2><a href=""https://github.com/googleapis/python-logging/compare/v2.7.0...v3.0.0"">3.0.0</a> (2022-01-27)</h2>; <h3>⚠ BREAKING CHANGES</h3>; <ul>; <li>make logging API more friendly to use (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/422"">#422</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>)</li>; <li>support string-encoded json (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/339"">#339</a>)</li>; <li>Infer default resource in logger (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/315"">#315</a>)</li>; <li>support json logs (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/316"">#316</a>)</li>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>)</li>; </ul>; <h3>Features</h3>; <ul>; <li>add api key support (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/472"">#472</a>) (<a href=""https://github.com/googleapis/python-logging/commit/81ca8c616acb988be1fbecfc2a0b1a5b39280149"">81ca8c6</a>)</li>; <li>add json_fields extras argument for adding to jsonPayload (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/447"">#447</a>) (<a href=""https://github.com/googleapis/python-logging/commit/a760e02371a55d6262e42de9e0222fffa2c7192b"">a760e02</a>)</li>; <li>avoid importing grp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:6282,log,logging,6282,https://hail.is,https://github.com/hail-is/hail/pull/11574,2,['log'],"['logger', 'logging']"
Testability,"x compatibility issue with click 8.1.0. Fix <a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/132"">#132</a> (#...</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/e16056828523d9af3e13b67243d62830ff03d89d""><code>e160568</code></a> chore(deps): update actions/cache action to v3</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/bce95021c33e9206104512c412751ee435a6606b""><code>bce9502</code></a> chore(deps): update dependency prettier to v2.6.1</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/c7ebbaedf5bc6a8c562a46941681d7bc8598497b""><code>c7ebbae</code></a> chore(deps): update dependency prettier to v2.6.0</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/efd710b42cf0982582bb8a4f345ccfa967866b97""><code>efd710b</code></a> chore(deps): update dependency coverage to v6.3.2</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/438cf6131c1784de8bc9b34970beace1ec7c52af""><code>438cf61</code></a> Update tested Python versions on GitHub (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/122"">#122</a>)</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/b64ec22effafffc6a1371e544c560e6bfc24b56e""><code>b64ec22</code></a> Add explicit name in setup.py</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/4f8ef056177513ea599597d4089fed4275ae5d12""><code>4f8ef05</code></a> chore(deps): update actions/checkout action to v3 (<a href=""https://github-redirect.dependabot.com/thibaudcolas/curlylint/issues/121"">#121</a>)</li>; <li><a href=""https://github.com/thibaudcolas/curlylint/commit/6389c5acb15153df43b0681cb1333bbd892c3a16""><code>6389c5a</code></a> chore: allow automerge for official GitHub Actions</li>; <li>Additional commits viewable in <a href=""https://github.com/thibaudcolas/curlylint/compare/v0.12.0...v0.13.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11713:8188,test,tested,8188,https://hail.is,https://github.com/hail-is/hail/pull/11713,1,['test'],['tested']
Testability,"x.builders.html.HTMLTranslator</code> attributes.</li>; <li><a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11385"">#11385</a>: Remove support for HTML 4 output.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/d48cc783b6e48b99cbbcf5462f44c59a4ed78e6a""><code>d48cc78</code></a> Bump to 7.0.1 final</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/de6b18ac7de317030be4344ea7a9d553c423ffcf""><code>de6b18a</code></a> Remove remaining references to the setuptools integration (<a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11418"">#11418</a>)</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/db546189ce1d2a345f4399367ced6ecdd538be5d""><code>db54618</code></a> Support Docutils 0.20 (<a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11411"">#11411</a>)</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/8942a1dddf2355928f088d6b631db8658034eaae""><code>8942a1d</code></a> Test with Docutils 0.20</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/c9d0933e5d8e34aa9d2c1d88c5a80b46b575730e""><code>c9d0933</code></a> linkcheck: Use context managers for HTTP requests (<a href=""https://redirect.github.com/sphinx-doc/sphinx/issues/11318"">#11318</a>)</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/2b1c106bbff5265e8a6076318db5d083c329d575""><code>2b1c106</code></a> Update documentation workflow</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/ba7408209e84ee413f240afc20f3c6b484a81f8f""><code>ba74082</code></a> Change concurrency groups for GitHub workflows</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/b546879539200ec4128bcc6d0ed911ebf28bb3cb""><code>b546879</code></a> Bump version</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/d568b2f4f7cca743fcbf70814d15602d8129b790""><code>d568b2f</code></a> Bump to 7.0.0 final</li>; <li><a href=""https://github.com/sphinx-do",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13054:5442,Test,Test,5442,https://hail.is,https://github.com/hail-is/hail/pull/13054,1,['Test'],['Test']
Testability,xception: Task not serializable; at org.apache.spark.util.ClosureCleaner$.ensureSerializable(ClosureCleaner.scala:166); at org.apache.spark.util.ClosureCleaner$.clean(ClosureCleaner.scala:158); at org.apache.spark.SparkContext.clean(SparkContext.scala:1622); at org.apache.spark.rdd.RDD.map(RDD.scala:286); at org.broadinstitute.hail.methods.MendelErrors.writeMendel(MendelErrors.scala:143); at org.broadinstitute.hail.methods.MendelErrorsSuite.test(MendelErrorsSuite.scala:50); at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:497); at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); at org.testng.TestRunner.privateRun(TestRunner.java:767); at org.testng.TestRunner.run(TestRunner.java:617); at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); at org.testng.SuiteRunner.run(SuiteRunner.java:254); at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); at org.testng.TestNG.runSuitesLocally(TestNG.java:1149); at org.testng.TestNG.run(TestNG.java:1057); at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72); at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122); at sun.refle,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/68#issuecomment-155304880:1497,test,testng,1497,https://hail.is,https://github.com/hail-is/hail/pull/68#issuecomment-155304880,1,['test'],['testng']
Testability,xception: files not deleted:; gs://hail-test-ezlis/fs-suite/delete-many-files/376b0a1e-ee61-43ab-abb4-d67a0978ee46/791.suffix; 	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:528); 	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:527); 	at org.scalatest.testng.TestNGSuite.newAssertionFailedException(TestNGSuite.scala:67); 	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:413); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:398); 	at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827#issuecomment-1769490277:1176,test,testng,1176,https://hail.is,https://github.com/hail-is/hail/issues/13827#issuecomment-1769490277,1,['test'],['testng']
Testability,xception: files not deleted:; gs://hail-test-ezlis/fs-suite/delete-many-files/c287f9de-7e80-4d34-b22e-eb91736aeaac/467.suffix; 	at org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:528); 	at org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:527); 	at org.scalatest.testng.TestNGSuite.newAssertionFailedException(TestNGSuite.scala:67); 	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:501); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations(FSSuite.scala:413); 	at is.hail.io.fs.FSSuite.largeDirectoryOperations$(FSSuite.scala:398); 	at is.hail.io.fs.GoogleStorageFSSuite.largeDirectoryOperations(GoogleStorageFSSuite.scala:10); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85); 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696); 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882); 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189); 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124); 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108); 	at org.testng.TestRunner.privateRun(TestRunner.java:767); 	at org.testng.TestRunner.run(TestRunner.java:617); 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348); 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343); 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305); 	at org.testng.SuiteRunner.run(SuiteRunner.java:254); 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52); 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86); 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224); 	at org.t,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13827:1334,test,testng,1334,https://hail.is,https://github.com/hail-is/hail/issues/13827,1,['test'],['testng']
Testability,"xception; /usr/lib/python3.8/asyncio/tasks.py:280: in __step; result = coro.send(None); /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:509: in _async_execute; _, resp, timings = await self._rpc('execute(...)', inputs, ir=ir, progress=progress); /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:451: in _rpc; result_bytes = await retry_transient_errors(self._read_output, ir, iodir + '/out'); /usr/local/lib/python3.8/dist-packages/hailtop/utils/utils.py:781: in retry_transient_errors; return await retry_transient_errors_with_debug_string('', 0, f, *args, **kwargs); /usr/local/lib/python3.8/dist-packages/hailtop/utils/utils.py:794: in retry_transient_errors_with_debug_string; return await f(*args, **kwargs); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <hail.backend.service_backend.ServiceBackend object at 0x7f63d6b90bb0>; ir = <hail.ir.ir.TableWrite object at 0x7f63d4e70c70>; output_uri = 'hail-az://haildevtest/test/tmp/hail/FCIxoO1REfjctjXVpyHiF1/vwzzlTSQqo/out'. async def _read_output(self, ir: Optional[BaseIR], output_uri: str) -> bytes:; assert self._batch; ; try:; driver_output = await self._async_fs.open(output_uri); except FileNotFoundError as exc:; raise FatalError('Hail internal error. Please contact the Hail team and provide the following information.\n\n' + yamlx.dump({; 'service_backend_debug_info': self.debug_info(),; 'batch_debug_info': await self._batch.debug_info(); })) from exc; ; async with driver_output as outfile:; success = await read_bool(outfile); if success:; return await read_bytes(outfile); ; short_message = await read_str(outfile); expanded_message = await read_str(outfile); error_id = await read_int(outfile); ; reconstructed_error = fatal_error_from_java_error_triplet(short_message, expanded_message, error_id); if ir is None:; raise reconstructed_error; > raise reconstructed_error.maybe_user_error(ir); E hail.utils.java.FatalError: NativeIoException: read",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12980:3321,test,test,3321,https://hail.is,https://github.com/hail-is/hail/issues/12980,1,['test'],['test']
Testability,"xception; /usr/lib/python3.8/asyncio/tasks.py:280: in __step; result = coro.send(None); /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:509: in _async_execute; _, resp, timings = await self._rpc('execute(...)', inputs, ir=ir, progress=progress); /usr/local/lib/python3.8/dist-packages/hail/backend/service_backend.py:451: in _rpc; result_bytes = await retry_transient_errors(self._read_output, ir, iodir + '/out'); /usr/local/lib/python3.8/dist-packages/hailtop/utils/utils.py:781: in retry_transient_errors; return await retry_transient_errors_with_debug_string('', 0, f, *args, **kwargs); /usr/local/lib/python3.8/dist-packages/hailtop/utils/utils.py:794: in retry_transient_errors_with_debug_string; return await f(*args, **kwargs); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <hail.backend.service_backend.ServiceBackend object at 0x7ff6aa3b15b0>; ir = <hail.ir.ir.MakeTuple object at 0x7ff6a73b8d30>; output_uri = 'hail-az://haildevtest/test/tmp/hail/mGZ0y8JSUQM6CVs20XzdIu/eLwQUTyLRv/out'. async def _read_output(self, ir: Optional[BaseIR], output_uri: str) -> bytes:; assert self._batch; ; try:; driver_output = await self._async_fs.open(output_uri); except FileNotFoundError as exc:; raise FatalError('Hail internal error. Please contact the Hail team and provide the following information.\n\n' + yamlx.dump({; 'service_backend_debug_info': self.debug_info(),; 'batch_debug_info': await self._batch.debug_info(); })) from exc; ; async with driver_output as outfile:; success = await read_bool(outfile); if success:; return await read_bytes(outfile); ; short_message = await read_str(outfile); expanded_message = await read_str(outfile); error_id = await read_int(outfile); ; reconstructed_error = fatal_error_from_java_error_triplet(short_message, expanded_message, error_id); if ir is None:; raise reconstructed_error; > raise reconstructed_error.maybe_user_error(ir); E hail.utils.java.FatalError: RuntimeException: Strea",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12976:12656,test,test,12656,https://hail.is,https://github.com/hail-is/hail/issues/12976,1,['test'],['test']
Testability,"xpr(Parser.scala:511); 	at is.hail.expr.ir.IRParser$.named_value_ir(Parser.scala:494); 	at is.hail.expr.ir.IRParser$$anonfun$named_value_irs$1.apply(Parser.scala:489); 	at is.hail.expr.ir.IRParser$$anonfun$named_value_irs$1.apply(Parser.scala:489); 	at is.hail.expr.ir.IRParser$.repUntil(Parser.scala:281); 	at is.hail.expr.ir.IRParser$.named_value_irs(Parser.scala:489); 	at is.hail.expr.ir.IRParser$.ir_value_expr_1(Parser.scala:670); 	at is.hail.expr.ir.IRParser$.ir_value_expr(Parser.scala:511); 	at is.hail.expr.ir.IRParser$.matrix_ir_1(Parser.scala:920); 	at is.hail.expr.ir.IRParser$.matrix_ir(Parser.scala:885); 	at is.hail.expr.ir.IRParser$.matrix_ir_1(Parser.scala:923); 	at is.hail.expr.ir.IRParser$.matrix_ir(Parser.scala:885); 	at is.hail.expr.ir.IRParser$$anonfun$parse_matrix_ir$2.apply(Parser.scala:1023); 	at is.hail.expr.ir.IRParser$$anonfun$parse_matrix_ir$2.apply(Parser.scala:1023); 	at is.hail.expr.ir.IRParser$.parse(Parser.scala:1007); 	at is.hail.expr.ir.IRParser$.parse_matrix_ir(Parser.scala:1023); 	at is.hail.expr.ir.IRParser$.parse_matrix_ir(Parser.scala:1022); 	at is.hail.expr.ir.IRParser.parse_matrix_ir(Parser.scala); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:498); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:280); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.GatewayConnection.run(GatewayConnection.java:214); 	at java.lang.Thread.run(Thread.java:748). Hail version: 0.2.5-e017bef1c26c; Error summary: AssertionError: assertion failed: cov1 not in struct{__y: float64, __cov0: float64}; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4941:3141,Assert,AssertionError,3141,https://hail.is,https://github.com/hail-is/hail/issues/4941,2,"['Assert', 'assert']","['AssertionError', 'assertion']"
Testability,xt$.$anonfun$scoped$3(ExecuteContext.scala:75); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.backend.ExecuteContext$.$anonfun$scoped$2(ExecuteContext.scala:75); 	at is.hail.utils.package$.using(package.scala:635); 	at is.hail.annotations.RegionPool$.scoped(RegionPool.scala:17); 	at is.hail.backend.ExecuteContext$.scoped(ExecuteContext.scala:63); 	at is.hail.backend.spark.SparkBackend.withExecuteContext(SparkBackend.scala:350); 	at is.hail.backend.spark.SparkBackend.$anonfun$executeEncode$1(SparkBackend.scala:495); 	at is.hail.utils.ExecutionTimer$.time(ExecutionTimer.scala:52); 	at is.hail.backend.spark.SparkBackend.executeEncode(SparkBackend.scala:494); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.base/java.lang.reflect.Method.invoke(Method.java:566); 	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244); 	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357); 	at py4j.Gateway.invoke(Gateway.java:282); 	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132); 	at py4j.commands.CallCommand.execute(CallCommand.java:79); 	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182); 	at py4j.ClientServerConnection.run(ClientServerConnection.java:106); 	at java.base/java.lang.Thread.run(Thread.java:829). Hail version: 0.2.120-f00f916faf78; Error summary: ClassCastException: class is.hail.types.physical.stypes.concrete.SIndexablePointer cannot be cast to class is.hail.types.physical.stypes.concrete.SJavaArrayString (is.hail.types.physical.stypes.concrete.SIndexablePointer and is.hail.types.physical.stypes.concrete.SJavaArrayString are in unnamed module of loader 'app'); ```. ### Version. 0.2.122. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13633:13967,log,log,13967,https://hail.is,https://github.com/hail-is/hail/issues/13633,1,['log'],['log']
Testability,"xtualize/rich#3013</a></li>; </ul>; <h3>Added</h3>; <ul>; <li>Added Text.extend_style method.</li>; <li>Added Span.extend method.</li>; </ul>; <h3>Changed</h3>; <ul>; <li>Text.tab_size now defaults to <code>None</code> to indicate that Console.tab_size should be used.</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/Textualize/rich/blob/master/CHANGELOG.md"">rich's changelog</a>.</em></p>; <blockquote>; <h2>[13.5.3] - 2023-09-17</h2>; <h3>Fixed</h3>; <ul>; <li>Markdown table rendering issue with inline styles and links <a href=""https://redirect.github.com/Textualize/rich/issues/3115"">Textualize/rich#3115</a></li>; <li>Fix Markdown code blocks on a light background <a href=""https://redirect.github.com/Textualize/rich/issues/3123"">Textualize/rich#3123</a></li>; </ul>; <h2>[13.5.2] - 2023-08-01</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs assertion error</li>; </ul>; <h2>[13.5.1] - 2023-07-31</h2>; <h3>Fixed</h3>; <ul>; <li>Fix tilde character (<code>~</code>) not included in link regex when printing to console <a href=""https://redirect.github.com/Textualize/rich/issues/3057"">Textualize/rich#3057</a></li>; </ul>; <h2>[13.5.0] - 2023-07-29</h2>; <h3>Fixed</h3>; <ul>; <li>Fixed Text.expand_tabs not expanding spans.</li>; <li>Fixed TimeElapsedColumn from showing negative.</li>; <li>Fix for escaping strings with a trailing backslash <a href=""https://redirect.github.com/Textualize/rich/issues/2987"">Textualize/rich#2987</a></li>; <li>Fixed exception in Markdown with partial table <a href=""https://redirect.github.com/Textualize/rich/issues/3053"">Textualize/rich#3053</a></li>; <li>Fixed the HTML export template so that the <code>&lt;html&gt;</code> tag comes before the <code>&lt;head&gt;</code> tag <a href=""https://redirect.github.com/Textualize/rich/issues/3021"">Textualize/rich#3021</a></li>; <li>Fixed issue with custom classes overwriting",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13651:3271,assert,assertion,3271,https://hail.is,https://github.com/hail-is/hail/pull/13651,2,['assert'],['assertion']
Testability,"y installed hail-0.2.124; hailctl config set query/backend spark; ```; * At this point Hail seems correcly installed; ```sh; $ pip show hail; Name: hail; Version: 0.2.124; Summary: Scalable library for exploring and analyzing genomic data.; Home-page: https://hail.is; Author: Hail Team; Author-email: hail@broadinstitute.org; License: UNKNOWN; Location: /home/hadoop/.local/lib/python3.9/site-packages; ```; * For sake of configuration I create a symlink of the hail backend; ```sh; sudo ln -sf /home/hadoop/.local/lib/python3.9/site-packages/hail/backend /opt/hail/backend; ```; * Confident of the. installation I try to run spark shell; ```sh; $ spark-shell; [...]; Exception in thread ""main"" java.lang.NoSuchMethodError: 'scala.reflect.internal.settings.MutableSettings ; ```. I am out of idea on how to solve the current situation. ; Thanks. ### Version. 0.2.124. ### Relevant log output. ```shell; $ spark-shell; SLF4J: No SLF4J providers were found.; SLF4J: Defaulting to no-operation (NOP) logger implementation; SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.; SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.; SLF4J: Ignoring binding found at [jar:file:/usr/lib/spark/jars/log4j-slf4j-impl-2.17.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]; SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Exception in thread ""main"" java.lang.NoSuchMethodError: 'scala.reflect.internal.settings.MutableSettings scala.reflect.internal.settings.MutableSettings$.SettingsOps(scala.reflect.internal.settings.MutableSettings)'; at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$1(ILoop.scala:914); at scala.tools.nsc.interpreter.ILoop.mkReader$1(ILoop.scala:920); at scala.tools.nsc.interpreter.ILoop.$anonfun$chooseReader$4(ILoop.scala:926); at scala.tools.nsc.inte",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837:1843,log,logger,1843,https://hail.is,https://github.com/hail-is/hail/issues/13837,1,['log'],['logger']
Testability,"y keyed by locus, and removed the MatrixKeyRowsBy in combine_gvcfs. To goal here is to avoid re-buidling an re-broadcasting the partitioner once for each gVCF. We'll need to re-key at the very end. I'm not so familiar with the end of the joint calling pipeline. @chrisvittal can you take care of that?. Second, I don't repartition in TableMultiWayZipJoin if the partitioners all match (which they should in in the joint calling pipeline). For that to work right, I need allowedOverlap == 0 (or to verify the partitions are in fact disjoint). Turns out allowedOverlap wasn't being propagated in various places. I fixed that. @patrick-schultz can you look at the RVDPartitioner changes? They just look like oversights to me, but maybe there was a reason why, for example, copy and coarsen wasn't preserving allowedOverlap?. Finally, now the joint calling pipeline/test_combiner_works segfaults, ugh:. ```; $ hail -m unittest test.hail.methods.test_impex.VCFTests.test_combiner_works; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x000000010e5fa090, pid=64905, tid=33795; #; # JRE version: Java(TM) SE Runtime Environment (8.0_45-b14) (build 1.8.0_45-b14); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.45-b02 mixed mode bsd-amd64 compressed oops); # Problematic frame:; # J 8877 C1 is.hail.expr.types.physical.PLocus$$anon$1.compare(Lis/hail/annotations/Region;JLis/hail/annotations/Region;J)I (117 bytes) @ 0x000000010e5fa090 [0x000000010e5f9de0+0x2b0]; #; ```. The rest of the tests pass (the other Python failures are cascaded failures from test_combiner_works, I double-checked in the hopes of finding an easier example to debug.) It is pretty clearly related to the no repartition optimization. If I disable it, test_combiner_works passes. I haven't tracked this down, but I do have one question @chrisvittal: who's responsible for freeing the inputs (that is, clearing the input regions) to multi-way zip join? I don't see where that happens.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5424:1587,test,tests,1587,https://hail.is,https://github.com/hail-is/hail/pull/5424,1,['test'],['tests']
Testability,"y require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.5a0</h2>; <h1>0.23.5 (UNRELEASED)</h1>; <ul>; <li>Declare compatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; <li>Fix typing errors with recent versions of mypy <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/769"">#769</a></li>; </ul>; <h2>Known issues</h2>; <p>As of v0.23, pytest-asyncio attaches an asyncio event loop to each item of the test suite (i.e. session, packages, modules, classes, functions) and allows tests to be run in those loops when marked accordingly. Pytest-asyncio currently assumes that async fixture scope is correlated with the new event loop scope. This prevents fixtures from being evaluated independently from the event loop scope and breaks some existing test suites (see <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/706"">#706</a>). For example, a test suite may require all fixtures and tests to run in the same event loop, but have async fixtures that are set up and torn down for each module. If you're affected by this issue, please continue using the v0.21 release, until it is resolved.</p>; <h2>pytest-asyncio 0.23.4</h2>; <h1>0.23.4 (2024-01-28)</h1>; <ul>; <li>pytest-asyncio no longer imports additional, unrelated packages during test collection <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/729"">#729</a></li>; <li>Addresses further issues that caused an internal pytest error during test collection</li>; <li>Declares incompatibility with pytest 8 <a href=""https://redirect.github.com/pytest-dev/pytest-asyncio/issues/737"">#737</a></li>; </ul>; <h2>pytest-asyncio 0.23.4a2</h2>; <h1>0.23.4 (UNRELEASED)</h1>; <ul>; <li>pytest-asyncio no longer imports addition",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14507:4838,test,test,4838,https://hail.is,https://github.com/hail-is/hail/pull/14507,1,['test'],['test']
Testability,"y that uses more memory or (2) is newly lowering code that exposes a latent issue in memory management that uses too much (or leaks) memory.]. Reported by Ben Weisburd and Julia Goodrich. [Ben is] running the first step of readviz for gnomAD v4 and we are hitting a 137 error on a partition that includes a site that has 27374 alleles. His code is [here](https://github.com/broadinstitute/gnomad-readviz/blob/step1_optimizations/step1__select_samples.py). I was testing his code out on just that failing partition (just added mt = vds.variant_data._filter_partitions([41229])) and I was able to recreate the error using Hail 0.2.119 (this is what Ben was using when he hit the error on the full dataset). However, the first time I tried to recreate the error I was accidentally using a different version of Hail and it ran with no memory error. It seems that 0.2.117 runs without error, but 0.2.118 and 0.2.119 both hit the 137 error. I am currently rerunning these tests so I can get logs:. Test with Hail 0.2.118:. Cluster:; ```; hailctl dataproc start readviz-118 \; --requester-pays-allow-all \; --packages=""git+https://github.com/broadinstitute/gnomad_methods.git@main"",""git+https://github.com/broadinstitute/gnomad_qc.git@main"" \; --autoscaling-policy=max-20 \; --master-machine-type n1-highmem-16 \; --no-off-heap-memory \; --worker-machine-type n1-highmem-8 \; --max-idle 560m \; --labels gnomad_release=gnomad_v4,gnomad_v4_testing=readviz_test_118; ```; Command:; ```; hailctl dataproc submit readviz-118 /Users/jgoodric/PycharmProjects/gnomad-readviz/step1__select_samples.py --sample-metadata-tsv gs://gnomad-readviz/v4.0/gnomad.exomes.v4.0.metadata.tsv.gz --output-ht-path gs://gnomad-tmp/julia/readviz/gnomad.exomes.v4.0.readviz_crams.part_41229.hail_118.ht; Job Link: https://console.cloud.google.com/dataproc/jobs/4db24eb6f93b491f8f07babc25c0d9c9/monitoring?region=us-central1&project=broad-mpg-gnomad; ```; Test with Hail 0.2.117:. Cluster:; ```; hailctl dataproc start readviz-117 \;",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13248:1232,Test,Test,1232,https://hail.is,https://github.com/hail-is/hail/issues/13248,1,['Test'],['Test']
Testability,"y, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI0Y2E5NmE2ZC02MjMxLTQ1YTctYmQyOS1kYTA0ZmZhNTliYzQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjRjYTk2YTZkLTYyMzEtNDVhNy1iZDI5LWRhMDRmZmE1OWJjNCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""4ca96a6d-6231-45a7-bd29-da04ffa59bc4"",""prPublicId"":""4ca96a6d-6231-45a7-bd29-da04ffa59bc4"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6210214""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[451],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14238:2649,log,logic,2649,https://hail.is,https://github.com/hail-is/hail/pull/14238,1,['log'],['logic']
Testability,"y, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1MzAxOWZkZC04YjQwLTQ5NmUtYjRmYS0wMzA5MTAxOTBkZWMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjUzMDE5ZmRkLThiNDAtNDk2ZS1iNGZhLTAzMDkxMDE5MGRlYyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""53019fdd-8b40-496e-b4fa-030910190dec"",""prPublicId"":""53019fdd-8b40-496e-b4fa-030910190dec"",""dependencies"":[{""name"":""cryptography"",""from"":""42.0.2"",""to"":""42.0.4""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6261585""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14344:2655,log,logic,2655,https://hail.is,https://github.com/hail-is/hail/pull/14344,1,['log'],['logic']
Testability,"y:. [root@**\* bin]# ./hail -h; usage: hail [global options] <cmd1> [cmd1 args]; [<cmd2> [cmd2 args] ... <cmdN> [cmdN args]]. But ,When excuting “gradle check” and ""gradle coverage"", encounter ""100 tests completed, 3 failed :test FAILED"" ""Build FAILED"" , how to fix ? Thanks . [root@**\* hail]# gradle check; Using a seed of [1] for testing.; Build file '*****/hail/build.gradle': line 188; useAnt has been deprecated and is scheduled to be removed in Gradle 3.0. The Ant-Based Scala compiler is deprecated, please see https://docs.gradle.org/current/userguide/scala_plugin.html.; :compileJava UP-TO-DATE; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :test. ........... FAILED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ExportPlinkSuite.testBiallelic FAILED; java.io.FileNotFoundException at ExportPlinkSuite.scala:17; Running test: Test method test(org.broadinstitute.hail.methods.ExportSuite); ........... FAILED; Gradle suite > Gradle test > org.broadinstitute.hail.driver.GRMSuite.test FAILED; java.io.FileNotFoundException at GRMSuite.scala:20; Running test: Test method testGenotypeStream(org.broadinstitute.hail.variant.GenotypeStreamSuite); ........... FAILED; Gradle suite > Gradle test > org.broadinstitute.hail.methods.ImputeSexSuite.testImputeSexPlinkVersion FAILED; java.io.FileNotFoundException at ImputeSexSuite.scala:17; Running test: Test method test(org.broadinstitute.hail.variant.IntervalListSuite). ..........; 100 tests completed, 3 failed; :test FAILED. FAILURE: Build failed with an exception.; - What went wrong:; Execution failed for task ':test'.; ; > There were failing tests. See the report at: file:///****/hail/build/reports/tests/index.html; - Try:; Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. BUILD FAILED. Total time: 9 mins 25.533",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/457:1069,test,test,1069,https://hail.is,https://github.com/hail-is/hail/issues/457,3,"['Test', 'test']","['Test', 'test']"
Testability,"y=40.0 fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false performanceLog=null useOriginalQualities=false BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 defaultBaseQualities=-1 validation_strictness=SILENT remove_program_records=false keep_program_records=false unsafe=null num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false logging_level=INFO log_to_file=null help=false input=[(RodBinding name=input source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.unfiltered.vcf)] recal_file=(RodBinding name=recal_file source=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.recal) tranches_file=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.snps.tranches out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub ts_filter_level=98.5 ignore_filter=null mode=SNP filter_mismatching_base_and_quals=false""; ##CombineVariants=""analysis_type=CombineVariants input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.padded.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta nonDeterministicRandomSeed=false disableRandomization=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 use_legacy_downsampler=false baq=OFF baqGapOpenPenalty=40.0 fix_misencoded_qu",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:1725,stub,stubs,1725,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['stub'],['stubs']
Testability,yHelper.runWithRetries(RetryHelper.java:50) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.Retrying.run(Retrying.java:99) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSession.put(JsonResumableSession.java:68) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.ApiaryUnbufferedWritableByteChannel.internalWrite(ApiaryUnbufferedWritableByteChannel.java:114) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.ApiaryUnbufferedWritableByteChannel.writeAndClose(ApiaryUnbufferedWritableByteChannel.java:65) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.UnbufferedWritableByteChannelSession$UnbufferedWritableByteChannel.writeAndClose(UnbufferedWritableByteChannelSession.java:40) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.DefaultBufferedWritableByteChannel.close(DefaultBufferedWritableByteChannel.java:166) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.StorageByteChannels$SynchronizedBufferedWritableByteChannel.close(StorageByteChannels.java:119) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.StorageException.wrapIOException(StorageException.java:179) ~[gs:__hail-test-ezlis_dking_ja,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:11213,test,test-,11213,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,"y_pass, fastcgi_pass, uwsgi_pass, scgi_pass, memcached_pass, or grpc_pass, then the special processing is performed. In response to a request with URI equal to this string, but without the trailing slash, a permanent redirect with the code 301 will be returned to the requested URI with the slash appended. The docs appear incomplete, though, because this is a `return` rule, but it gets the 301. Question two: does this redirect `hail.is/docs/foo` to `/docs/0.2/foo`. No, the docs redirect is an `=` or exact match so `hail.is/docs/foo` is a 404. Question three: does this redirect `/hail/overview.html` redirect to `docs/0.1/overview.html`. Yes, the regex for rules two matches `/hail`, `/hail/`, `/hail/overview.html`, etc. and redirects, replacing the hail with `docs/0.1`. One last note: I used 301 Permanent Redirect for the `/hail` since that's a dead url. I used 307 Temporary Redirect for `/docs` since that will change when versions change. Here's a test interaction. I interleaved my curl commands with the logs. ```; $ curl localhost/hail; 172.17.0.1 - - [07/Dec/2018:19:35:30 +0000] ""GET /hail HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:35:30 +0000] ""GET /docs/0.1 HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:35:30 +0000] ""GET /docs/0.1/ HTTP/1.1"" 200 11994 ""-"" ""curl/7.61.0""; $ curl localhost/hail/; 172.17.0.1 - - [07/Dec/2018:19:36:06 +0000] ""GET /hail/ HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:36:06 +0000] ""GET /docs/0.1/ HTTP/1.1"" 200 11994 ""-"" ""curl/7.61.0""; $ curl localhost/hail/overview.html; 172.17.0.1 - - [07/Dec/2018:19:36:27 +0000] ""GET /hail/overview.html HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:36:27 +0000] ""GET /docs/0.1/overview.html HTTP/1.1"" 200 37288 ""-"" ""curl/7.61.0""; $ curl localhost/docs; 172.17.0.1 - - [07/Dec/2018:19:36:37 +0000] ""GET /docs HTTP/1.1"" 301 185 ""-"" ""curl/7.61.0""; 172.17.0.1 - - [07/Dec/2018:19:36:37 +0000] ""GET /docs/ HTTP/1.1"" 307 187 """,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4929:2425,log,logs,2425,https://hail.is,https://github.com/hail-is/hail/pull/4929,1,['log'],['logs']
Testability,"ycares/commit/22a37d760349787704f8901c19e149915a7f1b26""><code>22a37d7</code></a> Update c-ares submodule to 1.18.1</li>; <li><a href=""https://github.com/saghul/pycares/commit/b5165834724340d27da642f554431514fd62ccb4""><code>b516583</code></a> Improve test compatibility with pytest</li>; <li><a href=""https://github.com/saghul/pycares/commit/356118f2985de1fdb09d2db8951f592fc6418fda""><code>356118f</code></a> Drop tox</li>; <li><a href=""https://github.com/saghul/pycares/commit/baad65cd4088f7a7108e3b2e3d5c1f4b97fc6a7e""><code>baad65c</code></a> Drop CPython 3.6</li>; <li><a href=""https://github.com/saghul/pycares/commit/24fea0ce9988c3985892104f55c4ad256e28a78f""><code>24fea0c</code></a> Run tests on Python 3.11</li>; <li><a href=""https://github.com/saghul/pycares/commit/0e970c4b27bcdc940d972eaf3c57a3c93e79be78""><code>0e970c4</code></a> Add Python 3.11 classifier to setup.py</li>; <li><a href=""https://github.com/saghul/pycares/commit/05c74ef9e4f302ba433368f3c5c714abcadec40c""><code>05c74ef</code></a> Fix some tests that depended on external sites</li>; <li><a href=""https://github.com/saghul/pycares/commit/06d1ecdd57d4da4ddbe751463c576dcaf0f3baf8""><code>06d1ecd</code></a> build: bump cibuildwheel to build for Python 3.11 + CI total time speedups</li>; <li>See full diff in <a href=""https://github.com/saghul/pycares/compare/pycares-4.2.2...pycares-4.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pycares&package-manager=pip&previous-version=4.2.2&new-version=4.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>D",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12559:3063,test,tests,3063,https://hail.is,https://github.com/hail-is/hail/pull/12559,1,['test'],['tests']
Testability,"yeah, I saw that. Not quite sure what to think -- nose seems to do what we need for now, so maybe we don't need a highly maintained testing framework?. At least in the short term, this seems OK to me. I'll spend some time looking into pytest though.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3096#issuecomment-371535328:132,test,testing,132,https://hail.is,https://github.com/hail-is/hail/pull/3096#issuecomment-371535328,1,['test'],['testing']
Testability,"yeah, figured that out after your comment. . I'm a bit bothered by the differences between the build.yaml and the local development process. the build.yaml should be the single source of truth, but it's not in a form that's easy to look to for local testing.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6734#issuecomment-515021721:250,test,testing,250,https://hail.is,https://github.com/hail-is/hail/pull/6734#issuecomment-515021721,1,['test'],['testing']
Testability,"yeah, how do I do this? We need test the new CI, build it, and use the new CI to build the rest.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4551#issuecomment-431455953:32,test,test,32,https://hail.is,https://github.com/hail-is/hail/pull/4551#issuecomment-431455953,1,['test'],['test']
Testability,"yeah, my ""test setup"" before the doc tests was wrong (I used ""vds1"" instead of ""vds"")",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2353#issuecomment-339469069:10,test,test,10,https://hail.is,https://github.com/hail-is/hail/pull/2353#issuecomment-339469069,2,['test'],"['test', 'tests']"
Testability,"yeah, saw the same thing after adding a test, thanks for catching!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8031#issuecomment-582095526:40,test,test,40,https://hail.is,https://github.com/hail-is/hail/pull/8031#issuecomment-582095526,1,['test'],['test']
Testability,"yeah, the local backend tests have way more coverage than the java.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9401#issuecomment-689833234:24,test,tests,24,https://hail.is,https://github.com/hail-is/hail/pull/9401#issuecomment-689833234,1,['test'],['tests']
Testability,"yeah, we have loads of tests go through this path. If Python tests pass, I'm quite satisfied this is correct!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8057#issuecomment-583559299:23,test,tests,23,https://hail.is,https://github.com/hail-is/hail/pull/8057#issuecomment-583559299,2,['test'],['tests']
Testability,"yeah, will add a test for the new functionality though",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7611#issuecomment-558620422:17,test,test,17,https://hail.is,https://github.com/hail-is/hail/pull/7611#issuecomment-558620422,1,['test'],['test']
Testability,"yes oops maybe shouldn't post them at 3am. Left is old, right is new, indexed reads got faster, combiner got faster. ```; Benchmark Name Ratio Time 1 Time 2 Mem Ratio Mem 1 (MB) Mem 2 (MB); -------------- ----- ------ ------ --------- ---------- ----------; table_read_force_count_ints 120.7% 6.734 8.127 100.0% 1 1; ndarray_matmul_float64_benchmark 113.3% 2.968 3.363 100.0% 1 1; matrix_table_scan_count_rows_2 112.5% 84.908 95.516 100.0% 1 1; read_force_count_p1000 112.3% 3.286 3.692 100.0% 1 1; union_p1000_p1000 109.8% 6.860 7.531 100.0% 1 1; sentinel_read_gunzip_2 109.4% 16.148 17.659 100.0% 1 1; union_p10_p1000 109.3% 73.727 80.584 100.0% 1 1; write_range_matrix_table_p100 109.2% 5.292 5.777 100.0% 1 1; table_aggregate_counter 109.1% 20.077 21.911 100.0% 3 3; python_only_10k_transform 108.9% 34.839 37.950 100.0% 1 1; sentinel_read_gunzip_3 108.8% 16.276 17.712 100.0% 1 1; split_multi 108.1% 13.139 14.209 100.0% 1 1; sentinel_read_gunzip_1 107.6% 16.038 17.263 100.0% 1 1; join_p10_p100 107.4% 11.960 12.848 100.0% 1 1; table_aggregate_array_sum 107.2% 8.820 9.453 100.0% 1 1; table_foreign_key_join_same_cardinality 107.1% 11.470 12.281 100.0% 3 3; import_and_transform_gvcf 106.9% 88.277 94.371 100.0% 1 1; import_bgen_filter_count 106.8% 156.189 166.814 100.0% 7 7; table_annotate_many_nested_dependence_constants 106.8% 6.125 6.539 100.0% 1 1; king 106.3% 425.661 452.628 100.0% 4 4; union_p1000_p10 105.8% 75.901 80.305 100.0% 1 1; shuffle_order_by_10m_int 105.6% 54.898 57.987 100.0% 2 2; shuffle_key_by_aggregate_good_locality 105.3% 9.548 10.051 100.0% 24 24; table_big_aggregate_compilation 105.1% 69.388 72.944 100.0% 1 1; matrix_multi_write_nothing 104.9% 220.009 230.853 100.0% 1 1; blockmatrix_write_from_entry_expr_range_mt 104.9% 73.578 77.182 100.0% 1 1; write_range_table_p1000 104.7% 26.990 28.267 100.0% 1 1; sentinel_cpu_hash_1 104.7% 26.863 28.127 100.0% 1 1; sample_qc 104.4% 20.570 21.477 100.0% 2 2; import_gvcf_force_count 104.3% 74.809 78.025 100.0% 1 1; table_",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11060#issuecomment-971687705:122,Benchmark,Benchmark,122,https://hail.is,https://github.com/hail-is/hail/pull/11060#issuecomment-971687705,1,['Benchmark'],['Benchmark']
Testability,"yes, good idea. I added a hard-coded test of both the arrays and n_discordant.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7663#issuecomment-562152990:37,test,test,37,https://hail.is,https://github.com/hail-is/hail/pull/7663#issuecomment-562152990,1,['test'],['test']
Testability,"yes, good idea. I checked OrderingSuite on my machine and all the tests except the first are running at 30ms vs 3-7s again, but it'll be good to double check the CI timings.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5578#issuecomment-471601643:66,test,tests,66,https://hail.is,https://github.com/hail-is/hail/pull/5578#issuecomment-471601643,1,['test'],['tests']
Testability,"yes, sure. will do that after practicing talk once more. Also, this did remove the logic that prevents a remapping of entries if the field is a top level entry field. This will make UKBB regression performance worst in the very near term. Should we patch this?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4535#issuecomment-430342969:83,log,logic,83,https://hail.is,https://github.com/hail-is/hail/pull/4535#issuecomment-430342969,1,['log'],['logic']
Testability,"ygosity-stdev 0.01 --standard-min-confidence-threshold-for-calling 10.0 --max-alternate-alleles 6 --max-genotype-count 1024 --sample-ploidy 2 --disable-tool-default-annotations false --only-output-calls-starting-in-intervals false --interval-set-rule UNION --interval-padding 0 --interval-exclusion-padding 0 --interval-merging-rule ALL --read-validation-stringency SILENT --seconds-between-progress-updates 10.0 --disable-sequence-dictionary-validation false --create-output-bam-index true --create-output-bam-md5 false --create-output-variant-md5 false --lenient false --add-output-sam-program-record true --add-output-vcf-command-line true --cloud-prefetch-buffer 40 --cloud-index-prefetch-buffer -1 --disable-bam-index-caching false --help false --version false --showHidden false --QUIET false --use-jdk-deflater false --use-jdk-inflater false --gcs-max-retries 20 --disable-tool-default-read-filters false"",Version=4.0.1.2,Date=""March 22, 2018 1:12:03 AM EDT"">; ##INFO=<ID=ClippingRankSum,Number=1,Type=Float,Description=""Z-score From Wilcoxon rank sum test of Alt vs. Ref number of hard clipped bases"">; ##INFO=<ID=DB,Number=0,Type=Flag,Description=""dbSNP Membership"">; ##INFO=<ID=END,Number=1,Type=Integer,Description=""Stop position of the interval"">; ##VEP=""v91"" time=""2018-03-22 04:15:25"" cache=""/media/SE5/.vep/homo_sapiens/91_GRCh38"" db=""homo_sapiens_core_91_38@ensembldb.ensembl.org"" ensembl-variation=91.c78d8b4 ensembl-funcgen=91.4681d69 ensembl-io=91.923d668 ensembl=91.18ee742 1000genomes=""phase3"" COSMIC=""82"" ClinVar=""201710"" ESP=""V2-SSA137"" HGMD-PUBLIC=""20172"" assembly=""GRCh38.p10"" dbSNP=""150"" gencode=""GENCODE 27"" genebuild=""2014-07"" gnomAD=""170228"" polyphen=""2.2.2"" regbuild=""16"" sift=""sift5.2.2""; ##INFO=<ID=CSQ,Number=.,Type=String,Description=""Consequence annotations from Ensembl VEP. Format: Allele|Consequence|IMPACT|SYMBOL|Gene|Feature_type|Feature|BIOTYPE|EXON|INTRON|HGVSc|HGVSp|cDNA_position|CDS_position|Protein_position|Amino_acids|Codons|Existing_variation|DISTANCE|",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8469:24465,test,test,24465,https://hail.is,https://github.com/hail-is/hail/issues/8469,1,['test'],['test']
Testability,"ylinux2014_x86_64.whl (269 kB); Building wheels for collected packages: avro; Building wheel for avro (pyproject.toml): started; Building wheel for avro (pyproject.toml): finished with status 'done'; Created wheel for avro: filename=avro-1.11.2-py2.py3-none-any.whl size=119738 sha256=d7f238f86de270b449b018590930a06270766887328bdb51066eccff2cd696a6; Stored in directory: /home/hadoop/.cache/pip/wheels/e3/a2/1e/5c1be0865f4170a89de34e0a798f32f674a7eaf63a93272c7f; Successfully built avro; Installing collected packages: sortedcontainers, pytz, py4j, commonmark, azure-common, xyzservices, wrapt, uvloop, urllib3, tzdata, typing-extensions, tornado, tenacity, tabulate, six, regex, pyyaml, python-json-logger, pyjwt, pygments, pycparser, pyasn1, protobuf, portalocker, pillow, packaging, orjs; on, oauthlib, numpy, nest-asyncio, multidict, markupsafe, jmespath, idna, humanize, google-crc32c, frozenlist, dill, decorator, charset-normalizer, certifi, cachetools, avro, attrs, asyncinit, async-timeout, yarl, typer, scipy, rsa, rich, requests, python-dateutil, pyasn1-modules, plotly, parsimonious; , jproperties, jinja2, janus, isodate, googleapis-common-protos, google-resumable-media, deprecated, contourpy, cffi, aiosignal, requests-oauthlib, pycares, pandas, google-auth, cryptography, botocore, azure-core, aiohttp, s3transfer, msrest, google-auth-oauthlib, google-api-core, bokeh, azure-storage; -blob, azure-mgmt-core, aiodns, msal, google-cloud-core, boto3, azure-mgmt-storage, msal-extensions, google-cloud-storage, azure-identity; Attempting uninstall: packaging; Found existing installation: packaging 23.2; Uninstalling packaging-23.2:; Successfully uninstalled packaging-23.2; Successfully installed aiodns-2.0.0 aiohttp-3.8.5 aiosignal-1.3.1 async-timeout-4.0.3 asyncinit-0.2.4 attrs-23.1.0 avro-1.11.2 azure-common-1.1.28 azure-core-1.29.3 azure-identity-1.14.0 azure-mgmt-core-1.4.0 azure-mgmt-storage-20.1.0 azure-storage-blob-12.17.0 bokeh-3.2.2 boto3-1.28.41 botocore-1.31.; 41 cache",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221:41865,log,logger,41865,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221,1,['log'],['logger']
Testability,"ync/commit/8af33182b5a0f8e2b6a5735cffff3b1f973e25d2""><code>8af3318</code></a> Block github from linkcheck</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/356ab35846a8a408b75c37697261238d3660382a""><code>356ab35</code></a> Remove stray whitespace</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/fc873f4b4351b6428375eb35e8dc1d471f4185a3""><code>fc873f4</code></a> Port changelog to Keep a Changelog</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/c021ce58432b27ac9035fc53c23273bff6ea4f70""><code>c021ce5</code></a> Port from rST to md/MyST (<a href=""https://github-redirect.dependabot.com/hynek/prometheus-async/issues/27"">#27</a>)</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/36bfe3f427c4206828d2d99f5aeefac2ec8d8226""><code>36bfe3f</code></a> count_exceptions only needs an Incrementer</li>; <li><a href=""https://github.com/hynek/prometheus-async/commit/82766062e8d64b56999d150dd2b4f60d4b6dd33d""><code>8276606</code></a> Expand regression test to signatures</li>; <li>Additional commits viewable in <a href=""https://github.com/hynek/prometheus-async/compare/19.2.0...22.1.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=prometheus-async&package-manager=pip&previous-version=19.2.0&new-version=22.1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11536:3993,test,test,3993,https://hail.is,https://github.com/hail-is/hail/pull/11536,1,['test'],['test']
Testability,you need to fix up some makefile logic,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6437#issuecomment-504543247:33,log,logic,33,https://hail.is,https://github.com/hail-is/hail/pull/6437#issuecomment-504543247,1,['log'],['logic']
Testability,"you'll get even more benefit from staging, to get rid of the `loadField` overhead. please follow up with DSP for the 1kg gvcfs so we can add a benchmark!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7252#issuecomment-540783673:143,benchmark,benchmark,143,https://hail.is,https://github.com/hail-is/hail/pull/7252#issuecomment-540783673,2,['benchmark'],['benchmark']
Testability,"ypecheck; return __orig_func__(*args_, **kwargs_); File ""/Users/konradk/Dropbox/src/python/hail/table.py"", line 1101, in show; print(self._show(n,width, truncate, types)); File ""/Users/konradk/Dropbox/src/python/hail/table.py"", line 1104, in _show; return self._jt.showString(n, joption(truncate), types, width); File ""/Users/konradk/programs/spark-2.2.0-bin-hadoop2.7/python/lib/py4j-0.10.4-src.zip/py4j/java_gateway.py"", line 1133, in __call__; answer, self.gateway_client, self.target_id, self.name); File ""/Users/konradk/Dropbox/src/python/hail/utils/java.py"", line 196, in deco; 'Error summary: %s' % (deepest, full, hail.__version__, deepest)) from None; hail.utils.java.FatalError: AssertionError: assertion failed; Java stack trace:; org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 9.0 failed 1 times, most recent failure: Lost task 0.0 in stage 9.0 (TID 49, localhost, executor driver): java.lang.AssertionError: assertion failed; 	at scala.Predef$.assert(Predef.scala:156); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.next(OrderedRVD.scala:926); 	at is.hail.rvd.OrderedRVD$$anonfun$apply$16$$anon$3.next(OrderedRVD.scala:908); 	at scala.collection.Iterator$$anon$12.next(Iterator.scala:444); 	at is.hail.utils.package$.getIteratorSizeWithMaxN(package.scala:349); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:433); 	at is.hail.sparkextras.ContextRDD$$anonfun$12.apply(ContextRDD.scala:433); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1$$anonfun$apply$34.apply(ContextRDD.scala:458); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1$$anonfun$apply$34.apply(ContextRDD.scala:458); 	at is.hail.utils.package$.using(package.scala:577); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:458); 	at is.hail.sparkextras.ContextRDD$$anonfun$runJob$1.apply(ContextRDD.scala:458); 	at org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:2062); 	at org.apache.spark.SparkCont",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3516:1954,assert,assert,1954,https://hail.is,https://github.com/hail-is/hail/issues/3516,1,['assert'],['assert']
Testability,"yping=5 min_indel_fraction_per_sample=0.25 indel_heterozygosity=1.25E-4 indelGapContinuationPenalty=10 indelGapOpenPenalty=45 indelHaplotypeSize=80 indelDebug=false ignoreSNPAlleles=false allReadsSP=false ignoreLaneInfo=false reference_sample_calls=(RodBinding name= source=UNBOUND) reference_sample_name=null sample_ploidy=2 min_quality_score=1 max_quality_score=40 site_quality_prior=20 min_power_threshold_for_calling=0.95 min_reference_depth=100 exclude_filtered_reference_sites=false heterozygosity=0.0010 genotyping_mode=DISCOVERY output_mode=EMIT_VARIANTS_ONLY standard_min_confidence_threshold_for_calling=30.0 standard_min_confidence_threshold_for_emitting=30.0 alleles=(RodBinding name= source=UNBOUND) max_alternate_alleles=6 p_nonref_model=EXACT_INDEPENDENT contamination_fraction_to_filter=0.0 contamination_percentage_per_sample_file=/seq/dax/all_1kg_exomes/v1/all_1kg_exomes.v1.contamination_levels.txt logRemovedReadsFromContaminationFiltering=null exactcallslog=null dbsnp=(RodBinding name=dbsnp source=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.dbsnp.vcf) comp=[] out=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub no_cmdline_in_header=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub bcf=org.broadinstitute.sting.gatk.io.stubs.VariantContextWriterStub debug_file=null metrics_file=null annotation=[] excludeAnnotation=[] filter_mismatching_base_and_quals=false""; ##VariantAnnotator=""analysis_type=VariantAnnotator input_file=[] read_buffer_size=null phone_home=STANDARD gatk_key=null tag=NA read_filter=[] intervals=[/seq/references/HybSelOligos/whole_exome_agilent_1.1_refseq_plus_3_boosters/whole_exome_agilent_1.1_refseq_plus_3_boosters.Homo_sapiens_assembly19.targets.interval_list] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=50 reference_sequence=/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_as",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658:16118,log,logRemovedReadsFromContaminationFiltering,16118,https://hail.is,https://github.com/hail-is/hail/issues/1822#issuecomment-301916658,1,['log'],['logRemovedReadsFromContaminationFiltering']
Testability,"ystem is one which operates on URLs instead of; paths. It uses the URL's protocol to determine which concrete file system to use. For example, a; router fs can `open` both `gs://danking/abc` and `s3a://danking/abc`. Each Hail Query Python Backend is associated with one file system class. This PR associates the; ServiceBackend with `RouterFS`, enabling `hl.current_backend().fs.open`, `hl.hadoop_open`, etc. to; read from S3, GCS, ABS, and the local file system. We should deprecate `hail.utils.hadoop_utils`; because it is not Hadoop-specific. We should instead advertise the class-based `hail.fs` or create a; new function-based interface (e.g. `hl.fs.open(...)`. # Test Clean-up. The Hail Query local and spark tests should now work in Azure. I moved all the `hail.fs` and; `hailtop.aiotools.fs` tests into two build.yaml steps: `test_hail_python_fs` and; `test_hail_scala_fs`. These tests are exhaustive: they test every file system: S3, ABS, and GCS. The only file system tests that remain in the Hail Query tests are the tests of; `hail.utils.hadoop_utils`. The hadoop tests are not exhaustive: they only test the *current* file; system. In Azure, they test ABS. In Google, they test GCS. I have not decided yet if we should enable the hail python tests in Azure. It seems mostly wasteful. # Local Cache. I added a local cache directory. It defaults to `$XDG_CONFIG_HOME/hail/cache` or; `~/.config/hail/cache` if `XDG_CONFIG_HOME` is not set. I store Python reference genome metadata; here. # Batch Attributes. The ServiceBackend `batch_attributes` attribute specifies the attributes for any batch created by; the ServiceBackend. I modified the tests so that the test function name is use the ""name"" of the; batch. When a Hail Query driver job executes `parallelizeAndComputeWithIndex`, it uses its name with; a unique suffix as the name of the batch of worker jobs. # Changes to Hail Scala. I think the only changes outside of `is.hail.backend.service` and `is.hail.services` are:. 1. More re",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11194:5909,test,tests,5909,https://hail.is,https://github.com/hail-is/hail/pull/11194,3,['test'],['tests']
Testability,"ython-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2>v2.7.0</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/434"">#434</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/5055919f70c82b38de6d1fa7f1df6006865a857b"">5055919</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:4501,log,logging,4501,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['log'],['logging']
Testability,"ze check was missing (Adam Kaczmarek); Fixed: GITHUB-2709: Testnames not working together with suites in suite (Martin Aldrin); Fixed: GITHUB-2704: IHookable and IConfigurable callback discrepancy (Krishnan Mahadevan); Fixed: GITHUB-2637: Upgrade to JDK11 as the minimum JDK requirements (Krishnan Mahadevan); Fixed: GITHUB-2734: Keep the initial order of listeners (Andrei Solntsev); Fixed: GITHUB-2359: Testng <a href=""https://github.com/BeforeGroups""><code>@​BeforeGroups</code></a> is running in parallel with testcases in the group (Anton Velma); Fixed: Possible StringIndexOutOfBoundsException in XmlReporter (Anton Velma); Fixed: GITHUB-2754: <a href=""https://github.com/AfterGroups""><code>@​AfterGroups</code></a> is executed for each &quot;finished&quot; group when it has multiple groups defined (Anton Velma)</p>; <p>7.5; Fixed: GITHUB-2701: Bump gradle version to 7.3.3 to support java17 build (ZhangJian He); Fixed: GITHUB-2646: Streamline Logging Across TestNG (Krishnan Mahadevan); Fixed: GITHUB-2658: Inheritance + dependsOnMethods (Krishnan Mahadevan)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/cbeust/testng/commit/b94395dea479308ea3fe825269730b960f44d805""><code>b94395d</code></a> Bump version to 7.7.1 for release</li>; <li><a href=""https://github.com/cbeust/testng/commit/89dc5845fcb46c26af187e50ea907a7382d06e72""><code>89dc584</code></a> Streamline overloaded assertion methods for Groovy</li>; <li><a href=""https://github.com/cbeust/testng/commit/5ac0021d14f7eb00804fe235aaefc5c2fbce57d1""><code>5ac0021</code></a> Adding release notes</li>; <li><a href=""https://github.com/cbeust/testng/commit/c0e1e772f1fc0ab2142f3a4114a2b8cfe60fa7e1""><code>c0e1e77</code></a> Adjust version reference in deprecation msgs.</li>; <li><a href=""https://github.com/cbeust/testng/commit/011527d9bf0f91a40539f5e5467cc106888810d9""><code>011527d</code></a> Bump version to 7.7.0 for r",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12665:14529,Log,Logging,14529,https://hail.is,https://github.com/hail-is/hail/pull/12665,2,"['Log', 'Test']","['Logging', 'TestNG']"
Testability,zf libsimdpp-2.1.tar.gz; :compileScala UP-TO-DATE; :processResources UP-TO-DATE; :classes UP-TO-DATE; :compileTestJava UP-TO-DATE; :compileTestScala UP-TO-DATE; :processTestResources UP-TO-DATE; :testClasses UP-TO-DATE; :testCppCodegen; Running test: Test method testReadWrite(is.hail.annotations.AnnotationsSuite). Gradle suite > Gradle test > is.hail.annotations.AnnotationsSuite.testReadWrite FAILED; org.apache.spark.SparkException at AnnotationsSuite.scala:76; Caused by: java.lang.AssertionError; Running test: Test method testEmptyKeys(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testEmptyKeys FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIntervalIteratorWorksWithGeneralEndpoints(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIntervalIteratorWorksWithGeneralEndpoints FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testIterateFromUntil(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testIterateFromUntil FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testLowerBound(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testLowerBound FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testQueryByKey(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testQueryByKey FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testRangeIterator(is.hail.io.IndexSuite). Gradle suite > Gradle test > is.hail.io.IndexSuite.testRangeIterator FAILED; java.lang.AssertionError at IndexSuite.scala:42; Running test: Test method testUpperBound(is.hail.io.IndexSuite). Gradle suite > Gradle test ,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4718:1315,test,test,1315,https://hail.is,https://github.com/hail-is/hail/issues/4718,1,['test'],['test']
Testability,| 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2761,test,test,2761,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2795,test,test,2795,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; | test ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2830,test,test,2830,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| 78 | 39104 |; | test | test | 6 | 135 | 35712 |; | test | test | 6 | 164 | 54080 |; +----------------------------------+------+-------------+-------+------------+; 9 rows in set (0.00 sec). mysql> select * from aggregated_billing_project_user_resources_v3 where resource_id = 6 limit 100;; +----------------------------------+------+-------------+-------+------------+; | billing_project | user | resource_id | token | usage |; +----------------------------------+------+-------------+-------+------------+; | __testproject_iizhz61z7543_FUitX | test | 6 | 0 | 1817536 |; | __testproject_iizhz61z7543_uvxWn | test | 6 | 0 | 11331136 |; | ci | ci | 6 | 0 | 79640784 |; | test | test | 6 | 0 | 4094463424 |; | test | test | 6 | 10 | 49984 |; | test | test | 6 | 15 | 54592 |; | test | test | 6 | 24 | 49280 |; | test | test | 6 | 29 | 53056 |; | test | test | 6 | 31 | 52480 |; | test | test | 6 | 32 | 48000 |; | test | test | 6 | 35 | 107008 |; | test | test | 6 | 37 | 44160 |; | test | test | 6 | 75 | 51520 |; | test | test | 6 | 78 | 39104 |; | test | test | 6 | 81 | 50688 |; | test | test | 6 | 83 | 216064 |; | test | test | 6 | 102 | 48384 |; | test | test | 6 | 119 | 52544 |; | test | test | 6 | 126 | 56064 |; | test | test | 6 | 135 | 81728 |; | test | test | 6 | 142 | 57408 |; | test | test | 6 | 145 | 55488 |; | test | test | 6 | 152 | 48128 |; | test | test | 6 | 155 | 50176 |; | test | test | 6 | 160 | 54464 |; | test | test | 6 | 164 | 54080 |; | test | test | 6 | 173 | 46080 |; | test | test | 6 | 175 | 48704 |; | test | test | 6 | 176 | 45696 |; | test | test | 6 | 183 | 46080 |; | test | test | 6 | 189 | 47168 |; | test | test | 6 | 194 | 30912 |; | test | test | 6 | 199 | 47232 |; +----------------------------------+------+-------------+-------+------------+; 33 rows in set (0.00 sec); ```. ```; mysql> select * from aggregated_billing_project_user_resources_by_date_v3 where resource_id = 6 limit 100;; +--------------+----------------------------------+------+------,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:5986,test,test,5986,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,62,['test'],['test']
Testability,| 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | test | test | 6 | 124 | 39616 |; | 2023-07-13 | test | test | 6 | 126 | 31232 |; | 2023-07-13 | test | test | 6 | 127 | 61696 |; | 2023-07-13 | test | test | 6 | 129 | 60096 |; | 2023-07-13 | test | test | 6 | 131 | 167040 |; | 2023-07-13 | test | test | 6 | 132 | 312768 |; | 2023-07-13 | test | test | 6 | 134 | 53312 |; | 2023-07-13 | test | test | 6 | 136 | 51840 |; | 2023-07-13 | test | test | 6 | 137 | 68224 |; +--------------+----------------------------------+------+-------------+-------+------------+; 100 rows in set (0.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11598,test,test,11598,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,36,['test'],['test']
Testability,"| `sphinx:` <br> `1.8.6 -> 3.3.0` <br> | No | Proof of Concept ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-PYTHON-SPHINX-5812109](https://snyk.io/vuln/SNYK-PYTHON-SPHINX-5812109) | `sphinx:` <br> `1.8.6 -> 3.3.0` <br> | No | Proof of Concept ; ![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png ""low severity"") | Open Redirect <br/>[SNYK-PYTHON-TORNADO-5537286](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5537286) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | HTTP Request Smuggling <br/>[SNYK-PYTHON-TORNADO-5840803](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5840803) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit . Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI4OGE5ZjRlMS0yNGNjLTQ5NDYtYWYwYy03OWJlZTNkNTg3YzUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijg4YTlmNGUxLTI0Y2MtNDk0Ni1hZjBjLTc5YmVlM2Q1ODdjNSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13835:7352,test,tested,7352,https://hail.is,https://github.com/hail-is/hail/pull/13835,1,['test'],['tested']
Testability,"| `sphinx:` <br> `1.8.6 -> 3.3.0` <br> | No | Proof of Concept ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | Regular Expression Denial of Service (ReDoS) <br/>[SNYK-PYTHON-SPHINX-5812109](https://snyk.io/vuln/SNYK-PYTHON-SPHINX-5812109) | `sphinx:` <br> `1.8.6 -> 3.3.0` <br> | No | Proof of Concept ; ![low severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/l.png ""low severity"") | Open Redirect <br/>[SNYK-PYTHON-TORNADO-5537286](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5537286) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit ; ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"") | HTTP Request Smuggling <br/>[SNYK-PYTHON-TORNADO-5840803](https://snyk.io/vuln/SNYK-PYTHON-TORNADO-5840803) | `tornado:` <br> `5.1.1 -> 6.3.3` <br> | No | No Known Exploit . Some vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJmY2JlODM3Mi04NzYwLTQyYjEtOGU0ZS1jZDZlNGZkNjNhYzYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImZjYmU4MzcyLTg3NjAtNDJiMS04ZTRlLWNkNmU0ZmQ2M2FjNiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13866:7378,test,tested,7378,https://hail.is,https://github.com/hail-is/hail/pull/13866,1,['test'],['tested']
Testability,| test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2754,test,test,2754,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2788,test,test,2788,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | test | 6 | 77 | 132736 |; | test | test | 6 | 78 | 42432 |; | test | test | 6 | 79 | 563648 |; | test | test | 6 | 80 | 943616 |; | test | test | 6 | 81 | 34048 |; | test | test | 6 | 82 | 23424 |; | test | test | 6 | 83 | 37952 |; | test | test | 6 | 84 | 428352 |; | test | test | 6 | 86 | 40576 |; | test | test | 6 | 88 | 141312 |; | test | test | 6 | 89 | 203584 |; | test | test | 6 | 90 | 465536 |; | test | test | 6 | 91 | 47808 |; | test | test | 6 | 92 | 35456 |; | test | test | 6 | 93 | 768192 |; | test | test | 6 | 94 | 172416 |; | test | test | 6 | 95 | 48384 |; | test | test | 6 | 96 | 146816 |; | test | test | 6 | 97 | 69568 |; | test | test | 6 | 99 | 203520 |; | test | test | 6 | 100 | 44608 |; | test | test | 6 | 101 | 120512 |; | test | test | 6 | 102 | 233472 |; | test | test | 6 | 103 | 219584 |; ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2823,test,test,2823,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10794,test,test,10794,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10841,test,test,10841,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10889,test,test,10889,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | tes,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10936,test,test,10936,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07-13 | t,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11031,test,test,11031,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | test | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:2000,test,test,2000,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | test | 6 | 1 | 108608 |; | 2023-07-13 | test | test | 6 | 2 | 80576 |; | 2023-07-13 | test | test | 6 | 5 | 35648 |; | 2023-07-13 | test | test | 6 | 7 | 578240 |; | 2023-07-13 | test | test | 6 | 9 | 33024 |; | 2023-07-13 | test | test | 6 | 10 | 33472 |; | 2023-07-13 | test | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:8899,test,test,8899,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | test | 6 | 2 | 80576 |; | 2023-07-13 | test | test | 6 | 5 | 35648 |; | 2023-07-13 | test | test | 6 | 7 | 578240 |; | 2023-07-13 | test | test | 6 | 9 | 33024 |; | 2023-07-13 | test | test | 6 | 10 | 33472 |; | 2023-07-13 | test | test | 6 | 11 | 110464 |; | 2023-07-13 | test | test | 6 | 14 | 47744 |; | 2023-07-13 | test | test | 6 | 15 | 45440 |; | 2023-07-13 | test | test | 6 | 16 | 79616 |; | 2023-07-13 | test | test | 6 | 17 | 604928 |; | 2023-07-13 | test | test | 6 | 18 | 78016 |; | 2023-07-13 | test | test | 6 | 19 | 87040 |; | 2023-07-13 | test | test | 6 | 20 | 89792 |; | 2023-07-13 | test | test | 6 | 21 | 188736 |; | 2023-07-13 | test | test | 6 | 22 | 75648 |; | 2023-07-13 | test | test | 6 | 24 | 96128 |; | 2023-07-13 | test | test | 6 | 25 | 2143680 |; | 2023-07-13 | test | test | 6 | 26 | 33728 |; | 2023-07-13 | test | test | 6 | 27 | 70400 |; | 2023-07-13 | test | test | 6 | 28 | 93312 |; | 2023-07-13 | test | test | 6 | 31 | 53696 |; | 2023-07-13 | test | test | 6 | 32 | 70976 |; | 2023-07-13 | test | test | 6 | 33 | 57280 |; | 2023-07-13 | test | test | 6 | 34 | 99712 |; | 2023-07-13 | test | test | 6 | 35 | 87360 |; | 2023-07-13 | test | test | 6 | 36 | 144384 |; | 2023-07-13 | test | test | 6 | 37 | 703616 |; | 2023-07-13 | test | test | 6 | 39 | 344832 |; | 2023-07-13 | test | test | 6 | 42 | 129152 |; | 2023-07-13 | test | test | 6 | 44 | 56000 |; | 2023-07-13 | test | test | 6 | 45 | 100800 |; | 2023-07-13 | test | test | 6 | 48 | 86592 |; | 2023-07-13 | test | test | 6 | 49 | 94336 |; | 2023-07-13 | test | test | 6 | 50 | 39744 |; | 2023-07-13 | test | test | 6 | 51 | 73344 |; | 2023-07-13 | test | test | 6 | 52 | 357248 |; | 2023-07-13 | test | test | 6 | 54 | 55872 |; | 2023-07-13 | test | test | 6 | 56 | 76864 |; | 2023-07-13 | test | test | 6 | 57 | 94016 |; | 2023-07-13 | test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:8946,test,test,8946,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | test | 6 | 60 | 93504 |; | 2023-07-13 | test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 |,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10787,test,test,10787,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | test | 6 | 61 | 149952 |; | 2023-07-13 | test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10834,test,test,10834,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | test | 6 | 62 | 48064 |; | 2023-07-13 | test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10882,test,test,10882,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | test | 6 | 63 | 250560 |; | 2023-07-13 | test | test | 6 | 64 | 64704 |; | 2023-07-13 | test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-1,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:10929,test,test,10929,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | test | 6 | 65 | 51968 |; | 2023-07-13 | test | test | 6 | 66 | 90752 |; | 2023-07-13 | test | test | 6 | 67 | 68928 |; | 2023-07-13 | test | test | 6 | 68 | 91712 |; | 2023-07-13 | test | test | 6 | 69 | 93632 |; | 2023-07-13 | test | test | 6 | 70 | 118784 |; | 2023-07-13 | test | test | 6 | 72 | 76544 |; | 2023-07-13 | test | test | 6 | 73 | 145472 |; | 2023-07-13 | test | test | 6 | 74 | 47040 |; | 2023-07-13 | test | test | 6 | 77 | 226944 |; | 2023-07-13 | test | test | 6 | 79 | 157568 |; | 2023-07-13 | test | test | 6 | 80 | 37120 |; | 2023-07-13 | test | test | 6 | 81 | 106496 |; | 2023-07-13 | test | test | 6 | 82 | 494464 |; | 2023-07-13 | test | test | 6 | 83 | 79424 |; | 2023-07-13 | test | test | 6 | 85 | 148608 |; | 2023-07-13 | test | test | 6 | 86 | 52288 |; | 2023-07-13 | test | test | 6 | 87 | 181696 |; | 2023-07-13 | test | test | 6 | 89 | 39232 |; | 2023-07-13 | test | test | 6 | 90 | 90624 |; | 2023-07-13 | test | test | 6 | 92 | 133504 |; | 2023-07-13 | test | test | 6 | 93 | 156672 |; | 2023-07-13 | test | test | 6 | 95 | 190528 |; | 2023-07-13 | test | test | 6 | 96 | 38016 |; | 2023-07-13 | test | test | 6 | 98 | 99392 |; | 2023-07-13 | test | test | 6 | 99 | 109568 |; | 2023-07-13 | test | test | 6 | 100 | 92928 |; | 2023-07-13 | test | test | 6 | 101 | 75712 |; | 2023-07-13 | test | test | 6 | 105 | 50048 |; | 2023-07-13 | test | test | 6 | 107 | 41472 |; | 2023-07-13 | test | test | 6 | 109 | 30208 |; | 2023-07-13 | test | test | 6 | 110 | 72064 |; | 2023-07-13 | test | test | 6 | 111 | 36672 |; | 2023-07-13 | test | test | 6 | 113 | 32832 |; | 2023-07-13 | test | test | 6 | 114 | 54400 |; | 2023-07-13 | test | test | 6 | 115 | 106240 |; | 2023-07-13 | test | test | 6 | 116 | 49216 |; | 2023-07-13 | test | test | 6 | 117 | 24640 |; | 2023-07-13 | test | test | 6 | 118 | 254080 |; | 2023-07-13 | test | test | 6 | 119 | 37056 |; | 2023-07-13 | test | test | 6 | 120 | 110784 |; | 2023-07-13 | test | test | 6 | 122 | 29888 |; | 2023-07,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:11024,test,test,11024,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,| test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | test | test | 6 | 73 | 81856 |; | test | test | 6 | 74 | 28352 |; | test | test | 6 | 76 | 121536 |; | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1993,test,test,1993,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,|; | test | test | 6 | 5 | 46912 |; | test | test | 6 | 6 | 158336 |; | test | test | 6 | 7 | 70336 |; | test | test | 6 | 8 | 167680 |; | test | test | 6 | 9 | 523136 |; | test | test | 6 | 10 | 40640 |; | test | test | 6 | 11 | 616448 |; | test | test | 6 | 12 | 497024 |; | test | test | 6 | 14 | 87680 |; | test | test | 6 | 15 | 111104 |; | test | test | 6 | 16 | 120128 |; | test | test | 6 | 17 | 28736 |; | test | test | 6 | 19 | 42240 |; | test | test | 6 | 20 | 271232 |; | test | test | 6 | 21 | 88320 |; | test | test | 6 | 22 | 149760 |; | test | test | 6 | 23 | 47232 |; | test | test | 6 | 24 | 45888 |; | test | test | 6 | 25 | 41664 |; | test | test | 6 | 27 | 56704 |; | test | test | 6 | 28 | 36864 |; | test | test | 6 | 30 | 57792 |; | test | test | 6 | 31 | 62848 |; | test | test | 6 | 32 | 40320 |; | test | test | 6 | 33 | 61888 |; | test | test | 6 | 34 | 43520 |; | test | test | 6 | 35 | 219328 |; | test | test | 6 | 36 | 141760 |; | test | test | 6 | 38 | 157632 |; | test | test | 6 | 40 | 72064 |; | test | test | 6 | 41 | 317888 |; | test | test | 6 | 42 | 83648 |; | test | test | 6 | 43 | 123200 |; | test | test | 6 | 44 | 196032 |; | test | test | 6 | 45 | 62848 |; | test | test | 6 | 47 | 232768 |; | test | test | 6 | 48 | 937472 |; | test | test | 6 | 49 | 78272 |; | test | test | 6 | 50 | 88320 |; | test | test | 6 | 51 | 128320 |; | test | test | 6 | 52 | 36160 |; | test | test | 6 | 53 | 1268800 |; | test | test | 6 | 54 | 37568 |; | test | test | 6 | 55 | 53568 |; | test | test | 6 | 56 | 147520 |; | test | test | 6 | 57 | 102784 |; | test | test | 6 | 58 | 95360 |; | test | test | 6 | 60 | 156480 |; | test | test | 6 | 61 | 54976 |; | test | test | 6 | 62 | 123072 |; | test | test | 6 | 63 | 88128 |; | test | test | 6 | 64 | 202112 |; | test | test | 6 | 65 | 54848 |; | test | test | 6 | 67 | 715456 |; | test | test | 6 | 69 | 51264 |; | test | test | 6 | 70 | 127296 |; | test | test | 6 | 71 | 95040 |; | test | test | 6 | 72 | 72320 |; | te,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785:1890,test,test,1890,https://hail.is,https://github.com/hail-is/hail/pull/13213#issuecomment-1634765785,1,['test'],['test']
Testability,"|wHda9c265f2-fbd8|; 00000070 2d 34 66 31 62 2d 62 63 64 65 2d 66 62 66 32 39 |-4f1b-bcde-fbf29|; 00000080 31 38 30 63 33 34 37 00 00 00 00 |180c347....|; 0000008b; ```. code:; ```ipython3; In [1]: import hail as hl; ...: import gnomad.utils.sparse_mt; ...: ; ...: ; ...: tmp_dir = 'gs://danking/tmp/'; ...: vds_file = 'gs://neale-bge/bge-wave-1.vds'; ...: out = 'gs://danking/foo.vcf.bgz'; ...: ; ...: vds = hl.vds.read_vds(vds_file); ...: mt = hl.vds.to_dense_mt(vds); ...: t = gnomad.utils.sparse_mt.default_compute_info(mt); ...: t = t.annotate(info=t.info.drop('AS_SB_TABLE')); ...: t = t.annotate(info = t.info.drop(; ...: 'AS_QUALapprox', 'AS_VarDP', 'AS_SOR', 'AC_raw', 'AC', 'AS_SB'; ...: )); ...: t = t.drop('AS_lowqual'); ...: ; ...: hl.methods.export_vcf(dataset = t, output = out, tabix = True); ```; worker failure:; ```; 2023-09-27 16:43:10.389 JVMEntryway: INFO: is.hail.JVMEntryway received arguments:; 2023-09-27 16:43:10.389 JVMEntryway: INFO: 0: /hail-jars/gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar; 2023-09-27 16:43:10.389 JVMEntryway: INFO: 1: is.hail.backend.service.Main; 2023-09-27 16:43:10.390 JVMEntryway: INFO: 2: /batch/83e7aee9e9244f6884b8a84ea81b4c7a; 2023-09-27 16:43:10.390 JVMEntryway: INFO: 3: /batch/83e7aee9e9244f6884b8a84ea81b4c7a/log; 2023-09-27 16:43:10.390 JVMEntryway: INFO: 4: gs://hail-test-ezlis/dking/jars/ch4g3zvqceyo/09526a168d57dac1a26f8caa4ab49593931ed2ef.jar; 2023-09-27 16:43:10.390 JVMEntryway: INFO: 5: worker; 2023-09-27 16:43:10.390 JVMEntryway: INFO: 6: gs://1-day/parallelizeAndComputeWithIndex/al3OJfYZMMNoi9F2jvcAf0jBirVTayRVqro03dnIa1g=; 2023-09-27 16:43:10.390 JVMEntryway: INFO: 7: 7028; 2023-09-27 16:43:10.390 JVMEntryway: INFO: 8: 9060; 2023-09-27 16:43:10.390 JVMEntryway: INFO: Yielding control to the QoB Job.; 2023-09-27 16:43:10.393 Worker$: INFO: is.hail.backend.service.Worker 09526a168d57dac1a26f8caa4ab49593931ed2ef; 2023-09-27 16:43:10.394 Worker$: INFO: running job 7028/90",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:2102,test,test-,2102,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['test'],['test-']
Testability,"}"",; ""events_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/events"",; ""assignees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/assignees{/user}"",; ""branches_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/branches{/branch}"",; ""tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/tags"",; ""blobs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/blobs{/sha}"",; ""git_tags_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/tags{/sha}"",; ""git_refs_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/refs{/sha}"",; ""trees_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/trees{/sha}"",; ""statuses_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/statuses/{sha}"",; ""languages_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/languages"",; ""stargazers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/stargazers"",; ""contributors_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contributors"",; ""subscribers_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscribers"",; ""subscription_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/subscription"",; ""commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/commits{/sha}"",; ""git_commits_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/git/commits{/sha}"",; ""comments_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/comments{/number}"",; ""issue_comment_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/issues/comments{/number}"",; ""contents_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/contents/{+path}"",; ""compare_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/compare/{base}...{head}"",; ""merges_url"": ""https://api.github.com/repos/hail-ci-test/ci-test-p4a9fxo7/merges"",. 0 0 0 0 0 0 0 0 --:--:--",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858:3795,test,test,3795,https://hail.is,https://github.com/hail-is/hail/issues/4517#issuecomment-429024858,2,['test'],"['test', 'test-']"
Testability,"}),start),GetField(Ref(__iruid_374,struct{start: int32, end: int32}),end),I32(1),false),__iruid_375,MakeStruct(ArrayBuffer((idx,Ref(__iruid_375,int32)))))),Apply(concat,WrappedArray(),ArrayBuffer(GetField(Ref(__iruid_370,struct{oldCtx: struct{start: int32, end: int32}, writeCtx: str}),writeCtx), UUID4(__iruid_290)),str),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/rows/parts/,Some((gs://danking/workshop-test/1kg.mt/index/,+PCStruct{idx:+PInt32})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_369,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_376,GetField(Ref(__iruid_376,struct{fil",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601:4887,test,test,4887,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-772011601,1,['test'],['test']
Testability,"}),start),GetField(Ref(__iruid_470,struct{start: int32, end: int32}),end),I32(1),false),__iruid_471,MakeStruct(ArrayBuffer((idx,Ref(__iruid_471,int32)))))),Apply(concat,WrappedArray(),ArrayBuffer(GetField(Ref(__iruid_466,struct{oldCtx: struct{start: int32, end: int32}, writeCtx: str}),writeCtx), UUID4(__iruid_386)),str),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{idx:+EInt32}"",""_vType"":""Struct{idx:Int32}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/rows/parts/,Some((gs://danking/workshop-test/1kg.mt/index/,+PCStruct{idx:+PInt32})),None)),Some(TableStageDependency(WrappedArray()))),Begin(ArrayBuffer(WriteMetadata(MakeArray(ArrayBuffer(GetField(WritePartition(MakeStream(ArrayBuffer(Literal(struct{},[])),stream<struct{}>,false),Str(""part-0""),PartitionNativeWriter({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},gs://danking/workshop-test/1kg.mt/globals/parts/,None,None)),filePath)),array<str>),RVDSpecWriter(gs://danking/workshop-test/1kg.mt/globals,RVDSpecMaker({""name"":""TypedCodecSpec"",""_eType"":""+EBaseStruct{}"",""_vType"":""Struct{}"",""_bufferSpec"":{""name"":""LEB128BufferSpec"",""child"":{""name"":""BlockingBufferSpec"",""blockSize"":32768,""child"":{""name"":""LZ4HCBlockBufferSpec"",""blockSize"":32768,""child"":{""name"":""StreamBlockBufferSpec""}}}}},WrappedArray(),JArray(List(JObject(List((start,JObject(List())), (end,JObject(List())), (includeStart,JBool(true)), (includeEnd,JBool(true)))))),null,Map()))), WriteMetadata(ToArray(StreamMap(ToStream(Ref(__iruid_465,array<struct{filePath: str, partitionCounts: int64}>),false),__iruid_472,GetField(Ref(__iruid_472,struct{fil",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/9856#issuecomment-756194693:4607,test,test,4607,https://hail.is,https://github.com/hail-is/hail/issues/9856#issuecomment-756194693,2,['test'],['test']
Testability,"~Actually, this does appear to be a gap in our test coverage. I put in a failing assertion, and both `BlockMatrixIRSuite.scala` and `test_linalg.py` passed.~ Never mind, just forgot to run in local mode. I didn't notice any obvious errors in your code, but I don't think this is the right way to do it, so I tried writing it myself. I'll try to write a test that exercises this path and test both implementations.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13807#issuecomment-1766662634:47,test,test,47,https://hail.is,https://github.com/hail-is/hail/pull/13807#issuecomment-1766662634,4,"['assert', 'test']","['assertion', 'test']"
Testability,"~I verified this scales all the way to 50,000 partitions but the batch-driver can't schedule these fast enough to make the test fast. They take less than a second but more than 300ms. We'd need like 64 8-core (512 cores) nodes to bring test time down to a reasonable amount. We should strive to get there but batch would need to schedule at 512 jobs per second for that to make sense.~ Hmm, something went wrong. OK, we'll need to revisit 50k partition tables. But let's get this in, the current code is obviously wrong.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13065#issuecomment-1550142533:123,test,test,123,https://hail.is,https://github.com/hail-is/hail/pull/13065#issuecomment-1550142533,2,['test'],['test']
Testability,"~So this PR is me trying to switch just `TableFilter` over to the correct region memory management model we've decided on.~. ~I used this `usingFreshContext` method to pass a new context to the producer that filter is consuming from so that filter can clear unused rows.~. This PR is where I'm cleaning up region management. So far, I've decided the following:. Addressed: ; - `TableFilter`; - `TableHead` (via `rvd.head`); - `TableTail` (via `rvd.tail`). No change needed: ; - `TableMapRows`; - `TableMapGlobals`; - `TableRange`; - `TableLiteral`. I also added a test using the new `hl.zeros` that's intended to catch memory leaks in filter by going through lots of large rows. For some reason, this test is failing on CI with OOM despite seeming to use constant memory on my local machine, I am still looking into why this is. Mostly, I'm wondering if this is consistent with what y'all imagined correct Region management would look like before I go through and do the rest of them. ; @cseed @tpoterba @catoverdrive @patrick-schultz",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8199:564,test,test,564,https://hail.is,https://github.com/hail-is/hail/pull/8199,2,['test'],['test']
Testability,"~Stacked on #10770~; ~Stacked on #10791~. This PR attempts to allow linear algebra codegen methods, like the LAPACK wrappers and the local whitening methods I'm working on, to defensively assert shape compatibility preconditions, without generating redundant runtime checks. (I always hate when we're pushed to avoid using code generation abstractions (in this case, just factoring code into smaller functions), because they generate worse code.). The method is pretty simple. SNDArray shapes are now arrays of `SizeValue`, which is a sum type with cases `SizeValueDyn(Value[Long])` and `SizeValueStatic(Long)`. I don't think static sizes occur very often, but it was a simple addition. `SizeValue`s can be compared statically with `==`, or at runtime with `ceq`: the former is true only if we can prove statically that the two sizes must be equal, while the latter emits code to check equality at runtime, using static knowledge to elide dynamic checks where possible. The way we encode static knowledge that two sizes are equal is by using the same local variable to store both. The primary interface to introduce that static knowledge (other than using the same set of sizes to construct multiple SNDArrays), is the method `coerceToShape(cb: CodeBuilder, newShape: Seq[SizeValue]): SNDArrayValue`, which emits code to dynamically assert that `this.shape` agrees with `newShape`, then returns `this` with shape replaced by `newShape`. Thus, `a.coerceToShape(cb, newShape).shape == newShape` will always be true, preserving the static knowledge about the shape of `a`. As a simple example, `gemm` verifies its inputs with (simplifying to the case with no transposes); ```; val Seq(m, n) = C.shapes; val k = A.shapes(1); A.assertHasShape(cb, FastIndexedSeq(m, k), errMsg); B.assertHasShape(cb, FastIndexedSeq(k, n), errMsg); ```; If we call this with; ```; val m, n, k = \\ compute expected dim sizes. \\ emit dynamic size checks once; val A_ = A.coerceToShape(cb, IndexedSeq(m, k)); val B_ = B.coerce",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10783:188,assert,assert,188,https://hail.is,https://github.com/hail-is/hail/pull/10783,1,['assert'],['assert']
Testability,"~Stacked on #10791~. A few high level changes got mixed up in this PR, since I couldn't predict where a thread would lead once I started pulling. If you would like, I can try to disentangle them. Here are the conceptual changes:; * add a CodeBuilder argument to `getEmitParam`, so that parameters which are pointers to region values can be loaded into `SValue`s with multiple locals; * make `EmitValue` a concrete class, consisting of an optional boolean value and an `SValue`; * add `valueTuple` to both `SValue` and `EmitValue`; * copy the `SCode` interface onto `SValue`, to make it easier to replace `SCode`s with `SValues` ; * add `loadToSValue` to `SingleCodeType`; * add `SStreamValue`. This loses the single use assertion, but that doesn't seem like it asserts much, since the stream producer can be freely accessed without memoizing the `SStreamCode`",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10797:720,assert,assertion,720,https://hail.is,https://github.com/hail-is/hail/pull/10797,2,['assert'],"['assertion', 'asserts']"
Testability,"~Stacked on #8917~. Adds `zipPartitions`, `extendKeyPreservesPartitioning`, `orderedJoin`, and `alignAndZipPartitions` methods to `TableStage`, trying to mirror the `RVD` implementation, especially concerning the partitioning logic. Adds lowering case for `TableJoin`.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8921:226,log,logic,226,https://hail.is,https://github.com/hail-is/hail/pull/8921,1,['log'],['logic']
Testability,~~Need to get sccache working for building LLVM~~. Install llvm/mlir from apt.llvm.org. Need to get llvm-lit working for the tests.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12410:125,test,tests,125,https://hail.is,https://github.com/hail-is/hail/pull/12410,1,['test'],['tests']
Testability,"~~Performance note: Was able to do 100k variants by 500k samples with 1000 partitions on 800 cores in 5m4s. We've never successfully done such a multiply on gCloud, but even 50k by 100k examples with the old method took a little more than 20 minutes, so safe to say this is an improvement.~~. Unfortunately, there was a bug that resulted in not all the work getting done and as such the method is not actually as performant as initial tests suggested.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1884#issuecomment-304080520:435,test,tests,435,https://hail.is,https://github.com/hail-is/hail/pull/1884#issuecomment-304080520,1,['test'],['tests']
Testability,"~~Stacked on #9106.~~. Adds an enumeration to control the allocation strategy in emitted code. There are currently three options, `Default`, `OneRegion`, and `ManyRegions`. `OneRegion` replicates the current behavior, and is the default for now. `ManyRegions` always allocates new regions when given the choice. This PR makes Java tests use the `ManyRegions` strategy to catch more lifetime errors. `Default` is somewhere in the middle, and will become the default. It will use one region (at least a constant number of regions) per row of a table. `Default` currently behaves the same as `ManyRegions`. Future work will implement the per-row behavior.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9220:331,test,tests,331,https://hail.is,https://github.com/hail-is/hail/pull/9220,1,['test'],['tests']
Testability,"~~Stacked on #9320~~. Use the framework introduced in #9320 to make the IR parser stack safe. This touches a lot of lines, but it is a completely mechanical refactoring. I did some preliminary benchmarking by timing the parse of the IR in `test_ld_prune`. (I chose that test fairly arbitrarily, and we can probably find better test cases, or generate synthetic large IRs.) Running a loop parsing the same IR repeatedly, with 10 burn-in rounds, and 60 timed rounds, I got the following results:; * On main; ```; quartiles = [4.55816, 5.209579, 5.647135]; avg = 5.332496950000001, std = 1.13761574944604; ```; * Using `StackSafe`, without the optimization in `repUntil`; ```; quantiles = [4.610798, 5.09793, 7.159075]; avg = 5.7519015000000016, std = 1.612397075594852; ```; * Using `StackSafe, with the optimization which reuses the `cont` closure, instead of allocating a new one for each token.; ```; quantiles = [4.466849, 4.826873, 5.719238]; avg = 5.2787357833333335, std = 1.272006325411254; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9332:193,benchmark,benchmarking,193,https://hail.is,https://github.com/hail-is/hail/pull/9332,3,"['benchmark', 'test']","['benchmarking', 'test']"
Testability,~~The test_hail_python tests have mysteriously disappeared.~~ We don't run them in Azure.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13076#issuecomment-1564889454:23,test,tests,23,https://hail.is,https://github.com/hail-is/hail/pull/13076#issuecomment-1564889454,1,['test'],['tests']
Testability,"~~~~~; File ""/usr/lib/python3.9/threading.py"", line 937, in _bootstrap; self._bootstrap_inner(); File ""/usr/lib/python3.9/threading.py"", line 980, in _bootstrap_inner; self.run(); File ""/usr/lib/python3.9/threading.py"", line 917, in run; self._target(*self._args, **self._kwargs); File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 81, in _worker; work_item = work_queue.get(block=True). ~~~~~~~~~~~~~~~~~~~~~ Stack of asyncio_0 (139802248206080) ~~~~~~~~~~~~~~~~~~~~~; File ""/usr/lib/python3.9/threading.py"", line 937, in _bootstrap; self._bootstrap_inner(); File ""/usr/lib/python3.9/threading.py"", line 980, in _bootstrap_inner; self.run(); File ""/usr/lib/python3.9/threading.py"", line 917, in run; self._target(*self._args, **self._kwargs); File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 81, in _worker; work_item = work_queue.get(block=True). +++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++. ------------------------------ live log teardown -------------------------------; INFO hailtop.utils:utils.py:450 discarding exception; Traceback (most recent call last):; File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/local_fs.py"", line 378, in rm_dir; await self.rmdir(path); File ""/usr/local/lib/python3.9/dist-packages/hailtop/aiotools/local_fs.py"", line 352, in rmdir; return await blocking_to_async(self._thread_pool, os.rmdir, path); File ""/usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py"", line 162, in blocking_to_async; return await asyncio.get_event_loop().run_in_executor(; File ""/usr/lib/python3.9/asyncio/futures.py"", line 284, in __await__; yield self # This tells Task to wait for completion.; File ""/usr/lib/python3.9/asyncio/tasks.py"", line 328, in __wakeup; future.result(); File ""/usr/lib/python3.9/asyncio/futures.py"", line 201, in result; raise self._exception; File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 58, in run; result = self.fn(*self.args, **self.kwargs); File ""/usr/local/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13361:2646,log,log,2646,https://hail.is,https://github.com/hail-is/hail/issues/13361,1,['log'],['log']
Testability,"~~~~~~~~ Stack of asyncio_0 (140387515627072) ~~~~~~~~~~~~~~~~~~~~~; File ""/usr/lib/python3.9/threading.py"", line 937, in _bootstrap; self._bootstrap_inner(); File ""/usr/lib/python3.9/threading.py"", line 980, in _bootstrap_inner; self.run(); File ""/usr/lib/python3.9/threading.py"", line 917, in run; self._target(*self._args, **self._kwargs); File ""/usr/lib/python3.9/concurrent/futures/thread.py"", line 81, in _worker; work_item = work_queue.get(block=True). +++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++; FAILED; _________________ test_always_run_job_private_instance_cancel __________________. client = <hailtop.batch_client.client.BatchClient object at 0x7fae899806a0>. def test_always_run_job_private_instance_cancel(client: BatchClient):; b = create_batch(client); resources = {'machine_type': smallest_machine_type()}; j = b.create_job(DOCKER_ROOT_IMAGE, ['true'], resources=resources, always_run=True); b.submit(); b.cancel(); > status = j.wait(). io/test/test_batch.py:1487: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; usr/local/lib/python3.9/dist-packages/hailtop/batch_client/client.py:84: in wait; return async_to_blocking(self._async_job.wait()); usr/local/lib/python3.9/dist-packages/hailtop/utils/utils.py:156: in async_to_blocking; return loop.run_until_complete(task); usr/lib/python3.9/asyncio/base_events.py:634: in run_until_complete; self.run_forever(); usr/lib/python3.9/asyncio/base_events.py:601: in run_forever; self._run_once(); usr/lib/python3.9/asyncio/base_events.py:1869: in _run_once; event_list = self._selector.select(timeout); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . self = <selectors.EpollSelector object at 0x7fae890f2d30>; timeout = 15.402000000000001. def select(self, timeout=None):; if timeout is None:; timeout = -1; elif timeout <= 0:; timeout = 0; else:; # epoll_wait() has a resolution of 1 millisecond, round away; # from zero to wait *at",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13582:2261,test,test,2261,https://hail.is,https://github.com/hail-is/hail/issues/13582,1,['test'],['test']
Testability,"​manics</code></a> | <a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab_server+involves%3Awelcome+updated%3A2024-03-11..2024-04-08&amp;type=Issues""><code>@​welcome</code></a></p>; <!-- raw HTML omitted -->; <h2>2.25.4</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab_server/compare/v2.25.3...15e796699f04e06db9ed23a689d454feae36ffbd"">Full Changelog</a>)</p>; <h3>Maintenance and upkeep improvements</h3>; <ul>; <li>Use updated releaser workflows <a href=""https://redirect.github.com/jupyterlab/jupyterlab_server/pull/442"">#442</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Use json5 typings <a href=""https://redirect.github.com/jupyterlab/jupyterlab_server/pull/441"">#441</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Enforce pytest 7 <a href=""https://redirect.github.com/jupyterlab/jupyterlab_server/pull/439"">#439</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; <li>Fix test util typings <a href=""https://redirect.github.com/jupyterlab/jupyterlab_server/pull/437"">#437</a> (<a href=""https://github.com/blink1073""><code>@​blink1073</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab_server/graphs/contributors?from=2024-02-14&amp;to=2024-03-11&amp;type=c"">GitHub contributors page for this release</a>)</p>; <p><a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab_server+involves%3Ablink1073+updated%3A2024-02-14..2024-03-11&amp;type=Issues""><code>@​blink1073</code></a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/jupyterlab/jupyterlab_server/commit/cca5a50acfedfb45a843acf733ddbb410634451e""><code>cca5a50</code></a> Publish 2.26.0</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab_server/commit/2cc9672e751943f5c51af9d4174f0b4d986e74a0""><code>2cc9672</code></a> Ignore pageconfig file if JSON is zero-leng",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14483:5929,test,test,5929,https://hail.is,https://github.com/hail-is/hail/pull/14483,1,['test'],['test']
Testability,… test,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10887:2,test,test,2,https://hail.is,https://github.com/hail-is/hail/pull/10887,1,['test'],['test']
Testability,"…IntInsnNode, and add assert on allocLocal. cc @danking, we found where the problem was.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2566:22,assert,assert,22,https://hail.is,https://github.com/hail-is/hail/pull/2566,1,['assert'],['assert']
Testability,"…a2c778969c1422ba. The tabix line iterator works by building a list of virtual offsets from; the index that correspond to a requested interval. We recently; discovered an issue that would lead to a runtime exception if the; following conditions held:. * An offset pair ended exactly on a block boundary.; * The block boundary was exactly the start of a line. In a blocked file with virtual offsets, there are two ways to point to; the start of every block, (previous block start offset, previous block size) or; (current block start offset, 0). Because of the way curOff was calculated in TabixLineIterator, this would; lead to a situation where curOff was the (previous block start offset, previous block size); value, causing the jump to next chunk comparision `!TbiOrd.less64(curOff, offsets(i)._2)`; to fail when it should succeed, causing an extra line to be read, which; then makes the assertion check in the next iteration. Here we revert the improvements made earlier in; 3302850eb9d93c30793dc231a2c778969c1422ba which is where this logic error; was introduced.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9298:892,assert,assertion,892,https://hail.is,https://github.com/hail-is/hail/pull/9298,2,"['assert', 'log']","['assertion', 'logic']"
Testability,…ate the benchmark,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10717:9,benchmark,benchmark,9,https://hail.is,https://github.com/hail-is/hail/pull/10717,1,['benchmark'],['benchmark']
Testability,🐎 💨 . I tested this pretty heavily during my scale testing.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6801:8,test,tested,8,https://hail.is,https://github.com/hail-is/hail/pull/6801,2,['test'],"['tested', 'testing']"
Testability,👍 testing now,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6825#issuecomment-529527257:2,test,testing,2,https://hail.is,https://github.com/hail-is/hail/pull/6825#issuecomment-529527257,1,['test'],['testing']
Testability,🤔 . I will investigate whether the test coverage is sufficient this afternoon.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7557#issuecomment-555627357:35,test,test,35,https://hail.is,https://github.com/hail-is/hail/pull/7557#issuecomment-555627357,1,['test'],['test']
Usability," (i.e. proxy-side) TLS in a location block.; - `ssl-config.curlrc`: a curl configuration file.; A [PEM file](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) is a; base64 encoding standard for certificates and keys. Our certificates are; standard TLS [X.509 certificates](https://en.wikipedia.org/wiki/X.509). Our; private keys are RSA 4096 keys. The configuration file lists every principal in the system and the ""ssl-mode"" of; the system. The ""ssl-mode"" is inspired by MySQL's ssl-mode's and is one of (in; order from most to least secure): VERIFY_CA, REQUIRED, DISABLED. |mode | incoming connections must use TLS | clients verify hostnames on server cert | servers only accept trusted clients |; |---|---|---|---|; |VERIFY_CA|yes|yes|yes|; |REQUIRED|yes|no|no|; |DISABLED|no|no|no|. `create_certs.py` converts this global configuration file into a secret for each; principal. For NGINX principals, we generate the nginx conf in; `create_certs.py`. Unfortunately, I have no simple way to change the ports and; `ssl` status on nginx servers. For DISABLED, we send empty configuration; files. For REQUIRED, we load server certs and client certs, but we do not verify; (proxied) servers. I load the client certificates anyway so that I can smoke; test them before I require servers verify them. For VERIFY_CA, we load server; certs, load client certs, verify clients, and verify (proxied) servers. For Hail principals, we only generate a json configuration; file containing the ssl mode and some named paths. The new `hailtop/ssl.py`; module defines the mapping from configuration to Python's; [`SSLContext`](https://docs.python.org/3.6/library/ssl.html#ssl.SSLContext). There is also one ""curl"" principal: the admin-pod. REQUIRED and DISABLED are; mostly the same because required passes the `insecure` flag. As curl is; client-only, there is no notion of ""incoming connection"". ---. FAQ. Does this recreate certs on each deploy?. Yes. How do services speak to each other while a deploy is happen",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8513:4420,simpl,simple,4420,https://hail.is,https://github.com/hail-is/hail/pull/8513,1,['simpl'],['simple']
Usability," -- ExtractIntervalFilters : 6.413ms, total 235.357ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- Simplify : 4.736ms, total 240.359ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardLets : 38.152ms, total 278.793ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardRelationalLets : 3.185ms, total 282.285ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- PruneDeadFields : 25.086ms, total 307.692ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- FoldConstants : 1.938ms, total 310.139ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ExtractIntervalFilters : 13.601ms, total 324.665ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- Simplify : 4.231ms, total 329.178ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardLets : 27.172ms, total 356.625ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- ForwardRelationalLets : 6.605ms, total 363.564ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize -- PruneDeadFields : 29.964ms, total 394.795ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- Optimize : 371.542ms, total 395.164ms(); 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- LowerMatrixToTable -- Verify : 3.975ms, total 407.299ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken for CompileAndEvaluate -- LowerMatrixToTable -- LoweringTransformation : 77.664ms, total 485.244ms, tagged coverage 0.0; 2019-11-06 18:44:11 root: INFO: Time taken f",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7476:2324,Simpl,Simplify,2324,https://hail.is,https://github.com/hail-is/hail/pull/7476,1,['Simpl'],['Simplify']
Usability," -; since we have several workers on a node, and possibly a master as well, all needing to put code; into a file (or wait for someone else to populate the file) so that they can load it. Depending on ; precisely how Spark manages things (which I wouldn't want to depend on too much anyway). In fact it's essential that all the workers share the same DLL file, because otherwise they'd be; trying to load multiple DLL's defining the same symbols. That aspect of it could be handled by; putting the files into a per-process directory and using in-memory (std::mutex) synchronization.; But y'know, given that we have to write the DLL's out, it just seemed natural to let them persist; (and until debugging it on MacOS, I thought I could manage it with nothing but atomic file-create; and atomic-rename, but that didn't quite pan out). As for writing LLVM IR, it can definitely be done, because that's what Endeca/Oracle did. But there; was such a huge learning curve that only 3 people ever did it successfully (I wasn't one of them),; and debugging seemed very unpleasant and slow. [It was also a masterful achievement in ; job-security-through-obscurity, because no-one in management was going to mess with the; two people who wrote it - until the whole project got canned]. ... and in the time I was there, the Endeca/Oracle stuff wasn't distributed, which could be another; place where the generate-LLVM-IR needs some kind of extra glue for distributing compiled code,; whereas the conventional DLL's are trivial to ship around. Not claiming that part of it is difficult,; just that it didn't happen at Oracle until long after I left. In contrast, at PhysicsSpeed it was fairly smooth to implement nice abstractions (dense-join-table,; hash-join-table, tuple-with-order) as template classes which could be tested and debugged; in a standalone environment, and then have simpler codegen using those abstractions. At least,; that's a good way to get a lot of functionality with modest effort - and it ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3973#issuecomment-412742385:2215,learn,learning,2215,https://hail.is,https://github.com/hail-is/hail/pull/3973#issuecomment-412742385,2,['learn'],['learning']
Usability," :pr:<code>2493</code></li>; <li>Parsing of some invalid header characters is more robust. :pr:<code>2494</code></li>; <li>When starting the development server, a warning not to use it in a; production deployment is always shown. :issue:<code>2480</code></li>; <li><code>LocalProxy.__wrapped__</code> is always set to the wrapped object when; the proxy is unbound, fixing an issue in doctest that would cause it; to fail. :issue:<code>2485</code></li>; <li>Address one <code>ResourceWarning</code> related to the socket used by; <code>run_simple</code>. :issue:<code>2421</code></li>; </ul>; <h2>Version 2.2.1</h2>; <p>Released 2022-07-27</p>; <ul>; <li>Fix router so that <code>/path/</code> will match a rule <code>/path</code> if strict; slashes mode is disabled for the rule. :issue:<code>2467</code></li>; <li>Fix router so that partial part matches are not allowed; i.e. <code>/2df</code> does not match <code>/&lt;int&gt;</code>. :pr:<code>2470</code></li>; <li>Fix router static part weighting, so that simpler routes are matched; before more complex ones. :issue:<code>2471</code></li>; <li>Restore <code>ValidationError</code> to be importable from; <code>werkzeug.routing</code>. :issue:<code>2465</code></li>; </ul>; <h2>Version 2.2.0</h2>; <p>Released 2022-07-23</p>; <ul>; <li>Deprecated <code>get_script_name</code>, <code>get_query_string</code>,; <code>peek_path_info</code>, <code>pop_path_info</code>, and; <code>extract_path_info</code>. :pr:<code>2461</code></li>; <li>Remove previously deprecated code. :pr:<code>2461</code></li>; <li>Add MarkupSafe as a dependency and use it to escape values when; rendering HTML. :issue:<code>2419</code></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/werkzeug/commit/15fcb87d36f4ed45b127692d2d739266b918503c""><code>15fcb87</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/wer",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12119:3730,simpl,simpler,3730,https://hail.is,https://github.com/hail-is/hail/pull/12119,1,['simpl'],['simpler']
Usability," <pre><code>; Released on Dec 5, 2021; <p>This is the first non-alpha release of mistune v2.</p>; <p>Version 2.0.0rc1; </code></pre></p>; <p>Released on Feb 16, 2021</p>; <p>Version 2.0.0a6</p>; <pre><code>; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/lepture/mistune/commit/3f422f1e84edae0f39756c45be453ecde534b755""><code>3f422f1</code></a> Version bump 2.0.3</li>; <li><a href=""https://github.com/lepture/mistune/commit/a6d43215132fe4f3d93f8d7e90ba83b16a0838b2""><code>a6d4321</code></a> Fix asteris emphasis regex CVE-2022-34749</li>; <li><a href=""https://github.com/lepture/mistune/commit/5638e460459cb59ceb20e4ce4716c802d4d73c53""><code>5638e46</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/lepture/mistune/issues/307"">#307</a> from jieter/patch-1</li>; <li><a href=""https://github.com/lepture/mistune/commit/0eba47196a81453bafe1f2492748a87475063dff""><code>0eba471</code></a> Fix typo in guide.rst</li>; <li><a href=""https://github.com/lepture/mistune/commit/61e9337884e20f9f8fdc0b7788d319afdd259729""><code>61e9337</code></a> Fix table plugin</li>; <li><a href=""https://github.com/lepture/mistune/commit/76dec68c4514c2612ef9263b49c6ec7f4d77bd14""><code>76dec68</code></a> Add documentation for renderer heading when TOC enabled</li>; <li><a href=""https://github.com/lepture/mistune/commit/799cd118cc5e664b72e98410ce1b68645f1a38c0""><code>799cd11</code></a> Version bump 2.0.2</li>; <li><a href=""https://github.com/lepture/mistune/commit/babb0cfa57a983ead615286a2b7c8f6885c46721""><code>babb0cf</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/lepture/mistune/issues/295"">#295</a> from dairiki/bug.escape_url</li>; <li><a href=""https://github.com/lepture/mistune/commit/fc2cd53d7698e432ab5b250ffac53458263a49e2""><code>fc2cd53</code></a> Make mistune.util.escape_url less aggressive</li>; <li><a href=""https://gith",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12064:2689,guid,guide,2689,https://hail.is,https://github.com/hail-is/hail/pull/12064,1,['guid'],['guide']
Usability," Fix temporary directory hijacking or temporary directory information disclosure (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1621"">#1621</a>); 9fd0ecf21 Disable codecov until we can fix the uploader (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1622"">#1622</a>); 347c0ac57 Fix EdgeReadIterator (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1616"">#1616</a>); d15a5bacb Added ULTIMA and ELEMENT as valid value for RG-PL according to SAM spec. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1619"">#1619</a>)</p>; <h2>3.0.0</h2>; <p>Htsjdk 3.0.0: Revenge of the Simple Allele</p>; <p>This is the first htsjdk with a major version increase in a long time. We bumped it to indicate there are some breaking changes that will potentially require downstream code changes. Notably, <code>Allele</code> became an interface instead of a concrete class. <code>SimpleAllele</code> may be used as a replacement if you have classes which previously subclassed allele.</p>; <p>New Plugin Infrastructure:; 6a60de7c2 Move API marker annotations into new annotation package. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1558"">#1558</a>); 7ac95d5f7 Plugin framework and interfaces for versioned file format codecs (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1525"">#1525</a>); d40fe5412 Beta implementation of Bundles. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1546"">#1546</a>)</p>; <p>CRAM; 489c4192d Support CRAM reference regions. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1605"">#1605</a>); 22aec6782 Fix decoding of CRAM Scores read feature during normalization. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1592"">#1592</a>); 6507249a4 Make the CRAM MD5 failure message more user friendly. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1607"">#160",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12229:1489,Simpl,SimpleAllele,1489,https://hail.is,https://github.com/hail-is/hail/pull/12229,2,['Simpl'],['SimpleAllele']
Usability," For instance, `c`'s environment might add a new bindings (e.g. in the body of a `StreamMap`), or it might drop all bindings, isolating the child, so that it cannot refer to anything bound outside of `x` (e.g. all relational nodes). The binding structure is complicated by the separation of the environment into ""eval"", ""agg"", ""scan"", and ""relational"" scopes. The child `c`'s environment might add new bindings in any of these scopes, and it might modify the parent's environment in other ways, like replacing the ""eval"" scope with the ""agg"" scope. In `Binds.scala`, the encoding of this relationship between parent's and child's environments was split across many methods, separately encoding bindings added to each of the scopes, and a prior modification to the parent scope. This made it difficult to understand the binding behavior of any particular node. And for nodes with more complicated binding behavior, these separate encodings became confusingly entangled. In this PR, `Binds.scala` is rewritten so that the binding behavior of a node is specified in a single place. Instead of computing a list of new bindings, it simply takes the parent's environment and returns the child's. Some use cases do require knowing what new bindings are added by a node in a child's environment. To support this, I made the `BindingEnvironment` interface a trait, and added another implementor `SegregatedBindingEnv`, which wraps two separate `BindingEnvironment`s, and puts all new bindings into the second. This satisfies the invariant that for any function `f(GenericBindingEnv): GenericBindingEnv` which modifies an environment using only the `GenericBindingEnv` interface, and any `env: BindingEnv[T]`,; ```; f(env) == f(SegregatedBindingEnv(env)).unified; ```; i.e. the segregation doesn't have any effect, other than keeping track of which bindings are new. Now that all binding structure for a node is encoded in one place, a future change could move this encoding to live in the node class directly.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14404:1505,simpl,simply,1505,https://hail.is,https://github.com/hail-is/hail/pull/14404,1,['simpl'],['simply']
Usability," RV. 4. The hash function on (options, source) is now beefed up to cope with having only a; few distinct values of options; and is modified with the output of ""$(CXX) --version"",; so that when you upgrade your compiler, you won't get hits on modules compiled with the old; compiler. 5. build.gradle has a new target ""nativeLibPrebuilt"", for updating the prebuilt/lib/linux-x86-64; or prebuilt/lib/darwin. 6. The committed prebuilt libraries are built thus:. darwin - On my MacOS laptop, with the default (clang-based) compiler, -march=sandybridge; From my reading, I believe this should be compatible withall MacBook Pro's; released since 2011, and all versions of MacOS since 10.9 (the first to use; libc++ rather than libstdc++ as the default C++ library) - we're now at 10.13,; with 10.14 arriving some time in the fall. linux-x86-64 - Built on my home desktop running Ubuntu-16.04 LTS, and g++-5.0.4, with; -fabi-version=9. In theory this should work with all systems based on g++5.x and; later. I made some effort to move std::string out of the interfaces between prebuilt; and dynamic code, which gives it some chance of working on systems based on; g++-4.x, but haven't tested that. I'm planning to fire up VM's either in cloud or under VirtualBox, to test this against Ubuntu-14.04,; Ubuntu-18.04, and the latest stable RHEL, which should cover most of the bases. In the interest of getting this committed, I have not made changes relating to logging and; error messages. The DLL's are still in the jar, and I think it has to stay that way because; all nodes need to see libhail.so. The header files are also in the jar, and have to be; unpacked in a convoluted way, and that could probably be simplified if/when we change; the approach to packaging. Once this goes in, I can follow it with a PR which adds the NativePackDecoder in RowStore.scala,; controlled by whether environment variable ""HAIL_ENABLE_CPP_CODEGEN"" is defined; (so defaulting to using the JVM bytecode CompiledPackDecoder).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3973#issuecomment-413997863:2307,simpl,simplified,2307,https://hail.is,https://github.com/hail-is/hail/pull/3973#issuecomment-413997863,2,['simpl'],['simplified']
Usability," There [was a; PR](kubernetes/kubernetes#61231) to allow httpGet probes; to send the kubelet certificate, but it was closed because, apparently, the; [httpGet probes can be targeted at arbitrary IP; addresses](kubernetes/kubernetes#61231 (review)) (what; the hell?), ergo Confused Deputy. ### Future Work. - Require TLS 1.3 everywhere.; - Comply with Mozilla's ""Modern"" recommendations.; - [Incoming Trust](#incoming-trust).; - Refresh certificates after deploying new ones. ### Footnotes. [1] TLS: Transport Layer Security. Preceded by Secure Sockets Layer (SSL) which; is not obsolete and insecure. After SSL version 3, a new version of SSL was; proposed in RFC 2246. This new version was backwards-incompatible and was; thus given a new name: Transport Layer Security. In common discussion, SSL; and TLS are used interchangeable. Indeed, the python TLS library is called; `ssl`. [2] Forward secrecy is a property of an encryption system. Forward secrecy means; a message cannot be decrypted in the future by an adversary who learned one; of the private keys. For example, imagine you are sending sensitive messages; to another individual. If that individual is later coerced into revealing; their secret key, forward secrecy would prevent the coercer from reading; your messages. Forward secrecy is achieved by negotiating a shared private; key between the two parties that is only used for a ""session"" and then; discarded. If the session key is securely discarded and neither key can; recreate it without cooperation from the other key, then *one* leaked key is; insufficient to reveal the messages. ---. Things for you to verify:; - does every service load *its own unqiue* ssl-config secret?; - does every service use an SSL context for serving?; - does everyone who makes http requests to internal services use an SSL client; session?; - do all TLS-secured nginx instances include their http.conf in the `http`; section and the `proxy.conf` file in any proxying sections?; - Do the SSLContext's",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8561:12087,learn,learned,12087,https://hail.is,https://github.com/hail-is/hail/pull/8561,1,['learn'],['learned']
Usability," `advance()` turns the page, `isValid` asks if the page you are on is non-empty, and `value` gives you the value on the current page (which is an error if the page is empty). `StagingIterator` is a subtype of `FlipbookIterator` which adds a bit of state to each page, together with the methods `consume()` and `stage()`. The bit of state on each page tracks whether the value has been ""consumed"" yet. `consume()` can only be called on a valid page which has not yet been consumed, and marks it as consumed. Note that `consume()` does not actually turn the page, so that the value just consumed is kept alive for the consumer to use. `stage()` brings the iterator forward to the next state in which we are on an unconsumed page: if the current page has been consumed, it flips to the next page, but if the current page has not been consumed it does nothing. My goal with the `StagingIterator` interface was to find something simple—to make it easier to write iterator code that is easily understandable and obviously correct and bug-free—and which covers most of the low-level (and bug-prone) ""bookkeeping"" I could find in current iterator code. The `StagingIterator` interface is also needed to implement the Scala `Iterator` methods, and for that reason I made it so that every `FlipbookIterator` is really a `StagingIterator` with a restricted interface, so that `FlipbookIterator` is able to subtype (`BufferedIterator`, and therefore) `Iterator`. The tiny abstract class `StateMachine` can be thought of as a ""naked"" `FlipbookIterator`, with only the core interface methods and without any runtime checking. It is intended to be used only for defining a new `FlipbookIterator` or `StagingIterator`, through the factory methods on their respective companion objects which take a `StateMachine`. I implemented `fliterWhere`, `map`, and `flatMap` on `FlipbookIterator`, allowing the use of for–comprehensions, and on top of that I defined all the varieties of join. Some of the join methods take `Or",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3016:2556,simpl,simple,2556,https://hail.is,https://github.com/hail-is/hail/pull/3016,1,['simpl'],['simple']
Usability," a near drop-in for Flask, and is the most popular afaik library built around asyncio. It has 2x as many stars as aiohttp, slightly more forks. The original motivation for considering aiohttp: ; https://magic.io/blog/uvloop-blazing-fast-python-networking. In short, one of the creators of asyncio discusses uvloop performance relative to other libraries. They key is:. ""However, the performance bottleneck in aiohttp turned out to be its HTTP parser, which is so slow, that it matters very little how fast the underlying I/O library is."". <img width=""1001"" alt=""screen shot 2019-02-06 at 7 29 00 pm"" src=""https://user-images.githubusercontent.com/5543229/52382977-77a62d00-2a45-11e9-8c04-b8142586eb5c.png"">. <img width=""936"" alt=""screen shot 2019-02-06 at 7 29 19 pm"" src=""https://user-images.githubusercontent.com/5543229/52382985-812f9500-2a45-11e9-9155-97c00ef9784b.png"">. As an aside I've spent some time reading about this over the last ~month, and besides relatively consistent messaging about the messiness of Python's ecosystem, performance and user experience are deeply important to me, so when I read things like:. ""I don’t think performance matter. I think asgi does not matter in 2018 in general. Usability and complexity matters. Python is not very good choice for high performance system in any case...For me high performance python is a fantasy, but i don’t do aiohttp/python anymore. In the end it is up to @asvetlov"". from one of the creators of aiohttp, I'm not encouraged about the long-term health of the project. https://github.com/aio-libs/aiohttp/issues/2902. In the second branch related to this pull request, linked above, I chose Starlette, and it is a thin abstraction, nearly identical performance, over Uvicorn + httptools, which were both written by Yury Selivanov, the asyncio person I mention above. Starlette and Uvicorn are currently the fastest options, (Sanic isn't tested), by a relatively large margin, on Techempower's benchmarks. If there is a reference stand",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030:1474,user experience,user experience,1474,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461259030,2,['user experience'],['user experience']
Usability," a once-over @mkveerapen in particular, and @danking, @cseed, @tpoterba. Future work will provide a multi-column, easier to read version of About, and a linking section with a beautiful code-snippet-containing introduction to Hail (demonstrating file import). I leave these as future tasks, because enough changes are present in this PR. Summary of changes:; * Refined homepage styles, ensured navbar matches to pixel between docs and hail.is root (surprisingly difficult); * Improved mobile styles, especially mobile nav menu (much smoother animation, larger, easier to click on links); * Optimized icon sizes (50KB -> 3.3KB); * Removed all use of bootstrap on hail.is/*.html pages (bootstrap remains on docs, future pr).; * Removed index.md contents. The markdown format is pretty limited. To have a richly-marked up site with consistent styling, the syntax it provides is not enough. The solution is either to add html to index.md, or just write html in a the index.xslt file. I chose the latter, because it's simpler. Future reorganization should simplify this and docs further, though I think I still recommend NextJS and the build system that provides.; * Added threeR115.min.js. This is regrettably large, but doesn't impact page rendering performance in any meaningful way, because it is loaded after all html content (and is cached after the first visit). Future work can go to webgl directly, potentially. There is also ongoing work by the ThreeJS maintainers to allow tree-shaking and smaller builds.; * Added heavily modified fork of VantaJS. Because we are not using something like NextJS, there is no package manager to rely on, so I just checked the file in manually (I have this in a separate repo, we can use that if preferred). License is in line with a note about modifications. Vanta performs very, very poorly (order of 40% CPU usage, old/slow ways of observing whether animated element is in view, unnecessary object generation, etc), this does not, removes a bunch of totally u",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8634:1093,simpl,simpler,1093,https://hail.is,https://github.com/hail-is/hail/pull/8634,1,['simpl'],['simpler']
Usability," as shown here from Query Insights:; ![Screenshot 2024-04-11 at 10 31 17 AM](https://github.com/hail-is/hail/assets/24440116/d807b383-7825-4ff5-ad04-6869f0402dd0). 2. The thick edge on the instances scan indicates that the where condition for instances is not using an index. We can verify this by explaining the query against the DB:; ```; > kssh admin-pod; > mysql; mysql> use batch;; mysql> EXPLAIN SELECT attempts.*; -> FROM attempts; -> INNER JOIN jobs ON attempts.batch_id = jobs.batch_id AND attempts.job_id = jobs.job_id; -> LEFT JOIN instances ON attempts.instance_name = instances.name; -> WHERE attempts.start_time IS NOT NULL; -> AND attempts.end_time IS NULL; -> AND ((jobs.state != 'Running' AND jobs.state != 'Creating') OR jobs.attempt_id != attempts.attempt_id); -> AND instances.`state` = 'active'; -> ORDER BY attempts.start_time ASC; -> LIMIT 300\G;. *************************** 1. row ***************************; id: 1; select_type: SIMPLE; table: instances; partitions: NULL; type: ALL; possible_keys: PRIMARY; key: NULL; key_len: NULL; ref: NULL; rows: 1150201; filtered: 10.00; Extra: Using where; Using temporary; Using filesort; *************************** 2. row ***************************; id: 1; select_type: SIMPLE; table: attempts; partitions: NULL; type: ref; possible_keys: PRIMARY,attempts_instance_name; key: attempts_instance_name; key_len: 303; ref: batch.instances.name; rows: 91; filtered: 9.00; Extra: Using where; *************************** 3. row ***************************; id: 1; select_type: SIMPLE; table: jobs; partitions: NULL; type: eq_ref; possible_keys: PRIMARY,jobs_batch_id_state_always_run_cancelled,jobs_batch_id_state_always_run_inst_coll_cancelled,jobs_batch_id_update_id,jobs_batch_id_always_run_n_regions_regions_bits_rep_job_id,jobs_batch_id_ic_state_ar_n_regions_bits_rep_job_id,jobs_batch_id_job_group_id,jobs_batch_id_ic_state_ar_n_regions_bits_rep_job_group_id; key: PRIMARY; key_len: 12; ref: batch.attempts.batch_id,batch.attempts",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14460:1950,SIMPL,SIMPLE,1950,https://hail.is,https://github.com/hail-is/hail/issues/14460,1,['SIMPL'],['SIMPLE']
Usability," between them. The caller owns the widget, and the lifetime of `bar` is nested inside that of its caller, so lifetime management isn't an issue.; * If `bar` takes a `Widget` and needs to take ownership, it should take its argument as a `unique_ptr<Widget>`. This serves as documentation that the function is taking over responsibility for deleting the Widget, in a way enforced by the compiler.; * A `unique_ptr<Widget>*` or `unique_ptr<Widget>&` is an in-out parameter, where the function needs to be able to point the pointer somewhere else.; * A const pointer or reference to a unique_ptr should never be used. Just pass a raw pointer or reference. Essentially the same rubric should be used for shared_ptr, replacing ""take ownership"" with ""share ownership"". If a function is simply using a value and isn't concerned with its lifetime management, it should be taking a raw pointer or reference, not a shared_ptr. It should be completely agnostic what method the caller is using to manage the lifetime of the object. Herb Sutter gives his typical thorough analysis of this question [here](https://herbsutter.com/2013/06/05/gotw-91-solution-smart-pointer-parameters/). > I would be fine with that extra learning curve and complexity if unique_ptr solved a difficult; problem. But - by definition! - it doesn't. It only works for the easy case where you have one; pointer to each object. The invariant that unique_ptr is designed to keep isn't that there is only one pointer to each object. There can be any number of aliases, changing over time, but at any time exactly one must be a unique_ptr, which documents which alias is the ""owner"". The design of and idioms around unique_ptr ensure that all non-owning aliases have lifetimes which are nested inside the lifetime of the owning pointer, and that ownership can be passed around unambiguously. I think the problem that they solve is in large part documentation of API, and the rest is letting the type system help enforce an essential invariant.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3718#issuecomment-396669638:2790,learn,learning,2790,https://hail.is,https://github.com/hail-is/hail/pull/3718#issuecomment-396669638,2,['learn'],['learning']
Usability," can't assign types to nodes like `Ref` during parsing, which means we can't ask for the type of any node during parsing, and by extension we can't ask for types of children in IR node constructors. Instead, all typechecking logic is moved to the `TypeCheck` pass. Some benefits of this change:; * The parser is simpler, as it doesn't have to maintain a typing environment.; * Binds.scala is now the single source of truth on the binding structure of the IR.; * Instead of typechecking being split in an ad-hoc way between IR constructors and the `TypeCheck` pass, all typechecking and type error reporting logic is in one place.; * The parser parses a context-free grammar, no more and no less. If the input is gramatically correct, the parser succeeds.; * We can round trip IR with type errors through the text representation. For instance, if we log an IR that fails TypeCheck, we can copy the IR from the log, parse it, then debug. This change was motivated by my work in progress to convert the parser to use the SSA grammar, which this should greatly simplify. I chose to make the type annotation pass after parsing mutate the IR in place (with the unfortunate exception of `Apply`, which can change into an `ApplyIR` or `ApplySpecial`. Do these really need to be separate nodes?). The type of a `Ref` node was already mutable to allow this sort of deferred annotation, and I've had to make a few other things mutable as well. Alternatively we could rebuild the entire IR to include type annotations, but I think the mutation is sufficiently well localized, and this is a common compiler pattern. This touches a lot of lines, but the high level changes are:; * Remove the `refMap` from the `IRParserEnvironment`, and remove all code that modifies the typing environment from the parser. Nodes like `Ref` that need a type from the environment get types set to `null`, to be filled in after parsing.; * Add `annotateTypes` pass to fill in type annotations from the environment. This is currently w",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13990:1568,simpl,simplify,1568,https://hail.is,https://github.com/hail-is/hail/pull/13990,1,['simpl'],['simplify']
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI1ZDhmZDhmZC1mZGUxLTRiYmMtYWMzMi0xOTE1NmY0ZDFjZjIiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjVkOGZkOGZkLWZkZTEtNGJiYy1hYzMyLTE5MTU2ZjRkMWNmMiJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""5d8fd8fd-fde1-4bbc-ac32-19156f4d1cf2"",""prPublicId"":""5d8fd8fd-fde1-4bbc-ac32-19156f4d1cf2"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""7fad328c-8d01-4768-8813-73d6c644e2d4"",""projectUrl"":""https://app.snyk.io/org/danking/project/7fad328c-8d01-4768-8813-73d6c644e2d4?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13112:3132,Learn,Learn,3132,https://hail.is,https://github.com/hail-is/hail/pull/13112,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI2YzU3NmY1Yi1lNGM5LTQ4ZjctYmYxNy04YjEzOTIxODlmZDQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjZjNTc2ZjViLWU0YzktNDhmNy1iZjE3LThiMTM5MjE4OWZkNCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""6c576f5b-e4c9-48f7-bf17-8b1392189fd4"",""prPublicId"":""6c576f5b-e4c9-48f7-bf17-8b1392189fd4"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13097:3055,Learn,Learn,3055,https://hail.is,https://github.com/hail-is/hail/pull/13097,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI3ZGVlZGFlMy1mZmE3LTQxYmUtOGY4MS1lNmYwZTA5YTczOTMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjdkZWVkYWUzLWZmYTctNDFiZS04ZjgxLWU2ZjBlMDlhNzM5MyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""7deedae3-ffa7-41be-8f81-e6f0e09a7393"",""prPublicId"":""7deedae3-ffa7-41be-8f81-e6f0e09a7393"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.16"",""to"":""1.26.17""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-5926907""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[581],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13770:3147,Learn,Learn,3147,https://hail.is,https://github.com/hail-is/hail/pull/13770,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIwMzdiOGRmZS1hZDA4LTRmZjUtYTFkOC1hNGM4Nzg2N2NkYjAiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjAzN2I4ZGZlLWFkMDgtNGZmNS1hMWQ4LWE0Yzg3ODY3Y2RiMCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""037b8dfe-ad08-4ff5-a1d8-a4c87867cdb0"",""prPublicId"":""037b8dfe-ad08-4ff5-a1d8-a4c87867cdb0"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13159:3147,Learn,Learn,3147,https://hail.is,https://github.com/hail-is/hail/pull/13159,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyNWE2ZGYzMi1kYmEzLTQzOTctYmIyNC0zNjdlMzhmZWQ3ZmUiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjI1YTZkZjMyLWRiYTMtNDM5Ny1iYjI0LTM2N2UzOGZlZDdmZSJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""25a6df32-dba3-4397-bb24-367e38fed7fe"",""prPublicId"":""25a6df32-dba3-4397-bb24-367e38fed7fe"",""dependencies"":[{""name"":""urllib3"",""from"":""1.26.17"",""to"":""1.26.18""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-URLLIB3-6002459""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[496],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13848:3147,Learn,Learn,3147,https://hail.is,https://github.com/hail-is/hail/pull/13848,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzM2VkMzM4Ny0zZTVmLTRkZDgtYjIxYy1iYzIyNzk4ODViZjMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjMzZWQzMzg3LTNlNWYtNGRkOC1iMjFjLWJjMjI3OTg4NWJmMyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""33ed3387-3e5f-4dd8-b21c-bc2279885bf3"",""prPublicId"":""33ed3387-3e5f-4dd8-b21c-bc2279885bf3"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""b72ce54d-5de3-48e5-a1d4-6f8967681a12"",""projectUrl"":""https://app.snyk.io/org/danking/project/b72ce54d-5de3-48e5-a1d4-6f8967681a12?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13107:3040,Learn,Learn,3040,https://hail.is,https://github.com/hail-is/hail/pull/13107,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIzYWEwNDk2OC02NDIxLTRmODktYTBjYy03MjE4MzExNDNiZGQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjNhYTA0OTY4LTY0MjEtNGY4OS1hMGNjLTcyMTgzMTE0M2JkZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""3aa04968-6421-4f89-a0cc-721831143bdd"",""prPublicId"":""3aa04968-6421-4f89-a0cc-721831143bdd"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13100:3143,Learn,Learn,3143,https://hail.is,https://github.com/hail-is/hail/pull/13100,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiNzM2NzI0Yi1hY2RiLTRiOTUtYWQwMy1hYWI3MjkyZGNlYzQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI3MzY3MjRiLWFjZGItNGI5NS1hZDAzLWFhYjcyOTJkY2VjNCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b736724b-acdb-4b95-ad03-aab7292dcec4"",""prPublicId"":""b736724b-acdb-4b95-ad03-aab7292dcec4"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13116:3047,Learn,Learn,3047,https://hail.is,https://github.com/hail-is/hail/pull/13116,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlNDQxZTBmNS1jZDQ4LTQzZDUtYTdkMy1kMTM4YzQ2ZTc2NTgiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImU0NDFlMGY1LWNkNDgtNDNkNS1hN2QzLWQxMzhjNDZlNzY1OCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""e441e0f5-cd48-43d5-a7d3-d138c46e7658"",""prPublicId"":""e441e0f5-cd48-43d5-a7d3-d138c46e7658"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13158:3139,Learn,Learn,3139,https://hail.is,https://github.com/hail-is/hail/pull/13158,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJlZjQxMWYxOC1hM2JiLTQ1YzgtODFjOS1hNmNhNjI4MWI1ZjMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImVmNDExZjE4LWEzYmItNDVjOC04MWM5LWE2Y2E2MjgxYjVmMyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""ef411f18-a3bb-45c8-81c9-a6ca6281b5f3"",""prPublicId"":""ef411f18-a3bb-45c8-81c9-a6ca6281b5f3"",""dependencies"":[{""name"":""requests"",""from"":""2.28.2"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[591],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13108:3130,Learn,Learn,3130,https://hail.is,https://github.com/hail-is/hail/pull/13108,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability," directly to your last comment. > We have a difference of opinion about the risks. I think I'd say we have a difference of opinion about the importance of the risks. I'm well aware of the potential pitfalls you list there, and more. I just don't think they're a very big deal. I'm also aware of a shit ton of things that are vastly more important than what we're arguing about and we're not talking about those. Let's talk about goals for the project and the landscape of technical risk in our next 1:1. This is assuming we're controlling the compiler in the packaged distribution and on the cloud, we're testing representative user pipelines against gcc and clang, so the scenario you're imagining is either a Hail developer or someone who is sophisticated enough to maintain a Spark cluster (1000x worse configuration nonsense than we're arguing about here, I promise) who is either (1) running old or obscure compiler, or (2) ran into a bug that had test coverage. You're worrying about (1)? What's the worst that will happen, seriously? We'll get a bug report? Let's make sure the compiler version is in the log. > A couple of years ago; > g++ take 40-60 seconds to compile; > fairly heavily templated cod. Can we avoid heavily (or even moderately) templated code? I'm already nervous long-term about the latency of the C++ compiler overhead and if I'm being honest would prefer to generate LLVM IR directly into memory. We should ship whatever compiler is best on the cloud and in the download package. That already covers a vast majority of our users. If clang is the clear winner, we can make that clear in the documentation and maybe warn about gcc it on startup. > But that becomes a problem in itself if we want the shipped compiler to work on a variety of OS'es. Variety isn't a requirement. We don't need to make this hard for ourselves. Let's have two versions: OSX and a recent linux. If we're getting a lot of requests/questions/issues about older versions of linux, we can reevaluate.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3973#issuecomment-410134414:1599,clear,clear,1599,https://hail.is,https://github.com/hail-is/hail/pull/3973#issuecomment-410134414,4,['clear'],['clear']
Usability," emit three kinds of output to a byte array buffer:; - byte - simply add a byte to the result, first padding an incomplete byte if necessary; - bit - add a bit to the result, possibly leaving an incomplete byte. We must know statically how many bits are used in the byte.; - pad - add `0`s to pad the last incomplete byte. This is safe (prefix-free) because the number of used bits is a (statically known) constant. We use this to ensure the number of used bits is known statically.; 	; Types:; - missingness; - treat as a type constructor `optional<T>`, i.e. base types don't encode missingness. Emits a single bit in the encoding. Can invert this bit to control whether missing values come first or last in the ordering. If missing, nothing is emitted after.; - sort-order; - treat reversing the default ordering as a type constructor `reverse<T>`; - simply inverts the encoding bitwise; - primitive types; - same as in datafusion, encoding has same size as original type; - signed integers - flip the sign bit; - floating point numbers - if sign bit is set, invert all bits, otherwise only flip the sign bit; - arrays; - before each element and after last element, emit continuation bit (0 if no more elements); - pad before each element. This prevents a variable number of missing bits packing into a byte; - strings and byte-arrays; - simply use null-terminated strings (being careful to do this in a unicode-safe way); - structs; - simply concatenate element encodings. safe because codes are prefix-free; - key structs; - support variable length ""interval endpoints""; - e.g. for a key type `struct<t1, t2>`, the interval `[{a}, {a, b})` contains all keys with first field `a` and second field less than `b`. We break it into two ""interval endpoints"", `({a}, -1)` and `({a, b}, -1)`, which consist of a struct value which is a prefix of the key struct type, and a ""sign"". In this case, both endpoints ""lean left"".; - needed for working with partitioners at runtime; - like an array with fixed bu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14396:1631,simpl,simply,1631,https://hail.is,https://github.com/hail-is/hail/issues/14396,1,['simpl'],['simply']
Usability," happening. I believe Transaction 1 to be [here](https://github.com/hail-is/hail/blob/40d8882470af71f2d08dd1aa6b723357ca8a1245/batch/sql/estimated-current.sql#L1186-L1188) in MJC, and Transaction 2 to be [here](https://github.com/hail-is/hail/blob/40d8882470af71f2d08dd1aa6b723357ca8a1245/batch/sql/estimated-current.sql#L449-L453) in the jobs_after_update trigger. Looking at the second transaction in context now, it looks like that is probably another MJC transaction toward the end of its run after it updated the jobs table. I think it would make sense then that T2 would still hold the lock for `instances_free_cores_mcpu` but I'm not sure where the contention for `batch_inst_coll_cancellable_resources` is coming from, as I don't see how T1 could be holding any form of lock on it. Either way it seems like how we use these tables is similarly a mess. ```; *** (1) TRANSACTION:; TRANSACTION 644409381, ACTIVE 0 sec starting index read; mysql tables in use 1, locked 1; LOCK WAIT 39 lock struct(s), heap size 3520, 50 row lock(s), undo log entries 28; MySQL thread id 1941960, OS thread handle 140297909716736, query id 1869168359 10.32.3.8 dgoldste updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTION 644409370, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 39 lock struct(s), heap size 35",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:1141,undo,undo,1141,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116,2,['undo'],['undo']
Usability," highlighting (we just needed to import pygments.css).; - Search works again.; - There are now only two root HTML templates: `site/templates/base.html` and; `web_common/web_common/templates/layout.html`. I cannot unify these further; because our services and our main websites actually differ significantly.; - The search/nav bar is now present in the HTML, no JS nonsense to; asynchronously load it into place after HTML rendering.; - Site now has a `make watch` which watches for changes and automatically; re-renders the HTML.; - Site now has a few make rules that facilitate experimenting with how the docs; are displayed within the context of the current development version of site's; CSS & HTML.; - XSLT is now only used by the C++ tests. Smaller things:. - Removed bootstrap dependencies. Did we ever actually use these?; - Removed ""clipboard.js"" dependency. Also not clear from where this came.; - Removed use of the `subtitle` tag, which isn't actually an HTML tag?. Future work:. - Simplify our CSS. It's not possible to logically reason about our CSS. And it; interacts in bad ways with the latent RTD themes. I want a unified Hail visual; theme.; - Clean up the search-related JavaScript in nav-bottom.html and; search.html. These both seem too complicated to just make search work. ---. The thrust of this PR is to restructure Hail's website and documentation to; entirely rely on Jinja2 templates. Previously, we used a mix of Jinja2, XSLT,; and in-browser JavaScript DOM manipulation to piece together a web page. Now, all of Hail's non-service website derives from; `site/templates/base.html`. It is a Jinja2 template with four blocks: title,; meta_description, head, and content. It ensures that:; - Hail's CSS is loaded,; - the Hail icon is set,; - the fonts are loaded,; - the source code highlighter is loaded (prism.js, only used outside the docs); - the nav bar is present and configured.; The nav bar is somewhat complicated. There are two pieces. `nav-top.html`; contains the",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9597:1044,Simpl,Simplify,1044,https://hail.is,https://github.com/hail-is/hail/pull/9597,1,['Simpl'],['Simplify']
Usability," href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab+involves%3Awelcome+updated%3A2024-01-19..2024-01-30&amp;type=Issues""><code>@​welcome</code></a></p>; <h2>v4.0.11</h2>; <h2>4.0.11</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.10...0708330843fd087134a239d2ad6005b1d543e246"">Full Changelog</a>)</p>; <h3>Security fixes</h3>; <ul>; <li>Potential authentication and CSRF tokens leak in JupyterLab (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947"">GHSA-44cc-43rp-5947</a>)</li>; <li>SXSS in Markdown Preview (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-4m77-cmpx-vjc4"">GHSA-4m77-cmpx-vjc4</a>)</li>; </ul>; <h3>Bugs fixed</h3>; <ul>; <li>Fixes focus indicator on input checkbox for Firefox <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15612"">#15612</a> (<a href=""https://github.com/alden-ilao""><code>@​alden-ilao</code></a>)</li>; </ul>; <h3>Documentation improvements</h3>; <ul>; <li>Fix link to yarn docs in extension migration guide <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15640"">#15640</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/graphs/contributors?from=2023-12-29&amp;to=2024-01-19&amp;type=c"">GitHub contributors page for this release</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/jupyterlab/jupyterlab/blob/@jupyterlab/lsp@4.0.12/CHANGELOG.md"">jupyterlab's changelog</a>.</em></p>; <blockquote>; <h2>4.0.12</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.11...69079ec413cbe6d173f0a667c15802b76423ece5"">Full Changelog</a>)</p>; <h3>Bugs fixed</h3>; <ul>; <li>Fix jupyterlab downgrade issue on extension installation <a href=""https://redirect.git",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14218:5261,guid,guide,5261,https://hail.is,https://github.com/hail-is/hail/pull/14218,1,['guid'],['guide']
Usability," is the culmination of <code>6</code> months of hard work. It contains; many new features, numerous bug-fixes, improved test coverage and better; documentation. There have been a number of deprecations and API changes; in this release, which are documented below. All users are encouraged to; upgrade to this release, as there are a large number of bug-fixes and; optimizations. Before upgrading, we recommend that users check that; their own code does not use deprecated SciPy functionality (to do so,; run your code with <code>python -Wd</code> and check for <code>DeprecationWarning</code> s).; Our development attention will now shift to bug-fix releases on the; 1.8.x branch, and on adding new features on the master branch.</p>; <p>This release requires Python <code>3.8+</code> and <code>NumPy 1.17.3</code> or greater.</p>; <p>For running on PyPy, PyPy3 <code>6.0+</code> is required.</p>; <h1>Highlights of this release</h1>; <ul>; <li>A sparse array API has been added for early testing and feedback; this; work is ongoing, and users should expect minor API refinements over; the next few releases.</li>; <li>The sparse SVD library PROPACK is now vendored with SciPy, and an interface; is exposed via <code>scipy.sparse.svds</code> with <code>solver='PROPACK'</code>. It is currently; default-off due to potential issues on Windows that we aim to; resolve in the next release, but can be optionally enabled at runtime for; friendly testing with an environment variable setting of <code>USE_PROPACK=1</code>.</li>; <li>A new <code>scipy.stats.sampling</code> submodule that leverages the <code>UNU.RAN</code> C; library to sample from arbitrary univariate non-uniform continuous and; discrete distributions</li>; <li>All namespaces that were private but happened to miss underscores in; their names have been deprecated.</li>; </ul>; <h1>New features</h1>; <h1><code>scipy.fft</code> improvements</h1>; <p>Added an <code>orthogonalize=None</code> parameter to the real transforms in <code>sc",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11538:1324,feedback,feedback,1324,https://hail.is,https://github.com/hail-is/hail/pull/11538,1,['feedback'],['feedback']
Usability," listing a folder containing around 50k files took 1h15. This new code takes ~16 seconds which is about how long it takes `gcloud storage ls`. There are two improvements:. 1. Use `bounded_gather2`. The use of a semaphore in `bounded_gather2`, which is missing from `bounded_gather`, allows it to be used recursively. In particular, suppose we had a semaphore of; 50. The outer `bounded_gather2` might need 20 slots to run its 20 paths in parallel. That leaves 30 slots of parallelism left over for its children. By passing the semaphore down, we let our children optimistically use some of that excess parallelism. 2. If we happen to have the `StatResult` for a particular object, we should never again look it up. In particular, getting the `StatResult` for every file in a directory can be done in O(1) requests. Getting the `StatResult` for each of those files individually (using their full paths) is necessarily O(N). If there was at least one glob and also there are no `suffix_components`, then we can use the `StatResult`s that we learned when checking the glog pattern. The latter point is perhaps a bit more clear with examples:. 1. `gs://foo/bar/baz`. Since there are no globs, we can make exactly one API request to list `gs://foo/bar/baz`. 2. `gs://foo/b*r/baz`. In this case, we must make one API request to list `gs://foo/`. This gives us a list of paths under that prefix. We check each path for conformance to the glob pattern `gs://foo/b*r`. For any path that matches, we must then list `<the matching path>/baz` which may itself be a directory containing files. Overall we make O(1) API requests to do the glob and then O(K) API requests to get the final `StatResult`s, where K is the number of paths matching the glob pattern. 3. `gs://foo/bar/b*z`. In this case, we must make one API request to list `gs://foo/bar/`. In `main`, we then throw away the `StatResult`s we got from that API request! Now we have to make O(K) requests to recover those `StatResult`s for all K paths tha",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13253:1059,learn,learned,1059,https://hail.is,https://github.com/hail-is/hail/pull/13253,1,['learn'],['learned']
Usability," more than one direct dependency, but not all of the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiJiN2QwMTZlZS0zODA0LTQwMjItOWE0Yi01MzExNjZhNjBjMWQiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6ImI3ZDAxNmVlLTM4MDQtNDAyMi05YTRiLTUzMTE2NmE2MGMxZCJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""b7d016ee-3804-4022-9a4b-531166a60c1d"",""prPublicId"":""b7d016ee-3804-4022-9a4b-531166a60c1d"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.3"",""to"":""41.0.4""}],""packageManager"":""pip"",""projectPublicId"":""701495b8-b53d-48af-82fe-1a6c57aa56cb"",""projectUrl"":""https://app.snyk.io/org/danking/project/701495b8-b53d-48af-82fe-1a6c57aa56cb?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-5914629""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""priorityScore""],""priorityScoreList"":[611],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13698:3153,Learn,Learn,3153,https://hail.is,https://github.com/hail-is/hail/pull/13698,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability," pervasive (but minor) improvements to Hail's I/O infrastructure. We should start with the egregious examples. Consider `AzureStorageFS.createNoCompression`'s [`OutputStream`](https://github.com/hail-is/hail/blob/main/hail/src/main/scala/is/hail/io/fs/AzureStorageFS.scala#L332-L342):; ```scala; val os: PositionedOutputStream = new FSPositionedOutputStream(4 * 1024 * 1024) {; private[this] val client: BlockBlobClient = blockBlobClient; private[this] val blobOutputStream = client.getBlobOutputStream(true). override def flush(): Unit = {; bb.flip(). if (bb.limit() > 0) {; blobOutputStream.write(bb.array(), 0, bb.limit()); }. bb.clear(); }; // ...; }; ```. Notice how we already have a `ByteBuffer` but we convert it to an array and send that to the OutputStream. Instead, we could just use the [`ByteChannel` methods of `BlockBlobClient`](https://learn.microsoft.com/en-us/java/api/com.azure.storage.blob.specialized.blockblobclient?view=azure-java-stable#com-azure-storage-blob-specialized-blockblobclient-openseekablebytechannelwrite(com-azure-storage-blob-options-blockblobseekablebytechannelwriteoptions)). The [read case also supports a channel](https://learn.microsoft.com/en-us/java/api/com.azure.storage.blob.specialized.blobclientbase?view=azure-java-stable#com-azure-storage-blob-specialized-blobclientbase-openseekablebytechannelread(com-azure-storage-blob-options-blobseekablebytechannelreadoptions-com-azure-core-util-context)). The next, more complicated problem, is the InputBuffer and OutputBuffer interfaces. These assume their sources/sinks are `java.io.InputStream` and `java.io.OutputStream`. Moreover, they too rely on and expose `Array[Byte]` interfaces (e.g. `readBytesArray` and the implementation of `StreamInputBuffer.readBytes`). Let's start with InputBuffer and the decoders and use decoding of VDS variant matrix tables as our benchmark. ```python3; import hail as hl; hl.init(master='local[1]'); vds = hl.vds.read_vds(...); vds.variant_data._force_count_rows(); ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13840:1347,learn,learn,1347,https://hail.is,https://github.com/hail-is/hail/issues/13840,1,['learn'],['learn']
Usability," provide a multi-column, easier to read version of About, and a linking section with a beautiful code-snippet-containing introduction to Hail (demonstrating file import). I leave these as future tasks, because enough changes are present in this PR. Summary of changes:; * Refined homepage styles, ensured navbar matches to pixel between docs and hail.is root (surprisingly difficult); * Improved mobile styles, especially mobile nav menu (much smoother animation, larger, easier to click on links); * Optimized icon sizes (50KB -> 3.3KB); * Removed all use of bootstrap on hail.is/*.html pages (bootstrap remains on docs, future pr).; * Removed index.md contents. The markdown format is pretty limited. To have a richly-marked up site with consistent styling, the syntax it provides is not enough. The solution is either to add html to index.md, or just write html in a the index.xslt file. I chose the latter, because it's simpler. Future reorganization should simplify this and docs further, though I think I still recommend NextJS and the build system that provides.; * Added threeR115.min.js. This is regrettably large, but doesn't impact page rendering performance in any meaningful way, because it is loaded after all html content (and is cached after the first visit). Future work can go to webgl directly, potentially. There is also ongoing work by the ThreeJS maintainers to allow tree-shaking and smaller builds.; * Added heavily modified fork of VantaJS. Because we are not using something like NextJS, there is no package manager to rely on, so I just checked the file in manually (I have this in a separate repo, we can use that if preferred). License is in line with a note about modifications. Vanta performs very, very poorly (order of 40% CPU usage, old/slow ways of observing whether animated element is in view, unnecessary object generation, etc), this does not, removes a bunch of totally unnecessary OO abstractions, and provides some additional effects (hover highlighting of ve",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8634:1131,simpl,simplify,1131,https://hail.is,https://github.com/hail-is/hail/pull/8634,1,['simpl'],['simplify']
Usability," push to a `:cache` tag, everyone uses that tag.; 2. List all the tags in the repository and include them all as --cache-from's (this doesn't actually work: https://github.com/moby/moby/issues/34715#issuecomment-425933774); 3. Push a tag for each git SHA and then include as --cache-from's the last ten git SHAs on this branch, the most recent common commit with main (i.e. `git merge-base origin/main this-branch`), maybe the current main, and maybe the PR number?; 4. Write our own OCI image builder so we can write our own OCI image cache that actually works the way it ought to (everything in the registry is considered fair game for the cache). It seems like 3 is actually a decent solution that should enable lots of caching.; 1. The last ten SHAs on the branch should speed up repeated builds when you're fixing little bugs.; 2. The most recent common commit with main should avoid rebuilds unless the packages changed.; 3. I suspect the current main is actually not helpful (either 2 will work or 3 wouldn't help).; 4. Pushing to something like `cache-11907` would allow force pushes to still access the last build's images. What do you think of the #3 proposal? . ---. [1]: I had two files:; ```; # cat sleep/Dockerfile; FROM ubuntu:18.04; RUN sleep 10; # cat touch/Dockerfile; FROM ubuntu:18.04; RUN touch foo; ```; To build I use this command (slightly different syntax from the buildctl syntax, but, AFAIK, uses the same backend):; ```; docker buildx \ ; build \; DIRECTORY_NAME_HERE \; --output 'type=image,""name=gcr.io/hail-vdc/dktest,gcr.io/hail-vdc/dktest:cache"",push=true' \; --cache-to type=inline \; --cache-from type=registry,ref=gcr.io/hail-vdc/dktest; ```; Before every build I clear the _local_ cache with:; ```; docker system prune -a; ```; I can clear the remote cache with:; ```; gcloud container images list-tags gcr.io/hail-vdc/dktest --format=""get(digest)"" \; | awk '{print ""gcr.io/hail-vdc/dktest@"" $1}' \; | xargs gcloud container images delete --force-delete-tags; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11907#issuecomment-1152646800:3256,clear,clear,3256,https://hail.is,https://github.com/hail-is/hail/pull/11907#issuecomment-1152646800,4,['clear'],['clear']
Usability," python; >>> from hail import *; >>> hc = HailContext(); hc.reaUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel).; d9""/projecRunning on Apache Spark version 2.0.2; SparkUI available at http://10.10.99.215:4040; Welcome to; __ __ <>__; / /_/ /__ __/ /; / __ / _ `/ / /; /_/ /_/\_,_/_/_/ version devel-6ee2919; WARNING: This is an unstable development build.; >>> hc.read(""/users/dking/projects/hail-data/profile225.vds""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-606>"", line 2, in read; File ""/Users/dking/projects/hail/python/hail/java.py"", line 121, in handle_py4j; 'Error summary: %s' % (deepest, full, Env.hc().version, deepest)); hail.java.FatalError: MappingException: Did not find value which can be converted into java.lang.String. Java stack trace:; org.json4s.package$MappingException: No usable value for sample_schema; Did not find value which can be converted into java.lang.String; 	at org.json4s.reflect.package$.fail(package.scala:96); 	at org.json4s.Extraction$ClassInstanceBuilder.org$json4s$Extraction$ClassInstanceBuilder$$buildCtorArg(Extraction.scala:462); 	at org.json4s.Extraction$ClassInstanceBuilder$$anonfun$14.apply(Extraction.scala:482); 	at org.json4s.Extraction$ClassInstanceBuilder$$anonfun$14.apply(Extraction.scala:482); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59); 	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at org.json4s.Extraction$ClassInstanceBuilder.org$json4s$Extraction$ClassInstanceBuilder$$instantia",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2159:1392,usab,usable,1392,https://hail.is,https://github.com/hail-is/hail/issues/2159,1,['usab'],['usable']
Usability, scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonf,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:10804,Simpl,Simplify,10804,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability," secret generic secretesfile --from-file=prod/env.txt`. The .env for the web app, where localhost would be replaced by our sub.domain. If you get it running, you may notice there isn't a way to log out... I ripped out all of the UI stuff after speaking with Cotton, and began writing a minimal interface. Just clear the cookie if you need to log out. ```; AUTH0_CLIENT_ID=TD78k23CcdM4pMWoYZwYwKJbQPBj06jY; AUTH0_DOMAIN=hail.auth0.com; AUTH0_SCOPE='opened profile repo read:users read:user_idp_tokens'; AUTH0_AUDIENCE='hail'; AUTH0_REDIRECT_URI='https://localhost/auth0callback'; SCORECARD_URL='https://scorecard.localhost/json'; SCORECARD_USER_URL='https://scorecard.localhost/json/users'; GRAPHQL_URL='https://localhost/api/graphql'; ```. The .env for the gateway; ```; AUTH0_WEB_KEY_SET_URL=https://hail.auth0.com/.well-known/jwks.json; AUTH0_AUDIENCE=hail; AUTH0_DOMAIN=https://hail.auth0.com/. AUTH0_MANAGEMENT_API_CLIENT=eqDY6HWOKd6MzC8kWCFaZUAoZgNUHypA; AUTH0_MANAGEMENT_API_SECRET=<I'll give this>; AUTH0_MANAGEMENT_API_TOKEN_URL=https://hail.auth0.com/oauth/token; AUTH0_MANAGEMENT_API_URL=https://hail.auth0.com/api/v2/users; AUTH0_MANAGEMENT_API_AUDIENCE=https://hail.auth0.com/api/v2/; ```. Organization of the web app is simple. There is a pages directory. Routes match the folder structure. Pages that don't need to maintain their own state look a lot like HTML wrapped in a function:. ```js; export default function() { <div>Hello World </div> }; ```. or in JS ES6 form:; ```js; export default () => <div>Hello World</div>; ``` . Performance is excellent. SSR should run about as fast as jinja2 (will be getting faster in 2019). Client side interactions are obviously far more performant. Bundle sizes are on a downward trajectory; react + react-dom is about as big as jQuery today, and reducing that is a focus on facebook in 2019. There are alternatives to react-dom that are under 10kb, but in practice 20kb is nothing to worry about, especially when initial load doesn't require it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931#issuecomment-454271935:3301,simpl,simple,3301,https://hail.is,https://github.com/hail-is/hail/pull/4931#issuecomment-454271935,2,['simpl'],['simple']
Usability," simple hash-based cache: no need to walk complex graph to normalize cache, because in most cases I'm perfectly fine with not re-using cache across different queries (that may have some shared fields). Apollo does something ""smarter"", but much slower: walks a query, checks that the requested fields for a node are the same, and that the node's id is the same, as some other query. 2) no runtime validation of query shape via graphql-tag...uses simple template strings, which are free. We don't care about schema validation in the client...because the server will error when schema is invalid. This should be compile time validated instead, in this case via integration tests. Also removed react-icons... I was going to use this in place of material-design-icons, because I thought loading the full font, when I needed only a few icons, would be unnecessarily expensive. It turns out that I cannot find a library where a single icon import (react-icons or MaterialUI) is smaller than Google's entire material design font: a single font (there are several needed to cover all icons) is ~500B. A single react-icons icon is ~2KB on dev (production may be smaller due to tree shaking). Also, am opposed to CSS-in-JS: slower, worse tooling, larger. Benefits are dynamic selectors, which are really no advantage that I can see (without them can still dynamically apply classes, as in the yee ol days of pleb vanilla js). Home page down to <2kb when not logged in, and 3.1KB logged in. This includes header, simple body, and dark mode button.; <img width=""2636"" alt=""screen shot 2018-12-19 at 11 49 59 pm"" src=""https://user-images.githubusercontent.com/5543229/50264482-ed4c3000-03e8-11e9-80d1-81d195a7b37a.png"">; <img width=""2636"" alt=""screen shot 2018-12-19 at 11 50 33 pm"" src=""https://user-images.githubusercontent.com/5543229/50264483-ed4c3000-03e8-11e9-8180-1409ca16573f.png"">. edit: Further .1KB shaved (gzipped) by replacing the dark mode icon svg with a reference to the material-design-icons font.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931#issuecomment-448868665:1593,simpl,simple,1593,https://hail.is,https://github.com/hail-is/hail/pull/4931#issuecomment-448868665,2,['simpl'],['simple']
Usability," simplify the computation of the principal components. First let me summarize how the paper presents PC-AiR. ### Original Presentation. Suppose that there are $n_u$ individuals in the unrelated set and $p$ SNPs. Let $X$ be the $n_u \times p$ standardized genotype matrix for the unrelated individuals. The paper starts by computing. $$\Psi \coloneqq \frac{1}{p}XX^T.$$. Next the paper eigendecomposes $\Psi$:. $$\Psi = U \Sigma^2 U^T,$$. where $U$ are the eigenvectors and $\Sigma^2$ is the diagonal matrix with the eigenvalues along the diagonal. Then the paper computes a $p \times n$ matrix $W$ called the **SNP weight matrix**:. $$W \coloneqq X^T U.$$. Suppose that there are $n_r$ individuals in the related set and let $Y$ be the $n_r \times p$ standardized genotype matrix for the related individuals. The paper computes the principal components associated with the related samples with. $$ \frac{1}{p} Y W (\Sigma^2)^{-1}.$$. ### Simplifications. The first simplification that I noticed is that we can do away with the $\frac{1}{p}$ terms. Because $\Psi$ is scaled by $p^{-1}$, the inverse of the eigenvalues, $(\Sigma^2)^{-1}$ is scaled by $p$, which cancels out the $1/p$ term in the calculation of the principal components for the related individuals. From here on, let us redefine $\Sigma^2$ as the diagonal matrix containing the eigenvalues of $XX^T$ (not $\frac{1}{p} XX^T$). Next, by examining the relationship between singular value decomposition (SVD) and eigendecomposition ([Wikipedia link](https://en.m.wikipedia.org/wiki/Singular_value_decomposition#Relation_to_eigenvalue_decomposition)), I realized that it is not necessary to compute $\Psi$. Instead, we can get $U$ and $\Sigma$ from the SVD of $X$:. $$X = U\Sigma V^T,$$. where $V$ is a $p \times p$ basis of the new PCA coordinate space. Then while investigating the meaning of $W$, I realized that $W = X^T U = V \Sigma^T U^T U = V \Sigma^T$. Taking these simplifications into account, I realized that the paper is, in essen",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14326#issuecomment-1962279184:978,simpl,simplification,978,https://hail.is,https://github.com/hail-is/hail/pull/14326#issuecomment-1962279184,2,['simpl'],['simplification']
Usability," struct(s), heap size 3520, 50 row lock(s), undo log entries 28; MySQL thread id 1941960, OS thread handle 140297909716736, query id 1869168359 10.32.3.8 dgoldste updating; UPDATE instances_free_cores_mcpu; SET free_cores_mcpu = free_cores_mcpu + cur_cores_mcpu; WHERE instances_free_cores_mcpu.name = in_instance_name; *** (1) WAITING FOR THIS LOCK TO BE GRANTED:; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409381 lock_mode X locks rec but not gap waiting; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 710000071136b3; asc q 6 ;;; 3: len 4; hex 800029fe; asc ) ;;. *** (2) TRANSACTION:; TRANSACTION 644409370, ACTIVE 0 sec inserting; mysql tables in use 6, locked 6; 39 lock struct(s), heap size 3520, 51 row lock(s), undo log entries 30; MySQL thread id 1941930, OS thread handle 140298159240960, query id 1869168731 10.32.3.8 dgoldste update; INSERT INTO batch_inst_coll_cancellable_resources (batch_id, inst_coll, token, n_running_cancellable_jobs, running_can; cellable_cores_mcpu); VALUES (OLD.batch_id, OLD.inst_coll, rand_token, -1, -OLD.cores_mcpu); ON DUPLICATE KEY UPDATE; n_running_cancellable_jobs = n_running_cancellable_jobs - 1,; running_cancellable_cores_mcpu = running_cancellable_cores_mcpu - OLD.cores_mcpu; *** (2) HOLDS THE LOCK(S):; RECORD LOCKS space id 1263041 page no 3 n bits 264 index PRIMARY of table `dgoldste`.`instances_free_cores_mcpu` trx i; d 644409370 lock_mode X locks rec but not gap; Record lock, heap no 192 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (tot; al 36 bytes);; 1: len 6; hex 00002668e81a; asc &h ;;; 2: len 7; hex 7",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116:2123,undo,undo,2123,https://hail.is,https://github.com/hail-is/hail/pull/11352#issuecomment-1036370116,2,['undo'],['undo']
Usability," the affected dependencies could be upgraded. Check the changes in this PR to ensure they won't cause issues with your project. ------------. **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*. For more information: <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5NmE4NGVhMS1hYzgxLTQxYmEtOGYzNC02MGU1ZTdhYzNjZTMiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijk2YTg0ZWExLWFjODEtNDFiYS04ZjM0LTYwZTVlN2FjM2NlMyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""96a84ea1-ac81-41ba-8f34-60e5e7ac3ce3"",""prPublicId"":""96a84ea1-ac81-41ba-8f34-60e5e7ac3ce3"",""dependencies"":[{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-SETUPTOOLS-3180412""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[509],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lessons/redos/javascript/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12896:3304,Learn,Learn,3304,https://hail.is,https://github.com/hail-is/hail/pull/12896,2,"['Learn', 'learn']","['Learn', 'learn']"
Usability," the values are stored in the array and the names are stored in a separate dictionary mapping names to their indices; 2. a `dict<str, T>`, the name-value pairs are stored as dictionary key-value pairs; 3. a `struct{name1: T, name2: T, ... nameN: T}`, the name-value pairs are stored as field name, field string pairs. The third option is the most space efficient: the type stores the field names and there is no bookkeeping overhead per-set-of-named-values. The first two options repeat the field names for each occurrence (in particular, consider a Table field or MatrixTable entry-indexed field). The first two options needlessly encode the length (which is statically known). The third option is the most access-time-efficient: the offset of any named-value is known at hail compile time. The first two options require a logarithmic search of hail's dictionary tree representation. The third option is more user-friendly for accessing: `x.name`. The first is the least user-friendly: `x[indices[""name""]]`. The first and third options are the most cache-friendly for homogenous operations. The first uses `ArrayExpression.map`, so code size is `O(CODE)`. The third option's code size is `O(CODE * #VALUES)` because structs have no `map`-like primitive. The third option is also not user-friendly for homogenous operations (the user must repeat the code for each name-value pair). The third is the most self-documenting option. The number of fields and their names are visible in `ds.describe()`. The first is the next best because the dictionary is likely a global field that can be viewed with `x.indices.show()`. ---. ## Phase 1; Implement a new virtual type `tstaticdict<T, name1, name2, ..., nameN>` who's physical type is `PStruct` with N fields. These changes span Scala and Python. Implement `map` and `__getitem__` on `StaticDictExpression`s. `map` is implemented by code duplication. ## Phase 2; Implement a new physical type that implements homogenous operations without code duplication.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6881:1405,user-friendly,user-friendly,1405,https://hail.is,https://github.com/hail-is/hail/issues/6881,1,['user-friendly'],['user-friendly']
Usability," to (specified by a #id after the url) was hidden by the navbar. ### Background; Browsers interpret a hash after a url as being an element selector (id) to move the top of the page to. The browser will set the top of the browser to the top of the element, which is determined by its height, padding, and box-sizing rule (which determines whether padding and borders are taken into account when calculating the element's height and width). *The margin on the element is not taken into account*. This is incompatible with fixed navbars, because now the the top of the element should also take into account the height of the nabber. ### Solution; 2 solutions, one for the case where the element has a transparent background, and one for the case that it doesn't. In the transparent case (`.section`), we add padding to the element that is larger than the default by the height of the navbar, and a negative margin that is the negative height of the navbar. For `.section`, which doesn't have any padding, we simply use the height of the navbar. In the colored-background case (`dt`, the function blocks, which have 6px of padding, a blue background, and darker blue top-border) we need to use a different solution, because that padding will be the color of the background, making the element appear much taller than expected. The solution is to use a tall transparent border instead, along with the setting `background-clip: padding-box`. To handle the border we use a pseudo element that is absolutely positioned.; - background-clip is widely supported: https://caniuse.com/#search=background-clip. ### Before; <img width=""697"" alt=""Screenshot 2019-10-12 14 34 42"" src=""https://user-images.githubusercontent.com/5543229/66706171-960fa700-ecfd-11e9-9fa0-17a05da486a2.png"">. <img width=""701"" alt=""Screenshot 2019-10-12 14 34 53"" src=""https://user-images.githubusercontent.com/5543229/66706173-9740d400-ecfd-11e9-9fa5-5fd4bb23fc54.png"">. ### After. <img width=""700"" alt=""Screenshot 2019-10-12 14 35 03"" src",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7288:1099,simpl,simply,1099,https://hail.is,https://github.com/hail-is/hail/pull/7288,1,['simpl'],['simply']
Usability," to establish the interface and behavior. I expect several follow-on PRs:. - Revise the original copy interface proposal and add to dev-docs.; - ~~Parallelizes the transfers concurrently with async and across multiple threads.~~; - ~~After parallizing, copy will involve a lot of paralellism. Throwing an exception on the first error will be very non-deterministic. Instead, copy will return a report that collects all the errors that were encountered in the course of copying, and summarizes how many files/bytes were copied.~~; - Use multi-process parallelism; - Avoid overwriting the destination if it exists and has a matching checksum (or size).; - ~~Introduce multi-part transfers~~; - add a post-pass for Google Storage to detect file-and-directory errors.; - Adds support for S3.; - Add `hailctl cp ...` (PR); - Use copy in Batch. After this goes in, these can mostly be developed in parallel. A few principles guided the implementation of copy: perform the minimal number of system calls or API requests per copy, and only do error checking when it doesn't involve additional FS operations. For example, it is too expensive to exhaustively check if we're creating a path that is a file and a directory in Google Storage. I considered doing additional and exhaustive checking for the actual copy arguments. For example, currently, `cp -T /path/to/file /path/to/dir` will not generate an error on Google Storage. In the end, I decided to go with the current behavior and I will add an option to do a postpass to check for file-and-dir paths. To achieve this, for each transfer, I simultaneously stat the destination (if needd) to determine if it is a file, directory or doesn't exist. For each source, I simultaneously try to copy it as a file and a directory. When copying each source, we don't need to know the type of the destination until after we've stat'ed the source, so stat'ing the sources and destinations are all overlapping. This avoids dependencies where I have to e.g. stat the i",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9822:1042,guid,guided,1042,https://hail.is,https://github.com/hail-is/hail/pull/9822,1,['guid'],['guided']
Usability," when the target object is annotated by; unhashable object</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10205"">#10205</a>: extlinks: Failed to compile regexp on checking hardcoded links</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10277"">#10277</a>: html search: Could not search short words (ex. &quot;use&quot;)</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9529"">#9529</a>: LaTeX: named auto numbered footnote (ex. <code>[#named]</code>) that is referred; multiple times was rendered to a question mark</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9924"">#9924</a>: LaTeX: multi-line :rst:dir:<code>cpp:function</code> directive has big vertical; spacing in Latexpdf</li>; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10158"">#10158</a>: LaTeX: excessive whitespace since v4.4.0 for undocumented</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/2329fdef8c20c6c75194f5d842b8f62ebad5c79d""><code>2329fde</code></a> Bump to 4.5.0 final</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/c34444149d7703ae2bf415adbec97324a5842632""><code>c344441</code></a> Update CHANGES for PR <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10263"">#10263</a></li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/746df6145239fd525056907deccb431f89bf8e41""><code>746df61</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/10263"">#10263</a> from nicoa/escape_base_uri_in_extlinks</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/81830cc77047ce39eab056a70b44a2d97848550c""><code>81830cc</code></a> Fix a flake8 warning</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/aee4",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11714:5036,undo,undocumented,5036,https://hail.is,https://github.com/hail-is/hail/pull/11714,2,['undo'],['undocumented']
Usability," | --- | --- | --- |; | this PR | 48 | 39.35 |; | this PR with one monolithic method | 235 | 73 |; | master (5fe6737263b4) | 91s | 83.5 |. I was disappointed with the performance of the monolithic method, so I dug in with `-XX:+PrintCompilation` and found that the JIT was having trouble doing on-stack replacement of the entry parsing loop. There was a cryptic message about the stack not being empty during an OSR compilation. I take this result as evidence that, in the JVM, small, fine-grained methods are critical for reliable performance. The new code, after JIT warming, is reading at 250 MB/s (1GB / 40 seconds) which is a half to a third of the performance of `cat`. It's more than twice as fast as the old code. Aside: using the staged stuff is hard, especially when using multiple methods. A couple thoughts:; - Because SRVB generates a fresh SRVB for arrays and structs, you must thread the srvb through your code gen rather than using a single field, this is annoying and error prone; - `init` is not a first class thing in `FunctionBuilder` and I've arguably made the whole situation more ugly by exposing `addInitInstructions`. Without the ability to place code in the constructor, it is hard to coordinate work between multiple methods.; - When using lots of methods, there's a lot of bookkeeping. I would like a way to define a ""staged class"" that wraps up some of the boilerplate. Not totally clear what I want here, just less boilerplate. Aside2: This is still pretty slow!? Splitting into multiple methods allowed me to interrogate where time was spent. The answer is ""method4"" which is `parseEntries`. This code includes the loop, the srvb state management, the Region manipulation, and checking for the missing value. I'd be surprised its the checking for missing value because I delegate to `String.regionMatches` for the heavy lifting and that does not show up in the profiler. I'm left to conclude that either srvb state management or writing/reading to regions is expensive.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6987:2687,clear,clear,2687,https://hail.is,https://github.com/hail-is/hail/pull/6987,1,['clear'],['clear']
Usability,""" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""4d1e728e-269c-49a2-a2d0-bf1c04966e29"",""prPublicId"":""4d1e728e-269c-49a2-a2d0-bf1c04966e29"",""dependencies"":[{""name"":""ipython"",""from"":""7.34.0"",""to"":""8.10.0""},{""name"":""jupyter-server"",""from"":""1.24.0"",""to"":""2.7.2""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""tornado"",""from"":""6.2"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERSERVER-5862881"",""SNYK-PYTHON-JUPYTERSERVER-5862882"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[531,null,null,509,384,494,539],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Access Control Bypass](https://learn.snyk.io/lesson/broken-access-control/?loc&#x3D;fix-pr); 🦉 [Open Redirect](https://learn.snyk.io/lesson/open-redirect/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14026:5915,Learn,Learn,5915,https://hail.is,https://github.com/hail-is/hail/pull/14026,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,""",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13835:10451,Learn,Learn,10451,https://hail.is,https://github.com/hail-is/hail/pull/13835,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,""",""from"":""0.8.4"",""to"":""2.0.3""},{""name"":""nbconvert"",""from"":""5.6.1"",""to"":""6.3.0b0""},{""name"":""notebook"",""from"":""5.7.16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13866:10477,Learn,Learn,10477,https://hail.is,https://github.com/hail-is/hail/pull/13866,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,""":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JINJA2-6150717"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PROMPTTOOLKIT-6141120"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494,539,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14257:11901,Learn,Learn,11901,https://hail.is,https://github.com/hail-is/hail/pull/14257,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,""":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""40.5.0"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.32.2"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JINJA2-6150717"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PROMPTTOOLKIT-6141120"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494,539,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14364:12254,Learn,Learn,12254,https://hail.is,https://github.com/hail-is/hail/pull/14364,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"""bootDiskSizeGb"": 10; }; },; ""softwareConfig"": {; ""imageVersion"": ""1.1.15"",; ""properties"": {; ""distcp:mapreduce.map.java.opts"": ""-Xmx2457m"",; ""distcp:mapreduce.map.memory.mb"": ""3072"",; ""distcp:mapreduce.reduce.java.opts"": ""-Xmx4915m"",; ""distcp:mapreduce.reduce.memory.mb"": ""6144"",; ""mapred:mapreduce.map.cpu.vcores"": ""1"",; ""mapred:mapreduce.map.java.opts"": ""-Xmx2457m"",; ""mapred:mapreduce.map.memory.mb"": ""3072"",; ""mapred:mapreduce.reduce.cpu.vcores"": ""2"",; ""mapred:mapreduce.reduce.java.opts"": ""-Xmx4915m"",; ""mapred:mapreduce.reduce.memory.mb"": ""6144"",; ""mapred:yarn.app.mapreduce.am.command-opts"": ""-Xmx4915m"",; ""mapred:yarn.app.mapreduce.am.resource.cpu-vcores"": ""2"",; ""mapred:yarn.app.mapreduce.am.resource.mb"": ""6144"",; ""spark:spark.driver.maxResultSize"": ""1920m"",; ""spark:spark.driver.memory"": ""3840m"",; ""spark:spark.executor.cores"": ""2"",; ""spark:spark.executor.memory"": ""5586m"",; ""spark:spark.yarn.am.memory"": ""5586m"",; ""spark:spark.yarn.am.memoryOverhead"": ""558"",; ""spark:spark.yarn.executor.memoryOverhead"": ""558"",; ""yarn:yarn.nodemanager.resource.memory-mb"": ""12288"",; ""yarn:yarn.scheduler.maximum-allocation-mb"": ""12288"",; ""yarn:yarn.scheduler.minimum-allocation-mb"": ""1024""; }; }; },; ""status"": {; ""state"": ""RUNNING"",; ""stateStartTime"": ""2016-12-15T19:00:51.004Z""; },; ""clusterUuid"": ""fb371071-cdd1-4bed-bd1b-3ce3049d07e5"",; ""statusHistory"": [; {; ""state"": ""CREATING"",; ""stateStartTime"": ""2016-12-15T18:59:19.745Z""; }; ],; ""metrics"": {}; }; ```. # Analysis Thus Far. The job doesn't terminate on its own. After stopping the job in the Google Cloud UI, subsequent jobs don't seem to be accepted (i.e. they hang before I see the Spark progress bar). The source of the error is a log statement. Apparently a task failure is triggering a giant log statement. The [log statement (from Spark 2.0 branch)](https://github.com/apache/spark/blob/branch-2.0/core/src/main/scala/org/apache/spark/scheduler/TaskSetManager.scala#L693) seems innocuous. So the real question is why are the tasks failing?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/1186#issuecomment-267416027:6250,progress bar,progress bar,6250,https://hail.is,https://github.com/hail-is/hail/issues/1186#issuecomment-267416027,2,['progress bar'],['progress bar']
Usability,"""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIyN2MzNWY4NC0yNDIyLTRmNzUtYWMxYy1mODQxOGJmNzRlMzciLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjI3YzM1Zjg0LTI0MjItNGY3NS1hYzFjLWY4NDE4YmY3NGUzNyJ9fQ=="" width=""0"" height=""0""/>; 🧐 [View latest project report](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr). 🛠 [Adjust project settings](https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""27c35f84-2422-4f75-ac1c-f8418bf74e37"",""prPublicId"":""27c35f84-2422-4f75-ac1c-f8418bf74e37"",""dependencies"":[{""name"":""cryptography"",""from"":""41.0.7"",""to"":""42.0.2""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CRYPTOGRAPHY-6149518"",""SNYK-PYTHON-CRYPTOGRAPHY-6157248"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""updated-fix-title"",""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[509,581,451],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use of a Broken or Risky Cryptographic Algorithm](https://learn.snyk.io/lesson/insecure-hash/?loc&#x3D;fix-pr); 🦉 [Uncontrolled Resource Consumption (&#x27;Resource Exhaustion&#x27;)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [NULL Pointer Dereference](https://learn.snyk.io/lesson/null-dereference/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14234:4340,Learn,Learn,4340,https://hail.is,https://github.com/hail-is/hail/pull/14234,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"""https://github.com/googleapis/java-storage/commit/03c2e6660721b4a8bfc09b241ef44f3e4e08865b"">03c2e66</a>)</li>; <li>Improve throughput of http based storage#reader between 100 MiB/s and 200 MiB/s (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1799"">#1799</a>) (<a href=""https://github.com/googleapis/java-storage/commit/94cd2887f22f6d1bb82f9929b388c27c63353d77"">94cd288</a>)</li>; <li>Update GrpcBlobReadChannel to allow seek/limit after read (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1834"">#1834</a>) (<a href=""https://github.com/googleapis/java-storage/commit/45dc983a4af8e7feb937263ce611bd34eda37e03"">45dc983</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>Add missing preconditions and update samples (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1753"">#1753</a>) (<a href=""https://github.com/googleapis/java-storage/commit/96beca2465158fb4633d58fe09a9776a4b171811"">96beca2</a>)</li>; <li><strong>grpc:</strong> Fix bucket logging conversion to allow clearing (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1822"">#1822</a>) (<a href=""https://github.com/googleapis/java-storage/commit/30e19dc55c61917c3a73055091e9e6ca0744f172"">30e19dc</a>)</li>; <li>Update gRPC object list implementation to include synthetic directories (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1824"">#1824</a>) (<a href=""https://github.com/googleapis/java-storage/commit/0665c2473b5b1a18061d1e58382320ae55295520"">0665c24</a>)</li>; <li>Update Grpc Write implementation to allow specifying expected md5 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1815"">#1815</a>) (<a href=""https://github.com/googleapis/java-storage/commit/46625729b6fd62d8f133c3fb2d8ee00eb64ee8e9"">4662572</a>)</li>; <li>Update GrpcConversions to use Bucket.RetentionPolicy.retention_duration (<a href=""https://github-redirect.dependabot.com/googlea",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12598:3499,clear,clearing,3499,https://hail.is,https://github.com/hail-is/hail/pull/12598,2,['clear'],['clearing']
Usability,"""the implementations should rely directly on java.util.Random"" Umm, why? From my outsiders perspective I would have assumed that high quality software worked on by the Broad Institute would use a half decent Random Number Generator (RNG). . If I had time to spend on this I would be pushing to change it to something else, perhaps the Apache Commons RNG: commons.apache.org/proper/commons-rng/userguide/rng.html I'm not a Java programmer though, and don't really aspire to be. . The C++ standard rand() function is also well known to be quite bad, though C++11 distributions use an ok implementation (I think default is Mersenne Twister, but there are also other options http://en.cppreference.com/w/cpp/numeric/random). In some C code I was replacing rand() and found this nice library: http://www.pcg-random.org/ no Java implementation though http://www.pcg-random.org/download.html#java-implementation T.T, but the PCG algorithm is actually really simple to implement. The PCG site is worth exploring in general to understand the important differences between RNGs. The GNU Scientific Library also provides C/C++ coders with some RNG implementations https://www.gnu.org/software/gsl/manual/html_node/Random-Number-Generation.html . I realize that it is quite early in development (in terms of versioning, 0.2) so maybe this seems like an insignificant thing, but I also hear that it is actively being used, so.... it also may not matter much, I just would like to bring some attention to it in case it hasn't been considered because I know that the RNG is something that is frequently overlooked.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2314#issuecomment-384085976:951,simpl,simple,951,https://hail.is,https://github.com/hail-is/hail/issues/2314#issuecomment-384085976,2,['simpl'],['simple']
Usability,"# EDIT: DO NOT USE THIS APPROACH. To be clear, a broad user can execute this command on the cluster to fix their environment:. ```; cat >>~/.my.bash.rc <<EOF; mkdir ~/lib; ln -s /broad/software/free/Linux/redhat_7_x86_64/pkgs/openblas_0.2.20/lib/libopenblas.so ~/lib/libblas.so.3; export LD_LIBARRY_PATH=~/lib:$LD_LIBRARY_PATH; EOF; ```",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5559#issuecomment-472956348:40,clear,clear,40,https://hail.is,https://github.com/hail-is/hail/issues/5559#issuecomment-472956348,2,['clear'],['clear']
Usability,# EDIT: See end of thread for new approach. The issue is that `use OpenBLAS` puts `libopenblas.so` on `LD_LIBRARY_PATH`. `netlib-java` links against `libblas.so` which is expected to contain the CBLAS symbols. It appears that Debian-style distributions use `update-alternatives` to symlink `libblas.so` to a library of the user's choice. Broad's UGER cluster does not provide such `update-alternatives` functionality. There exists two fixes:; - create a symlink to `libopenblas.so` named `libblas.so` and put it on the LD_LIBRARY_PATH; - use `LD_PRELOAD` to forcibly load `libopenblas.so`. The two solutions look like:. 1.; ```; mkdir ~/lib; ln -s /broad/software/free/Linux/redhat_7_x86_64/pkgs/openblas_0.2.20/lib/libopenblas.so ~/lib/libblas.so.3; export LD_LIBARRY_PATH=~/lib:$LD_LIBRARY_PATH; ```. 2.; ```; export LD_PRELOAD=/broad/software/free/Linux/redhat_7_x86_64/pkgs/openblas_0.2.20/lib/libopenblas.so; ```. Clearly neither of these are ideal. I recommend users place the lines from option 1 in an rc file.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5559#issuecomment-472953523:919,Clear,Clearly,919,https://hail.is,https://github.com/hail-is/hail/issues/5559#issuecomment-472953523,1,['Clear'],['Clearly']
Usability,"# SRE; - The Google SRE Books https://landing.google.com/sre/books/; - Distributed Systems Observability https://www.oreilly.com/library/view/distributed-systems-observability/9781492033431/; - ""Learning to Build Distributed Systems"" http://brooker.co.za/blog/2019/04/03/learning.html; - Increment's On-Call issue https://increment.com/on-call/; # SWE; - ""Designing Data-Intensive Systems"" by Kleppman https://www.amazon.com/gp/product/1449373321/; # SEC; - ""The Confused Deputy"" http://zoo.cs.yale.edu/classes/cs422/2010/bib/hardy88confused.pdf; - ""Blueprint fo a science of cybersecurity"" http://www.cs.cornell.edu/fbs/publications/SoS.blueprint.pdf; - ""Macaroons: Cookies with Contextual Caveats for Decentralized Authorization in the Cloud"" https://ai.google/research/pubs/pub41892; - ""Native Client: A Sandbox for Portable, Untrusted x86 Native Code"" https://ai.google/research/pubs/pub34913; - What is CSRF https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF); - What is XSS https://www.owasp.org/index.php/Cross-site_Scripting_(XSS); ## Containers; - gVisor Architecture Guide https://gvisor.dev/docs/architecture_guide/; - ""cgroups"" https://www.kernel.org/doc/Documentation/cgroup-v1/cgroups.txt; - ""cgroups v2"" https://github.com/torvalds/linux/blob/master/Documentation/admin-guide/cgroup-v2.rst; - ""Docker Security"" https://docs.docker.com/engine/security/security/; - ""On the security of containers"" https://medium.com/@ewindisch/on-the-security-of-containers-2c60ffe25a9e; - ""User namespaces might not be enough"" https://medium.com/@ewindisch/linux-user-namespaces-might-not-be-secure-enough-a-k-a-subverting-posix-capabilities-f1c4ae19cad; - ""OS-level virtualization"" https://en.wikipedia.org/wiki/OS-level_virtualisation; - ""Sandbox (computer security)"" https://en.wikipedia.org/wiki/Sandbox_(computer_security); - ""Making Containers More Isolated: An Overview of Sandboxed Container Technologies"" https://unit42.paloaltonetworks.com/making-containers-more-isolated-an-over",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6720:195,Learn,Learning,195,https://hail.is,https://github.com/hail-is/hail/issues/6720,2,"['Learn', 'learn']","['Learning', 'learning']"
Usability,"# The disappearing bit; ; This is one of the sneakiest bugs I've ever worked on. I learned early that the issue was somehow related to method splitting, but it was far more devious than I expected, and the code in LIR method splitting is completely correct. The particular case I was debugging had expected behavior when trying to write the missing bits of four fields A,B,C,D, where A and B were missing and C and D were present. These should have written the byte. 1<<0 | 1<<1 | 0<<2 | 0<<3; ==> b00000011; ==> 3. But instead wrote the byte `b00000001 or 1`, incorrectly leading readers to try to read field B when it was missing (and not written). This is due to the load-bearing and incorrect type of an I2B instruction generated [here](https://github.com/hail-is/hail/blob/8bd9b7b2224b77372a72f02f2b13806267892a35/hail/src/main/scala/is/hail/types/encoded/EBaseStruct.scala#L107). I2B is an instruction that truncates an integer to a byte, and it is used in various places in code generation but primarily encoding missing bits in arrays and structs. . I2B loads a byte to the stack, not a boolean. TypeInfos are mostly non-structural since they rarely influence the bytecode generated. Here is an exception, and that's where the method splitter comes in. Method splitting exists in the Hail compiler because not only does the JVM have limits on how large methods can be, but also the JIT compiler handles small methods much more effectively than large methods (and so splitting a large method into two small ones can make an order of magnitude or more in performance difference). We have three forms of method splitting in the Hail Query compiler. The first is a heuristic and greedy IR-level method splitter that generates new methods every X IR nodes, simply based on node count. However, the size of code generated by each IR can vary widely (`I32` vs `LowerBoundOnOrderedCollection` for instance), and so we have two other kinds of splitting that operate on the LIR level. The first is regio",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11328:83,learn,learned,83,https://hail.is,https://github.com/hail-is/hail/pull/11328,1,['learn'],['learned']
Usability,"## Basic philosophy; https://developers.google.com/web/fundamentals/performance/prpl-pattern/. Hybrid server-side client-side rendered application, with eager pre-loading of resources. First page visited is server rendered. All client-side code asynchronously fetched, using service workers if available. HTML is ""hydrated""/bound by React, and from then on has the responsiveness of a client-side application. This is what we have in the current pull request. Initial view / first page ready in ~10ms, DOMContentLoaded in ~60-120ms (excluding network latency). ## Why not static/HTML web?; In practice: there is no such thing. Even document-centric sites often need dynamic templates, and will therefore use PHP, Python, NodeJS, Go, Rust, etc. These only work on a server, and only serve interpolated, static documents. Any interactive elements require Javascript. As soon as you need Javascript, the choice becomes Vanilla JS, JQuery, or something more structured. Vanilla JS requires a lot of boilerplate (verbose event binding, DOM modification, needs polyfills since browser incompatibilities). JQuery makes this easier, but is 1) very slow, 2) provides no structure. Vanilla JS and JQuery tend to devolve to soup of global state-modifying code, with a lot of time spent on figuring out how to update values in DOM elements. . React/Next make DOM modification declarative, and very very easy. They provide a great deal of structure (especially with Next handling tooling), and thanks to the virtual dom / reconciliation process, performs, in many cases, much faster than directly modifying the DOM (HTML) (i.e plain JS). React also handles necessities like properly escaping all inputs, for XSS attack prevention. All of this in a bundle size that isn't significantly bigger than JQuery, without all of those benefits (and React is rapidly shrinking). It's possible to avoid Javascript. One can simulate interactivity by issuing a server GET request for a new page, i.e click on a link with a GET ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931:365,responsiv,responsiveness,365,https://hail.is,https://github.com/hail-is/hail/pull/4931,1,['responsiv'],['responsiveness']
Usability,"## Bug fixes to enable Azure deployment. Most of these bugs were discovered in deploying the MySQL server from scratch, specifically deploying version 8.0. ; Some were encountered when we hit certificate issues in trying to run the `./bootstrap.sh deploy_unmanaged` step multiple times within 24hrs. Documentation was clarified in order to resolve this issue. - build.yaml; - Step one fails on rerun since the /repo directory exists, -p to fix; - ci/create_database.py; - In MySQL 8 a new error was introduced [4006](https://dev.mysql.com/doc/mysql-errors/8.0/en/server-error-reference.html#error_er_cannot_user_referenced_as_definer); - This error gets triggered on the CREATE USER IF NOT EXISTS commands for both user and admin if the user was previously created and set a a definer on any events/triggers.; - Really this statement should be a no-op given that the user exists, but for some reason the error triggers anyway.; - To get around this I added a manual check if the user/admin exists and if they do simply skip the create user command. This fixes the bug and allows the MySQL db deploy to finish properly. - dev-docs/letsencrypt.md; - Debugging was confusing since the revoke command addressed ids we were unable to find.; - After extensive searching I added to the documentation how to find your existing cert IDs if you need to revoke them. - infra/azure/README.md; - Added clarity to the Azure deployment documentation. - infra/azure/bootstrap.sh; - Added the passing of additional flag arguments to terraform; - In our case the passing of the `-upgrade` flag to the terraform init step was required in order to continue. - infra/azure/main.tf, infra/azure/modules/batch/main.tf, infra/azure/modules/batch/variables.tf infra/azure/variables.tf; - Add additional argument for the az_storage_account.; - The name must be globally unique in Azure, so the original argument failed on our deployment since it shared the name with the Hail team's Azure deployment",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12065:1012,simpl,simply,1012,https://hail.is,https://github.com/hail-is/hail/pull/12065,1,['simpl'],['simply']
Usability,"### Change Description. This change exists as part of larger refactoring work. Herein, I've exchanged; hard-coded contextual strings passed to `ExecutionTimer.time` with implict; contexts, drawing inspiration from scalatest. These contexts are now supplied after entering functions like `Compile` and; `Emit` instead of before (see `ExecuteContext.time`). By sprinking calls to ; `time` throughout the codebase after entering functions, we obtain a nice trace; of the timings with `sourcecode.Enclosing`, minus the previous verbosity. See [1] for more information about what pre-built macros are available. We can; always build our own later. See comments in [pull request id] for example output.; Note that `ExectionTimer.time` still accepts a string to support uses like; `Optimise` and `LoweringPass` where those contexts are provided already.; It is also exception-safe now. This change exposed many similarities between the implementations of query; execution across all three backends. I've stopped short of full unification; which is a greater work, I've instead simplified and moved duplicated result; encoding into the various backend api implementations. More interesting changes are to `ExecuteContext`, which now supports; - `time`, as discussed above; - `local`, a generalisation for temporarily overriding properties of an ; `ExecuteContext` (inspired by [2]). While I've long wanted this for testing,; we were doing some questionable things when reporting timings back to python,; for which locally overriding the `timer` of a `ctx` has been very useful.; We also follow this pattern for local regions. [1] https://github.com/com-lihaoyi/sourcecode; [2] https://hackage.haskell.org/package/mtl-2.3.1/docs/Control-Monad-Reader.html#v:local. ### Security Assessment. This change has no security impact as it's confined to refactoring of existing non-security-related code.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14683:1070,simpl,simplified,1070,https://hail.is,https://github.com/hail-is/hail/pull/14683,1,['simpl'],['simplified']
Usability,"### Description. In this pull request, I update the docstring for the `Table.head` method to more clearly illustrate what the method does. ### Testing. I ran `make -C hail doctest-query` and confirmed that the test for `hail.table.Table.head` passed.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14241:98,clear,clearly,98,https://hail.is,https://github.com/hail-is/hail/pull/14241,1,['clear'],['clearly']
Usability,"### Description. In this pull request, I update the docstrings for the `sample`, `head`, and `semi_join` methods of the `Table` class with clearer examples that demonstrate the functionality of each method. I also update the unit test for the `sample` method so that it is deterministic and stronger. ### Testing. I ran `make -C hail doctest-query hail/table.py` to confirm that the docstring tests are passing for the methods that I updated.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14242:139,clear,clearer,139,https://hail.is,https://github.com/hail-is/hail/pull/14242,1,['clear'],['clearer']
Usability,"### Hail version:; latest master. ### What you did:; remove `region.clear()` from the `it.map` function inside `RVD.persistRVRDD`. ### What went wrong (all error messages here, including the full java stack trace):. `LDPruneSuite.testNoPrune` fails giving 313 variants instead of 338.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/3398:68,clear,clear,68,https://hail.is,https://github.com/hail-is/hail/issues/3398,1,['clear'],['clear']
Usability,"### Problem Description. `ExportPlink` was previously modified to resiliently handle failure of a; Spark task by including a per-task UUID. `copyMerge` was not modified to; correctly handle the directories generated by this modified; `ExportPlink`. For example, if exactly one task out of N fails during `ExportPlink`, the; temporary output directory will contain N+1 partition files. One of; these partition files is corrupted and invalid. The other N are the; output of successful task completion. The invalid file should simply be; ignored by `copyMerge`. ### Changes Made. This PR modifies `copyMerge` to take an optional list of files to; merge. If that argument is set to `None`, the original behavior; persists. The original behavior is used by `RichRDD.writeTable` and; `RichRDDByteArray.saveFromByteArrays`. These two methods use the default; Spark parallel export system. This system is not resilient to all task; failures, but *does* ensure failed tasks do not generate garbage; partitions in the output directory. Ergo, they can safely use the; original behavior of `copyMerge`. ### On Testing. I do not test this behavior because failing a task during write is a; little bit tricky. I have verified that all users of `copyMerge` now use; `copyMerge` correctly. Adding a test to `ExportPlink` would not save us; from incorrectly using `copyMerge` in the future. A longer term testing strategy that includes a Chaos Monkey that kills; entire containers during Hail Scala tests execution would protect; against this type of bug. ---. Fixes #4932",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4938:524,simpl,simply,524,https://hail.is,https://github.com/hail-is/hail/pull/4938,1,['simpl'],['simply']
Usability,"### Stacked PR; Stacks on #5429, adding the scss that was excluded from that PR. I separated them to make the story a bit cleaner. When #5429 is approved, this PR will contain 3 lines of change to index.html, 5 to notebook.py (to compile scss css), 1 to environment.yml (to include libsass), 1 to gitignore (to ignore the compiled css). The remaining 437 lines are the top-scope styles (margins, buttons that are frequently re-used, etc), the header styles, and styles for the login and notebook pages. We can exclude login page in this PR, but it only adds ~ 12 lines. Some of the global SCSS we will be able to removed later this week, once we understand which pieces we truly don't need. I can also remove them now if needed, but we won't have a single ""styles"" PR. ### SCSS vs CSS; I find SCSS preferable to CSS because it makes style scoping and re-use easier. For instance, we may define a variable $margin, to standardize spacing across all pages, and $color to define a font color for all text. SCSS can be written identically to css if the developer is totally unfamiliar or doesn't have time to learn. My style scoping solution is reminiscent of [BEM](http://getbem.com/introduction/). Each page defines an ID, and any styles that are private to that page are scope that way `#page { ...styles }` in the corresponding `pages/page.scss`. It is lightweight (no additional tooling needed), and should be easy to follow. cc @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5430:1105,learn,learn,1105,https://hail.is,https://github.com/hail-is/hail/pull/5430,1,['learn'],['learn']
Usability,"### Summary of Changes. - make the vectorized IBS tests depend on libsmidpp, I have no idea how this wasn't failing builds before. - fix `generate-build-info.sh` to actually set `BRANCH` instead of setting the `DATE` to the current git branch. Also remove unnecessary parameter passing to `echo_build_properties`. - remove `doctest` as a separate build step (it's now part of python tests). - fix `DOCS_STATUS` in `hail-ci-build.sh`. - remove some unused files: `list_pypi_versions.py`, `publish-to-pypi.sh` (which duplicates, wrongly, `python/deploy.sh`. - simplify `python/deploy.sh`, by managing copied files in make, we no longer clean up files, but the JAR is only 30 MB anyway. - small change to `conftest.py` triggered a bad diff: I added a `try`/`finally` block to ensure we always return to the original working directory. I also fixed the path. - Use pytest [recommended directory structure](https://docs.pytest.org/en/latest/goodpractices.html) when your tests directory is a python module [1]. In particular, we now use:. ```; python/; - setup.py; - src/; - hail/; - __init__.py; - ...; - tests/; - __init__.py; - ...; ```. - Calculate number of cores using python's multiprocessing and use that as a default PARALLELISM parameter. - Move non-java/scala specific functionality out of `build.gradle` and into a `Makefile`. - The resulting rules are more succinct and correctly rely on file-system modification dependencies. - No use of `SPARK_HOME` and `PYTHONPATH`, and limited use of `PYSPARK_SUBMIT_ARGS`. Python tests now rely on the python package directly which handles correctly handles dependencies like `pyspark`. - There are also some phony targets for convenience: `jar`, `zip`, `pip-install`, `docs`, and `docs-no-test`. - Fix configuration of Spark version for the python package. The version is written by make into `python/spark_version` and read by `python/setup.py`. Many of the tests pass against 2.3.0, but there's some floating point value changes. - add breezeVersions ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5130:558,simpl,simplify,558,https://hail.is,https://github.com/hail-is/hail/pull/5130,1,['simpl'],['simplify']
Usability,"### What happened?. # Problem. A user submitted a Hail Batch batch which read from a bucket whose storage class was ""Archive"". This produced a large unexpected spend because Archive class objects cost 0.05 USD per GB whereas Standard class objects are free. # Solution. Hail Batch and Hail Query should collect the set of buckets which were used as reads, imports, input files, or temporary intermediates and assert that the bucket default storage class is the standard class / hot tier. In Google this is called the [Standard storage class](https://cloud.google.com/storage/docs/storage-classes#standard). In Azure, this is called the [Hot tier](https://learn.microsoft.com/en-us/azure/storage/blobs/access-tiers-overview?tabs=azure-portal). A user should be able to explicitly override this setting with an allowlist. The allowlist should be initialized using Hail's [standard configuration system](https://github.com/hail-is/hail/blob/48d7b5cfbf9a2231d72dd0a1a682da28422fde4b/hail/python/hailtop/config/user_config.py#L42). In Hail Query, this allowlist should be a setting on `hl.init`. In Hail Batch, it should be a setting on `ServiceBackend`. ### Version. 0.2.115. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13003:655,learn,learn,655,https://hail.is,https://github.com/hail-is/hail/issues/13003,1,['learn'],['learn']
Usability,"### What happened?. - [ ] Document the AsyncFS interface, RouterAsyncFS, and the three clouds.; - [ ] Do a critical pass of the interfaces and make sure public methods don't have underscores and private methods do. When in doubt, make it private.; - [ ] Same as above but for parameters. For this, be particularly aggressive about making parameters private!; - [ ] Downgrade positional arguments to keyword-arguments as much as is feasible without severely degrading UX. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14021:467,UX,UX,467,https://hail.is,https://github.com/hail-is/hail/issues/14021,1,['UX'],['UX']
Usability,"### What happened?. A simple `hl.init()` fails, that used to work. Maybe an error with Spark, not an expert. ### Version. 0.2.108. ### Relevant log output. ```shell; ~ » python3; Python 3.10.9 (main, Dec 15 2022, 17:11:09) [Clang 14.0.0 (clang-1400.0.29.202)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import hail as hl; >>> hl.init(); 2023-01-27 17:15:28.940 WARN NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<decorator-gen-1758>"", line 2, in init; File ""/opt/homebrew/lib/python3.10/site-packages/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/opt/homebrew/lib/python3.10/site-packages/hail/context.py"", line 345, in init; return init_spark(; File ""<decorator-gen-1760>"", line 2, in init_spark; File ""/opt/homebrew/lib/python3.10/site-packages/hail/typecheck/check.py"", line 577, in wrapper; return __original_func(*args_, **kwargs_); File ""/opt/homebrew/lib/python3.10/site-packages/hail/context.py"", line 424, in init_spark; backend = SparkBackend(; File ""/opt/homebrew/lib/python3.10/site-packages/hail/backend/spark_backend.py"", line 188, in __init__; self._jbackend = hail_package.backend.spark.SparkBackend.apply(; File ""/opt/homebrew/lib/python3.10/site-packages/py4j/java_gateway.py"", line 1304, in __call__; return_value = get_return_value(; File ""/opt/homebrew/lib/python3.10/site-packages/py4j/protocol.py"", line 326, in get_return_value; raise Py4JJavaError(; py4j.protocol.Py4JJavaError: An error occurred while calling z:is.hail.backend.spark.SparkBackend.apply.; : java.lang.IllegalAccessError: class org.apache.spark.storage.StorageUtils$ (in unnamed module @0x4d740d85) cannot access class sun.n",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12630:22,simpl,simple,22,https://hail.is,https://github.com/hail-is/hail/issues/12630,1,['simpl'],['simple']
Usability,"### What happened?. Also fails if the show is a `_force_count`. ~~[reproduction.tar.gz](https://github.com/hail-is/hail/files/12705191/reproduction.tar.gz)~~. Here's a simple reproducer:. ```python3; import hail as hl; b = hl.utils.range_table(1); b = b.key_by(interval=hl.interval(b.idx, b.idx)); b = b.annotate(target='foo'); a = hl.utils.range_table(1); a = a.annotate(x=b.index(a.idx, all_matches=True).target); a = a.annotate(y=a.x.map(lambda _: hl.rand_cat([0.3, 0.2, 0.5], seed=0))); a._force_count(); ```. ### Version. 0.2.124. ### Relevant log output. ```; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); Cell In[1], line 10; 8 a = a.annotate(x=b.index(a.idx, all_matches=True).target); 9 a = a.annotate(y=a.x.map(lambda _: hl.rand_cat([0.3, 0.2, 0.5], seed=0))); ---> 10 a._force_count(). File /private/tmp/hail/hail/python/hail/table.py:441, in Table._force_count(self); 440 def _force_count(self):; --> 441 return Env.backend().execute(ir.TableToValueApply(self._tir, {'name': 'ForceCountTable'})). File /private/tmp/hail/hail/python/hail/backend/py4j_backend.py:72, in Py4JBackend.execute(self, ir, timed); 71 def execute(self, ir, timed=False):; ---> 72 jir = self._to_java_value_ir(ir); 73 stream_codec = '{""name"":""StreamBufferSpec""}'; 74 # print(self._hail_package.expr.ir.Pretty.apply(jir, True, -1)). File /private/tmp/hail/hail/python/hail/backend/py4j_backend.py:164, in Py4JBackend._to_java_value_ir(self, ir); 163 def _to_java_value_ir(self, ir):; --> 164 return self._to_java_ir(ir, self._parse_value_ir). File /private/tmp/hail/hail/python/hail/backend/py4j_backend.py:145, in Py4JBackend._to_java_ir(self, ir, parse); 143 r = CSERenderer(stop_at_jir=True); 144 # FIXME parse should be static; --> 145 ir._jir = parse(r(finalize_randomness(ir)), ir_map=r.jirs); 146 return ir._jir. File /private/tmp/hail/hail/python/hail/backend/py4j_backend.py:149, in Py4JBackend._parse_value_ir(self, code, ref_map,",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13699:168,simpl,simple,168,https://hail.is,https://github.com/hail-is/hail/issues/13699,1,['simpl'],['simple']
Usability,"### What happened?. As [Patrick noted](https://github.com/hail-is/hail/pull/13619#pullrequestreview-1626963641):. > [StreamMap with requiresMemoryManagementPerElement] could be generally useful when the producer didn't care about memory management, but the map body allocates a lot and wants to free after each row---and then use that to make these smarter:. Consider, for example, `split_multi`. In both the sparse and non-sparse split-multi, we take an array which necessarily fits in memory, the alleles array, and generate a full row for each allele. The `StreamMap` which generates the rows should be memory managed. For a Python-level example consider this expression:. ```python3; hl.range(100).map(lambda x: hl.range(1_000_000)).map(hl.sum); ```. Although `free` ing each integer generated by the `range` is silly, we *do* want to free the 1M element array! In the current interface, it is not possible to request this. Indeed, this operation would consume 100GB of RAM if the simplifier wasn't able to fuse the sum and range. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13623:985,simpl,simplifier,985,https://hail.is,https://github.com/hail-is/hail/issues/13623,1,['simpl'],['simplifier']
Usability,"### What happened?. Batch now has the ability to offer a metadata server endpoint in the network namespaces of a `DockerJob`. We should add this functionality to `JVMJob`s so that QoB jobs can use the google default credential flow instead of relying on a GSA key file in the job container. While the implementation here could be trivial, we should make sure to load test it properly as QoB jobs can be very short (100s of ms). The simplest route would be to create/close a metadata server in the `JVMContainer` at the start/end of every job. If this incurs a penalty, since these `JVMContainer`s are long-lived we can run a long-lived metadata server and swap out the underlying credentials when user jobs start/stop. ### Version. 0.2.130. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14487:432,simpl,simplest,432,https://hail.is,https://github.com/hail-is/hail/issues/14487,1,['simpl'],['simplest']
Usability,"### What happened?. Ben W reports that he can reliably cause a batch worker VM to become non-responsive, triggering the driver to kill the VM, and the job to get rescheduled. https://hail.zulipchat.com/#narrow/stream/300487-Hail-Batch-Dev/topic/workers.20which.20suddenly.20stop.20responding/near/400852561. This ticket is complete when:; 1. We have reproduced Ben's behavior on a main commit before or including 06183480d2. ; 2. We have reduced Ben's test case to something we can add as a test. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13992:93,responsiv,responsive,93,https://hail.is,https://github.com/hail-is/hail/issues/13992,1,['responsiv'],['responsive']
Usability,"### What happened?. Categorical data requires the user to preprocess their data. The subtle distinctions between dummy coding and one-hot encoding are not obvious to all users. We should provide a simple method, clear docs, and clear examples to ease the analysis of categorical variables. Here's a prototype implementation; ```python3; def dummy_code(mt: hl.MatrixTable, *fields: str) -> DummyCode:; field_categories = mt.aggregate_cols(**{; field: hl.agg.collect_as_set(mt[field]) for field in fields; }). dummy_codes = {; f'{field}_{category}': mt[field] == c; for field in field_categories; for category in field_categories[field]; }. mt = mt.annotate_cols(**dummy_codes). dummy_code_fields = list(dummy_codes). return field_categories, dummy_code_fields, mt. # Example. _, dummy_code_fields, mt = hl.dummy_code(mt, 'breed', 'color'); mt = hl.linear_regression_rows(; x=mt.GT.n_alt_alleles(),; y=[1.0, *dc.dummy_code_fields]; ). ```. References; - How to handle categorical manually in Hail. https://discuss.hail.is/t/how-do-i-include-a-categorical-variable-as-a-covariate-in-my-logistic-or-linear-regression/1362; - Dummy coding vs one-hot encoding. https://stats.stackexchange.com/questions/224051/one-hot-vs-dummy-encoding-in-scikit-learn; - A recent user request for this feature. https://hail.zulipchat.com/#narrow/stream/123010-Hail-Query-0.2E2-support/topic/categorical.20covariates.20in.20regression. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13601:197,simpl,simple,197,https://hail.is,https://github.com/hail-is/hail/issues/13601,4,"['clear', 'learn', 'simpl']","['clear', 'learn', 'simple']"
Usability,"### What happened?. Consider this simple pipeline that reads a matrix table. ```python3; import hail as hl; hl.init(master='local[1]'); hl.read_matrix_table('/Users/dking/projects/hail-data/foo.mt')._force_count_rows(); ```. <details>; <summary>The matrix table's type.</summary>. ```; ----------------------------------------; Global fields:; None; ----------------------------------------; Column fields:; 's': str; ----------------------------------------; Row fields:; 'locus': locus<GRCh38>; 'alleles': array<str>; 'rsid': str; ----------------------------------------; Entry fields:; 'LA': array<int32>; 'LGT': call; 'LAD': array<int32>; 'LPGT': call; 'LPL': array<int32>; 'RGQ': int32; 'gvcf_info': struct {; AC: array<int32>, ; AF: array<float64>, ; AN: int32, ; AS_BaseQRankSum: array<float64>, ; AS_FS: array<float64>, ; AS_InbreedingCoeff: array<float64>, ; AS_MQ: array<float64>, ; AS_MQRankSum: array<float64>, ; AS_QD: array<float64>, ; AS_QUALapprox: array<int32>, ; AS_RAW_BaseQRankSum: str, ; AS_RAW_MQ: array<float64>, ; AS_RAW_MQRankSum: array<tuple (; float64, ; int32; )>, ; AS_RAW_ReadPosRankSum: array<tuple (; float64, ; int32; )>, ; AS_ReadPosRankSum: array<float64>, ; AS_SB_TABLE: array<array<int32>>, ; AS_SOR: array<float64>, ; AS_VarDP: array<int32>, ; BaseQRankSum: float64, ; ExcessHet: float64, ; FS: float64, ; InbreedingCoeff: float64, ; MQ: float64, ; MQRankSum: float64, ; MQ_DP: int32, ; QD: float64, ; QUALapprox: int32, ; RAW_GT_COUNT: array<int32>, ; RAW_MQandDP: array<int32>, ; ReadPosRankSum: float64, ; SOR: float64, ; VarDP: int32; }; 'DP': int32; 'GQ': int32; 'MIN_DP': int32; 'PID': str; 'PS': int32; 'SB': array<int32>; ----------------------------------------; Column key: ['s']; Row key: ['locus', 'alleles']; ----------------------------------------; ```; </details>. <details>; <summary>The matrix table entries RVD's EType [1]</summary>. ```; +EBaseStruct{; `the entries! [877f12a8827e18f61222c6c8c5fb04a8]`:; +EArray[EBaseStruct{; LA:EArray[EInt3",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13792:34,simpl,simple,34,https://hail.is,https://github.com/hail-is/hail/issues/13792,1,['simpl'],['simple']
Usability,"### What happened?. Currently, almost all of our tests are integration tests which require:; 1. Compiling Scala code.; 2. Building a JAR (takes ~30 seconds on my MBP); 3. Running pytest (can take as long as 20 seconds). All of this is a lot slower than iterating with a live running Scala process. We should have tests of various parts of the compiler operating at the IR level. For example, MatrixIR to TableIR lowering should have plenty of in Scala IR-level tests. Likewise for TableIR to CDAIR. The optimizer/simplifier should also have tests at each level which assert certain kinds of code is sufficiently cleaned up by the optimizer. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13638:513,simpl,simplifier,513,https://hail.is,https://github.com/hail-is/hail/issues/13638,1,['simpl'],['simplifier']
Usability,"### What happened?. Currently, in order to change the rate limit in `internal-gateway`, one has to manually edit `envoy.py` and redeploy CI. This is non-standard, time intensive and can be accidentally reverted if CI merges a new commit to `main`. CI already regularly updates the envoy configuration `internal-gateway` uses to account for services in new namespaces, so making the rate limit configurable should be a simple CRUD task that would greatly ease operation of batch under high load. One gotcha to keep in mind is that while we run CI as a control plane for our ""dynamic cluster topology"", it should still be possible to manually deploy `internal-gateway` in a standalone Batch cluster (see `internal-gateway/Makefile`), so `envoy.py` should still be runnable as a standalone script. ### Version. 0.2.128. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14399:418,simpl,simple,418,https://hail.is,https://github.com/hail-is/hail/issues/14399,1,['simpl'],['simple']
Usability,"### What happened?. Encountered this making the repo to support the SVCR paper. There's no way to pass through multiple call fields through to `hl.import_gvcf_interval`, so I'm stuck with a PGT str. Should be a simple fix. ### Version. 0.2.120. ### Relevant log output. ```shell; Entry fields:; 'END': int32; 'DP': int32; 'GQ': int32; 'LA': array<int32>; 'LGT': call; 'LAD': array<int32>; 'LPGT': str; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13382:211,simpl,simple,211,https://hail.is,https://github.com/hail-is/hail/issues/13382,1,['simpl'],['simple']
Usability,"### What happened?. Hana Snow is the engineer for SEQR. Previously, SEQR used elastic search as its datastore. Unfortunately, elastic search was very expensive because, to get reasonable performance, SEQR indexed nearly every field. The ES index was huge and the VM resources necessary to run an ES instance on that index were expensive (like 1000s USD per month). I've been supporting Hana as much as I can, but she needs someone who can be more dedicated and responsive than me. She uses a k8s cluster. She has a SEQR frontend deployment. She also has a Hail deployment (statefulset maybe?). The Hail pod has an SSD mounted read-only. That SSD has all the SEQR data in Hail Table form. There are many tables with annotations (variant metadata, like ""probability this variant is damaging"" or ""likely causes this to happen to the protein""). There are also ""per-family"" tables which contain all the sequences within a single family. Many queries are directly against a particular family. Those tables are small and quick to read. There's also one giant table containing all the sequences from all the families. That table is large and expensive to read. A lot of our engineering work has been around making sure queries against that table are fast. Tim, at one point, had enough of her system locally that he could experiment with running queries on his laptop against his SSD. He hacked on the queries themselves and on Hail itself until the bandwidth was fast enough that the queries should complete fast enough on the full dataset. Fast enough varies but generally a couple tens of seconds is OK. The work here is to pair with Hana to diagnose performance issues and make changes until the queries are acceptably fast. The first thing I would do is update her to the latest Hail (with the array decoder improvement as well as the memory overhead stuff on which Daniel is working). Then, with Hana's help, test the timing of some queries. If the queries are still too slow, your options are:; 1. Chec",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13882:461,responsiv,responsive,461,https://hail.is,https://github.com/hail-is/hail/issues/13882,1,['responsiv'],['responsive']
Usability,"### What happened?. Hello,; I have some gwas results that I have converted into a pandas dataframe. Typically with dataframes I pickle my outputs for speed and easily maintaining data types. Within All of Us we have separate analysis environments whether we're using hail or not. The environment that doesn't have hail is much cheaper for simple analyses and does not have pyspark installed. You can see in the error below when I try to reread the pickled dataframe, I get an error that it can't find the pyspark from within a hail module. If I write the dataframe as a csv, read it back in, and then pickle it then the error goes away. This suggests to me that the dataframe created by hail maintains reference to hail objects and pandas is attempting to recreate these objects when unpickling. I suspect this is not intentional. ```python; # Hail environment; vat_simplified_file = os.path.join(bucket, 'vat.ht'); gwas = hl.read_table(gwas_results_file_no_sex_chr); vat = hl.read_table(vat_simplified_file); gwas = gwas.filter(gwas.p_value <= 1e-4); combined = gwas.join(vat, how='left'); combined_pandas = combined.to_pandas(). gwas_pandas_file = os.path.join(bucket, 'gwas_results.pkl'); combined_pandas.to_pickle(gwas_pandas_file); ```. ```python; # Non hail environment without pyspark; combined_pandas = pd.read_pickle(gwas_pandas_file). ---------------------------------------------------------------------------; ModuleNotFoundError Traceback (most recent call last); /opt/conda/lib/python3.7/site-packages/pandas/io/pickle.py in read_pickle(filepath_or_buffer, compression, storage_options); 216 # expected ""IO[bytes]""; --> 217 return pickle.load(handles.handle) # type: ignore[arg-type]; 218 except excs_to_catch:. /opt/conda/lib/python3.7/site-packages/hail/__init__.py in <module>; 32 # E402 module level import not at top of file; ---> 33 from .table import Table, GroupedTable, asc, desc # noqa: E402; 34 from .matrixtable import MatrixTable, GroupedMatrixTable # noqa: E402. /opt/conda",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14004:339,simpl,simple,339,https://hail.is,https://github.com/hail-is/hail/issues/14004,1,['simpl'],['simple']
Usability,"### What happened?. Here is a reproducer, though I would like to find a simpler one:; ```python; mt = hl.balding_nichols_model(1, 10, 10); mt = mt.annotate_rows(foo=hl.agg.count_where(hl.is_defined(mt['GT'])) - hl.sum(hl.agg.call_stats(mt.GT, mt.alleles).homozygote_count)); ht = mt.entries(); ht = ht.sample(0.5); ht._force_count(); ```; The issue is that this `StreamAgg` node is generated; ```; (StreamAgg __iruid_4244; (StreamFilter __iruid_4245; (StreamRange -1 False; (I32 0); (ArrayLen (Ref __iruid_4243)); (I32 1)); (ApplyUnaryPrimOp Bang; (IsNA; (ArrayRef -1; (Ref __iruid_4243); (Ref __iruid_4245))))); (AggLet __iruid_4246 False; (GetField GT; (ArrayRef -1; (Ref __iruid_4243); (Ref __iruid_4244))); (InsertFields; (Let __iruid_4247; (SelectFields (locus alleles ancestral_af af); (Ref __iruid_4235)); (InsertFields; (Ref __iruid_4247); None; (foo; (ApplyBinaryPrimOp Subtract; (ApplyAggOp Sum; (); ((Apply 18 toInt64 () Int64; (ApplyUnaryPrimOp Bang; (IsNA (Ref __iruid_4246)))))); (Let __iruid_4249; (ToArray; (StreamFilter __iruid_4248; (ToStream False; (GetField homozygote_count; (ApplyAggOp CallStats; ((ArrayLen (GetField alleles (Ref __iruid_4247)))); ((Ref __iruid_4246))))); (ApplyUnaryPrimOp Bang; (IsNA (Ref __iruid_4248))))); (Cast Int64; (StreamFold __iruid_4250 __iruid_4251; (ToStream False (Ref __iruid_4249)); (I32 0); (ApplyBinaryPrimOp Add; (Ref __iruid_4250); (Ref __iruid_4251))))))))); None; (__uid___row_uid20; (GetField __uid___row_uid20; (Ref __iruid_4235)))))); ```; which is lowered to; ```; (AggLet __iruid_4246 False; (GetField GT; (ArrayRef -1; (Ref __iruid_4243); (Ref __iruid_4244))); (InsertFields; (Let __iruid_4247; (SelectFields (locus alleles ancestral_af af); (Ref __iruid_4235)); (Let __iruid_4268; (RunAgg ((TypedStateSig +PInt64); (CallStatsStateSig)); (Let __void; (Let __void; (InitOp 0 (Sum (TypedStateSig +PInt64)) ()); (InitOp 1 (CallStats (CallStatsStateSig)); ((ArrayLen; (GetField alleles (Ref __iruid_4247)))))); (StreamFor __iruid_4244; (",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14305:72,simpl,simpler,72,https://hail.is,https://github.com/hail-is/hail/issues/14305,1,['simpl'],['simpler']
Usability,"### What happened?. Here's a tail of the log showing the rapidly increasing RAM use. I'm working on a simple replicable pipeline now. Does not depend on the use of `filter_changed_loci`. ```; 2023-09-11 16:22:59.815 : INFO: RegionPool: REPORT_THRESHOLD: 1.0G allocated (662.3M blocks / 363.4M chunks), regions.size = 3, 0 current java objects, thread 24: Thread-3; 2023-09-11 16:23:01.488 : INFO: executing D-Array [table_scan_prefix_sums_singlestage] with 1 tasks, contexts size = 430.00 B, globals size = 2.52 MiB; 2023-09-11 16:23:01.540 : INFO: RegionPool: initialized for thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.567 : INFO: RegionPool: REPORT_THRESHOLD: 2.2M allocated (64.0K blocks / 2.1M chunks), regions.size = 1, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.572 : INFO: RegionPool: REPORT_THRESHOLD: 4.2M allocated (64.0K blocks / 4.1M chunks), regions.size = 1, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.573 : INFO: RegionPool: REPORT_THRESHOLD: 4.3M allocated (64.0K blocks / 4.2M chunks), regions.size = 1, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.573 : INFO: RegionPool: REPORT_THRESHOLD: 4.3M allocated (128.0K blocks / 4.2M chunks), regions.size = 2, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.573 : INFO: RegionPool: REPORT_THRESHOLD: 12.3M allocated (192.0K blocks / 12.1M chunks), regions.size = 3, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in stage 37.0 (TID 442); 2023-09-11 16:23:01.579 : INFO: RegionPool: REPORT_THRESHOLD: 12.4M allocated (192.0K blocks / 12.2M chunks), regions.size = 3, 0 current java objects, thread 115: Executor task launch worker for task 0.0 in",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13606:102,simpl,simple,102,https://hail.is,https://github.com/hail-is/hail/issues/13606,1,['simpl'],['simple']
Usability,"### What happened?. I have a job that runs a GATK command that produces a `foo.counts.tsv` file, compresses and indexes it, and should store the resulting `foo.counts.tsv.gz` and `foo.counts.tsv.gz.tbi` files. The indexing command requires the filename extension to be `.counts.tsv.gz` and there is clearly a strong relationship between the filenames of the three files, so I have been using a ResourceGroup to model this, essentially as follows:. ```python; j = b.new_job(…). j.declare_resource_group(counts={; 'tsv': '{root}.counts.tsv',; 'tsv.gz': '{root}.counts.tsv.gz',; 'tsv.gz.tbi': '{root}.counts.tsv.gz.tbi',; }). j.command(f""""""; gatk SubCommand … --output {j.counts['tsv']}; bgzip {j.counts['tsv']}; gatk IndexFeatureFile --input {j.counts['tsv.gz']}; """"""). b.write_output(j.counts['tsv.gz'], output_path); b.write_output(j.counts['tsv.gz.tbi'], output_index_path); ```. (Trying to use `b.write_output(j.counts, output_base)` to write out the whole ResourceGroup fails because the `…/counts.counts.tsv` file no longer exists because it was removed by `bgzip`. In any case, we don't want to write that one to the final bucket anyway. Hence the two separate `write_output` invocations for the two desired output files.). This fails in the second `write_output` with a fairly mysterious exception:. ```; File ""…"", line 92, in test; b.write_output(j.counts['tsv.gz.tbi'], output_index_path); File ""…/lib/python/site-packages/hailtop/batch/batch.py"", line 595, in write_output; name = resource._source._resources_inverse[resource]; KeyError: __RESOURCE_FILE__11; ```. Checking that line of _batch.py_, it is failing while trying to print an error message because `_resources_inverse` is not set up for the JobResourceFiles within ResourceGroups. PR #13192 is a suggested fix for this. With that PR applied, this results in a more useful hail error message exception:. ```; hailtop.batch.exceptions.BatchException: undefined resource 'counts[""tsv.gz.tbi""]'; Hint: resources must be defined within ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13191:299,clear,clearly,299,https://hail.is,https://github.com/hail-is/hail/issues/13191,1,['clear'],['clearly']
Usability,"### What happened?. I wrote a bed2hailmatrix workflow and ran it on Terra platform to convert from plink bed format to hail matrix format. . https://github.com/shengqh/warp/blob/develop/pipelines/vumc_biostatistics/genotype/VUMCBed2HailMatrix.wdl. code is pretty simple:. ```; import hail as hl. hl.init(spark_conf={""spark.driver.memory"": ""~{memory_gb}g""}). #contig_recoding is hard coded for human only; dsplink = hl.import_plink(bed=""~{source_bed}"",; bim=""~{source_bim}"",; fam=""~{source_fam}"",; reference_genome=""~{reference_genome}"",; contig_recoding={; '1': 'chr1',; '2': 'chr2',; '3': 'chr3',; '4': 'chr4',; '5': 'chr5',; '6': 'chr6',; '7': 'chr7',; '8': 'chr8',; '9': 'chr9',; '10': 'chr10',; '11': 'chr11',; '12': 'chr12',; '13': 'chr13',; '14': 'chr14',; '15': 'chr15',; '16': 'chr16',; '17': 'chr17',; '18': 'chr18',; '19': 'chr19',; '20': 'chr20',; '21': 'chr21',; '22': 'chr22',; 'X': 'chrX',; 'Y': 'chrY',; 'MT': 'chrM'}). dsplink.write(""~{target_prefix}"", overwrite=True); ```. When I tested it on the chr12 with 34523 samples and 18377527 variants from one of my dataset in Terra (100 g was allocated for this task), it failed with error message:. ```; java.lang.NegativeArraySizeException: null; at com.esotericsoftware.kryo.util.IdentityObjectIntMap.resize(IdentityObjectIntMap.java:542); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.putStash(IdentityObjectIntMap.java:306); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.push(IdentityObjectIntMap.java:300); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.put(IdentityObjectIntMap.java:162); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.putStash(IdentityObjectIntMap.java:307); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.push(IdentityObjectIntMap.java:300); at com.esotericsoftware.kryo.util.IdentityObjectIntMap.put(IdentityObjectIntMap.java:162); at com.esotericsoftware.kryo.util.MapReferenceResolver.addWrittenObject(MapReferenceResolver.java:41); at com.esotericsoftware.kryo.Kryo.w",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14168:263,simpl,simple,263,https://hail.is,https://github.com/hail-is/hail/issues/14168,1,['simpl'],['simple']
Usability,### What happened?. I'm not sure why but the latest version of asyncio seems to use different event loops for non-default-scoped fixtures from the event loops for the tests. This causes issues with aiohttp.ClientSession which expects the event loop at allocation time to match the event loop at request time. It seems this was [an intentional change](https://github.com/pytest-dev/pytest-asyncio/issues/706#issue-2023749871) in pytest-asyncio 0.23.0. The pytest-asyncio website [documents how to ensure every test uses the same event loop](https://pytest-asyncio.readthedocs.io/en/latest/how-to-guides/run_session_tests_in_same_loop.html) ([archive](https://web.archive.org/web/20240108222050/https://pytest-asyncio.readthedocs.io/en/latest/how-to-guides/run_session_tests_in_same_loop.html)) but this does not appear to ensure that a module or session scoped fixtures share the same event loop as their dependent tests (I've created [an issue](https://github.com/pytest-dev/pytest-asyncio/issues/744) for this). ### Version. 42bf4517e6. ### Relevant log output. _No response_,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14130:595,guid,guides,595,https://hail.is,https://github.com/hail-is/hail/issues/14130,2,['guid'],['guides']
Usability,"### What happened?. In both [`make_variants_matrix_table`](https://github.com/hail-is/hail/blob/main/hail/python/hail/vds/combiner/combine.py#L59-L60) and [`make_variants_stream`](https://github.com/hail-is/hail/blob/main/hail/python/hail/vds/combiner/combine.py#L189-L190), we simply copy the `PGT` to `LPGT` without fixing the indexing. We must properly fix the indexing. ### Version. 0.2.142. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13828:278,simpl,simply,278,https://hail.is,https://github.com/hail-is/hail/issues/13828,1,['simpl'],['simply']
Usability,"### What happened?. In particular the, `test_pool_highcpu_instance_cheapest` test is failing. Azure indeed published new prices today. Ds got cheaper:; ```; | az/vm/Standard_D8ds_v4/spot/eastus/1680307200000 | 0.00000000004422498914930556 | 52602 | 52602 |; | az/vm/Standard_D8ds_v4/spot/eastus/1682899200000 | 0.00000000003538601345486111 | 52640 | 52640 |; ```; Fs got more expensive:; ```; | az/vm/Standard_F8s_v2/spot/eastus/1680307200000 | 0.000000000016796061197916665 | 52629 | 52629 |; | az/vm/Standard_F8s_v2/spot/eastus/1682899200000 | 0.00000000001763156467013889 | 52667 | 52667 |; ```; It's not clear why batch is preferring a D to an F since Fs are still cheaper per core than Ds. Perhaps something about the disk allocation?. ### Version. 1940547d35ddddb084ad52684e36153c1e03a331. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/12958:608,clear,clear,608,https://hail.is,https://github.com/hail-is/hail/issues/12958,1,['clear'],['clear']
Usability,"### What happened?. In particular, VDS is doubly sparse:; 1. Sparse columns. Reference blocks are a form of run-length compression of homozygous reference calls.; 2. Sparse alleles. Local alleles is a form of compressed-sparse-column (albeit on arrays rather than matrices). All sparsely encoded allele-indexed fields share the same index array (the ""local alleles"" (`LA`) field). `hl.vds.to_dense_mt` only desifies the sparse columns, it *does not* densify the sparse alleles. This ticket is complete when:; 1. We have written a careful analysis, for ourselves, both of (1) the possible terms for describing sparse columns, sparse allele-indexed fields, densification of columns, and densification of allele-indexed fields as well as of (2) how to structure the code to avoid foot guns, make clear what is being densified, and facilitating selective densification of only what is necessary.; 2. We have merged a (short) RFC realizing part (1).; 3. We have merged a PR the realizes part (2).; 4. We have improved the documentation of the densification and local alleles methods to use this new language and to clearly describe what is and is not densified and the growth of size caused by these densifications. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14009:793,clear,clear,793,https://hail.is,https://github.com/hail-is/hail/issues/14009,2,['clear'],"['clear', 'clearly']"
Usability,"### What happened?. It might also be good to consider a better public-facing name. While nearly all jobs in Batch are scheduled on shared machines, a user sometimes wants a custom machine type that we don't offer shared pools for. The solution in that instance is a ""job-private"" machine, where we spin up a machine that lives and dies along with the single job that's scheduled on it. There is no public interface for this yet, and our few users that use it (for whom this feature was developed) do `j._machine_type = '<gcp-machine-type>'` to opt into this functionality. This feature is gaining more traction and we should create a proper API for it instead of using a private field. This shouldn't be much code at all, but we should spend a little thought on naming and ensure that it is properly documented and discoverable. There should also be a clear distinction in the documentation on the intended use case of this feature, how it differs from shared pools, and the cost penalty of using it (they pay for the lifetime of the instance not just the job). ### Version. 0.2.130. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14500:852,clear,clear,852,https://hail.is,https://github.com/hail-is/hail/issues/14500,1,['clear'],['clear']
Usability,"### What happened?. Job groups are as of writing not generally usable in the public interface, but Query on Batch now uses them to structure actions and stages of computation. For example, a Hail Query session will have one Batch with the following job group structure:. ```; 1. read_table job group; - driver read_table job; 2. execute job group; - driver job; - stage 1 job group; - partition 1 job; - partition 2 job; …; - stage 2 job group; - partition 1 job; - partition 2 job; …; ```. but the current batch UI just has a jobs table listing all of the jobs in order of submission. It would be a huge boon to UX for users to be get a high level view of the structure of their query and to contextualize a failed job through its action > stage > partition structure. This should be an almost entirely front end change. It will likely involve additional HTTP endpoints but should not affect the batch data model or the way QoB engages with it. ### Version. 0.2.131. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14598:63,usab,usable,63,https://hail.is,https://github.com/hail-is/hail/issues/14598,2,"['UX', 'usab']","['UX', 'usable']"
Usability,"### What happened?. Most stored procedures take either a shared or exclusive lock on a relevant row of the `jobs` table near the start of the procedure, but not all. This appears to interact poorly with the `attempts_after_update` trigger as it attempts to take an exclusive lock on rows in the `jobs` table in the below join with the attempt resources tables. It's not clear exactly what the right fix is. It should be simple enough not to join on the jobs table in the `FOR UPDATE`, but we should also evaluate when in our various transactions a lock should be taken on the jobs table and whether it should be an X or S lock. ### Version. 0.2.128. ### Relevant log output. ```shell; ------------------------; LATEST DETECTED DEADLOCK; ------------------------; 2024-02-29 15:07:05 140331971655424; *** (1) TRANSACTION:; TRANSACTION 2486515, ACTIVE 0 sec inserting; mysql tables in use 27, locked 27; LOCK WAIT 16 lock struct(s), heap size 1128, 9 row lock(s), undo log entries 1; MySQL thread id 703, OS thread handle 140330830395136, query id 4745489 10.32.3.39 dgoldste-batch-user executing; INSERT INTO aggregated_billing_project_user_resources_v3 (billing_project, user, resource_id, token, `usage`); SELECT cur_billing_project, cur_user,; attempt_resources.deduped_resource_id,; rand_token,; msec_diff_rollup * quantity; FROM attempt_resources; WHERE attempt_resources.batch_id = NEW.batch_id AND attempt_resources.job_id = NEW.job_id AND attempt_id = NEW.attempt_id; FOR UPDATE; ON DUPLICATE KEY UPDATE `usage` = aggregated_billing_project_user_resources_v3.`usage` + msec_diff_rollup * quantity. *** (1) HOLDS THE LOCK(S):; RECORD LOCKS space id 351 page no 4 n bits 248 index PRIMARY of table `dgoldste-batch`.`instances_free_cores_mcpu` trx id 2486515 lock_mode X locks rec but not gap; Record lock, heap no 176 PHYSICAL RECORD: n_fields 4; compact format; info bits 0; 0: len 30; hex 62617463682d776f726b65722d64676f6c647374652d7374616e64617264; asc batch-worker-dgoldste-standard; (total ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14380:370,clear,clear,370,https://hail.is,https://github.com/hail-is/hail/issues/14380,3,"['clear', 'simpl', 'undo']","['clear', 'simple', 'undo']"
Usability,"### What happened?. Notify these threads on completion:; - https://hail.zulipchat.com/#narrow/stream/223457-Hail-Batch-support/topic/exporting.20sites.20only.20VCF/near/376801844. Using QoB, reading out of GCS, we encounter corrupted blocks on this simple pipeline. ```; Caused by: com.github.luben.zstd.ZstdException: Corrupted block detected; at com.github.luben.zstd.ZstdDecompressCtx.decompressByteArray(ZstdDecompressCtx.java:157) ~[zstd-jni-1.5.2-1.jar:1.5.2-1]; at com.github.luben.zstd.Zstd.decompressByteArray(Zstd.java:409) ~[zstd-jni-1.5.2-1.jar:1.5.2-1]; at is.hail.io.ZstdInputBlockBuffer.readBlock(InputBuffers.scala:649) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; at is.hail.io.BlockingInputBuffer.ensure(InputBuffers.scala:384) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; at is.hail.io.BlockingInputBuffer.readByte(InputBuffers.scala:402) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; ....; ```. A simplified version of the script:. ```python3; import hail as hl; import gnomad.utils.sparse_mt. tmp_dir = 'gs://bucket/'; vds_file = 'gs://neale-bge/bge-wave-1.vds'; out = 'gs://bucket/foo.vcf.bgz'. hl.init(default_reference = 'GRCh38',; tmp_dir = tmp_dir). vds = hl.vds.read_vds(vds_file); mt = hl.vds.to_dense_mt(vds); t = gnomad.utils.sparse_mt.default_compute_info(mt); t = t.annotate(info=t.info.drop('AS_SB_TABLE')); t = t.annotate(info = t.info.drop(; 'AS_QUALapprox', 'AS_VarDP', 'AS_SOR', 'AC_raw', 'AC', 'AS_SB'; )); t = t.drop('AS_lowqual'). hl.methods.export_vcf(dataset = t, output = out, tabix = True); ```. [batch-7751958-2713-main.log](https://github.com/hail-is/hail/files/12314207/batch-7751958-2713-main.log). ### Version. 0.2.120. ### Relevant log output. ```shell; Traceback (most recent call last):; File ""/Users/rye/Projects/VQSR/formatting-VQSR-vcf.py"", line 102, in <module>; main(args); File ""/Users/rye/Proj",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13409:249,simpl,simple,249,https://hail.is,https://github.com/hail-is/hail/issues/13409,1,['simpl'],['simple']
Usability,"### What happened?. Reported by https://hail.zulipchat.com/#narrow/stream/123010-Hail-Query-0.2E2-support/topic/Bugs.20of.20weights.20option.20in.20linear_regression_row/near/448000375. Simplified reproducer:; ```python; mt = hl.read_matrix_table('data/1kg.mt'); mt = mt.annotate_rows(weights=1); mt = mt.annotate_cols(y=1); gwas_weights = hl.linear_regression_rows(; y=mt.y,; x=mt.GT.n_alt_alleles(),; covariates=[1.0],; weights=mt.weights,; ); ```; Hits a `KeyError: 'va'` in CSE. Seems to only happen when given a `weights` argument. Why is this not hit by tests like `test_weighted_linear_regression`?. ### Version. 0.2.131-37a5ba226bae. ### Relevant log output. ```shell; ----> 1 gwas_weights = hl._linear_regression_rows_nd(y=mt.y,; 2 x=mt.GT.n_alt_alleles(),; 3 covariates=[1.0],; 4 weights=mt.weights). File <decorator-gen-1734>:2, in _linear_regression_rows_nd(y, x, covariates, block_size, weights, pass_through). File ~/hail/hail/python/hail/typecheck/check.py:585, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 582 @decorator; 583 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 584 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 585 return __original_func(*args_, **kwargs_). File ~/hail/hail/python/hail/methods/statgen.py:717, in _linear_regression_rows_nd(y, x, covariates, block_size, weights, pass_through); 714 res = res.select_globals(); 716 temp_file_name = hl.utils.new_temp_file(""_linear_regression_rows_nd"", ""result""); --> 717 res = res.checkpoint(temp_file_name); 719 return res. File <decorator-gen-1234>:2, in checkpoint(self, output, overwrite, stage_locally, _codec_spec, _read_if_exists, _intervals, _filter_intervals). File ~/hail/hail/python/hail/typecheck/check.py:585, in _make_dec.<locals>.wrapper(__original_func, *args, **kwargs); 582 @decorator; 583 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 584 args_, kwargs_ = check_all(__original_func, args,",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14594:186,Simpl,Simplified,186,https://hail.is,https://github.com/hail-is/hail/issues/14594,1,['Simpl'],['Simplified']
Usability,"### What happened?. Since we guarantee a job will run at least once, there are two issues that can happen:. 1. A user can write a pipeline in which two jobs race to write the same file, e.g.; ```; j = b.new_job(); j.command('echo hello > {j.out}'); j.write_output(j.out, ""gs://bucket/final-output""); ```; 2. Or, a clever user can avoid this race with some randomness:; ```; j = b.new_job(); j.command('echo hello gsutil cp - gs://bucket/final-output-$RANDOM'); ```. The former is a really common pattern and a bit of a footgun! The latter is rare (I don't know anyone who does it) and hard to work with: how would you know the output file of the *successful* attempt?. Hail should provide some mechanism for a user to get the list of successful attempts and their outputs. One simple option is to include some kind of seeded randomness which the user can access and to return either the seed or all the draws of the successful attempt for each job in `/jobs` or for the one job in `/job/{job_id}`. For example, consider:. ```; j = b.new_job(); j.command('echo hello gsutil cp - gs://bucket/final-output-$(/hail-random-str)'); ```. Where `/hail-random-str` is a binary we mount into the container that randomly generates numbers seeded by `(batch id, job id, attempt id)`. Hail should use the same randomness to ensure that `write_output` is reliable. We might also want a way to automatically remove the output files of the non-successful (e.g. preempted) attempts. ### Version. 0.2.120. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13502:777,simpl,simple,777,https://hail.is,https://github.com/hail-is/hail/issues/13502,1,['simpl'],['simple']
Usability,"### What happened?. The `hailtop` package contains some public interfaces like the `hailtop.batch` module, but also some internal utility modules that are subject to change without warning, like `hailtop.utils` or `hailtop.auth`. It is non-obvious which modules are considered ""private"" and therefore will likely encounter breaking changes, leading to unfortunate incompatibilities like with [changing the name of the rich progress bar](https://github.com/hail-is/hail/pull/13832#issuecomment-1788106993). We should do some investigative work to discern what functionality in `hailtop` people (primarily the `gnomad` team) depend on and create stable interfaces for that code, then mark the rest as being private or more obviously subject to change. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14007:423,progress bar,progress bar,423,https://hail.is,https://github.com/hail-is/hail/issues/14007,1,['progress bar'],['progress bar']
Usability,"### What happened?. The accounting term for what we call a resource is a ""SKU"". We need to update our SQL and front end to use this standard terminology so as to simplify interactions with financial professionals. ### Version. 0.2.124. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13791:162,simpl,simplify,162,https://hail.is,https://github.com/hail-is/hail/issues/13791,1,['simpl'],['simplify']
Usability,"### What happened?. The deduped_resource_id and resource_id columns should not both exist. Currently, when you add a new resource you have to first insert it (with a null deduped_resource_id) and then update the deduped_resource_id with whatever auto increment value your transaction won. We should collapse these columns (and keep an ""old_resource_id"", if necessary) so that our code base is simple to understand. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13657:393,simpl,simple,393,https://hail.is,https://github.com/hail-is/hail/issues/13657,1,['simpl'],['simple']
Usability,"### What happened?. This issue is complete when:; 1. We have merged a PR that provides a `hl.vds.export_svcr_vcf` with clear documentation and examples. The examples should include a `show` of the VDS variant and reference data as well as a `cat` of the SVCR VCF.; 2. We have merged a PR that provides `hl.vds.import_svcf_vcf`; 3. These methods have been expanded with a `split=True`/`=False` parameter which allow the user to choose between a two VCF and one VCF representation. NB: We have decided that SVCR-VCF should use ""LEN"" not ""END"". ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14010:119,clear,clear,119,https://hail.is,https://github.com/hail-is/hail/issues/14010,1,['clear'],['clear']
Usability,"### What happened?. To understand a running pipeline, I need realtime feedback on the profile, not just the final profile at the end of the job. I think `dump` will generate a flame graph on demand. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14073:70,feedback,feedback,70,https://hail.is,https://github.com/hail-is/hail/issues/14073,1,['feedback'],['feedback']
Usability,"### What happened?. Try running a job with `_machine_type: 'n1-highmem-64'`. This is necessary to get enough memory for some larger jobs (> ~200GB). Startup on the batch worker fails because the job is calculating how many theoretical network namespaces it could support (4 per CPU, 64 CPUS, plus some for JVMs), but not considering that the IPv4 schema puts a hard limit of 255 on namespaces if only one subnet value is changing each time. ### Version. Live 7/30/24. ### Relevant log output. _No response_. ### Security considerations:. Low risk of impacting security. High CPU machine types are not materially different from others with respect to security considerations, and the bug is a simple logic error.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14644:692,simpl,simple,692,https://hail.is,https://github.com/hail-is/hail/issues/14644,1,['simpl'],['simple']
Usability,"### What happened?. Using this image https://hub.docker.com/layers/gneak123/guide_browser/latest/images/sha256-8ca2a921828cd147e86519051a0da68522983b7b49f22e1280c83ab9c56b3129?context=explore, deploy a 1 pod deployment into a fresh namespace and serve it at guide-analysis.hail.is. It need not be in build.yaml nor in the infrastructure (just like Duncan's stuff isn't). We're just hosting it as a service to the lab. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14067:258,guid,guide-analysis,258,https://hail.is,https://github.com/hail-is/hail/issues/14067,1,['guid'],['guide-analysis']
Usability,"### What happened?. We [encode literals from Python as JSON](https://github.com/hail-is/hail/blob/main/hail/python/hail/ir/ir.py#L3637). This dramatically inflates the encoding of `hl.tarray(hl.tstruct(...))` because the struct fields are repeated. We should instead use `EncodedLiteral`. There are some subtleties:. 1. We need to implement an encoder in Python. We currently have a decoder (`_from_encoding` and `_convert_from_encoding`) which implements `{""name"":""StreamBufferSpec""}`. We should write an encoder for that.; 2. Our IR is plaintext, so we'll need to encode this binary encoding as base64 so it may be included in plaintext.; 3. `EncodedLiteral` is not currently parsable (it throws `UnsupportedOperationException` in `ir/Parser.scala`). As mentioned in (2), we'll need to implement parsing. For (3), just represent the `AbstractTypedCodecSpec` in terms of a virtual type ~~and a buffer spec~~ (assume the buffer spec is StreamBufferSpec). When parsing, we can construct an `EncodedLiteral` with the base64-decoded value and a codec spec we construct like this:; ```scala; val codec = TypedCodecSpec(; EType.fromTypeAllOptional(virtualType),; virtualType,; BufferSpec.parseOrDefault(bufferSpecString); ); ```. For (1), it should be simple enough to invert the logic from `_convert_from_encoding` to encode rather than decode. Write tests that round-trip in Python for lots of types. . ---. See also https://github.com/hail-is/hail/issues/13748. ### Version. 0.2.142. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13757:1247,simpl,simple,1247,https://hail.is,https://github.com/hail-is/hail/issues/13757,1,['simpl'],['simple']
Usability,"### What happened?. We expect the matrix table abstraction to break down at 2M+ samples. Consider that each row now has 2M entries. Even if all the RAM of a highmem machine was made available to row processing, we only have 6.5kB per sample. This is a fair bit of memory! But many reasonable Hail pipelines will generate enough garbage to overflow this. We must develop a block-partitioned matrix table. Instead of each partition containing the entries for every column and a subset of rows, each partition will contain the entries for a subset of rows and columns. While there are many ways to do this partitioning, a simple and workable first try is a ""grid""-like partitioning. Every matrix table has a set of row-key intervals and column-key intervals which define the partitioning. The bounds of the partitions are given by the cross product of these sets of intervals. The visual conception of the partitioning of this matrix table (with its globals, column margin data, row margin data, and entry data) might look like:. ```; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; +--+ +-----+--+--++---+------+------+. ck1 ck2 ...; +--+ rk1 +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; +--+ rk2 +-----+--+--++---+------+------+; | | | | | || | | |; +--+ ... +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; +--+ +-----+--+--++---+------+------+; | | | | | || | | |; | | | | | || | | |; | | | | | || | | |; +--+ +-----+--+--++---+------+------+; ```. The first row-key interval is `[rk1, rk2)`. The first col-key interval is `[ck1, ck2)`. These intervals are define a ""rectangle"" corresponding to the first partition. . All the partitions in the fourth partition column are empty (perhaps these column keys are absent in this dataset). Likewise, all the partitions in the fifth partition row are emp",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13800:619,simpl,simple,619,https://hail.is,https://github.com/hail-is/hail/issues/13800,1,['simpl'],['simple']
Usability,"### What happened?. We have reported to their GitHub, but we don't have a simple enough repro for them to make progress. https://github.com/Azure/azure-sdk-for-java/issues/35125. Personal correspondence with some MSFT researchers suggested there could be an issue with threading:; > It sort of reminds me of an issue we saw with Cromwell where their old akka pool code caused a bunch of unexpected network behavior that broke their API in certain cases. I've asked if BlobServiceClient is thread-safe or not. We share an object of that class, but none of the things it produces (e.g. blobs). We know that the java.io libraries can improperly drop an HTTP response if it is followed by a TCP RST. In particular, we've seen this happen when a server is load shedding and sends an HTTP ""429 Too Many Requests"" rapidly followed by a TCP RST. This might explain the ""Connection reset"" errors that we sometimes see. We have fewer intuitions about the ""Stream is already closed"". That specific error was reported to Azure in the aforementioned GitHub issue. We treat both stream is closed and connection reset as ""limited retry"" errors. We might retry too quickly. Our initial delay is `100ms * x` where `x` is drawn uniformly from `[0, 1]`. Perhaps we should try an initial delay of at least 1s? . For example, [Azure gives as an example retrying after 2s, 4s, 10s, and 30s](https://learn.microsoft.com/en-us/azure/storage/blobs/storage-performance-checklist#timeout-and-server-busy-errors). Google's [code examples](https://cloud.google.com/storage/docs/retry-strategy#client-libraries_1) suggest an initial delay of 1s with a multiplier of 2. AWS seems to use 500ms as the [default base backoff for ""throttled"" exceptions](https://github.com/aws/aws-sdk-java/blob/master/aws-java-sdk-core/src/main/java/com/amazonaws/retry/PredefinedBackoffStrategies.java#L39). ### Version. 0.2.120. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13351:74,simpl,simple,74,https://hail.is,https://github.com/hail-is/hail/issues/13351,3,"['intuit', 'learn', 'simpl']","['intuitions', 'learn', 'simple']"
Usability,"### What happened?. [SAIGE](https://github.com/weizhouUMICH/SAIGE) and its competitor [REGENIE](https://rgcgithub.github.io/regenie/) are the standard bearers for modern GWAS. Hail should expose SAIGE within the Hail Query language. The interface should roughly match `hl.linear_regression_rows`. A Batch pipeline would serve the needs of Broadies (and, indeed, such a pipeline already exists) but has two downsides:; 1. There is substantial I/O involved in exporting the data from Hail-native formats to SAIGE-compatible formats.; 2. Non-Broadies cannot use this pipeline. Query language support for SAIGE would transform the accessibility of SAIGE by making it usable at scale by anyone with access to Hail, which is basically anyone with a large dataset (e.g. [DNANexus](https://med.stanford.edu/gbsc/projects/vapahcs.html), [AoU RWB](https://support.researchallofus.org/hc/en-us/articles/6090679838100-How-to-Work-with-All-of-Us-Genomic-Data-Hail-Plink-), [MVP](https://med.stanford.edu/gbsc/projects/vapahcs.html), [FinnGen](https://www.medrxiv.org/content/10.1101/2022.03.03.22271360v1.full)). There are two options:; 1. Determine and implement the linear algebraic primitives necessary for SAIGE.; 2. Compile and link directly against SAIGE. Expose these functions, via JNI, to the Hail Query language. ### Version. 0.2.120. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13442:663,usab,usable,663,https://hail.is,https://github.com/hail-is/hail/issues/13442,1,['usab'],['usable']
Usability,"### What happened?. `add_liftover` fails when provided a local chain file on Dataproc. The error says the file does not exist, even though it does. . ## To reproduce; This is run in my GCP virtual machine following a simple example from [your documentation](https://github.com/hail-is/hail/blob/67801dfc66b504a7d49daa53f7ec6d22c1194585/hail/python/hail/genetics/reference_genome.py#L467):; ```sh; gsutil cp gs://hail-common/references/grch37_to_grch38.over.chain.gz .; ```; ```py; import hail as hl; from pathlib import Path. local_chain_file = 'grch37_to_grch38.over.chain.gz'. if Path(local_chain_file).is_file():; rg37 = hl.get_reference('GRCh37'); rg38 = hl.get_reference('GRCh38'); rg37.add_liftover(local_chain_file, rg38); ```; I've reproduced the bug trying with relative/absolute paths, and also referring to HDFS and the local filesystem. None of them worked on the GCP VM, however reading local chain files works on my computer. ### Version. 0.2.126-ee77707f4fab. ### Relevant log output. ```shell; ---------------------------------------------------------------------------; FatalError Traceback (most recent call last); <ipython-input-17-ef14f8017832> in <cell line: 3>(); 4 rg37 = hl.get_reference('GRCh37'); 5 rg38 = hl.get_reference('GRCh38'); ----> 6 rg37.add_liftover(local_chain_file, rg38); 7. <decorator-gen-150> in add_liftover(self, chain_file, dest_reference_genome). /opt/conda/miniconda3/lib/python3.10/site-packages/hail/typecheck/check.py in wrapper(__original_func, *args, **kwargs); 585 def wrapper(__original_func: Callable[..., T], *args, **kwargs) -> T:; 586 args_, kwargs_ = check_all(__original_func, args, kwargs, checkers, is_method=is_method); --> 587 return __original_func(*args_, **kwargs_); 588; 589 return wrapper. /opt/conda/miniconda3/lib/python3.10/site-packages/hail/genetics/reference_genome.py in add_liftover(self, chain_file, dest_reference_genome); 507 """"""; 508; --> 509 Env.backend().add_liftover(self.name, chain_file, dest_reference_genome.name);",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13993:217,simpl,simple,217,https://hail.is,https://github.com/hail-is/hail/issues/13993,1,['simpl'],['simple']
Usability,"### What happened?. `hl.maximal_independent_set` should return the same independent set regardless of the ordering of the input table. gnomAD team reports that the returned set can differ depending on whether or not the input table had been written or came directly from PC-Relate. I have yet to create a simple reproducible example. Permuting the entries in this array does not change the output. I always get 'a' and 'b'. I suspect this is because what really matters is the order in which we traverse the entries of the multi map which depends on the hash of the nodes. I think a durable fix might be to eliminate the MultiMap, insert all the nodes into the binary heap, then increment priority for each edge detected. This will perform more reflows of the heap, but eliminates the non-determinism of MultiMap iteration order. ```; import hail as hl; ht = hl.Table.parallelize([; hl.Struct(i=hl.Struct(s=x[0]), j=hl.Struct(s=x[1])); for x in [('c', 'a'), ('a', 'b'), ('b', 'c'), ]; ]); hl.maximal_independent_set(ht.i, ht.j, False).collect(); ```. ### Version. 0.2.122. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13635:305,simpl,simple,305,https://hail.is,https://github.com/hail-is/hail/issues/13635,1,['simpl'],['simple']
Usability,"### What happened?. e.g. see an attempt to use build_python_image to execute some Hail code in the cloud: https://hail.zulipchat.com/#narrow/stream/223457-Hail-Batch-support/topic/Error.20in.20QoB.3A.20unknown.20opcode. We should provide users with a simple and straightforward project structure and mechanism for working with a local Python project, its Python dependencies, including, possibly, Hail. It seems to me that a relatively straightforward way to do this would be to recommend the user create a normal, installable python package (and provide instructions on doing so), and then to provide some Hail Batch client functionality that builds an image based on `hailgenetics/hail` (if Hail is required) or `hailgenetics/python-dill` or a user-provided base image (which must have Python, but we'll ensure dill gets installed). The Dockerfile should look something like:. ```; FROM {base_image}; COPY {users_project_dir} /users_project; RUN pip install /users_project; ```. And then that image can be used as the python_default_image (maybe also the default_image?). ### Version. 0.2.117. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13161:251,simpl,simple,251,https://hail.is,https://github.com/hail-is/hail/issues/13161,1,['simpl'],['simple']
Usability,"### What happened?. https://batch.hail.is/batches/8083756/jobs/72. `test_hail_in_notebook` just executed `jupyter` on `test_hail_in_notebook.ipynb`. The notebook contains one cell:. ```python3; import hail as hl; import os; hl.utils.range_table(1).write(f'{os.environ[""HAIL_TEST_STORAGE_URI""]}/test_hail_in_notebook.ht'); from helpers import resource; hl.read_table(resource('backward_compatability/1.7.0/table/9.ht')).count(); ```. This is not idempotent because `HAIL_TEST_STORAGE_URI` is randomly generated once per job not once per attempt. In particular, the job specification itself has this as an environment variable. In the [this PR test job](https://batch.hail.is/batches/8083756/jobs/72), the test job gets preempted and rescheduled. Upon rescheduling, the hail table already exists, causing the test to fail. The fix is simple: add a random string to the written Hail table file. ### Version. 0.2.126. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13994:832,simpl,simple,832,https://hail.is,https://github.com/hail-is/hail/issues/13994,1,['simpl'],['simple']
Usability,"###Hail version; N/A Kubernetes v1 API, cluster version 1.10.11. ### What you did; Attempted to schedule a pod through app.hail.is. Waited ~20 minutes. ### What went wrong (all error messages here, including the full java stack trace); Simply stuck in Not PodScheduled (status.condition contains an entry of {status: False, type: PodScheduled} ). This status is also verified using kubectl get pods -w. Total number of pods did not seem onerous by quantity alone, so this must be an issue of resource utilization by some of these pods. ```sh; NAME READY STATUS RESTARTS AGE; apiserver-8658d59d48-r8p6w 1/1 Running 0 9d; auth-gateway-deployment-7d7cf8846f-l5m9b 1/1 Running 0 14h; batch-deployment-6448f84d9c-gxn2c 1/1 Running 0 1h; dk-test-58dffcd944-9xkkx 1/1 Running 0 11d; frontend-766c875db4-cmpvx 1/1 Running 0 8d; gateway-deployment-78c4dd64f5-tdnnc 1/1 Running 0 1h; hail-ci-deployment-5744fd6964-s29xb 1/1 Running 0 1h; image-fetcher-bkpcc 1/1 Running 0 23m; image-fetcher-gb9rs 1/1 Running 0 26m; image-fetcher-glj5p 1/1 Running 0 25m; image-fetcher-kjd7z 1/1 Running 0 23m; image-fetcher-vhv74 1/1 Running 0 25m; image-fetcher-zppvc 1/1 Running 0 24m; notebook-api-deployment-7bb85bfd-z6mvp 1/1 Running 0 12h; notebook-deployment-8546dbcb7c-zfc4r 1/1 Running 0 1h; notebook-worker-2lt2l 1/1 Running 0 46m; notebook-worker-77nqq 1/1 Running 0 1h; notebook-worker-fljx6 1/1 Running 0 3h; notebook-worker-gm6lz 1/1 Running 0 36m; notebook-worker-kj7bb 1/1 Running 0 3h; notebook-worker-n8dgv 0/1 Pending 0 4m; notebook-worker-pshdf 1/1 Running 0 35m; scorecard-deployment-654f774444-vwpzr 1/1 Running 0 51m; site-deployment-6789bd6c5b-lxbxk 1/1 Running 0 51m; spark-master-6f7678b449-jcbnp 1/1 Running 0 9d; spark-worker-569866dff7-l452k 1/1 Running 0 9d; spark-worker-569866dff7-xzmx4 1/1 Running 0 9d; upload-658d7f8c7d-gvj4h 1/1 Running 0 51m; web-deployment-bc6497cdb-qfc9g 1/1 Running 0 2h; ```",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5269:236,Simpl,Simply,236,https://hail.is,https://github.com/hail-is/hail/issues/5269,1,['Simpl'],['Simply']
Usability,"#14056 added a new optional field to the deploy config, `base_path` which is intended to phase out `default_namespace`. But for backwards compatibility reasons we cannot yet remove `default_namespace`. This should all work fine without breaking any workflows like switching back and forth between namespaces so long as `base_path` is not explicitly set in a developer's deploy config. But `hailctl dev config set <property> <value>` does not just set a single property, it loads the deploy config, sets the property, and then writes the whole deploy config back. If the deploy config does anything with default values, which it now does with `base_path`, this round trip does not work. Another simpler example is that currently in main, the following will make two changes to a deploy config not one:. ```; # deploy config of {'location': 'external', 'domain': 'hail.is', 'default_namespace': 'default'}; HAIL_DOMAIN=foo hailctl dev config set location gce. # deploy config will now read {'location': 'gce', 'domain': 'foo', 'default_namespace': 'default'}; ```. This PR should change `hailctl dev config set` so that the only changes that are made to the deploy config are the single property/value change described in the command.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14169:694,simpl,simpler,694,https://hail.is,https://github.com/hail-is/hail/pull/14169,1,['simpl'],['simpler']
Usability,"#4659 teaches CI to recover from a build job gone missing, but; I neglected to teach CI how to recover from a deploy job gone; missing. This follows the same strategy but for deploy jobs. If a deploy job is not found in the list of refreshed jobs; it is simply removed from the deploy_jobs map. The next heal; stage of CI will kick off a new batch job for whatever the; latest undeployed SHA is.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4683:254,simpl,simply,254,https://hail.is,https://github.com/hail-is/hail/pull/4683,1,['simpl'],['simply']
Usability,"#9425 fixes the bug that caused us to need to checkpoint twice. This PR removes the second checkpoint. For the `hl.balding_nichols_model(20, 6000, 50000)`, 2 iterations test I've been doing, this gets us down to more like 35 seconds, as opposed to ~40. Current hail PCA takes more like 16 seconds, so we are getting closer (though again, it's not clear that 2 is going to be the right number of iterations in the end).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9434:347,clear,clear,347,https://hail.is,https://github.com/hail-is/hail/pull/9434,1,['clear'],['clear']
Usability,"#9634 Introduced a large performance regression in the `linear_regression_rows_nd` benchmark (making it about 4x slower). This PR fixes that by doing two things:. 1. Move all the global into one single `annotate_globals` expression, so that CSE can work properly. This required fixing a bug in some ndarray expressions that were not correctly tracking their source tables. To make sure I was only referencing the global versions of this computed things, rather accidentally recomputing, I wrapped the global setup in a function to scope the variables. This improvement was minor, didn't hit the real root of the problem. 2. Much more significantly, and not 100% clear why: `process_y_group` is now a function that returns a python dictionary, instead of a hail struct. I can guess that the allocation required by making a struct was wasteful, but it seems crazy that it was ""make the benchmark 4x slower"" amounts of wasteful. . While this is not user facing yet, would be good to get this in before an eventual 0.2.60 release if we want to avoid benchmarks regressing between versions.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9666:662,clear,clear,662,https://hail.is,https://github.com/hail-is/hail/pull/9666,1,['clear'],['clear']
Usability,$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.colle,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7847,Simpl,Simplify,7847,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$$anonfun$is$hail$expr$ir$FreeVariables$$compute$1$1.apply(FreeVariables.scala:27); at is.hail.expr.ir.FreeVariables$$anonfun$is$hail$expr$ir$FreeVariables$$compute$1$1.apply(FreeVariables.scala:24); at scala.collection.Iterator$$anon$11.next(Iterator.scala:410); at scala.collection.Iterator$class.foreach(Iterator.scala:891); at scala.collection.AbstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:6839,Simpl,Simplify,6839,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"(and to be clear, I'm onboard with the idea of a single command which gets you from zero to simple batch pipelines; jury is out on the Artifact Registry. I think making sure that's configured correctly might be better upstreamed to Sam. Normal users might not have permission to enable/disable things like that.).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13279#issuecomment-1662843157:11,clear,clear,11,https://hail.is,https://github.com/hail-is/hail/pull/13279#issuecomment-1662843157,4,"['clear', 'simpl']","['clear', 'simple']"
Usability,"(on restart, CI doesn't know that feature branches have been previously tested against master, so it tries to get at least one status finished, for developer feedback purposes)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/5550#issuecomment-471026373:158,feedback,feedback,158,https://hail.is,https://github.com/hail-is/hail/issues/5550#issuecomment-471026373,2,['feedback'],['feedback']
Usability,"(x).; 0, 0); ```; but I'm not sure I really like any of them.; * the scoping for `Recur` is difficult to check and enforce.; * It's difficult to check if a TailLoop is invalidly attempting to recur a function from a different loop (in a nested environment), except by the type signature. I think I could give each loop a name so that `Recur` unambiguously refers to a loop defined in the surrounding scope, mostly treating `Recur` as something of a function reference.; * The code generation is rather inconsistent, since the `Recur` node technically has the same type as the return type of the function, but the code generated needs to be a jump node with no actual value (which makes the generated EmitTriplet look a lot like it has type TVoid!); * @patrick-schultz proposed a similar design, but with two additional types to make the difference between the type of the `Recur` concept and the actual return type more explicit. I have not yet implemented it because I think it might make this python interface more difficult to support, and I rather like its simplicity.; * @patrick-schultz and I were talking about rewriting loops in the stream interface.; * We can only emit calls to recur in the same method that the original loop is defined in, because we are using jumps to implement them. This means we need to know that we are not going to wrap any calls that contain `Recur` in a method. I don't believe there are any cases where we wrap `If` conditions or `Let` bodies in methods, so this is fine for now, but we're not enforcing it in any way. I believe that the iteration for the stream codegen stuff will always be in the same method, so we wouldn't have to deal with this specially there.; * I've implemented a pretty simple version of here, as part of the `Streamify` pass. I believe it should handle all the valid tail-recursive cases, but I don't think we want to use it right now since it'll always allocate (as opposed to not allocating if all state is primitive). We could potenti",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7614:2130,simpl,simplicity,2130,https://hail.is,https://github.com/hail-is/hail/pull/7614,1,['simpl'],['simplicity']
Usability,") # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/expr/expressions/typed_expressions.py:1312: >>> hl.eval(d.keys()) # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/expr/expressions/typed_expressions.py:1329: >>> hl.eval(d.map_values(lambda x: x * 10)) # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/expr/expressions/typed_expressions.py:1366: >>> hl.eval(d.values()) # doctest: +NOTEST; Binary file /Users/dking/projects/hail/hail/python/hail/expr/expressions/__pycache__/typed_expressions.cpython-37.pyc matches; Binary file /Users/dking/projects/hail/hail/python/hail/__pycache__/table.cpython-37.pyc matches; Binary file /Users/dking/projects/hail/hail/python/hail/__pycache__/matrixtable.cpython-37.pyc matches; /Users/dking/projects/hail/hail/python/hail/docs/guides/basics.rst:95: >>> mt.describe() # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/guides/basics.rst:141: >>> ht.describe() # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/guides/basics.rst:164: >>> mt.s.describe() # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/functions/random.rst:21: >>> hl.eval(x) # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/functions/random.rst:24: >>> hl.eval(x) # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/functions/random.rst:27: >>> hl.eval(hl.rand_unif(0, 1)) # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/functions/random.rst:30: >>> hl.eval(hl.rand_unif(0, 1)) # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/functions/random.rst:33: >>> hl.eval(hl.array([x, x, x])) # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/functions/random.rst:42: >>> hl.eval(hl.array([a, b, c])) # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/functions/random.rst:50: >>> table.show() # doctest: +NOTEST; /Users/dking/projects/hail/hail/python/hail/docs/functions/random.rst",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4817#issuecomment-506359198:9267,guid,guides,9267,https://hail.is,https://github.com/hail-is/hail/issues/4817#issuecomment-506359198,2,['guid'],['guides']
Usability,") (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-logging/compare/v2.6.0...v2.7.0"">2.7.0</a> (2021-11-02)</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use struct",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:9773,guid,guide,9773,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['guid'],['guide']
Usability,") (<a href=""https://github.com/googleapis/python-logging/commit/e0c5fc02160ae87faf4ba5c2b62be86de6b02cf3"">e0c5fc0</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>allow reading logs from non-project paths (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/444"">#444</a>) (<a href=""https://github.com/googleapis/python-logging/commit/97e32b67603553fe350b6327455fc9f80b8aa6ce"">97e32b6</a>)</li>; <li>api consistency between HTTP and Gapic layers (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/375"">#375</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e1506fa9030776353878048ce562c53bf6ccf7bf"">e1506fa</a>)</li>; </ul>; <h3>Miscellaneous Chores</h3>; <ul>; <li>deprecate AppEngineHandler and ContainerEngineHandler (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/310"">#310</a>) (<a href=""https://github.com/googleapis/python-logging/commit/e3cac888d40bf67af11e57b74615b0c3b8e8aa3e"">e3cac88</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>update usage guide for v3.0.0 (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/456"">#456</a>) (<a href=""https://github.com/googleapis/python-logging/commit/8a67b73cdfcb9da545671be6cf59c724360b1544"">8a67b73</a>)</li>; </ul>; <h2>v2.7.0</h2>; <h3>Features</h3>; <ul>; <li>add context manager support in client (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/415"">#415</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/f5af16439807a0954ee78fa91cb69b9493b80176"">f5af164</a>)</li>; <li>added support for iam AuditData proto (<a href=""https://github-redirect.dependabot.com/googleapis/python-logging/issues/396"">#396</a>) (<a href=""https://www.github.com/googleapis/python-logging/commit/e3a1eba74dd8b67bcc73a78f784189ef2a9927c2"">e3a1eba</a>)</li>; <li>use structured logging on GCF with python 3.7 (<a href=""https://github-redirect.dependabot.com/googleapis/pyt",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11574:4340,guid,guide,4340,https://hail.is,https://github.com/hail-is/hail/pull/11574,1,['guid'],['guide']
Usability,") [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht\""}""] ; !191 = MakeStruct(); !192 = WriteMetadata(!191) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht/globals\""}""] ; !193 = MakeStruct(); !194 = WriteMetadata(!193) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht/cols\""}""] ; !195 = MakeStruct(); !196 = WriteMetadata(!195) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht/rows\""}""] ; !197 = MakeStruct(); !198 = WriteMetadata(!197) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht/entries\""}""]; !199 = Begin(!154, !160, !166, !169, !172, !176, !188, !190, !192, !194, !196, !198); Begin(!11, !199); ```. </details>. Notice that, after lowering to CDAIR, the `WriteMetadata` for; `gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht`, `....ht/globals`, `....ht/cols`,; `...ht/rows`, and `...ht/entries` all appear thrice. The error message is clearly coming from; `WriteMetadata` writing into the root of the Hail Table. ```; !1 = MakeStruct(); !2 = WriteMetadata(!1) [""{\""path\"":\""gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht\"",\""overwrite\"":false,\""refs\"":{\""rowType\"":\""Struct{locus:Locus(GRCh38),alleles:Array[String],filters:Set[String],a_index:Int32,was_split:Boolean,variant_qc:Struct{gq_stats:Struct{mean:Float64,stdev:Float64,min:Float64,max:Float64},call_rate:Float64,n_called:Int64,n_not_called:Int64,n_filtered:Int64,n_het:Int64,n_non_ref:Int64,het_freq_hwe:Float64,p_value_hwe:Float64,p_value_excess_het:Float64},info:Struct{AC:Array[Int32],AF:Array[Float64],AN:Int32,homozygote_count:Array[Int32]},`the entries! [877f12a8827e18f61222c6c8c5fb04a8]`:Array[Struct{GT:Call,GQ:Int32,RGQ:Int32,FT:String,AD:Array[Int32]}]}\"",\""key\"":[\""locus\"",\""alleles\""],\""globalType\"":\""Struct{__cols:Array[Struct{s:String,mt_sample_qc:Struct{gq_stats:Struct{mean:Float64,stdev:Float64,min:Float64,max:Float64},call_rate:Float64,n_called:Int64,n_not_called:Int64",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13809:42446,clear,clearly,42446,https://hail.is,https://github.com/hail-is/hail/issues/13809,1,['clear'],['clearly']
Usability,"* **#14451** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14451?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14451#issuecomment-2045755749:357,Learn,Learn,357,https://hail.is,https://github.com/hail-is/hail/pull/14451#issuecomment-2045755749,1,['Learn'],['Learn']
Usability,"* **#14455** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14455?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14455#issuecomment-2046054784:357,Learn,Learn,357,https://hail.is,https://github.com/hail-is/hail/pull/14455#issuecomment-2046054784,1,['Learn'],['Learn']
Usability,"* **#14496** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14496?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14509](https://github.com/hail-is/hail/pull/14509) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14509?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14514](https://github.com/hail-is/hail/pull/14514) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14514?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>) 👈; * **#14495** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14495?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14475** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14475?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14496#issuecomment-2070873404:1399,Learn,Learn,1399,https://hail.is,https://github.com/hail-is/hail/pull/14496#issuecomment-2070873404,1,['Learn'],['Learn']
Usability,"* **#14496** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14496?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14509](https://github.com/hail-is/hail/pull/14509) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14509?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14514](https://github.com/hail-is/hail/pull/14514) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14514?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14495** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14495?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14475** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14475?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14495#issuecomment-2070873392:1399,Learn,Learn,1399,https://hail.is,https://github.com/hail-is/hail/pull/14495#issuecomment-2070873392,1,['Learn'],['Learn']
Usability,"* **#14496** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14496?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14509](https://github.com/hail-is/hail/pull/14509) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14509?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14514](https://github.com/hail-is/hail/pull/14514) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14514?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14495** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14495?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14475** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14475?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14475#issuecomment-2059793128:1399,Learn,Learn,1399,https://hail.is,https://github.com/hail-is/hail/pull/14475#issuecomment-2059793128,1,['Learn'],['Learn']
Usability,"* **#14514** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14514?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14509](https://github.com/hail-is/hail/pull/14509) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14509?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14554](https://github.com/hail-is/hail/pull/14554) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14554?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>) 👈; * **#14517** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14517?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14514#issuecomment-2086536884:1163,Learn,Learn,1163,https://hail.is,https://github.com/hail-is/hail/pull/14514#issuecomment-2086536884,1,['Learn'],['Learn']
Usability,"* **#14514** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14514?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14509](https://github.com/hail-is/hail/pull/14509) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14509?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14554](https://github.com/hail-is/hail/pull/14554) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14554?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14517** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14517?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14517#issuecomment-2091504683:1163,Learn,Learn,1163,https://hail.is,https://github.com/hail-is/hail/pull/14517#issuecomment-2091504683,1,['Learn'],['Learn']
Usability,"* **#14533** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14533?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14509** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14509?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14514** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14514?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 1 other dependent PR ([#14554](https://github.com/hail-is/hail/pull/14554) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14554?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14517** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14517?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14509#issuecomment-2080036916:1364,Learn,Learn,1364,https://hail.is,https://github.com/hail-is/hail/pull/14509#issuecomment-2080036916,1,['Learn'],['Learn']
Usability,"* **#14547** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14547?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14547#issuecomment-2105153451:357,Learn,Learn,357,https://hail.is,https://github.com/hail-is/hail/pull/14547#issuecomment-2105153451,1,['Learn'],['Learn']
Usability,"* **#14551** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14551?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14550** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14550?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14551#issuecomment-2108604092:593,Learn,Learn,593,https://hail.is,https://github.com/hail-is/hail/pull/14551#issuecomment-2108604092,1,['Learn'],['Learn']
Usability,"* **#14551** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14551?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14550** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14550?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14550#issuecomment-2108442266:593,Learn,Learn,593,https://hail.is,https://github.com/hail-is/hail/pull/14550#issuecomment-2108442266,1,['Learn'],['Learn']
Usability,"* **#14553** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14553?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14553#issuecomment-2110596841:357,Learn,Learn,357,https://hail.is,https://github.com/hail-is/hail/pull/14553#issuecomment-2110596841,1,['Learn'],['Learn']
Usability,"* **#14554** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14554?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14514** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14514?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 1 other dependent PR ([#14509](https://github.com/hail-is/hail/pull/14509) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14509?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14517** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14517?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14554#issuecomment-2110766283:1128,Learn,Learn,1128,https://hail.is,https://github.com/hail-is/hail/pull/14554#issuecomment-2110766283,1,['Learn'],['Learn']
Usability,"* **#14578** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14578?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14578#issuecomment-2163445582:357,Learn,Learn,357,https://hail.is,https://github.com/hail-is/hail/pull/14578#issuecomment-2163445582,1,['Learn'],['Learn']
Usability,"* **#14582** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14582?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14582#issuecomment-2166604877:357,Learn,Learn,357,https://hail.is,https://github.com/hail-is/hail/pull/14582#issuecomment-2166604877,1,['Learn'],['Learn']
Usability,"* **#14638** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14638?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14638#issuecomment-2252777195:357,Learn,Learn,357,https://hail.is,https://github.com/hail-is/hail/pull/14638#issuecomment-2252777195,1,['Learn'],['Learn']
Usability,"* **#14663** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14663?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14662** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14662?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14662#issuecomment-2302524285:593,Learn,Learn,593,https://hail.is,https://github.com/hail-is/hail/pull/14662#issuecomment-2302524285,1,['Learn'],['Learn']
Usability,"* **#14673** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14673?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14673#issuecomment-2334696866:357,Learn,Learn,357,https://hail.is,https://github.com/hail-is/hail/pull/14673#issuecomment-2334696866,1,['Learn'],['Learn']
Usability,"* **#14684** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14684?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14686](https://github.com/hail-is/hail/pull/14686) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14686?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14747](https://github.com/hail-is/hail/pull/14747) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14747?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>) 👈; * **#14683** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14683?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @ehigham and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14684#issuecomment-2349934247:1163,Learn,Learn,1163,https://hail.is,https://github.com/hail-is/hail/pull/14684#issuecomment-2349934247,1,['Learn'],['Learn']
Usability,"* **#14684** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14684?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14686](https://github.com/hail-is/hail/pull/14686) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14686?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14747](https://github.com/hail-is/hail/pull/14747) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14747?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14683** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14683?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @ehigham and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14683#issuecomment-2349934211:1163,Learn,Learn,1163,https://hail.is,https://github.com/hail-is/hail/pull/14683#issuecomment-2349934211,1,['Learn'],['Learn']
Usability,"* **#14745** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14745?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14745#issuecomment-2435880729:357,Learn,Learn,357,https://hail.is,https://github.com/hail-is/hail/pull/14745#issuecomment-2435880729,1,['Learn'],['Learn']
Usability,"* Remove `UnpartitionedRVD`; * Combine `OrderedRVD` and `RVD` into one class, called `RVD`; * With the hierarchy collapsed, reorganize and simplify new `RVD` API. This touches a lot of lines, so I was careful to organize it into small commits, with good commit descriptions. In particular, ""reorder OrderedRVD methods"" *only* reorders, and ""OrderedRVD -> RVD"" *only* renames. Those two account for most of the line-change count, other than deleted files.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4354:139,simpl,simplify,139,https://hail.is,https://github.com/hail-is/hail/pull/4354,1,['simpl'],['simplify']
Usability,* compiled iterators use the wrong region; * TableRange generates IR that does not flag itself as memory managed; * TableParallelize generates IR that does not flag itself as memory managed; * RepartitionNoShuffle generates a mixed flatMap; make it all memory managed for simplicity.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10416:272,simpl,simplicity,272,https://hail.is,https://github.com/hail-is/hail/pull/10416,1,['simpl'],['simplicity']
Usability,* don't use inefficient unapply; * Cache the returnType of AggSignatures so they persist through copies. ```; Name Ratio Time 1 Time 2; ---- ----- ------ ------; table_big_aggregate_compilation 85.6% 4.113 3.519; ----------------------; Geometric mean: 85.6%; Simple mean: 85.6%; Median: 85.6%; ```,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7355:260,Simpl,Simple,260,https://hail.is,https://github.com/hail-is/hail/pull/7355,1,['Simpl'],['Simple']
Usability,"* fixed finally. * evict Spark BlockMatrix and friends. * remove old test suite. * a bunch more cleanups. * simplify grid partitioner. * fix test. * remove unneeded try-catches. * organization. * add a test suite for HBM. * help closure serializer. * use correct aggregation method, add test. * test+fix bug grid partitioner. * wip zippartitions. * teach tests to tolerate NaNs. * fix test. * kinda works again. * remove unnecessary trys. * handle transposition in map*. * clean up imports. * standardize langauge. * bunch of comments addressed. * improve error message. * fix python. * rename HailBlockMatrix -> BlockMatrix. * a bunch of comments addressed. * more comments addressed. * make test comment not confusing. * fix rebase error. * fixes. * fix. * fix bug in rirm. * gotta get that transpose right. * test fixes. * dan is a dummy. * commits got lost for sure. * realize transpose when writing. * add indexed tests for map2?WithIndex when transposed. * use Gen.denseMatrix. * use Gen.denseMatrix. * final fixes. * toLocalMatrix returns Spark matrix for backwards compatibility. * avoid an array copy. the BDMs produced by BlockMatrix.toLocalMatrix are in a; ""normal form"", i.e. offset 0, column-major stride, non-; transposed. Given this assumption we can quickly produce a; Spark-style local matrix. * dan is a dummy. * collect-in-order. collect doesn't guarantee order. * do not use BDM.data naively. This was the true root casue: an incorrect test. * fix python interface. * in python, java fields are methods. note the addition of parentheses",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2329:108,simpl,simplify,108,https://hail.is,https://github.com/hail-is/hail/pull/2329,1,['simpl'],['simplify']
Usability,**This is not meant to be merged yet!**. I want to get feedback on the structure I have in place before I fill in all of the docstrings and parameter descriptions. I also need to clean up some of the code. The ``fet`` function and ``Variant`` object methods are the prototypes.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1271:55,feedback,feedback,55,https://hail.is,https://github.com/hail-is/hail/pull/1271,1,['feedback'],['feedback']
Usability,", using the class's values for <code>cls.identchars</code> and <code>cls.identbodychars</code>. Now Unicode-aware parsers that formerly wrote:</p>; <pre><code>ppu = pyparsing.unicode; ident = Word(ppu.Greek.identchars, ppu.Greek.identbodychars); </code></pre>; <p>can now write:</p>; <pre><code>ident = ppu.Greek.identifier; # or; # ident = ppu.Ελληνικά.identifier; </code></pre>; </li>; <li>; <p>Reworked <code>delimited_list</code> function into the new <code>DelimitedList</code> class. <code>DelimitedList</code> has the same constructor interface as <code>delimited_list</code>, and in this release, <code>delimited_list</code> changes from a function to a synonym for <code>DelimitedList</code>. <code>delimited_list</code> and the older <code>delimitedList</code> method will be deprecated in a future release, in favor of <code>DelimitedList</code>.</p>; </li>; <li>; <p>Added new class method <code>ParserElement.using_each</code>, to simplify code that creates a sequence of <code>Literals</code>, <code>Keywords</code>, or other <code>ParserElement</code> subclasses.</p>; <p>For instance, to define suppressable punctuation, you would previously write:</p>; <pre><code>LPAR, RPAR, LBRACE, RBRACE, SEMI = map(Suppress, &quot;(){};&quot;); </code></pre>; <p>You can now write:</p>; <pre><code>LPAR, RPAR, LBRACE, RBRACE, SEMI = Suppress.using_each(&quot;(){};&quot;); </code></pre>; <p><code>using_each</code> will also accept optional keyword args, which it will pass through to the class initializer. Here is an expression for single-letter variable names that might be used in an algebraic expression:</p>; <pre><code>algebra_var = MatchFirst(; Char.using_each(string.ascii_lowercase, as_keyword=True); ); </code></pre>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pyparsing/pyparsing/blob/master/CHANGES"">pyparsing's changelog</a>.</em></p>; <blockq",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13334:2949,simpl,simplify,2949,https://hail.is,https://github.com/hail-is/hail/pull/13334,2,['simpl'],['simplify']
Usability,",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""42.0.2""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6092044"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14296:11394,Learn,Learn,11394,https://hail.is,https://github.com/hail-is/hail/pull/14296,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""20159ae6-a5aa-42fa-845a-c89f5bcbf999"",""projectUrl"":""https://app.snyk.io/org/danking/project/20159ae6-a5aa-42fa-845a-c89f5bcbf999?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JINJA2-6150717"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PROMPTTOOLKIT-6141120"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[554,704,624,531,556,604,589,726,434,589,449,399,696,589,479,519,509,711,701,586,586,384,494,539,589],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Cross-site Scripting (XSS)](https://learn.snyk.io/lesson/xss/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14205:13980,Learn,Learn,13980,https://hail.is,https://github.com/hail-is/hail/pull/14205,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"- Add Hadoop config as additional parameter to c++ compiled function; - Add C++ `HadoopConfig` wrapper and method to create an output stream; - Implement `NDArrayWrite` node and emit on backend. ### Notes; - `RichHadoopConfiguration` is an `AnyVal`, which is not implemented as a Java `Object`. In order to use it with JNI (and our `ObjectArray` pattern), I had to cast it to an `AnyRef` and allocate it as an object. There might be a way to call `AnyVal` methods and not do the allocation but haven't found one yet.; - Our current system doesn't support compiled functions that don't return values. I made it support void-type IRs but for now enforced that they will return an int (returned 0 after a successful write).; - All our bufferspecs are blocking which won't work for a numpy-compatible encoding. Going to follow-up on this PR with a simple non-blocking spec. cc: @cseed",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5837:844,simpl,simple,844,https://hail.is,https://github.com/hail-is/hail/pull/5837,1,['simpl'],['simple']
Usability,"- Added idea of two types of outputs: internal and external. Internal outputs are copied between tasks and external outputs are user specified copies of files.; - Added `valid` and `mentioned` which are sets of resources tasks keep track of. `valid` checks whether the resources were properly declared. `mentioned` keeps a record of the resources used in the command for variables that need to be declared.; - Changed when outputs are copied for external outputs. TaskResourceFiles are copied when the task finishes rather than at the end of the pipeline. InputResourceFiles are copied at the beginning of the pipeline as one job.; - `inputs`, `internal_outputs`, and `external_outputs` only contain resource files (not resource groups) which simplified the code quite a bit!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5962:743,simpl,simplified,743,https://hail.is,https://github.com/hail-is/hail/pull/5962,1,['simpl'],['simplified']
Usability,"- All subprocess calls are async. The UI is much more responsive now.; - Make refresh (rather than heal) non-reentrant. There was a race condition where we could update the Github state of a PR we were actively deploying. This seemed error prone.; - We need to lock the repos until the build is fully deployed. I now protect pr.heal.; - Set `batch_changed = True` whenever heal needs to be rerun becomes some of its inputs (build_state, source or target sha, collection of PRs) changed. Next up: deploy.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5921:54,responsiv,responsive,54,https://hail.is,https://github.com/hail-is/hail/pull/5921,1,['responsiv'],['responsive']
Usability,"- Also moved the location of where buckets are mounted to not be in /batch so as to avoid accidentally deleting entire buckets.; - The file mode didn't do what I expected (allowed you to write to a bucket), but now that I think about it, we probably do want to expose this and my first intuition was right. We probably want files to be specified as read only when they're created on the local file system. I can make this a separate PR.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8979:286,intuit,intuition,286,https://hail.is,https://github.com/hail-is/hail/pull/8979,1,['intuit'],['intuition']
Usability,"- Changed NDArrayRef node to take a _sequence_ of IR for the indices as opposed to a single IR. This will make operations like slicing much easier, simplifies IR emission and allows us to typecheck that you have enough index variables; - Refactored `linearizeIndices`, a function that takes a Scala sequence of index variables for a ndarray and emits the single array index, so that it actually checks now that each index is within the shape length bounds of that dimension.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5876:148,simpl,simplifies,148,https://hail.is,https://github.com/hail-is/hail/pull/5876,1,['simpl'],['simplifies']
Usability,"- Implemented an NDArray as simply a struct with enough information to properly index but no knowledge of the data type, so no templating required.; - Convert child IRs from regions to `std::vector` so the NDArray logic is simpler and isn't coupled to regions. Maybe it doesn't need to be decoupled?; - Currently passing by value in the code-gen for simplicity and since the values are pretty small, but would appreciate feedback on memory-management strategies for non-region values like NDArray.; - Tests extract singular values since we can't translate these arrays back into Java.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5627:28,simpl,simply,28,https://hail.is,https://github.com/hail-is/hail/pull/5627,4,"['feedback', 'simpl']","['feedback', 'simpler', 'simplicity', 'simply']"
Usability,- Markdown files by category in `docs/faq` directory; - Uses NodeJS to compile markdown files into single page `build/docs/faq.html`; - See the style guide `docs/FAQStyleGuide.md`; - Modified Gradle `createDocs` task,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/811:150,guid,guide,150,https://hail.is,https://github.com/hail-is/hail/pull/811,2,['guid'],['guide']
Usability,"- [ ] (@tpoterba) caf1e1e673 add fails_service_backend; - [ ] (@tpoterba, @cseed) a979dfba58 [hail] introduce and use mktemp and mktempd; - [ ] (@tpoterba) dcf026b01c [hail] make is.hail.expr.ir.functions threadsafe; - [ ] (@tpoterba) 807f38c20e [hail] fix use of row requiredness in lowerDistributedSort; - [ ] (@catoverdrive) 12df8eb456 [query-service] handle void-typed IRs in query-service; - [ ] (@catoverdrive) 03357ee83d [query-service] make user cache thread-safe; - [ ] (@tpoterba) 6c6734bc71 [query-service] bugfix: preserve globals through a shuffle; - [ ] (@catoverdrive) a3d2572ce7 [shuffler] log ShuffleCodecSpec anytime it is created; - [ ] (@daniel-goldstein) 8949dfec3c [scala-lsm] bugfix: least key may equal greatest key; - [ ] (@daniel-goldstein) 6067bd8e51 [services] discovered new transient error; - [ ] (@daniel-goldstein) c8356d30bb [shuffler] more assertions in ShuffleClient; - [ ] (@daniel-goldstein) 9991da90f0 [shuffler] bugfix: shuffler needs a HailContext to decode loci; - [ ] (@daniel-goldstein) bc0140ab6f [query-service] move hail.jar earlier in Dockerfile; - [ ] (@daniel-goldstein) f96c28174d [query-service] permit pod scaling and remove cpu limit; - [ ] (@catoverdrive) 6ae26339fe [query-service] simplify socket handling; - [ ] (@jigold) f3db30e23f [batch] teach JVMJob where to find the hail configuration files; - [ ] (@daniel-goldstein) b5c6d85554 [query-service] switch to services team approved logging; - [ ] (@tpoterba) 35a306c066 [query-service] query workers need a hail context; - [ ] (@daniel-goldstein, @catoverdrive) 051c89b8e7 [query-service] use a UNIX Domain Socket for Py-Scala communication; - [ ] (@daniel-goldstein, @catoverdrive) ad9ea73d7a [query-service] run tests against query service",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10072:1237,simpl,simplify,1237,https://hail.is,https://github.com/hail-is/hail/pull/10072,1,['simpl'],['simplify']
Usability,"- [x] ~~Stacked on #7207 (needed for `MakeArray`)~~. Implements a new interface `EmitStream` for staged ""pull"" based streams. This design differs significantly from the current `ArrayIteratorTriplet` design; such ""push"" based streams are incapable of deforested operations that operate on multiple sub-streams, notably joins or zips. A (pull) stream has an internal state, which can be used to generate new elements by a `step` operation. This state is initialized by passing an initial parameter to an `init` operation, which will determine the initial state. You can think of a stream as allowing elements to be computed ""on-demand"", as opposed to the old design where the entire stream is consumed at once. This PR just contains the most simple streams (`ArrayRange`, `MakeArray`, `ArrayMap`, `ArrayFilter`). I'd like to get comments on it before merging my other stream implementations. So far I have all of the other streams implemented, except for `ReadPartition` and `If` (it turns out that `If` is tricky). **Interface**. `init` can return in two possible ways:; - `Missing` - the stream is actually entirely missing; this usually happens if one of the parameters to a stream is missing (e.g. `ArrayRange(0, NA, 1) = NA`); - `State(s0)` - the stream has started; its initial state is `s0`. `step` can return in three possible ways as well:; - `EOS` - we've reached the End Of Stream, there are no more elements left.; - `Skip(s1)` - this iteration didn't produce an element, you must try stepping again with state `s1` (see ""design notes"").; - `Yield(elt, s1)` - the stream computed an element `elt`; the following stream state will be `s1`. **Design Notes**. - The `Skip` return is very useful for simplifying the implementation of `ArrayFilter`. There is basically no nice way to implement filter otherwise without introducing some significant code duplication.; - ~~The stream ""parameter"", as well as the `Empty` return, are not very useful for the basic streams in this PR. However, they s",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7228:741,simpl,simple,741,https://hail.is,https://github.com/hail-is/hail/pull/7228,1,['simpl'],['simple']
Usability,"- added test to GenotypeStreamSuite; - moved Boolean functions like isHet back to Genotype object as functions on gt: Int, for wider use with hardCallIterator. Eager for feedback on these steps and next steps.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1322:170,feedback,feedback,170,https://hail.is,https://github.com/hail-is/hail/pull/1322,1,['feedback'],['feedback']
Usability,"- changed behavior of `linear_regression` to parallel that of the other stats method when an expression is passed for `y`. When `y` is a list of expressions (even a list of one expression), the the five phenotype-dependent annotations are still array of float64.; - expanded `test_linreg` to test that all the interfaces work as expected; - changed `n_complete_samples` to just `n` since we may introduce an option to subset rather than impute per variant (which would cause n to change per variant) and I don't want to overload the notion of complete_sample to depend on the mode. I also think `n` is clear in linear regression context as the number of data points used, and in any case it's documented as the number of columns used.; - fixed a bug whereby `sum_x` was still `AC` on the Scala side.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3295:602,clear,clear,602,https://hail.is,https://github.com/hail-is/hail/pull/3295,1,['clear'],['clear']
Usability,"- created is.hail.services package; - added DeployConfig, Tokens with the necessary functionality to get BatchClient working; - BatchClient is built on Apache HttpComponents; - Synchronous, thread safe. HttpClient is thread safe, BatchClient should be, too.; - Simple hello, world! test; - Added build step for Java services tests. FYI @jigold this might be a possible model if we ever rework the Python BatchClient. Also, if there are Batch changes going forward this code will also need to updated. The client is incredibly light weight, so that shouldn't be often, similar to the aiogoogle clients I wrote recently. Next up: Query Batch backend!",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8779:261,Simpl,Simple,261,https://hail.is,https://github.com/hail-is/hail/pull/8779,1,['Simpl'],['Simple']
Usability,"- removed nullFit function entirely, simplifying code; - null model variables are first rather than last, simplifying code; - logreg fit now only computes margins of score and firth on first iteration; - score and fisher are Options in LogisticRegressionFit (not computed by Firth); - added Firth test to logreg; - added R test of Firth test; - added Firth to EPACTS test; - added Firth to logreg documentation; - added TriSolve for solving triangular systems (LAPACK dtrtrs), used in fitFirth; - added TriSolve test",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1375:37,simpl,simplifying,37,https://hail.is,https://github.com/hail-is/hail/pull/1375,2,['simpl'],['simplifying']
Usability,"- removed repeated imports in dataset; - fixed typos and clarified docs; - collapsed RegUtils to provide one ingest function each for hardCalls, dosages, and keyedRows. These optionally impute missing and produce sparse, dense, and dense vectors respectively. The first two also optionally take a mask. hardCalls no longer checks for constant vectors.; - killed the two RegUtils mutate matrix functions entirely; - simplified code in regression methods taking Vector[Double] input; - temp added constantHardCalls to RegUtils and in regressions to retrofit changes to preserve 0.1 behavior of missing for constant vectors. In 0.2 constant vectors will be treated the same as others, resulting in lack of convergence, Double.NaN, etc.; - temp added hardCallsAndAC to RegUtils and in linreg to retrofit changes to preserve 0.1 behavior of calculating AC pre-imputation for filtering. In 0.2, AC will be calculated post-imputation for hardCalls and dosages using sum(x); - combined empirical and HWE normalized arrays into one function; - removed various default parameters in tests. About 75 lines are due to retrofit, so for 0.2 it's about 200 added and 420 deleted.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1863:415,simpl,simplified,415,https://hail.is,https://github.com/hail-is/hail/pull/1863,1,['simpl'],['simplified']
Usability,- renamed `get_record` to `get_records` to be clear that this returns all matching records; - Added `state` and `complete` to the Batch class in server. These are computed when the Batch is queried from the database.; - Batch `to_dict` returns `state` and `complete` in the result. It also has an option on whether to include `jobs` in the output.; - Batch `list_batches` in `server.py` no longer outputs the `jobs` per Batch; - Changed `ci2` to use the new Batch status with the state and complete included.,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5991:46,clear,clear,46,https://hail.is,https://github.com/hail-is/hail/pull/5991,1,['clear'],['clear']
Usability,"-+-----------------------------------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+----------------------------",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:1296,SIMPL,SIMPLE,1296,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"-------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+-----",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:1549,SIMPL,SIMPLE,1549,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"----------+; | 1 | SIMPLE | batches | ALL | PRIMARY | NULL | NULL | NULL | 31 | Using where |; | 1 | SIMPLE | jobs | ref | PRIMARY,jobs_state | PRIMARY | 8 | batch2.batches.id | 84 | Using where |; +----+-------------+---------+------+--------------------+---------+---------+-------------------+------+-------------+; 2 rows in set (0.01 sec); ```. This is because the query was querying closed batches, and then joining against jobs and using a where condition to find ready jobs. This is an insane execution plan and I still can't believe MySQL is choosing it by default. To fix this, I changed the inner join to a straight join: https://dev.mysql.com/doc/refman/5.6/en/join.html. Straight join is a MySQL extension that always scans the left table first. This leads to the correct execution plan which runs instantly:. ```; mysql> EXPLAIN; -> SELECT job_id, batch_id, spec, cores_mcpu,; -> ((jobs.cancelled OR batches.cancelled) AND NOT always_run) AS cancel,; -> userdata, user; -> FROM jobs; -> STRAIGHT_JOIN batches ON batches.id = jobs.batch_id; -> WHERE jobs.state = 'Ready' AND batches.closed; -> LIMIT 50;; +----+-------------+---------+--------+--------------------+------------+---------+----------------------+-------+-----------------------+; | id | select_type | table | type | possible_keys | key | key_len | ref | rows | Extra |; +----+-------------+---------+--------+--------------------+------------+---------+----------------------+-------+-----------------------+; | 1 | SIMPLE | jobs | ref | PRIMARY,jobs_state | jobs_state | 122 | const | 14264 | Using index condition |; | 1 | SIMPLE | batches | eq_ref | PRIMARY | PRIMARY | 8 | batch2.jobs.batch_id | 1 | Using where |; +----+-------------+---------+--------+--------------------+------------+---------+----------------------+-------+-----------------------+; 2 rows in set (0.00 sec); ```. Now it scans the jobs table first using the job_state index as desired. Once this goes in I'll turn up the instance pool size again.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7634:2221,SIMPL,SIMPLE,2221,https://hail.is,https://github.com/hail-is/hail/pull/7634,2,['SIMPL'],['SIMPLE']
Usability,"-----------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+-------",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:1033,SIMPL,SIMPLE,1033,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | 1 | SIMPLE | batches | NULL | ref | batches_deleted | batches_deleted | 1 | const | 493389 | 33.33 | Using where; Backward index scan |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | billing_project_users | NULL | eq_ref | PRIMARY | PRIMARY | 204 | batch.batches.billing_project,const | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; ```. See Zulip discussions here:; https://hail.zulipchat.com/#narrow/stream/127527-team/topic/CI.20Deploy.20Failure/near/290764243. https://hail.zulipchat.com/#narrow/stream/219455-CLOSED-ServicesDev/topic/UI.20.2Fbatches.20slowness/near/226853300",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:3017,SIMPL,SIMPLE,3017,https://hail.is,https://github.com/hail-is/hail/pull/12049,4,['SIMPL'],['SIMPLE']
Usability,"-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; | 1 | SIMPLE | billing_project_users | NULL | index | PRIMARY | PRIMARY | 204 | NULL | 3201 | 10.00 | Using where; Using index; Using temporary; Using filesort |; | 1 | SIMPLE | batches | NULL | ref | PRIMARY,batches_deleted,batches_token,batches_user_state,batches_time_completed,batches_billing_project_state | batches_billing_project_state | 102 | batch.billing_project_users.billing_project | 519 | 25.00 | Using where |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+---------------------------------------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+---",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:1671,SIMPL,SIMPLE,1671,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,"--------------------------------------------------------------------------------+-------------------------------+---------+---------------------------------------------+------+----------+-----------------------------------------------------------+; ```. New plan; ```; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; | 1 | SIMPLE | batches | NULL | ref | batches_deleted | batches_deleted | 1 | const | 493389 | 33.33 | Using where; Backward index scan |; | 1 | SIMPLE | batches_n_jobs_in_complete_states | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | NULL |; | 1 | SIMPLE | batches_cancelled | NULL | eq_ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 1 | 100.00 | Using index |; | 1 | SIMPLE | billing_project_users | NULL | eq_ref | PRIMARY | PRIMARY | 204 | batch.batches.billing_project,const | 1 | 100.00 | Using index |; | 1 | SIMPLE | aggregated_batch_resources | NULL | ref | PRIMARY | PRIMARY | 8 | batch.batches.id | 44 | 100.00 | NULL |; | 1 | SIMPLE | resources | NULL | eq_ref | PRIMARY | PRIMARY | 102 | batch.aggregated_batch_resources.resource | 1 | 100.00 | NULL |; +----+-------------+-----------------------------------+------------+--------+-----------------+-----------------+---------+-------------------------------------------+--------+----------+----------------------------------+; ```. See Zulip discussions here:; https://hail.zulipchat.com/#narrow/stream/127527-team/topic/CI.20Deploy.20Failure/near/290764243. https://hail.zu",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12049:2886,SIMPL,SIMPLE,2886,https://hail.is,https://github.com/hail-is/hail/pull/12049,1,['SIMPL'],['SIMPLE']
Usability,". Then the paper computes a $p \times n$ matrix $W$ called the **SNP weight matrix**:. $$W \coloneqq X^T U.$$. Suppose that there are $n_r$ individuals in the related set and let $Y$ be the $n_r \times p$ standardized genotype matrix for the related individuals. The paper computes the principal components associated with the related samples with. $$ \frac{1}{p} Y W (\Sigma^2)^{-1}.$$. ### Simplifications. The first simplification that I noticed is that we can do away with the $\frac{1}{p}$ terms. Because $\Psi$ is scaled by $p^{-1}$, the inverse of the eigenvalues, $(\Sigma^2)^{-1}$ is scaled by $p$, which cancels out the $1/p$ term in the calculation of the principal components for the related individuals. From here on, let us redefine $\Sigma^2$ as the diagonal matrix containing the eigenvalues of $XX^T$ (not $\frac{1}{p} XX^T$). Next, by examining the relationship between singular value decomposition (SVD) and eigendecomposition ([Wikipedia link](https://en.m.wikipedia.org/wiki/Singular_value_decomposition#Relation_to_eigenvalue_decomposition)), I realized that it is not necessary to compute $\Psi$. Instead, we can get $U$ and $\Sigma$ from the SVD of $X$:. $$X = U\Sigma V^T,$$. where $V$ is a $p \times p$ basis of the new PCA coordinate space. Then while investigating the meaning of $W$, I realized that $W = X^T U = V \Sigma^T U^T U = V \Sigma^T$. Taking these simplifications into account, I realized that the paper is, in essence, computing $Y V$ to get the predicted scores associated with the related individuals. (Technically, I think that the paper is computing $Y V \Sigma^{-1}$. I am not sure why they scale the columns by the reciprocal of the eigenvalues here.). ### Simplified Approach. As I understand it, $V$ is a change-of-basis matrix from the original coordinates to the PCA scores. Letting $G$ denote the full standardized genotype matrix of all the individuals, I think we can just return $GV$, where $V$ is defined by the SVD of $X$:. $$X = U\Sigma V^T.$$",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14326#issuecomment-1962279184:1946,simpl,simplifications,1946,https://hail.is,https://github.com/hail-is/hail/pull/14326#issuecomment-1962279184,3,"['Simpl', 'simpl']","['Simplified', 'simplifications']"
Usabilitydone.; ERROR: Create cluster failed!; ERROR: gcloud crashed (AttributeError): 'Operation' object has no attribute 'details'. If you would like to report this issue, please run the following command:; gcloud feedback. To check gcloud for common problems, please run the following command:; gcloud info --run-diagnostics; gcloud command:; gcloud beta dataproc clusters create \; ci-test-6boype3d \; --image-version=1.2-deb9 \; --metadata=MINICONDA_VERSION=4.4.10,JAR=gs://hail-ci-0-1/temp/25aa42b2d6d442615931b2eb65c5f8e012de52a0/96d6daa14989dd0cff08b30ac1f1d53288171a54/hail.jar,ZIP=gs://hail-ci-0-1/temp/25aa42b2d6d442615931b2eb65c5f8e012de52a0/96d6daa14989dd0cff08b30ac1f1d53288171a54/hail.zip \; --properties=spark:spark.driver.memory=3g,spark:spark.driver.maxResultSize=0,spark:spark.task.maxFailures=20,spark:spark.kryoserializer.buffer.max=1g,spark:spark.driver.extraJavaOptions=-Xss4M,spark:spark.executor.extraJavaOptions=-Xss4M,hdfs:dfs.replication=1,dataproc:dataproc.logging.stackdriver.enable=false,dataproc:dataproc.monitoring.stackdriver.enable=false \; --initialization-actions=gs://dataproc-initialization-actions/conda/bootstrap-conda.sh,gs://hail-common",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4530#issuecomment-475782518:8006,feedback,feedback,8006,https://hail.is,https://github.com/hail-is/hail/issues/4530#issuecomment-475782518,2,['feedback'],['feedback']
Usability,".16"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[554,704,624,531,604,589,726,434,589,449,696,589,479,519,509,711,701,586,586,384,494,539,589],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14108:12788,Learn,Learn,12788,https://hail.is,https://github.com/hail-is/hail/pull/14108,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.exp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7405,Simpl,Simplify,7405,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131); 	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144); 	at java.lang.Thread.run(Thread.java:748); 	Error: java.lang.IllegalStateException: Cannot call methods on a stopped SparkContext.; 	This stopped SparkContext was created at:; 	; 	org.apache.spark.SparkContext.getOrCreate(SparkContext.scala); 	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	java.lang.reflect.Method.invoke(Method.java:498); 	sparklyr.Invoke.invoke(invoke.scala:139); 	sparklyr.StreamHandler.handleMethodCall(stream.scala:123); 	sparklyr.StreamHandler.read(stream.scala:66); 	sparklyr.BackendHandler.channelRead0(handler.scala:51); 	sparklyr.BackendHandler.channelRead0(handler.scala:4); 	io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:357); 	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:343); 	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:336); 	io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293); 	io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267); 	; 	The currently ac,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4513:7496,Simpl,SimpleChannelInboundHandler,7496,https://hail.is,https://github.com/hail-is/hail/issues/4513,1,['Simpl'],['SimpleChannelInboundHandler']
Usability,.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.NormalizeNames.apply total 0.561ms self 0.561ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.Simplify.apply total 0.144ms self 0.144ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.ForwardLets.apply total 1.561ms self 0.732ms children 0.829ms %children 53.12%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.ha,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141:107838,Simpl,Simplify,107838,https://hail.is,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141,1,['Simpl'],['Simplify']
Usability,.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.NormalizeNames.apply total 0.614ms self 0.614ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.Simplify.apply total 0.292ms self 0.292ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.ForwardLets.apply total 1.500ms self 0.649ms children 0.852ms %children 56.76%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.ha,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141:93400,Simpl,Simplify,93400,https://hail.is,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141,1,['Simpl'],['Simplify']
Usability,.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.NormalizeNames.apply total 0.759ms self 0.759ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.Simplify.apply total 0.137ms self 0.137ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.ForwardLets.apply total 1.862ms self 0.753ms children 1.109ms %children 59.55%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.ha,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141:72221,Simpl,Simplify,72221,https://hail.is,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141,1,['Simpl'],['Simplify']
Usability,.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.NormalizeNames.apply total 0.785ms self 0.785ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.Simplify.apply total 0.143ms self 0.143ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.ForwardLets.apply total 2.010ms self 0.828ms children 1.182ms %children 58.80%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.ha,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141:57823,Simpl,Simplify,57823,https://hail.is,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141,1,['Simpl'],['Simplify']
Usability,.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.NormalizeNames.apply total 0.948ms self 0.948ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.Simplify.apply total 0.222ms self 0.222ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.ForwardLets.apply total 2.451ms self 0.949ms children 1.502ms %children 61.30%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.ha,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141:49295,Simpl,Simplify,49295,https://hail.is,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141,1,['Simpl'],['Simplify']
Usability,.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.NormalizeNames.apply total 3.651ms self 3.651ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.Simplify.apply total 12.144ms self 12.144ms children 0.000ms %children 0.00%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.hail.expr.ir.lowering.EvalRelationalLets.apply/is.hail.expr.ir.lowering.EvalRelationalLets.apply execute/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.LowerOrInterpretNonCompilablePass/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.OptimizePass/is.hail.expr.ir.Optimize.apply/is.hail.expr.ir.ForwardLets.apply total 9.513ms self 3.957ms children 5.556ms %children 58.40%; is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/is.hail.expr.ir.lowering.LoweringPipeline#apply/is.hail.expr.ir.lowering.EvalRelationalLetsPass/is.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141:40765,Simpl,Simplify,40765,https://hail.is,https://github.com/hail-is/hail/pull/14731#issuecomment-2417774141,1,['Simpl'],['Simplify']
Usability,.apply(FreeVariables.scala:27); at is.hail.expr.ir.FreeVariables$$anonfun$is$hail$expr$ir$FreeVariables$$compute$1$1.apply(FreeVariables.scala:24); at scala.collection.Iterator$$anon$11.next(Iterator.scala:410); at scala.collection.Iterator$class.foreach(Iterator.scala:891); at scala.collection.AbstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.colle,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:6967,Simpl,Simplify,6967,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,".com/#narrow/stream/223457-Hail-Batch-support/topic/exporting.20sites.20only.20VCF/near/376801844. Using QoB, reading out of GCS, we encounter corrupted blocks on this simple pipeline. ```; Caused by: com.github.luben.zstd.ZstdException: Corrupted block detected; at com.github.luben.zstd.ZstdDecompressCtx.decompressByteArray(ZstdDecompressCtx.java:157) ~[zstd-jni-1.5.2-1.jar:1.5.2-1]; at com.github.luben.zstd.Zstd.decompressByteArray(Zstd.java:409) ~[zstd-jni-1.5.2-1.jar:1.5.2-1]; at is.hail.io.ZstdInputBlockBuffer.readBlock(InputBuffers.scala:649) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; at is.hail.io.BlockingInputBuffer.ensure(InputBuffers.scala:384) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; at is.hail.io.BlockingInputBuffer.readByte(InputBuffers.scala:402) ~[gs:__hail-query-ger0g_jars_f00f916faf783b89cc2fc00bfc3e39df5485d8b0.jar.jar:0.0.1-SNAPSHOT]; ....; ```. A simplified version of the script:. ```python3; import hail as hl; import gnomad.utils.sparse_mt. tmp_dir = 'gs://bucket/'; vds_file = 'gs://neale-bge/bge-wave-1.vds'; out = 'gs://bucket/foo.vcf.bgz'. hl.init(default_reference = 'GRCh38',; tmp_dir = tmp_dir). vds = hl.vds.read_vds(vds_file); mt = hl.vds.to_dense_mt(vds); t = gnomad.utils.sparse_mt.default_compute_info(mt); t = t.annotate(info=t.info.drop('AS_SB_TABLE')); t = t.annotate(info = t.info.drop(; 'AS_QUALapprox', 'AS_VarDP', 'AS_SOR', 'AC_raw', 'AC', 'AS_SB'; )); t = t.drop('AS_lowqual'). hl.methods.export_vcf(dataset = t, output = out, tabix = True); ```. [batch-7751958-2713-main.log](https://github.com/hail-is/hail/files/12314207/batch-7751958-2713-main.log). ### Version. 0.2.120. ### Relevant log output. ```shell; Traceback (most recent call last):; File ""/Users/rye/Projects/VQSR/formatting-VQSR-vcf.py"", line 102, in <module>; main(args); File ""/Users/rye/Projects/VQSR/formatting-VQSR-vcf.py"", line 66, in main; hl.methods.export_vcf(datase",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13409:1066,simpl,simplified,1066,https://hail.is,https://github.com/hail-is/hail/issues/13409,1,['simpl'],['simplified']
Usability,.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.ap,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7674,Simpl,Simplify,7674,https://hail.is,https://github.com/hail-is/hail/issues/8338,3,"['Simpl', 'simpl']","['Simplify', 'simplifyMatrix']"
Usability,".hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/ExtractIntervalFilters, iteration: 0 total 0.898ms self 0.898ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/NormalizeNames, iteration: 0 total 2.553ms self 0.011ms children 2.543ms %children 99.59%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/NormalizeNames, iteration: 0/is.hail.expr.ir.NormalizeNames.apply total 2.543ms self 2.543ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/Simplify, iteration: 0 total 8.675ms self 8.675ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/ForwardLets, iteration: 0 total 4.506ms self 3.993ms children 0.513ms %children 11.40%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/ForwardLets, iteration: 0/is.hail.expr.ir.NormalizeNames.apply total 0.513ms self 0.513ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/is.hail.expr.ir.TypeCheck.apply total 0.120ms self 0.120ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttp",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14679#issuecomment-2341990966:3578,Simpl,Simplify,3578,https://hail.is,https://github.com/hail-is/hail/pull/14679#issuecomment-2341990966,2,['Simpl'],['Simplify']
Usability,".hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/ExtractIntervalFilters, iteration: 1 total 0.021ms self 0.021ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/NormalizeNames, iteration: 1 total 0.384ms self 0.005ms children 0.379ms %children 98.72%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/NormalizeNames, iteration: 1/is.hail.expr.ir.NormalizeNames.apply total 0.379ms self 0.379ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/Simplify, iteration: 1 total 0.103ms self 0.103ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/ForwardLets, iteration: 1 total 0.579ms self 0.273ms children 0.306ms %children 52.84%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/ForwardLets, iteration: 1/is.hail.expr.ir.NormalizeNames.apply total 0.306ms self 0.306ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttpHandler#handle x$3/is.hail.backend.spark.SparkBackend#execute/is.hail.expr.ir.CompileAndEvaluate._apply/Optimize: relationalLowerer, initial IR/Transform/is.hail.expr.ir.TypeCheck.apply total 0.143ms self 0.143ms children 0.000ms %children 0.00%; timing is.hail.backend.BackendHttp",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14679#issuecomment-2341990966:6721,Simpl,Simplify,6721,https://hail.is,https://github.com/hail-is/hail/pull/14679#issuecomment-2341990966,2,['Simpl'],['Simplify']
Usability,.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$1.apply(Simplify.scala:36); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:30); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyValue$3.apply(Simplify.scala:35); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:19); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:11); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$is$hail$expr$ir$Optimize$$runOpt$1$1.apply(Optimize.scala:17); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.is$hail$expr$ir$Optimize$$runOpt$1(Optimize.scala:17); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply$mcV$sp(Optimize.scala:25); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.expr.ir.Optimize$$anonfun$apply$1.apply(Optimize.scala:21); at is.hail.utils.ExecutionTimer.time(ExecutionTimer.scala:69); at is.hail.expr.ir.Optimize$.apply(Optimize.scala:20); at is.hail.expr.ir.lowering.LoweringPipeline.apply(LoweringPipeline.scala:16); at is.hail.expr,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:11719,Simpl,Simplify,11719,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,".invoke0(Native Method); at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); at java.lang.reflect.Method.invoke(Method.java:498); at is.hail.JVMEntryway$1.run(JVMEntryway.java:119); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); at java.util.concurrent.FutureTask.run(FutureTask.java:266); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); at java.lang.Thread.run(Thread.java:750). Hail version: 0.2.124-87398e1b514e; Error summary: HailException: file already exists: gs://aou_analysis/250k/data/utils/aou_mt_sample_qc_250k.ht; ```; </details>. The code is simple and clearly is running against a path that does not already exist:; ```; if not hl.hadoop_exists(get_aou_util_path('mt_sample_qc')):; print('Run sample qc MT.....'); mt = hl.read_matrix_table(ACAF_MT_PATH); mt = mt.filter_rows(mt.locus.in_autosome()); # mt = mt.filter_rows(mt.locus.contig == 'chr1'); ht = hl.sample_qc(mt, name='mt_sample_qc'); ht.write(get_aou_util_path('mt_sample_qc'), overwrite=args.overwrite); ```. Job log: https://batch.hail.is/batches/8058522/jobs/171029. <details>; <summary>The last TableIR logged</summary>. ```; 2023-10-13 02:14:44.213 : INFO: after optimize: darrayLowerer, after LowerAndExecuteShuffles: IR size 232: . !ht = TableRead [Table{global:Struct{},key:[locus,alleles],row:Struct{locus:Locus(GRCh38),alleles:Array[String],filters:Set[String],a_index:Int32,was_split:Boolean,variant_qc:Struct{gq_stats:Struct{mean:Float64,stdev:Float64,min:Float64,max:Float64},call_rate:Float64,n_called:Int64,n_not_called:Int64,n_filtered:Int64,n_het:Int64,n_non_ref:Int64,het_freq_hwe:Float64,p_value_hwe:F",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13809:7135,simpl,simple,7135,https://hail.is,https://github.com/hail-is/hail/issues/13809,2,"['clear', 'simpl']","['clearly', 'simple']"
Usability,".js; 450 B .next/static/css/commons.b770adbe.chunk.css; 5.74 kB .next/static/css/styles.4f393762.chunk.css; 6.93 kB .next/static/runtime/main-76ed****.js; 737 B .next/static/runtime/webpack-8917****.js; ```. Bundling cutoffs can be tweaked, but basically any common dependencies between pages are placed into one chunk. Chunks are loaded in parallel, and no chunks are needed to load the page; it's just HTML on initial render. At least some of the chunks could theoretically be served from a CDN (styles of course, some js). Each package expects a .env file, which organizes the environment variables used in that package. This can be used with Kubernetes. `kubectl create secret generic secretesfile --from-file=prod/env.txt`. The .env for the web app, where localhost would be replaced by our sub.domain. If you get it running, you may notice there isn't a way to log out... I ripped out all of the UI stuff after speaking with Cotton, and began writing a minimal interface. Just clear the cookie if you need to log out. ```; AUTH0_CLIENT_ID=TD78k23CcdM4pMWoYZwYwKJbQPBj06jY; AUTH0_DOMAIN=hail.auth0.com; AUTH0_SCOPE='opened profile repo read:users read:user_idp_tokens'; AUTH0_AUDIENCE='hail'; AUTH0_REDIRECT_URI='https://localhost/auth0callback'; SCORECARD_URL='https://scorecard.localhost/json'; SCORECARD_USER_URL='https://scorecard.localhost/json/users'; GRAPHQL_URL='https://localhost/api/graphql'; ```. The .env for the gateway; ```; AUTH0_WEB_KEY_SET_URL=https://hail.auth0.com/.well-known/jwks.json; AUTH0_AUDIENCE=hail; AUTH0_DOMAIN=https://hail.auth0.com/. AUTH0_MANAGEMENT_API_CLIENT=eqDY6HWOKd6MzC8kWCFaZUAoZgNUHypA; AUTH0_MANAGEMENT_API_SECRET=<I'll give this>; AUTH0_MANAGEMENT_API_TOKEN_URL=https://hail.auth0.com/oauth/token; AUTH0_MANAGEMENT_API_URL=https://hail.auth0.com/api/v2/users; AUTH0_MANAGEMENT_API_AUDIENCE=https://hail.auth0.com/api/v2/; ```. Organization of the web app is simple. There is a pages directory. Routes match the folder structure. Pages that don't need t",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4931#issuecomment-454271935:2378,clear,clear,2378,https://hail.is,https://github.com/hail-is/hail/pull/4931#issuecomment-454271935,2,['clear'],['clear']
Usability,.lang.reflect.Method.invoke(Method.java:498); E 	at is.hail.JVMEntryway$1.run(JVMEntryway.java:105); E 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); E 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); E 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); E 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); E 	at java.lang.Thread.run(Thread.java:748); E ; E java.util.concurrent.TimeoutException: Did not observe any item or terminal signal within 5000ms in 'flatMap' (and no fallback has been configured); E 	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.handleTimeout(FluxTimeout.java:294); E 	at reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.doTimeout(FluxTimeout.java:279); E 	at reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber.onNext(FluxTimeout.java:418); E 	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79); E 	at reactor.core.publisher.MonoDelay$MonoDelayRunnable.propagateDelay(MonoDelay.java:270); E 	at reactor.core.publisher.MonoDelay$MonoDelayRunnable.run(MonoDelay.java:285); E 	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68); E 	at reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28); E 	at java.util.concurrent.FutureTask.run(FutureTask.java:266); E 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180); E 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293); E 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149); E 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624); E 	at java.lang.Thread.run(Thread.java:748). ```,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11883#issuecomment-1144890222:4988,Resume,ResumeSubscriber,4988,https://hail.is,https://github.com/hail-is/hail/pull/11883#issuecomment-1144890222,1,['Resume'],['ResumeSubscriber']
Usability,".py"", line 8, in <module>; from hailtop.fs.fs import FS; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/__init__.py"", line 1, in <module>; from .fs_utils import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/fs/fs_utils.py"", line 4, in <module>; from hailtop.aiocloud.aiogoogle import GCSRequesterPaysConfiguration; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/__init__.py"", line 1, in <module>; from .client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/__init__.py"", line 8, in <module>; from .storage_client import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiocloud/aiogoogle/client/storage_client.py"", line 14, in <module>; from hailtop.aiotools import FeedableAsyncIterable, WriteBuffer; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/__init__.py"", line 1, in <module>; from .fs import (; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/__init__.py"", line 1, in <module>; from .copier import Copier, CopyReport, SourceCopier, SourceReport, Transfer, TransferReport; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/hailtop/aiotools/fs/copier.py"", line 7, in <module>; import humanize; File ""/Users/srinivas/test/.pixi/envs/default/lib/python3.12/site-packages/humanize/__init__.py"", line 1, in <module>; import pkg_resources; ModuleNotFoundError: No module named 'pkg_resources'. ```. I think this is largely because hail requires an ancient version of humanize (v1 vs v4). In any case, the wheel on PyPI is broken and un-importable. . There are other issues stemming from the underlying issue that there is no clear description of requirements and dependencies. . ### Version. 0.2.132. ### Relevant log output. _No response_",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14630:2739,clear,clear,2739,https://hail.is,https://github.com/hail-is/hail/issues/14630,1,['clear'],['clear']
Usability,.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_382]; 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_382]; 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_382]; 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_382]; 	at java.lang.Thread.run(Thread.java:750) ~[?:1.8.0_382]; Caused by: is.hail.relocated.com.google.cloud.storage.StorageException: Missing Range header in response; 	|> PUT https://storage.googleapis.com/upload/storage/v1/b/1-day/o?name=parallelizeAndComputeWithIndex/al3OJfYZMMNoi9F2jvcAf0jBirVTayRVqro03dnIa1g%3D/result.7028&uploadType=resumable&upload_id=ADPycdv7y3A6GjTh6Kv7vrUu2ap2Kv0peLVWsVTAghIs7RCZk9X3fI1BDkeHag1cd9g3etP2sS4f13bN6iJPU_sbnRnyRE91VPtjUpuYLPqmOq13; 	|> content-range: bytes */*; 	| ; 	|< HTTP/1.1 308 Resume Incomplete; 	|< content-length: 0; 	|< content-type: text/plain; charset=utf-8; 	|< x-guploader-uploadid: ADPycdv7y3A6GjTh6Kv7vrUu2ap2Kv0peLVWsVTAghIs7RCZk9X3fI1BDkeHag1cd9g3etP2sS4f13bN6iJPU_sbnRnyRE91VPtjUpuYLPqmOq13; 	| ; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:185) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:117) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionFailureScenario.toStorageException(JsonResumableSessionFailureScenario.java:98) ~[gs:__hail-test-ezlis_dking_jars_ch4g3zvqceyo_09526a168d57dac1a26f8caa4ab49593931ed2ef.jar.jar:0.0.1-SNAPSHOT]; 	at is.hail.relocated.com.google.cloud.storage.JsonResumableSessionQueryTask.call(JsonResumableSessionQ,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943:7909,Resume,Resume,7909,https://hail.is,https://github.com/hail-is/hail/issues/13721#issuecomment-1737788943,1,['Resume'],['Resume']
Usability,"//]: # (snyk:metadata:{""prId"":""648a0aea-922c-46c9-b851-66c7e282d2e5"",""prPublicId"":""648a0aea-922c-46c9-b851-66c7e282d2e5"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.6""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-CRYPTOGRAPHY-6092044"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14196:10349,Learn,Learn,10349,https://hail.is,https://github.com/hail-is/hail/pull/14196,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"//github.com/urllib3/urllib3/commit/aa3def7d242525e6e854991247c4b68583d15135""><code>aa3def7</code></a> Release 1.26.11</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/6f93b8f450b18b4c9f4c6333d759a911a63d15ae""><code>6f93b8f</code></a> Fix <code>OverflowError</code> when TLS is used on some Python versions</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/0a5f34d2c2ee6457e8365543243eccd3d1dc9430""><code>0a5f34d</code></a> Set GHA token permissions to be read-only</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/ac61b73da703df53707c31030b4ea51aab22d43c""><code>ac61b73</code></a> Backport publish workflow and process to 1.26.x</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1fd77edc1a1373c9a7e762de148f19f1e2edd418""><code>1fd77ed</code></a> Release 1.26.10</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/37ba00248424ea3cdf556cc3e7aa81ce0bf40382""><code>37ba002</code></a> [1.26] Update paid contributor program with early feedback</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.9...1.26.12"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.9&new-version=1.26.12)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12140:4656,feedback,feedback,4656,https://hail.is,https://github.com/hail-is/hail/pull/12140,1,['feedback'],['feedback']
Usability,"/a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/graphs/contributors?from=2023-12-29&amp;to=2024-01-19&amp;type=c"">GitHub contributors page for this release</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/jupyterlab/jupyterlab/blob/@jupyterlab/lsp@4.0.12/CHANGELOG.md"">jupyterlab's changelog</a>.</em></p>; <blockquote>; <h2>4.0.12</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.11...69079ec413cbe6d173f0a667c15802b76423ece5"">Full Changelog</a>)</p>; <h3>Bugs fixed</h3>; <ul>; <li>Fix jupyterlab downgrade issue on extension installation <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15650"">#15650</a> (<a href=""https://github.com/Sarthug99""><code>@​Sarthug99</code></a>)</li>; <li>Fix search highlights removal on clearing input box <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15690"">#15690</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; <li>Add scroll margin to headings for better alignment <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15703"">#15703</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; <li>Fix shortcut UI failing on filtering when empty command is given <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15695"">#15695</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; <li>Fix connection loop issue with standalone foreign document in LSP <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15262"">#15262</a> (<a href=""https://github.com/trungleduc""><code>@​trungleduc</code></a>)</li>; <li>Fix outputarea package from not detecting updates <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15642"">#",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14218:6367,clear,clearing,6367,https://hail.is,https://github.com/hail-is/hail/pull/14218,1,['clear'],['clearing']
Usability,"/li>; </ul>; <h2>3.1.29</h2>; <ul>; <li>Reduced npm package size.</li>; </ul>; <h2>3.1.28</h2>; <ul>; <li>Reduced npm package size.</li>; </ul>; <h2>3.1.27</h2>; <ul>; <li>Cleaned <code>dependencies</code> from development tools.</li>; </ul>; <h2>3.1.26</h2>; <ul>; <li>Improved performance (by Eitan Har-Shoshanim).</li>; <li>Reduced npm package size.</li>; </ul>; <h2>3.1.25</h2>; <ul>; <li>Fixed <code>browserify</code> support.</li>; </ul>; <h2>3.1.24</h2>; <ul>; <li>Fixed <code>browserify</code> support (by Artur Paikin).</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/ai/nanoid/commit/23b136929a6d58f32e31b269534a3ce3f680a086""><code>23b1369</code></a> Release 3.2 version</li>; <li><a href=""https://github.com/ai/nanoid/commit/967788efce880960512f969a56f8f22f3fc20bae""><code>967788e</code></a> Remove TS test tools</li>; <li><a href=""https://github.com/ai/nanoid/commit/27eaa90cd207a7782bbcf17343092ae87dd62164""><code>27eaa90</code></a> Simplify new binary tool</li>; <li><a href=""https://github.com/ai/nanoid/commit/a9d91239931dc77506381874826d297aee71d6ef""><code>a9d9123</code></a> Update dependencies</li>; <li><a href=""https://github.com/ai/nanoid/commit/32b9bdaab1fbc28576b17de8516164ce0360f292""><code>32b9bda</code></a> Allows passing size or custom alphabet via cli as args (<a href=""https://github-redirect.dependabot.com/ai/nanoid/issues/334"">#334</a>)</li>; <li><a href=""https://github.com/ai/nanoid/commit/246d5f87b6b34e23b5e401bdf3da1f80c810ac4c""><code>246d5f8</code></a> Update vite</li>; <li><a href=""https://github.com/ai/nanoid/commit/afdf9c92b41427f35476fbe14b5af5d73dd7fbdb""><code>afdf9c9</code></a> doc: Fixed Typo (<a href=""https://github-redirect.dependabot.com/ai/nanoid/issues/335"">#335</a>)</li>; <li><a href=""https://github.com/ai/nanoid/commit/90a446fef3ecaac78e5af2ea01025c4f40182e2b""><code>90a446f</code></a> Update benchmark results</li>; <li><a href=""https://github.com/ai/nanoid/commit/8ba231",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11284:1883,Simpl,Simplify,1883,https://hail.is,https://github.com/hail-is/hail/pull/11284,2,['Simpl'],['Simplify']
Usability,"/mrabarnett/mrab-regex) from 2023.3.23 to 2023.5.5.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/mrabarnett/mrab-regex/blob/hg/changelog.txt"">regex's changelog</a>.</em></p>; <blockquote>; <p>Version: 2023.5.5</p>; <pre><code>Removed semicolon after 'else' in 'munge_name'.; </code></pre>; <p>Version: 2023.5.4</p>; <pre><code>Fixed pyproject.toml and setup.py.; </code></pre>; <p>Version: 2023.5.3</p>; <pre><code>pyproject.toml was missing.; </code></pre>; <p>Version: 2023.5.2</p>; <pre><code>Added pyproject.toml.; </code></pre>; <p>Version: 2023.3.23</p>; <pre><code>Git issue 495: Running time for failing fullmatch increases rapidly with input length; Re-enabled modified repeat guards due to regression in speed caused by excessive backtracking.; </code></pre>; <p>Version: 2023.3.22</p>; <pre><code>Git issue 494: Backtracking failure matching regex `^a?(a?)b?c\1$` against string `abca`; Disabled repeat guards. They keep causing issues, and it's just simpler to rely on timeouts.; </code></pre>; <p>Version: 2022.10.31</p>; <pre><code>Updated text for supported Unicode and Python versions.; </code></pre>; <p>Version: 2022.9.13</p>; <pre><code>Updated to Unicode 15.0.0.; </code></pre>; <p>Version: 2022.9.11</p>; <pre><code>Updated version.; </code></pre>; <p>Version: 2022.8.17</p>; <pre><code>Git issue 477: \v for vertical spacing; <p>Added \p{HorizSpace} (\p{H}) and \p{VertSpace} (\p{V}).; </code></pre></p>; <p>Version: 2022.7.25</p>; <pre><code>Git issue 475: 2022.7.24 improperly released; <p>The file <a href=""https://pypi.org/pypi/regex/2022.7.24/json"">https://pypi.org/pypi/regex/2022.7.24/json</a> was missing references to most of the wheels, so this is a new release in the hope that it was just a glitch in GitHub Actions.; </code></pre></p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/mrabarnett/mrab-regex/commit/9",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12989:1039,simpl,simpler,1039,https://hail.is,https://github.com/hail-is/hail/pull/12989,1,['simpl'],['simpler']
Usability,"/redirect.github.com/jupyterlab/jupyterlab/issues/15710"">#15710</a>: Removes Python 3.0, Notebook 5 mentions from contributor ...</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/353707e4d0d3fe788a4a2a5b1f228352f1918806""><code>353707e</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15524"">#15524</a>: Fix visual tests (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15578"">#15578</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/482aaa0054a2de18a257d7b5520234eb44648a9f""><code>482aaa0</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15650"">#15650</a>: Fix jupyterlab downgrade issue on extension installation ...</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/58fb4a9b630cd22d7b064b3c8fef503b11afe077""><code>58fb4a9</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15690"">#15690</a>: Fix search highlights removal on clearing input box (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15712"">#15712</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/5062929f60ac770c7048350260636d3f63ea1c8d""><code>5062929</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15703"">#15703</a> on branch 4.0.x (Add scroll margin to headings for better ...</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/c00b0ca0cc631992c7681473d88208fcc74de00e""><code>c00b0ca</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15642"">#15642</a>: Fix outputarea package from not detecting updates (<a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15652"">#15652</a>)</li>; <li><a href=""https://github.com/jupyterlab/jupyterlab/commit/8326236cf42c43ee1ed9657c09d7c4cbad5973f1""><code>8326236</code></a> Backport PR <a href=""https://redirect.github.com/jupyterlab/jupyterlab/issues/15262",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14218:12762,clear,clearing,12762,https://hail.is,https://github.com/hail-is/hail/pull/14218,1,['clear'],['clearing']
Usability,"1) Learn More button shouldn't have target blank; it's a link to a page in the same domain, better to allow forward/back nav and no new window; 2) Reference page text would overflow because default word-break is none.; 3) Height of blue background to title was constrained to a certain height, and while that helped consistency, it cost inner margin (padding) consistency; tradeoff not worth it; 4) Fix code block alignments",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9013:3,Learn,Learn,3,https://hail.is,https://github.com/hail-is/hail/pull/9013,1,['Learn'],['Learn']
Usability,"1. Add `dictfix`, a little tool for wrangling json-like data into a sensible,; standardized format. 2. Modify job.html to include a simple table of important parts of the job; specification such as the command and the requests of cpu, memory, and; storage. 3. Modify job.html to include a simple table summarizing the status and runtime; of each step of the job. My apologies for reformatting the whole file to have no excess spaces. Use the no whitespace diff option in GitHub for a better diff.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9758:132,simpl,simple,132,https://hail.is,https://github.com/hail-is/hail/pull/9758,2,['simpl'],['simple']
Usability,"1. File rate is more interesting for small files.; 2. The source_report controls the progress bar. By updating it eagerly while we are listing a directory, the progress bar is more accurate sooner. We currently wait until we get a semaphore for a particular file to update the progress bar.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13820:85,progress bar,progress bar,85,https://hail.is,https://github.com/hail-is/hail/pull/13820,3,['progress bar'],['progress bar']
Usability,"1. For runImage steps, you can only copy out-of or copy into `/io` (the reasoning is a bit complicated and somewhat historical).; 2. For buildImage steps, you can copy out-of or copy into `/`; 3. the `to` of an `output` specifies a file path in a ""filesystem"" that another step can access if it `dependsOn` the outputting step; 4. the `from` of an `input` specifies a file path in the aforementioned ""filesystem""; the filesystem contains all `outputs` from steps in the inputting step's `dependsOn` clause. We also have a `docker/Makefile` which is an emergency manual build system. I update that so that `hail_version` appears in the root of the docker context. The `service-base` uses the entire repository as its docker context, so I place hail_version at the root of the repository. I moved the `version` function from `hailtop.hailctl` into `hailtop`. It seems broadly useful and isn't specific to hailctl in anyway. Your concern about loading from pkg_resources repeated seems well-founded, so I went ahead and loaded the hail_version at package import time. This seems likely to ensure we learn about a missing hail_version file as early as possible (presumably at service start-time). This also means all hailtop installs need a hail_version file. I only found two other places that use hailtop. One of them was a completely unused Dockerfile. I deleted that (`Dockerfile.hailtop`). The other was Dockerfile.ci-test, which I updated to copy the hail_version file just like service-base. https://github.com/hail-is/hail/compare/main...danking:add-version-endpoint. Do you want to cherry-pick that change onto your add-version-endpoint branch?. One more change request: can we remove the try-catch? I don't expect any errors in that call and I tend to avoid revealing anything about errors to our users. Aiohttp will log the error and the stack trace if you let it rise all the way. Sorry for all the complication! Our build system is the second service we built and is clearly showing its age.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401:1900,learn,learn,1900,https://hail.is,https://github.com/hail-is/hail/pull/10085#issuecomment-789279401,4,"['clear', 'learn']","['clearly', 'learn']"
Usability,"1. Functionally, it's already possible -- should be able to do `vds.annotate_variants_db('va.dann')` and get the `va.dann.score` annotation in your VDS. Taking a step further, you can even do `vds.annotate_variants_db('va')` and get all of the annotations. It's just a matter of designing the query builder to encourage people using the function in whatever way we think is optimal, I suppose. What are the downsides to carrying around a lot of annotations in a VDS? I worry that if we supplied a select-all `va` option, everybody would just use that -- but if there aren't any major drawbacks, maybe that's the way to go and we don't even really need a query builder. Or maybe just allowing top-level selections like `va.dann`, `va.chromHMM`, etc. would be a good intermediate solution. 2. Yes! I'd definitely be interested in working on a Scala implementation, if one of you would be willing to work with a newbie :). Though I think if we can get this Python version working & usable first, that may be best. 3. I'll look into this. I don't have a solution yet. That's why in the method documentation, I used ; `.. code-block:: python` statements to add example code snippets. With the `>>> ...` syntax, the build was trying to run those examples and throwing weird errors like you anticipated.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1914#issuecomment-308780378:979,usab,usable,979,https://hail.is,https://github.com/hail-is/hail/pull/1914#issuecomment-308780378,2,['usab'],['usable']
Usability,"1. I really don't understand what this code is trying to do. Can you give me a short explanation in English?. 2. I think you just need single-use Let forwarding to optimize this. It looks like:. Push down the TableCount. (TableCount (Paralellelize ...)) should turn into (ArrayLen (GetField rows ...)). Push the ArrayLen/GetField into the Let. (Is this what your ""MaximizeLets"" is doing? I think that would traditionally be called let lifting.). Now you have (Let __cols_and_globals (ArrayLen (GetField __cols (Ref __cols_and_globals))). Then you forward the single-use Let, and the rest of the code simplifies into (ArrayLen (TableCollect (TableRead ""cols""))), and that should have the static number of rows and be able to be simplified. 3. So how should single-use Let forwarding work? You need two things: to determine there is only one use, and that the single use isn't in a more expensive context, e.g. you don't want to forward a single-use Let into a loop: (Let expensive X (ArrayMap a x <use expensive once>)). Since our control flow is structured, there is a static notion of ""loop nesting depth"", e.g. in the above code, the Let has nesting depth 0, and the use in the ArrayMap body has nesting depth 1. You can only forward into the same nesting depth. 4. Final question is, do you want the let forwarding pass to also delete unused Lets? If you delete a let, that might delete references that make other lets single (or zero) use. In this case, it might be nice to build a ""use-def chain"" data structure, that keeps, for each let, its list of uses (and vice versa). Then, when you delete a Let, you can dynamically delete the references for the right hand side, possibly creating additional optimization opportunities.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5041#issuecomment-452863737:600,simpl,simplifies,600,https://hail.is,https://github.com/hail-is/hail/pull/5041#issuecomment-452863737,4,['simpl'],"['simplified', 'simplifies']"
Usability,"1. If we receive an error other than 404 from Google when asking about an instance, we should raise. This is unexpected. (The later lines will fail anyway because spec is `None`); 2. (the main issue) if the instance is not active, do not bother contacting it and, crucially, continue `check_on_instance` eventually learning the instance does not exist.; 3. Drop timeout to 5s to talk to a batch agent. Fixes the zombie instance issue.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8023:315,learn,learning,315,https://hail.is,https://github.com/hail-is/hail/pull/8023,1,['learn'],['learning']
Usability,"1. Move `hail/www` to `site/www` and associated build commands into `site/Makefile` and a new `build.yaml` step.; 2. Prepare for a simpler docs deployment by supporting both the current 0.2 structure (top-level `www` containing `docs/0.2` and `docs/0.1`) and a future, simpler structure (top-level `docs` containing `0.2` and `0.1`).; 3. Fix `site/Makefile` which had bit-rotted. `test` doesn't really work anymore so I removed it. We could restore `make test` by figuring out a local SSL story. I went down this route but couldn't get NGINX to respond to my HTTPS requests. `make deploy` is rather fast now anyway. Currently deployed at https://internal.hail.is/dking/site/index.html. There are two known issues with dev deploy, those are resolved at https://github.com/hail-is/hail/pull/8922.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8923:131,simpl,simpler,131,https://hail.is,https://github.com/hail-is/hail/pull/8923,2,['simpl'],['simpler']
Usability,"1. Replace kaniko with buildkit.; 2. For any repository, the `cache` tag is a dump of layers that have been built before.; 3. Allow ci to start docker jobs that are ""unconfined"" by app armor and seccomp.; 4. Add `docker-build.sh` which enforces use of buildkit, knows about the `cache` tag, and ensures the cache is updated on each build.; 5. Remove the `gcloud` binary from Dockerfile.base. Replace uses with either the gcloud-sdk image or with ci-utils-image, which now contains the gcloud install.; 6. Move pyspark (which is huge, 100s of MB) before everything because its version rarely changes.; 7. Move requirements.txt to the end of base, since it changes more often than the rest.; 8. Move hailtop last in service-base because hailtop has a git SHA in it.; 9. Simplify make files: always use docker-build.sh, no explicit pushes (we almost always want to push), no explicit pulls (buildkit cache doesn't need it), none of this digest nonsense (it was never accurate anyway). When my namespace CI builds ci/test/resources/build.yaml, it finishes in 4 minutes. Still dominated by image building. Layer extraction (required when things change, e.g. hail top's SHA change or hello's python files) dominates our time. We might try collapsing the largely unchanging lower layers of service-base (pyspark, apt-get, gcs-connector, and catch2). That will hurt us when we *do* change one of those layers. Alternatively, we might make service-base based on hail-ubuntu instead of base. We could eliminate a bunch of build software like cmake, gcc, and the jdk. I based the create-certs image on hail-ubuntu to ensure its built early and doesn't hold up service deployment. The following is an as-cached-as-possible build. The service and hello images have to extract layers and build themselves because the SHA changed. <img width=""1920"" alt=""Screen Shot 2021-05-19 at 2 34 18 PM"" src=""https://user-images.githubusercontent.com/106194/118865766-4e74d800-b8af-11eb-8386-94a3782a2a45.png"">. I'm not even sur",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10502:768,Simpl,Simplify,768,https://hail.is,https://github.com/hail-is/hail/pull/10502,1,['Simpl'],['Simplify']
Usability,"1. Separating the `apk update` from the `apk add` means that if the apk package repository metadata changes (say, the URL of some repository changes) and we change our `apk add` line (say we add a new package), then the `apk add` will fail (e.g. because it has an out of date URL for the repository that should contain the new package). The `apk add --no-cache ...` invocation is essentially the same as `apk update && apk add ... && rm -rf /path/to/repo/cache`. When using docker, it is good practice remove unnecessary files so that they do not get included in the ""image diff"" for that line of the Dockerfile. `apk add --no-cache ...` succinctly performs exactly what we want. 2. Keeping each package on a separate line and sorting those lines makes diffs easy-to-read with one line per new package. 3. Because `COPY` moves all the *contents* of a source folder into the destination path (creating it if it does not exist) which must be a folder, it seems more clear to say `/batch/batch/`, indicating that we are moving data into a folder.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4791:964,clear,clear,964,https://hail.is,https://github.com/hail-is/hail/pull/4791,1,['clear'],['clear']
Usability,"1bc1497"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""42.0.2""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""5ecb4152-94d0-44ff-86c6-21e542bb123d"",""projectUrl"":""https://app.snyk.io/org/danking/project/5ecb4152-94d0-44ff-86c6-21e542bb123d?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-CRYPTOGRAPHY-6036192"",""SNYK-PYTHON-CRYPTOGRAPHY-6050294"",""SNYK-PYTHON-CRYPTOGRAPHY-6092044"",""SNYK-PYTHON-CRYPTOGRAPHY-6126975"",""SNYK-PYTHON-CRYPTOGRAPHY-6210214"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[554,704,509,454,616,584,479,509,509,509,509,589,509,691,399,479,399,539,479,479,616,616,561,519],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14327:13068,Learn,Learn,13068,https://hail.is,https://github.com/hail-is/hail/pull/14327,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"3)</h1>; <ul>; <li>Fixed <code>HTTPResponse.stream()</code> to continue yielding bytes if buffered decompressed data; was still available to be read even if the underlying socket is closed. This prevents; a compressed response from being truncated. (<code>[#3009](https://github.com/urllib3/urllib3/issues/3009) &lt;https://github.com/urllib3/urllib3/issues/3009&gt;</code>__)</li>; </ul>; <h1>2.0.1 (2023-04-30)</h1>; <ul>; <li>Fixed a socket leak when fingerprint or hostname verifications fail. (<code>[#2991](https://github.com/urllib3/urllib3/issues/2991) &lt;https://github.com/urllib3/urllib3/issues/2991&gt;</code>__)</li>; <li>Fixed an error when <code>HTTPResponse.read(0)</code> was the first <code>read</code> call or when the internal response body buffer was otherwise empty. (<code>[#2998](https://github.com/urllib3/urllib3/issues/2998) &lt;https://github.com/urllib3/urllib3/issues/2998&gt;</code>__)</li>; </ul>; <h1>2.0.0 (2023-04-26)</h1>; <p>Read the <code>v2.0 migration guide &lt;https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html&gt;</code>__ for help upgrading to the latest version of urllib3.</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/262e3e332209ee93ff70e2b13502c8f20c105ac8""><code>262e3e3</code></a> Release 2.0.6</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/644124ecd0b6e417c527191f866daa05a5a2056d""><code>644124e</code></a> Merge pull request from GHSA-v845-jxx5-vc9f</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/740380c59ca2a7c2dceca19e5dba99f6b7060e62""><code>740380c</code></a> Bump cryptography from 41.0.3 to 41.0.4 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3131"">#3131</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9f85a749488188c286cd50606d159874db94d5f""><code>d9f85a7</code></a> Release 2.0.5</li>; <li><a href=""https://github.com/urll",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13768:11556,guid,guide,11556,https://hail.is,https://github.com/hail-is/hail/pull/13768,2,['guid'],['guide']
Usability,"3/release-notes.html. Starting a Gradle Daemon (subsequent builds will be faster). > Configure project :; WARNING: Hail primarily tested with Spark 3.3.0, use other versions at your own risk. > Task :shadedazure:compileJava NO-SOURCE; > Task :shadedazure:processResources NO-SOURCE; > Task :shadedazure:classes UP-TO-DATE; > Task :shadedazure:shadowJar; > Task :compileJava NO-SOURCE; > Task :compileScala; > Task :processResources; > Task :classes; > Task :shadowJar. BUILD SUCCESSFUL in 4m 20s; 4 actionable tasks: 4 executed; cp -f build/libs/hail-all-spark.jar python/hail/backend/hail-all-spark.jar; rm -rf build/deploy; mkdir -p build/deploy; mkdir -p build/deploy/src; cp ../README.md build/deploy/; rsync -r \; --exclude '.eggs/' \; --exclude '.pytest_cache/' \; --exclude '__pycache__/' \; --exclude 'benchmark_hail/' \; --exclude '.mypy_cache/' \; --exclude 'docs/' \; --exclude 'dist/' \; --exclude 'test/' \; --exclude '*.log' \; python/ build/deploy/; # Clear the bdist build cache before building the wheel; cd build/deploy; rm -rf build; python3 setup.py -q sdist bdist_wheel; WARNING: The wheel package is not available.; WARNING: The wheel package is not available.; installing to build/bdist.linux-x86_64/wheel; creating build/bdist.linux-x86_64/wheel/hail-0.2.124.dist-info/WHEEL; creating 'dist/hail-0.2.124-py3-none-any.whl' and adding 'build/bdist.linux-x86_64/wheel' to it; adding 'hail/__init__.py'; adding 'hail/builtin_references.py'; adding 'hail/conftest.py'; adding 'hail/context.py'; adding 'hail/hail_logging.py'; adding 'hail/hail_pip_version'; adding 'hail/hail_revision'; adding 'hail/hail_version'; adding 'hail/matrixtable.py'; adding 'hail/table.py'; adding 'hail/backend/__init__.py'; adding 'hail/backend/backend.py'; adding 'hail/backend/hail-all-spark.jar'; adding 'hail/backend/local_backend.py'; adding 'hail/backend/py4j_backend.py'; adding 'hail/backend/service_backend.py'; adding 'hail/backend/spark_backend.py'; adding 'hail/experimental/__init__.py'; a",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221:16801,Clear,Clear,16801,https://hail.is,https://github.com/hail-is/hail/issues/13837#issuecomment-1770502221,1,['Clear'],['Clear']
Usability,334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at is.hail.expr.ir.BaseIR.mapChildren(BaseIR.scala:17); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$v,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7444,Simpl,Simplify,7444,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,"3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""50e1cce8-d68e-4133-a591-e2d1a6257337"",""prPublicId"":""50e1cce8-d68e-4133-a591-e2d1a6257337"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.4""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13887:9659,Learn,Learn,9659,https://hail.is,https://github.com/hail-is/hail/pull/13887,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"3D;fix-pr/settings). 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities). [//]: # (snyk:metadata:{""prId"":""d900f7ca-fce7-41d4-a16d-bad109338beb"",""prPublicId"":""d900f7ca-fce7-41d4-a16d-bad109338beb"",""dependencies"":[{""name"":""certifi"",""from"":""2021.10.8"",""to"":""2023.7.22""},{""name"":""cryptography"",""from"":""3.3.2"",""to"":""41.0.4""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""}],""packageManager"":""pip"",""projectPublicId"":""c1c98f6a-57c6-4ecc-a329-3b744cab74bd"",""projectUrl"":""https://app.snyk.io/org/danking/project/c1c98f6a-57c6-4ecc-a329-3b744cab74bd?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-CRYPTOGRAPHY-3172287"",""SNYK-PYTHON-CRYPTOGRAPHY-3314966"",""SNYK-PYTHON-CRYPTOGRAPHY-3315324"",""SNYK-PYTHON-CRYPTOGRAPHY-3315328"",""SNYK-PYTHON-CRYPTOGRAPHY-3315331"",""SNYK-PYTHON-CRYPTOGRAPHY-3315452"",""SNYK-PYTHON-CRYPTOGRAPHY-3315972"",""SNYK-PYTHON-CRYPTOGRAPHY-3315975"",""SNYK-PYTHON-CRYPTOGRAPHY-3316038"",""SNYK-PYTHON-CRYPTOGRAPHY-3316211"",""SNYK-PYTHON-CRYPTOGRAPHY-5663682"",""SNYK-PYTHON-CRYPTOGRAPHY-5777683"",""SNYK-PYTHON-CRYPTOGRAPHY-5813745"",""SNYK-PYTHON-CRYPTOGRAPHY-5813746"",""SNYK-PYTHON-CRYPTOGRAPHY-5813750"",""SNYK-PYTHON-CRYPTOGRAPHY-5914629"",""SNYK-PYTHON-REQUESTS-5595532""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Use After Free](https://learn.snyk.io/lesson/use-after-free/?loc&#x3D;fix-pr); 🦉 [Access of Resource Using Incompatible Type (&#x27;Type Confusion&#x27;)](https://learn.snyk.io/lesson/type-confusion/?loc&#x3D;fix-pr); 🦉 [Denial of Service (DoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13736:9659,Learn,Learn,9659,https://hail.is,https://github.com/hail-is/hail/pull/13736,4,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"3a82ee292f3e246b8f"">31c1b18</a>)</li>; <li>Added a new retention_duration field of Duration type (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; <li>Added object_checksums for compose/rewrite/startResumableWrite request (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; </ul>; <h3>Bug Fixes</h3>; <ul>; <li>Removed WriteObject routing annotations (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>Clarified relative resource names in gRPC IAM RPCs (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; <li>Clarified the object can be deleted via DeleteObject (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; <li>Updated the document link for <code>Naming Guidelines</code> (<a href=""https://github.com/googleapis/java-storage/commit/31c1b18acc3c118e39eb613a82ee292f3e246b8f"">31c1b18</a>)</li>; </ul>; <h3>Dependencies</h3>; <ul>; <li>Update dependency com.google.cloud:google-cloud-shared-dependencies to v3.1.0 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1797"">#1797</a>) (<a href=""https://github.com/googleapis/java-storage/commit/b1d026608a5e3772e8bf77f25f1daf68b007427a"">b1d0266</a>)</li>; <li>Update dependency org.apache.httpcomponents:httpclient to v4.5.14 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1795"">#1795</a>) (<a href=""https://github.com/googleapis/java-storage/commit/cf900f4139f30f89e3c0784467ddc12cc00cf81c"">cf900f4</a>)</li>; <li>Update dependency org.apache.httpcomponents:httpcore to v4.4.16 (<a href=""https://github-redirect.dependabot.com/googleapis/java-storage/issues/1786"">#1786</a>) (<a href=""https://gith",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12545:1787,Guid,Guidelines,1787,https://hail.is,https://github.com/hail-is/hail/pull/12545,2,['Guid'],['Guidelines']
Usability,"5 seconds vs 0.25 seconds). ```; mysql> EXPLAIN SELECT jobs.job_id, spec, cores_mcpu, regions_bits_rep, time_ready; -> FROM jobs FORCE INDEX(jobs_batch_id_state_always_run_cancelled); -> LEFT JOIN jobs_telemetry ON jobs.batch_id = jobs_telemetry.batch_id AND jobs.job_id = jobs_telemetry.job_id; -> WHERE jobs.batch_id = BATCH_ID AND (jobs.batch_id < BATCH_ID OR (jobs.batch_id = BATCH_ID AND jobs.job_id <= 15000)) AND inst_coll = ""standard"" AND jobs.state = 'Ready' AND always_run = 0 AND cancelled = 0; -> ORDER BY jobs.batch_id, inst_coll, state, always_run, -n_regions DESC, regions_bits_rep, jobs.job_id; -> LIMIT 300;; +----+-------------+----------------+------------+--------+------------------------------------------+------------------------------------------+---------+-------------------------+-------+----------+----------------------------------------------------+; | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |; +----+-------------+----------------+------------+--------+------------------------------------------+------------------------------------------+---------+-------------------------+-------+----------+----------------------------------------------------+; | 1 | SIMPLE | jobs | NULL | range | jobs_batch_id_state_always_run_cancelled | jobs_batch_id_state_always_run_cancelled | 136 | NULL | 24092 | 10.00 | Using index condition; Using where; Using filesort |; | 1 | SIMPLE | jobs_telemetry | NULL | eq_ref | PRIMARY | PRIMARY | 12 | const,batch.jobs.job_id | 1 | 100.00 | NULL |; +----+-------------+----------------+------------+--------+------------------------------------------+------------------------------------------+---------+-------------------------+-------+----------+----------------------------------------------------+; 2 rows in set, 1 warning (0.00 sec); ```. I'm open to other ideas for how to fix this. This change is a starting point for how to mitigate the issue in the short term. H",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13268:2209,SIMPL,SIMPLE,2209,https://hail.is,https://github.com/hail-is/hail/pull/13268,1,['SIMPL'],['SIMPLE']
Usability,"53f10629c3b6fa0d42acb751""><code>2bb4672</code></a> Update whats new for 3.12 (<a href=""https://redirect.github.com/ipython/ipython/issues/14000"">#14000</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/4f0b2357354aa35042244f902f9bcea9da65dfd9""><code>4f0b235</code></a> upate whats new for 3.12</li>; <li><a href=""https://github.com/ipython/ipython/commit/d52bf622ce9922106f8bcc1867c0a27a884201a0""><code>d52bf62</code></a> Allow to dispatch getting documentation on objects. (<a href=""https://redirect.github.com/ipython/ipython/issues/13975"">#13975</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/3a9419dce7d6ccf7de39be606eec2fc212ef4445""><code>3a9419d</code></a> Update completer documentation (<a href=""https://redirect.github.com/ipython/ipython/issues/13999"">#13999</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/a7d8defdecca3cfa54eada171181e0880c8b6b5f""><code>a7d8def</code></a> Expose <code>auto_suggest.resume_hinting</code>, fix resume on backspace (<a href=""https://redirect.github.com/ipython/ipython/issues/13994"">#13994</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/4e7b9408a0b35cabbdc973f131257f4e97a3ddcf""><code>4e7b940</code></a> Fix autosuggestions in multi-line mode, vi command mode delay (<a href=""https://redirect.github.com/ipython/ipython/issues/13991"">#13991</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/ad452c1d8bb25e742caa152fb301e0e6626b6faa""><code>ad452c1</code></a> Improve API documentation around configuration of embedded IPython (<a href=""https://redirect.github.com/ipython/ipython/issues/13989"">#13989</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/92027083ab69186db3f104fe38651086bcf4e760""><code>9202708</code></a> Handle OSError cases where traceback frames occur from built files (<a href=""https://redirect.github.com/ipython/ipython/issues/13964"">#13964</a>)</li>; <li><a href=""https://github.com/ipython/ipython/commit/fc872d6cfab48d861c43c766d583e",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12832:1325,resume,resume,1325,https://hail.is,https://github.com/hail-is/hail/pull/12832,2,['resume'],['resume']
Usability,"5583eb44e881""><code>71d42ed</code></a> Support top-level async. Fixes <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/951"">#951</a></li>; <li><a href=""https://github.com/microsoft/debugpy/commit/6e247fb17bc15488a2cbefb7eed80c87179b147c""><code>6e247fb</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/1009"">#1009</a> from rchiodo/rchiodo/missed_thread_for_self_trace</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/cccfb954bd7321fbb25f234f0c9a2e8372646297""><code>cccfb95</code></a> Missed a thread to allow debugging</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/6c19aba462d2a9b6ea79d5cbce2886bd961823eb""><code>6c19aba</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/1007"">#1007</a> from rchiodo/rchiodo/allow_adapter_debugging</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/10d8839a4cac4bdaf99cfe44ca2ee5479c95c003""><code>10d8839</code></a> Review feedback</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/83ff28006d2f85cfbd03fcdc2650eea6831ab2b1""><code>83ff280</code></a> Add DEBUGPY_TRACE_DEBUGPY variable to allow debugpy to debug itself</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/4f6638b0a6bbdec598987f7c2b62107a57edd6a6""><code>4f6638b</code></a> Fix <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/1001"">#1001</a>: Enable controlling shell expansion via &quot;argsCanBeInterpretedByShell&quot;</li>; <li><a href=""https://github.com/microsoft/debugpy/commit/6b276e339cd850c5f8c93ff4bdbd305dd963d7bb""><code>6b276e3</code></a> Step in/step over support for IPython. Fixes <a href=""https://github-redirect.dependabot.com/microsoft/debugpy/issues/869"">#869</a></li>; <li><a href=""https://github.com/microsoft/debugpy/commit/a294092d9c6d8459126ecb8f537b6012fb7e7d28""><code>a294092</code></a> Properly stop at line 1 in frame eval mode. Fixes <a href=""https://g",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12103:4218,feedback,feedback,4218,https://hail.is,https://github.com/hail-is/hail/pull/12103,2,['feedback'],['feedback']
Usability,"5f3f7910e"">b611670</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-storage/compare/v1.43.0...v1.44.0"">1.44.0</a> (2022-01-05)</h2>; <h3>Features</h3>; <ul>; <li>add raw_download kwarg to BlobReader (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/668"">#668</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/10cdad630739a324ae0b16a3d14a67ca4c8a23c2"">10cdad6</a>)</li>; </ul>; <h3>Documentation</h3>; <ul>; <li>Describe code sample more specifically (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/660"">#660</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/0459cb4e866696c46385a5ad72e2a85db810a36b"">0459cb4</a>)</li>; <li>refresh readme instructions (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/667"">#667</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/ceb931403a755f2a0bdc20144287dbc4700c3360"">ceb9314</a>)</li>; <li>This is just a simple PR to better describe what the code is doing in the comments. (<a href=""https://www.github.com/googleapis/python-storage/commit/0459cb4e866696c46385a5ad72e2a85db810a36b"">0459cb4</a>)</li>; <li>use writeable streamin example for 'download_blob_to_file' (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/676"">#676</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/96092d4be36be478f9671e8940de4fd09cc6f7f0"">96092d4</a>)</li>; </ul>; <h2><a href=""https://www.github.com/googleapis/python-storage/compare/v1.42.3...v1.43.0"">1.43.0</a> (2021-11-15)</h2>; <h3>Features</h3>; <ul>; <li>add ignore_flush parameter to BlobWriter (<a href=""https://github-redirect.dependabot.com/googleapis/python-storage/issues/644"">#644</a>) (<a href=""https://www.github.com/googleapis/python-storage/commit/af9c9dc83d8582167b74105167af17c9809455de"">af9c9dc</a>)</li>; <li>add support for Python 3.10 (<a href=""https://github-redirect.dependa",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11520:3971,simpl,simple,3971,https://hail.is,https://github.com/hail-is/hail/pull/11520,1,['simpl'],['simple']
Usability,"6"",""to"":""6.4.12""},{""name"":""pygments"",""from"":""2.5.2"",""to"":""2.15.0""},{""name"":""requests"",""from"":""2.27.1"",""to"":""2.31.0""},{""name"":""setuptools"",""from"":""39.0.1"",""to"":""65.5.1""},{""name"":""sphinx"",""from"":""1.8.6"",""to"":""3.3.0""},{""name"":""tornado"",""from"":""5.1.1"",""to"":""6.3.3""},{""name"":""wheel"",""from"":""0.30.0"",""to"":""0.38.0""}],""packageManager"":""pip"",""projectPublicId"":""fa47fca0-549b-41a3-8bf7-bcda4ca9a617"",""projectUrl"":""https://app.snyk.io/org/danking/project/fa47fca0-549b-41a3-8bf7-bcda4ca9a617?utm_source=github&utm_medium=referral&page=fix-pr"",""type"":""auto"",""patch"":[],""vulns"":[""SNYK-PYTHON-CERTIFI-3164749"",""SNYK-PYTHON-CERTIFI-5805047"",""SNYK-PYTHON-IPYTHON-2348630"",""SNYK-PYTHON-IPYTHON-3318382"",""SNYK-PYTHON-JUPYTERCORE-3063766"",""SNYK-PYTHON-MISTUNE-2940625"",""SNYK-PYTHON-NBCONVERT-2979829"",""SNYK-PYTHON-NOTEBOOK-1041707"",""SNYK-PYTHON-NOTEBOOK-2441824"",""SNYK-PYTHON-NOTEBOOK-2928995"",""SNYK-PYTHON-PYGMENTS-1086606"",""SNYK-PYTHON-PYGMENTS-1088505"",""SNYK-PYTHON-PYGMENTS-5750273"",""SNYK-PYTHON-REQUESTS-5595532"",""SNYK-PYTHON-SETUPTOOLS-3180412"",""SNYK-PYTHON-SPHINX-570772"",""SNYK-PYTHON-SPHINX-570773"",""SNYK-PYTHON-SPHINX-5811865"",""SNYK-PYTHON-SPHINX-5812109"",""SNYK-PYTHON-TORNADO-5537286"",""SNYK-PYTHON-TORNADO-5840803"",""SNYK-PYTHON-TORNADO-6041512"",""SNYK-PYTHON-WHEEL-3180413""],""upgrade"":[],""isBreakingChange"":false,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown""],""priorityScoreList"":[null,null,null,531,null,null,null,null,null,null,null,null,null,null,509,null,null,null,null,384,494,539,null],""remediationStrategy"":""vuln""}). ---. **Learn how to fix vulnerabilities with free interactive lessons:**. 🦉 [Remote Code Execution (RCE)](https://learn.snyk.io/lesson/improper-input-validation/?loc&#x3D;fix-pr); 🦉 [Improper Privilege Management](https://learn.snyk.io/lesson/insecure-design/?loc&#x3D;fix-pr); 🦉 [Regular Expression Denial of Service (ReDoS)](https://learn.snyk.io/lesson/redos/?loc&#x3D;fix-pr); 🦉 [More lessons are available in Snyk Learn](https://learn.snyk.io/?loc&#x3D;fix-pr)",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14024:11130,Learn,Learn,11130,https://hail.is,https://github.com/hail-is/hail/pull/14024,6,"['Learn', 'learn']","['Learn', 'learn']"
Usability,"8dc449ce32e603a""><code>2246217</code></a> burn the bridges with python 2.x (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/707"">#707</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/becbab65bae84e3e19fc388a42dfabcff0c323c8""><code>becbab6</code></a> upgrade flake8 to 4.0.1 (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/706"">#706</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/f736615f32a4bab27c9efeb5b8f8c31702efc4ab""><code>f736615</code></a> remove backported unittest methods (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/705"">#705</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/5959216f67837f3ddf5b959c21e097c7a3758d48""><code>5959216</code></a> remove checking of node.docstring (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/704"">#704</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/405a0906c8debafaae419472d3f51b84b7ba5c49""><code>405a090</code></a> simplify PYPY check (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/703"">#703</a>)</li>; <li><a href=""https://github.com/PyCQA/pyflakes/commit/30ec8589e183f76f40764a8dd78591719f521943""><code>30ec858</code></a> remove unused WIN (<a href=""https://github-redirect.dependabot.com/PyCQA/pyflakes/issues/702"">#702</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/PyCQA/pyflakes/compare/2.4.0...2.5.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pyflakes&package-manager=pip&previous-version=2.4.0&new-version=2.5.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12149:3098,simpl,simplify,3098,https://hail.is,https://github.com/hail-is/hail/pull/12149,1,['simpl'],['simplify']
Usability,"9 41 AM](https://user-images.githubusercontent.com/106194/149554866-221e4243-1238-4d01-8944-0a6ed0b4c28c.png). When you call `collect`, the Python-side `ServiceBackend` writes a file to cloud storage containing; the temporary directory, billing project, and the IR. In addition to the `execute` command used for; `collect`, there are command for getting the table type and references; genomes. `ServiceBackend._rpc` defines this API on the Python-side and; `is.hail.backend.service.ServiceBackendSocketAPI2` defines this API on the Scala-side. After writing to cloud storage, the ServiceBackend submits the one-job driver batch to Hail; Batch. It then waits for the driver job to complete. When the driver job is finished, it reads the; outputs from google cloud storage and returns the results to the user. All the meaningful changes to batch are in the worker. The worker starts one jvm per core on; startup. The mainclass is a new class called `JVMEntryway`. This entryway starts a UNIX socket and; speaks a very simple binary protocol. It accepts only one type of message:. ```; int32 the number of strings to expect; (; int32 the number of bytes in the next string; byte* UTF-8 string; )*; ```. The array of strings is interpreted as:. ```; comma-spearated-classpath; main-class-name; arg0; arg1; ...; ```. The entryway constructs a URLClassLoader with the given classpath, reflectively allocates an; instance of the mainclass and invokes the `main` method with the remaining arguments. This is; obviously a security risk. The system bans JARs from locations not controlled (and locked down) by; Hail Team. You should require me to hardcode the mainclass as; `is.hail.backend.service.ServiceBackendSocketAPI2` before we merge; however, this flexibility was; useful during development. The JVMEntryway will eventually be useful because we will keep a ClassLoader full of a bunch of; JIT-optimized Hail classes. I did not include that in this PR because we need to finish eliminating; global state",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11194:3126,simpl,simple,3126,https://hail.is,https://github.com/hail-is/hail/pull/11194,1,['simpl'],['simple']
Usability,:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTrav,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7299,Simpl,Simplify,7299,https://hail.is,https://github.com/hail-is/hail/issues/8338,1,['Simpl'],['Simplify']
Usability,":; - add compose to aiogoogle StorageClient and use it to implement (hierarchical) multi-part write for the google AsyncFS; - add AsyncFS.open_from, to open a file starting at a given offset,; - PART_SIZE is the size of parts to transfer and the combine with a multi-part write when copying large files. PART_SIZE is currently 128MB.; - BUFFER_SIZE is the size we request when reading in the copy. Change this to 256KB (from 8KB).; - Copy files in parts and use multi-part writes when copying large files.; - Parallelize rmtree (it now takes a semaphore for controlling parallelism); - Add new primitives for parallelization, bounded_gather2 and OnlineBoundedGather2. bounded_gather2 was an interesting design problem. I would describe it like this:. Say you have serial asyncio code with I/O (which will block the serial algorithm when the I/O is pending) which you'd like to parallelize. You can't do this generically, so in addition I imagine there are parallelization fork/join points where you want to run a bunch of subcomputations in parallel, wait for them all to complete, and resume where you left off. The code begins by creating a asyncio.Semaphore that globally bounds the parallelism of the code, and acquiring the semaphore before executing the code (since the entrypoint into the code accounts for one thread of control). For example:. ```; sema = asyncio.Semaphore(50); async with sema:; await copy(sema, ...); ```. Then, to run a set of operations in parallel, subject to the global parallelism bound, use bounded_gather2:. ```; await bounded_gather2(sema, *aws); ```. The naive implementation of bounded_gather2 doesn't work: bounded_gather2 cannot spawn a task for each awaitable and have it try to acquiare the semaphore, because this can lead to deadlock: if 50 tasks launch and wait for children, but none of those children can run because the parents have all the threads of control, the algorithm will deadlock. The key is to make sure at least one child can always be running",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9934:1151,resume,resume,1151,https://hail.is,https://github.com/hail-is/hail/pull/9934,1,['resume'],['resume']
Usability,"; <li><a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9866"">#9866</a>: autodoc: doccomment for the imported class was ignored</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/88f9647a223c77a29153683b49bc29852ed80721""><code>88f9647</code></a> Bump to 4.4.0 final</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/fc428ad324ef38402f1e93b38c61cd6348980ed2""><code>fc428ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/sphinx-doc/sphinx/issues/9822"">#9822</a> from jakobandersen/intersphinx_role</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/5d595ec0c4294f45f3138c4c581b84c39cae5e29""><code>5d595ec</code></a> intersphinx role, simplify role_name check</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/6ee0ecbe40ab8a3251538409cf35ffcc04765bfa""><code>6ee0ecb</code></a> intersphinx role, simplify role name matching</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/3bf8bcd6e151a78b0dd003a3e76ff4c65566b6e6""><code>3bf8bcd</code></a> intersphinx role, update docs</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/c11b109d591a74f87de071ec4782ac3ab782ea38""><code>c11b109</code></a> intersphinx role: :external+inv:<strong>: instead of :external:inv+</strong>:</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/9589a2bc0531598cdd69f260f2f2c2dbc5852d6e""><code>9589a2b</code></a> intersphinx role, remove redundant method</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/941db550f02d76ee2b93300584ac85dc599d21e6""><code>941db55</code></a> intersphinx role, fix flake8 warnings</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/9a3f2b85421948c98647b10106c1bbb5ff1b0628""><code>9a3f2b8</code></a> intersphinx role, CHANGES</li>; <li><a href=""https://github.com/sphinx-doc/sphinx/commit/540d76035cc6bbf7ee1",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11522:6046,simpl,simplify,6046,https://hail.is,https://github.com/hail-is/hail/pull/11522,2,['simpl'],['simplify']
Usability,"; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/jupyterlab/jupyterlab/releases"">jupyterlab's releases</a>.</em></p>; <blockquote>; <h2>v4.0.11</h2>; <h2>4.0.11</h2>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/compare/v4.0.10...0708330843fd087134a239d2ad6005b1d543e246"">Full Changelog</a>)</p>; <h3>Security fixes</h3>; <ul>; <li>Potential authentication and CSRF tokens leak in JupyterLab (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-44cc-43rp-5947"">GHSA-44cc-43rp-5947</a>)</li>; <li>SXSS in Markdown Preview (<a href=""https://github.com/jupyterlab/jupyterlab/security/advisories/GHSA-4m77-cmpx-vjc4"">GHSA-4m77-cmpx-vjc4</a>)</li>; </ul>; <h3>Bugs fixed</h3>; <ul>; <li>Fixes focus indicator on input checkbox for Firefox <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15612"">#15612</a> (<a href=""https://github.com/alden-ilao""><code>@​alden-ilao</code></a>)</li>; </ul>; <h3>Documentation improvements</h3>; <ul>; <li>Fix link to yarn docs in extension migration guide <a href=""https://redirect.github.com/jupyterlab/jupyterlab/pull/15640"">#15640</a> (<a href=""https://github.com/krassowski""><code>@​krassowski</code></a>)</li>; </ul>; <h3>Contributors to this release</h3>; <p>(<a href=""https://github.com/jupyterlab/jupyterlab/graphs/contributors?from=2023-12-29&amp;to=2024-01-19&amp;type=c"">GitHub contributors page for this release</a>)</p>; <p><a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab+involves%3Abrichet+updated%3A2023-12-29..2024-01-19&amp;type=Issues""><code>@​brichet</code></a> | <a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab+involves%3Afcollonval+updated%3A2023-12-29..2024-01-19&amp;type=Issues""><code>@​fcollonval</code></a> | <a href=""https://github.com/search?q=repo%3Ajupyterlab%2Fjupyterlab+involves%3Agithub-actions+updated%3A2023-12-29..2024-01-19&amp;type=Issues""><code>@​github-actions</code></a> | <a href=""https://github.com/search?",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14184:1153,guid,guide,1153,https://hail.is,https://github.com/hail-is/hail/pull/14184,1,['guid'],['guide']
Usability,; at scala.collection.Iterator$class.foreach(Iterator.scala:891); at scala.collection.AbstractIterator.foreach(Iterator.scala:1334); at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); at scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334); at scala.collection.TraversableOnce$class.fold(TraversableOnce.scala:212); at scala.collection.AbstractIterator.fold(Iterator.scala:1334); at is.hail.expr.ir.FreeVariables$.is$hail$expr$ir$FreeVariables$$compute$1(FreeVariables.scala:38); at is.hail.expr.ir.FreeVariables$.apply(FreeVariables.scala:42); at is.hail.expr.ir.Mentions$.inAggOrScan(Mentions.scala:10); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:893); at is.hail.expr.ir.Simplify$$anonfun$matrixRules$1.applyOrElse(Simplify.scala:828); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:223); at scala.PartialFunction$Lifted.apply(PartialFunction.scala:219); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$rewriteMatrixNode(Simplify.scala:68); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$3.apply(Simplify.scala:50); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$visitNode(Simplify.scala:31); at is.hail.expr.ir.Simplify$.is$hail$expr$ir$Simplify$$simplifyMatrix(Simplify.scala:52); at is.hail.expr.ir.Simplify$.apply(Simplify.scala:21); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at is.hail.expr.ir.Simplify$$anonfun$is$hail$expr$ir$Simplify$$simplifyMatrix$2.apply(Simplify.scala:49); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33); at scala.collection.mutable.WrappedArray.foreach(Wrapp,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/8338:7165,Simpl,Simplify,7165,https://hail.is,https://github.com/hail-is/hail/issues/8338,2,['Simpl'],['Simplify']
Usability,"</code> to correctly skip hostname check. <a href=""https://redirect.github.com/urllib3/urllib3/issues/3051"">#3051</a></li>; </ul>; <h2>2.0.2</h2>; <ul>; <li>Fixed <code>HTTPResponse.stream()</code> to continue yielding bytes if buffered decompressed data was still available to be read even if the underlying socket is closed. This prevents a compressed response from being truncated. (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3009"">urllib3/urllib3#3009</a>)</li>; </ul>; <h2>2.0.1</h2>; <ul>; <li>Fixed a socket leak when fingerprint or hostname verifications fail. (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2991"">#2991</a>)</li>; <li>Fixed an error when <code>HTTPResponse.read(0)</code> was the first <code>read</code> call or when the internal response body buffer was otherwise empty. (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2998"">#2998</a>)</li>; </ul>; <h2>2.0.0</h2>; <p>Read the <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">v2.0 migration guide</a> for help upgrading to the latest version of urllib3.</p>; <h1>Removed</h1>; <ul>; <li>Removed support for Python 2.7, 3.5, and 3.6 (<a href=""https://redirect.github.com/urllib3/urllib3/issues/883"">#883</a>, <a href=""https://redirect.github.com/urllib3/urllib3/issues/2336"">#2336</a>).</li>; <li>Removed fallback on certificate <code>commonName</code> in <code>match_hostname()</code> function. This behavior was deprecated in May 2000 in RFC 2818. Instead only <code>subjectAltName</code> is used to verify the hostname by default. To enable verifying the hostname against <code>commonName</code> use <code>SSLContext.hostname_checks_common_name = True</code> (<a href=""https://redirect.github.com/urllib3/urllib3/issues/2113"">#2113</a>).</li>; <li>Removed support for Python with an <code>ssl</code> module compiled with LibreSSL, CiscoSSL, wolfSSL, and all other OpenSSL alternatives. Python is moving to require OpenSSL with PEP 644 (<a href=""https:/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13768:3320,guid,guide,3320,https://hail.is,https://github.com/hail-is/hail/pull/13768,3,['guid'],['guide']
Usability,"</p>; <blockquote>; <h2>Release 3.0.9</h2>; <h3>Security</h3>; <ul>; <li>Escape path before evaluating resource rules (thanks <a href=""https://github.com/praetorian-colby-morgan""><code>@​praetorian-colby-morgan</code></a>). Prior to this, flask-cors incorrectly; evaluated CORS resource matching before path expansion. E.g. &quot;/api/../foo.txt&quot; would incorrectly match resources for; &quot;/api/*&quot; whereas the path actually expands simply to &quot;/foo.txt&quot;</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/corydolphin/flask-cors/blob/master/CHANGELOG.md"">flask-cors's changelog</a>.</em></p>; <blockquote>; <h2>3.0.9</h2>; <h3>Security</h3>; <ul>; <li>Escape path before evaluating resource rules (thanks to Colby Morgan). Prior to this, flask-cors incorrectly; evaluated CORS resource matching before path expansion. E.g. &quot;/api/../foo.txt&quot; would incorrectly match resources for; &quot;/api/*&quot; whereas the path actually expands simply to &quot;/foo.txt&quot;</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/91babb941e07a1f45636bdcb75675f13ce1503a2""><code>91babb9</code></a> Update Api docs for credentialed requests (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/221"">#221</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/522d98936f3995480fe3132b55415d74298d6790""><code>522d989</code></a> Release version 3.0.9 (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/273"">#273</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/67c4b2cc98ae87cf1fa7df4f97fd81b40c79b895""><code>67c4b2c</code></a> Fix request path normalization (<a href=""https://github-redirect.dependabot.com/corydolphin/flask-cors/issues/272"">#272</a>)</li>; <li><a href=""https://github.com/corydolphin/flask-cors/commit/",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10464:1282,simpl,simply,1282,https://hail.is,https://github.com/hail-is/hail/pull/10464,1,['simpl'],['simply']
Usability,"<a href=""https://github.com/urllib3/urllib3/commit/aa3def7d242525e6e854991247c4b68583d15135""><code>aa3def7</code></a> Release 1.26.11</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/6f93b8f450b18b4c9f4c6333d759a911a63d15ae""><code>6f93b8f</code></a> Fix <code>OverflowError</code> when TLS is used on some Python versions</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/0a5f34d2c2ee6457e8365543243eccd3d1dc9430""><code>0a5f34d</code></a> Set GHA token permissions to be read-only</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/ac61b73da703df53707c31030b4ea51aab22d43c""><code>ac61b73</code></a> Backport publish workflow and process to 1.26.x</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1fd77edc1a1373c9a7e762de148f19f1e2edd418""><code>1fd77ed</code></a> Release 1.26.10</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/37ba00248424ea3cdf556cc3e7aa81ce0bf40382""><code>37ba002</code></a> [1.26] Update paid contributor program with early feedback</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/dddbab3612ead7d39d1dc33a5a504703a8d0eecf""><code>dddbab3</code></a> [1.26] Bump RECENT_DATE</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/6dd01c74102db0d608687953e351e31df3f31d9f""><code>6dd01c7</code></a> [1.26] Update docs for re-using HTTP connections after streaming</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2049c91f732ae4fec0216c0697dee7822c25db10""><code>2049c91</code></a> Adds changing branches for installing from git docs for 1.26.x</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/cb4950545be4d427557ce863539c08655c9bdd6e""><code>cb49505</code></a> [1.26] Improve testing for IPv6 scoped addresses</li>; <li>Additional commits viewable in <a href=""https://github.com/urllib3/urllib3/compare/1.26.9...1.26.11"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-na",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12104:3324,feedback,feedback,3324,https://hail.is,https://github.com/hail-is/hail/pull/12104,1,['feedback'],['feedback']
Usability,"<code>31a89d9</code></a> v2.27.1</li>; <li><a href=""https://github.com/psf/requests/commit/8fa9724398c4f44090997ff430a1dd3e935a9057""><code>8fa9724</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/psf/requests/issues/6028"">#6028</a> from nateprewitt/prox_auth_fix</li>; <li><a href=""https://github.com/psf/requests/commit/38f3f8ecb93cadfac03a6b7b3173018ac829d0cf""><code>38f3f8e</code></a> Fix auth parsing for proxies</li>; <li><a href=""https://github.com/psf/requests/commit/0192aac24123735b3eaf9b08df46429bb770c283""><code>0192aac</code></a> v2.27.0</li>; <li><a href=""https://github.com/psf/requests/commit/e50dc12b0f620ff80a0d2026b5b0a5282894bfd4""><code>e50dc12</code></a> Fix doc link</li>; <li><a href=""https://github.com/psf/requests/commit/17e6e27a93131b7295165408e69b4cadb098b0d7""><code>17e6e27</code></a> General cleanup for 2.27.0</li>; <li><a href=""https://github.com/psf/requests/commit/ab38e2c72608b95b047b05ccfaca833edb9db1b1""><code>ab38e2c</code></a> Make the <code>data</code> vs <code>json</code> parameters more clear (<a href=""https://github-redirect.dependabot.com/psf/requests/issues/5382"">#5382</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/77d1e9aa3e000b40fdf93cfc355e1fe7cc52b6ac""><code>77d1e9a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/psf/requests/issues/5894"">#5894</a> from dbaxa/do-not-re-build-proxies-when-proxies-have...</li>; <li><a href=""https://github.com/psf/requests/commit/b0829a869081c2a6180db2cdc41a5676922becd0""><code>b0829a8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/psf/requests/issues/6020"">#6020</a> from nateprewitt/pypy_37</li>; <li><a href=""https://github.com/psf/requests/commit/28d537dde33b35c3b7071afd99122eff3538b42c""><code>28d537d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/psf/requests/issues/5917"">#5917</a> from nateprewitt/proxy_scheme_unknown_fix</li>; <li>Additional commits viewable in <a ",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11528:7986,clear,clear,7986,https://hail.is,https://github.com/hail-is/hail/pull/11528,2,['clear'],['clear']
Usability,"<img width=""1168"" alt=""Screen Shot 2021-05-24 at 4 54 34 PM"" src=""https://user-images.githubusercontent.com/63973811/129767519-85ab5cf1-2da6-41ee-b52f-44bdf63f7118.png"">. The goal of this progress bar is to have a visual concept that could show the progress of every job created. We added Plotly to show how long it takes for each step to complete when creating a batch job. We decided to use the container_status already created and created a new variable that would hold the new data that Plotly would produce. We use the job-status variable to obtain all of the creating pulling and posting information created. We inserted the data collected through a for-loop that test for each possible test case.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10687:188,progress bar,progress bar,188,https://hail.is,https://github.com/hail-is/hail/pull/10687,1,['progress bar'],['progress bar']
Usability,"=n1-standard-8', '--zone=us-central1-b', '--initialization-action-timeout=20m', '--labels=creator=weisburd_broadinstitute_org', '--max-idle=12h']' returned non-zero exit status 1.; ```. Then looking at the error log; ```; $ gsutil cat gs://dataproc-d919bddb-bde3-4138-bbe1-e068dfa1e550-us/google-cloud-dataproc-metainfo/3ec45dcc-d901-4777-930c-23046e64a97d/bw2-m/dataproc-initialization-script-0_output; pip packages are ['setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupyter', 'tornado<6', 'lxml<5', 'google-cloud==0.32.0', 'ipython<7', 'jgscm<0.2', 'jupyter-spark', 'aiohttp', 'bokeh>1.1,<1.3', 'decorator<5', 'gcsfs==0.2.1', 'hurry.filesize==0.9', 'ipykernel<5', 'nest_asyncio', 'numpy<2', 'pandas>0.22,<0.24', 'parsimonious<0.9', 'PyJWT', 'python-json-logger==0.1.11', 'requests>=2.21.0,<2.21.1', 'scipy>1.2,<1.4', 'tabulate==0.8.3', 'slackclient==2.0.0', 'websocket-client', 'sklearn', 'tabulate', 'statsmodels', 'scikit-learn', 'hdbscan', 'matplotlib']; b""Double requirement given: tabulate (already in tabulate==0.8.3, name='tabulate')\nYou are using pip version 10.0.1, however version 19.1.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n""; Traceback (most recent call last):; File ""/etc/google-dataproc/startup-scripts/dataproc-initialization-script-0"", line 16, in safe_call; sp.check_output(args, stderr=sp.STDOUT); File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 336, in check_output; **kwargs).stdout; File ""/opt/conda/default/lib/python3.6/subprocess.py"", line 418, in run; output=stdout, stderr=stderr); subprocess.CalledProcessError: Command '('pip', 'install', 'setuptools', 'mkl<2020', 'ipywidgets<8', 'jupyter_console<5', 'nbconvert<6', 'notebook<6', 'qtconsole<5', 'jupyter', 'tornado<6', 'lxml<5', 'google-cloud==0.32.0', 'ipython<7', 'jgscm<0.2', 'jupyter-spark', 'aiohttp', 'bokeh>1.1,<1.3', 'decorator<5', 'gcsfs==0.2.1', 'hurry.filesize==0.9', 'ipykernel<5",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/6634:5622,learn,learn,5622,https://hail.is,https://github.com/hail-is/hail/issues/6634,1,['learn'],['learn']
Usability,"> +1,738 -2,452. Sorry :-(. High level summary changes:; - batch and batch2: Removed /batch endpoint limit and offset options, added include_jobs. Limit was ever only 0 or None. Going forward, /batch should never return jobs, and /jobs endpoint should always paginate.; - Got rid of pods. There is no pod_status options on the client, but they are left in for legacy reasons (batch).; - Simplified worker startup and cleaned up logging paths. The old code could restart the worker after a failure after it had activated. I don't think we're equipped for that case. I do explicitly pull the worker image (with one retry) before trying to run it.; - Batch and Job are gone. database.py is effectively gone. Almost everywhere interacts directly with the database using the simple gear.Database interface, and drops down to aiomysql directly when that is insufficient (e.g. transaction with multiple executemany for /jobs/create). When we pass around data representing a job or batch, it's normally a data record (a dict).; - Added the running log test from your PR.; - The job status is no longer written to a file, just in the database jobs.status.; - I moved the INSTANCE_ID to the database. There is now a table called tokens. It has the instance id and a token for securing communication between the front end and the driver (currently unused).; - Operations that need to be atomic in the database are now implemented as stored procedures which can be called with the check_call_procedure helper in database.py. They return a row with a field rc (return code) that is 0 on success and non-zero on failure.; - Renamed Driver => Scheduler. Scheduler has two threads, one that schedules jobs that are in the Ready state, and one that cancels cancelled jobs in the Running state. There is a new job state Ready. A job is Ready if its parents are complete and it is not scheduled (instance_id is null). A job is Running if it is scheduled (instance_id is not null).; - The full set of instances are mirror",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7420:387,Simpl,Simplified,387,https://hail.is,https://github.com/hail-is/hail/pull/7420,2,"['Simpl', 'simpl']","['Simplified', 'simple']"
Usability,"> > 1. It felt outside of the scope of my PR to change that to some queue solution.; > ; > OK, great, thanks for clarifying!. Sure, this is something I am focusing on improving moving forward. Thanks for your feedback.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461210710:209,feedback,feedback,209,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461210710,2,['feedback'],['feedback']
Usability,"> > Do you mean `estimated-current.sql` rather than `estimated-current.yaml` above?; > ; > Yes, sorry for the confusion; > ; > > Also another question is how does the schema update enforce certain order of operations.; > > The rename-job-groups-cancelled-column sql should run before other sqls that depend on the modified column name in job_groups_cancelled table, correct?; > ; > Migrations are applied successively. You cannot edit a previous migration or the order in which they're applied as they've already been applied to the production database. That's why I said this:; > ; > > > I fear you'll have to take inspiration from rename-job-groups-tables.sql by applying one ALTER TABLE command then drop and recreate EVERYTHING that references that name (constraints, triggers, procedures etc). This will likely involve copy+paste and rename.; > ; > I think you need to find any trigger or stored procedure that references that column, drop it and recreate it with the field renamed. It's a little scary. @ehigham Thanks for your comments above. I’ve added the triggers and stored procedures referencing the `job_groups_cancelled` table in `rename-job-groups-cancelled-column.sql`. I was initially confused by `estimate-current.sql`; I thought it was a system-generated file to track the latest batch DDLs after a schema update, rather than a file that is manually updated. After reading this [thread](https://hail.zulipchat.com/#narrow/stream/300487-Hail-Batch-Dev/topic/mysqldump), I completely agree with your point. In other organizations I've worked with, we maintained schema changes in a separate folder, identified by release versions (e.g., semver) and the DLLs are ordered by sequence number. This way, we had a clear history of DDLs and the order they were applied, eliminating the need for files like `estimate-current.sql`. I just have one question: Do we need to manually update `estimate-current.sql` with the schema changes from `rename-job-groups-cancelled-column.sql`?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14672#issuecomment-2340993612:1726,clear,clear,1726,https://hail.is,https://github.com/hail-is/hail/pull/14672#issuecomment-2340993612,2,['clear'],['clear']
Usability,"> > I think I'm seeing more where this approach is coming from, specifically we put batches as they exist today in a special category of having no updates and avoid the new code path in that case. An alternative which pairs with my above suggestion of not adding new staging tables is that all batches have at least 1 update. I feel like if we can force all batches down the new code path we'll be incentivized to make it really low overhead for batches that only submit jobs once, and that will benefit all batches, as well as simplifying the mental model. I may be wrong that we can do this with minimal performance tradeoff, but I'd like to try it first.; > ; > Can you elaborate more? I'm not sure which code paths you are referring to. Mainly that the commit procedure branches on whether the start id is 1 and that we sometimes grab the update id from the batch token and sometimes from the update table. Not very different code paths but slightly different, which could lead to some confusion.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12010#issuecomment-1220825403:528,simpl,simplifying,528,https://hail.is,https://github.com/hail-is/hail/pull/12010#issuecomment-1220825403,2,['simpl'],['simplifying']
Usability,"> @akotlar Ok, so I finally managed to remove the internal requests. The asyncio learning curve was higher than I expected.; > ; > The final product is a lot tighter than I expected. I eliminated all the run_forever and run_once stuff, all the threading, and I was able to move the log back into server.py.; > ; > It involves three new things:; > ; > * [kill the whole loop if anything goes wrong](https://github.com/hail-is/hail/pull/5844/files#diff-14c16d042ba8b8608b60b3fcd1029869R899), which works wonderfully with k8s' automatic pod restarting; > * [use a concurrent thread pool](https://github.com/hail-is/hail/pull/5844/files#diff-14c16d042ba8b8608b60b3fcd1029869R904) for any legacy blocking operations; > * [a blocking-to-async convertor](https://github.com/hail-is/hail/pull/5844/files#diff-14c16d042ba8b8608b60b3fcd1029869R823) and a [blocking iterator to async iterator](https://github.com/hail-is/hail/pull/5844/files#diff-14c16d042ba8b8608b60b3fcd1029869R828) both of which stick blocking operations on a separate thread pool.; > ; > Legacy blocking operations might end up queueing behind one another in the ""blocking pool"", but the rest of the application continues without interruption on the main event loop.; > ; > I took the chance to reorder the k8s refresh and the k8s watch functions to be closer together, but that made the diff worse :/.; > ; > Probably demands another review on Monday.; > ; > cc: @cseed, possibly some asyncio engineering best practices in this. Awesome work. I think this will make batch much more performant.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5844#issuecomment-482761679:81,learn,learning,81,https://hail.is,https://github.com/hail-is/hail/pull/5844#issuecomment-482761679,2,['learn'],['learning']
Usability,"> @daniel-goldstein - do you know if compacting or deleting will impact other backgroud processes? Is this table used for anything else after a job group completes?; > ; > ; > ; > Also, should we also compact failed job groups?. I don't believe so, this should be fine. I would usually grep the codebase for the table name. IIRC you should see it used in:; - job insertion, clearly no longer relevant; - triggers which won't fire on cold batches; - the scheduler/fair share which should only care about rows with >0 values and active job groups. Off the top of my head, I see no reason to distinguish between different `complete` states.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14623#issuecomment-2264264725:374,clear,clearly,374,https://hail.is,https://github.com/hail-is/hail/issues/14623#issuecomment-2264264725,2,['clear'],['clearly']
Usability,"> @ehigham the only reason i represented it this way is because that's how it is in the database, like we have job attributes and then we have the always run flag for a job separately from those, but on the frontend i don't think there would be a problem with representing it as an attribute. i could change the new table column on the Batch page to be Attributes and put ""Always Run"" in there only for jobs that are always run, and i could also move ""Always Run"" to be under the Attributes header on the Job page, instead of the Properties header. happy to make either or both changes, just lmk!. That sounds not too dissimilar to how google adds 'labels' to tabular data. Personally I prefer that style, especially as more information gets added and tables get wider.; That said, I don't know how much extra data we'd want to add to this UI so that route may be slightly crystal-balling! Let's keep it simple for now as you've done already and consider something like that in the future if we have more data to add.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14425#issuecomment-2030060565:904,simpl,simple,904,https://hail.is,https://github.com/hail-is/hail/pull/14425#issuecomment-2030060565,2,['simpl'],['simple']
Usability,"> @patrick-schultz have you thought about how to wrap MakeStream (split up to avoid JVM bytecode limits) in the old or new infrastructure?. In general, I don't know how to wrap pieces of a stream in methods, since streams need to be able to jump between labels defined by different stream nodes. Maybe to handle large `MakeStream`s, and decomposing other streams into multiple methods, we could compile some streams into iterators. That shouldn't be hard to do, and would let us experiment with the performance effects. (I've been nervous about stream code never getting jit compiled, and never considered this option. I think I like it.). > Also, ToArray(MakeStream(...)) seems seems like it will be less efficient since it switches of the index while MakeArray inlines the array construction. Yeah, that seems unavoidable. If MakeArray(...) generates better code than ToArray(MakeStream(...)), is it worth keeping MakeArray, with a ToArray(MakeStream(...)) -> MakeArray(...) simplify rule?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8148#issuecomment-590861391:977,simpl,simplify,977,https://hail.is,https://github.com/hail-is/hail/pull/8148#issuecomment-590861391,2,['simpl'],['simplify']
Usability,"> Ah sorry, I forgot to update the original commit message as that's not actually correct. The optimization is that we don't need to iterate through all blobs until we find the exact blob matching our path name. The list operation returns all blobs that start with the prefix of that path. If we see a blob with a different name that is a child of our path f'{path}/foo, then we know it's a directory and don't need to iterate anymore (although it could be a file as well, but in Scala we don't currently throw errors on paths that are both files and directories, so we just choose the first we see). If we see a blob that matches the path exactly, then we know it's a file and stop iterating. The only reason we need to iterate through more than one blob is if there's blobs that are like '{path}zzzzz/foo or '{path}szzzzz. We need to ignore these as they don't provide any information on whether {path} is a file or directory. This is where isChildOf is needed because we need to make sure the blob is actually a child of the path such as '{path}/file and not {path}zzzzz/file. Ah thanks, this makes more sense to me now. > The other option is to do 2 queries. One to check if it's a file and the next to check if there are any child blobs. This does sound simpler conceptually. I'm not sure off the top of my head what is better performance-wise: the two network requests for a directory or loading a whole page of results in a single request when we only need max 2 results. What do you prefer?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13390#issuecomment-1677489464:1259,simpl,simpler,1259,https://hail.is,https://github.com/hail-is/hail/pull/13390#issuecomment-1677489464,2,['simpl'],['simpler']
Usability,"> Ah, I thought I said I was happy to fix the optimized version rather than revert. I do think it can be simplified, though, per my comments.; > ; > Cotton also had the suggestion of writing this function unstaged using two utility functions:; > ; > ```scala; > def findFirstNonZeroByte(addr: Long, n: Long): Long; > def allPresent(addr: Long, n: Long): Long // uses findFirstNonZeroByte; > ```. How do we convert from address: Code[Long] to Long without going through emit? I suppose you mean creating an unstated version, and then calling it through invokeScalaObject?. I'm happy to write this. edit: In this version, if we don't want to assume alignment, what is an easier way other than checking the alignment of the addr? I think we're assuming int alignment in much of our codebase, but this is also not guaranteed (since we only aim to guarantee power of 2, as discussed last week).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7646#issuecomment-561475978:105,simpl,simplified,105,https://hail.is,https://github.com/hail-is/hail/pull/7646#issuecomment-561475978,2,['simpl'],['simplified']
Usability,"> BTW, this is an extremely awesome change. I didn't think it would be so simple!. I am simply here for the negative LoC points",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11771#issuecomment-1100517115:74,simpl,simple,74,https://hail.is,https://github.com/hail-is/hail/pull/11771#issuecomment-1100517115,4,['simpl'],"['simple', 'simply']"
Usability,"> Banning versions completely is a little tricky because the user can specify a JAR url directly instead of a version. JARs don't currently have a simple way to report pip version to the worker, though we could cook something up. We could also just delete the old JARs. I feel like we should make a (cached) request to ensure that the JAR exists in the front-end upon job submission and return a 400 if it doesn't exist instead of waiting for the worker to error. It would:. - Allow us to remove support by deleting old jars; - Fail fast (I know I have accidentally messed up deploying a dev jar and had to wait until a worker came online to find out); - Avoid alerts from workers that can't find dev jars due to mistakes like I mention above",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664:147,simpl,simple,147,https://hail.is,https://github.com/hail-is/hail/pull/12941#issuecomment-1529754664,2,['simpl'],['simple']
Usability,"> But I actually think we are in decent shape now. I agree that we’re in decent shape. At the same time, having undocumented methods in our public documentation is not excellent, and we should strive for excellence/complete coverage",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7292#issuecomment-558282593:112,undo,undocumented,112,https://hail.is,https://github.com/hail-is/hail/issues/7292#issuecomment-558282593,2,['undo'],['undocumented']
Usability,"> Commutativity is a nice property for all aggregators to have. In particular, why add restrictive semantics when nobody is asking for them?. Commutativity isn't a property you can add. It either has it or is doesn't. And it doesn't. Same for take. ; ""adding"" it gets you collectAsSet. My proposal only simplifies. We have two semantics for collect, and I want only one. What do I need to do besides delete some key_by simplifier rules (if they are there)? Aggregators should be sequential anyway. > currently agg.collect is non-deterministic. It is? How's that?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5015#issuecomment-448848528:303,simpl,simplifies,303,https://hail.is,https://github.com/hail-is/hail/pull/5015#issuecomment-448848528,4,['simpl'],"['simplifier', 'simplifies']"
Usability,"> Could you explain why you think the boundary is invalid?. Boundary can only be used by consumers who generate an iterator with a new context. Here we were just inserting a clear before each next(), no matter who was consuming the iterator. The particular pipeline that triggered this error was a TableMapPartitions with a ToArray(Ref rows) after an IR with a repartitionedOrderedRDD2",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9425#issuecomment-689597263:174,clear,clear,174,https://hail.is,https://github.com/hail-is/hail/pull/9425#issuecomment-689597263,2,['clear'],['clear']
Usability,"> Drive by comment here as I review PRs, but this is The Python Way, for better or worse. People call it ""easer to ask forgiveness than permission"". I don't personally have strong feelings one way or the other but we do this in many places in our codebase. Be that as it may, throwing if something does not exist is clearer and more robust that catching an error because some operation failed for what is arguably unexceptional, and just hoping that the `KeyError` that that operation threw is because the item did not exist, rather than another `KeyError` risen in any subsequent work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12864#issuecomment-1516489544:316,clear,clearer,316,https://hail.is,https://github.com/hail-is/hail/pull/12864#issuecomment-1516489544,2,['clear'],['clearer']
Usability,"> For an example, let's take DOCKER_PREFIX=gcr.io/hail-vdc. > If a user submits a job using `hailgenetics/python-dill`, what do we do? We see that `image_ref.name()` in `HAIL_GENETICS_IMAGES`, so the current implementation adds the domain gcr.io and image_ref.path becomes `hail-vdc/gcr.io/hailgenetics/python-dill`. Clearly that is incorrect. The proposed change would make the path `hail-vdc/hailgenetics/python-dill`. This does in fact exist! However, this doesn't feel like the intended path based on this part of `publish-public-images.sh`, which suggests it should be `hail-vdc/python-dill`:. Hmm, the proposed implementation actually prints 'hail-vdc/python-dill' for `image_ref.path`:. ```; image_ref = parse_docker_image_reference('hailgenetics/python-dill'); # image_ref.path == 'python-dill'. if image_ref.name() in HAIL_GENETICS_IMAGES:; image_ref.domain = DOCKER_PREFIX.split('/', maxsplit=1)[0] # 'gcr.io'; image_ref.path = '/'.join(DOCKER_PREFIX.split('/')[1:] + [image_ref.path]) . # image_ref.path == 'hail-vdc/python-dill'; ```. Though it should probably be `hail-vdc/hailgenetics/python-dill`? (I also just updated `publish-public-images.sh` to push to `$docker_prefix/hailgenetics/$name`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/10382#issuecomment-828117089:317,Clear,Clearly,317,https://hail.is,https://github.com/hail-is/hail/pull/10382#issuecomment-828117089,1,['Clear'],['Clearly']
Usability,"> For the tutorial, I'll just put a password. I think for Stanley Center stuff we should use GCP auth. Yes. I'm imagining we'll have a tutorial service for intermittent tutorials and a jupyter/Hail service, both, although maybe eventually the latter can be used for both?. > But yeah, I also saw timeouts if a pod can't be scheduled right away. I definitely saw this case (e.g. I refreshed and then got the notebook). > I think imagePullPolicy: Never is a bad idea. Agreed, too aggressive. > I think we should rely on k8s to pull the 5GB jupyter image in a reasonable time period. No. I'm going to be demanding about making our tools responsive with good feedback (not responsive in the sense of responsive web design, but responsive in the sense of fast). It has to be fast, and when can't be, it has to give clear feedback about what it's doing and how long it will take. We routinely see pulling a 5GB image take 1-2m. That's spin up a VM level nonsense. Kubernetes 1.6 had an SLO to schedule 99% of pre-pulled containers within 5s on a 5K node cluster (from the plots it looks like they were closer to 2s):. > Pod startup time: 99% of pods and their containers (with pre-pulled images) start within 5s. from http://webcache.googleusercontent.com/search?q=cache:Soglxt0kAI0J:blog.kubernetes.io/2017/03/scalability-updates-in-kubernetes-1.6.html+&cd=1&hl=en&ct=clnk&gl=us. When we have to pull an image, I want spinner and the estimated spin time. If we have to spin up a node, same. (I know this is a first cut. I'm just saying where I'd like to see us head.). > I just run make clean-jobs, but we could add a delete endpoint and a little web page. OK, here's my picture:; - first time, prompt for password,; - if no notebook is running launch one and go straight there,; - if notebook is running, get a page with a link to the notebook and a link to kill it. That might be considered strange web design (skip the console depending on the state), in which case I'd vote for the console always. (Wha",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4576#issuecomment-431248659:634,responsiv,responsive,634,https://hail.is,https://github.com/hail-is/hail/pull/4576#issuecomment-431248659,14,"['clear', 'feedback', 'responsiv']","['clear', 'feedback', 'responsive']"
Usability,"> Hi Ivan! Thanks so much for picking this up :) I haven't much experience on the batch system but I'll try my best to give accurate feedback. I have a few questions/observations up front:; > ; > 1. Your changes to stored procedures under `batch/sql` make me a little nervous.; > ; > Most of these are migrations applied in the order defined in the build step mentioned in [NOTE 1] except `estimated-current.sql` [NOTE 2].; > ; > I don't think changing these will have the desired effect and may make it impossible for someone to reproduce the database. The only changes to _existing_ sql you'll need to make are in the sql strings in python code.; > ; > 2. This needs to be written as a migration and maybe could be simplified?; > ; > I think this needs to be done as a database migration. We'll have no need for a stored procedure once complete. You can assume current columns and constraints exist, dispense with the error checking and simplify. Can you convert this to a sql script and add it to the end of the list of migrations in `build.yaml`? You'll probably want `online: false` too. I fear you'll have to take inspiration from `rename-job-groups-tables.sql` by applying one `ALTER TABLE` command then drop and recreate EVERYTHING that references that name (constraints, triggers, procedures etc). This will likely involve copy+paste and rename. Alternatively, create, execute then drop the procedure within `rename-job-groups-cancelled`.; > ; > [NOTE 1] migration applied in `build.yaml`; > ; > The relevant build step in `build.yaml` can be found by searching for the entry starting with the yaml below. This controls which migrations are applied and in what order.; > ; > ```yaml; > kind: createDatabase2; > name: batch_database; > databaseName: batch; > ```; > ; > [NOTE 2] estimated-current.yaml; > ; > I don't agree with why we have this. It would be nice to generate this automatically. Anyway, please keep your changes to this file as it's meant for documentation purposes only. None ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14672#issuecomment-2334778045:133,feedback,feedback,133,https://hail.is,https://github.com/hail-is/hail/pull/14672#issuecomment-2334778045,6,"['feedback', 'simpl']","['feedback', 'simplified', 'simplify']"
Usability,"> How do I use a single non-optional allowedOverlap to express this versus a TMP function that doesn't care about keying/sorting at all?. Ah, I see. I think the answer is: you can't. You would need another integer parameter to say ""I actually depend on this prefix of the key being sorted"". It seems like allowedOverlap and requiredSortedPrefix are completely independent. In the single key case (for simplicity), you may or may not care if keys are localized in one partition, and you may or may not care if they're sorted. I don't see any connection.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12587#issuecomment-1407126299:401,simpl,simplicity,401,https://hail.is,https://github.com/hail-is/hail/pull/12587#issuecomment-1407126299,2,['simpl'],['simplicity']
Usability,"> I also think this should just be defined inline in the makeNDArray emitter, we shouldn't need to change this file. Good point that's simpler",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9094#issuecomment-660299878:135,simpl,simpler,135,https://hail.is,https://github.com/hail-is/hail/pull/9094#issuecomment-660299878,2,['simpl'],['simpler']
Usability,"> I believe you're referencing Chrome Bug 675308 which suggests that lines thicker than 1 are broken in some versions of Chrome. My change uses line width 1. My point was that there are browser inconsistencies. > The screenshots you shared seem to suggest that Brave is making the lines somewhat fainter than Safari. I can't explain that. . I also can't explain it, and haven't found a Safari bug that would suggest why this is the case, and yet it is clear from that screenshot that there is a difference. > It feels brittle to fiddle with device pixel ratio and line width to try and simulate line widths smaller than a pixel. My current mental model is that we're just hitting a resolution issue. Internally threejs I believe sets the webgl buffer to pixelRatio * width/height. With resolution 1, resolution seems too low, and this causes fuzzy lines. I don't know why it doesn't work better. To test this hypothesis, I've tried setting pixelRatio to 1 manually on a hidpi display, and it gave a similar fuzzy/thick result, which of course doesn't make any sense if linewidth actually did what it seems it should, and so I agree that not relying on linewidth would be nicer, but would also be additional work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8964#issuecomment-646227792:452,clear,clear,452,https://hail.is,https://github.com/hail-is/hail/pull/8964#issuecomment-646227792,2,['clear'],['clear']
Usability,"> I don't like the proliferation of `.copy` methods -- I find it extremely hard to reason about what they're actually doing and where they should be used. I think it would be reasonable for each PType to implement a `setRequired` method, which seems to require the same amount of total code, but makes things a bit simpler. Will do this. At the same time, would you mind helping me understand why you don't like .copy? This has come up before, and wasn't fully explained. The semantics seem straightforward to me, and for case classes require no new code (since case classes define this copy method): ""construct a new instance of this class, using constructor arguments whose defaults are the object's constructor arguments"". I'd like to understand how you see .copy.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8127#issuecomment-589146282:315,simpl,simpler,315,https://hail.is,https://github.com/hail-is/hail/pull/8127#issuecomment-589146282,2,['simpl'],['simpler']
Usability,"> I don't think we have a clear policy on this. When I'm making stacked changes, I use one-commit per PR so that they can be reviewed independently. You're welcome to take either approach. I think the policy we've been roughly sticking to on the compilers team is that people don't need to make one commit per PR, but also shouldn't expect that stacked PRs are reviewed until the parent goes in.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8920#issuecomment-638971130:26,clear,clear,26,https://hail.is,https://github.com/hail-is/hail/pull/8920#issuecomment-638971130,2,['clear'],['clear']
Usability,> I feel that I've learned more about RVDs and partitioners. Same here! Good discussion!,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5424#issuecomment-467130254:19,learn,learned,19,https://hail.is,https://github.com/hail-is/hail/pull/5424#issuecomment-467130254,2,['learn'],['learned']
Usability,"> I realize I wanted `satisfiesAllowedOverlap(key.length - 1)`, not `satisfiesAllowedOverlap(0)`. Because `allowedOverlap` is tricky to think about, I also gave constructor overloads that take `partitionKey` like in the old style. So this case is equivalent to setting `partitionKey == key` in the constructor `def this(partitionKey: Array[String], kType: TStruct, rangeBounds: IndexedSeq[Interval])`, if you think that's clearer.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5424#issuecomment-467085463:422,clear,clearer,422,https://hail.is,https://github.com/hail-is/hail/pull/5424#issuecomment-467085463,2,['clear'],['clearer']
Usability,"> I still generally find nginx and rules about trailing slashes confusing, but as far as I can tell this seems fine. What do you find confusing?. edit:; Not sure if this helps (if not, let me know, I should be able to clearly answer any questions you have):. Normal location blocks (meaning `location /path/to` with no modifiers or regex) match on prefix, which means that Nginx checks whether the specified `/path/to` exists entirely as a word in the longer url, starting from the beginning of that url (after the domain). A `location = /path/to` (with `=` modifier), is similar in that it is checked against the beginning of the url, with the change that the matched prefix must match exactly (there cannot be anything after `/path/to`). The proxy_pass rule with regard to slashes: Say I have `location /path/to/foo { proxy_pass http://127.0.0.1; }`. Upon matching, Nginx will redirect the request to `127.0.0.1/path/to/foo`, because in the absence of a trailing slash, the entire url (after the domain) is appended. If the proxy_pass directive has a trailing slash, the entire matched prefix is dropped, and only the uri after the prefix is appended. Ex: if the url was `http://domain.com/path/to/foo`, the redirect would be `http://127.0.0.1/`. If the url was `http://domain.com/path/to/foo/bar` the redirect would be to `http://127.0.0.1/bar`. In this PR, when no trailing slash is provided to `https://internal.hail.is/monitoring/service`, the exact location block matches, since the inexact match block has a trailing slash, and therefore doesn't match the slash-less url (moot point anyway: if we made both the inexact and exact location blocks have no slashes, the exact one would take precedence). Then we specify that the proxy_pass has a trailing slash for each block, so that the root of the internal website is `/` rather than `/monitoring/{service}`",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7015#issuecomment-555152983:218,clear,clearly,218,https://hail.is,https://github.com/hail-is/hail/pull/7015#issuecomment-555152983,2,['clear'],['clearly']
Usability,"> I think I can address collectively by removing all hailctl options that pass through to gcloud. This removes the question of providing them twice, makes all the commands consistent. Do you mean remove all options that are simple pass throughs (such as `--num-worker-local-ssds`) or all options that are also gcloud options (such as `--project`)? The latter could be difficult, since there are some gcloud options that hailctl also needs to read, like `hailctl dataproc start` using `--project` to set requester pays configuration, extending `--initialization-actions` with notebook/VEP init scripts, setting a higher default disk size when `--vep` is specified, etc. or `hailctl dataproc submit` automatically zipping `--py-files`. > I think this also addresses the issue hailctl dataproc submit not supporting --, because you can specify it twice: once to break out of hailctl options, and once to break out of gcloud options to specify options the script being submitted: hailctl dataproc submit --halictl-option -- --gcloud-options -- --script-options and-parameters. Nice. That would solve the problem. I would guess submitting script arguments is more common than using gcloud options here, so it would be nice for the gcloud arguments group to be optional, so that `hailctl dataproc submit cluster -- --script-options` would work.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9842#issuecomment-758100479:224,simpl,simple,224,https://hail.is,https://github.com/hail-is/hail/pull/9842#issuecomment-758100479,2,['simpl'],['simple']
Usability,"> I think I'm seeing more where this approach is coming from, specifically we put batches as they exist today in a special category of having no updates and avoid the new code path in that case. An alternative which pairs with my above suggestion of not adding new staging tables is that all batches have at least 1 update. I feel like if we can force all batches down the new code path we'll be incentivized to make it really low overhead for batches that only submit jobs once, and that will benefit all batches, as well as simplifying the mental model. I may be wrong that we can do this with minimal performance tradeoff, but I'd like to try it first. Can you elaborate more? I'm not sure which code paths you are referring to.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12010#issuecomment-1219867494:526,simpl,simplifying,526,https://hail.is,https://github.com/hail-is/hail/pull/12010#issuecomment-1219867494,2,['simpl'],['simplifying']
Usability,"> I think if it's not too hard of a change, we should add the files with encoded secrets to something like `infra/gcp/data/...`. This makes it clear that these files have a different purpose and gives some indication that they're specific to your repo. If you want to also add prefixing the file name with the repo, then that would make it even clearer. But if it's too much work, don't bother. Maybe something like `infra/gcp/data/hail-is/` etc. I've put all deployment-specific configs in an `$ORGANIZATION_DOMAIN` subfolder now, which hopefully should avoid any collisions.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/11724#issuecomment-1173211731:143,clear,clear,143,https://hail.is,https://github.com/hail-is/hail/pull/11724#issuecomment-1173211731,4,['clear'],"['clear', 'clearer']"
Usability,"> I think pretty strongly that if nPreservedFields==0, you've done something very wrong. I don't disagree, but if you're concerned about this, I think an assert here is both in the wrong place and the wrong solution. I think for the design the IR, we should focus on (1) simple operations (this is already more complicated than I'd like), (2) that are composable, and (3) minimize special cases. By composability, I mean each IR should have a (local) contract, and each program composed from that local contract should be valid. Breaking this introduces a lot of potential bugs that can't be reasoned about locally, which is not good. The IR nodes do what they do. If you don't like what they do, we should probably find different ones. > so how could you possibly join this with another table? You'd have to create a single partition, and we'd never want to do that. Yeah, create a single partition. Or reshuffle if the partitioner has too little information. How much is too little? What if nPreservedFields==1 and we're down to 1 partition? Should that be an error? 2 partitions? How many partitions is too few? Any time nPreservedFields is less than the requested keys, you could get down to 1 partition. This is a continuous issue and rejecting the extreme case doesn't actually solve the problem. I guess isSorted isn't user exposed, but this seems dangerously close to reporting a user error with an assertion. When the service comes up, hopefully not too long, we're going to want to document the IR and make it public. So if we want to reject this case, we should do it early on: when the IR is parsed and/or constructed. (In general I think to give a nice experience we're going to have to do more up-front validation.) This is what I mean when I say ""find another IR"". In summary:; - If we're going to have this assertion, it needs to be in TableKeyBy constructor, and; - This is a complex and serious issue that isn't actually solved by your assertion.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8649#issuecomment-622415940:271,simpl,simple,271,https://hail.is,https://github.com/hail-is/hail/pull/8649#issuecomment-622415940,2,['simpl'],['simple']
Usability,"> I think we can also get rid of TIterable by refining the type casting in ToSet/ToDict/ToArray/ToStream nodes to reflect the new semantics. Yes, I will consider that in a later pass. > For python---the idea is that we're not really introducing any user-visible changes, right?. Correct. And yes, the optimizer should strip out any glue. > I'm a little nervous about the ToArray(ToStream(dict/set) idiom we're using here. OK, this is fixed. I added a CastToArray which takes a TContainer and does a no-op cast to array type. I use it wherever I can and I added a simplify rule to introduce it when possible.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8171#issuecomment-592219318:563,simpl,simplify,563,https://hail.is,https://github.com/hail-is/hail/pull/8171#issuecomment-592219318,2,['simpl'],['simplify']
Usability,"> I thought we were going to load the genome reference upon initializing the HailContext. That is correct. I just want to double-check the VDS reference matches the global one. We won't support multiple datasets with different references in a single Hail session with this change. That's an intentional assumption to make the first version of reference support simpler. . Right, so you should also add a reference option the HailContext constructor (last argument, named with default to GRCh37 not to break backward compatibility) to set the reference.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1789#issuecomment-302433569:361,simpl,simpler,361,https://hail.is,https://github.com/hail-is/hail/pull/1789#issuecomment-302433569,2,['simpl'],['simpler']
Usability,"> I understand what is going on now. The issue is that the temp directory is getting removed after the first batch.run(), but we're assuming those input files are still there.; > ; > I think we should just clear the files and definitions cache after submission. Ah I see, ya let's not go that far. In that case we don't need any of the changes in this PR that deal with the python input files right? Other than to clear those dictionaries after submit?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12530#issuecomment-1428760971:206,clear,clear,206,https://hail.is,https://github.com/hail-is/hail/pull/12530#issuecomment-1428760971,4,['clear'],['clear']
Usability,> I wanted to remove /batch in a different PR so it was clear what additional changes there were besides rm /batch. Smart. Disregard my suggestion.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7474#issuecomment-551180556:56,clear,clear,56,https://hail.is,https://github.com/hail-is/hail/pull/7474#issuecomment-551180556,2,['clear'],['clear']
Usability,"> I'm curious if there's a way to rewrite this to be more clear about the state machine?. Yes, this is quite confusing as written, I think.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6581#issuecomment-509610153:58,clear,clear,58,https://hail.is,https://github.com/hail-is/hail/pull/6581#issuecomment-509610153,2,['clear'],['clear']
Usability,"> I'm going to start testing, but I think the only thing that wasn't clear to me was how to resolve these sorts of comments. Do I try and fix them now or in a separate PR with an issue to make sure it gets noted? [#14170 (comment)](https://github.com/hail-is/hail/pull/14170#discussion_r1473442106). Since this is merely propagating existing bad behavior, let's change it separately so as to keep the conceptual overhead of this change as small as possible. Please make an issue and paste the link into each comment so that we can later track how we resolved each comment. . > Ok. Still working on getting the tests to pass and cleaning things up. However, I ran into a small snag. The code below needs to be ironed out. Should the number of jobs and state of the job group be recursive or specific to that job group? It's a bit weird for the billing and cancellation to be nested, but the number of jobs etc. are not. More concretely, if a child batch is running, should the parent also be running even if it has no direct child jobs that are running? Thoughts?; > ; > cc: @daniel-goldstein; > ; > ```sql; > UPDATE batches SET; > `state` = 'running',; > time_completed = NULL,; > n_jobs = n_jobs + expected_n_jobs; > WHERE id = in_batch_id;; > ; > ### FIXME FIXME what should the state be of nested job groups?; > UPDATE job_groups; > INNER JOIN (; > SELECT batch_id, job_group_id, CAST(COALESCE(SUM(n_jobs), 0) AS SIGNED) AS staged_n_jobs; > FROM job_groups_inst_coll_staging; > WHERE batch_id = in_batch_id AND update_id = in_update_id; > GROUP BY batch_id, job_group_id; > ) AS t ON job_groups.batch_id = t.batch_id AND job_groups.job_group_id = t.job_group_id; > SET `state` = 'running', time_completed = NULL, n_jobs = n_jobs + t.staged_n_jobs;; > ```. When you say ""billing and cancellation [is] nested"" do you mean that the bill for a group is the sum of the bill for all jobs directly in the group with all jobs in any descendent group?. Since we decided that groups are nested, my inclinatio",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14170#issuecomment-1940341021:69,clear,clear,69,https://hail.is,https://github.com/hail-is/hail/pull/14170#issuecomment-1940341021,2,['clear'],['clear']
Usability,"> I'm not sure people actually use globals, though. I not sure either. I'm pretty sure @konradjk, does but it may be to work around other issues that can be fixed separately. We're going to set up a regular (quarterly?) meeting with the data group for Hail feedback. We could ask this there.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/4027#issuecomment-408648344:257,feedback,feedback,257,https://hail.is,https://github.com/hail-is/hail/issues/4027#issuecomment-408648344,2,['feedback'],['feedback']
Usability,"> In general, I think it is safest not to rely on the order of evaluation. I'm not aware of where we do. Unless I'm missing something, this code splitter does rely on the evaluation order, which is why I asked about it. If a statement `x` has large children, it moves them to execute before `x`, evaluated in the `children` array order (more precisely, in the post-order traversal order), storing their results in locals. I think it's possible to avoid relying on order of evaluation, if instead of only splitting out sequences of statements, we can also split out a `ValueX` directly, replacing it by a call to new method which returns the result. I don't have strong feelings about whether the order should be guaranteed, just want to be clear which it is.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8958#issuecomment-645546246:740,clear,clear,740,https://hail.is,https://github.com/hail-is/hail/pull/8958#issuecomment-645546246,2,['clear'],['clear']
Usability,"> In my proposal, the body would have to have a stream type. It does:; https://github.com/hail-is/hail/pull/8028/files#diff-beb69e35856952c39b4b4929ac5fb987R973. This design is very similar to what you're looking for. The right structure for the node wasn't super clear (we aren't super far along in lowering, so the needs aren't obvious) but I think the core piece that we need in any kind of lowering intermediate is code-generated iterators, which are implemented here.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8028#issuecomment-589016449:264,clear,clear,264,https://hail.is,https://github.com/hail-is/hail/pull/8028#issuecomment-589016449,2,['clear'],['clear']
Usability,"> Is it worth making a separate PR that explicitly manages the gcsfuse processes PIDs? If yes, can you do that?. Ya I can do this. Should we try to just keep it simple in this PR then? Like just what you had originally where we return after any calls to unmount fail",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12975#issuecomment-1533445556:161,simpl,simple,161,https://hail.is,https://github.com/hail-is/hail/pull/12975#issuecomment-1533445556,2,['simpl'],['simple']
Usability,"> Just to be clear, the other things you tried besides the nginx config shouldn't be in the PR?. I'm not sure. When I was debugging the issue, I tried a bunch of things, and in the end I'm not sure which ones actually worked. I didn't like timing out the scheduler because that can lead to double-schedule. I think ultimately we should control the work entering the driver by some metric of its performance: like CPU load or latency of handling job_complete messages or latency of scheduling per job.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8149#issuecomment-591935256:13,clear,clear,13,https://hail.is,https://github.com/hail-is/hail/pull/8149#issuecomment-591935256,2,['clear'],['clear']
Usability,"> Looks good to me. PNDArray is a little unstable at the moment and probably going to get shaken up in January, so I don't have a clear sense of any must have default methods. cool, we'll stay on top of it then.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7734#issuecomment-567166972:130,clear,clear,130,https://hail.is,https://github.com/hail-is/hail/pull/7734#issuecomment-567166972,2,['clear'],['clear']
Usability,"> Love this! I think this graph would be easier to reason about if you made all the bars the positive percentage runtime (i.e. runtime_i / mean(runtime)). Then add a gray line at 100% to indicate whether you're faster or slower. In this representation, the relative sizes of the bar are easy to see and meaningful (if bar 1 is half the size of bar 2, then option 1 is 2x as fast). I've taken a different approach. I've made the first argument the baseline against which all other runs are compared. the baseline result isn't plotted anymore, instead differences to the baseline are plotted. I think the plot is a lot clearer now. I also think negative values make more sense as we're comparing runs directly against a baseline. Let me know what you think!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12856#issuecomment-1503596842:617,clear,clearer,617,https://hail.is,https://github.com/hail-is/hail/pull/12856#issuecomment-1503596842,2,['clear'],['clearer']
Usability,"> On the other hand, query can be seen as a DSL on top of Python, so the same guidelines probably don't need to be applied to it. You've hit exactly on the center of a longstanding discussion on the team with no definitive resolution 😄",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9931#issuecomment-768742121:78,guid,guidelines,78,https://hail.is,https://github.com/hail-is/hail/pull/9931#issuecomment-768742121,2,['guid'],['guidelines']
Usability,> Or maybe this should be called [base_path](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base)?. Also would appreciate feedback on the naming if you have any,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14056#issuecomment-1877749736:133,feedback,feedback,133,https://hail.is,https://github.com/hail-is/hail/pull/14056#issuecomment-1877749736,2,['feedback'],['feedback']
Usability,"> Re: testing, I wanted to wait on the spawned batch and ensure that it passed, but I had trouble doing that because it looks like the new rich progress bars are printed to stdout so I can't make use of json output and `jq`. Can we print the progress bars to stderr instead?. I think this is possible but I haven't looked into it. I'm opposed to stderr in Notebooks because I don't want it to appear with red background. I've recently realized that a lot of users find it concerning that we print so much red background text. You might also have a quiet mode? If you don't `wait` on the batch, do you still get a progress bar?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967:144,progress bar,progress bars,144,https://hail.is,https://github.com/hail-is/hail/pull/12471#issuecomment-1324145967,6,['progress bar'],"['progress bar', 'progress bars']"
Usability,"> Right I understand. If a PType always places its items into one region, that doesn't seem problematic. I'm having trouble explaining why I think this is wrong. I think it basically makes nothing simpler, and makes many things more complicated (InferPTypes as written will not work, since you have no idea about regions at that point).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/7826#issuecomment-575732118:197,simpl,simpler,197,https://hail.is,https://github.com/hail-is/hail/issues/7826#issuecomment-575732118,2,['simpl'],['simpler']
Usability,"> Sorry, I wasn't clear before. The Batch LD Clumping example does not require Hail Query (and, more importantly, a JVM) to be installed on *the computer that submits the batch*. Hail is imported and used inside of the Batch task that performs GWAS. That task runs inside a Docker container that has Hail installed (its derived from `hailgenetics/hail`).; > ; > ; > ; > I'm hesitant to make the *submission* of a batch dependent on the Hail Query library. Particularly when we have relatively low-effort alternative approaches. I'm delighted any time I see batch tasks use Hail Query! Konrad's Pan UKB work also does this. Right I realize this, why I mentioned unit test (to make unit tests work without calling hail, we would need to wrap each function we want to test in a cli interface, and then containerise those functions...this seems not so friendly to contributors). A 2nd question: how would a contributor submit write hybrid hail query/batch code that called batch from within a hail query script? So hail transforms data, say generates pc's, writes table, and then issues some batch commands that use a pre-built image, as opposed to requiring them to containerise their hail cod3. This will be useful: containerisation is the stated biggest pain point of batch, from my interviews. And one of the biggest hail issues is shuttling data between hail and other processes, which has led people to ask for tighter integration, or more statistical tools (so that they don't need to go out to those other tools, like plink). Showing Batch working from within hail-query scripts would be useful because it will show a much easier integration, and those examples or contributed modules should live somewhere (and that seems not to be hailtop, because this requires batch to be called from code that is calling hail directly, rather than through an image).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9194#issuecomment-671459432:18,clear,clear,18,https://hail.is,https://github.com/hail-is/hail/pull/9194#issuecomment-671459432,2,['clear'],['clear']
Usability,"> That should be a simple fix, though perhaps at this point not worth it as this is not a fruitful optimization for this query. Agreed, although depending on the time line for a good optimization for this query I may circle back on this, as there is currently a bug in this deduplication so if the actual optimizaion won;t be available for a while it might be worth fixing in the meantime",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13882#issuecomment-1839244525:19,simpl,simple,19,https://hail.is,https://github.com/hail-is/hail/issues/13882#issuecomment-1839244525,2,['simpl'],['simple']
Usability,"> The changes around `toJSON` seem to be unrelated to the introduction of `VType`. Can you explain the motivation there?. This was added as a step towards a greater refactoring effort where I applied a number of changes to try and make various backend implementations look the same.; `Type`, `TableType` and `MatrixType` had a `toJSON` method, with the exception of `BlockMatrixType`. Since these are all virtual types, it seemed like a simple change to unify these methods.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14678#issuecomment-2341475173:437,simpl,simple,437,https://hail.is,https://github.com/hail-is/hail/pull/14678#issuecomment-2341475173,2,['simpl'],['simple']
Usability,"> The check for duplicate key is necessary temporarily to make sure someone doesn't do this.; > ; > ```; > b = batch_client.create_batch(); > j = batch.create_job(); > b2 = batch_client.get_batch(b.id); > j2 = b2.create_job(); > ```; > ; > `j` and `j2` will have the same batch id and job id. Checking the job_id in some capacity is totally necessary, since you're no longer using an auto increment id for the job_id (since you're really emulating one job table per batch, by sticking into a denormalized table containing both batch and job information). However, in the time it takes you to check that the job_id doesn't exist, another process could issue that job_id, invalidating your request, and causing you to fail *anyhow*, despite your check. . I would use the table as the origin of truth of the value, and have python simply read that resulting value. We give MySQL back the control for incrementing the id (by using a nested query, checking the max id in a select statement, and then using +1 that as your id). This will guarantee the behavior that you want, because InnoDB will lock the table.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6238#issuecomment-498333308:828,simpl,simply,828,https://hail.is,https://github.com/hail-is/hail/pull/6238#issuecomment-498333308,2,['simpl'],['simply']
Usability,"> The end we're taking the max (in our favor). I'm not totally comfortable with that, e.g. a preemption happens after a job is finished, but the preemption event gets recorded first, you'll charge the user up to the preemption (max) even tho the job already finished. That doesn't seem right. So I see two options:. I intended to always take the min (user's favor) for the end time and the start time should never change but if it does I take it to be earlier in our favor. If the trigger isn't doing that then I got it wrong. Basically, the way I understood the trigger is as follows:. ```; IF OLD.end_time IS NOT NULL AND (NEW.end_time IS NULL OR NEW.end_time > OLD.end_time) THEN; SET NEW.end_time = OLD.end_time;; SET NEW.reason = OLD.reason;; END IF;; ```. This will update the record to have the new end time unless the old end time is not NULL and either the new end time is null (don't want to overwrite the existing value with a null value) or new end time > old end time (don't want to update the record with an end time that is greater than the existing end time in the database). To not override the values, then we need to set the new end time and reason to the old end time and reason to avoid updating the record. Does this make sense? . > Use the reason to update the end time. Completed time should be taken first, then I think whatever is earliest (in the user's favor) between deletion/preemption and cancellation. I can do this if you think it's clearer. I think the answer will be the same. > Alternatively, we just take the earliest time (in the user's favor) always which I think can only give up a small amount of compute on deletion/preemption or cancellation (where we see the event, and while it's being processed, the job completes). This is what I'm doing (or I think I'm doing). See comment above.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7600#issuecomment-558726375:1466,clear,clearer,1466,https://hail.is,https://github.com/hail-is/hail/pull/7600#issuecomment-558726375,2,['clear'],['clearer']
Usability,"> The missing permission is `storage.buckets.get` though? It seems reasonable for a user to [be able to read metadata](https://cloud.google.com/storage/docs/access-control/iam-permissions) about their own bucket. I'd wager that jgscm was designed for use with the `roles/storage.legacyBucketWriter` role granted on their bucket. What role are we currently granting?. The problem I believe is that they would need project-wide read/list permissions. The blob (folder) is not being created in their bucket, but as a new bucket in the project. edit: You can clearly see the difference if you click on the checkpoint folder, back up to the folder /bucket_name and try to create a folder. No additional permissions needed (it's being made in their bucket)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5788#issuecomment-480375549:555,clear,clearly,555,https://hail.is,https://github.com/hail-is/hail/pull/5788#issuecomment-480375549,2,['clear'],['clearly']
Usability,"> The one thing I'd say is just that when we make a user facing change, we try to make one of the commits look like:; >; > CHANGELOG: Added or_error method to SwitchBuilder; >; > This ends up being helpful when I have to go through and generate the change log for a new version release. Good to know, updated the commit message. It would be nice to document conventions like this in the [docs for software developers](https://hail.is/docs/0.2/getting_started_developing.html#contributing) and/or a [contributing file](https://docs.github.com/en/free-pro-team@latest/github/building-a-strong-community/setting-guidelines-for-repository-contributors).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9749#issuecomment-735921468:609,guid,guidelines-for-repository-contributors,609,https://hail.is,https://github.com/hail-is/hail/pull/9749#issuecomment-735921468,2,['guid'],['guidelines-for-repository-contributors']
Usability,"> The thinking behind this is that there's a huge amount of re-use of code for an individual from one Hail analysis to the next. So I'm not sure I buy this. Hail is a exploratory data analysis platform, it isn't a SQL engine running nightly billing reports. In particular, as we do whole stage optimization and code generation. It isn't clear to me how you do code-reuse when we're specializing each operation into the global context (happy to hear the plan). For example, tables that have many fields, you will need to load different ones for different queries and in general it is infeasible (exponential) to generate them all. Also, to get sharing you need to break the code up and now you're running the compiler multiple times which also seems bad. Given our focus on large-scale analysis, introducing optimization boundaries for code reuse seems like a bad trade off to me. A significant amount of analysis happens in the cloud where $HOME is ephemeral so you won't get savings between sessions. Finally, there are pipelines that are more standardized but it is my impression they are run on extremely large datasets (hours, overnight) in which case compilation speed isn't important. Finally, there's the complexity around locking that isn't easy and have real technical risk. A compiler cache potentially becomes more appealing in the context of an always-on service. There's no locking issue, and you can start to do things like speculative compilation (e.g. immediately start compiling the decoder (the full decoder? Hmm.) when a user opens the dataset.). I would say getting in a 3x decoder improvement is way more important than this. I would have punted it down the road and instrumented to estimate cache hit rates before building this out.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/3973#issuecomment-410358596:337,clear,clear,337,https://hail.is,https://github.com/hail-is/hail/pull/3973#issuecomment-410358596,2,['clear'],['clear']
Usability,"> There are other implementations, such as LibreSSL, but they implement roughly the same interface as OpenSSL. LibreSSL introduced a new interface, libtls, that's designed to be easy to use, secure by default, and match the underlying socket semantics as much as possible. If we ever do any C level networking, we should use it. > ad nihilum. You mean ex nihilo, from nothing?. > I intend to eventually require all our services to refuse to speak anything other than TLS 1.3. Can we get a task for this in Asana? And for mTLS?. > Our system is simpler. We have no root certificate.; > Deploy will run create_certs on every master deploy.; > [O]nce incoming trust is fixed, I am unsure how to smoothly upgrade services. I think we should a have a root certificate for all services in the cluster and verify all certificates are signed by the root certificate. I don't know how to handle creating new certs on every deploy, either. I think we should just create them if they don't already exist. It looks like you're pinning keys for incoming and outgoing, which is awesome. It looks like you're duplicating the keys for each incoming/outgoing list it appears in. Alternatively, you could break the cert secret into two parts: the private key/config needed by the service, and the certs needed by the clients/servers. > In the long run, I want to fix batch to use an entirely different network for callbacks. I agree. Can we get a task for this? Using authorization to control who can talk to whom is great. We should enforce that with network policies. Defense in depth. Another task. > Readiness and liveness probes cannot use HTTP.; > Although k8s supports HTTPS, it does not support so-called ""mTLS"" or ""mutual TLS."". Ugh. But probes can be run via a command, so we should be able to use curl and our client certs for this: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/. ```; livenessProbe:; exec:; command:; - cat; - /tmp/healthy; initialDela",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8561#issuecomment-615209805:544,simpl,simpler,544,https://hail.is,https://github.com/hail-is/hail/pull/8561#issuecomment-615209805,2,['simpl'],['simpler']
Usability,"> This change achieves the effect you desire. What I additionally need from this PR is a mental model of why this change works. I think I communicated this above: as far as I understand it, the effective resolution of the graphic is dependent on both the viewport resolution and the pixel ratio. The observed resolution is too low with pixelRatio 1, gives thick lines. . reference: https://github.com/mrdoob/three.js/issues/16747. > You observe that pixelRatio affects the visual behavior, at least in Safari, when the lineWidth is set to 0.25. In particular, when the pixel ratio is set to 2 and the lineWidth is set to 0.25, the lines appear thinner. No, as you see above, regardless of pixel ratio, Safari's minimum line width is somewhere below one. Setting a linewidth below 1 has no drawbacks; it will just cause the browser to use the min. > If the intention is to make the lines less striking, can we apply an alpha filter instead? Is there another simple & consistent-across-platforms solution?. Not that I know of. Some people use cylinder geometry to get around line thickness issues. Yes, there may be an alpha-based solution, which I brought up above. This will be more complicated, and further increase the development cycle. > It seems to me that relying on this interpolation behavior will lead to code that is more difficult to understand and manipulate. I don't understand. Is there another fix that seems easier?; ; > If the intention is to make the lines less striking, can we apply an alpha filter instead? Is there another simple & consistent-across-platforms solution?. Potentially, but this will obviously be a significantly more complicated fix. The proposed fix is effectively 1 line, and takes care of the observed issue in a wide range of browsers.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8964#issuecomment-645572011:957,simpl,simple,957,https://hail.is,https://github.com/hail-is/hail/pull/8964#issuecomment-645572011,4,['simpl'],['simple']
Usability,"> This has significantly improved the simplicity of the parser, so much so that much of the logic therein could be simplified further, though I think that's beyond the scope of this change. Agreed. But as my follow up will be a complete rewrite of the parser, I definitely don't want to do more to simplify the current one. > I like the separation of type-checking and parsing, however I'd prefer in your implementations of `typecheck` that you assert one thing at a time. That way when things fail, it'll be clear which assertion was fired (ie if `(a && b && c)` fails, you don't know if it's `a` or `b` or `c`, whereas; > ; > ```scala; > assert(a); > assert(b); > assert(c); > ```; > ; > would give you that information. Good suggestion. I only moved assertions here, didn't add any new ones, but I don't mind splitting up some that I moved.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13990#issuecomment-1809203400:38,simpl,simplicity,38,https://hail.is,https://github.com/hail-is/hail/pull/13990#issuecomment-1809203400,8,"['clear', 'simpl']","['clear', 'simplicity', 'simplified', 'simplify']"
Usability,"> This looks like it would work. Do you think think that after the region value transition, the Variant, AltAllele, etc., classes will be replaced with their associated views?. I think the classes and the views are roughly the same thing. Make the AltAllele, Variant, etc. classes abstract, and have a concrete implementation (in terms of Scala types) and another mutable one in terms of a RegionValue. See my altAllele comment above. I'm not completely happy with the existing type hierarchy. In particular, the way things are stored now, the contig and start are duplicated in the row (pk vs k) and the ref is duplicated per allele. We did this so AltAllele was a sensible object, but I think this can be rethought and simplified, esp. as we move stuff into the expr language. I still think `Locus` is good (but it should be a `Long`, the global genomic position on the reference) and Variant should be split apart where the alleles are just an `Array[String]` which contains all the alleles including ref. Then the row type for a variant indexed data set should look like:. ```; Struct {; locus: Locus [= Long],; alleles: Array[String],; va: ...; gs: Array[...]; }; ```. Then the question becomes, how do we formulate things like `isSNP`? Does it become `isSNP(alleles, i)`? Is it enough to hang the genome reference off the Locus type and the alleles? Also, we don't carry types with Python values which might cause problems, e.g. rendering Locus. @tpoterba might have thoughts on this, too.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2434#issuecomment-344634493:721,simpl,simplified,721,https://hail.is,https://github.com/hail-is/hail/pull/2434#issuecomment-344634493,2,['simpl'],['simplified']
Usability,"> Two comments, and a meta-comment:; > ; > * I had looked over async http libraries and had preferred aiohttp over sanic because (1) ""aiohttp"" is a blessed aio library, (2) performance seemed comparable, (4) aiohttp seemed like a simpler solution which was attractive because the microservices are looking more and more like services and less like web servers (even more so moving all the rendering to the front end with the web app, the legacy version of scorecard using jinja is not the representative case). Did you look at aiohttp?; > * From the code:; > > Global variables that are modified ...; > ; > ; > I don't want to have to think about shared state and locking. I want a shared-nothing architecture in the microservices where the only globals are true constants and threads communication by sending immutable data through queues.; > * Finally, a meta-comment. I started reviewing this when it was just ujson, I did a bit of research about json packages to understand your choices and when I came back, the PR had expanded with all the async stuff. I would have approved the ujson stuff. The async stuff could have been a separate PR. Nobody wants to review a moving target, so the scope of a change should be roughly frozen when you assign a PR and additional changes should be minimized and restricted to that scope. You're welcome to have an open PR with no reviewer if you're still fleshing out the scope, of course. Thanks!. In response:. 1) aiohttp is an option, but appears to be generally considered slow on a per-response basis (published benchmarks, haven't had a chance to try it), even potentially slower than flask. It seems wrong to choose something slower if there are are reasonable alternatives.; 2) The globals were a feature of the initial implementation (the GitHub cache). It felt outside of the scope of my PR to change that to some queue solution. Meta comment. Ok. I didn't think it had been looked at, and expanded what it did pretty quickly, as I realized that ujso",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5242#issuecomment-461191051:230,simpl,simpler,230,https://hail.is,https://github.com/hail-is/hail/pull/5242#issuecomment-461191051,2,['simpl'],['simpler']
Usability,"> Unless I'm missing something, this code splitter does rely on the evaluation order. I don't understand. I think I must be missing something. Maybe there is a bug I don't see. I'm particularly confused by your use of ""rely"". I think splitter, by lifting things out into separate statements (where Block has a clear order of evaluation) implements an order of evaluation. Now, you could ask if the order implemented by splitting is the same as the order of evaluation of the children of the parent. What I'm saying is the the order of evaluation of the children should be undefined, so any choice of splitting out large children is valid (but all orderings being valid, we should prefer left-to-right). Not, I'm just talking about the order of the evaluation of the children. Children are always evaluated before parents (as necessitated by the data flow), and blocks are executed linearly in order.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8958#issuecomment-645561070:310,clear,clear,310,https://hail.is,https://github.com/hail-is/hail/pull/8958#issuecomment-645561070,2,['clear'],['clear']
Usability,"> Why is writing the hail table first more efficient than just directly exporting from the grouped matrixtable?. We take special care to ensure our system is as efficient as possible when reading or writing to this native format. So, it's partly a sociological thing. On the practical end of things, Hail's native formats (for Tables and Matrix Tables) are a partitioned binary format. The partitioned part means Hail can use many cores in parallel to process and write the dataset. The binary part means that Hail need not use unnecessarily large (in terms of bytes) representations of values. These three things together make writing the native formats use less time, use less memory, and be more reliable. ---. > One thing I noticed is the mt_hwe_vals variable in my code below is a MatrixTable and not a GroupedMatrixTable. Is this correct?. Yes, after you aggregate you get back an MT with a different column key. ---. The `entries` method converts your matrix table from a compact and efficient matrix into a ""long"" and inefficient table. I generally recommend avoiding it if you can. However, if you only have a handful of ancestries, I wouldn't expect this to be *that* bad. You can just write the MT itself:. ```python3; ancestry_table = hl.Table.from_pandas(ancestry.astype({""person_id"":str}), key='person_id'); mt = mt.annotate_cols(ancestry = ancestry_table[mt.s].ancestry); mt_hwe_vals = mt.group_cols_by(mt.ancestry).aggregate(hwe = hl.agg.hardy_weinberg_test(mt.GT)); mt_hwe_vals = mt_hwe_vals.select_rows().select_cols() # drop irrelevant row and column fields; mt_hwe_vals.write(bucket + '/hwe.ht'); ```. ---. > I tried modifying the code to what is shown below but I'm still having the same issue. Just to be clear it's the exact same error ""Container exited with a non-zero exit code 137. ""? This makes me think we have an issue with `entries`, because, even though it's not great, it shouldn't be blowing RAM here. Can you share the log file from your previous or next attempt?",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/13287#issuecomment-1679755636:1727,clear,clear,1727,https://hail.is,https://github.com/hail-is/hail/issues/13287#issuecomment-1679755636,2,['clear'],['clear']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14533?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14533** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14533?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14509** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14509?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14514** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14514?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 1 other dependent PR ([#14554](https://github.com/hail-is/hail/pull/14554) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14554?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14517** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14517?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14533#issuecomment-2098889324:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14533#issuecomment-2098889324,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14663?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14663** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14663?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14662** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14662?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @patrick-schultz and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Graphite</b></a>; <!-- Current dependencies on/for this PR: -->",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14663#issuecomment-2302524299:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14663#issuecomment-2302524299,2,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14686?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14732](https://github.com/hail-is/hail/pull/14732) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14748](https://github.com/hail-is/hail/pull/14748) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" targ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14686#issuecomment-2354274670:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14686#issuecomment-2354274670,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14690?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14732](https://github.com/hail-is/hail/pull/14732) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14748](https://github.com/hail-is/hail/pull/14748) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" targ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14690#issuecomment-2356990835:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14690#issuecomment-2356990835,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14691?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14732](https://github.com/hail-is/hail/pull/14732) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14748](https://github.com/hail-is/hail/pull/14748) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" targ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14691#issuecomment-2357221524:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14691#issuecomment-2357221524,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14732](https://github.com/hail-is/hail/pull/14732) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14748](https://github.com/hail-is/hail/pull/14748) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" targ",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14692#issuecomment-2358958754:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14692#issuecomment-2358958754,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14732](https://github.com/hail-is/hail/pull/14732) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14748](https://github.com/hail-is/hail/pull/14748) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" ta",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14693#issuecomment-2362149504:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14693#issuecomment-2362149504,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14732](https://github.com/hail-is/hail/pull/14732) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14748](https://github.com/hail-is/hail/pull/14748) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" ta",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14696#issuecomment-2362438406:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14696#issuecomment-2362438406,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14732](https://github.com/hail-is/hail/pull/14732) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14748](https://github.com/hail-is/hail/pull/14748) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" ta",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14698#issuecomment-2364681873:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14698#issuecomment-2364681873,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 2 dependent PRs ([#14732](https://github.com/hail-is/hail/pull/14732) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>, [#14748](https://github.com/hail-is/hail/pull/14748) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>) 👈; * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" ta",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14731#issuecomment-2417750658:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14731#issuecomment-2417750658,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14732** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 1 other dependent PR ([#14748](https://github.com/hail-is/hail/pull/14748) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://sta",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14732#issuecomment-2419668108:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14732#issuecomment-2419668108,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14747?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14751** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14751?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14747** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14747?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14684** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14684?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 1 other dependent PR ([#14686](https://github.com/hail-is/hail/pull/14686) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14686?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14683** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14683?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @grohli and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Grap",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14747#issuecomment-2438734907:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14747#issuecomment-2438734907,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14748** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14748?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14731** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14731?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 1 other dependent PR ([#14732](https://github.com/hail-is/hail/pull/14732) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14732?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14698** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14698?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14696** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14696?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14693** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14693?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14692** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14692?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://sta",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14748#issuecomment-2444958196:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14748#issuecomment-2444958196,1,['Learn'],['Learn']
Usability,"> [!WARNING]; > <b>This pull request is not mergeable via GitHub because a downstack PR is open. Once all requirements are satisfied, merge this PR as a stack <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14751?utm_source=stack-comment-downstack-mergeability-warning"" >on Graphite</a>.</b>; > <a href=""https://graphite.dev/docs/merge-pull-requests"">Learn more</a>. * **#14751** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14751?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a> 👈; * **#14747** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14747?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * **#14684** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14684?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>: 1 other dependent PR ([#14686](https://github.com/hail-is/hail/pull/14686) <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14686?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>); * **#14683** <a href=""https://app.graphite.dev/github/pr/hail-is/hail/14683?utm_source=stack-comment-icon"" target=""_blank""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""10px"" height=""10px""/></a>; * `main`. This stack of pull requests is managed by Graphite. <a href=""https://stacking.dev/?utm_source=stack-comment"">Learn more about stacking.</a>; <h2></h2>. Join @grohli and the rest of your teammates on <a href=""https://graphite.dev?utm-source=stack-comment""><img src=""https://static.graphite.dev/graphite-32x32-black.png"" alt=""Graphite"" width=""11px"" height=""11px""/> <b>Grap",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/14751#issuecomment-2457987492:360,Learn,Learn,360,https://hail.is,https://github.com/hail-is/hail/pull/14751#issuecomment-2457987492,1,['Learn'],['Learn']
Usability,"> agree: api is in GH, ergo public, so only point of contention is:. It's public to people who read GitHub and hail docs. It isn't really public to someone who is probing around for endpoints to exploit. > Yes, because I know I will make mistakes (and users will make config mistakes) and I want an easily debuggable system. Sure. > The risk is that an attacker may learn /jobs exists. If that knowledge substantially improves an attacker's ability to infiltrate batch, then we've made a severe error in securing batch. I agree in general, except I think of the problem seemingly inversely. If providing 401/403 responses to the end user substantially improves their experience, then we should do it. If not we shouldn't, because the degree to which an attacker is ""substantially"" enabled, is in my mind anything other than 0. Battles can be lost by small degrees. The choices should be user driven. . I think you told me that your system benefits, so let's do it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5844#issuecomment-483797170:366,learn,learn,366,https://hail.is,https://github.com/hail-is/hail/pull/5844#issuecomment-483797170,2,['learn'],['learn']
Usability,"> all options that are also gcloud options (such as --project)? [That] could be difficult. Yes, this is what I was thinking. `hailctl` could parse (as much as is needed) the `gcloud` options to find options (like `--project`) and modify others (like `--initialization-actions`). The latter is somewhat surprising since one expects everything after the `--` to pass through unchanged. OK, summarizing our options so far:. - hailctl has no options that are also gcloud options. gcloud options go after the `--`, and get modified as needed by hailctl (with a message).; - hailctl has no gcloud options that are simply pass through. gcloud options that are needed by hailctl commands are hailctl options (like `--project`). When a gcloud option is needed by some hailctl command, all hailctl commands take that option (when it makes sense), even if in some cases that makes them simply pass through. This fixes the inconsistency issues, but the user still needs to keep track of which gcloud options needs to be passed to hailctl and which are passed to gcloud directly. If you specify an option twice, once to hailctl and once to gcloud, we invoke gcloud with the option duplicated. Pros and cons:; - The first option has the most consistent interface.; - The first option modifies options after the --, which is surprising.; - The first option involves replication (some of) the gcloud option parsing semantics, which is annoying.; - The second option requires the user to know which gcloud options need to be passed to hailctl instead (but globally, not per-command).; - With the second option, if we want to warn (or error) on duplicate options, we're back to duplicating the gcloud option parsing logic. I think I'm coming around to the second option. > so that hailctl dataproc submit cluster -- --script-options would work. I see, so if there is only one `--` it refers to script options, and if there are two, the first one corresponds to gcloud options? I think that should be doable.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/9842#issuecomment-758128554:608,simpl,simply,608,https://hail.is,https://github.com/hail-is/hail/pull/9842#issuecomment-758128554,4,['simpl'],['simply']
Usability,"> it seems to provide visibility into what happened during the last run of lets encrypt?. Yes. As far as I know, certbot needs the previous config to do a renew (which I'm not doing yet). > I think the ""sidecar"" approach is simpler than this one (no extra nginx instance, no secrets, no service, no k8s secret creation privileges). We beef up the nginx pod to have a second container sharing a letsencrypt volume (which we've already defined in this PR). You can't mount volumes to multiple pods. You can't even mount volumes to the SAME pod if you want to do rolling updates (because the new instance can't launch because the old one is mounting the volume). I think this means volumes for certs and web root are out. volumes only work for replicated StatefulSets where you can take down one instance at a time for updates.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4624#issuecomment-432724868:224,simpl,simpler,224,https://hail.is,https://github.com/hail-is/hail/pull/4624#issuecomment-432724868,2,['simpl'],['simpler']
Usability,"> old world a MethodBuilder had a FunctionBuilder as a field, and now instead a FunctionBuilder has a ClassBuilder and also a way to make a MethodBuilder. Uh, so there are three pictures, the old way, this PR, and where I'm headed (the PR comment); - the old way, method builder had a function builder, because function builder was really also the class builder (for an AsmFunctionN); - now I added class builder and function builder (which was really building a class) has one; - in the final picture, function builder will be a simpler wrapper to class and method builders. Method builders will point back to their class.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8179#issuecomment-592278110:530,simpl,simpler,530,https://hail.is,https://github.com/hail-is/hail/pull/8179#issuecomment-592278110,2,['simpl'],['simpler']
Usability,"> the TableIR doesn't define partitionCounts. statically known partition counts are used to optimize `.count()` when we know the partition sizes. Here that doesn't apply, so I don't think you need to define that method (it inherits `def partitionCounts = None`). > perhaps ""LiftLiterals"" was changed to ""LiftNonCompilable"". Yes, it was. No need to write a rule for this. Separately, I think we should delete the checklist. It'll never be correct, since it's not checked against the codebase. To add an IR node, one needs to understand the compiler, and we can't adequately document that in a bullet list right now (over time, things should get simpler). . If a node is missing from somewhere it needs to appear, then tests should catch that case.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/6689#issuecomment-513935766:644,simpl,simpler,644,https://hail.is,https://github.com/hail-is/hail/pull/6689#issuecomment-513935766,2,['simpl'],['simpler']
Usability,"> validation. Checking the arguments to the `Variant` constructor and generating nice error messages. For CNV work, you want to parallelize over files and not lines within files? You need to process the each file serially?. I'm not against having an additional interface like ParseContext that you can use both for the RDD interface and for the CNV stuff. Another option might be to make `TableReader[C[_]](...): (TStruct, C[Annotation])` but you'll have to do some work to define a `C` that knows how to load itself from a file, for example. It would be useful to be able to write code that can be used with either RDDs or local collections. > For the 'annotation line' are you suggesting a general error-catching wrapper?. Yep! I'll look over your proposed interface. Letting my mind wander a little here. One of the challenges with Spark error handling is propagating errors from the workers back to the master. RDDs are naturally used functionally, so functional error handling might be a better approach. The `Try` monad is the normal way to do functional error handling in Scala. Since we have concurrency, we have multiple errors and we want to preserve them all. In addition, it would be nice if the new generalized `Try` monad tracked warnings (like VCFReport). The main thing it isn't clear how to handle is writing RDDs. You basically want a write to write out the values and return an RDD, but just with the errors and warnings, which you could transfer to the driver at the end with collect.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/462#issuecomment-233041581:1295,clear,clear,1295,https://hail.is,https://github.com/hail-is/hail/pull/462#issuecomment-233041581,2,['clear'],['clear']
Usability,"> what's the argument for a Notes. [Numpy style guide](https://numpydoc.readthedocs.io/en/latest/format.html) indicates that the notes section is the appropriate place for detail on the algorithm. In particular, the types of the column and entry fields produced aren't directly related to their names, and having them in the parameter description is unintuitive. This style is also inconsistent with the rest of our documentation. In reading the above link, I've realized that all our docs sections are out of order - the Parameters section should come first, then Returns, then Notes, then Examples. We were hoodwinked by the [Sphinx example page](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_numpy.html). I also strongly reject a warning about a possible future scaling limitation of the function that might never even exist in the life of 0.2.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5247#issuecomment-461285927:48,guid,guide,48,https://hail.is,https://github.com/hail-is/hail/pull/5247#issuecomment-461285927,2,['guid'],['guide']
Usability,"> you also don't need to add another resource VCF to make this fail. Yeah, I wasn't sure if the array_elements_required would be overridden if no missingness was found in the data. I wanted to test that possibility (updated my comment with the results of that test). > ah, crap, there's a simplify rule that turns a TableCount(TableUnion(...)) into the sum of the TableCounts for each child. Thanks!",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/8008#issuecomment-581049805:289,simpl,simplify,289,https://hail.is,https://github.com/hail-is/hail/pull/8008#issuecomment-581049805,2,['simpl'],['simplify']
Usability,">; <h2>3.0.1</h2>; <p>Fix for a long standing vulnerability around temporary directory creation which could expose data to malicious users with access to a shared system. See for more information <a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1617"">#1617</a></p>; <p>4a4024a97 Fix temporary directory hijacking or temporary directory information disclosure (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1621"">#1621</a>); 9fd0ecf21 Disable codecov until we can fix the uploader (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1622"">#1622</a>); 347c0ac57 Fix EdgeReadIterator (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1616"">#1616</a>); d15a5bacb Added ULTIMA and ELEMENT as valid value for RG-PL according to SAM spec. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1619"">#1619</a>)</p>; <h2>3.0.0</h2>; <p>Htsjdk 3.0.0: Revenge of the Simple Allele</p>; <p>This is the first htsjdk with a major version increase in a long time. We bumped it to indicate there are some breaking changes that will potentially require downstream code changes. Notably, <code>Allele</code> became an interface instead of a concrete class. <code>SimpleAllele</code> may be used as a replacement if you have classes which previously subclassed allele.</p>; <p>New Plugin Infrastructure:; 6a60de7c2 Move API marker annotations into new annotation package. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1558"">#1558</a>); 7ac95d5f7 Plugin framework and interfaces for versioned file format codecs (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1525"">#1525</a>); d40fe5412 Beta implementation of Bundles. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1546"">#1546</a>)</p>; <p>CRAM; 489c4192d Support CRAM reference regions. (<a href=""https://github-redirect.dependabot.com/samtools/htsjdk/issues/1605"">#1605</a>); 22aec678",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12229:1200,Simpl,Simple,1200,https://hail.is,https://github.com/hail-is/hail/pull/12229,1,['Simpl'],['Simple']
Usability,">Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.4.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12358:1145,guid,guide,1145,https://hail.is,https://github.com/hail-is/hail/pull/12358,1,['guid'],['guide']
Usability,">Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.0.html</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/elastic/elasticsearch-hadoop/commit/da4f3c3f209aea47d69c4faf90029a6933bd3a60""><code>da4f3c3</code></a> [DOCS] Add 8.5.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12601:1144,guid,guide,1144,https://hail.is,https://github.com/hail-is/hail/pull/12601,1,['guid'],['guide']
Usability,">Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-20_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.6.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.1.html</a></p>; <h2>Elasticsearch Hadoop 8.6.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.6/eshadoop-8.6.0.html</a></p>; <h2>Elasticsearch Hadoop 8.5.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.3.html</a></p>; <h2>Elasticsearch Hadoop 8.5.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.2.html</a></p>; <h2>Elasticsearch Hadoop 8.5.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/eshadoop-8.5.1.html</a></p>; <h2>Elasticsearch Hadoop 8.5.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.5/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12623:1144,guid,guide,1144,https://hail.is,https://github.com/hail-is/hail/pull/12623,1,['guid'],['guide']
Usability,">Sourced from <a href=""https://github.com/elastic/elasticsearch-hadoop/releases"">elasticsearch-spark-30_2.12's releases</a>.</em></p>; <blockquote>; <h2>Elasticsearch Hadoop 8.4.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.3.html</a></p>; <h2>Elasticsearch Hadoop 8.4.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.2.html</a></p>; <h2>Elasticsearch Hadoop 8.4.1</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.1.html</a></p>; <h2>Elasticsearch Hadoop 8.4.0</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.4/eshadoop-8.4.0.html</a></p>; <h2>Elasticsearch Hadoop 8.3.3</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html"">https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/eshadoop-8.3.3.html</a></p>; <h2>Elasticsearch Hadoop 8.3.2</h2>; <p>Downloads: <a href=""https://elastic.co/downloads/hadoop"">https://elastic.co/downloads/hadoop</a>; Release notes: <a href=""https://www.elastic.co/guide/en/elasticsearch/hadoop/8.3/esh",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/12319:1144,guid,guide,1144,https://hail.is,https://github.com/hail-is/hail/pull/12319,1,['guid'],['guide']
Usability,"@akotlar Ok, so I finally managed to remove the internal requests. The asyncio learning curve was higher than I expected. The final product is a lot tighter than I expected. I eliminated all the run_forever and run_once stuff, all the threading, and I was able to move the log back into server.py. It involves three new things:; - [kill the whole loop if anything goes wrong](https://github.com/hail-is/hail/pull/5844/files#diff-14c16d042ba8b8608b60b3fcd1029869R899), which works wonderfully with k8s' automatic pod restarting; - [use a concurrent thread pool](https://github.com/hail-is/hail/pull/5844/files#diff-14c16d042ba8b8608b60b3fcd1029869R904) for any legacy blocking operations; - [a blocking-to-async convertor](https://github.com/hail-is/hail/pull/5844/files#diff-14c16d042ba8b8608b60b3fcd1029869R823) and a [blocking iterator to async iterator](https://github.com/hail-is/hail/pull/5844/files#diff-14c16d042ba8b8608b60b3fcd1029869R828) both of which stick blocking operations on a separate thread pool. Legacy blocking operations might end up queueing behind one another in the ""blocking pool"", but the rest of the application continues without interruption on the main event loop. I took the chance to reorder the k8s refresh and the k8s watch functions to be closer together, but that made the diff worse :/. Probably demands another review on Monday. cc: @cseed, possibly some asyncio engineering best practices in this",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5844#issuecomment-482744047:79,learn,learning,79,https://hail.is,https://github.com/hail-is/hail/pull/5844#issuecomment-482744047,2,['learn'],['learning']
Usability,@bw2 any feedback on above? Should I close this issue or do you have more inquiries on symbolic variants?,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/803#issuecomment-279597422:9,feedback,feedback,9,https://hail.is,https://github.com/hail-is/hail/issues/803#issuecomment-279597422,2,['feedback'],['feedback']
Usability,@catoverdrive @tpoterba rebased and simplified. have at it.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2451#issuecomment-345880084:36,simpl,simplified,36,https://hail.is,https://github.com/hail-is/hail/pull/2451#issuecomment-345880084,2,['simpl'],['simplified']
Usability,"@catoverdrive I dismissed your review because I added more changes to address your comment on the FIXME. I think addRegionValue now does a minimal amount of work. In particular, if you write add a region value at the top level to the same region (rvb.start(t); rvb.addRegionValue(rv); rvb.end), it doesn't modify the region but simply sets start = rv.offset. This means that rvb.start can't actually do anything, and some other add routines need to check if they need to allocate. This adds some overhead that should get compiled away in the staged version. I also improved the tests to test adding to the same as well as a different region.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2299#issuecomment-336900902:328,simpl,simply,328,https://hail.is,https://github.com/hail-is/hail/pull/2299#issuecomment-336900902,2,['simpl'],['simply']
Usability,"@catoverdrive I see now there is an unwrap that should have had this same effect, so I don't quite understand why this was necessary (although it seemed to be). Anyway, this still seems simpler/more correct.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4499#issuecomment-428398568:186,simpl,simpler,186,https://hail.is,https://github.com/hail-is/hail/pull/4499#issuecomment-428398568,2,['simpl'],['simpler']
Usability,@catoverdrive review after #2238 goes in because this PR will simplify after #2238 merges.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2249#issuecomment-332245478:62,simpl,simplify,62,https://hail.is,https://github.com/hail-is/hail/pull/2249#issuecomment-332245478,2,['simpl'],['simplify']
Usability,"@catoverdrive this came up while Konrad and I were trying to understand a discrepancy with PCA in python sklearn, which automatically mean centers. This simplest solution would be to add a map that mean centers between irm and computeSVD here:; `val svd = irm.computeSVD(k, computeLoadings)`; But this is redundant when the data is already mean-centered, as in pca_of_normalized_genotypes. Let's discuss when you're back and I can make the changes and update the docs which need some work anyhow.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/2734#issuecomment-358096966:153,simpl,simplest,153,https://hail.is,https://github.com/hail-is/hail/issues/2734#issuecomment-358096966,2,['simpl'],['simplest']
Usability,"@cseed As I briefly mentioned in an email on Saturday, I moved notebook loading to a prefetched model. Data and page loading are decoupled: When one clicks on the Notebook link, routing to the page happens without waiting for data to come in from notebook-api.hail.is. If data is available, it is shown, else a loading indicator. To avoid loading screens, I call notebook-api.hail.is asynchronously immediately after a user hits app.hail.is, whether they're on the Notebook page or not. Therefore, typically a user will never see a Notebook page loading indicator, when they click from one page to Notebook (say they land on the home page: by the time they click on Notebook, the data is fetched, so no loading screen). Furthermore, web sockets keep that Notebook data up to date, again regardless of whether a user is on the Notebook page. So in all instances except when a user lands on Notebook directly, the time it takes to reach the Notebook page is << 16ms (seemingly ~3ms). A similar approach is now used for scorecard, except Scorecard will render data in the SSR phase (because I consider scorecard less important, and because most users of the web app won't need it), and will not prefetch data when on another page. However, clicking on ""Scorecard"" from another page will not cause routing to block while waiting for the https://scorecard.hail.is/json response; instead a loading indicator will be shown. In practice I find this preferable, because the GUI feels more responsive, and users get more feedback. This demonstrates the core benefit of universal rendering approaches, and how they can improve page loading times over even the leanest server-side rendered application.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5162#issuecomment-462221996:1480,responsiv,responsive,1480,https://hail.is,https://github.com/hail-is/hail/pull/5162#issuecomment-462221996,4,"['feedback', 'responsiv']","['feedback', 'responsive']"
Usability,"@cseed FWIW, Java has a [`BitSet` class](https://docs.oracle.com/javase/8/docs/api/java/util/BitSet.html) that implements dynamically growing BitSets. It implements `set`, `clear` (for every bit), `clear` (your `reset`), and `get` (your `apply`).",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1955#issuecomment-311982284:173,clear,clear,173,https://hail.is,https://github.com/hail-is/hail/pull/1955#issuecomment-311982284,4,['clear'],['clear']
Usability,"@cseed I think this is probably ready for review. There's a couple of things that I'm going to look at/do more that aren't in this PR:; - add better docs for how random functions behave; - add more tests for randomness in various IR nodes; - add more tests and make sure that the optimization rules preserve the context that random functions are going to be evaluated in. @tpoterba and I talked briefly about the last one and it might involve restructuring simplify, since some rules are fine in isolation but will return different results when performed in combination (and sometimes one of the rules in question doesn't even involve the random node, which is kind of difficult to account for currently)",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4104#issuecomment-411878967:457,simpl,simplify,457,https://hail.is,https://github.com/hail-is/hail/pull/4104#issuecomment-411878967,2,['simpl'],['simplify']
Usability,@cseed I'll close this and just ask for feedback on the branch diff once I have a pipeline working end-to-end and thoughts on proper integration.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2890#issuecomment-366455460:40,feedback,feedback,40,https://hail.is,https://github.com/hail-is/hail/pull/2890#issuecomment-366455460,2,['feedback'],['feedback']
Usability,"@cseed I've implemented `readPartitions` on `HailContext` and `writePartitions` on `RichRDD`, re-implemented read/write of blocks on `BlockMatrix` to preserve partitioning using these, and moved MatrixValue and KeyTable row read/write to use these. readPartitions and writePartitions use `unsafeReadPartition` and `writePartition` in RichHadoopConfig. `readRow` includes `close()`, and I've added `close()` to `readBlock` as well. At first I used `using` (see `readPartition` which is remarked out), but this closes the resource before the iterator iterated in the readRows case. Yet somehow, `testWriteRead` in VSMSuite passes even with `readPartition`. This test just creates a random VDS, writes, reads, compares. I added `testWriteRead2` which imports `sample.vcf`, writes, reads, compares. And indeed, the latter fails with `readPartition`. I have no explanation for why the behavior would differ (could the former be somehow cached?). I'm not happy with the asymmetry or lake of read safety if closing isn't propagated backward (I think it is for DataInputStream), but would like to get your feedback before messing around with these functions further. I've left the filename that had ReadRowsRDD with that name so it's easier to compare, but will change prior to merging since that class is gone. No class jumps out, should I just use the first one, `ArrayInputStream`, or a name that's not a class?. `ReadRDDPartition` in file ReadRowsRDDs and `IntPartition` in `BlockMatrix` have the same definition (the latter is used for more than just reading). I'm thinking of just having IntPartition located somewhere other than BlockMatrix. Any thoughts on where?. I added `sqrt` on blockSize in `blockMatrixGen` in order to get more cases with `blockSize < min(rows, cols)`. Only 1 of 10 had this property in `readWriteIdentityRandom` and its an important case to check with respect to the GridPartitioner dealing with block indices corrected (particularly with transpose in the mix).",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2367:1098,feedback,feedback,1098,https://hail.is,https://github.com/hail-is/hail/pull/2367,1,['feedback'],['feedback']
Usability,"@cseed It's still not quite as tidy as I'd like it to be, but I thought I'd throw it up for feedback. Builds on #4722.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4728:92,feedback,feedback,92,https://hail.is,https://github.com/hail-is/hail/pull/4728,1,['feedback'],['feedback']
Usability,@cseed Merging this PR will make the diff for #536 simpler.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/558#issuecomment-238264351:51,simpl,simpler,51,https://hail.is,https://github.com/hail-is/hail/pull/558#issuecomment-238264351,2,['simpl'],['simpler']
Usability,"@cseed Should the behavior of the logs be to not have a link if the job is ready or pending or to report None? Right now, we report None for `status` if it's ready or pending and have a web.HTTPNotFound error for logs when it's pending or ready. I think we should have it be consistent between logs and status and I think having no links in the ready and pending case is clearer.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/7449#issuecomment-549440769:371,clear,clearer,371,https://hail.is,https://github.com/hail-is/hail/pull/7449#issuecomment-549440769,2,['clear'],['clearer']
Usability,"@cseed after comments in #2482, I reworked this so that for each block row, each overlapping parent partition is iterated through once, writing out the full row into files corresponding to block columns. Based on the WriteBlocksRDDPartition comment and looking at BlockedRDD, now rather than computing the indices of all non-empty overlapping parent partitions, I switched to just computing the first and last overlapping parent partitions, and the number of rows to skip in the first partition, and put this in WriteBlocksRDDPartition. I'd appreciate feedback on this approach, and whether I've put the ""right"" data in WriteBlocksRDDPartition. In particular, I'm unsure why `computeBlockRowDependencies` would have been called multiple times given that it's a private val in the class. Is the class serialized to workers before function evaluation? Is parentPartitionBoundaries recomputed as well? I don't have a clear model. The function `computeBlockRowDependencies` could be moved directly into getDependencies; I kept it separate in order to write a simple test. I'm not a huge fan of the array of tuples but it seemed more natural than three arrays.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2494:552,feedback,feedback,552,https://hail.is,https://github.com/hail-is/hail/pull/2494,3,"['clear', 'feedback', 'simpl']","['clear', 'feedback', 'simple']"
Usability,"@cseed definitely ready for some feedback. I replaced Iterable with SharedIterable in VSM, and carried it through to the point that Main builds ... which took more than 30 lines. I had to comment out VSMSubgen because I could not get this to work in SharedIterable:. `implicit def canBuildFrom[T]: CanBuildFrom[Coll, T, SharedIterable[T]] = ReusableCBF.asInstanceOf[GenericCanBuildFrom[T]]`. I left in FIXME's wherever I used toIterable to go from SharedIterable to Iterable, such as VSM functions that will need to be implemented separately in GDS and VSM (in retrospect, I suppose I could have just searched for toIterable usages). toIterable won't yet cause problems since I haven't yet moved to MutableGenotypeStreamIterator, so I could temporarily make the test work with toIterators as well, though I'd then need to go and switch them all back later. Once the Builder issue is resolved, I'm thinking the next step would be to make SharedIterable abstract and add abstract functions that are necessary to remove the toIterables and for the tests (like `expandCollect`). Then I'd have two realizations, SharedIterableGenotype for VDS which takes advantage of copy on Genotype, and UnsharedIterable (names need adjustment) for GDS which assumes no sharing. If all tests pass, I'd then switch over to MutableGenotypeStreamIterator...and in principal everything should pass.",MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/1570:33,feedback,feedback,33,https://hail.is,https://github.com/hail-is/hail/pull/1570,1,['feedback'],['feedback']
Usability,@cseed opening for feedback as discussed,MatchSource.ISSUE,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/2460:19,feedback,feedback,19,https://hail.is,https://github.com/hail-is/hail/pull/2460,1,['feedback'],['feedback']
Usability,@cseed thanks for the feedback; I'll try urlsafe_b64encode,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/5215#issuecomment-459425712:22,feedback,feedback,22,https://hail.is,https://github.com/hail-is/hail/pull/5215#issuecomment-459425712,2,['feedback'],['feedback']
Usability,@cseed this should be clear for merge now,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/696#issuecomment-244097334:22,clear,clear,22,https://hail.is,https://github.com/hail-is/hail/pull/696#issuecomment-244097334,2,['clear'],['clear']
Usability,"@cseed, details below, exec summary: a series of confusions and confusing interfaces lead to cloud tools deployment issues. The resolution is to fix the deploy script to always deploy `cloudtools` for python 2 and 3 (because *it* works with both). Users will need `python2` somewhere on their PATH, but `gsutil` will guide them through that, i.e. not our problem. There is no problem except that I cannot approve my own PR. I noticed @catoverdrive wasn't actually assigned, so it wasn't in her scorecard queue. ---. There was a bit of confusion around this recently that @catoverdrive figured out. So, `gsutil` only supports `python2`, but it's happy to search through your path for a variety of binaries with suggestive names until it finds a valid python 2.x binary. `cloudtools` itself works with any version of python (there was a recent breaking change in the release of python 3.7, which broke cloud tools [but that's been resolved in an open PR](https://github.com/Nealelab/cloudtools/pull/91/files#diff-7decff7c08c5270a32982ea34483b8cbR11)). Now, wrt PYPI, @catoverdrive discovered that the version of python you use to run `setup.py bdist_wheel` determines which version of python is deployed. This is rather confusing and, since none (or many?) of us did not know this, we accidentally uploaded a variety of [cloud tools versions on pypi, as you've noted](https://pypi.org/simple/cloudtools/). There was some earlier confusion wherein I thought we should only support `python2`, but that was a mistake on my end. We should support both versions, and when the user tries to start a cluster, `gsutil` will provide an error message guiding them to install `python2`.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/4240#issuecomment-419912588:317,guid,guide,317,https://hail.is,https://github.com/hail-is/hail/pull/4240#issuecomment-419912588,6,"['guid', 'simpl']","['guide', 'guiding', 'simple']"
Usability,"@daniel-goldstein Can you please check the last commit real quick? Should just be a simple rename, but want someone to double check I didn't do something bad.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13475#issuecomment-1766736992:84,simpl,simple,84,https://hail.is,https://github.com/hail-is/hail/pull/13475#issuecomment-1766736992,2,['simpl'],['simple']
Usability,"@daniel-goldstein Here's my thoughts. Sound good?; I think we simply need to add an `is_rate_limit` check to `retry_transient_errors` in hailtop, and pass rather than logging it.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14595#issuecomment-2200975779:62,simpl,simply,62,https://hail.is,https://github.com/hail-is/hail/issues/14595#issuecomment-2200975779,2,['simpl'],['simply']
Usability,"@daniel-goldstein I think these changes resolve the problems in hailtop.batch. My guiding philosophy there was sync methods are always shims around async methods. https://github.com/daniel-goldstein/hail/compare/fix-nest-asyncio-apply...danking:hail:fix-nest-asyncio-apply. The issue in Query is deeper. We lazily compute the type of IRs, but to know the type of reading a Table, MatrixTable, or BlockMatrix, we must make a network request to read the metadata from that object. I'm not exactly sure what to do here.",MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/pull/13677#issuecomment-1769152362:82,guid,guiding,82,https://hail.is,https://github.com/hail-is/hail/pull/13677#issuecomment-1769152362,2,['guid'],['guiding']
Usability,@daniel-goldstein Let's put it at guide-analysis.hail.is.,MatchSource.ISSUE_COMMENT,hail-is,hail,0.2.133,https://github.com/hail-is/hail/issues/14067#issuecomment-1839682395:34,guid,guide-analysis,34,https://hail.is,https://github.com/hail-is/hail/issues/14067#issuecomment-1839682395,2,['guid'],['guide-analysis']
