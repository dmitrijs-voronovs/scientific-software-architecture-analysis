quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Testability,":topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_edgesofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_initPointssofa::component::topology::container::dynamic::PointSetTopologyContainer; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:4412,log,logging,4412,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['log'],['logging']
Testability,":type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; doub",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3690,test,testing,3690,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,2,['test'],['testing']
Testability,":type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ child. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::child. Child node, created by setupScene. . ◆ deltaRange. template<class _MultiMapping > . std::pair<Real,Real> sofa::MultiMapping_test< _MultiMapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorMax. template<class _MultiMapping > . Real sofa::MultiMapping_test< _MultiMapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. . ◆ inDofs. template<class _MultiMapping > . type::vector<typename InDOFs::SPtr> sofa::MultiMapping_test< _MultiMapping >::inDofs. mapping input . ◆ mapping. template<class _MultiMapping > . core::MultiMapping<In,Out>* sofa::MultiMapping_test< _MultiMapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _MultiMapping > . OutDOFs::SPtr sofa::MultiMapping_test< _MultiMapping >::outDofs. mapping output . ◆ parents. template<class _MultiMapping > . type::vector<simulation::Node::SPtr> sofa::MultiMapping_test< _MultiMapping >::parents. Parent nodes, created by setupScene. . ◆ root. template<class _MultiMapping > . simulation::Node::SPtr sofa::MultiMapping_test< _MultiMapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _MultiMapping > . simulation::Simulation* sofa::MultiMapping_test< _MultiMapping >::simulation. created by the constructor an ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:5067,test,test,5067,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,2,['test'],['test']
Testability,":type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~DynamicSparseGridTopologyModifier() overridesofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifierinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~HexahedronSetTopologyModifier() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierinlineprotected; ~PointSetTopologyMo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html:26916,log,logErrors,26916,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,1,['log'],['logErrors']
Testability,":type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~HexahedronSetTopologyModifier() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~QuadSetTopologyModifier() overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html:26293,log,logErrors,26293,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,1,['log'],['logErrors']
Testability,":type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~QuadSetTopologyModifier() overridesofa::component::topology::container::dynamic::QuadSetTopologyModifierinlineprotected; ~TopologyModifier() overridesofa::core::topology:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html:22878,log,logErrors,22878,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,1,['log'],['logErrors']
Testability,"; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . DiscreteIntersection::OutputVector * ; contacts, . const SReal ; alarmDist, . const SReal ; contactDist . ). inlineprotected . ◆ findIntersector(). ElementIntersector * sofa::component::collision::detection::intersection::DiscreteIntersection::findIntersector ; (; core::CollisionModel * ; object1, . core::CollisionModel * ; object2, . bool & ; swapModels . ). overridevirtual . Return the intersector class handling the given pair of collision models, or nullptr if not supported. ; Return the intersector class handling the given pair of collision models, or nullptr if not supported. Parameters. swapModeloutput value set to true if the collision models must be swapped before calling the intersector. . Implements sofa::core::collision::Intersection. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_CLASS ; (; DiscreteIntersection ; , . sofa::core::collision::Intersection ;  . ). ◆ testIntersection() [1/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, sofa::component::collision::detection::intersection::BaseProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [2/8]. bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:23509,test,testIntersection,23509,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['test'],['testIntersection']
Testability,; ; SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction – SOFA. SOFA - Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Flexible Passive ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:485591,test,test,485591,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['test']
Testability,"; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cameraModesofa::component::setting::ViewerSetting; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_cameraModesofa::component::setting::ViewerSetting; d_componentStatesofa::core::objectmodel::Base; d_fullscreensofa::component::setting::ViewerSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; d_objectPickingMethodsofa::component::setting::ViewerSetting; d_resolutionsofa::component::setting::ViewerSetting; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html:2255,log,logging,2255,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,1,['log'],['logging']
Testability,"; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; double getTotalError ();  ; double getErrorByDof ();  ; unsigned int getNumCompareState ();  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html:1661,test,testTags,1661,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,1,['test'],['testTags']
Testability,"; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ; int getLevel () const;  ; void setLevel (int l);  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html:1765,test,testTags,1765,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,2,['test'],['testTags']
Testability,; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingm,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163063,log,logging,163063,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163691,log,logging,163691,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Reference; SOFA API: sofa::simulation::xml Namespace Reference; SOFA API: sofa::testing Namespace Reference; SOFA API: sofa::topology Namespace Reference; SOFA API: sofa::type Namespace Reference; SOFA API: sofa::type::pairwise Namespace Reference; SOFA API: sofa::type::trait Namespace Reference; navtree.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:205884,test,testing,205884,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['test'],['testing']
Testability,"; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vec3, sofa::type::Vec3)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~FixedProjectiveConstraint()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protectedvirtual; ~ProjectiveConstraintSet() overridesofa::core::behavior::ProjectiveConstraintSet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html:17934,log,logErrors,17934,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) consts",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html:2538,log,logging,2538,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,1,['log'],['logging']
Testability,"; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgeRestInformation(Index edgeIndex, EdgeRestInformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; d_youngModulussofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; Data",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:5781,log,logging,5781,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['log'],['logging']
Testability,"; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< TDataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::ForceField< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< TDataTypes >; DataVecCoord typedefsofa::core::behavior::ForceField< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::ForceField< TDataTypes >; Deriv typedefsofa::core::behavior::ForceField< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html:4732,log,logging,4732,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,1,['log'],['logging']
Testability,"; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_cameraUpsofa::component::visual::RecordedCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_drawRotationsofa::component::visual::RecordedCamera; d_drawTranslationsofa::component::visual::RecordedCamera; d_endTimesofa::component::visual::RecordedCamera; d_fieldOfViewsofa::component::visual::BaseCamera; d_fixedLookAtPointsofa::component::visual::BaseCamera; d_heightViewportsofa::component::visual::BaseCamera; d_lookAtsofa::component::visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html:2632,log,logging,2632,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,1,['log'],['logging']
Testability,"; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_fieldOfViewsofa::component::visual::BaseCamera; d_fixedLookAtPointsofa::component::visual::BaseCamera; d_heightViewportsofa::component::visual::BaseCamera; d_lookAtsofa::component::visual::BaseCamera; d_maxBBoxsofa::component::visual::BaseCamera; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minBBoxsofa::component::visual::BaseCamera; d_modelViewMatrixsofa::component::visual::BaseCamera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html:2624,log,logging,2624,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,3,['log'],['logging']
Testability,"; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::LineCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_displayFreePositionsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; sofa::core::Coll",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:3825,log,logging,3825,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,1,['log'],['logging']
Testability,"; const SOFA_HELPER_API std::string toString (const Message::Type type);  ; std::ostream & operator<< (std::ostream &s, const Message &m);  ; std::vector< MessageHandler * > getDefaultMessageHandlers ();  ; MessageDispatcherImpl * getMainInstance ();  . Detailed Description; This allow Base object to interact with the messaging system. ; Typedef Documentation. ◆ tokenizer. typedef boost::tokenizer<boost::char_separator<char> > sofa::helper::logging::tokenizer. Function Documentation. ◆ getComponentInfo() [1/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const ComponentInfo::SPtr & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getComponentInfo() [2/3]. ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const sofa::core::objectmodel::Base * ; t). inline . This construct a new ComponentInfo object from a Base object. . ◆ getComponentInfo() [3/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const std::string & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated other get a weak reference . ◆ getMainInstance(). MessageDispatcherImpl* sofa::helper::logging::getMainInstance ; (; ). ◆ notMuted() [1/4]. bool sofa::helper::logging::notMuted ; (; const ComponentInfo::SPtr & ; ). inline . ◆ notMuted() [2/4]. bool sofa::helper::logging::notMuted ; (; const sofa::core::objectmodel::Base * ; t). inline . ◆ notMuted() [3/4]. bool sofa::helper::logging::notMuted ; (; const std::string & ; ). inline . This function is used in the msg_* macro to handle string based on string. . ◆ notMuted() [4/4]. bool sofa::helper::logging::notMuted ; (; sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:3796,log,logging,3796,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,2,['log'],['logging']
Testability,"; elem1, . core::CollisionElementIterator ; elem2, . const core::collision::Intersection * ; currentIntersection . ). pure virtual . Test if 2 elements can collide. Note that this can be conservative (i.e. return true even when no collision is present) ; Implemented in sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >, and sofa::component::collision::detection::algorithm::MirrorIntersector. ◆ canIntersect() [2/2]. virtual bool sofa::core::collision::ElementIntersector::canIntersect ; (; core::CollisionElementIterator ; , . core::CollisionElementIterator ;  . ). virtualdelete . Reimplemented in sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >, and sofa::component::collision::detection::algorithm::MirrorIntersector. ◆ endIntersect(). virtual int sofa::core::collision::ElementIntersector::endIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . DetectionOutputVector * ; contacts . ). pure virtual . End intersection tests between two collision models. Return the number of contacts written in the contacts vector. ; Implemented in sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >, and sofa::component::collision::detection::algorithm::MirrorIntersector. ◆ intersect() [1/2]. virtual int sofa::core::collision::ElementIntersector::intersect ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2, . DetectionOutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). pure virtual . Compute the intersection between 2 elements. Return the number of contacts written in the contacts vector. ; Implemented in sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >, and sofa::component::collision::detection::algorithm::MirrorIntersector. ◆ intersect() [2/2]. virtual int sofa::core::collision::ElementIntersector::intersect ; (; core::CollisionElementIterator ; , . core::CollisionElementIterator ; , . DetectionOutputVector * ;  . )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_element_intersector.html:3536,test,tests,3536,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_element_intersector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_element_intersector.html,1,['test'],['tests']
Testability,"; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDrawMode() constsofa::component::solidmechanics::spring::SpringForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html:10801,log,logging,10801,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,4,['log'],['logging']
Testability,; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDepthTexture()sofa::gl::component::shader::Lightinlinevirtual; getDirection()sofa::gl::component::shader::Lightinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLightType()=0sofa::gl::component::shader::Lightpure virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOpenGLModelViewMatrix()sofa::gl::component::shader::Light; getOpenGLProjectionMatrix()sofa::gl::component::shader::Light; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPosition()sofa::gl::component::shader::Lightinlinevirtual; getShadowFactor()sofa::gl::component::shader::Lightinlinevirtual; getShadowMapSize()sofa::gl::component::shader::Lightvirtual; getShadowTextureUnit()sofa::gl::component::shader::Lightinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html:6990,log,logging,6990,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,1,['log'],['logging']
Testability,; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdges() constsofa::component::visual::VisualModelImplinline; getFilename()sofa::component::visual::VisualModelImplinline; getGLenum(const char *c) constsofa::gl::component::rendering3d::OglModelprotected; getIboEdges()sofa::gl::component::rendering3d::OglModelinline; getIboQuads()sofa::gl::component::rendering3d::OglModelinline; getIboTriangles()sofa::gl::component::rendering3d::OglModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getQuads() constsofa::component::visual::VisualModelImplinline; getSize() const overridesofa::core::visual::VisualState< defaulttype::Vec3Types >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTex() constsofa::gl::component::rendering3d::OglModelinline; getTextures() constsofa::gl::component::rendering3d::OglModelinline; getTime() constsofa::core::objectmodel::BaseObject; getTriangles() constsof,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:11111,log,logging,11111,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,4,['log'],['logging']
Testability,"; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::mapping::linear::Mesh2PointTopologicalMappinginlinevirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind) overridesofa::component::mapping::linear::Mesh2PointTopologicalMappinginlinevirtual; getHexaBaryCoords() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointBaryCoords() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromEdge() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromHexa() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromPoint() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromQuad() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromTetra() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html:6912,log,logging,6912,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,1,['log'],['logging']
Testability,"; getNumCompareState()sofa::component::playback::CompareStateResultinline; getTotalError()sofa::component::playback::CompareStateResultinline; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; numCompareStatesofa::component::playback::CompareStateResultprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *) overridesofa::component::playback::CompareStateResultvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result-members.html:4362,test,testTags,4362,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result-members.html,1,['test'],['testTags']
Testability,"; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Inters",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14868,test,testIntersection,14868,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"; processNodeTopDown(simulation::Node *node) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, core::BaseMapping *) overridesofa::component::constraint::lagrangian::solver::MechanicalGetConstraintViolationVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_mechanical_get_constraint_violation_visitor-members.html:10317,test,testTags,10317,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_mechanical_get_constraint_violation_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_mechanical_get_constraint_violation_visitor-members.html,1,['test'],['testTags']
Testability,"; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SphereROI()sofa::component::engine::select::SphereROI< DataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testEdgeAngle(const Edge &e) constsofa::component::engine::select::SphereROI< DataTypes >protected; testTriangleAngle(const Triangle &t) constsofa::component::engine::select::SphereROI< DataTypes >protected; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triAnglesofa::component::engine::select::SphereROI< DataTypes >; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::BaseROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseROI() override=defaultsofa::component::engine::select::BaseROI< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html:19573,log,logErrors,19573,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,1,['log'],['logErrors']
Testability,"; sofa::core::behavior::BaseConstraint::getConstraintViolation(const ConstraintParams *, linearalgebra::BaseVector *, unsigned int)sofa::core::behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getStopperIdentifiers()sofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >inlineprotectedvirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html:8377,log,logging,8377,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,"; sofa::core::behavior::BaseConstraint::getConstraintViolation(const ConstraintParams *, linearalgebra::BaseVector *, unsigned int)sofa::core::behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getStopperIdentifiers()sofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >inlineprotectedvirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html:8310,log,logging,8310,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,"; sofa::core::behavior::BaseConstraint::getConstraintViolation(const ConstraintParams *, linearalgebra::BaseVector *, unsigned int)sofa::core::behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupsofa::core::behavior::BaseConstr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html:7532,log,logging,7532,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,1,['log'],['logging']
Testability,"; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  ; const ComponentInfo::SPtr getComponentInfo (const std::string &s);  This function is used in the msg_* macro to handle emitting case based on string. More...;  ; const ComponentInfo::SPtr getComponentInfo (const ComponentInfo::SPtr &s);  This function is used in the msg_* macro to handle emitting case based on string. More...;  ; bool notMuted (const ComponentInfo::SPtr &);  ; bool notMuted (const std::string &);  This function is used in the msg_* macro to handle string based on string. More...;  ; const SOFA_HELPER_API std::string toString (const Message::Type type);  ; std::ostream & operator<< (std::ostream &s, const Message &m);  ; std::vector< MessageHandler * > getDefaultMessageHandlers ();  ; MessageDispatcherImpl * getMainInstance ();  . Detailed Description; This allow Base object to interact with the messaging system. ; Typedef Documentation. ◆ tokenizer. typedef boost::tokenizer<boost::char_separator<char> > sofa::helper::logging::tokenizer. Function Documentation. ◆ getComponentInfo() [1/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const ComponentInfo::SPtr & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getComponentInfo() [2/3]. ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const sofa::core::objectmodel::Base * ; t). inline . This construct a new ComponentInfo object from a Base object. . ◆ getComponentInfo() [3/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const std::string & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:3248,log,logging,3248,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,2,['log'],['logging']
Testability,"; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [16/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Sphere & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [18/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Sphere & ; e2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [19/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [20/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [21/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:36949,test,testIntersection,36949,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Cube &, collision::geometry::Cube &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:21262,test,testIntersection,21262,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,"; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetAssembledSizeVisitor::independentOnly { false }. protected . ◆ vsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::vsize { 0 }. protected . ◆ xsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::xsize { 0 }. protected . Constructor details. ◆ GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::GetAssembledSizeVisitor ; (; const sofa::core::ExecParams * ; params = sofa::core::mechanicalparams::castToExecParams(core::mechanicalparams::defaultInstance())). inline . ◆ ~GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::~GetAssembledSizeVisitor ; (; ). inlineoverride . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetAssembledSizeVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ positionSize(). unsigned sofa::component::odesolver::testing::GetAssembledSizeVisitor::positionSize ; (; ); const. inline . ◆ processNodeTopDown(). Result sofa::component::odesolver::testing::GetAssembledSizeVisitor::processNodeTopDown ; (; simulation::Node * ; ). inlineoverridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html:5492,test,testing,5492,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,1,['test'],['testing']
Testability,";  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:5709,test,test,5709,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,2,['test'],['test']
Testability,";  ; virtual bool testIntersection (collision::geometry::Cube &cube1, collis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:1943,test,testIntersection,1943,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,3,['test'],['testIntersection']
Testability,";  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html:1900,test,testTags,1900,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,2,['test'],['testTags']
Testability,";  ;  ~ExportDotVisitor () override;  ; void processObject (Node *node, core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html:2732,test,testTags,2732,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,2,['test'],['testTags']
Testability,";  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container ,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html:1836,test,testTags,1836,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,2,['test'],['testTags']
Testability,";  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulation::Node *node, int posX=0);  Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. More...;  ; size_t addSimulationObject (sofa::core::objectmodel::BaseObject *bObject);  Internal method to create a Node for this sofa BaseObject. More...;  ; void connectNodeData ();  Internal method to create all connection between component on the graph. More...;  ; void clearNodeData ();  Internal method to clear the graph structures. More...;  . Attribute details. ◆ debugNodeGraph. bool sofa::gui::qt::SofaWindowDataGraph::debugNodeGraph. protected . parameter to activate graph logs. False by default. . ◆ m_exceptions. std::vector<std::string> sofa::gui::qt::SofaWindowDataGraph::m_exceptions. protected . List of component name not to be display in the graph. . ◆ m_graphScene. QtNodes::FlowScene* sofa::gui::qt::SofaWindowDataGraph::m_graphScene. protected . Pointer to the graphScene used to store nodes. . ◆ m_graphView. QtNodes::FlowView* sofa::gui::qt::SofaWindowDataGraph::m_graphView. protected . Pointer to the view of the graph. . ◆ m_posX. int sofa::gui::qt::SofaWindowDataGraph::m_posX. protected . Increment position counter on abscissa for Node display. . ◆ m_posY. int sofa::gui::qt::SofaWindowDataGraph::m_posY. protected . Increment position counter on ordinate for Node display. . ◆ m_rootNode. sofa::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protected . Point to the root node of the current simulation. . ◆ m_scaleX. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleX. protected . Scale parameter to apply between nodes f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:2604,log,logs,2604,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,2,['log'],['logs']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; DynamicSparseGridTopologyModifier()sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifierinlineprotected; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html:8861,log,logging,8861,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetGeometryAlgorithms classsofa::component::topology::container::dynamic::EdgeSetTopologyModifierfriend; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlinep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html:6041,log,logging,6041,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; EdgesInHexahedron typedefsofa::component::topology::container::dynamic::HexahedronSetTopologyModifi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html:8639,log,logging,8639,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; EdgesInQuad typedefsofa::component::topology::container::dynamic::QuadSetTopologyModifier; f_bboxso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html:7246,log,logging,7246,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; EdgesInTetrahedron typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyModi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html:9829,log,logging,9829,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeSetTopologyModifier()sofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; EdgesInTriangle typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html:8420,log,logging,8420,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html:3888,log,logging,3888,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html:2205,log,logging,2205,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,3,['log'],['logging']
Testability,"< DataTypes >; computeRestEdgePlaneIntersection(EdgeID edgeID, sofa::type::Vec< 3, Real > pointOnPlane, sofa::type::Vec< 3, Real > normalOfPlane, sofa::type::Vec< 3, Real > &intersection)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeRestHexahedronVolume(const HexaID h) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; computeRestQuadArea(const QuadID i) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; computeRestSquareEdgeLength(const EdgeID i) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeShapeFunction(const LocalCoord nc, const HexahedronBinaryIndex bi) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; Coord typedefsofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawColorHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_drawEdgessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; d_drawHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_drawScaleHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showHexaIndicessofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html:9820,log,logging,9820,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"< DataTypes >; computeTriangleBarycoefs(const TriangleID ind_t, const sofa::type::Vec< 3, Real > &p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCenter(const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCircumcenter(const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCircumcenterBaryCoefs(sofa::type::Vec< 3, Real > &baryCoord, const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleNormal(const TriangleID ind_t) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; Coord typedefsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawColorTetrahedrasofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >protected; d_drawEdgessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; d_drawScaleTetrahedrasofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >protected; d_drawTetrahedrasofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showIndicesScalesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >protected; d_showPointIndicessofa::component::topol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html:13473,log,logging,13473,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< DataTypes >virtual; Coord typedefsofa::component::statecontainer::MappedObject< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_Vsofa::component::statecontainer::MappedObject< DataTypes >; d_Xsofa::component::statecontainer::MappedObject< DataTypes >; datasofa::component::statecontainer::MappedObject< DataTypes >protected; DataTypes typedefsofa::core::State< DataTypes >; Deriv typedefsofa::component::statecontainer::MappedObject< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; f_Vsofa::component::statecontainer::Mappe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html:2597,log,logging,2597,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,1,['log'],['logging']
Testability,"< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, sofa::component::mass::UniformMass< DataTypes >, and sofa::component::mass::UniformMass< DataTypes >. ◆ initGnuplot(). template<class DataTypes > . void sofa::core::behavior::Mass< DataTypes >::initGnuplot ; (; const std::string ; path). overridevirtual . initialization to export kinetic and potential energy to gnuplot files format ; Implements sofa::core::behavior::BaseMass. ◆ insertInNode(). template<class DataTypes > . bool sofa::core::behavior::Mass< DataTypes >::insertInNode ; (; objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::behavior::BaseMass. ◆ removeInNode(). template<class DataTypes > . bool sofa::core::behavior::Mass< DataTypes >::removeInNode ; (; objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::behavior::BaseMass. ◆ SOFA_CLASS2(). template<class DataTypes > . sofa::core::behavior::Mass< DataTypes >::SOFA_CLASS2 ; (; SOFA_TEMPLATE(Mass< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(ForceField, DataTypes) ; , . BaseMass< DataTypes > ;  . ). sofacorebehaviorMass; Generated on Mon Nov 11 2024 03:15:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:35440,test,test,35440,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,2,['test'],['test']
Testability,"< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", stiffness, d_stiffness)sofa::gui::component::AttachBodyButtonSetting; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", arrowSize, d_arrowSize)sofa::gui::component::AttachBodyButtonSetting; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", showFactorSize, d_showFactorSize)sofa::gui::component::AttachBodyButtonSetting; SOFA_CLASS(AttachBodyButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AttachBodyButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected. Generated on Mon Nov 11 2024 03:19:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html:11147,log,logErrors,11147,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,2,['log'],['logErrors']
Testability,"=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_CLASS(VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types))sofa::core::visual::VisualState< DataTypes >; State< DataTypes >::SOFA_CLASS(SOFA_TEMPLATE(State, DataTypes), BaseState)sofa::core::State< DataTypes >; sofa::core::BaseState::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::visual::VisualState< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::visual::VisualState< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::core::State< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualState()sofa::core::visual::VisualState< DataTypes >; write(core::VecCoordId v) overridesofa::core::visual::VisualState< DataTypes >virtual; write(core::VecDerivId v) overridesofa::core::visual::VisualState< DataTypes >virtual; write(core::MatrixDerivId) overridesofa::core::visual::VisualState< DataTypes >inlinevirtual; WriteCoord typedefsofa::core::State< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; WriteDeriv typedefsofa::core::State< DataTypes >; writeDx()sofa::core::State< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html:12154,log,logErrors,12154,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,1,['log'],['logErrors']
Testability,"=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglMatrix2Variable, OglVariable< type::vector< float > >)sofa::gl::component::shader::OglMatrix2Variable; OglVariable< type::vector< float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; transposesofa::gl::component::shader::OglMatrix2Variable; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< float > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglMatrix2Variable()sofa::gl::component::shader::OglMatrix2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< float >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html:13727,log,logErrors,13727,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable-members.html,2,['log'],['logErrors']
Testability,"> > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< TBlock > Struct Template Reference; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection Struct Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:240980,test,testing,240980,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,">::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . template<Size N, typename Real > . static Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const sofa::type::Vec< N, Real > & ; m1, . const sofa::type::Vec< N, Real > & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries . ◆ vectorMaxDiff() [3/3]. template<typename _Real = SRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:4981,test,testing,4981,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,2,['test'],['testing']
Testability,">; SOFA_CLASS(SOFA_TEMPLATE(SkeletalMotionProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TProjectiveConstraintSet typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~ProjectiveConstraintSet() overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html:18796,log,logErrors,18796,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,1,['log'],['logErrors']
Testability,">;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<typename TReal = SReal> . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > & ; dst, . const Eigen::SparseMatrix< _SrcScalar,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:4300,test,testing,4300,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,2,['test'],['testing']
Testability,">virtual; addForce(const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::BaseInteractionForceFieldinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(const Spring &s)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; addSpring(int m1, int m2, int p1, int p2, Real hardKst, Real softKsr, Real hardKsr, Real kd, Real ratio)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, int i, Spring &spring, Real kFactor)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >protected; addSpringForce(SReal &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, int i, Spring &spring)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >protecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:2397,log,logging,2397,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['log'],['logging']
Testability,A - Topic: [SOLVED] Macro definition of snprintf conflicts. /3; ; SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. /6; ; SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. /main-clock-frequency-in-sofa; ; SOFA - Topic: [SOLVED] Main clock frequency in SOFA. /making-controlled-deformations-without-phantom; . /feed; ; [SOLVED] Making controlled deformations without Phantom – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /6; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /8; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /making-models-move-with-each-other-and-not-separate; ; SOFA - Topic: [SOLVED] making models move with each other and not separate. /many-nan-values-in-eulerimplicitsolver-log-for-tetrahedronfemforcefield; ; SOFA - Topic: [SOLVED] Many ‘nan’ values in EulerImplicitSolver log for TetrahedronFEMForceField. /mapping-2-states-to-one-state; ; SOFA - Topic: Mapping 2 states to one state. /mapping-between-beamfemforcefield-behavioral-model-and-oglmodel; . /embed; ; SOFA - Topic: [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel. /feed; ; [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel – SOFA. SOFA - Topic: [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel. /mapping-between-rigid-and-deformable-objects; ; SOFA - Topic: [SOLVED] Mapping between rigid and deformable objects. /mapping-between-the-haptic-device-and-a-deformable-instrument; ; SOFA - Topic: mapping between the haptic device and a deformable instrument. /mapping-different-meshes; ; SOFA - Topic: [SOLVED] Mapping different meshes. /mapping-from-grid-to-fem-triangle; ; SOFA - Topic: Mapping from Grid to FEM Triangle. /mapping-grid-to-fem; ; SOFA - Topic: [SOLVED] Mapping Grid to ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:344480,log,log-for-tetrahedronfemforcefield,344480,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['log'],"['log', 'log-for-tetrahedronfemforcefield']"
Testability,"A API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163807,log,loggingmessagehandler,163807,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['loggingmessagehandler']
Testability,A API: sofa::helper::IsEqual< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference; SOFA API: sofa::helper::IsNull< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Background Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Foreground Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader Struct Reference; SOFA API: sofa::helper::io::DDSHeader::DDSCaps Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader::DDSPixelFormat Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord >::TREENODE Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ComponentInfo Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileInfo Struct Reference; SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::narrowing_error Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::InitExternalModule Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::ModuleIsI,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:236412,log,logging,236412,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"A API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:164038,log,logging,164038,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,A – Registration. SOFA – SOFA Week 2024. /technical-committee-7; ; SOFA – Technical Committee #7. /technical-committees; . /registration; ; SOFA – Registration. SOFA – Technical Committees. stc11; ; SOFA – STC#11. stc9; . /live; ; SOFA – Live. SOFA – STC#9 meeting. wp-content; . /plugins; . /bbpress; . /templates; . /default; . /css; ; bbpress.min.css. /js; ; editor.min.js; engagements.min.js. /cf7-conditional-fields; . /js; ; scripts.js. style.css. /cleantalk-spam-protect; . /css; . /images; ; bad_email.svg; good_email.svg. cleantalk-email-decoder.min.css; cleantalk-public.min.css. /js; ; apbct-public-bundle.min.js. /contact-form-7; . /includes; . /css; ; styles.css. /js; ; index.js. /swv; . /js; ; index.js. /revslider; . /rs-plugin; . /css; ; settings.css. /font; ; revicons.eot; revicons.svg; revicons.ttf; revicons.woff. /js; ; jquery.themepunch.revolution.min.js; jquery.themepunch.tools.min.js. /wpcf7-recaptcha; . /assets; . /js; ; wpcf7-recaptcha-controls.js. /wp-logo-showcase-responsive-slider-slider; . /assets; . /css; ; slick.css; wpls-public.css. /js; ; slick.min.js; wpls-public.js. /sofaGraph; ; controller.js; functions.js; style.css. /themes; . /inovado; . /framework; . /css; . /font; ; fontawesome-webfont-1.eot; fontawesome-webfont.eot; fontawesome-webfont.ttf; fontawesome-webfont.woff. custom_script.css; flexslider.css; headers.css; prettyPhoto.css; responsive.css; retina.css; shortcodes.css. /js; . /twitter; ; jquery.tweet.js. bootstrap.js; easing.js; fitvids.js; flexslider.js; functions.js; isotope.js; mobilemenu.js; prettyPhoto.js; shortcodes.js; superfish.js; waypoints.js; waypoints-sticky.js. style.css. /inovado_child; ; style.css. /uploads; . /2016; . /08; ; 2-Tutorial.pdf. /2017; . /04; ; STC3-Report.pdf. /2018; . /07; ; STC1-Report.pdf; STC2-Report.pdf; STC4-Report.pdf; STC5-Report.pdf. /11; ; SOFA-SymposiumProgram-2018.pdf. /12; ; STC6-Report.pdf. /2019; . /06; ; STC7-Report.pdf. /11; ; FrenchTechCentral_Plan_FR.pdf; SOFA-SymposiumProgram-2019.p,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:587318,log,logo-showcase-responsive-slider-slider,587318,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logo-showcase-responsive-slider-slider']
Testability,API: Member List; SOFA API: Member List; SOFA API: sofa::helper::io::TriangleLoader Class Reference; SOFA API: Member List; SOFA API: sofa::helper::io::XspLoader Class Reference; SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:161629,log,logging,161629,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::MatSym< D, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Material Class Refe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:195163,test,testing,195163,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"AT, sofa::type::Vec< 2, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:1543,log,logging,1543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['log'],['logging']
Testability,"AT, sofa::type::Vec< 3, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:1543,log,logging,1543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['log'],['logging']
Testability,"AT, sofa::type::Vec< 4, float > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:1543,log,logging,1543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['log'],['logging']
Testability,"ATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(GearSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Spring typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; springssofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~GearSpringForceField()sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >protectedvirtual; ~PairInteractionForceField() overr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:20183,log,logErrors,20183,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['log'],['logErrors']
Testability,"A_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(EdgePressureForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::EdgePressureForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateEdgeInformation()sofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3d typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; VecCoord typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~EdgePressureForceField()sofa::component::mechanicalload::EdgePressureForceField< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html:18530,log,logErrors,18530,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,1,['log'],['logErrors']
Testability,"A_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16099,test,testIntersection,16099,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"A_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(RestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; spatial_dimensionssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >static; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html:18562,log,logErrors,18562,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,1,['log'],['logErrors']
Testability,"AndRemoved matrixJ;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_updateJ instead"") DeprecatedAndRemoved updateJ;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_eigenJacobian instead"") DeprecatedAndRemoved eigenJacobian;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_eigenJacobians instead"") DeprecatedAndRemoved eigenJacobians;  used by getJs More...;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_geometricStiffnessMatrix instead"") DeprecatedAndRemoved geometricStiffnessMatrix;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:21928,test,testMechanicalState,21928,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['test'],['testMechanicalState']
Testability,AnimationLoopprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:5941,log,logging,5941,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,1,['log'],['logging']
Testability,"AnyTypessofa::helper::logging::Messagestatic; CEmpty enum valuesofa::helper::logging::Message; Class enum namesofa::helper::logging::Message; ClassCount enum valuesofa::helper::logging::Message; componentInfo() constsofa::helper::logging::Messageinline; context() constsofa::helper::logging::Messageinline; Deprecated enum valuesofa::helper::logging::Message; Dev enum valuesofa::helper::logging::Message; empty() constsofa::helper::logging::Message; emptyMsgsofa::helper::logging::Messagestatic; Error enum valuesofa::helper::logging::Message; Fatal enum valuesofa::helper::logging::Message; fileInfo() constsofa::helper::logging::Messageinline; Info enum valuesofa::helper::logging::Message; Log enum valuesofa::helper::logging::Message; m_classsofa::helper::logging::Messageprotected; m_componentinfosofa::helper::logging::Messageprotected; m_fileInfosofa::helper::logging::Messageprotected; m_idsofa::helper::logging::Messageprotected; m_streamsofa::helper::logging::Messageprotected; m_typesofa::helper::logging::Messageprotected; message() constsofa::helper::logging::Messageinline; Message()sofa::helper::logging::Messageinline; Message(const Message &msg)sofa::helper::logging::Message; Message(Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::Message; messageAsString() constsofa::helper::logging::Messageinline; operator<<(const T &x)sofa::helper::logging::Messageinline; operator<<(const FileInfo::SPtr &fi)sofa::helper::logging::Message; operator=(const Message &msg)sofa::helper::logging::Message; Runtime enum valuesofa::helper::logging::Message; sender() constsofa::helper::logging::Messageinline; TEmpty enum valuesofa::helper::logging::Message; type() constsofa::helper::logging::Messageinline; Type enum namesofa::helper::logging::Message; TypeCount enum valuesofa::helper::logging::Message; TypeSet typedefsofa::helper::logging::Message; Warning enum valuesofa::helper::logging::Message.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html:1309,log,logging,1309,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,34,['log'],['logging']
Testability,"Attribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:1511,log,logging,1511,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,2,['log'],['logging']
Testability,"Attribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; draw(const core::visual::VisualParams *)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html:3752,log,logging,3752,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,2,['log'],['logging']
Testability,"Attribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:1511,log,logging,1511,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,2,['log'],['logging']
Testability,"Attribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; draw(const core::visual::VisualParams *)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html:3752,log,logging,3752,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,2,['log'],['logging']
Testability,"Attribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:1511,log,logging,1511,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,2,['log'],['logging']
Testability,"Attribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; draw(const core::visual::VisualParams *)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html:3752,log,logging,3752,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,2,['log'],['logging']
Testability,"Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:2450,log,logging,2450,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,2,['log'],['logging']
Testability,"Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateCylinder< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html:2976,log,logging,2976,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,1,['log'],['logging']
Testability,"Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::TransformEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html:2976,log,logging,2976,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html,1,['log'],['logging']
Testability,"Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::topology::mapping::SubsetTopologicalMappingvirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind) overridesofa::component::topology::mapping::SubsetTopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEdgessofa::component::topology::mapping::SubsetTopologicalMapping; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleHexahedrasofa::component::topology::mapping::Sub",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html:7038,log,logging,7038,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,1,['log'],['logging']
Testability,"Base; getElementMass(sofa::Index index) const overridesofa::component::mass::UniformMass< DataTypes >virtual; getElementMass(sofa::Index index, linearalgebra::BaseMatrix *m) const overridesofa::component::mass::UniformMass< DataTypes >virtual; getFileMass() constsofa::component::mass::UniformMass< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const core::MechanicalParams *mparams, const DataVecDeriv &d_v) const overridesofa::component::mass::UniformMass< DataTypes >virtual; sofa::core::behavior::Mass::getKineticEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMass() constsofa::component::mass::UniformMass< DataTypes >inline; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const core::MechanicalParams *mparams, const DataVecCoord &x, const DataVecDeriv &v) const overridesofa::component::mass::UniformMass< DataTypes >virtual; getMomentum(const MechanicalParams *params, const DataVecCoord &d_x, const DataVecDeriv &d_v) constsofa::component::mass::UniformMass< DataTypes >virtual; getMomentum(const MechanicalParams *params, const DataVecCoord &d_x, const DataVecDeriv &d_v) constsofa::component::mass::UniformMass< DataTypes >virtual; sofa::core::behavior::Mass::getMomentum(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getMomentumRigid3DImpl(const MechanicalParams *, const DataVecCoord &d_x, const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html:11758,log,logging,11758,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,1,['log'],['logging']
Testability,"Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(MakeDataAliasComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~MakeDataAliasComponent() overridesofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html:10409,log,logErrors,10409,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,1,['log'],['logErrors']
Testability,"BaseConstraintSet::getConstraintViolation ; (; const ConstraintParams * ; cParams, . linearalgebra::BaseVector * ; v . ). inlinevirtual . Construct the Constraint violations vector; Parameters. vis the result vector that contains the whole constraints violations ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC) . Reimplemented in sofa::core::behavior::PairInteractionConstraint< TDataTypes >, sofa::core::behavior::PairInteractionConstraint< sofa::defaulttype::StdVectorTypes >, sofa::core::behavior::PairInteractionConstraint< DataTypes >, sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >, and sofa::core::behavior::Constraint< DataTypes >. ◆ insertInNode(). bool sofa::core::behavior::BaseConstraintSet::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ processGeometricalData(). virtual void sofa::core::behavior::BaseConstraintSet::processGeometricalData ; (; ). inlinevirtual . Process geometrical data.; This function is called by the CollisionVisitor, it can be used to process a collision detection specific for the constraint . ◆ removeInNode(). bool sofa::core::behavior::BaseConstraintSet::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resetConstraint(). virtual void sofa::core::behavior::BaseConstraintSet::resetConstraint ; (; ). inlinevirtual . ◆ setConstraintId(). virtual void sofa::core::behavior::BaseConstraintSet::setConstraintId ; (; unsigned ; cId",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html:17266,test,test,17266,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html,1,['test'],['test']
Testability,"BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0)=0sofa::core::CollisionModelpure virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *, Index)sofa::core::CollisionModelinlinevirtual; draw(const core::visual::VisualParams *) overridesofa::core::CollisionModelinlinevirtual; empty() constsofa::core::CollisionModelinline; end()sofa::core::CollisionModelinline; enum_typesofa::core::CollisionModelprotected; ENUM_TYPE_SIZE enum valuesofa::core::CollisionModel; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html:3130,log,logging,3130,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,1,['log'],['logging']
Testability,"BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTotalMass()sofa::component::mass::UniformMass< DataTypes >virtual; checkVertexMass()sofa::component::mass::UniformMass< DataTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; constructor_message()sofa::component::mass::UniformMass< DataTypes >protected; constructor_message()sofa::component::mass::UniformMass< DataTypes >protected; Coord typedefsofa::component::mass::UniformMass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMappingInertiasofa::component::mass::UniformMass< DataTypes >; d_filenameMasssofa::component::mass::UniformMass< DataTypes >; d_indicessofa::component::mass::UniformMass< DataTypes >; d_localRangesofa::component::mass::UniformMass< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_preserveTotalMasssofa::component::mass::UniformMass< DataTypes >; d_showAxisSizesofa::component::mass::UniformMass< DataTypes >; d_showCenterOfGravitysofa::component::mass::UniformMass< DataTypes >; d_showInitialCenterOfGravitysofa::component::mass::UniformMass< DataTypes >; d_showX0sofa::component::mass::UniformMass< DataTypes >; d_totalMasssofa::component::mass::UniformMass< DataTypes >; d_vertexMasssofa::component::mass::Un",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html:6905,log,logging,6905,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,1,['log'],['logging']
Testability,"BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; Coord2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataTypes2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataVecCoord1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataVecCoord2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataVecDeriv1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataVecDeriv2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; Deriv1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; Deriv2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html:4111,log,logging,4111,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,1,['log'],['logging']
Testability,"BaseMappingvirtual; setPathInputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setPathOutputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to) overridesofa::core::Mapping< TIn, TOut >virtual; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::Mapping< TIn, TOut >inlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(Mapping, TIn, TOut), BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMappinginlinevirtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html:14633,test,testMechanicalState,14633,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,2,"['log', 'test']","['logErrors', 'testMechanicalState']"
Testability,"BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::utility::TopologicalChangeProcessorinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::topology::utility::TopologicalChangeProcessor; d_edgesToRemovesofa::component::topology::utility::TopologicalChangeProcessor; d_epsilonSnapBordersofa::component::topology::utility::TopologicalChangeProcessor; d_epsilonSnapPathsofa::component::topology::utility::TopologicalChangeProcessor; d_filenamesofa::component::topology::utility::TopologicalChangeProcessor; d_hexahedraToRemovesofa::component::topology::utility::TopologicalChangeProcessor; d_intervalsofa::component::topology::utility::TopologicalChangeProcessor; d_listChangessofa::component::topology::utility::TopologicalChangeProcessor; d_loopsofa::component::topology::utility::TopologicalChangeProcessor; d_messageLogCountsofa::core::objectmodel::Basemuta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html:2349,log,logging,2349,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,1,['log'],['logging']
Testability,"BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(QuadularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~QuadularBendingSprings()sofa::component::solidmechanics::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html:18352,log,logErrors,18352,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,1,['log'],['logErrors']
Testability,"BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getExtIndices() constsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inline; getExtPosition() constsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; getIndices() constsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inlinevirtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html:10176,log,logging,10176,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,1,['log'],['logging']
Testability,"BaseObject; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixLinearSystem, core::objectmodel::BaseObject)sofa::core::behavior::BaseMatrixLinearSystem; SOFA_CLASS(SOFA_TEMPLATE2(MatrixLinearSystem, TMatrix, TVector), SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector))sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; sofa::component::linearsystem::TypedMatrixLinearSystem::SOFA_CLASS(SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; sofa::core::behavior::BaseMatrixLinearSystem::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html:22176,log,logErrors,22176,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,1,['log'],['logErrors']
Testability,"BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexturePointer; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturePointervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; enabledsofa::gl::component::shader::OglTexturePointerprotected; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &)sofa::core::visual::VisualModelinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html:2805,log,logging,2805,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,2,['log'],['logging']
Testability,"BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_cubesDampingsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >protected; d_cubesStiffnesssofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >protected; d_drawModesofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_elongationOnlysofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_enabledsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kdsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_lengthssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_linesDampingsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:6470,log,logging,6470,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,1,['log'],['logging']
Testability,"BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html:3012,log,logging,3012,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,1,['log'],['logging']
Testability,"BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html:3012,log,logging,3012,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,1,['log'],['logging']
Testability,"BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::MeshSubsetEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_hexahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_indicessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputEdgessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputHexahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputPositionsofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputQuadssofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputTetrahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputTrianglessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionsofa::component::engine::se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html:3012,log,logging,3012,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,1,['log'],['logging']
Testability,"BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel1 typedefsofa::component::collision::response::contact::RayContact< CM2 >; CollisionModel2 typedefsofa::component::collision::response::contact::RayContact< CM2 >; collisionssofa::component::collision::response::contact::BaseRayContactprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; createResponse(core::objectmodel::BaseContext *) overridesofa::component::collision::response::contact::BaseRayContactinlinevirtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html:2655,log,logging,2655,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,1,['log'],['logging']
Testability,"Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const EdgeID i) const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; sofa::component::topology::container::dynamic::QuadSetTopologyContainer::getLocalEdgesInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalEdgesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalIndexFromBinaryIndex(const HexahedronBinaryIndex bi) constsofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; getLocalQuadsInHexahedron(const QuadID i) const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainerinlinevirtual; getNbQuads()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetrahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNextAdjacentQuad(const HexaID _hexaID, const QuadID _quadID, const EdgeID _edgeID)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:20449,log,logging,20449,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,3,['log'],['logging']
Testability,ButtonSettingprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOperationType() overridesofa::gui::component::FixPickedParticleButtonSettinginlinevirtual; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::Base,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html:4657,log,logging,4657,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,2,['log'],['logging']
Testability,"CT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FixedRotationProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; VecCoord typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~FixedRotationProjectiveConstraint() overridesofa::component::constraint::projective::Fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html:16609,log,logErrors,16609,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"CT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(HermiteSplineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec2R typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; Vec3R typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; VecCoord typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:19626,log,logErrors,19626,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['log'],['logErrors']
Testability,Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessagehandlerPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:1255,log,logging,1255,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,10,['log'],['logging']
Testability,Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_p,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163567,log,logging,163567,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,Class() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::Detectioninline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html:4761,log,logging,4761,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,1,['log'],['logging']
Testability,Class()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFBO()sofa::gl::component::shader::VisualManagerPassinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputName()sofa::gl::component::shader::VisualManagerPass; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *) overridesofa::gl::component::shader::VisualManagerPassvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html:6010,log,logging,6010,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,2,['log'],['logging']
Testability,"CollisionModel2, ResponseDataTypes >; CollisionElement2 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel1 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel2 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; contactIndexsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; ContactIndexMap typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; createResponse(core::objectmodel::BaseContext *group) overridesofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >virtual; d_componentStatesofa::core::objectmodel::Base; d_keepAlivesofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; d_messageLogCountsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html:3585,log,logging,3585,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,1,['log'],['logging']
Testability,"ConstraintAnimationLoopprotectedvirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getIndividualConstraintSolvingProcess(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; getIndividualConstraintViolations(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:7549,log,logging,7549,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,1,['log'],['logging']
Testability,"ConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html:2855,log,logging,2855,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,1,['log'],['logging']
Testability,"Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetAssembledSizeVisitor::independentOnly { false }. protected . ◆ vsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::vsize { 0 }. protected . ◆ xsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::xsize { 0 }. protected . Constructor details. ◆ GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::GetAssembledSizeVisitor ; (; const sofa::core::ExecParams * ; params = sofa::core::mechanicalparams::castToExecParams(core::mechanicalparams::defaultInstance())). inline . ◆ ~GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::~GetAssembledSizeVisitor ; (; ). inlineoverride . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetAssembledSizeVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ positionSize(). unsigned sofa::component::odesolver::testing::GetAssembledSizeVisitor::positionSize ; (; ); const. inline . ◆ processNodeTopDown(). Result sofa::component::odesolver::testing::GetAssembledSizeVisitor::processNodeTopDown ; (; simulation::Node * ; ). inlineoverridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Visitor. ◆ setIndependentOnly(). void sofa::component::odesolver::testing::GetAssembledSizeVisitor::setIndependentOnly ; (; bool ; b). inline . ◆ velocitySize(). unsigned sofa::component::odesolver::testing::GetAssembledSizeVisitor::velocitySize ; (; ); const. inline . sofacomponentodesolvertestingGetAssembledSizeVisitor; Generated on Mon Nov 11 2024 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html:5916,test,testing,5916,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,1,['test'],['testing']
Testability,"Create (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BehaviorModel(). sofa::core::BehaviorModel::BehaviorModel ; (; ). inlineprotected . ◆ ~BehaviorModel(). sofa::core::BehaviorModel::~BehaviorModel ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ addBBox(). virtual bool sofa::core::BehaviorModel::addBBox ; (; SReal * ; , . SReal * ;  . ). inlinevirtual . ◆ insertInNode(). bool sofa::core::BehaviorModel::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::BehaviorModel::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::BehaviorModel::SOFA_ABSTRACT_CLASS ; (; BehaviorModel ; , . objectmodel::BaseObject ;  . ). ◆ updatePosition(). virtual void sofa::core::BehaviorModel::updatePosition ; (; SReal ; dt). pure virtual . Computation of a new simulation step. ; Implemented in sofa::gui::component::performer::BaseMouseInteractor. sofacoreBehaviorModel; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html:14026,test,test,14026,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,2,['test'],['test']
Testability,"DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MeshROI, DataTypes), SOFA_TEMPLATE(BaseROI, DataTypes))sofa::component::engine::select::MeshROI< DataTypes >; sofa::component::engine::select::BaseROI::SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::MeshROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseROI() override=defaultsofa::component::engine::select::BaseROI< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html:19788,log,logErrors,19788,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,1,['log'],['logErrors']
Testability,"DataEngine; SOFA_CLASS(SOFA_TEMPLATE(TransformPosition, DataTypes), core::DataEngine)sofa::component::engine::transform::TransformPosition< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TransformationMethod enum namesofa::component::engine::transform::TransformPosition< DataTypes >; transformationMethodsofa::component::engine::transform::TransformPosition< DataTypes >protected; TransformPosition()sofa::component::engine::transform::TransformPosition< DataTypes >protected; TRANSLATION enum valuesofa::component::engine::transform::TransformPosition< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec16 typedefsofa::component::engine::transform::TransformPosition< DataTypes >; Vec4 typedefsofa::component::engine::transform::TransformPosition< DataTypes >; VecCoord typedefsofa::component::engine::transform::TransformPosition< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~TransformPosition() overridesofa::component::engine::transform::TransformPosition< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html:15470,log,logErrors,15470,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,1,['log'],['logErrors']
Testability,"DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKReader()sofa::component::io::mesh::basevtkreader::BaseVTKReader; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html:2188,log,logging,2188,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,3,['log'],['logging']
Testability,"DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrixT(const core::MechanicalParams *mparams, MatrixWriter mwriter)sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html:3025,log,logging,3025,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,1,['log'],['logging']
Testability,"DataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; TTriangle< DataTypes > classsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >friend; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >protectedvirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModeli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:19365,log,logErrors,19365,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,1,['log'],['logErrors']
Testability,"DataTypes >inline; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html:5582,log,logging,5582,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,1,['log'],['logging']
Testability,"DefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5342,test,testing,5342,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,2,['test'],['testing']
Testability,"DerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; constraint_Dsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; constraint_dofssofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; constraint_Fsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; constraint_forcesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; ConstraintCorrection(MechanicalState< DataTypes > *ms=nullptr)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlineexplicitprotected; Coord typedefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_debugViewFrameScalesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_fileCompliancesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_fileDirsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_recomputesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_restRotationssofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; d_rotationssofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html:7278,log,logging,7278,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,1,['log'],['logging']
Testability,"DerivId dx, core::MultiVecDerivId f) overridesofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; ConstraintCorrection(MechanicalState< DataTypes > *ms=nullptr)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlineexplicitprotected; convertConstraintMatrix(sofa::SignedIndex numberOfConstraints, const MatrixDeriv &inputConstraintMatrix)sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; Deriv typedefsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Fsofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >protected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html:6271,log,logging,6271,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,1,['log'],['logging']
Testability,"Description::getFullName ; (; ). virtual . Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) . ◆ getName(). std::string sofa::core::objectmodel::BaseObjectDescription::getName ; (; ). virtual . Get the object instance name. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ getObject(). Base * sofa::core::objectmodel::BaseObjectDescription::getObject ; (; ). virtual . Get the associated object (or nullptr if it is not created yet) ; Reimplemented in sofa::simulation::xml::BaseElement, sofa::simulation::xml::Element< Object >, sofa::simulation::xml::Element< sofa::core::objectmodel::BaseNode >, sofa::simulation::xml::Element< core::objectmodel::BaseObject >, and sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >. ◆ getParent(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::getParent ; (; ); const. virtual . Get the parent node. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ logError(). virtual void sofa::core::objectmodel::BaseObjectDescription::logError ; (; const std::string & ; s). inlinevirtual . ◆ logErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::logErrors ; (; const std::vector< std::string > & ; e). inlinevirtual . ◆ removeAttribute(). bool sofa::core::objectmodel::BaseObjectDescription::removeAttribute ; (; const std::string & ; attr). virtual . Remove an attribute given its name. ; Remove an attribute given its name, returns false if the attribute was not there. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ setAttribute(). void sofa::core::objectmodel::BaseObjectDescription::setAttribute ; (; const std::string & ; attr, . const std::string & ; val . ). virtual . Set an attribute. Override any existing value. . ◆ setName(). void sofa::core::objectmodel::BaseObjectDescription::setName ; (; const std::string & ; name). virtual . Set the object instance name. ; Reimplemented in sofa::simulation::xml::BaseElement. sofaco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:6965,log,logError,6965,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['log'],['logError']
Testability,"DifferenceSolver, sofa::component::odesolver::backward::StaticSolver, sofa::component::odesolver::backward::NewmarkImplicitSolver, and sofa::component::odesolver::backward::EulerImplicitSolver. ◆ getVelocityIntegrationFactor(). virtual SReal sofa::core::behavior::OdeSolver::getVelocityIntegrationFactor ; (; ); const. inlinevirtual . Given the solution dx of the linear system inversion, how much will it affect the velocity; This method is used to compute the compliance for contact corrections ; Reimplemented in sofa::component::odesolver::backward::VariationalSymplecticSolver, sofa::component::odesolver::backward::StaticSolver, sofa::component::odesolver::backward::NewmarkImplicitSolver, and sofa::component::odesolver::backward::EulerImplicitSolver. ◆ insertInNode(). bool sofa::core::behavior::OdeSolver::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::behavior::OdeSolver::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::behavior::OdeSolver::SOFA_ABSTRACT_CLASS ; (; OdeSolver ; , . objectmodel::BaseObject ;  . ). ◆ solve() [1/2]. virtual void sofa::core::behavior::OdeSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . MultiVecCoordId ; , . MultiVecDerivId ;  . ). pure virtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Im",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:18386,test,test,18386,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,1,['test'],['test']
Testability,"Dimension() const overridesofa::core::behavior::MechanicalState< DataTypes >inlinevirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDerivDimension() const overridesofa::core::behavior::MechanicalState< DataTypes >inlinevirtual; getIndicesInSpace(sofa::type::vector< sofa::Index > &indices, Real xmin, Real xmax, Real ymin, Real ymax, Real zmin, Real zmax) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatrixBlockSize() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getMatrixSize() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPX(sofa::Index i) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >inlinevirtual; getPY(sofa::Index i) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >inlinevirtual; getPZ(sofa::Index i) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >inlinevirtual; getReadAccessor(core::ConstVecId v)sofa::component::statecontainer::MechanicalObject< DataTypes >protected; getRotation() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html:12402,log,logging,12402,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,1,['log'],['logging']
Testability,"Down (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html:1731,test,testTags,1731,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,2,['test'],['testTags']
Testability,"Down enum valuesofa::core::objectmodel::BaseContext; SearchParents enum valuesofa::core::objectmodel::BaseContext; SearchRoot enum valuesofa::core::objectmodel::BaseContext; SearchUp enum valuesofa::core::objectmodel::BaseContext; setActive(bool)sofa::core::objectmodel::BaseContextinlinevirtual; setAnimate(bool)sofa::core::objectmodel::BaseContextinlinevirtual; setChangeSleepingState(bool)sofa::core::objectmodel::BaseContextinlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDt(SReal)sofa::core::objectmodel::BaseContextinlinevirtual; setGravity(const Vec3 &)sofa::core::objectmodel::BaseContextinlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMechanicalState(BaseObject *)sofa::core::objectmodel::BaseContextinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSleeping(bool)sofa::core::objectmodel::BaseContextinlinevirtual; setTopology(BaseObject *)sofa::core::objectmodel::BaseContextinlinevirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseContext, Base)sofa::core::objectmodel::BaseContext; SPtr typedefsofa::core::objectmodel::Base; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::core::objectmodel::BaseContext; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseContext() overridesofa::core::objectmodel::BaseContextprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html:12642,log,logErrors,12642,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,1,['log'],['logErrors']
Testability,"Down(simulation::Node *node) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; ressofa::simulation::mechanicalvisitor::MechanicalAddMDxVisitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor-members.html:10819,test,testTags,10819,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor-members.html,2,['test'],['testTags']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSize() const overridesofa::core::visual::VisualState< defaulttype::Vec3Types >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topolog,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html:7293,log,logging,7293,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,2,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:5910,log,logging,5910,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,5,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *) overridesofa::gl::component::rendering2d::OglLabelvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; ha,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html:6172,log,logging,6172,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,1,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *event) overridesofa::gl::component::shader::PostProcessManagervirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html:5700,log,logging,5700,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,2,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html:5754,log,logging,5754,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,8,['log'],['logging']
Testability,Draw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *) overridesofa::component::visual::TrailRenderer< DataTypes >virtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html:5860,log,logging,5860,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,1,['log'],['logging']
Testability,"E2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior::PairInteractionForceField< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PolynomialSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes))sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; PairInteractionForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PairInteractionForceField()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html:21100,log,logErrors,21100,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,1,['log'],['logErrors']
Testability,"F, const DataVecCoord &dX, const DataVecDeriv &) overridesofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html:2859,log,logging,2859,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"FEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0sofa::core::behavior::ForceField< DataTypes >pure virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *m, SReal kFactor, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffnessCorotational(Vector &f, const Vector &x, Index i=0, Index a=0, Index b=1, Index c=2, Index d=3, SReal fact=1.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html:7393,log,logging,7393,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"Fieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; exportGnuplot(SReal time)sofa::core::behavior::BaseInteractionForceFieldinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html:3288,log,logging,3288,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,1,['log'],['logging']
Testability,"Fieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html:3260,log,logging,3260,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,1,['log'],['logging']
Testability,"FileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(PointSplatModel, core::visual::VisualModel)sofa::gl::component::rendering3d::PointSplatModel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PointSplatModel() overridesofa::gl::component::rendering3d::PointSplatModelprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html:11410,log,logErrors,11410,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,1,['log'],['logErrors']
Testability,"FileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AddRecordedCameraButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AddRecordedCameraButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html:10647,log,logErrors,10647,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,2,['log'],['logErrors']
Testability,"FilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(AbstractTransformMatrixEngine, core::DataEngine)sofa::component::engine::transform::AbstractTransformMatrixEngine; sofa::core::DataEngine::SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~AbstractTransformMatrixEngine() overridesofa::component::engine::transform::AbstractTransformMatrixEngineinlineprotected; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html:12480,log,logErrors,12480,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,1,['log'],['logErrors']
Testability,"FilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:13719,test,testIntersection,13719,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['test'],['testIntersection']
Testability,ForceFeedbackprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html:5276,log,logging,5276,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,3,['log'],['logging']
Testability,ForceFeedbackprotected; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html:4918,log,logging,4918,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,1,['log'],['logging']
Testability,ForceFeedbackprotected; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *event) overridesofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; haptic_freqsofa::co,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html:7139,log,logging,7139,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,1,['log'],['logging']
Testability,"ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flags. template<typename _ForceFieldType > . unsigned char sofa::ForceField_test< _ForceFieldType >::flags. testing options. (all by default). To be used with precaution. . ◆ force. template<typename _ForceFieldType > . ForceField::SPtr sofa::ForceField_test< _ForceFieldType >::force. ◆ node. template<typename _ForceFieldType > . simulation::Node::SPtr sofa::ForceField_test< _ForceFieldType >::node. ◆ TEST_ALL. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_ALL = UCHAR_MAX. static . testing everything . ◆ TEST_POTENTIAL_ENERGY. template<typename _ForceFieldType > . const unsigned char sofa::ForceField_test< _ForceFieldType >::TEST_POTENTIAL_ENERGY = 1. static . testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) . Constructor details. ◆ ForceField_test() [1/2]. template<typename _ForceFieldType > . sofa::ForceField_test< _ForceFieldType >::ForceField_test ; (; ). inline . } ; Create a scene with a node, a state and a forcefi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:7012,test,testing,7012,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,2,['test'],['testing']
Testability,Formatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Referenc,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:162744,log,logging,162744,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"GeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionPointWithPlane(const TetraID ind_ta, const sofa::type::Vec< 3, Real > &planP0, const sofa::type::Vec< 3, Real > &normal, sofa::type::vector< sofa::type::Vec< 3, Real > > &intersectedPoint, SeqEdges &intersectedEdge)sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOppositePoint(PointID ind_p, const Edge &indices, Real coord_p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getRestEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html:19478,log,logging,19478,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >inlinevirtual; getSlave(const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html:6811,log,logging,6811,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,2,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >inlinevirtual; getSlave(const std::string &name) constso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:6743,log,logging,6743,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,2,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >inlinevirtual; getSEValue() overridesofa::gl::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:7165,log,logging,7165,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:7097,log,logging,7097,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,2,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >inlinevirtual; getSEValue() overridesofa::gl::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:7165,log,logging,7165,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:7097,log,logging,7097,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,2,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >inlinevirtual; getSEValue() overridesofa::gl::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:7165,log,logging,7165,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:7097,log,logging,7097,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglShaderMacroinlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglShaderDefineMacroinlinevirtual; getSEValue() overridesofa::gl::component::shader::OglShaderDefineMacroinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html:4396,log,logging,4396,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglTexturePointerinlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglTexturePointerinlinevirtual; getSEValue() overridesofa::gl::component::shader::OglTexturePointerinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() cons,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html:5659,log,logging,5659,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglTextureinlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglTextureinlinevirtual; getSEValue() overridesofa::gl::component::shader::OglTextureinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:6208,log,logging,6208,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,4,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html:5719,log,logging,5719,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:5711,log,logging,5711,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html:5733,log,logging,5733,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html:5733,log,logging,5733,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,1,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html:5733,log,logging,5733,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,2,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html:5745,log,logging,5745,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,2,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html:5745,log,logging,5745,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,2,['log'],['logging']
Testability,"GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html:5745,log,logging,5745,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:5761,log,logging,5761,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,8,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves(),MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html:5763,log,logging,5763,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,4,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html:5783,log,logging,5783,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html:5777,log,logging,5777,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html:5777,log,logging,5777,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,2,['log'],['logging']
Testability,GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html:5777,log,logging,5777,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,2,['log'],['logging']
Testability,"Grid Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::geometry::TriangleModelInRegularGrid Class Reference . #include <TriangleModelInRegularGrid.h>. Inheritance diagram for sofa::component::collision::geometry::TriangleModelInRegularGrid:. [legend]. Public Attributes; sofa::core::topology::BaseMeshTopology * _topology;  ; sofa::core::topology::BaseMeshTopology * _higher_topo;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * _higher_mstate;  ;  Public Attributes inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; Data< bool > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::Ta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:1117,test,test,1117,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,1,['test'],['test']
Testability,I: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163263,log,logging,163263,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"I: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::MatSym< D, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Material Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::PrimitiveGroup Class Reference; SOFA API: Member List; SOFA API: sofa::type::Quat< Real > Class Template Refer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:195348,test,testing,195348,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"I: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: Memb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:242218,test,testing,242218,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"ION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateSimulationContextVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; startingNodesofa::simulation::UpdateContextVisitorprotected; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateContextVisitorinline; UpdateSimulationContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateSimulationContextVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html:3973,test,testTags,3973,api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor-members.html,2,['test'],['testTags']
Testability,"InZone.; Returnsbool: false if method has encounter an error. . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ end(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::end. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getElementInZone(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getElementInZone ; (; VecIds & ; elementsToTest). protected . Function testing if elements are in the range of a given zone The zone is given by the selectorScale. Test is done on Barycentric point of elements. I.e if this point is in the range of the area. then, element is accepted otherwise, element is rejected. Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing accepted element. . ◆ getNeighboorElements(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getNeighboorElements ; (; VecIds & ; elementsToTest). protected . Function to get all elements directly neighboor of a given list of elements compute the list without redundancy using container xxAroundVertex() (where xx is the type of element). Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing neighbour (without already accepted elements and redundancy). . ◆ start(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::start. virtual . Functions called by Topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html:6434,Test,Test,6434,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,1,['Test'],['Test']
Testability,"Index > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::generateRandomSparseMatrix(Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; infinity()sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:1907,test,testing,1907,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,2,['test'],['testing']
Testability,"IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference; SOFA API: sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< float, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< int, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexValueProduct< Scalar > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrix< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::type_selector< index, T0, T2 > Class Template Reference; SOFA API: sofa::linearalgebra::type_selector< 0, T0, T1 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::type_selector< 1, T0, T1 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateBeginEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateEndEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BaseMechanicalVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BehaviorUpdatePositionVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BuildConstraintSystemEndEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::CleanupVisitor Class Reference; SOFA API: Member List; SO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:177483,test,testing,177483,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"Init()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_displacementssofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_scalessofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >; d_xsofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; d_x0sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html:3003,log,logging,3003,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,1,['log'],['logging']
Testability,"Intersection (collision::geometry::Triangle &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testValidity (collision::geometry::Sphere &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Point &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Line &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Triangle &, const type::Vec3 &) const;  ; bool testIntersection (collision::geometry::Cube &, collision::geometry::Cube &)=delete;  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Cube &, collision::geometry::Cube &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Point",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:7400,test,testIntersection,7400,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"Intersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:16100,test,testIntersection,16100,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"KDataIOpure virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swap()=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; write(ofstream &f, int n, int groups, int binary)=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseVTKDataIO() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html:10724,log,logErrors,10724,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,1,['log'],['logErrors']
Testability,"LASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TriangleCollisionModel()sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >protected; TriangleFlag enum namesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; TriangleModelInRegularGrid()sofa::component::collision::geometry::TriangleModelInRegularGridprotected; updateFromTopology()sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateNormals()sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >protectedvirtual; userDatasofa::core::CollisionModelprotected; VecCoord typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html:20649,log,logErrors,20649,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,1,['log'],['logErrors']
Testability,"LATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TetrahedronDiffusionFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TetrahedronDiffusionFEMForceField()sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; VecCoord typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VectorReal typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html:17496,log,logErrors,17496,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,LHWlen's Topics. SOFA - LHWlen's Profile. /xutian; . /engagements; ; SOFA - Fishuser's Profile. /replies; ; SOFA - Fishuser's Replies. /topics; ; SOFA - Fishuser's Topics. SOFA - Fishuser's Profile. /yangsen; . /engagements; . /page; . /2; ; SOFA - Sen's Profile. SOFA - Sen's Profile. /replies; ; SOFA - Sen's Replies. /topics; . /page; . /2; ; SOFA - Sen's Topics. SOFA - Sen's Topics. SOFA - Sen's Profile. /yannie; . /engagements; ; SOFA - Yannie's Profile. /replies; ; SOFA - Yannie's Replies. /topics; ; SOFA - Yannie's Topics. SOFA - Yannie's Profile. /yaookyiegmail-com; . /engagements; ; SOFA - wowsofa's Profile. /replies; ; SOFA - wowsofa's Replies. /topics; ; SOFA - wowsofa's Topics. SOFA - wowsofa's Profile. /yashchitalia; . /engagements; ; SOFA - Yash's Profile. /replies; ; SOFA - Yash's Replies. /topics; ; SOFA - Yash's Topics. SOFA - Yash's Profile. /ying; . /engagements; ; SOFA - logos's Profile. /replies; ; SOFA - logos's Replies. /topics; ; SOFA - logos's Topics. SOFA - logos's Profile. /yitian; . /engagements; ; SOFA - yitian's Profile. /replies; ; SOFA - yitian's Replies. /topics; ; SOFA - yitian's Topics. SOFA - yitian's Profile. /yordan-kyosev; . /engagements; ; SOFA - yo's Profile. /replies; ; SOFA - yo's Replies. /topics; ; SOFA - yo's Topics. SOFA - yo's Profile. /younesssss; . /engagements; ; SOFA - younesssss's Profile. /replies; ; SOFA - younesssss's Replies. /topics; ; SOFA - younesssss's Topics. SOFA - younesssss's Profile. /ypszilon; . /engagements; ; SOFA - Vizvary's Profile. /replies; ; SOFA - Vizvary's Replies. /topics; ; SOFA - Vizvary's Topics. SOFA - Vizvary's Profile. /yul131; . /engagements; ; SOFA - yul131's Profile. /replies; ; SOFA - yul131's Replies. /topics; ; SOFA - yul131's Topics. SOFA - yul131's Profile. /yummymushroom; . /engagements; ; SOFA - YummyMushroom's Profile. /replies; ; SOFA - YummyMushroom's Replies. /topics; ; SOFA - YummyMushroom's Topics. SOFA - YummyMushroom's Profile. /yupeng; . /engagements; ; SOFA - yupeng',MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:580952,log,logos,580952,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logos']
Testability,"Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Cube &, collision::geometry::Cube &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:20478,test,testIntersection,20478,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,"List=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::BaseROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecEdge typedefsofa::component::engine::select::BaseROI< DataTypes >; VecHexa typedefsofa::component::engine::select::BaseROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecQuad typedefsofa::component::engine::select::BaseROI< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTetra typedefsofa::component::engine::select::BaseROI< DataTypes >; VecTriangle typedefsofa::component::engine::select::BaseROI< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseROI() override=defaultsofa::component::engine::select::BaseROI< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html:18104,log,logErrors,18104,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,1,['log'],['logErrors']
Testability,"MPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PartialLinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecBool typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; VecCoord typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; x0sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; X0sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; Y0sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html:22095,log,logErrors,22095,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_N",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4326,Test,Testing,4326,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['Test'],['Testing']
Testability,Managervirtual; getContacts()sofa::core::collision::ContactManagerinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefaultResponseType() constsofa::component::collision::response::contact::CollisionResponseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::ContactManagerinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html:6710,log,logging,6710,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,1,['log'],['logging']
Testability,"Mapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE2(SquareMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, false))sofa::component::mapping::nonlinear::SquareMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, false >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html:18426,log,logErrors,18426,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,1,['log'],['logErrors']
Testability,"MassForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TetrahedralTensorMassForceField()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLameCoefficients()sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecType typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:18747,log,logErrors,18747,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['log'],['logErrors']
Testability,"MatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_matrixSizesofa::core::behavior::BaseMatrixLinearSystemprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; fin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html:2425,log,logging,2425,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,1,['log'],['logging']
Testability,"MechanicalStatepure virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; constraintBlocks(const std::list< unsigned int > &) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; copyFromBaseVector(VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyFromBuffer(VecId dst, const SReal *src, unsigned int n)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseMatrix(linearalgebra::BaseMatrix *dest, ConstMatrixDerivId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseVector(linearalgebra::BaseVector *dest, ConstVecId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBuffer(SReal *dst, ConstVecId src, unsigned int n) const =0sofa::core::behavior::BaseMechanicalStatepure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endIntegration(const ExecParams *params, SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; exportGnuplot(SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &nam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html:4799,log,logging,4799,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,1,['log'],['logging']
Testability,"Member Functions;  Message ();  ;  Message (const Message &msg);  ;  Message (Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; Message & operator= (const Message &msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:2180,log,logging,2180,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,2,['log'],['logging']
Testability,"Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Ref",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163798,log,logging,163798,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"Messages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleModelInRegularGridvirtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_useCurvaturesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; DataTypes typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; Deriv typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; doUpdateInternal()sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html:4076,log,logging,4076,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,1,['log'],['logging']
Testability,"Method to test Hexahedron container concistency. . ◆ checkHexahedronToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToEdgeCrossContainer ; (; ). Method to test Hexahedron to edges cross container concistency. . ◆ checkHexahedronTopology(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronTopology ; (; ). } ; Hexahedron methods { Full method to check Hexahedron Topology. Will call See alsocheckHexahedronContainer, . checkHexahedronToQuadCrossContainer . checkHexahedronToEdgeCrossContainer and . checkHexahedronToVertexCrossContainer . ◆ checkHexahedronToQuadCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToQuadCrossContainer ; (; ). Method to test Hexahedron to quads cross container concistency. . ◆ checkHexahedronToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToVertexCrossContainer ; (; ). Method to test Hexahedron to vertices cross container concistency. . ◆ checkQuadContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadContainer ; (; ). Method to test quad container concistency. . ◆ checkQuadToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToEdgeCrossContainer ; (; ). Method to test quads to edges cross container concistency. . ◆ checkQuadTopology(). bool sofa::component::topology::utility::TopologyChecker::checkQuadTopology ; (; ). } ; Quad methods { Full method to check Quad Topology. Will call See alsocheckQuadContainer, . checkQuadToEdgeCrossContainer and . checkQuadToVertexCrossContainer . ◆ checkQuadToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToVertexCrossContainer ; (; ). Method to test quads to vertices cross container concistency. . ◆ checkTetrahedronContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronContainer ; (; ). Method to test Tetrahedr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:18659,test,test,18659,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,"ModelOBJVisitor () override;  ; virtual void processVisualModel (Node *node, core::visual::VisualModel *vm);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html:2130,test,testTags,2130,api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html,2,['test'],['testTags']
Testability,"Modelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; CompositingVisualLoop()sofa::gl::component::shader::CompositingVisualLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawStep(sofa::core::visual::VisualParams *vparams) overridesofa::gl::component::shader::CompositingVisualLoopvirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html:3066,log,logging,3066,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,1,['log'],['logging']
Testability,"More...; Detailed Description; template<typename Real, unsigned int N>; class sofa::helper::Monomial_LD< Real, N >; A generic monomial with N variables of type Real. A monomial is one term of a polynomial. ; Todo this first version of polynomial is a linear presentation. This presentation is efficient for arithmetic operator like +,-,*,/ and derivative. But is not optimized for the evaluating (comparing to the recurrent presentation). . Public Attributes; Real coef;  ; sofa::type::Vec< N, int > powers;  . Protected Attributes; sofa::type::Vec< N, std::string > variables;  . Public Member Functions;  Monomial_LD ();  ;  Monomial_LD (Real,...);  ;  Monomial_LD (const Monomial_LD< Real, N > &a);  ; Monomial_LD< Real, N > & operator= (const Monomial_LD< Real, N > &b);  ; void SetCoef (const Real &m_coef);  Setting of Monomial_LD. More...;  ; void SetPower (int numbervar, int powervalue);  ; int degree ();  Return the total degree of monomial. More...;  ; bool operator== (const Monomial_LD< Real, N > &b) const;  Logical operators. More...;  ; bool operator!= (const Monomial_LD< Real, N > &b) const;  ; bool isSamePowers (const Monomial_LD< Real, N > &b) const;  ; bool isnullptr () const;  ; Monomial_LD< Real, N > & operator*= (const Real &alpha);  Mathematical operators. More...;  ; Monomial_LD< Real, N > & operator/= (const Real &alpha);  ; Monomial_LD< Real, N > & operator+= (const Monomial_LD< Real, N > &b);  ; Monomial_LD< Real, N > & operator-= (const Monomial_LD< Real, N > &b);  ; Monomial_LD< Real, N > & operator*= (const Monomial_LD< Real, N > &b);  ; Monomial_LD< Real, N > operator+ () const;  ; Monomial_LD< Real, N > operator- () const;  ; Monomial_LD< Real, N > operator* (const Real &alpha);  ; Monomial_LD< Real, N > operator/ (const Real &alpha);  ; Monomial_LD< Real, N > operator+ (const Monomial_LD< Real, N > &a);  ; Monomial_LD< Real, N > operator- (const Monomial_LD< Real, N > &a);  ; Monomial_LD< Real, N > operator* (const Monomial_LD< Real, N > &a);  ; Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html:1462,Log,Logical,1462,api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,1,['Log'],['Logical']
Testability,"Name(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(MinProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15273,test,testIntersection,15273,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"Name(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::inters",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:14979,test,testIntersection,14979,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"Name(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPairStates(const PairMechanicalStates &pairStates)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(BaseMatrixProjectionMethod, TMatrix), core::behavior::StateAccessor)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMatrixProjectionMethod() overridesofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html:11078,log,logErrors,11078,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html,1,['log'],['logErrors']
Testability,"Name(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(ImageLoader, BaseLoader)sofa::core::loader::ImageLoader; sofa::core::loader::BaseLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html:10236,log,logErrors,10236,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,1,['log'],['logErrors']
Testability,"Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *node, core::objectmodel::BaseObject *o) overridesofa::simulation::VisualDrawVisitorvirtual; processVisualModel(simulation::Node *node, core::visual::VisualModel *vm) overridesofa::gl::component::shader::VisualOITDrawVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; shadersofa::gl::component::shader::VisualOITDrawVisitor; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualDrawVisitor(core::visual::VisualParams *params)sofa::simulation::VisualDrawVisitorinline; VisualOITDrawVisitor(core::visual::VisualParams *params, GLSLShader *oitShader)sofa::gl::component::shader::VisualOITDrawVisitorinline; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor-members.html:4502,test,testTags,4502,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_o_i_t_draw_visitor-members.html,2,['test'],['testTags']
Testability,"NodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *, core::objectmodel::BaseObject *)sofa::simulation::VisualVisitorinlinevirtual; processVisualModel(simulation::Node *node, core::visual::VisualModel *vm)=0sofa::simulation::VisualVisitorpure virtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor-members.html:4047,test,testTags,4047,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor-members.html,2,['test'],['testTags']
Testability,"NodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; SrcMultiVecId typedefsofa::simulation::mechanicalvisitor::MechanicalVInitVisitor< vtype >; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *) overridesofa::simulation::mechanicalvisitor::MechanicalVInitVisitor< vtype >inlinevirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; vDestsofa::simulation::mechanicalvisitor::MechanicalVInitVisitor< vtype >; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; vSrcsofa::simulation::mechanicalvisitor::MechanicalVInitVisitor< vtype >; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_init_visitor-members.html:10704,test,testTags,10704,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_init_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_init_visitor-members.html,2,['test'],['testTags']
Testability,OFA - Topic Tag: headers. /heat-diffusion; . /feed; ; Heat diffusion – SOFA. SOFA - Topic Tag: Heat diffusion. /heat-diffusion-fem-tetrahedra; . /feed; ; heat diffusion fem tetrahedra – SOFA. SOFA - Topic Tag: heat diffusion fem tetrahedra. /help-with-bilateralinteractionconstraint; . /feed; ; Help with BilateralInteractionConstraint – SOFA. SOFA - Topic Tag: Help with BilateralInteractionConstraint. /hexahedral; . /feed; ; hexahedral – SOFA. SOFA - Topic Tag: hexahedral. /hexahedron; . /feed; ; hexahedron – SOFA. SOFA - Topic Tag: hexahedron. /histogram; . /feed; ; histogram – SOFA. SOFA - Topic Tag: histogram. /hmsim-conference; . /feed; ; HMSIM conference – SOFA. SOFA - Topic Tag: HMSIM conference. /how-to-solve-this-problem; . /feed; ; how to solve this problem? – SOFA. SOFA - Topic Tag: how to solve this problem?. /hyperelastic; . /feed; ; hyperelastic – SOFA. SOFA - Topic Tag: hyperelastic. /hyper-elastic-mass-links-method-performance-testing; . /feed; ; Hyper-Elastic Mass Links method; performance testing – SOFA. SOFA - Topic Tag: Hyper-Elastic Mass Links method; performance testing. /hyper-elastic-material; . /feed; ; Hyper-elastic Material – SOFA. SOFA - Topic Tag: Hyper-elastic Material. /i; . /feed; ; I – SOFA. SOFA - Topic Tag: I. /ide-operating-system-development-environment; . /feed; ; IDE; Operating System; Development Environment; – SOFA. SOFA - Topic Tag: IDE; Operating System; Development Environment;. /iga-xfem-cad; . /feed; ; IGA XFEM CAD – SOFA. SOFA - Topic Tag: IGA XFEM CAD. /image; . /feed; ; Image – SOFA. SOFA - Topic Tag: Image. /image-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. SOFA - Topic Tag: import mesh. /incision; . /feed; ; incision – ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:448723,test,testing,448723,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,OFA - Topic Tag: tree. /triangles; . /feed; ; triangles – SOFA. SOFA - Topic Tag: triangles. /triangularfem; . /feed; ; TriangularFEM – SOFA. SOFA - Topic Tag: TriangularFEM. /tutorials; . /feed; ; tutorials – SOFA. SOFA - Topic Tag: tutorials. /two-haptic-devices; . /feed; ; two haptic devices – SOFA. SOFA - Topic Tag: two haptic devices. /two-haptic-forcefeedback; . /feed; ; two haptic forcefeedback – SOFA. SOFA - Topic Tag: two haptic forcefeedback. /two-rigid-parts; . /feed; ; two rigid parts – SOFA. SOFA - Topic Tag: two rigid parts. /ubuntu; . /feed; ; ubuntu – SOFA. SOFA - Topic Tag: ubuntu. /ubuntu16-04-lts; . /feed; ; UBUNTU(16.04 LTS) – SOFA. SOFA - Topic Tag: UBUNTU(16.04 LTS). /unable-to-determine-the-path; . /feed; ; Unable to determine the path – SOFA. SOFA - Topic Tag: Unable to determine the path. /unit; . /feed; ; unit – SOFA. SOFA - Topic Tag: unit. /units; . /feed; ; units – SOFA. SOFA - Topic Tag: units. /unit-testing; . /feed; ; unit testing – SOFA. SOFA - Topic Tag: unit testing. /unity3d-digital-trainers-blender-sofa; . /feed; ; Unity3d Digital-Trainers Blender-SOFA – SOFA. SOFA - Topic Tag: Unity3d Digital-Trainers Blender-SOFA. /unreal; . /feed; ; Unreal – SOFA. SOFA - Topic Tag: Unreal. /unreal-engine; . /feed; ; Unreal Engine – SOFA. SOFA - Topic Tag: Unreal Engine. /urdf; . /feed; ; urdf – SOFA. SOFA - Topic Tag: urdf. /using-sofa; . /feed; ; using sofa – SOFA. SOFA - Topic Tag: using sofa. /using-sofapython3; . /feed; ; using sofapython3 – SOFA. SOFA - Topic Tag: using sofapython3. /v16-08; . /feed; ; v16.08 – SOFA. SOFA - Topic Tag: v16.08. /v18-06; . /feed; ; v18.06 – SOFA. SOFA - Topic Tag: v18.06. /v19-06; . /feed; ; v19.06 – SOFA. SOFA - Topic Tag: v19.06. /v19-12-plugin-linking; . /feed; ; v19.12 plugin linking – SOFA. SOFA - Topic Tag: v19.12 plugin linking. /v20; . /feed; ; v20 – SOFA. SOFA - Topic Tag: v20. /v20-12; . /feed; ; v20.12 – SOFA. SOFA - Topic Tag: v20.12. /v20-12-02; . /feed; ; v20.12.02 – SOFA. SOFA - Topic Tag: v20,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:488902,test,testing,488902,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,OFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163354,log,logging,163354,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"OFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(AngularSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; springColorsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; VecIndex typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html:16897,log,logErrors,16897,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,1,['log'],['logErrors']
Testability,"OFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PointProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~PointProjectiveConstraint()sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >protectedvirtual; ~ProjectiveConstraintSet() overridesofa::core::behavior::ProjectiveConstraintSet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html:17815,log,logErrors,17815,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"Object()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::GridMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::lo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:5095,log,logging,5095,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['log'],['logging']
Testability,"ObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDistances()sofa::component::engine::analyze::HausdorffDistance< DataTypes >protected; Coord typedefsofa::component::engine::analyze::HausdorffDistance< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d12sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d21sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_d12sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_d21sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_maxsofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_points_1sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_points_2sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_updatesofa::component::engine::analyze::HausdorffDistance< DataTypes >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html:3069,log,logging,3069,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html,1,['log'],['logging']
Testability,"ObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countEdge(std::map< PointPair, unsigned int > &edgeCount, PointPair &edge)sofa::component::engine::select::MeshBoundaryROIstatic; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::engine::select::MeshBoundaryROI; d_inputROIsofa::component::engine::select::MeshBoundaryROI; d_messageLogCountsofa::core::objectmodel::Basemutable; d_quadssofa::component::engine::select::MeshBoundaryROI; d_trianglessofa::component::engine::select::MeshBoundaryROI; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i-members.html:3037,log,logging,3037,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i-members.html,1,['log'],['logging']
Testability,"Objectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::TransformPosition< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html:3109,log,logging,3109,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,1,['log'],['logging']
Testability,"OfContacts ; (; ); const. inline . Get the number of contacts attached to the collision model. . ◆ getPrevious(). CollisionModel* sofa::core::CollisionModel::getPrevious ; (; ). inline . Return the previous (coarser / upper / parent level) CollisionModel in the hierarchy. . ◆ getProximity(). SReal sofa::core::CollisionModel::getProximity ; (; ); const. inline . Get distance to the actual (visual) surface. . ◆ getSelfCollision(). bool sofa::core::CollisionModel::getSelfCollision ; (; ); const. inline . Return true if this model process self collision. . ◆ getSize(). Size sofa::core::CollisionModel::getSize ; (; ); const. inline . Get the number of elements. . ◆ GetUserData(). void* sofa::core::CollisionModel::GetUserData ; (; ). inline . Get user data. . ◆ insertInNode(). bool sofa::core::CollisionModel::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ isActive(). virtual bool sofa::core::CollisionModel::isActive ; (; ); const. inlinevirtual . Return true if this CollisionModel should be used for collisions. ; Default to true. . ◆ isContactStiffnessSet(). bool sofa::core::CollisionModel::isContactStiffnessSet ; (; ); const. inline . Get contact stiffness. . ◆ isLeaf(). virtual bool sofa::core::CollisionModel::isLeaf ; (; Index ; ); const. inlinevirtual . Checks if the element(index) is a leaf and a primitive of the collision model. ; Default to true since triangle model, line model, etc. does not have this method implemented and they are themselves (normally) leaves and primitives ; Reimplemented in sofa::component::collision::geometry::CubeCollisionModel. ◆ isMoving(). virtual bool sofa::core::CollisionModel::isMoving ; (; ); const. inlinevirtual . Return true if this CollisionModel is changing position between",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html:34398,test,test,34398,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,1,['test'],['test']
Testability,"Out), BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE2(VolumeMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true))sofa::component::mapping::nonlinear::VolumeMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VolumeMapping()sofa::component::mapping::nonlinear::VolumeMapping< TIn, TOut >protected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html:18372,test,testMechanicalState,18372,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html,1,['test'],['testMechanicalState']
Testability,PI: sofa::gui Namespace Reference; SOFA API: sofa::gui::batch Namespace Reference; SOFA API: sofa::gui::common Namespace Reference; SOFA API: sofa::gui::component Namespace Reference; SOFA API: sofa::gui::component::performer Namespace Reference; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Na,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:205147,log,logging,205147,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"PLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TriangularBendingSprings()sofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor< DataTypes >protected; ~StateAccessor() override=defaultsofa::core::beha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html:18162,log,logErrors,18162,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,1,['log'],['logErrors']
Testability,"PairInteractionConstraint::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) overridesofa::core::behavior::PairInteractionConstraint< TDataTypes >virtual; storeLambda(const ConstraintParams *cParams, Data< VecDeriv > &res1, Data< VecDeriv > &res2, const Data< MatrixDeriv > &j1, const Data< MatrixDeriv > &j2, const sofa::linearalgebra::BaseVector *lambda)sofa::core::behavior::PairInteractionConstraint< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; SubsetIndices typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::core::behavior::BaseConstraint; VecConstCoord typedefsofa::core::behavior::BaseConstraint; VecConstDeriv typedefsofa::core::behavior::BaseConstraint; VecConstraintBlockInfo typedefsofa::core::behavior::BaseConstraint; VecCoord typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::core::behavior::BaseConstraint; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraint() overridesofa::core::behavior::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html:24151,log,logErrors,24151,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,1,['log'],['logErrors']
Testability,"Params *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< true >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeAccFromMapping(const MechanicalParams *, const type::vector< OutDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &)sofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const InCoord &a, const InCoord &b)sofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix)sofa::core::BaseMappingvirtual; d_colorsofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; d_componentStatesofa::core::objectmodel::Base; d_computeDistancesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< true >; d_indexPairssofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_restLengthssofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; d_showObjectScalesofa::component::mapping::nonlinear::Dis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html:8069,log,logging,8069,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,1,['log'],['logging']
Testability,"Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Sphere & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [18/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Sphere & ; e2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [19/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [20/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [21/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [22/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testValidity() [1/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Line & ; l, . const type::Vec3 & ; PQ . ); const. ◆ testValidity() [2/4]. bool sofa::component::collision::detection::int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:37438,test,testIntersection,37438,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"Point & ;  . ). delete . ◆ testIntersection() [16/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Sphere & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [18/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Sphere & ; e2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [19/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [20/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [21/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [22/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testValidity() [1/4]. bool sofa::component::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:37226,test,testIntersection,37226,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"Pos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(SphereLoader, sofa::core::loader::BaseLoader)sofa::component::io::mesh::SphereLoader; sofa::core::loader::BaseLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SphereLoader()sofa::component::io::mesh::SphereLoaderprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:10733,log,logErrors,10733,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,1,['log'],['logErrors']
Testability,Profile. /replies; ; SOFA - LHWlen's Replies. /topics; ; SOFA - LHWlen's Topics. SOFA - LHWlen's Profile. /xutian; . /engagements; ; SOFA - Fishuser's Profile. /replies; ; SOFA - Fishuser's Replies. /topics; ; SOFA - Fishuser's Topics. SOFA - Fishuser's Profile. /yangsen; . /engagements; . /page; . /2; ; SOFA - Sen's Profile. SOFA - Sen's Profile. /replies; ; SOFA - Sen's Replies. /topics; . /page; . /2; ; SOFA - Sen's Topics. SOFA - Sen's Topics. SOFA - Sen's Profile. /yannie; . /engagements; ; SOFA - Yannie's Profile. /replies; ; SOFA - Yannie's Replies. /topics; ; SOFA - Yannie's Topics. SOFA - Yannie's Profile. /yaookyiegmail-com; . /engagements; ; SOFA - wowsofa's Profile. /replies; ; SOFA - wowsofa's Replies. /topics; ; SOFA - wowsofa's Topics. SOFA - wowsofa's Profile. /yashchitalia; . /engagements; ; SOFA - Yash's Profile. /replies; ; SOFA - Yash's Replies. /topics; ; SOFA - Yash's Topics. SOFA - Yash's Profile. /ying; . /engagements; ; SOFA - logos's Profile. /replies; ; SOFA - logos's Replies. /topics; ; SOFA - logos's Topics. SOFA - logos's Profile. /yitian; . /engagements; ; SOFA - yitian's Profile. /replies; ; SOFA - yitian's Replies. /topics; ; SOFA - yitian's Topics. SOFA - yitian's Profile. /yordan-kyosev; . /engagements; ; SOFA - yo's Profile. /replies; ; SOFA - yo's Replies. /topics; ; SOFA - yo's Topics. SOFA - yo's Profile. /younesssss; . /engagements; ; SOFA - younesssss's Profile. /replies; ; SOFA - younesssss's Replies. /topics; ; SOFA - younesssss's Topics. SOFA - younesssss's Profile. /ypszilon; . /engagements; ; SOFA - Vizvary's Profile. /replies; ; SOFA - Vizvary's Replies. /topics; ; SOFA - Vizvary's Topics. SOFA - Vizvary's Profile. /yul131; . /engagements; ; SOFA - yul131's Profile. /replies; ; SOFA - yul131's Replies. /topics; ; SOFA - yul131's Topics. SOFA - yul131's Profile. /yummymushroom; . /engagements; ; SOFA - YummyMushroom's Profile. /replies; ; SOFA - YummyMushroom's Replies. /topics; ; SOFA - YummyMushroom's Topics. SOFA - Yu,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:580894,log,logos,580894,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logos']
Testability,"Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1139,log,logging,1139,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,2,['log'],['logging']
Testability,"Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:1228,test,tests,1228,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,1,['test'],['tests']
Testability,"ProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::Discr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:15707,test,testIntersection,15707,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"ProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshMinProximityIntersection(MinProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html:4517,test,testIntersection,4517,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"ProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; d_useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; d_usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; d_useSphereTrianglesofa::component::collision::detection::intersection::MinProximityIntersection; d_useSurfaceNormalssofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:4504,log,logging,4504,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,1,['log'],['logging']
Testability,"ProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_componentStatesofa::core::objectmodel::Base; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLineLinesofa::component::collision::detection::intersection::NewProximityIntersection; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doIntersectionPointPoint(SReal dist2, const type::Vec3 &p, const type::Vec3 &q, OutputVector *contacts, int id)sofa::component::collision::detection::intersection::NewProximityIntersectioninlinestatic; doUpdateIn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:4498,log,logging,4498,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,1,['log'],['logging']
Testability,"Ptr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; computeAccFromMapping(const MechanicalParams *, const type::vector< DataVecDeriv_t< Out > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix)sofa::core::BaseMappingvirtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; disable() overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_applyRestPositionsofa::core::Multi2Mapping< TIn1, TIn2, TOut >; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_mapConstraintssofa::core::BaseMapping; f_mapForcessofa::core::BaseMapping; f_mapMassessofa::core::BaseMapping; f_mapMatricessofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html:5742,log,logging,5742,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,1,['log'],['logging']
Testability,"Response ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; dxId . ). pure virtual . Project dx to constrained space (dx models an acceleration). Parameters. dxIdoutput vector . Implemented in sofa::core::behavior::ProjectiveConstraintSet< DataTypes >, sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >, sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >, and sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >. ◆ projectVelocity(). virtual void sofa::core::behavior::BaseProjectiveConstraintSet::projectVelocity ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; vId . ). pure virtual . Project v to constrained space (v models a velocity). Parameters. vIdoutput vector . Implemented in sofa::core::behavior::ProjectiveConstraintSet< DataTypes >, sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >, sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >, and sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >. ◆ removeInNode(). bool sofa::core::behavior::BaseProjectiveConstraintSet::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setGroup(). void sofa::core::behavior::BaseProjectiveConstraintSet::setGroup ; (; int ; g). inline . Set the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::behavior::BaseProjectiveConstraintSet::SOFA_ABSTRACT_CLASS ; (; BaseProjectiveConstraintSet ; , . objectmodel::BaseObject ;  . ). sofacorebehaviorBaseProjectiveConstraintSet; Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html:26082,test,test,26082,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html,1,['test'],['test']
Testability,"Result processNodeTopDown (simulation::Node *gnode) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ; void setIndependentOnly (bool b);  If true, process the independent nodes only. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html:1840,test,testTags,1840,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,1,['test'],['testTags']
Testability,"S(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; VecElementStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; VecReal typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; WDataRefVecDeriv typedefsofa::component::solidmechanics::fem::elast",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html:22557,log,logErrors,22557,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,SOFA API: sofa::helper::kdTree< Coord > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:161917,log,logging,161917,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_id< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::system::DynamicLibrary Class Reference; SOFA API: sofa::helper::system::DynamicLibrary::Handle Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::system",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:164326,log,logging,164326,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,SOFA. SOFA - Topic Tag: Heat diffusion. /heat-diffusion-fem-tetrahedra; . /feed; ; heat diffusion fem tetrahedra – SOFA. SOFA - Topic Tag: heat diffusion fem tetrahedra. /help-with-bilateralinteractionconstraint; . /feed; ; Help with BilateralInteractionConstraint – SOFA. SOFA - Topic Tag: Help with BilateralInteractionConstraint. /hexahedral; . /feed; ; hexahedral – SOFA. SOFA - Topic Tag: hexahedral. /hexahedron; . /feed; ; hexahedron – SOFA. SOFA - Topic Tag: hexahedron. /histogram; . /feed; ; histogram – SOFA. SOFA - Topic Tag: histogram. /hmsim-conference; . /feed; ; HMSIM conference – SOFA. SOFA - Topic Tag: HMSIM conference. /how-to-solve-this-problem; . /feed; ; how to solve this problem? – SOFA. SOFA - Topic Tag: how to solve this problem?. /hyperelastic; . /feed; ; hyperelastic – SOFA. SOFA - Topic Tag: hyperelastic. /hyper-elastic-mass-links-method-performance-testing; . /feed; ; Hyper-Elastic Mass Links method; performance testing – SOFA. SOFA - Topic Tag: Hyper-Elastic Mass Links method; performance testing. /hyper-elastic-material; . /feed; ; Hyper-elastic Material – SOFA. SOFA - Topic Tag: Hyper-elastic Material. /i; . /feed; ; I – SOFA. SOFA - Topic Tag: I. /ide-operating-system-development-environment; . /feed; ; IDE; Operating System; Development Environment; – SOFA. SOFA - Topic Tag: IDE; Operating System; Development Environment;. /iga-xfem-cad; . /feed; ; IGA XFEM CAD – SOFA. SOFA - Topic Tag: IGA XFEM CAD. /image; . /feed; ; Image – SOFA. SOFA - Topic Tag: Image. /image-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. SOFA - Topic Tag: import mesh. /incision; . /feed; ; incision – SOFA. SOFA - Topic Tag: incision. /incision2d; . /feed; ; Incision2D – ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:448802,test,testing,448802,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(Constraint, DataTypes), BaseConstraint, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::Constraint< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) overridesofa::core::behavior::Constraint< DataTypes >virtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::core::behavior::BaseConstraint; VecConstCoord typedefsofa::core::behavior::BaseConstraint; VecConstDeriv typedefsofa::core::behavior::BaseConstraint; VecConstraintBlockInfo typedefsofa::core::behavior::BaseConstraint; VecCoord typedefsofa::core::behavior::Constraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::Constraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::core::behavior::BaseConstraint; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraint() overridesofa::core::behavior::BaseConstraintinlineprotected; ~BaseConstraintSet() overridesofa::core::behavior::BaseConstra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html:15064,log,logErrors,15064,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,1,['log'],['logErrors']
Testability,"SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; VecElementStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; WDataRefVecDeriv typedefsofa::component::solidmec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html:26205,log,logErrors,26205,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,"SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StandardTetrahedralFEMForceField()sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testDerivatives()sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; tetrahedronInfosofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; tetrahedronRestInfoVector typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html:19973,log,logErrors,19973,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,"SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(const VecCoord &state, VecDeriv &forces)=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; computeWrench(const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &) override=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activatesofa::component::haptics::ForceFeedback; d_componentStatesofa::core::objectmodel::Base; d_indicesofa::component::haptics::ForceFeedback; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html:2756,log,logging,2756,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,1,['log'],['logging']
Testability,"SS(NewProximityIntersection, BaseProximityIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::Discr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:15407,test,testIntersection,15407,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"SS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FixedTranslationProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; sofa::core::behavior::ProjectiveConstraintSet::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~FixedTranslationProjectiveConstraint()sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >protectedvirtual; ~ProjectiveConstraintSet() overrides",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html:18028,log,logErrors,18028,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"STRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(LinearVelocityProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; x0sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; xPsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:17796,log,logErrors,17796,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"STRACT_CLASS(SOFA_TEMPLATE2(Mapping, TIn, TOut), BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html:18528,log,logErrors,18528,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,1,['log'],['logErrors']
Testability,Scene reset in SOFA Python. /scene-slowing-down-on-interaction-with-two-forcefeedback-devices; ; SOFA - Topic: scene slowing down on interaction with two forcefeedback devices. /scientistengineer-positions-in-ms-of-layered-tissue-structures; . /page; . /3; ; SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. /searching-sofa-nodes-plugins-inside-a-scene; ; SOFA - Topic: [SOLVED] Searching SOFA Nodes plugins inside a scene. /seeing-indices-and-vertices-of-elements-in-run-window; . /feed; ; [SOLVED] Showing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems sti,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:382658,log,logger,382658,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logger']
Testability,Sliding Friction – SOFA. SOFA - Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Flexible Passive Trunk. – SOFA. SOFA - Topic Tag: The Legged Robot with Flexible Pas,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:485654,test,test,485654,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['test']
Testability,"Solver; SOFA_CLASS(EulerExplicitSolver, sofa::core::behavior::OdeSolver)sofa::component::odesolver::forward::EulerExplicitSolver; sofa::core::behavior::OdeSolver::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; solve(const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) overridesofa::component::odesolver::forward::EulerExplicitSolvervirtual; sofa::core::behavior::OdeSolver::solve(const core::ExecParams *params, SReal dt)sofa::core::behavior::OdeSolverinlinevirtual; solveConstraints(sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId acc)sofa::component::odesolver::forward::EulerExplicitSolverprotectedstatic; solveSystem(core::MultiVecDerivId solution, core::MultiVecDerivId rhs) constsofa::component::odesolver::forward::EulerExplicitSolverprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateState(sofa::simulation::common::VectorOperations *vop, sofa::simulation::common::MechanicalOperations *mop, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult, const sofa::core::behavior::MultiVecDeriv &acc, SReal dt) constsofa::component::odesolver::forward::EulerExplicitSolverprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OdeSolver() overridesofa::core::behavior::OdeSolverprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html:12389,log,logErrors,12389,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,1,['log'],['logErrors']
Testability,"SourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; Data< bool > premultipliedAlpha;  is alpha premultiplied ? More...;  ; Data< bool > writeZTransparent;  Write into Z Buffer for Transparent Object. More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFace;  Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) More...;  ; Data< GLfloat > lineWidth;  Line width (set if != 1, only for lines rendering) More...;  ; Data< GLfloat > pointSize;  Point size (set if != 1, only for points rendering) More...;  ; Data< bool > lineSmooth;  Enable smooth line rendering. More...;  ; Data< bool > pointSmooth;  Enable smooth point rendering. More...;  ; DeprecatedAndRemoved isEnabled;  ; Data< sofa::helper::OptionsGroup > primitiveType;  Select types of primitives to send (necessary for some shader types such as geometry or tessellation) More...;  ; Data< sofa::helper::OptionsGroup > blendEquation;  if alpha blending is enabled this specifies how source and destination colors are combined More...;  ; Data< sofa::helper::OptionsGroup > sourceFactor;  if alpha blending is enabled this specifies how the red, green, blue, and alpha source blending factors are computed More...;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html:7873,test,testing,7873,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,1,['test'],['testing']
Testability,"SourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglSceneFrame, VisualModel)sofa::gl::component::rendering3d::OglSceneFrame; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Viewport typedefsofa::gl::component::rendering3d::OglSceneFrame; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html:11560,log,logErrors,11560,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,1,['log'],['logErrors']
Testability,"SourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(Visual3DText, core::visual::VisualModel)sofa::component::visual::Visual3DText; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Visual3DText()sofa::component::visual::Visual3DTextprotected; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html:11525,log,logErrors,11525,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,1,['log'],['logErrors']
Testability,"SourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const core::ExecParams *params, SReal dt)=0sofa::core::behavior::BaseAnimationLooppure virtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html:11368,log,logErrors,11368,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,2,['log'],['logErrors']
Testability,"Sphere &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection) override;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Cube &, collision::geometry::Cube &, OutputVector *, const core::collision::Intersection *currentIntersection) override;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection) override;  ; int computeIntersection (collision::geometry::Line &,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:4789,test,testIntersection,4789,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,Sphere< DataTypes >; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObject,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html:7393,log,logging,7393,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,1,['log'],['logging']
Testability,"Src(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(GenerateSphere, DataTypes), core::DataEngine)sofa::component::engine::generate::GenerateSphere< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON enum valuesofa::component::engine::generate::GenerateSphere< DataTypes >; Tetrahedron typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~GenerateSphere() overridesofa::component::engine::generate::GenerateSphere< DataTypes >inline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html:14503,log,logErrors,14503,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,1,['log'],['logErrors']
Testability,"State()sofa::core::objectmodel::BaseObjectvirtual; testDerivatives()sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >protected; Tetra typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; Tetrahedron typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; TetrahedronHyperelasticityFEMForceField()sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >protected; TetraID typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TrianglesInTetrahedron typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTangentMatrix()sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFie",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html:20536,log,logErrors,20536,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,"State< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; MechanicalState< DataTypes >::SOFA_CLASS(SOFA_TEMPLATE(State, DataTypes), BaseState)sofa::core::State< DataTypes >; SOFA_CLASS2(SOFA_TEMPLATE(MechanicalState, DataTypes), BaseMechanicalState, SOFA_TEMPLATE(State, DataTypes))sofa::core::behavior::MechanicalState< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< DataTypes >protected; storeResetState() overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; swapValues(const sofa::Index idx1, const sofa::Index idx2)sofa::component::statecontainer::MechanicalObject< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; translationsofa::component::statecontainer::MechanicalObject< DataTypes >protected; translation2sofa::component::statecontainer::MechanicalObject< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; vsofa::component::statecontainer::MechanicalObject< DataTypes >; vAlloc(const core::ExecParams *params, core::VecCoordId v, const core::VecIdProperties &properties={}) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; vAlloc(const core::ExecParams *params, core::VecDerivId v, const core::VecIdProperties &properties={}) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; vAllocImpl(core::TVecId< vtype, core::V_WRITE > v, const core::VecIdProperties &properties)sofa::component::statecontainer::MechanicalObject< DataTypes >protected; vAvail(const core::ExecParams *params, core::VecCoordId &v) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; vAvail(const core::ExecParams *params, core::VecDerivId &v) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; vAvailImpl(core::TVecId< vtype, core::V_WRITE > &v, sofa::type::vector< Data< cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html:27508,log,logErrors,27508,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,1,['log'],['logErrors']
Testability,"StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; ConstDeriv typedefsofa::core::behavior::BaseConstraint; ConstraintBlockInfo typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; constraintIdsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; contactssofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; contactsStatussofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< DataTypes >inlinestatic; customTolerancesofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; DataTypes typedefsofa::core::behavior::PairInteractionConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; DataVecDeriv typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; Deriv typedefsofa::component::constraint::lagrangian::model::Unilat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html:4899,log,logging,4899,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,"T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeD2Ssofa::component::topology::mapping::SubsetTopologicalMapping; d_edgeS2Dsofa::component::topology::mapping::SubsetTopologicalMapping; d_handleEdgessofa::component::topology::mapping::SubsetTopologicalMapping; d_handleHexahedrasofa::component::topology::mapping::SubsetTopologicalMapping; d_handleQuadssofa::component::topology::mapping::SubsetTopologicalMapping; d_handleTetrahedrasofa::component::topology::mapping::SubsetTopologicalMapping; d_handleTrianglessofa::component::topology::mapping::SubsetTopologicalMapping; d_hexahedronD2Ssofa::component::topology::mapping::SubsetTopologicalMapping; d_hexahedronS2Dsofa::component::topology::mapping::SubsetTopologicalMapping; d_messageLogCountsofa::core::objectmodel::Basemutable; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html:2513,log,logging,2513,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,1,['log'],['logging']
Testability,"T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeListsofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_flipNormalssofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_focalAxissofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbPointsOnEachCirclesofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_radiussofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_radiusFocalsofa::component::topology::mapping::Edge2QuadTopologicalMapping; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html:2519,log,logging,2519,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html,1,['log'],['logging']
Testability,"T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_flipNormalssofa::component::topology::mapping::Hexa2QuadTopologicalMappingprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping-members.html:2519,log,logging,2519,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping-members.html,1,['log'],['logging']
Testability,"T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointMappedFromEdgesofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMappingprotected; d_pointMappedFromPointsofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMappingprotected; d_pointSourcesofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMappingprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html:2539,log,logging,2539,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html,1,['log'],['logging']
Testability,"T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_swappingsofa::component::topology::mapping::Hexa2TetraTopologicalMapping; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html:2521,log,logging,2521,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html,1,['log'],['logging']
Testability,"T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html:2537,log,logging,2537,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html,5,['log'],['logging']
Testability,"T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; disable() overridesofa::core::Mapping< TIn, TOut >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_applyRestPositionsofa::core::Mapping< TIn, TOut >; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_mapConstraintssofa::core::BaseMapping; f_mapForcessofa::core::BaseMapping; f_mapMassessofa::core::BaseMapping; f_mapMatricessofa::core::BaseMapping; f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html:4253,log,logging,4253,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,1,['log'],['logging']
Testability,"TEMPLATE2(MeshMatrixMass, DataTypes, GeometricalTypes), SOFA_TEMPLATE(core::behavior::Mass, DataTypes))sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; sofa::core::behavior::Mass::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass)sofa::core::behavior::Mass< DataTypes >; ForceField< DataTypes >::SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TMassType typedefsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseMass() override=defaultsofa::core::behavior::BaseMassprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~Mass() overridesofa::core::behavior::Mass< DataTypes >protected; ~MeshMatrixMass() overridesofa::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html:25057,log,logErrors,25057,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,1,['log'],['logErrors']
Testability,"TION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateVisualContextVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; startingNodesofa::simulation::UpdateContextVisitorprotected; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateContextVisitor(const core::ExecParams *params)sofa::simulation::UpdateContextVisitorinline; UpdateVisualContextVisitor(const sofa::core::visual::VisualParams *vparams)sofa::simulation::UpdateVisualContextVisitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor-members.html:3957,test,testTags,3957,api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor-members.html,2,['test'],['testTags']
Testability,"TOut >; getGlobalToLocalCoords(OutCoord &result, const InCoord &xFrom, const OutCoord &xTo)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ() overridesofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; sofa::core::Mapping::getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJs() overridesofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; getK() overridesofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; getK()sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; getK()sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getMechTo() overridesofa::core::Mapping< TIn, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoints()sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >protected; getRigidIndex(unsigned int pointIndex) constsofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >protected; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html:10089,log,logging,10089,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,1,['log'],['logging']
Testability,"Tag t)sofa::core::objectmodel::Base; reset() overridesofa::component::playback::ReadStatevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTime(double time)sofa::component::playback::ReadState; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ReadState, core::objectmodel::BaseObject)sofa::component::playback::ReadState; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ReadState() overridesofa::component::playback::ReadStateprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html:10787,log,logErrors,10787,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,1,['log'],['logErrors']
Testability,"ThreadManager >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSystem()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *params, linearalgebra::BaseVector *f) overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createDefaultLinearSystem()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; createInvertData()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protectedvirtual; createMatrix()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; createPersistentVector()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; currentBFactorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; currentKFactorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; currentMFactorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html:3751,log,logging,3751,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,1,['log'],['logging']
Testability,"Time. protected . Stores starting time of the simulation. . Constructor details. ◆ BaseAnimationLoop(). sofa::core::behavior::BaseAnimationLoop::BaseAnimationLoop ; (; ). protected . ◆ ~BaseAnimationLoop(). sofa::core::behavior::BaseAnimationLoop::~BaseAnimationLoop ; (; ). overrideprotected . Function details. ◆ getResetTime(). SReal sofa::core::behavior::BaseAnimationLoop::getResetTime ; (; ); const. Returns starting time of the simulation. . ◆ init(). void sofa::core::behavior::BaseAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::simulation::DefaultAnimationLoop. ◆ insertInNode(). bool sofa::core::behavior::BaseAnimationLoop::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::behavior::BaseAnimationLoop::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::behavior::BaseAnimationLoop::SOFA_ABSTRACT_CLASS ; (; BaseAnimationLoop ; , . objectmodel::BaseObject ;  . ). ◆ step(). virtual void sofa::core::behavior::BaseAnimationLoop::step ; (; const core::ExecParams * ; params, . SReal ; dt . ). pure virtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implemented in sofa::simulation::DefaultAnimationLoop, sofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html:15304,test,test,15304,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,1,['test'],['test']
Testability,"TimesVecDeriv(unsigned int, ConstVecId)sofa::core::behavior::BaseMechanicalStateinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getCoordDimension() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDerivDimension() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatrixBlockSize() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getMatrixSize() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPX(Index) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getPY(Index) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getPZ(Index) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getScale() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getSize() const =0sofa::core::BaseStatepure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html:7647,log,logging,7647,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,1,['log'],['logging']
Testability,Topic: Linking error with Xitact Plugin. /6; ; SOFA - Topic: Linking error with Xitact Plugin. /7; ; SOFA - Topic: Linking error with Xitact Plugin. SOFA - Topic: Linking error with Xitact Plugin. /linking-geomagicdevice-position-with-mechanicalobject3d-position-in-cpp; ; SOFA - Topic: [SOLVED] Linking GeomagicDevice.position with MechanicalObject3d.position in cpp. /linking-issues-with-plugin-when-loading-it; ; SOFA - Topic: Linking issues with plugin when loading it. /link-problems; ; SOFA - Topic: [SOLVED] [Solved] Link problems. /link-sofa-as-an-external-dependency-in-a-c-project; ; SOFA - Topic: Link SOFA as an external dependency in a c++ project. /list-of-all-available-fields-for-vtkexporter; ; SOFA - Topic: List of all available fields for VTKExporter?. /liver-fem-implementation; ; SOFA - Topic: Liver FEM implementation. /lmconstraints-with-flexible-simulation; ; SOFA - Topic: [SOLVED] LMConstraints with Flexible simulation. /load-a-python-scene-from-a-c-unit-test; ; SOFA - Topic: [SOLVED] Load a Python scene from a C++ unit test. /loading-off-files; ; SOFA - Topic: [SOLVED] Loading OFF files. /loading-sofas-dlls-for-python3-8-on-windows; ; SOFA - Topic: [SOLVED] Loading SOFA’s dlls for Python3.8+ on Windows. /load-model-built-by-solidworks; ; SOFA - Topic: load model built by solidworks. /load-msh-and-vtk-file-in-xml-and-read-with-sofa; . /feed; ; [SOLVED] Load msh and vtk file in XML and read with sofa – SOFA. SOFA - Topic: [SOLVED] Load msh and vtk file in XML and read with sofa. /local-pivot-points-for-obj-files; ; SOFA - Topic: local pivot points for .obj files. /looking-for-anatomy-transfer-code; ; SOFA - Topic: [SOLVED] Looking for Anatomy Transfer code. /looking-for-an-example-on-cutting-a-3d-volumetric-mesh; ; SOFA - Topic: Looking for an example on cutting a 3D volumetric mesh. /looking-for-sofa-xml-reference; ; SOFA - Topic: Looking for SOFA XML Reference. /lots-of-glew-errors-while-building-sofa; ; SOFA - Topic: [SOLVED] Lots of glew errors while,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:342076,test,test,342076,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['test'],['test']
Testability,"TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(SubsetTopologicalMapping, sofa::core::topology::TopologicalMapping)sofa::component::topology::mapping::SubsetTopologicalMapping; sofa::core::topology::TopologicalMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; SubsetTopologicalMapping()sofa::component::topology::mapping::SubsetTopologicalMappingprotected; tetrahedronD2Ssofa::component::topology::mapping::SubsetTopologicalMapping; tetrahedronS2Dsofa::component::topology::mapping::SubsetTopologicalMapping; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triangleD2Ssofa::component::topology::mapping::SubsetTopologicalMapping; triangleS2Dsofa::component::topology::mapping::SubsetTopologicalMapping; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown() overridesofa::component::topology::mapping::SubsetTopologicalMappingvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~SubsetTopologicalMapping() overridesofa::component::topology::mapping::SubsetTopologicalMappingprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html:15187,log,logErrors,15187,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,1,['log'],['logErrors']
Testability,"Topology()sofa::component::topology::utility::TopologyChecker; checkTetrahedronToTriangleCrossContainer()sofa::component::topology::utility::TopologyChecker; checkTetrahedronToVertexCrossContainer()sofa::component::topology::utility::TopologyChecker; checkTopology()sofa::component::topology::utility::TopologyChecker; checkTriangleContainer()sofa::component::topology::utility::TopologyChecker; checkTriangleToEdgeCrossContainer()sofa::component::topology::utility::TopologyChecker; checkTriangleTopology()sofa::component::topology::utility::TopologyChecker; checkTriangleToVertexCrossContainer()sofa::component::topology::utility::TopologyChecker; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_eachStepsofa::component::topology::utility::TopologyChecker; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::topology::utility::TopologyCheckervirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html:3962,log,logging,3962,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html:3510,log,logging,3510,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,2,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; buildComplianceMatrix(const sofa::core::ConstraintParams *cparams, linearalgebra::BaseMatrix *result, SReal fact)sofa::core::behavior::LinearSolverinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::LinearSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html:2871,log,logging,2871,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,2,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createInputDataVector(unsigned int nb, type::vector< Data< T > * > &vf, std::string name, std::string help)sofa::component::engine::generate::MergeMeshes< DataTypes >inlineprotected; createInputMeshesData(int nb=-1)sofa::component::engine::generate::MergeMeshes< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; deleteInputDataVector(type::vector< Data< T > * > &vf)sofa::component::engine::generate::MergeMeshes< DataTypes >inlineprotected; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html:2929,log,logging,2929,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createInputs(int nb=-1)sofa::component::engine::transform::MathOp< VecT >protected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodepr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html:2911,log,logging,2911,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; curvaturesofa::component::engine::generate::Spiral< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html:2919,log,logging,2919,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_connectLabelssofa::component::engine::select::SelectConnectedLabelsROI< _T >; d_indicessofa::component::engine::select::SelectConnectedLabelsROI< _T >; d_labelssofa::component::engine::select::SelectConnectedLabelsROI< _T >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbLabelssofa::component::engine::select::SelectConnectedLabelsROI< _T >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodepr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html:2937,log,logging,2937,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html:3048,log,logging,3048,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,2,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_rotationsofa::component::engine::transform::RotateTransformMatrixEngineprotected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine-members.html:3044,log,logging,3044,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_scalesofa::component::engine::transform::ScaleTransformMatrixEngineprotected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine-members.html:3042,log,logging,3042,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_translationsofa::component::engine::transform::TranslateTransformMatrixEngineprotected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine-members.html:3050,log,logging,3050,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::engine::select::SelectLabelROI< _T >; d_labelssofa::component::engine::select::SelectLabelROI< _T >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_selectLabelssofa::component::engine::select::SelectLabelROI< _T >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html:2917,log,logging,2917,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inputsofa::component::engine::analyze::SumEngine< TDataType >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outputsofa::component::engine::analyze::SumEngine< TDataType >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DataType typedefsofa::component::engine::analyze::SumEngine< TDataType >; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html:2923,log,logging,2923,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inputsofa::component::engine::generate::NormEngine< TDataType >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normTypesofa::component::engine::generate::NormEngine< TDataType >protected; d_outputsofa::component::engine::generate::NormEngine< TDataType >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DataType typedefsofa::component::engine::generate::NormEngine< TDataType >; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine-members.html:2927,log,logging,2927,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inputsofa::component::engine::transform::DifferenceEngine< TDataType >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outputsofa::component::engine::transform::DifferenceEngine< TDataType >protected; d_substractorsofa::component::engine::transform::DifferenceEngine< TDataType >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DataType typedefsofa::component::engine::transform::DifferenceEngine< TDataType >; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; DifferenceEngine()s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine-members.html:2941,log,logging,2941,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine-members.html,1,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html:3286,log,logging,3286,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,12,['log'],['logging']
Testability,"Type typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbROIssofa::component::engine::select::MergeROIs; d_outputIndicessofa::component::engine::select::MergeROIs; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html:2895,log,logging,2895,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html,1,['log'],['logging']
Testability,"Type::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing the number of call to the DataEngine::update() function WarningDO NOT test the values computed by the engine To do so, you can inherit this class and add a test function that takes inputs and outputs to test . sofaDataEngine_test; Gener",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1711,test,tested,1711,api/master/sofa/html/structsofa_1_1_data_engine__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html,2,['test'],['tested']
Testability,"Types >; SOFA_CLASS(SOFA_TEMPLATE(OscillatingTorsionPressureForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triangleListsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; trianglePressureMapsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; vecFromCentersofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >protected; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~OscillatingTorsionPressureForceField()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html:19693,log,logErrors,19693,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,1,['log'],['logErrors']
Testability,"Types >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool onlyVisible=false) overridesofa::component::mechanicalload::PlaneForceField< DataTypes >virtual; Coord typedefsofa::component::mechanicalload::PlaneForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::mechanicalload::PlaneForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_bilateralsofa::component::mechanicalload::PlaneForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_dampingsofa::component::mechanicalload::PlaneForceField< DataTypes >; d_drawColorsofa::component::mechanicalload::PlaneForceField< DataTypes >; d_drawIsEnabledsofa::component::mechanicalload::PlaneForceField< DataTypes >; d_drawSizesofa::component::mechanicalload::PlaneForceField< DataTypes >; d_localRangesofa::component::mechanicalload::PlaneForceField< DataTypes >; d_maxForcesofa::component::mechanicalload::PlaneForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_planeDsofa::component::mechanicalload::PlaneForceField< DataTypes >; d_planeNormalsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html:4986,log,logging,4986,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html,1,['log'],['logging']
Testability,"Up(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *gnode) overridesofa::component::odesolver::testing::GetAssembledSizeVisitorinlinevirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setIndependentOnly(bool b)sofa::component::odesolver::testing::GetAssembledSizeVisitorinline; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; velocitySize() constsofa::component::odesolver::testing::GetAssembledSizeVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; vsizesofa::component::odesolver::testing::GetAssembledSizeVisitorprotected; xsizesofa::component::odesolver::testing::GetAssembledSizeVisitorprotected; ~GetAssembledSizeVisitor() overridesofa::component::odesolver::testing::GetAssembledSizeVisitorinline; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor-members.html:4192,test,testing,4192,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor-members.html,6,['test'],"['testTags', 'testing']"
Testability,"VecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const sofa::core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::collision",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html:2768,log,logging,2768,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,1,['log'],['logging']
Testability,"Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetAssembledSizeVisitor::independentOnly { false }. protected . ◆ vsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::vsize { 0 }. protected . ◆ xsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::xsize { 0 }. protected . Constructor details. ◆ GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::GetAssembledSizeVisitor ; (; const sofa::core::ExecParams * ; params = sofa::core::mechanicalparams::castToExecParams(core::mechanicalparams::defaultInstance())). inline . ◆ ~GetAssembledSizeVisitor(). sofa::component::odesolver::testing::GetAssembledSizeVisitor::~GetAssembledSizeVisitor ; (; ). inlineoverride . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetAssembledSizeVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ positionSize(). unsigned sofa::component::odesolver::testing::GetAssembledSizeVisitor::positionSize ; (; ); const. inline . ◆ processNodeTopDown(). Result sofa::component::odesolver::testing::GetAssembledSizeVisitor::processNodeTopDown ; (; simulation::Node * ; ). inlineoverridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Visitor. ◆ setIndependentOnly(). void sofa::component::odesolver::testing::GetAssembledSizeVisitor::setIndependentOnly ; (; bool ; b). inline . ◆ velocitySize(). unsigned sofa::component::odesolver::testing::GetAssembledSizeVisitor::velocitySize ; (; ); const. inline . sofacomponentodesolvertestingGetAssembledSizeVisitor; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html:6187,test,testing,6187,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,4,['test'],['testing']
Testability,"VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the ConstraintSolver. More...;  ; virtual void bwdProjectiveConstraintSet (simulation::Node *, sofa::core::behavior::BaseProjectiveConstraintSet *);  Process all the BaseProjectiveConstraintSet. More...;  ; virtual void bwdConstraintSet (simulation::Node *, sofa::core::behavior::BaseConstraintSet *);  Process all the BaseConstraintSet. More...;  ; virtual void bwdProjectiveConstraintSet (VisitorContext *ctx, sofa::core::behavior::BaseProjectiveConstraintSet *c);  Process all the BaseProjectiveConstraintSet. More...;  ; virtual void bwdConstraintSet (VisitorContext *ctx, sofa::core::behavior::BaseConstraintSet *c);  Process all the BaseConstraintSet. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_matrix_deriv.html:9127,test,testTags,9127,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_matrix_deriv.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_matrix_deriv.html,2,['test'],['testTags']
Testability,VisualTransformvirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html:5859,log,logging,5859,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,1,['log'],['logging']
Testability,"[legend]. Public Member Functions;  MeshDiscreteIntersection (DiscreteIntersection *intersection, bool addSelf=true);  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Triangle &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &e1, collision::geometry::Line &e2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &e1, collision::geometry::Line &e2, OutputVector *contacts)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Construc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_discrete_intersection.html:617,test,testIntersection,617,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_discrete_intersection.html,4,['test'],['testIntersection']
Testability,"_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(AffineMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; VecCoord typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; x0sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; xfsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; ~AffineMovementProjectiveConstraint()sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataType",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html:19510,log,logErrors,19510,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(LinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; ProjectiveConstraintSet< TDataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes))sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; x0sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~LinearMovementProjectiveConstraint() overridesofa::component::constraint::projective::Linea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html:19633,log,logErrors,19633,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,1,['log'],['logErrors']
Testability,"_CLASS(SOFA_TEMPLATE2(DistanceMultiMapping, TIn, TOut), SOFA_TEMPLATE2(core::MultiMapping, TIn, TOut))sofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; sofa::core::MultiMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelssofa::core::MultiMapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForce) overridesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; vecConstInVecCoord typedefsofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >; VecData typedefsofa::core::objectmodel::Base; VecFromModels typedefsofa::core::MultiMapping< TIn, TOut >protected; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecToModels typedefsofa::core::MultiMapping< TIn, TOut >protected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DistanceMultiMapping() overridesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >protected; ~MultiMapping() overridesofa::core::MultiMapping< TIn, TOut >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html:23964,log,logErrors,23964,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,1,['log'],['logErrors']
Testability,"_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector2Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector2Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector2Variable() overridesofa::gl::component::shader::OglIntVector2Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElemen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:13833,log,logErrors,13833,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,2,['log'],['logErrors']
Testability,"_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector3Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector3Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector3Variable() overridesofa::gl::component::shader::OglIntVector3Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElemen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html:13833,log,logErrors,13833,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector3_variable-members.html,2,['log'],['logErrors']
Testability,"_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVector4Variable, OglIntVectorVariable)sofa::gl::component::shader::OglIntVector4Variable; sofa::gl::component::shader::OglIntVectorVariable::SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVector4Variable() overridesofa::gl::component::shader::OglIntVector4Variableinline; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElemen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html:13833,log,logErrors,13833,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector4_variable-members.html,2,['log'],['logErrors']
Testability,"_DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _DataTypes::Real >inline; ~BaseTest() overridesofa::testing::BaseTest.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2802,test,testedRotationsofa,2802,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,14,['test'],"['testedRotationsofa', 'testedTranslationsofa', 'testing']"
Testability,"_TEMPLATE(QuadBendingFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; Stiffness typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; StrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; vertexInfosofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html:20927,log,logErrors,20927,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,"_VARIABLE enum valuesofa::core::visual::ShaderElement; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; ShaderElement()sofa::core::visual::ShaderElementinlineprotected; ShaderElementType enum namesofa::core::visual::ShaderElement; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html:10488,log,logErrors,10488,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element-members.html,1,['log'],['logErrors']
Testability,"_filelistener. protected . ◆ m_hProgramObject. GLhandleARB sofa::gl::GLSLShader::m_hProgramObject. protected . This handle stores our program information which encompasses our shader. . ◆ m_hShaderContents. std::map<GLint, ShaderContents> sofa::gl::GLSLShader::m_hShaderContents. protected . ◆ m_hShaders. std::map<GLint, GLhandleARB> sofa::gl::GLSLShader::m_hShaders. protected . Constructor details. ◆ GLSLShader(). sofa::gl::GLSLShader::GLSLShader ; (; ). ◆ ~GLSLShader(). sofa::gl::GLSLShader::~GLSLShader ; (; ). Function details. ◆ AddDefineMacro(). void sofa::gl::GLSLShader::AddDefineMacro ; (; const std::string & ; name, . const std::string & ; value . ). ◆ AddHeader(). void sofa::gl::GLSLShader::AddHeader ; (; const std::string & ; header). This builds a header before any shader contents. . ◆ CompileShader(). bool sofa::gl::GLSLShader::CompileShader ; (; GLint ; target, . const ShaderContents & ; shaderContent, . const std::string & ; header . ). protected . This function compiles a shader and check the log. . ◆ forceReloadShaderFromFile(). void sofa::gl::GLSLShader::forceReloadShaderFromFile ; (; const std::string & ; filename). ◆ GetActiveShaderProgram(). GLhandleARB sofa::gl::GLSLShader::GetActiveShaderProgram ; (; ). static . ◆ GetAttributeVariable(). GLint sofa::gl::GLSLShader::GetAttributeVariable ; (; std::string ; strVariable). This returns an ID for an attribute variable in our shader. . ◆ GetFragmentShaderFileName(). std::string sofa::gl::GLSLShader::GetFragmentShaderFileName ; (; ); const. inline . ◆ GetFragmentShaderID(). GLhandleARB sofa::gl::GLSLShader::GetFragmentShaderID ; (; ); const. inline . ◆ GetHeader(). std::string sofa::gl::GLSLShader::GetHeader ; (; ); const. ◆ GetProgram(). GLhandleARB sofa::gl::GLSLShader::GetProgram ; (; ); const. inline . ◆ GetShaderFileName(). std::string sofa::gl::GLSLShader::GetShaderFileName ; (; GLint ; type); const. ◆ GetShaderID(). GLhandleARB sofa::gl::GLSLShader::GetShaderID ; (; GLint ; type); const. ◆ GetShad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:6256,log,log,6256,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,2,['log'],['log']
Testability,"_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:9567,test,tests,9567,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,2,['test'],['tests']
Testability,"_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKReader()sofa::component::io::mesh::basevtkreader::BaseVTKReader; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html:2230,log,logging,2230,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,3,['log'],['logging']
Testability,"a temporary matrix, it will be automatically deleted by the OwnershipSPtr (with ownership). It the conversion did not create a temporary data, and points to an existing matrix, the OwnershipSPtr does not take the ownership and won't delete anything. @TODO move this somewhere else? AuthorMatthieu Nesme . ◆ createCylinderTractionScene(). template<typename DataTypes > . CylinderTractionStruct<DataTypes> sofa::createCylinderTractionScene ; (; int ; resolutionCircumferential, . int ; resolutionRadial, . int ; resolutionHeight, . int ; maxIter . ). ◆ createRegularGridScene(). template<class DataTypes > . PatchTestStruct<DataTypes> sofa::createRegularGridScene ; (; simulation::Node::SPtr ; root, . typename DataTypes::Coord ; startPoint, . typename DataTypes::Coord ; endPoint, . int ; numX, . int ; numY, . int ; numZ, . sofa::type::Vec< 6, SReal > ; entireBoxRoi, . sofa::type::Vec< 6, SReal > ; inclusiveBox, . sofa::type::Vec< 6, SReal > ; includedBox . ). Create a scene with a regular grid and an affine constraint for patch test. . ◆ initSofaConfig(). SOFA_EXPORT_DYNAMIC_LIBRARY void sofa::initSofaConfig ; (; ). ◆ TEST_F() [1/5]. sofa::TEST_F ; (; AdvancedTimerTest ; , . End ;  . ). ◆ TEST_F() [2/5]. sofa::TEST_F ; (; AdvancedTimerTest ; , . IsEnabled ;  . ). ◆ TEST_F() [3/5]. sofa::TEST_F ; (; AdvancedTimerTest ; , . SetOutputType ;  . ). ◆ TEST_F() [4/5]. sofa::TEST_F ; (; DefaultAnimationLoop_test ; , . testOneStep ;  . ). ◆ TEST_F() [5/5]. sofa::TEST_F ; (; TemplateAliasTest ; , . Register ;  . ). ◆ TYPED_TEST() [1/4]. sofa::TYPED_TEST ; (; AffinePatch_sofa_test ; , . patchTest2D ;  . ). ◆ TYPED_TEST() [2/4]. sofa::TYPED_TEST ; (; AffinePatch_sofa_test ; , . patchTest3D ;  . ). ◆ TYPED_TEST() [3/4]. sofa::TYPED_TEST ; (; LinearElasticity_test ; , . testTractionCorotational ;  . ). ◆ TYPED_TEST() [4/4]. sofa::TYPED_TEST ; (; LinearElasticity_test ; , . testTractionTensorMass ;  . ). ◆ TYPED_TEST_SUITE() [1/2]. sofa::TYPED_TEST_SUITE ; (; AffinePatch_sofa_test ; , . Data",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html:7224,test,test,7224,api/master/sofa/html/namespacesofa.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html,2,['test'],['test']
Testability,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5571,test,testing,5571,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,17,"['Test', 'test']","['Testing', 'testing']"
Testability,"a::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 2, float)))sofa::gl::component::shader::OglFloat2Attribute; OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, float >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >protected; ~OglFloat2Attribute()sofa::gl::component::shader::OglFloat2Attributeinlinevirtual; ~OglShaderElement(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:15683,log,logErrors,15683,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['log'],['logErrors']
Testability,"a::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 3, float)))sofa::gl::component::shader::OglFloat3Attribute; OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, float >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >protected; ~OglFloat3Attribute()sofa::gl::component::shader::OglFloat3Attributeinlinevirtual; ~OglShaderElement(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:15683,log,logErrors,15683,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['log'],['logErrors']
Testability,"a::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_FLOAT, SOFA_TEMPLATE2(sofa::type::Vec, 4, float)))sofa::gl::component::shader::OglFloat4Attribute; OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, float >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >protected; ~OglFloat4Attribute()sofa::gl::component::shader::OglFloat4Attributeinlinevirtual; ~OglShaderElement(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:15683,log,logErrors,15683,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['log'],['logErrors']
Testability,"a::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ printDOFWithElapsedTime(). virtual unsigned sofa::core::behavior::BaseMechanicalState::printDOFWithElapsedTime ; (; ConstVecId ; , . unsigned ; = 0, . unsigned ; = 0, . std::ostream & ; = std::cerr . ). inlinevirtual . Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ readVec(). virtual void sofa::core::behavior::BaseMechanicalState::readVec ; (; VecId ; v, . std::istream & ; in . ). pure virtual . Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ removeInNode(). bool sofa::core::behavior::BaseMechanicalState::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::BaseState. ◆ resetAcc(). virtual void sofa::core::behavior::BaseMechanicalState::resetAcc ; (; const ExecParams * ; params, . VecDerivId ; a = VecDerivId::dx() . ). inlinevirtual . Set Acc =0. ; Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ resetConstraint(). virtual void sofa::core::behavior::BaseMechanicalState::resetConstraint ; (; const ConstraintParams * ; params). pure virtual . Reset the constraint matrix. ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ resetForce(). virtual void sofa::core::behavior::BaseMechanicalState::resetForce ; (; const ExecParams * ; params, . VecDerivId ; f = VecDerivId::force() . ). inlinevirtual . Set F = 0. ; Reimplemented in sofa::component::statecontainer::Me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:38779,test,test,38779,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['test'],['test']
Testability,"a::core::behavior::BaseConstraint; sofa::core::behavior::BaseConstraintSet::SOFA_ABSTRACT_CLASS(BaseConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_ABSTRACT_CLASS2(BaseInteractionConstraint, BaseConstraint, StateAccessor)sofa::core::behavior::BaseInteractionConstraint; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda)=0sofa::core::behavior::BaseConstraintpure virtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::core::behavior::BaseConstraint; VecConstCoord typedefsofa::core::behavior::BaseConstraint; VecConstDeriv typedefsofa::core::behavior::BaseConstraint; VecConstraintBlockInfo typedefsofa::core::behavior::BaseConstraint; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::core::behavior::BaseConstraint; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraint() overridesofa::core::behavior::BaseConstraintinlineprotected; ~BaseConstraintSet() overridesofa::core::behavior::BaseConstraintSetprotected; ~BaseInteractionConstraint() overridesofa::core::behavior::BaseInteractionConstraintinlineprotected; ~BaseObj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html:13114,log,logErrors,13114,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,1,['log'],['logErrors']
Testability,"a::core::behavior::BaseConstraintCorrectionpure virtual; getComplianceWithConstraintMerge(linearalgebra::BaseMatrix *, std::vector< int > &)sofa::core::behavior::BaseConstraintCorrectionvirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMState() constsofa::core::behavior::ConstraintCorrection< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html:8030,log,logging,8030,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,1,['log'],['logging']
Testability,"a::core::behavior::BaseConstraintCorrectionpure virtual; getComplianceWithConstraintMerge(linearalgebra::BaseMatrix *, std::vector< int > &)sofa::core::behavior::BaseConstraintCorrectionvirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasConstraintNumber(int)sofa::core::behavior::BaseConstraintCorrectionvirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html:6387,log,logging,6387,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,1,['log'],['logging']
Testability,"a::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(DiagonalVelocityDampingForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; VecIndex typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::beh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html:15782,log,logErrors,15782,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html,1,['log'],['logErrors']
Testability,"a::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::behavior::BaseMechanicalStateinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addFromBaseVectorDifferentSize(VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; addFromBaseVectorSameSize(VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; addFromBuffer(VecId dst, const SReal *src, unsigned n) overridesofa::core::behavior::MechanicalState< TDataTypes >; sofa::core::behavior::BaseMechanicalState::addFromBuffer(VecId dst, const SReal *src, unsigned int n)=0sofa::core::behavior::BaseMechanicalStatepure virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToBaseVector(linearalgebra::BaseVector *dest, ConstVecId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; sofa::addToTotalForces(core::ConstVecDerivId forceId)sofa::core::BaseStatevirtual; sofa::core::State::addToTotalForces(core::ConstVecDerivId forceId) overridesofa::core::State< TDataTypes >virtual; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; applyRotatio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html:1591,log,logging,1591,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::topology::mapping::Quad2TriangleTopologicalMappingvirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind)sofa::core::topology::TopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_quad2_triangle_topological_mapping-members.html:5542,log,logging,5542,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_quad2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_quad2_triangle_topological_mapping-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::topology::mapping::Triangle2EdgeTopologicalMappingvirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind)sofa::core::topology::TopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_triangle2_edge_topological_mapping-members.html:5542,log,logging,5542,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_triangle2_edge_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_triangle2_edge_topological_mapping-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ViewerSetting, ConfigurationSetting)sofa::component::setting::ViewerSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; ViewerSetting()sofa::component::setting::ViewerSettingprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html:10462,log,logErrors,10462,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,1,['log'],['logErrors']
Testability,"a::core::objectmodel::Base; setMouseAttached(bool b)sofa::gui::component::performer::BaseMouseInteractorinline; setMouseRayModel(MouseCollisionModel *model)sofa::gui::component::performer::BaseMouseInteractorinline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMouseInteractor, core::BehaviorModel)sofa::gui::component::performer::BaseMouseInteractor; sofa::core::BehaviorModel::SOFA_ABSTRACT_CLASS(BehaviorModel, objectmodel::BaseObject)sofa::core::BehaviorModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updatePosition(SReal dt) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecPerformer typedefsofa::gui::component::performer::BaseMouseInteractor; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BehaviorModel() overridesofa::core::BehaviorModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:11643,log,logErrors,11643,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,2,['log'],['logErrors']
Testability,"a::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getElementRotation(Transformation &R, Index elementIdx)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >inline; getElementStiffnessMatrix(Real *stiffness, Index nodeIdx)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoissonRatioInElement(sofa::Size elementId) constsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >inlinevirtual; sofa::component::solidmechanics::fem::elast",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html:16332,log,logging,16332,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(BaseMatrixProjectionMethod, TMatrix), core::behavior::StateAccessor)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(SOFA_TEMPLATE(MatrixProjectionMethod, TMatrix), SOFA_TEMPLATE(BaseMatrixProjectionMethod, TMatrix))sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; sofa::component::linearsystem::BaseMatrixProjectionMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMatrixProjectionMethod() overridesofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~MatrixProjectionMethod() overridesofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html:13453,log,logErrors,13453,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,1,['log'],['logErrors']
Testability,"a::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTotalMass()sofa::component::mass::UniformMass< DataTypes >virtual; checkVertexMass()sofa::component::mass::UniformMass< DataTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; constructor_message()sofa::component::mass::UniformMass< DataTypes >protected; constructor_message()sofa::component::mass::UniformMass< DataTypes >protected; Coord typedefsofa::component::mass::UniformMass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMappingInertiasofa::component::mass::UniformMass< DataTypes >; d_filenameMasssofa::component::mass::UniformMass< DataTypes >; d_indicessofa::component::mass::UniformMass< DataTypes >; d_localRangesofa::component::mass::UniformMass< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_preserveTotalMasssofa::component::mass::UniformMass< DataTypes >; d_showAxisSizesofa::component::mass::UniformMass< DataTypes >; d_showCenterOfGravitysofa::component::mass::UniformMass< DataTypes >; d_showInitialCenterOfGravitysofa::component::mass::UniformMass< DataTypes >; d_showX0sofa::component::mass::UniformMass< DataTypes >; d_totalMasssofa::component::mass::UniformMass< DataTypes >; d_vertexMasssofa::component::mass::UniformMass< DataTypes >; DataSetIndex typed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html:6947,log,logging,6947,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::BaseObjectprotected; checkInputData()sofa::component::engine::select::MeshROI< DataTypes >protected; checkSameOrder(const CPos &A, const CPos &B, const CPos &pt, const CPos &norm) constsofa::component::engine::select::MeshROI< DataTypes >protected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) finalsofa::component::engine::select::BaseROI< DataTypes >virtual; computeBoundingBox()sofa::component::engine::select::MeshROI< DataTypes >protected; Coord typedefsofa::component::engine::select::BaseROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::BaseROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_boxsofa::component::engine::select::MeshROI< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeEdgessofa::component::engine::select::BaseROI< DataTypes >; d_computeHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeQuadssofa::component::engine::select::BaseROI< DataTypes >; d_computeTemplateTrianglessofa::component::engine::select::MeshROI< DataTypes >; d_computeTetrahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeTrianglessofa::component::engine::select::BaseROI< DataTypes >; d_doUpdatesofa::component::engine::select::BaseROI< DataTypes >; d_drawBoxsofa::component::engine::select::MeshROI< DataTypes >; d_drawEdgessofa::component::engine::select::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html:3358,log,logging,3358,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html:2406,log,logging,2406,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) consts",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html:2820,log,logging,2820,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_defaultRadiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_radiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; d_showImpostorssofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; DataTypes typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; defaultRadiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:3687,log,logging,3687,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoissonRatioInElement(sofa::Size elementId) constsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >inlinevirtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::getPotentialEner",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html:11853,log,logging,11853,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::ConicalForceField< DataTypes >inlinevirtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html:8400,log,logging,8400,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getRotationAngle() constsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html:9799,log,logging,9799,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::SphereForceField< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html:8775,log,logging,8775,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::SurfacePressureForceField< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html:11441,log,logging,11441,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html:10693,log,logging,10693,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >inlinevirtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html:8971,log,logging,8971,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< TDataTypes >virtual; getPotentialEnergy(const MechanicalParams *, const DataVecCoord &x) const =0sofa::core::behavior::ForceField< TDataTypes >pure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html:7433,log,logging,7433,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,1,['log'],['logging']
Testability,a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseForceFieldpure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html:5739,log,logging,5739,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,1,['log'],['logging']
Testability,a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseForceFieldpure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange(,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html:5624,log,logging,5624,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,1,['log'],['logging']
Testability,a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; PairStateAccessor< TDataTypes >::getMechModel1()sofa::core::behavior::PairStateAccessor< TDataTypes >inline; PairStateAccessor< TDataTypes >::getMechModel1() constsofa::core::behavior::PairStateAccessor< TDataTypes >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; PairStateAccessor< TDataTypes >::getMechModel2()sofa::core::behavior::PairStateAccessor< TDataTypes >inline; PairStateAccessor< TDataTypes >::getMechModel2() constsofa::core::behavior::PairStateAccessor< TDataTypes >inline; getMState1()sofa::core::behavior::PairStateAccessor< TDataTypes >inline; getMState1() constsofa::core::behavior::PairStateAccessor< TDataTypes >inline; getMSta,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html:6805,log,logging,6805,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel1()sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel1() constsofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel2()sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel2() constsofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; getMState1()sofa::core::behavior::PairStateAcce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html:7334,log,logging,7334,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:9376,log,logging,9376,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['log'],['logging']
Testability,a::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; GetCustomTemplateName()sofa::component::visual::VisualModelImplinlinestatic; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdges() constsofa::component::visual::VisualModelImplinline; getFilename()sofa::component::visual::VisualModelImplinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getQuads() constsofa::component::visual::VisualModelImplinline; getSize() const overridesofa::core::visual::VisualState< defaulttype::Vec3Types >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTriangles() constsofa::component::visual::VisualModelImplinline; getTypeName() constsofa::core::objectmodel::Base; getUseNormals() constsofa::component::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html:9551,log,logging,9551,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,1,['log'],['logging']
Testability,"a::core::objectmodel::Contextvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDisplayWorldGravity(bool val)sofa::core::objectmodel::Contextinlinevirtual; setDt(SReal dt) overridesofa::core::objectmodel::Contextvirtual; setGravity(const Vec3 &) overridesofa::core::objectmodel::Contextvirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMechanicalState(BaseObject *)sofa::core::objectmodel::BaseContextinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSleeping(bool val) overridesofa::core::objectmodel::Contextvirtual; setTime(SReal t)sofa::core::objectmodel::Contextvirtual; setTopology(BaseObject *)sofa::core::objectmodel::BaseContextinlinevirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(Context, BaseContext)sofa::core::objectmodel::Context; sofa::core::objectmodel::BaseContext::SOFA_CLASS(BaseContext, Base)sofa::core::objectmodel::BaseContext; SPtr typedefsofa::core::objectmodel::Base; time_sofa::core::objectmodel::Context; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::core::objectmodel::BaseContext; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; worldGravity_sofa::core::objectmodel::Context; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseContext() overridesofa::core::objectmodel::BaseContextprotected; ~Context() overridesofa::core::objectmodel::Contextinlineprotectedvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html:13283,log,logErrors,13283,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,1,['log'],['logErrors']
Testability,a::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA AP,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:162019,log,logging,162019,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,a::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::log,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163447,log,logging,163447,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"a::helper::logging::MessageDispatcher::addHandler ; (; MessageHandler * ; o). static . to add a MessageHandler . ◆ advice(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::advice ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcher::clearHandlers ; (; ). static . to remove every MessageHandlers . ◆ deprecated(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::deprecated ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ error(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::error ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ fatal(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::fatal ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ getHandlers(). std::vector< MessageHandler * > & sofa::helper::logging::MessageDispatcher::getHandlers ; (; ). static . the list of MessageHandlers . ◆ info(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::info ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ log(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::log ; (; Message::Class ; mclass, . Message::Type ; type, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ null(). static const NullLoggerStream& sofa::helper::logging::MessageDispatcher::null ; (; ). inlinestatic . ◆ process(). void sofa::helper::logging::MessageDispatcher::process ; (; sofa::helper::logging::Message & ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:2954,log,logging,2954,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,3,"['Log', 'log']","['LoggerStream', 'logging']"
Testability,"a::simulation::CollisionAnimationLoopprotected; compTimesofa::component::animationloop::ConstraintAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeComplianceInConstraintSpace()sofa::component::animationloop::ConstraintAnimationLoopprotectedvirtual; computePredictiveForce(int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res)sofa::component::animationloop::ConstraintAnimationLoopprotected; ConstraintAnimationLoop()sofa::component::animationloop::ConstraintAnimationLoopprotected; constraintCorrectionssofa::component::animationloop::ConstraintAnimationLoopprotected; correctiveMotion(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activateSubGraphsofa::component::animationloop::ConstraintAnimationLoop; d_allVerifiedsofa::component::animationloop::ConstraintAnimationLoop; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_displayTimesofa::component::animationloop::ConstraintAnimationLoop; d_doCollisionsFirstsofa::component::animationloop::ConstraintAnimationLoop; d_doubleBuffersofa::component::animationloop::ConstraintAnimationLoop; d_graphConstraintssofa::component::animationloop::ConstraintAnimationLoop; d_graphErrorssofa::component::animationloop::ConstraintAnimationLoop; d_graphForcessofa::component::animationloop::ConstraintAnimationLoop; d_maxItsofa::component::animationloop::ConstraintAnimationLoop; d_messageLogCountsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:3279,log,logging,3279,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,1,['log'],['logging']
Testability,"a::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _Other",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:242329,test,testing,242329,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"a::simulation::UpdateLinksVisitor, sofa::simulation::UpdateInternalDataVisitor, sofa::simulation::UpdateVisualContextVisitor, sofa::simulation::UpdateSimulationContextVisitor, sofa::simulation::UpdateContextVisitor, sofa::simulation::UpdateBoundingBoxVisitor, sofa::simulation::TopologyChangeVisitor, sofa::simulation::StateChangeVisitor, sofa::simulation::SolveVisitor, sofa::simulation::StoreResetStateVisitor, sofa::simulation::ResetVisitor, sofa::simulation::PropagateEventVisitor, sofa::simulation::PrintVisitor, sofa::simulation::DofPrintVisitor, sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor, sofa::simulation::MechanicalVPrintVisitor, sofa::simulation::InitVisitor, sofa::simulation::ExportGnuplotVisitor, sofa::simulation::InitGnuplotVisitor, sofa::simulation::DeactivationVisitor, sofa::simulation::CollisionVisitor, sofa::simulation::BehaviorUpdatePositionVisitor, sofa::simulation::BaseMechanicalVisitor, sofa::simulation::AnimateVisitor, sofa::simulation::TransformationVisitor, sofa::simulation::FindByTypeVisitor< T >, sofa::component::odesolver::testing::GetAssembledSizeVisitor, sofa::component::odesolver::testing::GetVectorVisitor, sofa::simulation::WriteStateVisitor, sofa::component::playback::WriteTopologyActivator, sofa::component::playback::WriteTopologyCreator, sofa::component::playback::WriteStateActivator, sofa::component::playback::WriteStateCreator, sofa::component::playback::ReadTopologyModifier, sofa::component::playback::ReadTopologyActivator, sofa::component::playback::ReadTopologyCreator, sofa::component::playback::ReadStateModifier, sofa::component::playback::ReadStateActivator, sofa::component::playback::ReadStateCreator, sofa::component::playback::CompareTopologyResult, sofa::component::playback::CompareTopologyCreator, sofa::component::playback::CompareStateResult, sofa::component::playback::CompareStateCreator, sofa::simulation::ExportVisualModelOBJVisitor, sofa::simulation::graph::ExportDotVisitor, and sofa::simulation::CleanupVisitor.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html:26113,test,testing,26113,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,4,['test'],['testing']
Testability,"a::simulation::mechanicalvisitor::MechanicalAccumulateJacobian, sofa::simulation::mechanicalvisitor::MechanicalAccFromFVisitor, sofa::simulation::InitVisitor, sofa::simulation::ExportVisualModelOBJVisitor, sofa::simulation::ExportGnuplotVisitor, sofa::simulation::InitGnuplotVisitor, sofa::simulation::graph::ExportDotVisitor, sofa::simulation::DeleteVisitor, sofa::simulation::DeactivationVisitor, sofa::simulation::CollisionResponseVisitor, sofa::simulation::CollisionDetectionVisitor, sofa::simulation::CollisionResetVisitor, sofa::simulation::CollisionVisitor, sofa::simulation::CleanupVisitor, sofa::simulation::BehaviorUpdatePositionVisitor, sofa::simulation::BaseMechanicalVisitor, sofa::simulation::AnimateVisitor, sofa::simulation::TransformationVisitor, sofa::simulation::FindByTypeVisitor< T >, sofa::component::playback::WriteTopologyActivator, sofa::component::playback::WriteTopologyCreator, sofa::component::playback::WriteStateActivator, sofa::component::playback::WriteStateCreator, sofa::component::playback::ReadTopologyModifier, sofa::component::playback::ReadTopologyActivator, sofa::component::playback::ReadTopologyCreator, sofa::component::playback::ReadStateModifier, sofa::component::playback::ReadStateActivator, sofa::component::playback::ReadStateCreator, sofa::component::playback::CompareTopologyResult, sofa::component::playback::CompareTopologyCreator, sofa::component::playback::CompareStateResult, sofa::component::playback::CompareStateCreator, sofa::component::odesolver::testing::GetAssembledSizeVisitor, sofa::component::odesolver::testing::GetVectorVisitor, sofa::component::linearsystem::DispatchFromGlobalVectorToLocalVectorVisitor, sofa::component::linearsystem::AssembleGlobalVectorFromLocalVectorVisitor, sofa::component::constraint::lagrangian::solver::MechanicalGetConstraintViolationVisitor, sofa::component::constraint::lagrangian::solver::MechanicalGetConstraintResolutionVisitor, and sofa::simulation::mechanicalvisitor::MechanicalGetMomentumVisitor.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html:16754,test,testing,16754,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,4,['test'],['testing']
Testability,a::simulation::xml::BaseElement Class Reference; SOFA API: sofa::simulation::xml::BaseElement::child_iterator< Node > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member Li,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:194537,test,testing,194537,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"a::testing::NumericTest< T::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ m_modelMatrix. template<class T > . sofa::type::Mat<NbRows, NbCols, Real> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_modelMatrix. protected . ◆ m_testedMatrix. template<class T > . std::unique_ptr<sofa::linearalgebra::BaseMatrix> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_testedMatrix {nullptr}. protected . ◆ NbCols. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbCols = T::NbCols. staticconstexpr . ◆ NbRows. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbRows = T::NbRows. staticconstexpr . Function details. ◆ checkAddBloc(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkAddBloc ; (; sofa::linearalgebra::BaseMatrix::Index ; posRow, . sofa::linearalgebra::BaseMatrix::Index ; posCol . ). inline . A 3x3 matrix is added into the matrix using the corresponding function overload This assumes the matrix is big enough to contain a 3x3 matrix at the requested position Parameters. posRowrow index at which the 3x3 matrix is added ; posColcolumn index at which the 3x3 matrix is added . ◆ checkAddScalar(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkAddScalar ; (; ). inline . ◆ checkResize(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkResize ; (; ). inline . ◆ onSetUp(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::onSetUp ; (; ). inlineoverridevirtual . Reimplemented from sofa::testing::BaseTest. ◆ onTearDown(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::onTearDown ; (; ). inlineoverridevirtual . Reimplemented from sofa::testing::BaseTest. sofalinearalgebratestingTestBaseMatrix; Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html:4618,test,testing,4618,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,16,"['Test', 'test']","['TestBaseMatrix', 'testing']"
Testability,"aTypes >; TetrahedronFEMForceField()sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; TetrahedronFEMForceFieldInternalData< DataTypes > classsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >friend; TetrahedronID typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVonMisesStresssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; Vector typedefsofa::component::solidmechanic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html:36076,log,logErrors,36076,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,"aTypes >virtual; getComplianceWithConstraintMerge(linearalgebra::BaseMatrix *Wmerged, std::vector< int > &constraint_merge) overridesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >virtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMState() constsofa::core::behavior::ConstraintCorrection< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html:10430,log,logging,10430,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,1,['log'],['logging']
Testability,"aVecCoord &x, const DataVecDeriv &v) overridesofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *matrix) overrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html:2889,log,logging,2889,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,1,['log'],['logging']
Testability,"achProjectiveConstraint< DataTypes >. ◆ getGroup(). int sofa::core::behavior::BaseProjectiveConstraintSet::getGroup ; (; ); const. inline . Get the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. . ◆ getModels(). virtual type::vector< core::BaseState* > sofa::core::behavior::BaseProjectiveConstraintSet::getModels ; (; ). pure virtual . Return the lists of models this constraint applies to. ; Implemented in sofa::core::behavior::ProjectiveConstraintSet< DataTypes >, sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >, and sofa::core::behavior::BaseInteractionProjectiveConstraintSet. ◆ insertInNode(). bool sofa::core::behavior::BaseProjectiveConstraintSet::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). virtual void sofa::core::behavior::BaseProjectiveConstraintSet::projectJacobianMatrix ; (; const MechanicalParams * ; mparams, . MultiMatrixDerivId ; cId . ). pure virtual . Project the L matrix of the Lagrange Multiplier equation system. Parameters. cIdoutput vector . Implemented in sofa::core::behavior::ProjectiveConstraintSet< DataTypes >, sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >, sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >, sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >, and sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >. ◆ projectMatrix(). virtual void sofa::core::behavior::BaseProjectiveConstraintSet::projectMatrix ; (; sofa::linearalgebra::BaseMatrix * ; , . unsigned ;  . ). inlinevirtual . Project the given matrix (Experim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html:21336,test,test,21336,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html,1,['test'],['test']
Testability,"acker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dumpStatesofa::component::setting::StatsSetting; d_exportStatesofa::component::setting::StatsSetting; d_logTimesofa::component::setting::StatsSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpStatesofa::component::setting::StatsSetting; exportStatesofa::component::setting::StatsSetting; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html:2160,log,logging,2160,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,1,['log'],['logging']
Testability,"acker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_gnuplotPathsofa::component::setting::SofaDefaultPathSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html:2180,log,logging,2180,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,1,['log'],['logging']
Testability,"acker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html:2174,log,logging,2174,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,1,['log'],['logging']
Testability,action with two forcefeedback devices. /scientistengineer-positions-in-ms-of-layered-tissue-structures; . /page; . /3; ; SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. /searching-sofa-nodes-plugins-inside-a-scene; ; SOFA - Topic: [SOLVED] Searching SOFA Nodes plugins inside a scene. /seeing-indices-and-vertices-of-elements-in-run-window; . /feed; ; [SOLVED] Showing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems still functioning? – SOFA. SOFA - Topic: [SOLVED] Sensable drivers – 3DSystems still functioning?. /sensable-plugin; . /feed; ; [SOLVED] Sen,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:382792,log,logger,382792,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logger']
Testability,"ad::TaitSurfacePressureForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState() overridesofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >virtual; TaitSurfacePressureForceField()sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >; updateFromTopology()sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protectedvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor< DataTypes >protected; ~StateAccessor() override=defaultsofa::core::behavior::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html:21243,log,logErrors,21243,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,1,['log'],['logErrors']
Testability,"adTopologyActivator (const core::ExecParams *params, bool active);  ; Result processNodeTopDown (simulation::Node *) override;  if state is true, we activate all the write states present in the scene. More...;  ; bool getTopology () const;  ; void setTopology (bool active);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology_activator.html:1591,test,testTags,1591,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology_activator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology_activator.html,1,['test'],['testTags']
Testability,"addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0sofa::core::objectmodel::BaseNodepure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; detachFromGraph()=0sofa::core::objectmodel::BaseNodepure virtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) override=0sofa::core::objectmodel::BaseNodepure virtual; findLinks(const std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html:1749,log,logging,1749,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,1,['log'],['logging']
Testability,"ader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(Hexa2TetraTopologicalMapping, sofa::core::topology::TopologicalMapping)sofa::component::topology::mapping::Hexa2TetraTopologicalMapping; sofa::core::topology::TopologicalMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swappingsofa::component::topology::mapping::Hexa2TetraTopologicalMapping; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown() overridesofa::component::topology::mapping::Hexa2TetraTopologicalMappingvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Hexa2TetraTopologicalMapping() overridesofa::component::topology::mapping::Hexa2TetraTopologicalMappingprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html:12549,log,logErrors,12549,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html,1,['log'],['logErrors']
Testability,"ader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshOffLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshOffLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::core::loader::MeshLoader; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::loader::MeshLoader; updateElements()sofa::core::loader::MeshLoadervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::core::loader::MeshLoadervirtual; updateNormals()sofa::core::loader::MeshLoadervirtual; updatePoints()sofa::core::loader::MeshLoadervirtual; Vec3 typedefsofa::core::loader::MeshLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:16567,log,logErrors,16567,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,1,['log'],['logErrors']
Testability,"ader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshSTLLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshSTLLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::core::loader::MeshLoader; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::loader::MeshLoader; updateElements()sofa::core::loader::MeshLoadervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::core::loader::MeshLoadervirtual; updateNormals()sofa::core::loader::MeshLoadervirtual; updatePoints()sofa::core::loader::MeshLoadervirtual; Vec3 typedefsofa::core::loader::MeshLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:16829,log,logErrors,16829,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['log'],['logErrors']
Testability,"ader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshXspLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshXspLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::core::loader::MeshLoader; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::loader::MeshLoader; updateElements()sofa::core::loader::MeshLoadervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::core::loader::MeshLoadervirtual; updateNormals()sofa::core::loader::MeshLoadervirtual; updatePoints()sofa::core::loader::MeshLoadervirtual; Vec3 typedefsofa::core::loader::MeshLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:16532,log,logErrors,16532,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['log'],['logErrors']
Testability,ader::Lightinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDepthTexture()sofa::gl::component::shader::Lightinlinevirtual; getDirection()sofa::gl::component::shader::Lightinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLightType() overridesofa::gl::component::shader::PositionalLightinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOpenGLModelViewMatrix()sofa::gl::component::shader::Light; getOpenGLProjectionMatrix()sofa::gl::component::shader::Light; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPosition() overridesofa::gl::component::shader::PositionalLightinlinevirtual; getShadowFactor()sofa::gl::component::shader::Lightinlinevirtual; getShadowMapSize()sofa::gl::component::shader::Lightvirtual; getShadowTextureUnit()sofa::gl::component::shader::Lightinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalso,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html:7198,log,logging,7198,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,2,['log'],['logging']
Testability,"adientMapsofa::component::engine::analyze::Distances< DataTypes >; showGradientsScaleFactorsofa::component::engine::analyze::Distances< DataTypes >; showMapIndexsofa::component::engine::analyze::Distances< DataTypes >; showTextScaleFactorsofa::component::engine::analyze::Distances< DataTypes >; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(Distances, DataTypes), core::DataEngine)sofa::component::engine::analyze::Distances< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::analyze::Distances< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecVecCoord typedefsofa::component::engine::analyze::Distances< DataTypes >; VVD typedefsofa::component::engine::analyze::Distances< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zonesFramePairsofa::component::engine::analyze::Distances< DataTypes >; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~Distances() overridesofa::component::engine::analyze::Distances< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html:15156,log,logErrors,15156,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,1,['log'],['logErrors']
Testability,"after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImplvirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; constraintGroupssofa::component::constraint::lagrangian::solver::LCPConstraintSolver; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_build_lcpsofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_componentStatesofa::core::objectmodel::Base; d_computeConstraintForcessofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_constraintForcessofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_constraintGroupssofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_displayDebugsofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_graphsofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_initial_guesssofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_maxFsofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_maxItsofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_merge_local_levelssofa::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html:3989,log,logging,3989,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,1,['log'],['logging']
Testability,"ag t)sofa::core::objectmodel::Base; RequiredPlugin()sofa::simulation::RequiredPluginprotected; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(RequiredPlugin, core::objectmodel::BaseObject)sofa::simulation::RequiredPlugin; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~RequiredPlugin() override=defaultsofa::simulation::RequiredPluginprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html:10201,log,logErrors,10201,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,2,['log'],['logErrors']
Testability,"ag(). Visitor& sofa::simulation::Visitor::removeTag ; (; Tag ; t). inline . ◆ runVisitorTask() [1/2]. template<class VisitorType , class VContext , class ObjectType > . Visitor::Result sofa::simulation::Visitor::runVisitorTask ; (; VisitorType * ; visitor, . VContext * ; ctx, . Result(VisitorType::*)(VContext *, ObjectType *) ; task, . ObjectType * ; ptr, . const std::string & ; typeInfo = std::string(""type"") . ). protected . Function to be called when a visitor executes a main task It surrounds the task function with debug information . ◆ runVisitorTask() [2/2]. template<class VisitorType , class VContext , class ObjectType > . void sofa::simulation::Visitor::runVisitorTask ; (; VisitorType * ; visitor, . VContext * ; ctx, . void(VisitorType::*)(VContext *, ObjectType *) ; task, . ObjectType * ; ptr, . const std::string & ; typeInfo = std::string(""type"") . ). protected . Function to be called when a visitor executes a main task It surrounds the task function with debug information . ◆ setTags(). Visitor& sofa::simulation::Visitor::setTags ; (; const TagSet & ; t). inline . ◆ testTags(). bool sofa::simulation::Visitor::testTags ; (; sofa::core::objectmodel::BaseObject * ; obj). ◆ treeTraversal(). virtual bool sofa::simulation::Visitor::treeTraversal ; (; TreeTraversalRepetition & ; repeat). inlinevirtual . ReturnstreeTraversal returns true if and only if a tree traversal must be enforced (even for a DAG) ; Parameters. repeatTell if a node callback can be executed several times (at each traversal in diamond configurations) . Reimplemented in sofa::simulation::XMLPrintVisitor, sofa::simulation::VisualVisitor, and sofa::simulation::PrintVisitor. Enum details. ◆ Result. enum sofa::simulation::Visitor::Result. EnumeratorRESULT_CONTINUE ; RESULT_PRUNE . ◆ TreeTraversalRepetition. enum sofa::simulation::Visitor::TreeTraversalRepetition. EnumeratorNO_REPETITION ; REPEAT_ALL ; REPEAT_ONCE . sofasimulationVisitor; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html:28541,test,testTags,28541,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,4,['test'],['testTags']
Testability,"ag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; sceneNamesofa::component::playback::WriteTopologyCreatorprotected; setCounter(int c)sofa::component::playback::WriteTopologyCreatorinline; setCreateInMapping(bool b)sofa::component::playback::WriteTopologyCreatorinline; setRecordContainers(bool b)sofa::component::playback::WriteTopologyCreatorinline; setRecordShellContainersV(bool b)sofa::component::playback::WriteTopologyCreatorinline; setSceneName(std::string &n)sofa::component::playback::WriteTopologyCreatorinline; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; WriteTopologyCreator(const core::ExecParams *params)sofa::component::playback::WriteTopologyCreator; WriteTopologyCreator(const std::string &n, bool _writeContainers, bool _writeShellContainers, bool _createInMapping, const core::ExecParams *params, int c=0)sofa::component::playback::WriteTopologyCreator; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology_creator-members.html:4847,test,testTags,4847,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology_creator-members.html,1,['test'],['testTags']
Testability,ageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1855,log,logging,1855,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,34,"['Log', 'log']","['LoggingMessageHandler', 'logging', 'loggingmessagehandler']"
Testability,"ageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_id< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::system::DynamicLibrary Class Reference; SOFA A",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:164184,log,logging,164184,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"ahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Real restVolume;  rest volume More...;  ; Real volScale;  current tetrahedron volume More...;  ; Coord shapeVector [4];  shape vector at the rest configuration More...;  ; Coord fiberDirection;  fiber direction in rest configuration More...;  ; Coord dJ [4];  derivatives of J More...;  ; Real strainEnergy;  deformation gradient = gradPhi More...;  ; float tetraIndices [4] {};  ; float tetraEdges [6] {};  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ();  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >;  StrainInformation ();  ; virtual ~StrainInformation ();  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ dJ. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::dJ[4]. derivatives of J . ◆ fiberDirection. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::fiberDirection. fiber direction in rest configuration . ◆ restVolume. template<class DataTy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html:1890,log,logJ,1890,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,1,['log'],['logJ']
Testability,"ainer::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestHexahedronVertexCoordinates ; (; const HexaID ; h, . Coord ; pnt[8] . ); const. ◆ getRestPointPositionInHexahedron() [1/2]. template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestPointPositionInHexahedron ; (; const HexaID ; h, . const LocalCoord & ; baryC . ); const. ◆ getRestPointPositionInHexahedron() [2/2]. template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestPointPositionInHexahedron ; (; const HexaID ; h, . const Real ; baryC[3] . ); const. ◆ isHexahedronAffine(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::isHexahedronAffine ; (; const HexaID ; h, . const VecCoord & ; p, . const Real ; tolerance = (Real)1e-5 . ); const. test if the heaxahedron is a simple affine warp of a cube . ◆ mustComputeBBox(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::mustComputeBBox. overrideprotectedvirtual . Return true if the visibility parameters are showing the object in any way whatsoever, false otherwise. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes) ;  . ). ◆ writeMSHfile(). template<class DataTypes > . void sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::writeMSHfile ; (; const char * ; filename); const. inline . sofacomponenttopologycontainerdynamicHexahedronSetGeometryAlgorithms;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html:40890,test,test,40890,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,1,['test'],['test']
Testability,"ainer::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleBarycoefs(const TriangleID ind_t, const sofa::type::Vec< 3, Real > &p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCenter(const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCircumcenter(const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCircumcenterBaryCoefs(sofa::type::Vec< 3, Real > &baryCoord, const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleNormal(const TriangleID ind_t) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; Coord typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawEdgessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showIndicesScalesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >protected; d_showPointIndicessofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >protected; d_tagMechanicssofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >protected; defineEdgeCubaturePoints()sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; defineTetrahedron",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html:10999,log,logging,10999,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"aintSet (VisitorContext *ctx, sofa::core::behavior::BaseProjectiveConstraintSet *c);  Process all the BaseProjectiveConstraintSet. More...;  ; virtual void bwdConstraintSet (VisitorContext *ctx, sofa::core::behavior::BaseConstraintSet *c);  Process all the BaseConstraintSet. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_energy_visitor.html:8615,test,testTags,8615,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_energy_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_energy_visitor.html,4,['test'],['testTags']
Testability,"air< core::CollisionElementIterator, core::CollisionElementIterator > sofa::component::collision::geometry::CubeCollisionModel::getExternalChildren ; (; sofa::Index ; ); const. overridevirtual . Return the list (as a pair of iterators) of external children of an element. ; External children are child elements of a different type than their parent (often corresponding to the final elements).; Default to empty (i.e. two identical iterators) ; Reimplemented from sofa::core::CollisionModel. ◆ getInternalChildren(). std::pair< core::CollisionElementIterator, core::CollisionElementIterator > sofa::component::collision::geometry::CubeCollisionModel::getInternalChildren ; (; sofa::Index ; ); const. overridevirtual . Return the list (as a pair of iterators) of internal children of an element. ; Internal children are child elements of the same type as their parent (often corresponding to non-final elements). This distinction is used to optimize the intersection tests inside the hierarchy, as internal children can be processed without dynamically retrieving a new intersection method.; Default to empty (i.e. two identical iterators) ; Reimplemented from sofa::core::CollisionModel. ◆ getLeafEndIndex(). sofa::Index sofa::component::collision::geometry::CubeCollisionModel::getLeafEndIndex ; (; sofa::Index ; index); const. inline . ◆ getLeafIndex(). sofa::Index sofa::component::collision::geometry::CubeCollisionModel::getLeafIndex ; (; sofa::Index ; index); const. inline . ◆ getNumberCells(). sofa::Size sofa::component::collision::geometry::CubeCollisionModel::getNumberCells ; (; ); const. inline . ◆ isLeaf(). bool sofa::component::collision::geometry::CubeCollisionModel::isLeaf ; (; sofa::Index ; ); const. overridevirtual . Checks if the element(index) is a leaf and a primitive of the collision model. ; Default to true since triangle model, line model, etc. does not have this method implemented and they are themselves (normally) leaves and primitives ; Reimplemented from sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:24881,test,tests,24881,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,1,['test'],['tests']
Testability,"al . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the first parameter, Warningthis version supposes the mapping initialization does not depend on child positions otherwise, use the runTest functions with 4 parameters the child position is computed from parent position and compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; Parameters. parentparent position ; expectedChildexpected position of the child corresponding to the parent position . ◆ runTest() [2/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parentInit, . const OutVecCoord & ; childInit, . const InVecCoord & ; parentNew, . const OutVecCoord & ; expectedChildNew . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the two first parameters, then a new parent position is applied, and the new child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The initialization values can used when the mapping is an embedding, e.g. to attach a mesh to a rigid object we compute the local coordinates of the vertices based on their world coordinates and the frame coordinates. In other cases, such as mapping from pairs of points to distances, no initialization values are necessary, an one can use the same values as for testing, i.e. runTest( xp, expected_xc, xp, expected_xc).; Parameters. parentInitinitial parent position ; childInitinitial child position ; parentNewnew parent position ; expectedChildNewexpected position of the child corresponding to the new parent position . sofamapping_testMapping_test; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:13983,test,tested,13983,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,4,['test'],"['tested', 'testing']"
Testability,al::VisualStylevirtual; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html:5667,log,logging,5667,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,1,['log'],['logging']
Testability,"al; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< TDataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; Coord typedefsofa::core::State< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html:2564,log,logging,2564,api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,1,['log'],['logging']
Testability,"al; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; EdgesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInTriangle typedefsofa::core::topology::BaseMeshTopology; ElemID typedefsofa::core::topology::Topology; endChange() const overridesofa::core::topology::TopologyContainervirtual; endStateChange() const overridesofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html:3582,log,logging,3582,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,1,['log'],['logging']
Testability,"al; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showExtraTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_showLawfulTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_springssofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; datasofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; DataTypes typedefsofa::core::behavior::PairInteractionForceField< DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; DataVecDeriv typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html:5080,log,logging,5080,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,1,['log'],['logging']
Testability,"al; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; tsofa::simulation::mechanicalvisitor::MechanicalProjectVelocityVisitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; velsofa::simulation::mechanicalvisitor::MechanicalProjectVelocityVisitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_velocity_visitor-members.html:10634,test,testTags,10634,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_velocity_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_velocity_visitor-members.html,2,['test'],['testTags']
Testability,"alMappinginline; getFromIndex(Index ind) overridesofa::component::mapping::linear::Mesh2PointTopologicalMappinginlinevirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind) overridesofa::component::mapping::linear::Mesh2PointTopologicalMappinginlinevirtual; getHexaBaryCoords() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointBaryCoords() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromEdge() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromHexa() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromPoint() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromQuad() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromTetra() constsofa::component::mapping::linear::Mesh2PointTopologicalMappinginline; getPointsMappedFromTriangle() constsofa::component::mapp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html:6954,log,logging,6954,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,1,['log'],['logging']
Testability,"alParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::mechanicalload::SphereForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) overridesofa::component::mechanicalload::SphereForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bilateralsofa::component::mechanicalload::SphereForceField< DataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html:2794,log,logging,2794,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,1,['log'],['logging']
Testability,"alStatepure virtual; getConstraintJacobianTimesVecDeriv(unsigned int, ConstVecId)sofa::core::behavior::BaseMechanicalStateinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getCoordDimension() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDerivDimension() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatrixBlockSize() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getMatrixSize() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPX(Index) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getPY(Index) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getPZ(Index) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getScale() constsofa::core::behavior::BaseMechanicalStateinlinevirtual; getSize() const =0sofa::core::BaseStatepure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html:7605,log,logging,7605,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,1,['log'],['logging']
Testability,"am &o, const Id< Base > &t)sofa::helper::AdvancedTimer::Id< Base >friend; operator<=(const Id< Base > &t) constsofa::helper::AdvancedTimer::Id< Base >inline; operator==(const Id< Base > &t) constsofa::helper::AdvancedTimer::Id< Base >inline; operator>(const Id< Base > &t) constsofa::helper::AdvancedTimer::Id< Base >inline; operator>=(const Id< Base > &t) constsofa::helper::AdvancedTimer::Id< Base >inline; operator>>(std::istream &i, Id< Base > &t)sofa::helper::AdvancedTimer::Id< Base >friend; parse(BaseObjectDescription *arg)sofa::core::objectmodel::Basevirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; removeData(BaseData *f)sofa::core::objectmodel::Base; removeTag(Tag t)sofa::core::objectmodel::Base; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SPtr typedefsofa::core::objectmodel::Base; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html:7930,log,logErrors,7930,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html,2,['log'],['logErrors']
Testability,"ame RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:1497,test,testing,1497,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,2,['test'],['testing']
Testability,"ame of this object (i.e. concatenation if all the names of its ancestors and itself) . ◆ getName(). std::string sofa::core::objectmodel::BaseObjectDescription::getName ; (; ). virtual . Get the object instance name. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ getObject(). Base * sofa::core::objectmodel::BaseObjectDescription::getObject ; (; ). virtual . Get the associated object (or nullptr if it is not created yet) ; Reimplemented in sofa::simulation::xml::BaseElement, sofa::simulation::xml::Element< Object >, sofa::simulation::xml::Element< sofa::core::objectmodel::BaseNode >, sofa::simulation::xml::Element< core::objectmodel::BaseObject >, and sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >. ◆ getParent(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::getParent ; (; ); const. virtual . Get the parent node. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ logError(). virtual void sofa::core::objectmodel::BaseObjectDescription::logError ; (; const std::string & ; s). inlinevirtual . ◆ logErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::logErrors ; (; const std::vector< std::string > & ; e). inlinevirtual . ◆ removeAttribute(). bool sofa::core::objectmodel::BaseObjectDescription::removeAttribute ; (; const std::string & ; attr). virtual . Remove an attribute given its name. ; Remove an attribute given its name, returns false if the attribute was not there. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ setAttribute(). void sofa::core::objectmodel::BaseObjectDescription::setAttribute ; (; const std::string & ; attr, . const std::string & ; val . ). virtual . Set an attribute. Override any existing value. . ◆ setName(). void sofa::core::objectmodel::BaseObjectDescription::setName ; (; const std::string & ; name). virtual . Set the object instance name. ; Reimplemented in sofa::simulation::xml::BaseElement. sofacoreobjectmodelBaseObjectDescription; Generated on Mon Nov 1",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:7038,log,logError,7038,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['log'],['logError']
Testability,"ame(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloatAttribute, SOFA_TEMPLATE3(OglAttribute, 1, GL_FLOAT, float))sofa::gl::component::shader::OglFloatAttribute; OglAttribute< 1, GL_FLOAT, float >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, float), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >protected; ~OglFloatAttribute()sofa::gl::component::shader::OglFloatAttributeinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html:14937,log,logErrors,14937,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,2,['log'],['logErrors']
Testability,"ame)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDetectionOutputs(DetectionOutputVector *outputs)=0sofa::core::collision::Contactpure virtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setKeepAlive(bool)sofa::core::collision::Contactinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Contact, objectmodel::BaseObject)sofa::core::collision::Contact; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseRayContact() overridesofa::component::collision::response::contact::BaseRayContactprotected; ~Contact() overridesofa::core::collision::Contactinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html:11192,log,logErrors,11192,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,1,['log'],['logErrors']
Testability,"ame=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; find(const char *nodeName, bool absolute=false)sofa::core::objectmodel::BaseObjectDescriptionvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const int defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeList(T &container) constsofa::core::objectmodel::BaseObjectDescriptioninline; getAttributeMap() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; getBaseFile()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getObject()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getParent() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; removeAttribute(const std::string &attr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; setAttribute(const std::string &attr, const std::string &val)sofa::core::objectmodel::BaseObjectDescriptionvirtual; setName(const std::string &name)sofa::core::objectmodel::BaseObjectDescriptionvirtual; ~BaseObjectDescription()sofa::core::objectmodel::BaseObjectDescriptionvirtual. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html:1816,log,logError,1816,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,2,['log'],"['logError', 'logErrors']"
Testability,"amesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, core::BaseMapping *) overridesofa::simulation::mechanicalvisitor::MechanicalGetConstraintInfoVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; VecConstArea typedefsofa::simulation::mechanicalvisitor::MechanicalGetConstraintInfoVisitor; VecConstCoord typedefsofa::simulation::mechanicalvisitor::MechanicalGetConstraintInfoVisitor; VecConstDeriv typedefsofa::simulation::mechanicalvisitor::MechanicalGetConstraintInfoVisitor; VecConstraintBlockInfo typedefsofa::simulation::mechanicalvisitor::MechanicalGetConstraintInfoVisitor; VecPersistentID typedefsofa::simulation::mechanicalvisitor::MechanicalGetConstraintInfoVisitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_constraint_info_visitor-members.html:10305,test,testTags,10305,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_constraint_info_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_constraint_info_visitor-members.html,2,['test'],['testTags']
Testability,"ampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< TDataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; DataVecCoord typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; Deriv typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; exportGnuplot(SReal time)sofa::core::behavior::BaseInteractionForceFieldinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html:3968,log,logging,3968,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,1,['log'],['logging']
Testability,ampler< DataTypes >; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObject,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html:6211,log,logging,6211,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html,1,['log'],['logging']
Testability,"ams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const core::MechanicalParams *mparams, core::MultiVecDerivId dfId) overridesofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; addMBKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html:5693,log,logging,5693,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,1,['log'],['logging']
Testability,"anCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html:2448,log,logging,2448,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,1,['log'],['logging']
Testability,"anCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html:2862,log,logging,2862,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,1,['log'],['logging']
Testability,"ance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Cube &, collision::geometry::Cube &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:20637,test,testIntersection,20637,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,"and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3276,test,test,3276,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,2,['test'],['test']
Testability,"ange(10.0, 20.0);; sofa::testing::LinearCongruentialRandomGenerator::generateInRangedouble generateInRange(double rmin, double rmax)Generates a pseudo-random double value within a specified range.Definition: LinearCongruentialRandomGenerator.cpp:41. ◆ generateInRange() [2/2]. float sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; float ; rmin, . float ; rmax . ). Generates a pseudo-random float value within a specified range. ; This function generates a pseudo-random float value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random float value in the specified range [rmin, rmax].; Example usage: float randomValue = generateInRange(10.f, 20.f);. ◆ generateInUnitRange(). template<class Scalar > . Scalar sofa::testing::LinearCongruentialRandomGenerator::generateInUnitRange ; (; ). inline . Generates a pseudo-random value within the unit interval [0, 1]. ; This templated function generates a pseudo-random value of the specified scalar type within the unit interval [0, 1]. It utilizes the underlying random number generator to produce a normalized random value within the unit range.; Template Parameters. ScalarThe scalar type for the generated value (e.g., float, double). . ReturnsA pseudo-random value of the specified scalar type within the range [0, 1].; Example usage: float randomFloat = generateInUnitRange<float>();; double randomDouble = generateInUnitRange<double>();. ◆ generateRandom(). unsigned sofa::testing::LinearCongruentialRandomGenerator::generateRandom ; (; ). Generates the next pseudo-random number. ; ReturnsThe generated pseudo-random number.; This method uses a Linear Congruential Generator (LCG) algorithm to update the seed and produce the next pseudo-random number. . sofatestingLinearCongruentialRandomGenerator; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html:3660,test,testing,3660,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,2,['test'],['testing']
Testability,angian::solver::ConstraintSolverImplprotected; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDx() const overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLambda() const overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; graphConstraintssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; graphErrorssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; graphForcessofa::component::constraint::lagrangian::solver::GenericConstraintSolver; graphViolationssofa::component::constraint::lagr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:9658,log,logging,9658,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['log'],['logging']
Testability,"anglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15087,test,testIntersection,15087,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"anicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const Coord_t< In > &a, const Coord_t< In > &b)sofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_colorsofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showObjectScalesofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >; Direction typedefsofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >; disable() overridesofa::core::Mapping< TIn, TOut >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpda",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html:5797,log,logging,5797,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,1,['log'],['logging']
Testability,"anicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) overridesofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >virtual; PairInteractionForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addSpring(sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpring(const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; addSpringForce(Real &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, sofa::Index, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; addTag(Ta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html:2417,log,logging,2417,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,1,['log'],['logging']
Testability,"anicalload::LinearForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKeyForce(Real time, Deriv force)sofa::component::mechanicalload::LinearForceField< DataTypes >; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) overridesofa::component::mechanicalload::LinearForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoint(unsigned index)sofa::component::mechanicalload::LinearForceField< DataTypes >; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html:2897,log,logging,2897,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,1,['log'],['logging']
Testability,"anupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1320,Test,Testing,1320,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['Test'],['Testing']
Testability,"apping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyDJT = 8. staticconstexpr . testing applyDJT . ◆ TEST_applyJT_matrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_applyJT_matrix = 4. staticconstexpr . testing applyJT on matrices . ◆ TEST_ASSEMBLY_API. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_ASSEMBLY_API = TEST_getJs | TEST_getK. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_buildGeometricStiffnessMatrix. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_buildGeometricStiffnessMatrix = 16. staticconstexpr . testing buildGeometricStiffnessMatrix . ◆ TEST_GEOMETRIC_STIFFNESS. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix. staticconstexpr . testing functions used in assembly API getJS getKS . ◆ TEST_getJs. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mapping >::TEST_getJs = 1. staticconstexpr . testing getJs used in assembly API . ◆ TEST_getK. template<class _Mapping > . con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:9910,test,testing,9910,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,2,['test'],['testing']
Testability,"apping; SOFA_CLASS(SOFA_TEMPLATE2(VolumeMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true))sofa::component::mapping::nonlinear::VolumeMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VolumeMapping()sofa::component::mapping::nonlinear::VolumeMapping< TIn, TOut >protected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html:18826,log,logErrors,18826,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html,1,['log'],['logErrors']
Testability,"apply()=0sofa::core::objectmodel::ContextObjectpure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContextObject()sofa::core::objectmodel::ContextObjectinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html:2255,log,logging,2255,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,1,['log'],['logging']
Testability,"arFEMForceFieldOptim< DataTypes >virtual; computeMuGamma(Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >protectedstatic; computePrincipalStress()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; computeTriangleRotation(Transformation &result, Coord eab, Coord eac)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; computeTriangleRotation(Transformation &result, Coord a, Coord b, Coord c)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; computeTriangleRotation(Transformation &result, VecCoord &x0, Triangle t)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; Coord typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTriangleInfo(Index triangleIndex, TriangleInfo &, const Triangle &t, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; createTriangleState(Index triangleIndex, TriangleState &, const Triangle &t, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computePrincipalStresssofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; d_dampingsofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html:6590,log,logging,6590,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,1,['log'],['logging']
Testability,"arLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeNormalssofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::PointCollisionModel< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; d_displayFreePositionsofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; DataTypes typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; Deriv typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:3888,log,logging,3888,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,1,['log'],['logging']
Testability,"arams *params, sofa::core::ConstMultiVecId vid, unsigned time, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html:1858,test,testTags,1858,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html,2,['test'],['testTags']
Testability,"arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeEdgeDiffusionCoefficient()sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >protected; Coord typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_1DDiffusionsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_constantDiffusionCoefficientsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_drawConducsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_tagMeshMechanicssofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_tetraDiffusionCoefficientsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_transverseAnisotropyDirectionArraysofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_transverseAnisotropyRatiosofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; DataTypes typedefsofa::core::beha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html:5239,log,logging,5239,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"ase * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual bool removeAttribute (const std::string &attr);  Remove an attribute given its name. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Attribute details. ◆ attributes. AttributeMap sofa::core::objectmodel::BaseObjectDescription::attributes. protected . ◆ errors. std::vector< std::string > sofa::core::objectmodel::BaseObjectDescription::errors. protected . Constructor details. ◆ BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::BaseObjectDescription ; (; const char * ; name = nullptr, . const char * ; type = nullptr . ). ◆ ~BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::~BaseObjectDescription ; (; ). virtual . Function details. ◆ clearErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::clearErrors ; (; ). inlinevirtual . ◆ find(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:2808,log,logError,2808,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,2,['log'],"['logError', 'logErrors']"
Testability,"ase based on string. More...;  ; bool notMuted (const ComponentInfo::SPtr &);  ; bool notMuted (const std::string &);  This function is used in the msg_* macro to handle string based on string. More...;  ; const SOFA_HELPER_API std::string toString (const Message::Type type);  ; std::ostream & operator<< (std::ostream &s, const Message &m);  ; std::vector< MessageHandler * > getDefaultMessageHandlers ();  ; MessageDispatcherImpl * getMainInstance ();  . Detailed Description; This allow Base object to interact with the messaging system. ; Typedef Documentation. ◆ tokenizer. typedef boost::tokenizer<boost::char_separator<char> > sofa::helper::logging::tokenizer. Function Documentation. ◆ getComponentInfo() [1/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const ComponentInfo::SPtr & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getComponentInfo() [2/3]. ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const sofa::core::objectmodel::Base * ; t). inline . This construct a new ComponentInfo object from a Base object. . ◆ getComponentInfo() [3/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const std::string & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated other get a weak reference . ◆ getMainInstance(). MessageDispatcherImpl* sofa::helper::logging::getMainInstance ; (; ). ◆ notMuted() [1/4]. bool sofa::helper::logging::notMuted ; (; const ComponentInfo::SPtr & ; ). inline . ◆ notMuted() [2/4]. bool sofa::helper::logging::notMuted ; (; const sofa::core::objectmodel::Base * ; t). inline . ◆ notMuted() [3/4]. bool sofa::helper:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:3580,log,logging,3580,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,2,['log'],['logging']
Testability,"ase; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance)=0sofa::core::collision::CollisionAlgorithmprotectedpure virtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html:2256,log,logging,2256,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,1,['log'],['logging']
Testability,ase; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getErrors()sofa::component::playback::CompareTopologyinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTotalError()sofa::component::playback::CompareTopologyinline; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *event) overridesofa::component::playback::CompareTopologyvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChang,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html:5208,log,logging,5208,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html,1,['log'],['logging']
Testability,"ase; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::NormalsFromPoints< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html:2979,log,logging,2979,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,1,['log'],['logging']
Testability,"ase; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::MeshSplittingEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine-members.html:2979,log,logging,2979,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine-members.html,1,['log'],['logging']
Testability,"ase; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::IndexValueMapper< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper-members.html:2979,log,logging,2979,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper-members.html,1,['log'],['logging']
Testability,"ase; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BruteForceDetection, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::BruteForceDetection; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BruteForceDetection() override=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:10080,log,logErrors,10080,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,1,['log'],['logErrors']
Testability,"aseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; Coord2 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataMatrixDeriv2 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataTypes1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataTypes2 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataVecCoord1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; DataVecCoord2 typedefsofa::core::behavior::MixedInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html:3363,log,logging,3363,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,1,['log'],['logging']
Testability,"aseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; PairStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes), StateAccessor)sofa::core::behavior::PairStateAccessor< TDataTypes >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, TDataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes))sofa::core::behavior::PairInteractionForceField< TDataTypes >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PairInteractionForceField() overridesofa::core::behavior::PairInteractionForceField< TDataTypes >protected; ~PairStateAccessor() override=defaultsofa::core::behavior::PairStateAccessor< TDataTypes >protected; ~StateAccessor() override=defaultsofa::core::behavior::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html:15612,log,logErrors,15612,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,1,['log'],['logErrors']
Testability,"aseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; velocityFactorsofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor; vIdsofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; xIdsofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor-members.html:10928,test,testTags,10928,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor-members.html,2,['test'],['testTags']
Testability,"aseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component::shader::LightManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::gl::component::shader::LightManager; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_ambientsofa::gl::component::shader::LightManager; d_componentStatesofa::core::objectmodel::Base; d_drawIsEnabledsofa::gl::component::shader::LightManager; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shadowsEnabledsofa::gl::component::shader::LightManager; d_softShadowsEnabledsofa::gl::component::shader::LightManager; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::LightManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::LightManagervirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::LightManagervirtual; drawShadow(const Visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html:2759,log,logging,2759,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,1,['log'],['logging']
Testability,"aseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Index, sofa::Index)sofa::component::engine::select::IndicesFromValues< T >; SOFA_CLASS(SOFA_TEMPLATE(IndicesFromValues, T), core::DataEngine)sofa::component::engine::select::IndicesFromValues< T >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Value typedefsofa::component::engine::select::IndicesFromValues< T >; VecData typedefsofa::core::objectmodel::Base; VecIndex typedefsofa::component::engine::select::IndicesFromValues< T >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecValue typedefsofa::component::engine::select::IndicesFromValues< T >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~IndicesFromValues() overridesofa::component::engine::select::IndicesFromValues< T >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_indices_from_values-members.html:12669,log,logErrors,12669,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_indices_from_values-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_indices_from_values-members.html,1,['log'],['logErrors']
Testability,"aseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProximityIntersection, DiscreteIntersection)sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(LocalMinDistance, BaseProximityIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &, collision::geometry::Cube &, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:18186,test,testIntersection,18186,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,"aseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html:2536,log,logging,2536,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,1,['log'],['logging']
Testability,"aseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::mechanicalload::SphereForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; contactssofa::component::mechanicalload::SphereForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::SphereForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_bilateralsofa::component::mechanicalload::SphereForceField< DataTypes >; d_colorsofa::component::mechanicalload::SphereForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_contactssofa::component::mechanicalload::SphereForceField< DataTypes >protected; d_dampingsofa::component::mechanicalload::SphereForceField< DataTypes >; d_localRangesofa::component::mechanicalload::SphereForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_sphereCentersofa::component::mechanicalload::SphereForceField< DataTypes >; d_sphereRadiussofa::component::mechanicalload::SphereForceField< DataTypes >; d_stiffnesssofa::component::mechanicalload::SphereForceField< DataTypes >; dampingsofa::component::mechanicalload::SphereForceField< DataTypes >; dataso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html:5192,log,logging,5192,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,1,['log'],['logging']
Testability,"aseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html:3762,log,logging,3762,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,1,['log'],['logging']
Testability,"aseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< _DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_bendingStiffnesssofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_edgeSpringssofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minDistValiditysofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; DataTypes typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; DataVecDeriv typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; Deriv typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; doUpda",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html:6326,log,logging,6326,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,1,['log'],['logging']
Testability,"aseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; DataVecCoord typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; DataVecDeriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Deriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endTimesofa::core::behavior::ProjectiveConstraintSet< DataTypes >; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html:3125,log,logging,3125,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,1,['log'],['logging']
Testability,"aseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::PointsFromIndices< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html:3015,log,logging,3015,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html,1,['log'],['logging']
Testability,"aseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Mem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:3192,test,testing,3192,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,2,['test'],['testing']
Testability,aseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDepthTexture() overridesofa::gl::component::shader::DirectionalLightvirtual; getDirection() overridesofa::gl::component::shader::DirectionalLightinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLightType() overridesofa::gl::component::shader::DirectionalLightinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOpenGLModelViewMatrix()sofa::gl::component::shader::Light; getOpenGLProjectionMatrix()sofa::gl::component::shader::Light; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPosition()sofa::gl::component::shader::Lightinlinevirtual; getShadowFactor()sofa::gl::component::shader::Lightinlinevirtual; getShadowMapSize()sofa::gl::component::shader::Lightvirtual; getShadowTextureUnit()sofa::gl::component::shader::Lightinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html:7256,log,logging,7256,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,1,['log'],['logging']
Testability,"aseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inlineprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLambda() constsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMu() constsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inlinevirtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::For",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html:11073,log,logging,11073,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,1,['log'],['logging']
Testability,aseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFileRepository() overridesofa::component::sceneutility::AddPluginRepositoryinlineprotectedvirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html:4632,log,logging,4632,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html,1,['log'],['logging']
Testability,aseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getCollisionModels()=0sofa::core::collision::Contactpure virtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDetectionOutputs() constsofa::component::collision::response::contact::BaseRayContactinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html:5414,log,logging,5414,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,1,['log'],['logging']
Testability,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getCollisionModels()=0sofa::core::collision::Contactpure virtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html:4927,log,logging,4927,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,1,['log'],['logging']
Testability,"aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >inlinevi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html:7075,log,logging,7075,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,2,['log'],['logging']
Testability,"aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >inlinevirtual; getSEValue() overr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html:7429,log,logging,7429,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,2,['log'],['logging']
Testability,"aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >inlinevirtual; getSEValue() overr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html:7429,log,logging,7429,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,2,['log'],['logging']
Testability,"aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >inlinevirtual; getSEValue() overr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html:7429,log,logging,7429,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,2,['log'],['logging']
Testability,"aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex() overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >inlinevirtual; getSETotalSize() overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; getSEType() const overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >inlinevirtual; getSlave(const std::string &name) constsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html:6959,log,logging,6959,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,1,['log'],['logging']
Testability,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const =0sofa::core::visual::ShaderElementpure virtual; getSEValue() const =0sofa::core::visual::ShaderElementpure virtual; getSEValue()=0sofa::core::visual::ShaderElementpure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html:4430,log,logging,4430,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element-members.html,2,['log'],['logging']
Testability,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglShaderMacroinlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglShaderMacroinlinevirtual; getSEValue() overridesofa::gl::component::shader::OglShaderMacroinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateNa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html:4426,log,logging,4426,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro-members.html,2,['log'],['logging']
Testability,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html:5785,log,logging,5785,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,2,['log'],['logging']
Testability,aseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getId() constsofa::gl::component::shader::OglShaderElementinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSEID() const overridesofa::gl::component::shader::OglShaderElementinlinevirtual; getSESizePerVertex()sofa::core::visual::ShaderElementinlinevirtual; getSETotalSize()sofa::core::visual::ShaderElementinlinevirtual; getSEType() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() const overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSEValue() overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html:5801,log,logging,5801,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable-members.html,16,['log'],['logging']
Testability,"asevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFinalPositions(VecCoord &finalPos, DataVecCoord &xData)sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; getGroup() constsofa::core::behavior::BaseProjectiveConstraintSetinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getModels() overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html:7672,log,logging,7672,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,1,['log'],['logging']
Testability,"ass *destType, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() constsofa::core::objectmodel::Baseinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTypeName() constsofa::core::objectmodel::Base; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=tr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html:3555,log,logging,3555,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,2,['log'],['logging']
Testability,"ass *destType, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() constsofa::core::objectmodel::Baseinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTypeName() constsofa::core::objectmodel::Base; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; Id()sofa::helper::AdvancedTimer::Id< Base >inline; Id(const std::string &s)sofa::helper::AdvancedTimer::Id< Base >inline; Id(const char *s)sofa::helper::AdvancedTimer::Id< Base >inline; Id(unsigned int id)sofa::helper::AdvancedTimer::Id< Base >inline; idsofa::helper::AdvancedTimer::Id< Base >protected; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html:3162,log,logging,3162,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html,2,['log'],['logging']
Testability,"ass S , class Container > . std::string sofa::helper::join ; (; const Container & ; elems, . const S & ; delim . ). Join a container into a single string, separated by the provided delimiter. . ◆ join() [2/3]. template<class InputIt , class S > . std::string sofa::helper::join ; (; InputIt ; first, . InputIt ; last, . const S & ; delim . ). ◆ join() [3/3]. template<class InputIt , class UnaryFunction , class S > . std::string sofa::helper::join ; (; InputIt ; first, . InputIt ; last, . UnaryFunction ; f, . const S & ; delim . ). ◆ logFactoryRegister() [1/2]. template SOFA_HELPER_API void sofa::helper::logFactoryRegister ; (; const std::string & ; baseclass, . const std::string & ; classname, . std::string ; key, . bool ; multi . ). ◆ logFactoryRegister() [2/2]. template<class TKey > . void sofa::helper::logFactoryRegister ; (; const std::string & ; baseclass, . const std::string & ; classname, . TKey ; key, . bool ; multi . ). Log classes registered in the factory. . ◆ logFactoryRegister< std::string >(). template SOFA_HELPER_API void sofa::helper::logFactoryRegister< std::string > ; (; const std::string & ; baseclass, . const std::string & ; classname, . std::string ; key, . bool ; multi . ). ◆ narrow_cast(). template<class T , class U > . constexpr T sofa::helper::narrow_cast ; (; U && ; u). constexpr . Explicit narrow conversion Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) ; Template Parameters. TTarget type ; USource type . Parameters. uValue to cast . ReturnsThe value converted to the target type . ◆ narrow_cast_check(). template<class T , class U > . constexpr T sofa::helper::narrow_cast_check ; (; U ; u). constexpr . Explicit narrow conversion checking that the value is unchanged by the cast. If the value changed, an exception is thrown Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) . ◆ narrow_cast_nocheck(). template<class T , class U > . constexpr T sofa::helper::narrow_cast_nocheck ; (; U && ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:29951,log,logFactoryRegister,29951,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,2,['log'],['logFactoryRegister']
Testability,"ass T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11855,test,testIntersection,11855,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ass real > . constexpr sofa::Size sofa::type::Mat< L, C, real >::total_size = L. staticconstexpr . Constructor details. ◆ Mat() [1/9]. template<sofa::Size L, sofa::Size C, class real > . constexpr sofa::type::Mat< L, C, real >::Mat ; (; ). constexprdefaultnoexcept . ◆ Mat() [2/9]. template<sofa::Size L, sofa::Size C, class real > . constexpr sofa::type::Mat< L, C, real >::Mat ; (; NoInit ; ). inlineexplicitconstexprnoexcept . ◆ Mat() [3/9]. template<sofa::Size L, sofa::Size C, class real > . template<sofa::Size TL = L, sofa::Size TC = C, typename = std::enable_if_t<(TL == 1 && TC != 1) || (TC == 1 && TL != 1)>> . constexpr sofa::type::Mat< L, C, real >::Mat ; (; std::initializer_list< Real > && ; scalars). inlineconstexprnoexcept . Constructs a 1xC matrix (single-row, multiple columns) or a Lx1 matrix (multiple row, single column) and initializes it from a scalar initializer-list. Allows to build a matrix with the following syntax: sofa::type::Mat<1, 3, int> M {1, 2, 3} or sofa::type::Mat<3, 1, int> M {1, 2, 3} Initializer-list must match matrix column size, otherwise an assert is triggered. . ◆ Mat() [4/9]. template<sofa::Size L, sofa::Size C, class real > . constexpr sofa::type::Mat< L, C, real >::Mat ; (; std::initializer_list< std::initializer_list< Real >> && ; rows). inlineconstexprnoexcept . Constructs a matrix and initializes it from scalar initializer-lists grouped by row. Allows to build a matrix with the following syntax: sofa::type::Mat<3, 3, int> M {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}} Initializer-lists must match matrix size, otherwise an assert is triggered. . ◆ Mat() [5/9]. template<sofa::Size L, sofa::Size C, class real > . template<typename... ArgsT, typename = std::enable_if_t< (std::is_convertible_v<ArgsT, Line> && ...) >, typename = std::enable_if_t< (sizeof...(ArgsT) == L && sizeof...(ArgsT) > 1) >> . constexpr sofa::type::Mat< L, C, real >::Mat ; (; ArgsT &&... ; r). inlineconstexprnoexcept . ◆ Mat() [6/9]. template<sofa::Size L, sofa::Size C, clas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:13492,assert,assert,13492,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,2,['assert'],['assert']
Testability,"ass() const overridesofa::simulation::xml::ObjectElementvirtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getIncludeNodeType() constsofa::simulation::xml::BaseElementinline; getName() overridesofa::simulation::xml::BaseElementinlinevirtual; getObject() overridesofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >virtual; getParent() const overridesofa::simulation::xml::BaseElementinlinevirtual; getParentElement() constsofa::simulation::xml::BaseElementinline; getSrcFile() constsofa::simulation::xml::BaseElement; getSrcLine() constsofa::simulation::xml::BaseElement; getType()sofa::simulation::xml::BaseElementinline; getTypedObject()sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; init() overridesofa::simulation::xml::ObjectElementvirtual; initNode() overridesofa::simulation::xml::ObjectElementvirtual; isFileRoot()sofa::simulation::xml::BaseElement; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; NodeFactory typedefsofa::simulation::xml::BaseElement; ObjectElement(const std::string &name, const std::string &type, BaseElement *parent=nullptr)sofa::simulation::xml::ObjectElement; presenceAttribute(const std::string &s)sofa::simulation::xml::BaseElementvirtual; pushNamedObjects(Map &result)sofa::simulation::xml::BaseElementinline; pushObjects(Sequence &result)sofa::simulation::xml::BaseElementinline; removeAttribute(const std::string &attr) overridesofa::simulation::xml::BaseElementvirtual; removeChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; replaceAttributesofa::simulation::xml::BaseElementprotected; setAttribute(const std::string &attr, const std::string &val)sofa::core::objectmodel::BaseObjectDescriptionvirtual; setBaseFile(const std::string &newBaseFile)sofa::simula",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html:3525,log,logError,3525,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html,2,['log'],['logError']
Testability,"ass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntegrationFactor(int, int) constsofa::core::behavior::OdeSolverinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPositionIntegrationFactor() constsofa::core::behavior::OdeSolverinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolutionIntegrationFactor(int) constsofa::core::behavior::OdeSolverinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getVelocityIntegrationFactor() constsofa::core::behavior::OdeSolverinlinevirtual; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver-members.html:4570,log,logging,4570,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver-members.html,1,['log'],['logging']
Testability,"ass< DataTypes, GeometricalTypes >protected; checkTotalMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; Coord typedefsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; copyVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_edgeMasssofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_lumpingsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_massDensitysofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_printMasssofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_showAxisSizesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_showCenterOfGravitysofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_totalMasssofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_vertexMasssofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html:8597,log,logging,8597,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,1,['log'],['logging']
Testability,"assName() const overridesofa::simulation::DofPrintVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; out_sofa::simulation::DofPrintVisitorprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::DofPrintVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; v_sofa::simulation::DofPrintVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor-members.html:4075,test,testTags,4075,api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor-members.html,2,['test'],['testTags']
Testability,"assName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getID(const std::string &name)sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlinestatic; getInstance()sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlinestatic; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLastID()sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlinestatic; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getName(unsigned int id)sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlinestatic; sofa::core::objectmodel::Base::getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() constsofa::core::objectmodel::Baseinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTypeName() constsofa::core::objectmodel::Base; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; IdFactory()sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlineprotected; idsListsofa::helper::AdvancedTimer::Id< Base >::IdFactoryprotected; idsMapsofa::helper::AdvancedTimer::Id< Base >::IdFactoryprotected; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory-members.html:3472,log,logging,3472,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory-members.html,2,['log'],['logging']
Testability,"at this method should only be called if the link was not initialized with the initLink method . ◆ addMessage(). void sofa::core::objectmodel::Base::addMessage ; (; const sofa::helper::logging::Message & ; m); const. ◆ addOutputsToCallback(). void sofa::core::objectmodel::Base::addOutputsToCallback ; (; const std::string & ; name, . std::initializer_list< BaseData * > ; outputs . ). ◆ addTag(). void sofa::core::objectmodel::Base::addTag ; (; Tag ; t). Add a subset qualification to the object. . ◆ addUpdateCallback(). void sofa::core::objectmodel::Base::addUpdateCallback ; (; const std::string & ; name, . std::initializer_list< BaseData * > ; inputs, . std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> ; function, . std::initializer_list< BaseData * > ; outputs . ). ◆ clearLoggedMessages(). void sofa::core::objectmodel::Base::clearLoggedMessages ; (; ); const. ◆ countLoggedMessages(). size_t sofa::core::objectmodel::Base::countLoggedMessages ; (; sofa::helper::logging::Message::TypeSet ; t = sofa::helper::logging::Message::AnyTypes); const. ◆ findData(). BaseData * sofa::core::objectmodel::Base::findData ; (; const std::string & ; name); const. Find a data field given its name. Return nullptr if not found. If more than one field is found (due to aliases), only the first is returned. . ◆ findDataLinkDest(). bool sofa::core::objectmodel::Base::findDataLinkDest ; (; BaseData *& ; ptr, . const std::string & ; path, . const BaseLink * ; link . ). virtual . ◆ findGlobalField(). std::vector< BaseData * > sofa::core::objectmodel::Base::findGlobalField ; (; const std::string & ; name); const. Find data fields given a name: several can be found as we look into the alias map. ; Find fields given a name: several can be found as we look into the alias map. . ◆ findLink(). BaseLink * sofa::core::objectmodel::Base::findLink ; (; const std::string & ; name); const. Find a link given its name. Return nullptr if not found. If more than one link is found (due to",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html:14096,log,logging,14096,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,2,['log'],['logging']
Testability,"ataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getFromModel()sofa::core::Mapping< TIn, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs() overridesofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >virtual; getK() finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getMechTo() overridesofa::core::Mapping< TIn, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo() overridesofa::core::Mapping< TIn, TOut >virtual; getToModel()sofa::core::Mapping< TIn, TOut >; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html:9102,log,logging,9102,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,1,['log'],['logging']
Testability,"ataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::MultiMapping< TIn, TOut >virtual; getFromModels()sofa::core::MultiMapping< TIn, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs() overridesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >virtual; getK() overridesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatInDeriv(const MultiMatrixDerivId id, type::vector< InDataMatrixDeriv * > &v) constsofa::core::MultiMapping< TIn, TOut >inlineprotected; getMatOutDeriv(const MultiMatrixDerivId id, type::vector< OutDataMatrixDeriv * > &v) constsofa::core::MultiMapping< TIn, TOut >inlineprotected; getMechFrom() overridesofa::core::MultiMapping< TIn, TOut >virtual; getMechTo() overridesofa::core::MultiMapping< TIn, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html:13239,log,logging,13239,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,1,['log'],['logging']
Testability,"ataCountersofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _topologysofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; _usagesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html:1639,log,logging,1639,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,2,['log'],['logging']
Testability,"ataCountersofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _topologysofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; _usagesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html:1639,log,logging,1639,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,2,['log'],['logging']
Testability,"ataCountersofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _needUpdatesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _topologysofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; _usagesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html:1639,log,logging,1639,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,2,['log'],['logging']
Testability,"ataTypes >::mstate. protected . ◆ needsUpdate. template<class TDataTypes > . bool sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::needsUpdate. protected . ◆ topology. template<class TDataTypes > . Topology* sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::topology. protected . Constructor details. ◆ LineCollisionModel(). template<class DataTypes > . sofa::component::collision::geometry::LineCollisionModel< DataTypes >::LineCollisionModel. protected . Function details. ◆ canCollideWithElement(). template<class DataTypes > . bool sofa::component::collision::geometry::LineCollisionModel< DataTypes >::canCollideWithElement ; (; sofa::Index ; , . CollisionModel * ; , . sofa::Index ;  . ). overridevirtual . Test if two elements can collide with each other. ; This method should be implemented by models supporting self-collisions to prune tests between adjacent elements.; Default to true. Note that this method assumes that canCollideWith(model2) was already used to test if the collision models can collide. ; Reimplemented from sofa::core::CollisionModel. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::LineCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<class DataTypes > . void sofa::component::collision::geometry::LineCollisionModel< DataTypes >::computeBoundingTree ; (; int ; maxDepth = ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:24806,test,test,24806,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,1,['test'],['test']
Testability,"ataTypes >; dJsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; Esofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; EigenMatrix typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evaluesofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Evectsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; fiberDirectionsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; hasBeenInitializedsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Jsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; lambdasofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; logJsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; MatrixSym typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; operator<<(std::ostream &os, const TetrahedronRestInformation &)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformationfriend; operator>>(std::istream &in, TetrahedronRestInformation &)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformationfriend; Real typedefsofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; restVolumesofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; shapeVectorsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; strainEnergysofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_fa9b34b1e46f0210d547309242ee3a5c7.html:1755,log,logJsofa,1755,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_fa9b34b1e46f0210d547309242ee3a5c7.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_fa9b34b1e46f0210d547309242ee3a5c7.html,1,['log'],['logJsofa']
Testability,ataTypes >protected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObject,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html:9125,log,logging,9125,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,1,['log'],['logging']
Testability,ataTypes >protected; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObject,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine-members.html:6395,log,logging,6395,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine-members.html,2,['log'],['logging']
Testability,"ataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::ConstantForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateFromForcesVector()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; updateFromIndices()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; updateFromTotalForce()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; VecIndex typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor< DataTypes >protec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html:17816,log,logErrors,17816,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,1,['log'],['logErrors']
Testability,"ataTypes, DataTypes), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(NearestPointROI, DataTypes), sofa::core::DataEngine, SOFA_TEMPLATE2(core::behavior::PairStateAccessor, DataTypes, DataTypes))sofa::component::engine::select::NearestPointROI< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::NearestPointROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::engine::select::NearestPointROI< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~NearestPointROI() overridesofa::component::engine::select::NearestPointROI< DataTypes >; ~PairStateAccessor() override=defaultsofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >protected; ~StateAccessor() override=defaultsofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html:15671,log,logErrors,15671,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,1,['log'],['logErrors']
Testability,"ate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computePlane(unsigned int planeIndex)sofa::component::engine::select::PlaneROI< DataTypes >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::PlaneROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html:3284,log,logging,3284,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,1,['log'],['logging']
Testability,"ate(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::playback::ReadStatevirtual; canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadStateinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadState; d_intervalsofa::component::playback::ReadState; d_loopsofa::component::playback::ReadState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rotationsofa::component::playback::ReadState; d_scalePossofa::component::playback::ReadState; d_shiftsofa::component::playback::ReadState; d_translationsofa::component::playback::ReadState; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html:2140,log,logging,2140,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,1,['log'],['logging']
Testability,"ate(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Controller()sofa::component::controller::Controllerprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_handleEventTriggersUpdatesofa::component::controller::Controllerprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html:2146,log,logging,2146,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html,1,['log'],['logging']
Testability,"ate<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  VolumeMapping ();  ; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html:20460,test,testMechanicalState,20460,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,1,['test'],['testMechanicalState']
Testability,"ate<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::SparseMatrixTest< T::LhsScalar >; static void generateRandomSparseMatrix (Eigen::SparseMatrix< T::LhsScalar, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, T::LhsScalar sparsity);  ; static void generateFromTriplets (Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src);  ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOption",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:2661,test,testing,2661,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,2,['test'],['testing']
Testability,"ate<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1479,test,testing,1479,api/master/sofa/html/structsofa_1_1_data_engine__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html,2,['test'],['testing']
Testability,"ateInRange (float rmin, float rmax);  Generates a pseudo-random float value within a specified range. More...;  . Constructor details. ◆ LinearCongruentialRandomGenerator(). sofa::testing::LinearCongruentialRandomGenerator::LinearCongruentialRandomGenerator ; (; unsigned int ; initialSeed). explicit . Function details. ◆ generateInRange() [1/2]. double sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; double ; rmin, . double ; rmax . ). Generates a pseudo-random double value within a specified range. ; This function generates a pseudo-random double value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random double value in the specified range [rmin, rmax].; Example usage: double randomValue = generateInRange(10.0, 20.0);; sofa::testing::LinearCongruentialRandomGenerator::generateInRangedouble generateInRange(double rmin, double rmax)Generates a pseudo-random double value within a specified range.Definition: LinearCongruentialRandomGenerator.cpp:41. ◆ generateInRange() [2/2]. float sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; float ; rmin, . float ; rmax . ). Generates a pseudo-random float value within a specified range. ; This function generates a pseudo-random float value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random float value in the specified range [rmin, rmax].; Example usage: float randomValue = generateInRange(10.f, 20.f);. ◆ generateInUnitRange(). template<class Scalar > . Scalar sofa::testing::LinearCongruentialRandomGenerator::generateInUnitRange ; (; ). inline . Generates a pseudo-random value within the unit interval [0, 1]. ; This templated function generates a pseudo-random value o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html:2076,test,testing,2076,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,2,['test'],['testing']
Testability,"atic std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ alphaBlend. Data<bool> sofa::gl::component::rendering3d::OglModel::alphaBlend. protected . Enable alpha blending. . ◆ blendEq. GLenum sofa::gl::component::rendering3d::OglModel::blendEq. protected . ◆ blendEquation. Data<sofa::helper::OptionsGroup> sofa::gl::component::rendering3d::OglModel::blendEquation. protected . if alpha blending is enabled this specifies how source and destination colors are combined . ◆ blendTransparency. Data<bool> sofa::gl::component::rendering3d::OglModel::blendTransparency. Blend transparent parts. . ◆ canUsePatches. bool sofa::gl::component::rendering3d::OglModel::canUsePatches. protected . ◆ cullFace. Data<int> sofa::gl::component::rendering3d::OglModel::cullFace. protected . Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) . ◆ depthTest. Data<bool> sofa::gl::component::rendering3d::OglModel::depthTest. protected . Enable depth testing. . ◆ destFactor. Data<sofa::helper::OptionsGroup> sofa::gl::component::rendering3d::OglModel::destFactor. protected . if alpha blending is enabled this specifies how the red, green, blue, and alpha destination blending factors are computed . ◆ dfactor. GLenum sofa::gl::component::rendering3d::OglModel::dfactor. protected . ◆ edgesRevision. int sofa::gl::component::rendering3d::OglModel::edgesRevision. protected . ◆ iboEdges. GLuint sofa::gl::component::rendering3d::OglModel::iboEdges. protected . ◆ iboQuads. GLuint sofa::gl::component::rendering3d::OglModel::iboQuads. protected . ◆ iboTriangles. GLuint sofa::gl::component::rendering3d::OglModel::iboTriangles. protected . ◆ initDone. bool sofa::gl::component::rendering3d::OglModel::initDone. protected . ◆ isEnabled. DeprecatedAndRemoved sofa::gl::component::rendering3d::OglModel::isEnabled. protected . ◆ lineSmooth. Data<bool> sofa::gl::component::rendering3d::OglModel::lineSmooth. protected . Enable smooth line rendering. . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html:31823,test,testing,31823,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,1,['test'],['testing']
Testability,"ation::CleanupVisitor:. [legend]. Public Member Functions;  CleanupVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cleanup_visitor.html:1286,test,testTags,1286,api/master/sofa/html/classsofa_1_1simulation_1_1_cleanup_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cleanup_visitor.html,2,['test'],['testTags']
Testability,"ation::MechanicalVPrintWithElapsedTimeVisitor; NO_REPETITION enum valuesofa::simulation::Visitor; out_sofa::simulation::MechanicalVPrintWithElapsedTimeVisitorprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::MechanicalVPrintWithElapsedTimeVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; time_sofa::simulation::MechanicalVPrintWithElapsedTimeVisitorprotected; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; v_sofa::simulation::MechanicalVPrintWithElapsedTimeVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor-members.html:4246,test,testTags,4246,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor-members.html,2,['test'],['testTags']
Testability,"ation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; unsigned int getTotalError ();  ; const std::vector< unsigned int > & getErrors ();  ; unsigned int getNumCompareTopology ();  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_result.html:1744,test,testTags,1744,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_result.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_result.html,1,['test'],['testTags']
Testability,"ation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html:2036,test,testTags,2036,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html,12,['test'],['testTags']
Testability,"ation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html:1611,test,testTags,1611,api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html,4,['test'],['testTags']
Testability,"ation::Visitorinlinevirtual; getValue()sofa::simulation::DeactivationVisitorinline; isThreadSafe() const overridesofa::simulation::DeactivationVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::DeactivationVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::DeactivationVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; setValue(bool _active)sofa::simulation::DeactivationVisitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor-members.html:4204,test,testTags,4204,api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor-members.html,2,['test'],['testTags']
Testability,"atorinline; operator!=(const TCollisionElementIterator< Model2 > &i) constsofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >inline; operator+(int n) constsofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >inline; operator++()sofa::core::BaseCollisionElementIteratorinline; operator++(int)sofa::core::BaseCollisionElementIteratorinline; operator+=(int n)sofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >inline; operator==(const TCollisionElementIterator< Model2 > &i) constsofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >inline; p() constsofa::component::collision::geometry::TPoint< TDataTypes >inline; ParentModel typedefsofa::component::collision::geometry::TPoint< TDataTypes >; pFree() constsofa::component::collision::geometry::TPoint< TDataTypes >inline; TCollisionElementIterator(Model *model=nullptr, Index index=0)sofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >inline; TCollisionElementIterator(Model *model, Index index, VIterator it, VIterator itend)sofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >inline; TCollisionElementIterator(Model *model, VIterator it, VIterator itend)sofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >inline; testLMD(const sofa::type::Vec3 &, double &, double &)sofa::component::collision::geometry::TPoint< TDataTypes >; TPoint(ParentModel *model, sofa::Index index)sofa::component::collision::geometry::TPoint< TDataTypes >inline; TPoint()sofa::component::collision::geometry::TPoint< TDataTypes >inline; TPoint(const core::CollisionElementIterator &i)sofa::component::collision::geometry::TPoint< TDataTypes >inlineexplicit; v() constsofa::component::collision::geometry::TPoint< TDataTypes >inline; valid() constsofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >inline; VIterator typedefsofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_point-members.html:4172,test,testLMD,4172,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_point-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_point-members.html,1,['test'],['testLMD']
Testability,"atrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >inlineprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *mparams, const DataVecCoord &d_x) const overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; ForceField< _DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< _DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() consts",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html:9782,log,logging,9782,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,1,['log'],['logging']
Testability,"atrix< T >inline; epsilon()sofa::testing::NumericTest< T::Real >inlinestatic; infinity()sofa::testing::NumericTest< T::Real >inlinestatic; Inherit typedefsofa::linearalgebra::testing::TestBaseMatrix< T >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< T::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_modelMatrixsofa::linearalgebra::testing::TestBaseMatrix< T >protected; m_testedMatrixsofa::linearalgebra::testing::TestBaseMatrix< T >protected; Matrix typedefsofa::linearalgebra::testing::TestBaseMatrix< T >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< T::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< T::Real >inlinestatic; NbColssofa::linearalgebra::testing::TestBaseMatrix< T >static; NbRowssofa::linearalgebra::testing::TestBaseMatrix< T >static; norm(float a)sofa::testing::NumericTest< T::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< T::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< T::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< T::Real >inline; onSetUp() overridesofa::linearalgebra::testing::TestBaseMatrix< T >inlinevirtual; onTearDown() overridesofa::linearalgebra::testing::TestBaseMatrix< T >inlinevirtual; Real typedefsofa::linearalgebra::testing::TestBaseMatrix< T >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< T::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< T::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< T::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< T::Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix-members.html:853,test,testing,853,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix-members.html,54,"['Test', 'test']","['TestBaseMatrix', 'testing']"
Testability,"atrixDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; OutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; OutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; preTreatment(const OutVecDeriv &f)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; ReadInVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadInVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadOutVecCoord typedefsofa::mapping_test::Mapping_test< _Mapping >; ReadOutVecDeriv typedefsofa::mapping_test::Mapping_test< _Mapping >; Real typedefsofa::mapping_test::Mapping_test< _Mapping >; rootsofa::mapping_test::Mapping_test< _Mapping >; runTest(const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; runTest(const InVecCoord &parent, const OutVecCoord expectedChild)sofa::mapping_test::Mapping_test< _Mapping >inlinevirtual; seedsofa::testing::BaseTeststatic; simulationsofa::mapping_test::Mapping_test< _Mapping >; TEST_applyDJTsofa::mapping_test::Mapping_test< _Mapping >static; TEST_applyJT_matrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_ASSEMBLY_APIsofa::mapping_test::Mapping_test< _Mapping >static; TEST_buildGeometricStiffnessMatrixsofa::mapping_test::Mapping_test< _Mapping >static; TEST_GEOMETRIC_STIFFNESSsofa::mapping_test::Mapping_test< _Mapping >static; TEST_getJssofa::mapping_test::Mapping_test< _Mapping >static; TEST_getKsofa::mapping_test::Mapping_test< _Mapping >static; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Mapping::In::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Mapping::In::Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html:4520,test,testing,4520,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test-members.html,2,['test'],['testing']
Testability,"avesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_fixAllsofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >protected; d_indicessofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >; DataVecDeriv typedefsofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >; Deriv typedefsofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >; doUpdateInternal()sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html:3528,log,logging,3528,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,"between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::simulation. created by the constructor an re-used in the tests . ◆ TEST_applyDJT. template<class _Mapping > . constexpr unsigned char sofa::mapping_test::Mapping_test< _Mappin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8677,test,testing,8677,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,2,['test'],['testing']
Testability,"bj)sofa::simulation::XMLPrintVisitor; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::XMLPrintVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::XMLPrintVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(T obj)sofa::simulation::XMLPrintVisitor; processObjects(Seq &list)sofa::simulation::XMLPrintVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setLevel(int l)sofa::simulation::XMLPrintVisitorinline; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::XMLPrintVisitorvirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; XMLPrintVisitor(const sofa::core::ExecParams *params, std::ostream &out)sofa::simulation::XMLPrintVisitorinline; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor-members.html:4270,test,testTags,4270,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor-members.html,2,['test'],['testTags']
Testability,"bj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ComputeJacobian(unsigned int stiffnessIndex, unsigned int springIndex)sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_compressiblesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_computeZeroLengthsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_drawModesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_firstObjectPointssofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_polynomialDegreesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_polynomialStiffnesssofa::component::solidmechanics::spring::PolynomialSpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html:4708,log,logging,4708,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,1,['log'],['logging']
Testability,"bject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) overridesofa::core::behavior::PairInteractionConstraint< DataTypes >virtual; storeLambda(const ConstraintParams *cParams, Data< VecDeriv > &res1, Data< VecDeriv > &res2, const Data< MatrixDeriv > &j1, const Data< MatrixDeriv > &j2, const sofa::linearalgebra::BaseVector *lambda)sofa::core::behavior::PairInteractionConstraint< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; UnilateralLagrangianConstraint(MechanicalState *object1=nullptr, MechanicalState *object2=nullptr)sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; VecConstCoord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; VecConstDeriv typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; VecConstraintBlockInfo typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; VecCoord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html:21727,log,logErrors,21727,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,1,['log'],['logErrors']
Testability,"bject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKd() constsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >inlinevirtual; getKs() constsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >inlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html:10140,log,logging,10140,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,1,['log'],['logging']
Testability,"bjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; DataTypes typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; DataVecCoord typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; Deriv typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html:3409,log,logging,3409,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,1,['log'],['logging']
Testability,"bjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; ConstDeriv typedefsofa::core::behavior::BaseConstraint; ConstraintBlockInfo typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; constraintIdsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; contactssofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; contactsStatussofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< DataTypes >inlinestatic; customTolerancesofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; DataTypes typedefsofa::core::behavior::PairInteractionConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; DataVecDeriv typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; Deriv typedefsofa::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html:4857,log,logging,4857,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,"bjectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMechanicalState, BaseState)sofa::core::behavior::BaseMechanicalState; sofa::core::BaseState::SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_BASE_CAST_IMPLEMENTATION(BaseMechanicalState)sofa::core::behavior::BaseMechanicalState; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; vAlloc(const ExecParams *params, VecCoordId v, const core::VecIdProperties &properties={})=0sofa::core::behavior::BaseMechanicalStatepure virtual; vAlloc(const ExecParams *params, VecDerivId v, const core::VecIdProperties &properties={})=0sofa::core::behavior::BaseMechanicalStatepure virtual; vAvail(const ExecParams *params, VecCoordId &v)=0sofa::core::behavior::BaseMechanicalStatepure virtual; vAvail(const ExecParams *params, VecDerivId &v)=0sofa::core::behavior::BaseMechanicalStatepure virtual; vDot(const ExecParams *params, ConstVecId a, ConstVecId b)=0sofa::core::behavior::BaseMechanicalStatepure virtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vFree(const ExecParams *params, VecCoordId v)=0sofa::core::behavior::BaseMechanicalStatepure virtual; vFree(const ExecParams *params, VecDerivId v)=0sofa::core::behavior::BaseMechanicalStat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html:15172,log,logErrors,15172,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,1,['log'],['logErrors']
Testability,"bjectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(PrimitiveUpdate, sofa::core::DataEngine)sofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate; sofa::core::DataEngine::SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate; topologysofa::component::topology::container::constant::MeshTopology::PrimitiveUpdateprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::constant::MeshTopology::PrimitiveUpdate; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html:12781,log,logErrors,12781,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update-members.html,1,['log'],['logErrors']
Testability,"bjectmodel::BaseObject)sofa::core::behavior::StateAccessor; PairStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes), StateAccessor)sofa::core::behavior::PairStateAccessor< TDataTypes >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(PairInteractionProjectiveConstraintSet, TDataTypes), BaseInteractionProjectiveConstraintSet, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes))sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; sofa::StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; sofa::core::behavior::StateAccessor::StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseProjectiveConstraintSet() overridesofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; ~PairInteractionProjectiveConstraintSet() overridesofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >protected; ~PairStateAccessor() override=defaultsofa::core::behavior::PairStateAccessor< TD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html:16426,log,logErrors,16426,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,1,['log'],['logErrors']
Testability,bjectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInverse(std::string name)sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >static; getInverse()sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >inline; getInverseMap()sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >inlinestatic; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMState() constsofa::core::behavior::ConstraintCorrection< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t),MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html:12756,log,logging,12756,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,1,['log'],['logging']
Testability,"bjectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshTrianLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshTrianLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::core::loader::MeshLoader; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::loader::MeshLoader; trianglesOnBorderListsofa::component::io::mesh::MeshTrianLoader; updateElements()sofa::core::loader::MeshLoadervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::core::loader::MeshLoadervirtual; updateNormals()sofa::core::loader::MeshLoadervirtual; updatePoints()sofa::core::loader::MeshLoadervirtual; Vec3 typedefsofa::core::loader::MeshLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:17185,log,logErrors,17185,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['log'],['logErrors']
Testability,"bjectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::core::behavior::Constraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::core::behavior::Constraint< DataTypes >; DataVecCoord typedefsofa::core::behavior::Constraint< DataTypes >; DataVecDeriv typedefsofa::core::behavior::Constraint< DataTypes >; Deriv typedefsofa::core::behavior::Constraint< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endTimesofa::core::behavior::Constraint< DataTypes >; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html:3320,log,logging,3320,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,1,['log'],['logging']
Testability,"bjectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_fixedXRotationsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >protected; d_fixedYRotationsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >protected; d_fixedZRotationsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; DataVecDeriv typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; Deriv typedefs",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html:3170,log,logging,3170,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,1,['log'],['logging']
Testability,"bjectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; CompositingVisualLoop()sofa::gl::component::shader::CompositingVisualLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawStep(sofa::core::visual::VisualParams *vparams) overridesofa::gl::component::shader::CompositingVisualLoopvirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html:3108,log,logging,3108,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,1,['log'],['logging']
Testability,"bjectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleModelInRegularGridvirtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_useCurvaturesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; DataTypes typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; Deriv typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html:4034,log,logging,4034,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,1,['log'],['logging']
Testability,"bjectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ContactListener, core::objectmodel::BaseObject)sofa::component::collision::response::contact::ContactListener; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ContactListener() overridesofa::component::collision::response::contact::ContactListener.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html:10954,log,logErrors,10954,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,1,['log'],['logErrors']
Testability,"bjectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind)sofa::core::topology::TopologicalMappingvirtual; getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind)sofa::core::topology::TopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointMappedFromEdge() constsofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMappinginline; getPointMappedFromPoint() constsofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMappinginline; getPointSource() constsofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMappinginline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html:5742,log,logging,5742,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html,1,['log'],['logging']
Testability,"bjectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind)sofa::core::topology::TopologicalMappingvirtual; getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind)sofa::core::topology::TopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html:5432,log,logging,5432,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html,2,['log'],['logging']
Testability,"bjectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getElementMass(sofa::Index) const overridesofa::core::behavior::Mass< DataTypes >virtual; getElementMass(sofa::Index index, linearalgebra::BaseMatrix *m) const overridesofa::core::behavior::Mass< DataTypes >virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getKineticEnergy(const MechanicalParams *mparams, const DataVecDeriv &v) constsofa::core::behavior::Mass< DataTypes >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getMomentum(const MechanicalParams *, const DataVecCoord &, const DataVecDeriv &) constsofa::core::behavior::Mass< DataTypes >virtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getPotentialEnergy(const MechanicalParams *mparams, const DataVecCoord &x)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html:9211,log,logging,9211,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,1,['log'],['logging']
Testability,bjectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getIndex(void) constsofa::component::controller::MechanicalStateController< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMainDirection() constsofa::component::controller::MechanicalStateController< DataTypes >; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState(void) constsofa::component::controller::MechanicalStateController< DataTypes >; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *) overridesofa::component::controlle,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller-members.html:6284,log,logging,6284,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller-members.html,1,['log'],['logging']
Testability,bjectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getData()=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html:4742,log,logging,4742,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,1,['log'],['logging']
Testability,"bjectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntegrationFactor(int inputDerivative, int outputDerivative) const overridesofa::component::odesolver::forward::DampVelocitySolverinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPositionIntegrationFactor() constsofa::core::behavior::OdeSolverinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolutionIntegrationFactor(int) const overridesofa::component::odesolver::forward::DampVelocitySolverinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getVelocityIntegrationFactor() constsofa::core::behavior::OdeSolve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html:4859,log,logging,4859,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,1,['log'],['logging']
Testability,"bjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; disable()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html:3464,log,logging,3464,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,1,['log'],['logging']
Testability,"bjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::utility::TopologicalChangeProcessorinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::topology::utility::TopologicalChangeProcessor; d_edgesToRemovesofa::component::topology::utility::TopologicalChangeProcessor; d_epsilonSnapBordersofa::component::topology::utility::TopologicalChangeProcessor; d_epsilonSnapPathsofa::component::topology::utility::TopologicalChangeProcessor; d_filenamesofa::component::topology::utility::TopologicalChangeProcessor; d_hexahedraToRemovesofa::component::topology::utility::TopologicalChangeProcessor; d_intervalsofa::component::topology::utility::TopologicalChangeProcessor; d_listChangessofa::component::topology::utility::TopologicalChangeProcessor; d_loopsofa::component::topology::utility::TopologicalChangeProcessor; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointsToRemovesofa::component::topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html:2391,log,logging,2391,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,1,['log'],['logging']
Testability,"bjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; d_youngModulussofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; DataVecDeriv typedefsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; Deriv typedefsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; doUpda",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html:6012,log,logging,6012,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,1,['log'],['logging']
Testability,"bjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::ContactManagerinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContactManager()sofa::core::collision::ContactManagerinlineprotected; contactssofa::core::collision::ContactManagerprotected; ContactVector typedefsofa::core::collision::ContactManager; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createContacts(const DetectionOutputMap &outputs)=0sofa::core::collision::ContactManagerpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DetectionOutputMap typedefsofa::core::collision::ContactManager; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html:2443,log,logging,2443,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,1,['log'],['logging']
Testability,"bjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ComplementaryROI()sofa::component::engine::select::ComplementaryROI< DataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::engine::select::ComplementaryROI< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbSetsofa::component::engine::select::ComplementaryROI< DataTypes >protected; d_pointsInROIsofa::component::engine::select::ComplementaryROI< DataTypes >protected; d_positionsofa::component::engine::select::ComplementaryROI< DataTypes >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i-members.html:3017,log,logging,3017,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i-members.html,1,['log'],['logging']
Testability,"bjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html:2485,log,logging,2485,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,1,['log'],['logging']
Testability,"bjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; DataVecCoord typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; Deriv typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endTimesofa::core::behavior::PairInteractionProjectiveConstraintSet< TData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html:3204,log,logging,3204,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,1,['log'],['logging']
Testability,"bjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeForce(const VecDeriv &v, const EdgeInformation &einfo, const typename EdgeInformation::Spring &spring, Coord direction, Real distance)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeLocalJacobian(EdgeInformation &einfo, const Coord &direction, const ForceOutput &force)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeSpringForce(VecDeriv &f, const VecCoord &x, const VecDeriv &v, EdgeInformation &einfo, typename EdgeInformation::Spring &spring)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; DataVecDeriv typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; Deriv typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; edgeInfosofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; f_bboxsofa::core::objectmodel::Base; f_kdsofa::component::solidmechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html:6736,log,logging,6736,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,1,['log'],['logging']
Testability,"bjectvirtual; resetConstraint()sofa::core::behavior::BaseConstraintSetinlinevirtual; setConstraintId(unsigned cId)sofa::core::behavior::BaseConstraintSetinlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintSet; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraintSet() overridesofa::core::behavior::BaseConstraintSetprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html:10717,log,logErrors,10717,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html,1,['log'],['logErrors']
Testability,"ble=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeJacobiansFrom(BaseMechanicalState *mstate, const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *crs)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protected; computeMatrixJacobians(const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *matrixToProject)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; computeMatrixProduct(const MappingGraph &mappingGraph, TMatrix *matrixToProject, linearalgebra::BaseMatrix *globalMatrix)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protectedvirtual; computeProjection(const Eigen::Map< Eigen::SparseMatrix< Block, Eigen::RowMajor > > KMap, const sofa::type::fixed_array< std::shared_ptr< TMatrix >, 2 > J, Eigen::SparseMatrix< Block, Eigen::RowMajor > &JT_K_J)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_areJacobiansConstantsofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html:3753,log,logging,3753,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,1,['log'],['logging']
Testability,"bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::Mat< M, N, Real > & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. . ◆ norm() [1/3]. template<typename _Real = SReal> . static double sofa::testing::NumericTest< _Real >::norm ; (; double ; a). inlinestaticprotected . ◆ norm() [2/3]. template<typename _Real = SReal> . static float sofa::testing::NumericTest< _Real >::norm ; (; float ; a). inlinestaticprotected . ◆ norm() [3/3]. template<typename _Real = SReal> . template<typename T > . static Real sofa::testing::NumericTest< _Real >::norm ; (; T ; a). inlinestaticprotected . ◆ vectorMaxAbs(). template<typename _Real = SReal> . template<class Container > . Real sofa::testing::NumericTest< _Real >::vectorMaxAbs ; (; const Container & ; c). inline . Return the maximum absolute value of a container. . ◆ vectorMaxDiff() [1/3]. template<typename _Real = SReal> . template<class Container1 , class Container2 > . Real sofa::testing::NumericTest< _Real >::vectorMaxDiff ; (; const Container1 & ; c1, . const Container2 & ; c2 . ). inline . Return the maximum difference between two containers. Issues a failure if sizes are different. . ◆ vectorMaxDiff() [2/3]. template<typename _Real = SReal> . templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:4663,test,testing,4663,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,2,['test'],['testing']
Testability,"bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ canCollideWith(). bool sofa::core::CollisionModel::canCollideWith ; (; CollisionModel * ; model). virtual . Test if this model can collide with another model. ; Note that this test is only related to what are the two models (i.e. which type, attached to which object) and not where they are in space. It is used to prune unnecessary or invalid collisions (i.e. vertices of an object should be tested with triangles of another but not the same object).; Depending on selfCollision value if the collision models are attached to the same context (i.e. the same node in the scenegraph). If both models are included in a common ""group"", they won't collide . ◆ canCollideWithElement(). virtual bool sofa::core::CollisionModel::canCollideWithElement ; (; Index ; , . CollisionModel * ; , . Index ;  . ). inlinevirtual . Test if two elements can collide with each other. ; This method should be implemented by models supporting self-collisions to prune tests between adjacent elements.; Default to true. Note that this method assumes that canCollideWith(model2) was already used to test if the collision models can collide. ; Reimplemented in sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >, sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >, sofa::component::collision::geometry::PointCollisionModel< TDataTypes >, sofa::component::collision::geometry::PointCollisionModel< sofa::defaulttype::StdVectorTypes >, and sofa::component::collision::geometry::LineCollisionModel< TDataTypes >. ◆ computeBoundingTree(). virtual void sofa::core::CollisionModel::computeBoundingTree ; (; int ; maxDepth = 0). pure virtual . Create or update the bounding volume hierarchy. ; Implemented in sofa::component::collision::geometry::TriangleOctreeModel, sofa::component::collision::geometry::TriangleModelInRegularGrid, sofa::component::collision::geometry::TriangleCollisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html:25746,test,tests,25746,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,1,['test'],['tests']
Testability,"buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc)=0sofa::core::BaseMappingpure virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix)sofa::core::BaseMappingvirtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; disable()=0sofa::core::BaseMappingpure virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_mapConstraintssofa::core::BaseMapping; f_mapForcessofa::core::BaseMapping; f_mapMassessofa::core::BaseMapping; f_mapMatricessofa::core::BaseMapping; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) consts",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html:3495,log,logging,3495,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,1,['log'],['logging']
Testability,"butes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:2011,test,testing,2011,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,2,['test'],['testing']
Testability,"c Member Functions;  SOFA_CLASS (TopologyChecker, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool checkTopology ();  ; bool checkEdgeTopology ();  ; bool checkEdgeContainer ();  Method to test Edge container concistency. More...;  ; bool checkEdgeToVertexCrossContainer ();  Method to test Edge to vertex cross container concistency. More...;  ; bool checkTriangleTopology ();  } More...;  ; bool checkTriangleContainer ();  Method to test Triangle container concistency. More...;  ; bool checkTriangleToEdgeCrossContainer ();  Method to test triangles to edges cross container concistency. More...;  ; bool checkTriangleToVertexCrossContainer ();  Method to test triangles to vertices cross container concistency. More...;  ; bool checkQuadTopology ();  } More...;  ; bool checkQuadContainer ();  Method to test quad container concistency. More...;  ; bool checkQuadToEdgeCrossContainer ();  Method to test quads to edges cross container concistency. More...;  ; bool checkQuadToVertexCrossContainer ();  Method to test quads to vertices cross container concistency. More...;  ; bool checkTetrahedronTopology ();  } More...;  ; bool checkTetrahedronContainer ();  Method to test Tetrahedron container concistency. More...;  ; bool checkTetrahedronToTriangleCrossContainer ();  Method to test Tetrahedron to triangles cross container concistency. More...;  ; bool checkTetrahedronToEdgeCrossContainer ();  Method to test Tetrahedron to edges cross container concistency. More...;  ; bool checkTetrahedronToVertexCrossContainer ();  Met",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:4374,test,test,4374,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,"c(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(OdeSolver, objectmodel::BaseObject)sofa::core::behavior::OdeSolver; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(StaticSolver, sofa::core::behavior::OdeSolver, sofa::core::behavior::LinearSolverAccessor)sofa::component::odesolver::backward::StaticSolver; solve(const sofa::core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) overridesofa::component::odesolver::backward::StaticSolvervirtual; sofa::core::behavior::OdeSolver::solve(const core::ExecParams *params, SReal dt)sofa::core::behavior::OdeSolverinlinevirtual; SPtr typedefsofa::core::objectmodel::Base; squared_increment_norms() const -> const std::vector< SReal > &sofa::component::odesolver::backward::StaticSolverinline; squared_residual_norms() const -> const std::vector< SReal > &sofa::component::odesolver::backward::StaticSolverinline; StaticSolver()sofa::component::odesolver::backward::StaticSolver; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OdeSolver() overridesofa::core::behavior::OdeSolverprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html:12486,log,logErrors,12486,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,1,['log'],['logErrors']
Testability,"c::TetrahedronSetTopologyModifierinlineprotected; TetraID typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TriangleID typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetTopologyModifier; TriangleSetTopologyModifier()sofa::component::topology::container::dynamic::TriangleSetTopologyModifierinlineprotected; TrianglesInTetrahedron typedefsofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~TetrahedronSetTopologyModifier() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyModifierinlineprotected; ~TopologyModifier() overridesofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html:28499,log,logErrors,28499,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,1,['log'],['logErrors']
Testability,"cTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1445,Test,Testing,1445,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['Test'],['Testing']
Testability,"calMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Sphere & ; e2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [19/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [20/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [21/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [22/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testValidity() [1/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Line & ; l, . const type::Vec3 & ; PQ . ); const. ◆ testValidity() [2/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Point & ; p, . const type::Vec3 & ; PQ . ); const. ◆ testValidity() [3/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Sphere & ; , . const type::Vec3 & ;  . ); const. inline . These methods check the validity of a found intersection. According to the local configuration around the found intersected primitive, we build a ""Region Of Interest"" ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:37921,test,testIntersection,37921,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"calMinDistance; computeIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &, OutputVector *)=deletesofa::component::collision::detection::intersection::LocalMinDistance; computeIntersection(collision::geometry::Ray &, collision::geometry::Sphere &, OutputVector *)=deletesofa::component::collision::detection::intersection::LocalMinDistance; computeIntersection(collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=deletesofa::component::collision::detection::intersection::LocalMinDistance; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; coneFactorsofa::component::collision::detection::intersection::LocalMinDistance; contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_alarmDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_angleConesofa::component::collision::detection::intersection::LocalMinDistance; d_componentStatesofa::core::objectmodel::Base; d_coneFactorsofa::component::collision::detection::intersection::LocalMinDistance; d_contactDistancesofa::component::collision::detection::intersection::BaseProximityIntersection; d_filterIntersectionsofa::component::collision::detection::intersection::LocalMinDistance; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useLMDFilterssofa::component::collision::detection::intersection::LocalMinDistance; DiscreteIntersection()sofa::component::collision::detection::interse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:7616,log,logging,7616,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['log'],['logging']
Testability,"calStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualDrawVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *node, core::objectmodel::BaseObject *o) overridesofa::simulation::VisualDrawVisitorvirtual; processVisualModel(simulation::Node *node, core::visual::VisualModel *vm) overridesofa::simulation::VisualDrawVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualDrawVisitor(core::visual::VisualParams *params)sofa::simulation::VisualDrawVisitorinline; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor-members.html:4403,test,testTags,4403,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor-members.html,2,['test'],['testTags']
Testability,"called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; void setDt (SReal _dt);  ; SReal getDt ();  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html:1850,test,testTags,1850,api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html,2,['test'],['testTags']
Testability,"ccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PlaneForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::PlaneForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateStiffness(const VecCoord &x)sofa::component::mechanicalload::PlaneForceField< DataTypes >virtual; VecCoord typedefsofa::component::mechanicalload::PlaneForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::PlaneForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavior::SingleStateAccessor< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html:17221,log,logErrors,17221,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html,1,['log'],['logErrors']
Testability,"ce Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::helper::io Namespace Reference . This allow MeshTrian to interact with the messaging system. ; More... Classes; class  BaseFileAccessCreator;  ; class  FileAccessCreator;  ; class  BaseFileAccess;  ; class  File;  ; class  FileAccess;  ; class  Image;  ; struct  DDSHeader;  ; class  ImageDDS;  ; class  ImageRAW;  ; class  Mesh;  ; class  MeshGmsh;  ; class  MeshOBJ;  ; class  MeshTopologyLoader;  ; class  SphereLoaderDataHook;  Inherit this class to load data from sphere description. More...;  ; class  SphereLoader;  ; class  STBImageCreators;  ; class  STBImage;  ; class  TriangleLoader;  ; class  XspLoaderDataHook;  Inherit this class to load data from a Xsp file. More...;  ; class  XspLoader;  . Variables; Creator< Image::FactoryImage, ImageDDS > ImageDDSClass (""dds"");  ; Creator< Mesh::FactoryMesh, MeshGmsh > MeshGmshClass (""gmsh"");  ; Creator< Mesh::FactoryMesh, MeshOBJ > MeshOBJClass (""obj"");  ; Creator< Mesh::FactoryMesh, MeshOBJ > MeshOBJClass2 (""OBJ"");  ; const auto stbImageCreation = STBImageCreators();  . Detailed Description; This allow MeshTrian to interact with the messaging system. ; For SOFA_HELPER_API.; This register the TriangleLoader object to the logging system so that we can use msg_*(this); For size_t For std::string ; Variable Documentation. ◆ ImageDDSClass. Creator<Image::FactoryImage,ImageDDS> sofa::helper::io::ImageDDSClass(""dds"") ; (; ""dds"" ; ). ◆ MeshGmshClass. Creator<Mesh::FactoryMesh, MeshGmsh> sofa::helper::io::MeshGmshClass(""gmsh"") ; (; ""gmsh"" ; ). ◆ MeshOBJClass. Creator<Mesh::FactoryMesh,MeshOBJ> sofa::helper::io::MeshOBJClass(""obj"") ; (; ""obj"" ; ). ◆ MeshOBJClass2. Creator<Mesh::FactoryMesh, MeshOBJ> sofa::helper::io::MeshOBJClass2(""OBJ"") ; (; ""OBJ"" ; ). ◆ stbImageCreation. const auto sofa::helper::io::stbImageCreation = STBImageCreators(). sofahelperio; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1io.html:1339,log,logging,1339,api/master/sofa/html/namespacesofa_1_1helper_1_1io.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1io.html,2,['log'],['logging']
Testability,"ce between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< T::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ m_modelMatrix. template<class T > . sofa::type::Mat<NbRows, NbCols, Real> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_modelMatrix. protected . ◆ m_testedMatrix. template<class T > . std::unique_ptr<sofa::linearalgebra::BaseMatrix> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_testedMatrix {nullptr}. protected . ◆ NbCols. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbCols = T::NbCols. staticconstexpr . ◆ NbRows. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbRows = T::NbRows. staticconstexpr . Function details. ◆ checkAddBloc(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkAddBloc ; (; sofa::linearalgebra::BaseMatrix::Index ; posRow, . sofa::linearalgebra::BaseMatrix::Index ; posCol . ). inline . A 3x3 matrix is added into the matrix using the corresponding function overload This assumes the matrix is big enough to contain a 3x3 matrix at the requested position Parameters. posRowrow index at which the 3x3 matrix is added ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html:3504,test,testing,3504,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,3,"['Test', 'test']","['TestBaseMatrix', 'testing']"
Testability,ce; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Referenc,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:162862,log,logging,162862,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"ceField< TDataTypes1, TDataTypes2 >virtual; sofa::core::behavior::MixedInteractionForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >virtual; addForce2(DataVecDeriv1 &f1, DataVecDeriv2 &f2, const DataVecCoord1 &p1, const DataVecCoord2 &p2, const DataVecDeriv1 &v1, const DataVecDeriv2 &v2)sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::BaseInteractionForceFieldinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bDrawsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html:2730,log,logging,2730,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html,1,['log'],['logging']
Testability,"ceFilePos() constsofa::core::objectmodel::Base; getElementMass(sofa::Index index) const overridesofa::component::mass::UniformMass< DataTypes >virtual; getElementMass(sofa::Index index, linearalgebra::BaseMatrix *m) const overridesofa::component::mass::UniformMass< DataTypes >virtual; getFileMass() constsofa::component::mass::UniformMass< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const core::MechanicalParams *mparams, const DataVecDeriv &d_v) const overridesofa::component::mass::UniformMass< DataTypes >virtual; sofa::core::behavior::Mass::getKineticEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMass() constsofa::component::mass::UniformMass< DataTypes >inline; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const core::MechanicalParams *mparams, const DataVecCoord &x, const DataVecDeriv &v) const overridesofa::component::mass::UniformMass< DataTypes >virtual; getMomentum(const MechanicalParams *params, const DataVecCoord &d_x, const DataVecDeriv &d_v) constsofa::component::mass::UniformMass< DataTypes >virtual; getMomentum(const MechanicalParams *params, const DataVecCoord &d_x, const DataVecDeriv &d_v) constsofa::component::mass::UniformMass< DataTypes >virtual; sofa::core::behavior::Mass::getMomentum(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getMomentumRigid3DImpl(const Mechanic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html:11716,log,logging,11716,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,1,['log'],['logging']
Testability,"ceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MergeSets, T), core::DataEngine)sofa::component::engine::generate::MergeSets< T >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecIndex typedefsofa::component::engine::generate::MergeSets< T >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MergeSets() overridesofa::component::engine::generate::MergeSets< T >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets-members.html:12512,log,logErrors,12512,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets-members.html,1,['log'],['logErrors']
Testability,"cending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void setSceneName (std::string &n);  ; void setRecordContainers (bool b);  ; void setRecordShellContainersV (bool b);  ; void setCreateInMapping (bool b);  ; void setCounter (int c);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology_creator.html:2204,test,testTags,2204,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology_creator.html,1,['test'],['testTags']
Testability,"changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Contact typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; contactssofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Coord typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionForceField< DataTypes >; DataTypes1 typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; DataTypes2 typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; DataVecCoord typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; DataVecDeriv typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Deriv typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html:5056,log,logging,5056,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,1,['log'],['logging']
Testability,"chanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >inlineprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoissonRatioInElement(sofa::Size elementId) constsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >inlinevirtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html:12239,log,logging,12239,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,1,['log'],['logging']
Testability,"chanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTetrahedronCreation(const sofa::type::vector< Index > &tetrahedronAdded, const sofa::type::vector< core::topology::BaseMeshTopology::Tetrahedron > &, const sofa::type::vector< sofa::type::vector< Index > > &, const sofa::type::vector< sofa::type::vector< SReal > > &)sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:2983,log,logging,2983,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['log'],['logging']
Testability,"chanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *) overridesofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyVelocityVisitorinlinevirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; vsofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyVelocityVisitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_velocity_visitor-members.html:10826,test,testTags,10826,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_velocity_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_velocity_visitor-members.html,2,['test'],['testTags']
Testability,"chanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; computeRotationLarge(Transformation &r, const Vector &p, const Index &a, const Index &b, const Index &c)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >inlineprotected; computeStiffnessMatrix(StiffnessMatrix &S, StiffnessMatrix &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; computeStrainDisplacement(StrainDisplacement &J, Coord a, Coord b, Coord c, Coord d)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >inlineprotected; computeVonMisesStress()sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_assemblingsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeVonMisesStresssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; d_drawHeterogeneousTetrasofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; d_gatherBsizesofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; d_gatherPtsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; d_initialPointssofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; d_localStiffnessFactorsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_metho",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html:12401,log,logging,12401,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class TTriangle< DataTypes >;  . Attribute details. ◆ d_bothSide. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::d_bothSide. activate collision on both side of the triangle model . ◆ d_computeNormals. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::d_computeNormals. set to false to disable computation of triangles normal . ◆ d_useCurvature. template<class TDataTypes > . Data<bool> sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::d_useCurvature. use the curvature of the mesh to avoid some self-intersection test . ◆ l_topology. template<class TDataTypes > . SingleLink<TriangleCollisionModel<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::l_topology. Link to be set to the topology container in the component graph. . ◆ m_internalTriangles. template<class TDataTypes > . sofa::core::topology::BaseMeshTopology::SeqTriangles sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::m_internalTriangles. protected . Internal Buffer of triangles to combine quads splitted and other triangles. . ◆ m_mstate. template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >::m_mstate. protected . Pointer to the corresponding MechanicalState. . ◆ m_needsUpdate. template<class TDataTypes > . bool sofa::component::collision::geometry::TriangleCol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:23830,test,test,23830,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['test'],['test']
Testability,"checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const Coord_t< In > &a, const Coord_t< In > &b)sofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_colorsofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showObjectScalesofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >; Direction typedefsofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >; disable() overridesofa::core::Mapping< TIn, TOut >virtual; doUpdateInternal()sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html:5755,log,logging,5755,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,1,['log'],['logging']
Testability,cher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::activate ; (; ). ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::deactivate ; (; ). ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::getMessages ; (; ); const. ◆ process(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ reset(). void sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::reset ; (; void ; ). sofahelperloggingloggingmessagehandlerLoggin,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:1689,Log,LoggingMessageHandler,1689,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,1,['Log'],['LoggingMessageHandler']
Testability,"ck::ReadStatevirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::CompareStateinlinestatic; sofa::component::playback::ReadState::canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadStateinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CompareState()sofa::component::playback::CompareStateprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadState; d_intervalsofa::component::playback::ReadState; d_loopsofa::component::playback::ReadState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rotationsofa::component::playback::ReadState; d_scalePossofa::component::playback::ReadState; d_shiftsofa::component::playback::ReadState; d_translationsofa::component::playback::ReadState; dofError_Vsofa::component::playback::CompareStateprotected; dofError_Xsofa::component::playback::CompareStateprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::playback::CompareStatevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html:2449,log,logging,2449,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,1,['log'],['logging']
Testability,"ck< TDataTypes >virtual; computeWrench(const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) overridesofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeWrench(const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world)sofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeWrench(const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world)sofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; constraintSolversofa::component::haptics::LCPForceFeedback< TDataTypes >protected; contextsofa::component::haptics::ForceFeedback; Coord typedefsofa::component::haptics::LCPForceFeedback< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activatesofa::component::haptics::ForceFeedback; d_componentStatesofa::core::objectmodel::Base; d_derivRotationssofa::component::haptics::LCPForceFeedback< TDataTypes >; d_forceCoefsofa::component::haptics::LCPForceFeedback< TDataTypes >; d_indicesofa::component::haptics::ForceFeedback; d_localHapticConstraintAllFramessofa::component::haptics::LCPForceFeedback< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_solverMaxItsofa::component::haptics::LCPForceFeedback< TDataTypes >; d_solverTimeoutsofa::component::haptics::LCPForceFeedback< TDataTypes >; DataTypes typedefsofa::component::haptics::LCPForceFeedback< TDataTypes >; Deriv typedefsofa::component::haptics::LCPForceFeedback< TDataTypes >; doComputeForce(const VecCoord &state, VecDeriv &forces)sofa::component::haptics::LCPForceFeedback< TDataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html:3999,log,logging,3999,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,1,['log'],['logging']
Testability,"ckHexahedronTopology ; (; ). } ; Hexahedron methods { Full method to check Hexahedron Topology. Will call See alsocheckHexahedronContainer, . checkHexahedronToQuadCrossContainer . checkHexahedronToEdgeCrossContainer and . checkHexahedronToVertexCrossContainer . ◆ checkHexahedronToQuadCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToQuadCrossContainer ; (; ). Method to test Hexahedron to quads cross container concistency. . ◆ checkHexahedronToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToVertexCrossContainer ; (; ). Method to test Hexahedron to vertices cross container concistency. . ◆ checkQuadContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadContainer ; (; ). Method to test quad container concistency. . ◆ checkQuadToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToEdgeCrossContainer ; (; ). Method to test quads to edges cross container concistency. . ◆ checkQuadTopology(). bool sofa::component::topology::utility::TopologyChecker::checkQuadTopology ; (; ). } ; Quad methods { Full method to check Quad Topology. Will call See alsocheckQuadContainer, . checkQuadToEdgeCrossContainer and . checkQuadToVertexCrossContainer . ◆ checkQuadToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToVertexCrossContainer ; (; ). Method to test quads to vertices cross container concistency. . ◆ checkTetrahedronContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronContainer ; (; ). Method to test Tetrahedron container concistency. . ◆ checkTetrahedronToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronToEdgeCrossContainer ; (; ). Method to test Tetrahedron to edges cross container concistency. . ◆ checkTetrahedronTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronTopolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:19013,test,test,19013,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,"ckInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TriangleID typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; triangleNumericalIntegrationsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; TriangleSetGeometryAlgorithms()sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >inlineprotected; TrianglesInTetrahedron typedefsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >inline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html:41868,log,logErrors,41868,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,1,['log'],['logErrors']
Testability,"cker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createQuadsAroundEdgeArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createQuadsAroundVertexArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createQuadSetArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_ch",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4968,log,logging,4968,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['log'],['logging']
Testability,"cker::~TopologyChecker ; (; ). overrideprotected . Function details. ◆ checkEdgeContainer(). bool sofa::component::topology::utility::TopologyChecker::checkEdgeContainer ; (; ). Method to test Edge container concistency. . ◆ checkEdgeTopology(). bool sofa::component::topology::utility::TopologyChecker::checkEdgeTopology ; (; ). Edge methods { Full method to check Edge Topology. Will call See alsocheckEdgeContainer and . checkEdgeToVertexCrossContainer . ◆ checkEdgeToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkEdgeToVertexCrossContainer ; (; ). Method to test Edge to vertex cross container concistency. . ◆ checkHexahedronContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronContainer ; (; ). Method to test Hexahedron container concistency. . ◆ checkHexahedronToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToEdgeCrossContainer ; (; ). Method to test Hexahedron to edges cross container concistency. . ◆ checkHexahedronTopology(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronTopology ; (; ). } ; Hexahedron methods { Full method to check Hexahedron Topology. Will call See alsocheckHexahedronContainer, . checkHexahedronToQuadCrossContainer . checkHexahedronToEdgeCrossContainer and . checkHexahedronToVertexCrossContainer . ◆ checkHexahedronToQuadCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToQuadCrossContainer ; (; ). Method to test Hexahedron to quads cross container concistency. . ◆ checkHexahedronToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToVertexCrossContainer ; (; ). Method to test Hexahedron to vertices cross container concistency. . ◆ checkQuadContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadContainer ; (; ). Method to test quad container concistency. . ◆ checkQuadToEdgeCrossContainer().",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:17885,test,test,17885,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,"class T > ; void processObject (T obj);  ; template<class Seq > ; void processObjects (Seq &list, const char *name);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html:1839,test,testTags,1839,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,2,['test'],['testTags']
Testability,"clesWithTagsVisitor; rayDirectionsofa::simulation::mechanicalvisitor::MechanicalPickParticlesWithTagsVisitor; rayOriginsofa::simulation::mechanicalvisitor::MechanicalPickParticlesWithTagsVisitor; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; tagssofa::simulation::mechanicalvisitor::MechanicalPickParticlesWithTagsVisitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_with_tags_visitor-members.html:11487,test,testTags,11487,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_with_tags_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_with_tags_visitor-members.html,2,['test'],['testTags']
Testability,"collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [12/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::Sphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [16/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Sphere & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [18/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Sphere & ; e2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:36159,test,testIntersection,36159,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; t1, . collision::geometry::Triangle & ; t2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [16/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [17/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; , . collision::geometry::Sphere & ;  . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [18/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Sphere & ; e1, . collision::geometry::Sphere & ; e2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ testIntersection() [19/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [20/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Po",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:36637,test,testIntersection,36637,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Cube &, collision::geometry::Cube &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; testValidity(collision::geometry::Sphere &, const type::Vec3 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:21416,test,testIntersection,21416,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,"collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistancevirtual; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Triangle &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Sphere &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersection(collision::geometry::Ray &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::LocalMinDistance; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; testValidity(collision::geometry::Sphere &, const type::Vec3 &) constsofa::component::collision::detection::intersection::LocalMinDistanceinline; testValidity(collision::geometry::Point &, const type::Vec3 &) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:21568,test,testIntersection,21568,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['test'],['testIntersection']
Testability,component Namespace Reference; SOFA API: sofa::gui::component::performer Namespace Reference; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulatio,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:205300,log,logging,205300,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DiscreteIntersection()sofa::component::collision::detection::intersection::DiscreteIntersectionprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:4592,log,logging,4592,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['log'],['logging']
Testability,"component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [6/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [8/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [12/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Ray & ; ray1, . collision::geometry::Sphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:34727,test,testIntersection,34727,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15613,test,testIntersection,15613,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >protected; computeMotionCorrection(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, core::MultiVecDerivId f) overridesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; ConstraintCorrection(MechanicalState< DataTypes > *ms=nullptr)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlineexplicitprotected; Coord typedefsofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_compliancesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_correctionPositionFactorsofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >; d_correctionVelocityFactorsofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >; d_defaultCompliancesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useOdeSolverIntegrationFactorssofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >; d_verbosesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >; DataTypes typede",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html:6183,log,logging,6183,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,1,['log'],['logging']
Testability,"component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const InCoord &a, const InCoord &b)sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; createTarget(unsigned index, const InCoord &position, Real distance)sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; d_colorsofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_indicessofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_restDistancessofa::component::mapping",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html:5847,log,logging,5847,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,1,['log'],['logging']
Testability,"component::mechanicalload::ConstantForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeForceFromForcesVector(const VecDeriv &forces)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; computeForceFromSingleForce(const Deriv singleForce)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; computeForceFromTotalForce(const Deriv &totalForce)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; ConstantForceField()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::mechanicalload::ConstantForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_forcesofa::component::mechanicalload::ConstantForceField< DataTypes >; d_forcessofa::component::mechanicalload::ConstantForceField< DataTypes >; d_indexFromEndsofa::component::mechanicalload::ConstantForceField< DataTypes >; d_indicessofa::component::mechanicalload::ConstantForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showArrowSizesofa::component::mechanicalload::ConstantForceField< DataTypes >; d_totalForcesofa::component::mechanicalload::ConstantForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; DataVecDeriv typedefsofa::component::mechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html:5870,log,logging,5870,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,1,['log'],['logging']
Testability,"component::rendering2d::OglColorMapinline; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefault()sofa::gl::component::rendering2d::OglColorMapstatic; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEvaluator(Real vmin, Real vmax)sofa::gl::component::rendering2d::OglColorMapinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbColors()sofa::gl::component::rendering2d::OglColorMapinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChange",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html:6447,log,logging,6447,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,1,['log'],['logging']
Testability,"component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inline; getEdgeNumericalIntegrationDescriptor()sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOppositePoint(PointID ind_p, const Edge &indices, Real coord_p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getRestEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html:15981,log,logging,15981,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inline; getEdgeNumericalIntegrationDescriptor()sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getQuadVertexCoordinates(const QuadID i, Coord[4]) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; getRestEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html:11941,log,logging,11941,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inline; getEdgeNumericalIntegrationDescriptor()sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getRestEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html:10922,log,logging,10922,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; computeIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Tetrahedron &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; testIntersection(collision::geometry::Ray &, collision::geometry::Tetrahedron &)=deletesofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; TetrahedronDiscreteIntersection(DiscreteIntersection *intersection)sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection; ~BaseIntersector()sofa::core::collision::BaseIntersectorinline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html:2019,test,testIntersection,2019,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection-members.html,3,['test'],['testIntersection']
Testability,"const DataMatrixDeriv_t< In2 > * > &v) const;  ; void getVecOutCoord (const MultiVecCoordId id, type::vector< DataVecCoord_t< Out > * > &v) const;  ; void getConstVecOutCoord (const ConstMultiVecCoordId id, type::vector< const DataVecCoord_t< Out > * > &v) const;  ; void getVecOutDeriv (const MultiVecDerivId id, type::vector< DataVecDeriv_t< Out > * > &v) const;  ; void getConstVecOutDeriv (const ConstMultiVecDerivId id, type::vector< const DataVecDeriv_t< Out > * > &v) const;  ; void getMatOutDeriv (const MultiMatrixDerivId id, type::vector< DataMatrixDeriv_t< Out > * > &v) const;  ; void getConstMatOutDeriv (const ConstMultiMatrixDerivId id, type::vector< const DataMatrixDeriv_t< Out > * > &v) const;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html:20476,test,testMechanicalState,20476,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,1,['test'],['testMechanicalState']
Testability,"const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; MechanicalObject typedefsofa::AffinePatch_sofa_test< _DataTypes >; MeshSpringForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; norm(float a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _DataTypes::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _DataTypes::Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; patchStructsofa::AffinePatch_sofa_test< _DataTypes >; Quat typedefsofa::AffinePatch_sofa_test< _DataTypes >; Real typedefsofa::AffinePatch_sofa_test< _DataTypes >; rootsofa::AffinePatch_sofa_test< _DataTypes >; seedsofa::testing::BaseTeststatic; setRotation(type::Mat< 3, 3, Real > rotationMatrix)sofa::AffinePatch_sofa_test< _DataTypes >inline; setTranslation(int x, int y, int z)sofa::AffinePatch_sofa_test< _DataTypes >inline; SetUp() overridesofa::AffinePatch_sofa_test< _DataTypes >inline; simulationsofa::AffinePatch_sofa_test< _DataTypes >; testedRotationsofa::AffinePatch_sofa_test< _DataTypes >; testedTranslationsofa::AffinePatch_sofa_test< _DataTypes >; TetraForceField typedefsofa::AffinePatch_sofa_test< _DataTypes >; Vec3 typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecCoord typedefsofa::AffinePatch_sofa_test< _DataTypes >; VecDeriv typedefsofa::AffinePatch_sofa_test< _DataTypes >; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _DataTypes::Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _DataTypes::Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::N",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html:2475,test,testing,2475,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test-members.html,2,['test'],['testing']
Testability,"const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:14169,test,testIntersection,14169,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['test'],['testIntersection']
Testability,"const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BScalar ; , . int ; _BOptions, . typename _BStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<class T > . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; typename _DstScalar ; , . int ; _DstOptions, . typename _DstStorageIndex ; , . typename _SrcScalar ; , . int ; _SrcOptions, . typename _SrcStorage",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:5605,test,testing,5605,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,3,"['Test', 'test']","['TestSparseMatrixProduct', 'testing']"
Testability,"const core::ExecParams *params, sofa::core::ConstMultiVecId v, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html:1657,test,testTags,1657,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html,2,['test'],['testTags']
Testability,"const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [13/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [14/14]. template<class T > . int sofa::component::collision::detection::intersection::MeshMinProximityIntersection::computeIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:9925,test,testIntersection,9925,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(SofaDefaultPathSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::SofaDefaultPathSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SofaDefaultPathSetting()sofa::component::setting::SofaDefaultPathSettingprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html:10290,log,logErrors,10290,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,1,['log'],['logErrors']
Testability,"const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; collisionDetection(const sofa::core::ExecParams *params) constsofa::simulation::DefaultAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const sofa::core::ExecParams *params) constsofa::simulation::DefaultAnimationLoopprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; d_parallelODESolvingsofa::simulation::DefaultAnimationLoop; DefaultAnimationLoop(simulation::Node *gnode=nullptr)sofa::simulation::DefaultAnimationLoopexplicitprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endIntegration(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html:2969,log,logging,2969,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,2,['log'],['logging']
Testability,"const sofa::core::ExecParams *params, std::ostream &out);  ;  ~WriteStateVisitor () override;  ; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html:1554,test,testTags,1554,api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html,2,['test'],['testTags']
Testability,"const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(ProximityROI, DataTypes), core::DataEngine)sofa::component::engine::select::ProximityROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::select::ProximityROI< DataTypes >; Vec6 typedefsofa::component::engine::select::ProximityROI< DataTypes >; VecCoord typedefsofa::component::engine::select::ProximityROI< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~ProximityROI() overridesofa::component::engine::select::ProximityROI< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html:13601,log,logErrors,13601,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html,1,['log'],['logErrors']
Testability,"constexpr unsigned char TEST_buildGeometricStiffnessMatrix = 16;  testing buildGeometricStiffnessMatrix More...;  ; static constexpr unsigned char TEST_ASSEMBLY_API = TEST_getJs | TEST_getK;  testing functions used in assembly API getJS getKS More...;  ; static constexpr unsigned char TEST_GEOMETRIC_STIFFNESS = TEST_applyDJT | TEST_getK | TEST_buildGeometricStiffnessMatrix;  testing functions used in assembly API getJS getKS More...;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  Mapping_test ();  ;  Mapping_test (std::string fileName);  ; virtual OutDeriv difference (const OutCoord &a, const OutCoord &b);  ; virtual OutVecDeriv difference (const OutVecDeriv &a, const OutVecDeriv &b);  ; virtual OutVecDeriv preTreatment (const OutVecDeriv &f);  ; virtual bool runTest (const InVecCoord &parentInit, const OutVecCoord &childInit, const InVecCoord &parentNew, const OutVecCoord &expectedChildNew);  ; virtual bool runTest (const InVecCoord &parent, const OutVecCoord expectedChild);  ;  ~Mapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSpars",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:5386,test,testing,5386,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,4,['test'],['testing']
Testability,"constraint::lagrangian::solver::GenericConstraintSolverprotected; SOFA_CLASS(GenericConstraintSolver, ConstraintSolverImpl)sofa::component::constraint::lagrangian::solver::GenericConstraintSolver; sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; solveConstraint(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())sofa::core::behavior::ConstraintSolvervirtual; solveSystem(const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; solveSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; sorsofa::component::constraint::lagrangian::solver::GenericConstraintSolver; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tolerancesofa::component::constraint::lagrangian::solver::GenericConstraintSolver; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConstraintSolver() overridesofa::core::behavior::ConstraintSolverprotected; ~ConstraintSolverImpl() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; ~GenericConstraintSolver() overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:18550,log,logErrors,18550,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['log'],['logErrors']
Testability,constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getElemEdgeIndex(sofa::Index index) constsofa::component::collision::geometry::LineCollisionModel< TDataTypes >inlinevirtual; getEnumType() constsofa::core::CollisionModelinline; getExternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getFirst()sofa::core::CollisionModel; getGroups() constsofa::core::CollisionModelinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInternalChildren(Index) constsofa::core::CollisionModelinlinevirtual; getLast()sofa::core::CollisionModel; getLineFlags(sofa::Index i)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalState()sofa::component::collision::geometry::LineCollisionModel< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNext()sofa::core::CollisionModelinline; getNumberOfContacts() constsofa::core::CollisionModelinline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrevious()sofa::core::CollisionModelinline; getProximity() constsofa::core::CollisionModelinline; getSelfCollision() constsofa::core::CollisionModelinline; getSize() constsofa::core::CollisionModelinline; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const f,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:8611,log,logging,8611,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,1,['log'],['logging']
Testability,"constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeDir(int e)sofa::component::engine::generate::MeshTetraStuffing; getEdgePoint2(int p, int e)sofa::component::engine::generate::MeshTetraStuffing; getEdgeSize2(int e)sofa::component::engine::generate::MeshTetraStuffing; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSplitPoint(int from, int to)sofa::component::engine::generate::MeshTetraStuffing; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; gsizesofa::component::engine::generate::MeshTetraStuffing; h0sofa::component::engine::generate::MeshTetraStuffing; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html:8108,log,logging,8108,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,1,['log'],['logging']
Testability,constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDistanceFromMouse() constsofa::gui::component::performer::BaseMouseInteractorinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMouseContainer()=0sofa::gui::component::performer::BaseMouseInteractorpure virtual; getMouseRayModel()sofa::gui::component::performer::BaseMouseInteractorinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *e) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; handleTopologyChange()sofa::core:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:4994,log,logging,4994,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,2,['log'],['logging']
Testability,"constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntegrationFactor(int inputDerivative, int outputDerivative) const overridesofa::component::odesolver::backward::NewmarkImplicitSolverinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPositionIntegrationFactor() const overridesofa::component::odesolver::backward::NewmarkImplicitSolverinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolutionIntegrationFactor(int outputDerivative) const overridesofa::component::odesolver::backward::NewmarkImplicitSolverinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getVelocityIntegrationFactor() const overridesofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html:5217,log,logging,5217,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,1,['log'],['logging']
Testability,"constsofa::simulation::Visitorinlinevirtual; getClassName() const overridesofa::simulation::FindByTypeVisitor< T >inlinevirtual; getInfos() const overridesofa::simulation::FindByTypeVisitor< T >inlinevirtual; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::FindByTypeVisitor< T >inlinevirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor-members.html:4010,test,testTags,4010,api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor-members.html,2,['test'],['testTags']
Testability,"container::dynamic::PointSetGeometryAlgorithms::SOFA_CLASS(SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::topology::GeometryAlgorithms::SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; topoContainersofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3d typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecCoord typedefsofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; writeMSHfile(const char *filename) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >inline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html:31772,log,logErrors,31772,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,1,['log'],['logErrors']
Testability,"core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE2(AreaMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true))sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mapping() overridesofa::core::Mapping< TIn, TOut >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html:18872,log,logErrors,18872,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,1,['log'],['logErrors']
Testability,"core::BaseMappingvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to)sofa::core::BaseMappingvirtual; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::MultiMapping< TIn, TOut >inlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(MultiMapping, TIn, TOut), BaseMapping)sofa::core::MultiMapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelssofa::core::MultiMapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const MechanicalParams *, ConstMultiVecDerivId)sofa::core::BaseMappinginlinevirtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecFromModels typedefsofa::core::MultiMapping< TIn, TOut >protected; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecToModels typedefsofa::core::MultiMapping< TIn, TOut >protected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMapping() overridesofa::core::BaseMappingprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~MultiMapping() overridesofa::core::MultiMapping< TIn, TOut >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html:17325,log,logErrors,17325,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,1,['log'],['logErrors']
Testability,"core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleOctreeModelvirtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleOctreeModelvirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; TriangleCollisionModel< sofa::Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; sofa::helper::TriangleOctreeRoot::Coord typedefsofa::helper::TriangleOctreeRoot; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CUBE_SIZEsofa::helper::TriangleOctreeRootstatic; cubeSizesofa::helper::TriangleOctreeRoot; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_bothSidesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; d_componentStatesofa::core::objectmodel::Base; d_computeNormalssofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_useCurvaturesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; DataTypes typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; Deriv typedefsofa::component::collision::geomet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html:4197,log,logging,4197,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html,1,['log'],['logging']
Testability,"core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_CLASS(SOFA_TEMPLATE2(DistanceFromTargetMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true))sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; BaseNonLinearMapping< TIn, TOut, true >::SOFA_CLASS(SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut))sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; sofa::core::Mapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SparseKMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >protected; SparseMatrixEigen typedefsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testMechanicalState(BaseState *state)sofa::core::BaseMappingprotected; toModelsofa::core::Mapping< TIn, TOut >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateK(const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >virtual; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTarget(unsigned index, const InCoord &position)sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; updateTarget(unsigned index, SReal x, SReal y, SReal z) overridesofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >virtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html:19887,test,testMechanicalState,19887,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,1,['test'],['testMechanicalState']
Testability,"core::behavior::OdeSolver *b)sofa::simulation::SolveVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; sequentialSolve(simulation::Node *node)sofa::simulation::SolveVisitorprotected; setDt(SReal _dt)sofa::simulation::SolveVisitor; setTags(const TagSet &t)sofa::simulation::Visitorinline; SolveVisitor(const sofa::core::ExecParams *params, SReal _dt, sofa::core::MultiVecCoordId X=sofa::core::VecCoordId::position(), sofa::core::MultiVecDerivId V=sofa::core::VecDerivId::velocity(), bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false)sofa::simulation::SolveVisitor; SolveVisitor(const sofa::core::ExecParams *params, SReal _dt, bool free, bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false)sofa::simulation::SolveVisitor; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; vsofa::simulation::SolveVisitorprotected; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; xsofa::simulation::SolveVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor-members.html:5185,test,testTags,5185,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor-members.html,2,['test'],['testTags']
Testability,"core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_originsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; datasofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::projective::LineProjectiveConstra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html:3754,log,logging,3754,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,1,['log'],['logging']
Testability,"core::behavior::StateAccessor; SOFA_CLASS(SOFA_TEMPLATE(FixedLagrangianConstraint, DataTypes), SOFA_TEMPLATE(core::behavior::Constraint, DataTypes))sofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >; sofa::core::behavior::Constraint::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(Constraint, DataTypes), BaseConstraint, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::Constraint< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeLambda(const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) overridesofa::core::behavior::Constraint< DataTypes >virtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecConstArea typedefsofa::core::behavior::BaseConstraint; VecConstCoord typedefsofa::core::behavior::BaseConstraint; VecConstDeriv typedefsofa::core::behavior::BaseConstraint; VecConstraintBlockInfo typedefsofa::core::behavior::BaseConstraint; VecCoord typedefsofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecPersistentID typedefsofa::core::behavior::BaseConstraint; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraint() overridesofa::core::behavior::BaseConstra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html:17029,log,logErrors,17029,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html,1,['log'],['logErrors']
Testability,"core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FastTriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; ForceField< _DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, _DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, _DataTypes))sofa::core::behavior::ForceField< _DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~FastTriangularBendingSprings()sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >protectedvirtual; ~ForceField() overridesofa::core::behavior::ForceField< _DataTypes >protected; ~SingleSta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html:17947,log,logErrors,17947,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,1,['log'],['logErrors']
Testability,"core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; virtual int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:3377,test,testIntersection,3377,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2)=delete;  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:5245,test,testIntersection,5245,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,3,['test'],['testIntersection']
Testability,"core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::BaseProximityIntersectionvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::BaseProximityIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html:14705,test,testIntersection,14705,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionModel(core::CollisionModel *cm) overridesofa::component::collision::detection::algorithm::IncrSAPinlinevirtual; addCollisionModels(const sofa::type::vector< core::CollisionModel * > &v)sofa::core::collision::BroadPhaseDetectionvirtual; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &) overridesofa::component::collision::detection::algorithm::IncrSAPinlinevirtual; addCollisionPairs(const type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &) overridesofa::component::collision::detection::algorithm::IncrSAPinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::BroadPhaseDetectionvirtual; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::IncrSAPvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlines",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html:1419,log,logging,1419,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html,1,['log'],['logging']
Testability,"core::objectmodel::BaseObject * m_messageComponent { nullptr };  . Public Member Functions; helper::logging::MessageDispatcher::LoggerStream logger () const;  ; bool checkRowIndex (sofa::SignedIndex row) override;  ; bool checkColIndex (sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy; bool checkRowColIndices (const sofa::SignedIndex row, const sofa::SignedIndex col) override;  ;  Public Member Functions inherited from sofa::core::matrixaccumulator::IndexVerificationStrategy; virtual ~IndexVerificationStrategy ()=default;  . Additional Inherited Members. Attribute details. ◆ m_messageComponent. sofa::core::objectmodel::BaseObject* sofa::core::matrixaccumulator::RangeVerification::m_messageComponent { nullptr }. ◆ maxColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxColIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ maxRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::maxRowIndex { std::numeric_limits<sofa::SignedIndex>::max() }. ◆ minColIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minColIndex { 0 }. ◆ minRowIndex. sofa::SignedIndex sofa::core::matrixaccumulator::RangeVerification::minRowIndex { 0 }. Function details. ◆ checkColIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkColIndex ; (; sofa::SignedIndex ; col). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ checkRowIndex(). bool sofa::core::matrixaccumulator::RangeVerification::checkRowIndex ; (; sofa::SignedIndex ; row). overridevirtual . Implements sofa::core::matrixaccumulator::IndividualIndexVerificationStrategy. ◆ logger(). helper::logging::MessageDispatcher::LoggerStream sofa::core::matrixaccumulator::RangeVerification::logger ; (; ); const. sofacorematrixaccumulatorRangeVerification; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html:2445,log,logger,2445,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1_range_verification.html,7,"['Log', 'log']","['LoggerStream', 'logger', 'logging']"
Testability,core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getData() overridesofa::component::io::mesh::VoxelGridLoadervirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDataSize() const overridesofa::component::io::mesh::VoxelGridLoadervirtual; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFilename()sofa::core::loader::BaseLoader; getHexaIndicesInGrid() const overridesofa::component::io::mesh::VoxelGridLoadervirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResolution(Vec3i &res) constsofa::component::io::mesh::VoxelGridLoader; getROI() const overridesofa::component::io::mesh::VoxelGridLoadervirtual; getSegmentID() overridesofa::component::io::mesh::VoxelGridLoadervirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getVoxelSize() const overridesofa::component::io::mesh::VoxelGridLoadervirtual; handl,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html:6525,log,logging,6525,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,1,['log'],['logging']
Testability,"core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::core::behavior::RotationFinder< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::core::behavior::RotationFinder< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html:10226,log,logErrors,10226,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,1,['log'],['logErrors']
Testability,"core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centerToOriginsofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html:3115,log,logging,3115,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,1,['log'],['logging']
Testability,"core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeEdgeList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeHexaList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computePointList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeQuadList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInQuadArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInTetrahedronArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInTriangleArray()sofa::component::topology::container::constant::MeshTopologyprotected; createHexahedraAroundEdgeArray()sofa::component::topology::container::constant::MeshTopologyprotected; createHexahedraAroundQuadArray()sofa::component::topology::container::constant::MeshTopologyprotected; createHexahedraAroundVertexArray()sofa::component::topology::container::constant::Me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html:4728,log,logging,4728,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,4,['log'],['logging']
Testability,"core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntegrationFactor(int, int) constsofa::core::behavior::OdeSolverinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPositionIntegrationFactor() constsofa::core::behavior::OdeSolverinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolutionIntegrationFactor(int) constsofa::core::behavior::OdeSolverinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getVelocityIntegrationFactor() constsofa::core::behavior::OdeSolverinlinevirtual; handleEvent(Event",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver-members.html:4528,log,logging,4528,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver-members.html,1,['log'],['logging']
Testability,"core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getID(const std::string &name)sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlinestatic; getInstance()sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlinestatic; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLastID()sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlinestatic; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getName(unsigned int id)sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlinestatic; sofa::core::objectmodel::Base::getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() constsofa::core::objectmodel::Baseinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTypeName() constsofa::core::objectmodel::Base; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; IdFactory()sofa::helper::AdvancedTimer::Id< Base >::IdFactoryinlineprotected; idsListsofa::helper::AdvancedTimer::Id< Base >::IdFactoryprotected; idsMapsofa::helper::AdvancedTimer::Id< Base >::IdFactoryprotected; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory-members.html:3430,log,logging,3430,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory-members.html,2,['log'],['logging']
Testability,core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDistanceFromMouse() constsofa::gui::component::performer::BaseMouseInteractorinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMouseContainer() overridesofa::gui::component::performer::MouseInteractor< DataTypes >inlinevirtual; getMouseRayModel()sofa::gui::component::performer::BaseMouseInteractorinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *e) overridesofa::gui::component::performer::Ba,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html:5046,log,logging,5046,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,2,['log'],['logging']
Testability,"core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; NonLinearMappingData()sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; NonLinearMappingData()sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >inline; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg)sofa::core::objectmodel::Basevirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; removeData(BaseData *f)sofa::core::objectmodel::Base; removeTag(Tag t)sofa::core::objectmodel::Base; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SPtr typedefsofa::core::objectmodel::Base; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html:7356,log,logErrors,7356,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,1,['log'],['logErrors']
Testability,"core::objectmodel::Basevirtual; getCollisionModels() overridesofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >inlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html:7362,log,logging,7362,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,1,['log'],['logging']
Testability,core::topology::BaseMeshTopologyvirtual; getHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalEdgesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainerinlinevirtual; getNbQuads()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetrahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNumberConnectedComponents(sofa::type::vector< EdgeID > &components)sofa::component::to,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:12648,log,logging,12648,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,3,['log'],['logging']
Testability,core::topology::BaseMeshTopologyvirtual; getHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalEdgesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainerinlinevirtual; getNbQuads()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetrahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNumberOfConnectedComponent()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNu,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html:10039,log,logging,10039,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,1,['log'],['logging']
Testability,core::topology::BaseMeshTopologyvirtual; getHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLine(LineID i)sofa::core::topology::BaseMeshTopologyinline; getLines()sofa::core::topology::BaseMeshTopologyinline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLocalEdgesInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalEdgesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalQuadsInHexahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLocalTrianglesInTetrahedron(const PointID i) constsofa::core::topology::BaseMeshTopologyvirtual; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNbEdges()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbHexas()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbLines()sofa::core::topology::BaseMeshTopologyinline; getNbPoints() constsofa::core::topology::Topologyinlinevirtual; getNbQuads()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetrahedra()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTetras()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNbTriangles()sofa::core::topology::BaseMeshTopologyinlinevirtual; getNumberOfConnectedComponent()sofa::core::topology::BaseMeshTopologyinlinevirtual; getPathName() const overridesofa::core::objectmodel::Bas,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:8684,log,logging,8684,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,2,['log'],['logging']
Testability,"cs::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDx(const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html:6809,log,logging,6809,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,2,['log'],['logging']
Testability,"ctDescription *=nullptr);  . Constructor details. ◆ ~VisualManager(). sofa::core::visual::VisualManager::~VisualManager ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ drawScene(). virtual bool sofa::core::visual::VisualManager::drawScene ; (; VisualParams * ; ). inlinevirtual . Called instead of rendering the scene. ; Return true if this object actually did the rendering, or false if it wasn't done. ; Reimplemented in sofa::gl::component::shader::VisualManagerSecondaryPass, sofa::gl::component::shader::VisualManagerPass, sofa::gl::component::shader::PostProcessManager, sofa::gl::component::shader::OrderIndependentTransparencyManager, sofa::gl::component::shader::LightManager, and sofa::gl::component::rendering2d::OglViewport. ◆ insertInNode(). bool sofa::core::visual::VisualManager::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ postDrawScene(). virtual void sofa::core::visual::VisualManager::postDrawScene ; (; VisualParams * ; ). inlinevirtual . Called after rendering the scene. ; Reimplemented in sofa::gl::component::shader::VisualManagerPass, sofa::gl::component::shader::PostProcessManager, sofa::gl::component::shader::OrderIndependentTransparencyManager, sofa::gl::component::shader::LightManager, and sofa::gl::component::rendering2d::OglViewport. ◆ preDrawScene(). virtual void sofa::core::visual::VisualManager::preDrawScene ; (; VisualParams * ; ). inlinevirtual . Called before rendering the scene. ; Reimplemented in sofa::gl::component::shader::VisualManagerSecondaryPass, sofa::gl::component::shader::VisualManagerPass, sofa::gl::component::shader::PostProcessManager, sofa::gl::component::shader::OrderIndependentTransparencyManager, sofa::gl::component::shader::LightManager, and sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html:16147,test,test,16147,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,1,['test'],['test']
Testability,"ctDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearKeyForces()sofa::component::mechanicalload::LinearForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; clearPoints()sofa::component::mechanicalload::LinearForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::LinearForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizeCoefsofa::component::mechanicalload::LinearForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_forcesofa::component::mechanicalload::LinearForceField< DataTypes >; d_keyForcessofa::component::mechanicalload::LinearForceField< DataTypes >; d_keyTimessofa::component::mechanicalload::LinearForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::mechanicalload::LinearForceField< DataTypes >protected; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::LinearForceField< DataTypes >; DataVecDeriv typedefsofa::component::mechanicalload::LinearForceField< DataTypes >; Deriv typedefsofa::component::mechanicalload::LinearForceField< DataTypes >; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html:5317,log,logging,5317,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,1,['log'],['logging']
Testability,"ctDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; constraintssofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >protected; Coord typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintssofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; DataTypes typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; DataVecCoord typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; DataVecDeriv typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; Deriv typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html:3461,log,logging,3461,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,1,['log'],['logging']
Testability,"cted; StiffnessMatrix typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; StrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; TriangleFEMForceField()sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; VecReal typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html:23321,log,logErrors,23321,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,"cted; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; computeResidual(const core::ExecParams *params, linearalgebra::BaseVector *lambda) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; constraintsolverssofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_complianceFactorsofa::component::constraint::lagrangian::correction::GenericConstraintCorrection; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html:4805,log,logging,4805,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,1,['log'],['logging']
Testability,"cted; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeSecondDerivativeArea(const sofa::type::fixed_array< sofa::type::Vec3, 3 > &triangleVertices)sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; disable() overridesofa::core::Mapping< TIn, TOut >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateK(const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) overridesofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >protectedvirtual; draw(const core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html:5794,log,logging,5794,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,1,['log'],['logging']
Testability,"cted; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearConstraintProblemLocks()sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeGraphssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; computeResidual(const core::ExecParams *) overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CP_BUFFER_SIZEsofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotectedstatic; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; current_cpsofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; currentErrorsofa::component::constraint::lagrangian::solver::GenericConstraintSolver; currentIterationssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; currentNumConstraintGroupssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; currentNumConstraintssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; d_allVerifiedsofa::component::constraint::lagrangian::solver::GenericConstraintSolver; d_componentStatesofa::core::objectmodel::Base; d_computeConstraintForcessofa::component::constraint::lagrangian::solver::GenericConstraintSolver; d_computeGraphssofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:4446,log,logging,4446,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['log'],['logging']
Testability,"cted; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDStress(Vec3 &dstress, Vec3 &dstrain) overridesofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterialvirtual; computeStress(Vec3 &stress, Vec3 &strain, unsigned int &elementIndex) overridesofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterialvirtual; computeStress(unsigned int) overridesofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterialinlinevirtual; computeStressOnSection(Vec3 &Stress, Vec3 Strain, int section)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; computeVonMisesStrain(Vec3 &strain)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html:3481,log,logging,3481,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,1,['log'],['logging']
Testability,"cted; compTimesofa::component::animationloop::ConstraintAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeComplianceInConstraintSpace()sofa::component::animationloop::ConstraintAnimationLoopprotectedvirtual; computePredictiveForce(int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res)sofa::component::animationloop::ConstraintAnimationLoopprotected; ConstraintAnimationLoop()sofa::component::animationloop::ConstraintAnimationLoopprotected; constraintCorrectionssofa::component::animationloop::ConstraintAnimationLoopprotected; correctiveMotion(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activateSubGraphsofa::component::animationloop::ConstraintAnimationLoop; d_allVerifiedsofa::component::animationloop::ConstraintAnimationLoop; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_displayTimesofa::component::animationloop::ConstraintAnimationLoop; d_doCollisionsFirstsofa::component::animationloop::ConstraintAnimationLoop; d_doubleBuffersofa::component::animationloop::ConstraintAnimationLoop; d_graphConstraintssofa::component::animationloop::ConstraintAnimationLoop; d_graphErrorssofa::component::animationloop::ConstraintAnimationLoop; d_graphForcessofa::component::animationloop::ConstraintAnimationLoop; d_maxItsofa::component::animationloop::ConstraintAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; d_realTimeCompensationsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:3321,log,logging,3321,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,1,['log'],['logging']
Testability,"ction ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::Line & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:10420,test,testIntersection,10420,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ction(EdgeID edgeID, sofa::type::Vec< 3, Real > pointOnPlane, sofa::type::Vec< 3, Real > normalOfPlane, sofa::type::Vec< 3, Real > &intersection)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeRestHexahedronVolume(const HexaID h) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; computeRestQuadArea(const QuadID i) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; computeRestSquareEdgeLength(const EdgeID i) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeShapeFunction(const LocalCoord nc, const HexahedronBinaryIndex bi) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; Coord typedefsofa::component::topology::container::dynamic::DynamicSparseGridGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawColorHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_drawEdgessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; d_drawHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_drawScaleHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showHexaIndicessofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_showIndicesScalesofa::component::topolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html:9862,log,logging,9862,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"ction::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false, . bool ; useNormal = false . ). inlinestatic . ◆ doIntersectionTrianglePoint2(). int sofa::component::collision::detection::intersection::MeshNewProximityIntersection::doIntersectionTrianglePoint2 ; (; SReal ; dist2, . int ; flags, . const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:14586,test,testIntersection,14586,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ction::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:16756,test,testIntersection,16756,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ctionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Contact typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; contactssofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Coord typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionForceField< DataTypes >; DataTypes1 typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; DataTypes2 typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; DataVecCoord typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; DataVecDeriv typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Deriv typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; doUpdateInternal()so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html:5014,log,logging,5014,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,1,['log'],['logging']
Testability,"ctions;  ExportGnuplotVisitor (const core::ExecParams *params, SReal time);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html:1505,test,testTags,1505,api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,2,['test'],['testTags']
Testability,"ctmodel::Base; applyTransform()sofa::component::io::mesh::SphereLoader; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionssofa::component::io::mesh::SphereLoader; d_radiussofa::component::io::mesh::SphereLoader; d_rotationsofa::component::io::mesh::SphereLoader; d_scalesofa::component::io::mesh::SphereLoader; d_translationsofa::component::io::mesh::SphereLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:2242,log,logging,2242,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,1,['log'],['logging']
Testability,ctmodel::Base; fullscreensofa::component::setting::ViewerSetting; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html:4711,log,logging,4711,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,1,['log'],['logging']
Testability,"ctmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getElementMass(Index index) const overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; getElementMass(Index index, linearalgebra::BaseMatrix *m) const overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const core::MechanicalParams *, const DataVecDeriv &v) const overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; sofa::core::behavior::Mass::getKineticEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::Mass< DataTypes >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMassCount() constsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >inline; getMassDensity()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; getMassTopologyType() constsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >inline; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const core::MechanicalParams *mparams, const DataVecCoord &x, const DataVecDeriv &v) const overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; getMomentum(const core::MechanicalParams *, const DataVecCoord &vx, const DataVecDeriv &vv) constsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; sofa::core::behavior::Mass::getMomentum(const MechanicalParams *m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html:13034,log,logging,13034,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,1,['log'],['logging']
Testability,"ctmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; Parents typedefsofa::core::objectmodel::BaseNode; parse(BaseObjectDescription *arg)sofa::core::objectmodel::Basevirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; removeChild(BaseNode::SPtr node)=0sofa::core::objectmodel::BaseNodepure virtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeObject(BaseObject::SPtr obj)=0sofa::core::objectmodel::BaseNodepure virtual; removeTag(Tag t)sofa::core::objectmodel::Base; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseNode, Base)sofa::core::objectmodel::BaseNode; SPtr typedefsofa::core::objectmodel::Base; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseNode() overridesofa::core::objectmodel::BaseNodeprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html:8789,log,logErrors,8789,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,1,['log'],['logErrors']
Testability,"ctmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BroadPhaseDetection, Detection)sofa::core::collision::BroadPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedCmPairssofa::core::collision::BroadPhaseDetectionprotected; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BroadPhaseDetection() override=defaultsofa::core::collision::BroadPhaseDetectionprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection-members.html:11638,log,logErrors,11638,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection-members.html,1,['log'],['logErrors']
Testability,"ctmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getElementMass(sofa::Index index) const =0sofa::core::behavior::BaseMasspure virtual; getElementMass(sofa::Index index, linearalgebra::BaseMatrix *m) const =0sofa::core::behavior::BaseMasspure virtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getKineticEnergy(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseMasspure virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMomentum(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseMasspure virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseMasspure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html:5454,log,logging,5454,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,1,['log'],['logging']
Testability,"ctmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_originsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; datasofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; DataVecCoord typedefsofa::component::con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html:3712,log,logging,3712,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,1,['log'],['logging']
Testability,"ctmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImplvirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html:3750,log,logging,3750,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,1,['log'],['logging']
Testability,"ctmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMaterialFacessofa::component::io::mesh::MeshOBJLoader; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_faceListsofa::component::io::mesh::MeshOBJLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_handleSeamssofa::component::io::mesh::MeshOBJLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:5219,log,logging,5219,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['log'],['logging']
Testability,"ctmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_edgesOnBordersofa::component::io::mesh::MeshTrianLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_neighborTablesofa::component::io::mesh::MeshTrianLoader;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:5119,log,logging,5119,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['log'],['logging']
Testability,"ctmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_forceBinarysofa::component::io::mesh::MeshSTLLoader; d_headerSizesofa::component::io::mesh::MeshSTLLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_mergePositionUsingMapsofa::component::io::mesh::MeshSTLLoader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:5222,log,logging,5222,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['log'],['logging']
Testability,"ctmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:5256,log,logging,5256,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,5,['log'],['logging']
Testability,"ctmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::core::objectmodel::Base; d_defaultRadiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_numberOfContactssofa::core::CollisionModelprotected; d_radiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; d_showImpostorssofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; DataTypes typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; defaultRadiussofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; doUpdateInternal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:3645,log,logging,3645,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,1,['log'],['logging']
Testability,"ctmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activesofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; d_animationSpeedsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_skeletonBonessofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; d_skeletonJointssofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; DataTypes typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; DataVecCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html:3645,log,logging,3645,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,1,['log'],['logging']
Testability,"ctmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; GetCustomTemplateName()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >inlinestatic; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinearSystem() constsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >inline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatrixInvertData(linearalgebra::BaseMatrix *m)sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSystemBaseMatrix() overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; getSystemInverseBaseMatrix()sofa::core::behavior::LinearSolverinlinevirtual; getSystemLHBaseVector() overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >inlinevirtual; getSystemLHVector()sofa::component::linearsolver::MatrixLinearS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html:7879,log,logging,7879,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,1,['log'],['logging']
Testability,"ctmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; sofa::core::visual::VisualModel::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglShadowShader, sofa::gl::component::shader::OglShader)sofa::gl::component::shader::OglShadowShader; sofa::gl::component::shader::OglShader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglShader, core::visual::Shader, core::visual::VisualModel)sofa::gl::component::shader::OglShader; SPtr typedefsofa::core::objectmodel::Base; start() overridesofa::gl::component::shader::OglShadervirtual; stop() overridesofa::gl::component::shader::OglShadervirtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; turnOnsofa::gl::component::shader::OglShader; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vertFilenamesofa::gl::component::shader::OglShader; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShader() overridesofa::gl::component::shader::OglShaderprotected; ~OglShadowShader() overridesofa::gl::component::shader::OglShadowShaderprotected; ~Shader() overridesofa::core::visual::Shaderinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html:17166,log,logErrors,17166,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shadow_shader-members.html,2,['log'],['logErrors']
Testability,ctmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getData() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >virtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html:4827,log,logging,4827,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,1,['log'],['logging']
Testability,"ctmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getCollisionModels() overridesofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >inlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html:6752,log,logging,6752,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,1,['log'],['logging']
Testability,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_aliassofa::component::sceneutility::makealiascomponent::MakeAliasComponent; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_targetcomponentsofa::component::sceneutility::makealiascomponent::MakeAliasComponent; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html:2186,log,logging,2186,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,1,['log'],['logging']
Testability,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_aliassofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; d_componentnamesofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; d_componentStatesofa::core::objectmodel::Base; d_datanamesofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html:2202,log,logging,2202,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,1,['log'],['logging']
Testability,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::sceneutility::FileMessageHandlerComponent; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; FileMessageHandlerComponent()sofa::component::sceneutility::FileMessageHandlerComponent; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html:2164,log,logging,2164,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,1,['log'],['logging']
Testability,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_loadedPluginssofa::simulation::RequiredPlugin; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pluginNamesofa::simulation::RequiredPlugin; d_requireAllsofa::simulation::RequiredPlugin; d_requireOnesofa::simulation::RequiredPlugin; d_stopAfterFirstNameFoundsofa::simulation::RequiredPlugin; d_stopAfterFirstSuffixFoundsofa::simulation::RequiredPlugin; d_suffixMapsofa::simulation::RequiredPlugin; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html:2112,log,logging,2112,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,2,['log'],['logging']
Testability,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_typesofa::component::sceneutility::MessageHandlerComponent; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLink",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html:2156,log,logging,2156,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,1,['log'],['logging']
Testability,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; ElemID typedefsofa::core::topology::Topology; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; find",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html:2108,log,logging,2108,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,1,['log'],['logging']
Testability,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html:2134,log,logging,2134,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html,16,['log'],['logging']
Testability,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::DirectSAPinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DirectSAP()=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:2166,log,logging,2166,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,1,['log'],['logging']
Testability,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::RayTraceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html:2182,log,logging,2182,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html,1,['log'],['logging']
Testability,"ctor< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; SetUserData(void *pUserData)sofa::core::CollisionModelinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sizesofa::core::CollisionModelprotected; Size typedefsofa::core::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(CubeCollisionModel, sofa::core::CollisionModel)sofa::component::collision::geometry::CubeCollisionModel; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; updateCube(sofa::Index index)sofa::component::collision::geometry::CubeCollisionModel; updateCubes()sofa::component::collision::geometry::CubeCollisionModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:16950,log,logErrors,16950,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,1,['log'],['logErrors']
Testability,"ctors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Attribute details. ◆ deltaRange. template<class _Mapping > . std::pair<Real,Real> sofa::mapping_test::Mapping_test< _Mapping >::deltaRange. The minimum and maximum magnitudes of the change of each scalar value of the small displacement is perturbation * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. . ◆ errorFactorDJ. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorFactorDJ. The test for geometric stiffness is successful if the (infinite norm of the) difference is less than errorFactorDJ * errorMax * numeric_limits<Real>::epsilon. . ◆ errorMax. template<class _Mapping > . Real sofa::mapping_test::Mapping_test< _Mapping >::errorMax. The test is successful if the (infinite norm of the) difference is less than errorMax * numeric_limits<Real>::epsilon. . ◆ flags. template<class _Mapping > . unsigned char sofa::mapping_test::Mapping_test< _Mapping >::flags. testing options. (all by default). To be used with precaution. Please implement the missing API in the mapping rather than not testing it. . ◆ inDofs. template<class _Mapping > . InDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::inDofs. mapping input . ◆ mapping. template<class _Mapping > . core::Mapping<In,Out>* sofa::mapping_test::Mapping_test< _Mapping >::mapping. the mapping to be tested . ◆ outDofs. template<class _Mapping > . OutDOFs::SPtr sofa::mapping_test::Mapping_test< _Mapping >::outDofs. mapping output . ◆ root. template<class _Mapping > . simulation::Node::SPtr sofa::mapping_test::Mapping_test< _Mapping >::root. Root of the scene graph, created by the constructor an re-used in the tests. . ◆ simulation. template<class _Mapping > . simulation::Simulation* sofa::mapping_test::Mapping_test< _Mapping >::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:8456,test,test,8456,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,2,['test'],['test']
Testability,"ctory);  ; void registerTetrahedronSetGeometryAlgorithms (sofa::core::ObjectFactory *factory);  ; void registerTetrahedronSetTopologyContainer (sofa::core::ObjectFactory *factory);  ; void registerTetrahedronSetTopologyModifier (sofa::core::ObjectFactory *factory);  ; void registerTriangleSetGeometryAlgorithms (sofa::core::ObjectFactory *factory);  ; void registerTriangleSetTopologyContainer (sofa::core::ObjectFactory *factory);  ; void registerTriangleSetTopologyModifier (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  ; template<class Coord > ; bool is_point_in_quad (const Coord &p, const Coord &a, const Coord &b, const Coord &c, const Coord &d);  ; void snapping_test_quad (double epsilon, double alpha0, double alpha1, double alpha2, double alpha3, bool &is_snap_0, bool &is_snap_1, bool &is_snap_2, bool &is_snap_3);  ; void SOFA_COMPONENT_TOPOLOGY_CONTAINER_DYNAMIC_API snapping_test_triangle (SReal epsilon, SReal alpha0, SReal alpha1, SReal alpha2, bool &is_snap_0, bool &is_snap_1, bool &is_snap_2);  ; void SOFA_COMPONENT_TOPOLOGY_CONTAINER_DYNAMIC_API snapping_test_edge (SReal epsilon, SReal alpha0, SReal alpha1, bool &is_snap_0, bool &is_snap_1);  ; template<class Real > ; bool is_point_in_triangle (const sofa::type::Vec< 3, Real > &p, const sofa::type::Vec< 3, Real > &a, const sofa::type::Vec< 3, Real > &b, const sofa::type::Vec< 3, Real > &c);  ; template<class Real > ; bool is_point_in_halfplane (const sofa::type::Vec< 3, Real > &p, unsigned int e0, unsigned int e1, const sofa::type::Vec< 3, Real > &a, const sofa::type::Vec< 3, Real > &b, const sofa::type::Vec< 3, Real > &c, unsigned int ind_p0, unsigned int ind_p1, unsigned int ind_p2);  Test if a point p is in the right halfplane.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html:7479,Test,Test,7479,api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html,1,['Test'],['Test']
Testability,"ctprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::VisualTransform; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_recursivesofa::component::visual::VisualTransform; d_transformsofa::component::visual::VisualTransform; doDrawVisual(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html:2801,log,logging,2801,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,1,['log'],['logging']
Testability,"ctual message More...;  ; Class m_class;  who is the attender of the message (developers or users)? More...;  ; Type m_type;  the message level More...;  ; int m_id;  should it be stored here or in the handler that needs it? More...;  . Public Member Functions;  Message ();  ;  Message (const Message &msg);  ;  Message (Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; Message & operator= (const Message &msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3].",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:1941,log,logging,1941,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,2,['log'],['logging']
Testability,"ctvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html:2494,log,logging,2494,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,1,['log'],['logging']
Testability,"ctvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor-members.html:9931,log,logErrors,9931,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor-members.html,1,['log'],['logErrors']
Testability,"ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetVectorVisitor::independentOnly {false}. protected . ◆ offset. unsigned sofa::component::odesolver::testing::GetVectorVisitor::offset {0}. protected . ◆ src. core::ConstVecId sofa::component::odesolver::testing::GetVectorVisitor::src. protected . ◆ vec. linearalgebra::BaseVector* sofa::component::odesolver::testing::GetVectorVisitor::vec. protected . Constructor details. ◆ GetVectorVisitor(). sofa::component::odesolver::testing::GetVectorVisitor::GetVectorVisitor ; (; const sofa::core::ExecParams * ; params, . linearalgebra::BaseVector * ; vec, . core::ConstVecId ; src . ). inline . ◆ ~GetVectorVisitor(). sofa::component::odesolver::testing::GetVectorVisitor::~GetVectorVisitor ; (; ). overridedefault . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetVectorVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ processNodeTopDown(). Result sofa::component::odesolver::testing::GetVectorVisitor::processNodeTopDown ; (; simulation::Node * ; ). inlineoverridevirtual . Callback method called when descending to",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html:5288,test,testing,5288,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,1,['test'],['testing']
Testability,d Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:162307,log,logging,162307,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"d in See alsoselectedElem. Calling . getNeighboorElements and . getElementInZone.; Returnsbool: false if method has encounter an error. . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ end(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::end. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getElementInZone(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getElementInZone ; (; VecIds & ; elementsToTest). protected . Function testing if elements are in the range of a given zone The zone is given by the selectorScale. Test is done on Barycentric point of elements. I.e if this point is in the range of the area. then, element is accepted otherwise, element is rejected. Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing accepted element. . ◆ getNeighboorElements(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getNeighboorElements ; (; VecIds & ; elementsToTest). protected . Function to get all elements directly neighboor of a given list of elements compute the list without redundancy using container xxAroundVertex() (where xx is the type of element). Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing neighbour (without already accepted elements and redundancy). . ◆ start(). template<class DataTypes > . void sofa::gui::component::performer::Remov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html:6341,test,testing,6341,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,2,['test'],['testing']
Testability,"d in the tests . Constructor details. ◆ MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::MultiMapping_test ; (; ). inline . ◆ ~MultiMapping_test(). template<class _MultiMapping > . sofa::MultiMapping_test< _MultiMapping >::~MultiMapping_test ; (; ). inlineoverride . Function details. ◆ difference(). template<class _MultiMapping > . OutDeriv sofa::MultiMapping_test< _MultiMapping >::difference ; (; const OutCoord & ; c1, . const OutCoord & ; c2 . ). inline . Returns OutCoord subtraction a-b (should return a OutDeriv, but???) . ◆ runTest(). template<class _MultiMapping > . bool sofa::MultiMapping_test< _MultiMapping >::runTest ; (; const type::vector< InVecCoord > & ; parentCoords, . const OutVecCoord & ; expectedChildCoords . ). inline . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The parent position is applied, the resulting child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; The parent coordinates are transferred in the parent states, then the scene is initialized, then various mapping functions are applied. The parent states are resized based on the size of the parentCoords vectors. The child state is not resized. Its should be already sized, or its size set automatically during initialization.; Parameters. parentCoordsParent positions (one InVecCoord per parent) ; expectedChildCoordsexpected position of the child corresponding to the parent positions . ◆ setupScene(). template<class _MultiMapping > . void sofa::MultiMapping_test< _MultiMapping >::setupScene ; (; int ; numParents). inline . Create scene with given number of parent states. Currently, only one child state is handled. All the parents are set as child of the root node, while the child is in a child node. . sofaMultiMapping_test; Generated on Mon Nov 11 2024 02:17:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:7198,test,tested,7198,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,2,['test'],['tested']
Testability,"d)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearConstraintProblemLocks()sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeGraphssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; computeResidual(const core::ExecParams *) overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CP_BUFFER_SIZEsofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotectedstatic; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; current_cpsofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; currentErrorsofa::component::constraint::lagrangian::solver::GenericConstraintSolver; currentIterationssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; currentNumConstraintGroupssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; currentNumConstraintssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; d_allVerifiedsofa::component::constraint::lagrangian::solver::GenericConstraintSolver; d_componentStatesofa::core::objectmodel::Base; d_computeConstraintForcessofa::component::constraint::lagrangian::solver::GenericConst",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:4404,log,logging,4404,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['log'],['logging']
Testability,"d::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MeshSubsetEngine, DataTypes), Inherited)sofa::component::engine::select::MeshSubsetEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglessofa::component::engine::select::MeshSubsetEngine< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::select::MeshSubsetEngine< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MeshSubsetEngine() overridesofa::component::engine::select::MeshSubsetEngine< DataTypes >protected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html:14812,log,logErrors,14812,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,1,['log'],['logErrors']
Testability,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:11460,log,logErrors,11460,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,573,['log'],['logErrors']
Testability,"d::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(Edge2QuadTopologicalMapping, sofa::core::topology::TopologicalMapping)sofa::component::topology::mapping::Edge2QuadTopologicalMapping; sofa::core::topology::TopologicalMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown() overridesofa::component::topology::mapping::Edge2QuadTopologicalMappingvirtual; VecData typedefsofa::core::objectmodel::Base; VecIndex typedefsofa::component::topology::mapping::Edge2QuadTopologicalMapping; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Edge2QuadTopologicalMapping() overridesofa::component::topology::mapping::Edge2QuadTopologicalMappinginlineprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html:13198,log,logErrors,13198,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html,1,['log'],['logErrors']
Testability,"d; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::setting::BackgroundSetting; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::setting::BackgroundSetting; d_componentStatesofa::core::objectmodel::Base; d_imagesofa::component::setting::BackgroundSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html:2335,log,logging,2335,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,1,['log'],['logging']
Testability,"d; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; bwdInit() overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; depthScalesofa::gl::component::shader::OrderIndependentTransparencyManager; doInitVisual(const core::visual::VisualParams *vp) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; drawOpaques(core::visual::VisualParams *vp)sofa::gl::component::shader::OrderIndependentTransparencyManagerprotected; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html:2801,log,logging,2801,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,2,['log'],['logging']
Testability,"d; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMultipass(sofa::core::objectmodel::BaseContext *con)sofa::gl::component::shader::VisualManagerPassprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html:2823,log,logging,2823,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,2,['log'],['logging']
Testability,"d; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< true >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel::Base; d_fileRigidMappingsofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< true >; d_globalToLocalCoordssofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; d_indexsofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; d_indexFromEndsofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointssofa::component::mapping::nonlinear::RigidMapping< TIn, T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html:5710,log,logging,5710,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,1,['log'],['logging']
Testability,"d; checkTotalMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; Coord typedefsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; copyVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_edgeMasssofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_lumpingsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_massDensitysofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_printMasssofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_showAxisSizesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_showCenterOfGravitysofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_totalMasssofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_vertexMasssofa::component::mass::MeshMatrixMass< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html:8639,log,logging,8639,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,1,['log'],['logging']
Testability,"d; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_cubesDampingsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >protected; d_cubesStiffnesssofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >protected; d_drawModesofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_elongationOnlysofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_enabledsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kdsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_lengthssofa::component::solidmechanics::spring::SpringForce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:6428,log,logging,6428,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,1,['log'],['logging']
Testability,"d; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeForce(const VecDeriv &v, const EdgeInformation &einfo, const typename EdgeInformation::Spring &spring, Coord direction, Real distance)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeLocalJacobian(EdgeInformation &einfo, const Coord &direction, const ForceOutput &force)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeSpringForce(VecDeriv &f, const VecCoord &x, const VecDeriv &v, EdgeInformation &einfo, typename EdgeInformation::Spring &spring)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; DataVecDeriv typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; Deriv typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; edgeInfosofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; f_bboxsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html:6694,log,logging,6694,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,1,['log'],['logging']
Testability,"d; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual; createEdgesInHexahedronArray()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createHexahedraAroundEdgeArray()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual; createHexahedraAroundQuadArray()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual; createHexahedraAroundVertexArray()sofa::component::topology::container::dynamic::HexahedronSetT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5890,log,logging,5890,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,3,['log'],['logging']
Testability,"d< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizeCoefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_binormalsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_dminsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_edgeIndicessofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_edgePressureMapsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_edgessofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_intensitysofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_messageLogCountsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html:5160,log,logging,5160,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,1,['log'],['logging']
Testability,"d< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_dminsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_pressuresofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_quadListsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_quadPressureMapsofa::component::mechanicalload::QuadPressureForceField< DataTypes >protected; d_showForcessofa::component::mechanicalload::QuadPressureForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::Q",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html:5014,log,logging,5014,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html,1,['log'],['logging']
Testability,"d< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) overridesofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >virtual; sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyStiffness(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protectedvirtual; applyStiffnessLarge(VecCoord &f, Real h, const VecCoord &x, const Real &kFactor)sofa::component::solidmec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html:4047,log,logging,4047,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"d< TDataTypes1, TDataTypes2 >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; contactssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >protected; Coord1 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; Coord2 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; dampingsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; datasofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >protected; DataTypes1 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; DataTypes2 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; DataVecCoord1 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; DataVecCoord2 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; DataVecDeriv1 typedefsofa::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html:5218,log,logging,5218,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html,1,['log'],['logging']
Testability,"dAccessor< T, Enable > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::ReadAccessor< T, Enable > Class Template Reference . #include <ReadAccessor.h>. Inheritance diagram for sofa::helper::ReadAccessor< T, Enable >:. [legend]; Detailed Description; template<class T, class Enable = void>; class sofa::helper::ReadAccessor< T, Enable >; A ReadAccessor is a proxy class, holding a reference to a given container and providing access to its data, using an unified interface (similar to std::vector), hiding API differences within containers.; Other advantadges of using a ReadAccessor are :. It can be faster that the default methods and operators of the container, as verifications and changes notifications can be handled in the accessor's constructor and destructor instead of at each item access.; No modifications to the container will be done by mistake; Accesses can be logged for debugging or task dependencies analysis. The default implementation provides only minimal set of methods and operators, sufficient for scalar types but which should be overloaded for more complex types. Various template specializations are typically used, especially for core::objectmodel::Data<T> . Protected Attributes; const container_type * vref;  . Public Member Functions;  ReadAccessor (const container_type &container);  ; const_reference ref () const;  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  . Attribute details. ◆ vref. template<class T , class Enable = void> . const container_type* sofa::helper::ReadAccessor< T, Enable >::vref. protected . Constructor details. ◆ ReadAccessor(). template<class T , class Enable = void> . sofa::helper::ReadAccessor< T, Enable >::ReadAccessor ; (; const container_type & ; container). inlineexplicit . Function details. ◆ operator const_reference(). temp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html:1043,log,logged,1043,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html,2,['log'],['logged']
Testability,"dData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html:1396,log,logging,1396,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html,1,['log'],['logging']
Testability,"dData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html:1416,log,logging,1416,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id-members.html,4,['log'],['logging']
Testability,"dForce(const sofa::core::MechanicalParams *, DataVecDeriv &dataF, const DataVecCoord &dataX, const DataVecDeriv &dataV) overridesofa::component::mechanicalload::ConicalForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html:2773,log,logging,2773,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,1,['log'],['logging']
Testability,"dInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html:3743,log,logging,3743,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,1,['log'],['logging']
Testability,"dSphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [5/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [6/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [7/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::Sphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [8/8]. bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::Sphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersectionSphere(). template<class SphereType1 , class SphereType2 > . bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersectionSphere ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const SReal ; alarmDist . ). inlineprotected . sofacomponentcollisiondetectionintersectionDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:26240,test,testIntersection,26240,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"dSpringForceField< DataTypes >inline; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDrawMode() constsofa::component::solidmechanics::spring::SpringForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinesDamping() constsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >inline; getLinesStiffness() constsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >inline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:11812,log,logging,11812,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,1,['log'],['logging']
Testability,"d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::mechanicalload::SurfacePressureForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::component::mechanicalload::SurfacePressureForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addQuadSurfacePressure(unsigned int quadId, VecDeriv &, const VecCoord &, const VecDeriv &, const Real &)sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >protectedvirtual; addQuadSurfacePressure(unsigned int quadId, VecDeriv &f, const VecCoord &x, const VecDeriv &, const Real &pressure)sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >protected; addQuadSurfacePressure(unsigned int quadId, VecDeriv &, const VecCoord &, const VecDeriv &, const Real &)sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >protected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html:3186,log,logging,3186,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html,1,['log'],['logging']
Testability,"d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (NewProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:3164,test,testIntersection,3164,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ddHexahedraProcess(const sofa::type::vector< Hexahedron > &hexahedra)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotectedvirtual; addHexahedraWarning(const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotected; addHexahedraWarning(const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotected; addHexahedronProcess(Hexahedron e)sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPoints(const sofa::Size nPoints, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPoints(const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; addPointsProcess(const sofa::Size nPoints) overridesofa::component::topology::container::dynamic::HexahedronSetTopologyModifierprotectedvirtual; addPointsWarning(const sofa::Size nPoints, const boo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html:4308,log,logging,4308,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier-members.html,1,['log'],['logging']
Testability,"de *node) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; srcsofa::simulation::mechanicalvisitor::MechanicalMultiVectorFromBaseVectorVisitor; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_from_base_vector_visitor-members.html:10659,test,testTags,10659,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_from_base_vector_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_from_base_vector_visitor-members.html,2,['test'],['testTags']
Testability,"de *node) overridesofa::simulation::TopologyChangeVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::TopologyChangeVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processTopologyChange(simulation::Node *node, sofa::core::objectmodel::BaseObject *obj)sofa::simulation::TopologyChangeVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; TopologyChangeVisitor(const sofa::core::ExecParams *params, sofa::core::topology::Topology *source)sofa::simulation::TopologyChangeVisitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~TopologyChangeVisitor() overridesofa::simulation::TopologyChangeVisitorinline; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor-members.html:4136,test,testTags,4136,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor-members.html,2,['test'],['testTags']
Testability,"defsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *, SReal *, SReal *, bool)sofa::core::visual::VisualLoopinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawStep(sofa::core::visual::VisualParams *)sofa::core::visual::VisualLoopinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &)sofa::core::visual::VisualModelinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html:2807,log,logging,2807,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,1,['log'],['logging']
Testability,"defsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CentralDifferenceSolver()sofa::component::odesolver::forward::CentralDifferenceSolverprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rayleighMasssofa::component::odesolver::forward::CentralDifferenceSolver; d_threadSafeVisitorsofa::component::odesolver::forward::CentralDifferenceSolver; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_rayleighMasssofa::component::odesolver::forward::CentralDifferenceSolver; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver-members.html:2416,log,logging,2416,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver-members.html,1,['log'],['logging']
Testability,"del::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; Shader()sofa::core::visual::Shaderinlineprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Shader, objectmodel::BaseObject)sofa::core::visual::Shader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; start()=0sofa::core::visual::Shaderpure virtual; stop()=0sofa::core::visual::Shaderpure virtual; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Shader() overridesofa::core::visual::Shaderinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html:9884,log,logErrors,9884,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader-members.html,1,['log'],['logErrors']
Testability,"del::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(CollisionGroupManager, CollisionAlgorithm)sofa::core::collision::CollisionGroupManager; sofa::core::collision::CollisionAlgorithm::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedGroupssofa::core::collision::CollisionGroupManagerprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionGroupManager() overridesofa::core::collision::CollisionGroupManagerinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html:10721,log,logErrors,10721,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,1,['log'],['logErrors']
Testability,"del::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTime(double time)sofa::component::playback::ReadState; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(CompareState, playback::ReadState)sofa::component::playback::CompareState; sofa::component::playback::ReadState::SOFA_CLASS(ReadState, core::objectmodel::BaseObject)sofa::component::playback::ReadState; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; totalError_Vsofa::component::playback::CompareStateprotected; totalError_Xsofa::component::playback::CompareStateprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ReadState() overridesofa::component::playback::ReadStateprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html:11860,log,logErrors,11860,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,1,['log'],['logErrors']
Testability,"del::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html:12127,log,logErrors,12127,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,1,['log'],['logErrors']
Testability,"del::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Inherited, Inherit1)sofa::component::engine::select::MergeROIs; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Index, sofa::Index)sofa::component::engine::select::MergeROIs; SOFA_CLASS(MergeROIs, DataEngine)sofa::component::engine::select::MergeROIs; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MergeROIs() overridesofa::component::engine::select::MergeROIsinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html:12535,log,logErrors,12535,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html,1,['log'],['logErrors']
Testability,"del::BaseNode *node) overridesofa::core::behavior::BaseLinearSolvervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseLinearSolver, objectmodel::BaseObject)sofa::core::behavior::BaseLinearSolver; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_linear_solver-members.html:9754,log,logErrors,9754,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_linear_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_linear_solver-members.html,1,['log'],['logErrors']
Testability,"del::BaseObject; getContributionFactor(const sofa::core::MechanicalParams *mparams, const sofa::core::matrixaccumulator::get_component_type< c > *object)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedstatic; GetCustomTemplateName()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlinestatic; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatrixSize() constsofa::core::behavior::BaseMatrixLinearSysteminline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRHSVector() const overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolutionVector() const overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >virtual; getSolveContext()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; getSystemBaseMatrix() const overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >virtual; getSystemMatrix() con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html:6422,log,logging,6422,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,1,['log'],['logging']
Testability,"del::BaseObject; getContributionFactor(const sofa::core::MechanicalParams *mparams, const sofa::core::matrixaccumulator::get_component_type< c > *object)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedstatic; GetCustomTemplateName()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlinestatic; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatrixSize() constsofa::core::behavior::BaseMatrixLinearSysteminline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getRHSVector() constsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolutionVector() constsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; getSolveContext()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; getSystemBaseMatrix() const overridesofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; getSystemMatrix() constsofa::comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html:6769,log,logging,6769,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,4,['log'],['logging']
Testability,"del::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getIncludeNodeType() constsofa::simulation::xml::BaseElementinline; getName() overridesofa::simulation::xml::BaseElementinlinevirtual; getObject() overridesofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >virtual; getParent() const overridesofa::simulation::xml::BaseElementinlinevirtual; getParentElement() constsofa::simulation::xml::BaseElementinline; getSrcFile() constsofa::simulation::xml::BaseElement; getSrcLine() constsofa::simulation::xml::BaseElement; getType()sofa::simulation::xml::BaseElementinline; getTypedObject()sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; init() overridesofa::simulation::xml::ObjectElementvirtual; initNode() overridesofa::simulation::xml::BaseMultiMappingElementvirtual; isFileRoot()sofa::simulation::xml::BaseElement; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; NodeFactory typedefsofa::simulation::xml::BaseElement; ObjectElement(const std::string &name, const std::string &type, BaseElement *parent=nullptr)sofa::simulation::xml::ObjectElement; presenceAttribute(const std::string &s)sofa::simulation::xml::BaseElementvirtual; pushNamedObjects(Map &result)sofa::simulation::xml::BaseElementinline; pushObjects(Sequence &result)sofa::simulation::xml::BaseElementinline; removeAttribute(const std::string &attr) overridesofa::simulation::xml::BaseElementvirtual; removeChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; replaceAttributesofa::simulation::xml::BaseElementprotected; setAttribute(const std::string &attr, const std::string &val)sofa::core::objectmodel::BaseObjectDescriptionvirtual; setBaseFile(const std::string &newBaseFile)sofa::simulation::xml::BaseElementvirtual; setIncludeNodeType(IncludeNodeType t)sofa::simulation::xml::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element-members.html:3796,log,logErrors,3796,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element-members.html,2,['log'],['logErrors']
Testability,"del::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAcceleration(sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId acc, core::ConstMultiVecDerivId f)sofa::component::odesolver::forward::EulerExplicitSolverprotectedstatic; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId f)sofa::component::odesolver::forward::EulerExplicitSolverprotectedstatic; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_symplecticsofa::component::odesolver::forward::EulerExplicitSolver; d_threadSafeVisitorsofa::component::odesolver::forward::EulerExplicitSolver; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; EulerExplicitSolver()sofa::component::odesolver::forward::EulerExplicitSolverprotected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html:3002,log,logging,3002,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,1,['log'],['logging']
Testability,"del::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dampingCoefficientsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; d_implicitsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; dampingCoefficientsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; DataVecDeriv typedefsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; Deriv typedefsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field-members.html:5135,log,logging,5135,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field-members.html,1,['log'],['logging']
Testability,"del::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kdsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showSpringssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; DataVecDeriv typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; Deriv typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; doUpdateInternal()so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html:6140,log,logging,6140,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,1,['log'],['logging']
Testability,"del::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::MeshSampler< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html:2997,log,logging,2997,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html,1,['log'],['logging']
Testability,"del::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering3d::OglCylinderModelvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostream *, Index ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html:3318,log,logging,3318,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,1,['log'],['logging']
Testability,"del::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntegrationFactor(int inputDerivative, int outputDerivative) const overridesofa::component::odesolver::backward::EulerImplicitSolvervirtual; getIntegrationFactor(int inputDerivative, int outputDerivative, SReal dt) constsofa::component::odesolver::backward::EulerImplicitSolver; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPositionIntegrationFactor() const overridesofa::component::odesolver::backward::EulerImplicitSolvervirtual; getPositionIntegrationFactor(SReal dt) constsofa::component::odesolver::backward::EulerImplicitSolverinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolutionIntegrationFactor(int outputDerivative) const overridesofa::component::odesolver::backward::EulerImplicitSolvervirtual; getSolutionIntegrationFactor(int outputDerivative, SReal dt) constsofa::component::odesolver::backward::EulerImplicitSolver; getT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html:5804,log,logging,5804,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoissonRatioInElement(sofa::Size elementId) constsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >inlinevirtual; sofa::component::solidmechanics::fem::elastic::BaseLinea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html:11811,log,logging,11811,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::ConicalForceField< DataTypes >inlinevirtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html:8358,log,logging,8358,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getRotationAngle() constsofa::component::mechanicalload::Oscillat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html:9757,log,logging,9757,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::SphereForceField< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html:8733,log,logging,8733,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::SurfacePressureForceField< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html:11399,log,logging,11399,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >virtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html:10651,log,logging,10651,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >inlinevirtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html:8929,log,logging,8929,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< TDataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< TDataTypes >virtual; getPotentialEnergy(const MechanicalParams *, const DataVecCoord &x) const =0sofa::core::behavior::ForceField< TDataTypes >pure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html:7391,log,logging,7391,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,1,['log'],['logging']
Testability,del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseForceFieldpure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; get,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html:5697,log,logging,5697,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,1,['log'],['logging']
Testability,del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const MechanicalParams *mparams=mechanicalparams::defaultInstance()) const =0sofa::core::behavior::BaseForceFieldpure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html:5582,log,logging,5582,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,1,['log'],['logging']
Testability,del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; PairStateAccessor< TDataTypes >::getMechModel1()sofa::core::behavior::PairStateAccessor< TDataTypes >inline; PairStateAccessor< TDataTypes >::getMechModel1() constsofa::core::behavior::PairStateAccessor< TDataTypes >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; PairStateAccessor< TDataTypes >::getMechModel2()sofa::core::behavior::PairStateAccessor< TDataTypes >inline; PairStateAccessor< TDataTypes >::getMechModel2() constsofa::core::behavior::PairStateAccessor< TDataTypes >inline; getMState1()sofa::core::behavior::PairStateAccessor< TDataTypes >inline; getMState1() constsofa::core::behavior::Pair,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html:6763,log,logging,6763,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel1()sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel1() constsofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel2()sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; PairStateAccessor< TDataTypes1, TDataTypes2 >::getMechModel2() constsofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >inline; getMS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html:7292,log,logging,7292,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::behavior::Pai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:9334,log,logging,9334,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['log'],['logging']
Testability,"del::Baseprotected; BaseMatrixAccumulatorComponent()sofa::core::BaseMatrixAccumulatorComponent< c >inline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ComponentType typedefsofa::core::BaseMatrixAccumulatorComponent< c >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html:2392,log,logging,2392,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,1,['log'],['logging']
Testability,"del; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglTexture2D, OglTexture)sofa::gl::component::shader::OglTexture2D; sofa::gl::component::shader::OglTexture::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglTexture, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglTexture; SPtr typedefsofa::core::objectmodel::Base; srgbColorspacesofa::gl::component::shader::OglTextureprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texturesofa::gl::component::shader::OglTextureprotected; textureFilenamesofa::gl::component::shader::OglTextureprotected; textureUnitsofa::gl::component::shader::OglTextureprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; unbind()sofa::gl::component::shader::OglTexture; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglTexture() overridesofa::gl::component::shader::OglTextureprotected; ~OglTexture2D() overridesofa::gl::component::shader::OglTexture2D; ~ShaderElement() overridesofa::core::visual::ShaderElementinlineprotected; ~VisualModel() overridesofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html:14770,log,logErrors,14770,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d-members.html,2,['log'],['logErrors']
Testability,"delprotected; _planeSeparationssofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _radiussofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _texnamesofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _textureCoordinatessofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _topologysofa::gl::component::rendering3d::SlicedVolumetricModelprotected; _widthsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; alphasofa::gl::component::rendering3d::SlicedVolumetricModelprotected; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html:1952,log,logging,1952,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,1,['log'],['logging']
Testability,"der::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglIntVectorVariable, OglVariable< type::vector< GLint > >)sofa::gl::component::shader::OglIntVectorVariable; OglVariable< type::vector< GLint > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::vector< GLint > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::vector< GLint > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglIntVectorVariable()sofa::gl::component::shader::OglIntVectorVariableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::vector< GLi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html:13596,log,logErrors,13596,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable-members.html,2,['log'],['logErrors']
Testability,"derElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt2Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 2, int)))sofa::gl::component::shader::OglInt2Variable; OglVariable< type::Vec< 2, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec< 2, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglInt2Variable()sofa::gl::component::shader::OglInt2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinepr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html:13584,log,logErrors,13584,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,2,['log'],['logErrors']
Testability,"derElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt3Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 3, int)))sofa::gl::component::shader::OglInt3Variable; OglVariable< type::Vec< 3, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec< 3, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglInt3Variable()sofa::gl::component::shader::OglInt3Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinepr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html:13584,log,logErrors,13584,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,2,['log'],['logErrors']
Testability,"derElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt4Variable, SOFA_TEMPLATE(OglVariable, SOFA_TEMPLATE2(type::Vec, 4, int)))sofa::gl::component::shader::OglInt4Variable; OglVariable< type::Vec< 4, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglInt4Variable()sofa::gl::component::shader::OglInt4Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinepr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html:13584,log,logErrors,13584,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,2,['log'],['logErrors']
Testability,"derprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMaterialFacessofa::component::io::mesh::MeshOBJLoader; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_faceListsofa::component::io::mesh::MeshOBJLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_handleSeamssofa::component::io::mesh::MeshOBJLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTriangle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:5177,log,logging,5177,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['log'],['logging']
Testability,"derprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_edgesOnBordersofa::component::io::mesh::MeshTrianLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_neighborTables",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:5077,log,logging,5077,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['log'],['logging']
Testability,"derprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_forceBinarysofa::component::io::mesh::MeshSTLLoader; d_headerSizesofa::component::io::mesh::MeshSTLLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_mergePositionUsingM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:5180,log,logging,5180,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['log'],['logging']
Testability,"derprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::lo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:5214,log,logging,5214,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,5,['log'],['logging']
Testability,"desofa::simulation::UpdateLinksVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::UpdateLinksVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::UpdateLinksVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(core::objectmodel::BaseObject *obj)sofa::simulation::UpdateLinksVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; UpdateLinksVisitor(const core::ExecParams *params)sofa::simulation::UpdateLinksVisitorinline; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor-members.html:3972,test,testTags,3972,api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor-members.html,2,['test'],['testTags']
Testability,"detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11354,test,testIntersection,11354,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"devirtual . Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) ; Reimplemented from sofa::core::collision::Intersection. ◆ SOFA_ABSTRACT_CLASS(). sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_ABSTRACT_CLASS ; (; BaseProximityIntersection ; , . DiscreteIntersection ;  . ). ◆ testIntersection() [1/2]. bool sofa::component::collision::detection::intersection::BaseProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection.; Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [2/2]. bool sofa::component::collision::detection::intersection::BaseProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection.; Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ useProximity(). bool sofa::component::collision::detection::intersection::BaseProximityIntersection::useProximity ; (; ); const. inlineoverridevirtual . Returns true if algorithm uses proximity. ; Reimplemented from sofa::core::collision::Intersection. sofacomponentcollisiondetectionintersectionBaseProximityIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:24084,test,testIntersection,24084,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"dex nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< T::LhsScalar > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< T::LhsScalar > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:1506,Test,TestSparseMatrixProduct,1506,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,1,['Test'],['TestSparseMatrixProduct']
Testability,"dgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToEdgeCrossContainer ; (; ). Method to test quads to edges cross container concistency. . ◆ checkQuadTopology(). bool sofa::component::topology::utility::TopologyChecker::checkQuadTopology ; (; ). } ; Quad methods { Full method to check Quad Topology. Will call See alsocheckQuadContainer, . checkQuadToEdgeCrossContainer and . checkQuadToVertexCrossContainer . ◆ checkQuadToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToVertexCrossContainer ; (; ). Method to test quads to vertices cross container concistency. . ◆ checkTetrahedronContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronContainer ; (; ). Method to test Tetrahedron container concistency. . ◆ checkTetrahedronToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronToEdgeCrossContainer ; (; ). Method to test Tetrahedron to edges cross container concistency. . ◆ checkTetrahedronTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronTopology ; (; ). } ; Tetrahedron methods { Full method to check Tetrahedron Topology. Will call See alsocheckTetrahedronContainer, . checkTetrahedronToTriangleCrossContainer . checkTetrahedronToEdgeCrossContainer and . checkTetrahedronToVertexCrossContainer . ◆ checkTetrahedronToTriangleCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronToTriangleCrossContainer ; (; ). Method to test Tetrahedron to triangles cross container concistency. . ◆ checkTetrahedronToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronToVertexCrossContainer ; (; ). Method to test Tetrahedron to vertices cross container concistency. . ◆ checkTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTopology ; (; ). ◆ checkTriangleContainer(). bool sofa::component::topology:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:19865,test,test,19865,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,"dingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::grid::SparseGridTopologyprotected; convolutionSizesofa::component::topology::container::grid::SparseGridTopology; cornerIndicesFromFineToCoarsesofa::component::topology::container::grid::SparseGridTopologystatic; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInQuadArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInTetrahedronArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInTriangleArray()sofa::component::topology::container::constant::MeshTopologyprotected; createHexahedraAroundEdgeArray()sofa::component::topology::container::constant::MeshTopologyprotected; createHexahedraAroundQuadArray()sofa::component::topology::container::constant::MeshTopologyprotected; createHexahedraAroundVertexArray()sofa::component::topology::container::constant::Me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html:10307,log,logging,10307,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,3,['log'],['logging']
Testability,"drawsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawColorsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalLengthsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; _drawNormalssofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; ACUTE enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Angle enum namesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html:1372,log,logging,1372,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,2,['log'],['logging']
Testability,"dvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::Mass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::core::behavior::Mass< DataTypes >; DataVecDeriv typedefsofa::core::behavior::Mass< DataTypes >; Deriv typedefsofa::core::behavior::Mass< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; exportGnuplot(const MechanicalParams *mparams, SReal time) overridesofa::core::behavior::Mass< DataTypes >virtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html:5964,log,logging,5964,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,1,['log'],['logging']
Testability,"dvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *) overridesofa::simulation::mechanicalvisitor::MechanicalEndIntegrationVisitorinlinevirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_end_integration_visitor-members.html:10391,test,testTags,10391,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_end_integration_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_end_integration_visitor-members.html,2,['test'],['testTags']
Testability,"dx1, const DataVecDeriv &dx2)=0sofa::core::behavior::PairInteractionForceField< TDataTypes >pure virtual; addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::PairInteractionForceField< TDataTypes >virtual; addForce(const MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2)=0sofa::core::behavior::PairInteractionForceField< TDataTypes >pure virtual; addKToMatrix(const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::core::behavior::BaseInteractionForceFieldinlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html:2195,log,logging,2195,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,1,['log'],['logging']
Testability,"e *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetVectorVisitor::independentOnly {false}. protected . ◆ offset. unsigned sofa::component::odesolver::testing::GetVectorVisitor::offset {0}. protected . ◆ src. core::ConstVecId sofa::component::odesolver::testing::GetVectorVisitor::src. protected . ◆ vec. linearalgebra::BaseVector* sofa::component::odesolver::testing::GetVectorVisitor::vec. protected . Constructor details. ◆ GetVectorVisitor(). sofa::component::odesolver::testing::GetVectorVisitor::GetVectorVisitor ; (; const sofa::core::ExecParams * ; params, . linearalgebra::BaseVector * ; vec, . core::ConstVecId ; src . ). inline . ◆ ~GetVectorVisitor(). sofa::component::odesolver::testing::GetVectorVisitor::~GetVectorVisitor ; (; ). overridedefault . Function details. ◆ getClassName(). const char* sofa::component::odesolver::testing::GetVectorVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html:5074,test,testing,5074,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,1,['test'],['testing']
Testability,"e *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::VisualVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(simulation::Node *, core::objectmodel::BaseObject *)sofa::simulation::VisualVisitorinlinevirtual; processVisualModel(simulation::Node *, core::visual::VisualModel *vm) overridesofa::simulation::VisualClearVisitorinlinevirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat) overridesofa::simulation::VisualVisitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; VisualClearVisitor(core::visual::VisualParams *params)sofa::simulation::VisualClearVisitorinline; VisualVisitor(core::visual::VisualParams *params)sofa::simulation::VisualVisitorinline; vparamssofa::simulation::VisualVisitorprotected; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor-members.html:4071,test,testTags,4071,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor-members.html,2,['test'],['testTags']
Testability,"e *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *) overridesofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionVisitorinlinevirtual; subsetsToManagesofa::simulation::Visitor; tsofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionVisitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; xsofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionVisitor; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_visitor-members.html:10821,test,testTags,10821,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_visitor-members.html,2,['test'],['testTags']
Testability,e DataTypes > . MatrixSym sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::E. ◆ Evalue. template<typename DataTypes > . CoordEigen sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::Evalue. ◆ Evect. template<typename DataTypes > . EigenMatrix sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::Evect. ◆ hasBeenInitialized. template<typename DataTypes > . bool sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::hasBeenInitialized. boolean indicating whether the invariants have been computed . ◆ J. template<typename DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::J. ◆ lambda. template<typename DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::lambda. ◆ logJ. template<typename DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::logJ. ◆ trC. template<typename DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::trC. Trace of C = I1. . ◆ trCsquare. template<typename DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::trCsquare. Trace of C^2 : I2 = (trCSquare - trC^2)/2. . Constructor details. ◆ StrainInformation(). template<typename DataTypes > . sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::StrainInformation ; (; ). inline . ◆ ~StrainInformation(). template<typename DataTypes > . virtual sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::~StrainInformation ; (; ). inlinevirtual . sofacomponentsolidmechanicsfemhyperelasticmaterialStrainInformation; Generated on Mon Nov 11 2024 03:01:05 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information.html:2451,log,logJ,2451,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information.html,1,['log'],['logJ']
Testability,"e NbColumn = C, typename = std::enable_if_t<NbLine == NbColumn>> ; constexpr bool invert (const Mat< L, C, real > &m);  Invert square matrix m. More...;  ; constexpr bool isTransform () const;  ; constexpr Vec< C-1, real > transform (const Vec< C-1, real > &v) const noexcept;  Multiplication operator Matrix * Vector considering the matrix as a transformation. More...;  ; template<sofa::Size NbLine = L, sofa::Size NbColumn = C, typename = std::enable_if_t<NbLine == NbColumn>> ; constexpr bool transformInvert (const Mat< L, C, real > &m);  Invert transformation matrix m. More...;  ; template<sofa::Size NbLine = L, sofa::Size NbColumn = C, typename = std::enable_if_t<NbLine == NbColumn>> ; constexpr void symmetrize () noexcept;  ; constexpr const real * data () const noexcept;  ; constexpr ArrayLineType::iterator begin () noexcept;  ; constexpr ArrayLineType::const_iterator begin () const noexcept;  ; constexpr ArrayLineType::iterator end () noexcept;  ; constexpr ArrayLineType::const_iterator end () const noexcept;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; Tests operators; constexpr bool operator== (const Mat< L, C, real > &b) const noexcept;  ; constexpr bool operator!= (const Mat< L, C, real > &b) const noexcept;  ; bool isSymmetric () const;  ; bool isDiagonal () const noexcept;  . Static Public Member Functions; static constexpr sofa::Size size ();  ; template<sofa::Size NbLine = L, sofa::Size NbColumn = C, typename = std::enable_if_t<NbLine == NbColumn>> ; static const Mat< L, L, real > & Identity () noexcept;  Returns the identity matrix. More...;  ; template<Size S> ; static bool canSelfTranspose (const Mat< S, S, real > &lhs, const Mat< S, S, real > &rhs) noexcept;  ; template<Size I, Size J> ; static bool canSelfTranspose (const Mat< I, J, real > &, const Mat< J, I, real > &) noexcept;  ; template<sofa::Size NbLine = L, sofa::Size NbColumn = C, ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:10087,Test,Tests,10087,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,1,['Test'],['Tests']
Testability,"e have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper::logging::Message::empty ; (; ); const. ◆ fileInfo(). const FileInfo::SPtr& sofa::helper::logging::Message::fileInfo ; (; ); const. inline . ◆ message(). const std::stringstream& sofa::helper::logging::Message::message ; (; ); const. inline . ◆ messageAsString(). const std::string sofa::helper::logging::Message::messageAsString ; (; ); const. inline . ◆ operator<<() [1/2]. template<> . SOFA_HELPER_API Message & sofa::helper::logging::Message::operator<< ; (; const FileInfo::SPtr & ; fi). ◆ operator<<() [2/2]. template<class T > . Message& sofa::helper::logging::Message::operator<< ; (; const T & ; x). inline . ◆ operator=(). Message & sofa::helper::logging::Message::operator= ; (; const Message & ; msg). ◆ sender(). const std::string& sofa::helper::logging::Message::sender ; (; ); const. inline . ◆ type(). Type sofa::helper::logging::Message::type ; (; ); const. inline . Enum details. ◆ Class. enum sofa::helper::logging::Message::Class. class of messages . EnumeratorDev ; Runtime ; Log ; CEmpty ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:3555,log,logging,3555,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,2,['log'],['logging']
Testability,"e linear system inversion, how much will it affect the velocity; This method is used to compute the compliance for contact corrections ; Reimplemented in sofa::component::odesolver::backward::VariationalSymplecticSolver, sofa::component::odesolver::backward::StaticSolver, sofa::component::odesolver::backward::NewmarkImplicitSolver, and sofa::component::odesolver::backward::EulerImplicitSolver. ◆ insertInNode(). bool sofa::core::behavior::OdeSolver::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::behavior::OdeSolver::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::behavior::OdeSolver::SOFA_ABSTRACT_CLASS ; (; OdeSolver ; , . objectmodel::BaseObject ;  . ). ◆ solve() [1/2]. virtual void sofa::core::behavior::OdeSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . MultiVecCoordId ; , . MultiVecDerivId ;  . ). pure virtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implemented in sofa::component::odesolver::backward::StaticSolver, sofa::component::odesolver::forward::RungeKutta4Solver, sofa::component::odesolver::forward::RungeKutta2Solver, sofa::component::odesolver::forward::EulerExplicitSolver, sofa::component::odesolver::forward::DampVelocitySolver, sofa::component::odesolver::forward::CentralDifferenceSolver, sofa::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:18749,test,test,18749,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,1,['test'],['test']
Testability,"e only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function details. ◆ init(). template<typename DataEngineType > . virtual void sofa::DataEngine_test< DataEngineType >::init ; (; void ; ). inlinevirtual . ◆ run_basic_test(). template<typename DataEngineType > . void sofa::DataEngine_test< DataEngineType >::run_basic_test ; (; ). inline . Testing the number of call to the DataEngine::update() function WarningDO NOT test the values computed by the engine To do so, you can inherit this class and add a test function that takes inputs and outputs to test . sofaDataEngine_test; Generated on Mon Nov 11 2024 02:16:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:2548,test,test,2548,api/master/sofa/html/structsofa_1_1_data_engine__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html,7,"['Test', 'test']","['Testing', 'test']"
Testability,"e with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2453,test,testing,2453,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,2,['test'],['testing']
Testability,"e() const overridesofa::simulation::BehaviorUpdatePositionVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processBehaviorModel(simulation::Node *node, core::BehaviorModel *b)sofa::simulation::BehaviorUpdatePositionVisitor; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::BehaviorUpdatePositionVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setDt(SReal _dt)sofa::simulation::BehaviorUpdatePositionVisitorinline; setTags(const TagSet &t)sofa::simulation::Visitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor-members.html:4363,test,testTags,4363,api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor-members.html,2,['test'],['testTags']
Testability,e() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDepthTexture()sofa::gl::component::shader::Lightinlinevirtual; getDirection()sofa::gl::component::shader::Lightinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLightType() overridesofa::gl::component::shader::PositionalLightinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOpenGLModelViewMatrix()sofa::gl::component::shader::Light; getOpenGLProjectionMatrix()sofa::gl::component::shader::Light; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPosition() overridesofa::gl::component::shader::PositionalLightinlinevirtual; getShadowFactor()sofa::gl::component::shader::Lightinlinevirtual; getShadowMapSize()sofa::gl::component::shader::Lightvirtual; getShadowTextureUnit()sofa::gl::component::shader::Lightinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTim,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html:7240,log,logging,7240,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,2,['log'],['logging']
Testability,"e() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntegrationFactor(int inputDerivative, int outputDerivative) const overridesofa::component::odesolver::forward::DampVelocitySolverinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPositionIntegrationFactor() constsofa::core::behavior::OdeSolverinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolutionIntegrationFactor(int) const overridesofa::component::odesolver::forward::DampVelocitySolverinlinevirtual; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getVelocityIntegrationFactor() constsofa::core::behavior::OdeSolverinlinevirtual; handleEvent(Event *)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html:4901,log,logging,4901,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,1,['log'],['logging']
Testability,"e() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; EdgesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInTriangle typedefsofa::core::topology::BaseMeshTopology; ElemID typedefsofa::core::topology::Topology; endChange() constsofa::core::topology::BaseMeshTopologyvirtual; endStat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:3103,log,logging,3103,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,1,['log'],['logging']
Testability,"e()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGrid()sofa::component::visual::VisualGrid; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::VisualGrid; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::visual::VisualGrid; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbSubdivsofa::component::visual::VisualGrid; d_planesofa::component::visual::VisualGrid; d_sizesofa::component::visual::VisualGrid; d_thicknesssofa::component::visual::VisualGrid; doDrawVisual(const core::visual::VisualParams *) overridesofa::component::visual::VisualGridvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::component::visual::VisualGridvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:2703,log,logging,2703,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,1,['log'],['logging']
Testability,"e(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_dmaxsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_dminsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; DataVecDeriv typedefsofa::component::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html:3325,log,logging,3325,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,1,['log'],['logging']
Testability,"e(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::core::behavior::RotationFinder< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Deriv typedefsofa::core::behavior::RotationFinder< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html:2168,log,logging,2168,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,1,['log'],['logging']
Testability,"e(const sofa::core::MechanicalParams *, DataVecDeriv &dataF, const DataVecCoord &dataX, const DataVecDeriv &dataV) overridesofa::component::mechanicalload::EdgePressureForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; arrowSizeCoefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html:2878,log,logging,2878,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,1,['log'],['logging']
Testability,"e) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *map)sofa::simulation::BaseMechanicalVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; xsofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndResetForceVisitor; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_reset_force_visitor-members.html:10935,test,testTags,10935,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_reset_force_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_reset_force_visitor-members.html,2,['test'],['testTags']
Testability,"e, type, TDataTypes >protected; _indexsofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _lastUpdateDataCountersofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _needUpdatesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _topologysofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; _usagesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >protected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::visual::VisualModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyRotation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html:1457,log,logging,1457,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,1,['log'],['logging']
Testability,"e...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists. More...;  ; void parseFields (const std::list< std::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html:10882,log,logErrors,10882,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,9,['log'],['logErrors']
Testability,"e...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_dumpState. Data<bool> sofa::component::setting::StatsSetting::d_dumpState. Dump state vectors at each time step of the simulation. . ◆ d_exportState. Data<bool> sofa::component::setting::StatsSetting::d_exportState. Create GNUPLOT files with the positions, velocities and forces of all the simulated objects of the scene. . ◆ d_logTime. Data<bool> sofa::component::setting::StatsSetting::d_logTime. Output in the console an average of the time spent during different stages of the simulation. . ◆ dumpState. sofa::core::objectmodel::RenamedData<bool> sofa::component::setting::StatsSetting::dumpState. ◆ exportState. sofa::core::objectmodel::RenamedData<bool> sofa::component::setting::StatsSetting::exportState. ◆ logTime. sofa::core::objectmodel::RenamedData<bool> sofa::component::setting::StatsSetting::logTime. Constructor details. ◆ StatsSetting(). sofa::component::setting::StatsSetting::StatsSetting ; (; ). protected . Default constructor. ; By default :; d_dumpState is set to false.; logTime is set to false.; d_exportState is set to false. . Function details. ◆ SOFA_CLASS(). sofa::component::setting::StatsSetting::SOFA_CLASS ; (; StatsSetting ; , . core::objectmodel::ConfigurationSetting ;  . ). Sofa macro to define typedef. . sofacomponentsettingStatsSetting; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html:14614,log,logTime,14614,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,3,['log'],['logTime']
Testability,"e::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< DataTypes >virtual; Coord typedefsofa::component::statecontainer::MappedObject< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_Vsofa::component::statecontainer::MappedObject< DataTypes >; d_Xsofa::component::statecontainer::MappedObject< DataTypes >; datasofa::component::statecontainer::MappedObject< DataTypes >protected; DataTypes typedefsofa::core::State< DataTypes >; Deriv typedefsofa::component::statecontainer::MappedObject< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; f_Vsofa::component::statecontainer::MappedObject< DataTypes >; f_Xsofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html:2639,log,logging,2639,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,1,['log'],['logging']
Testability,"e::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream error (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream fatal (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher::addHandler ; (; MessageHandler * ; o). static . to add a MessageHandler . ◆ advice(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::advice ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcher::clearHandlers ; (; ). static . to remove every MessageHandlers . ◆ deprecated(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::deprecated ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ error(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::error ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ fatal(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::fatal ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ getHandlers(). std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:2134,log,logging,2134,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,3,"['Log', 'log']","['LoggerStream', 'logging']"
Testability,"e::CollisionModel; SOFA_ABSTRACT_CLASS(CollisionModel, objectmodel::BaseObject)sofa::core::CollisionModel; SOFA_CLASS(SOFA_TEMPLATE(SphereCollisionModel, TDataTypes), core::CollisionModel)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; sofa::core::CollisionModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPHERE_TYPE enum valuesofa::core::CollisionModel; SphereCollisionModel()sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SphereCollisionModel(core::behavior::MechanicalState< TDataTypes > *_mstate)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >protected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TETRAHEDRON_TYPE enum valuesofa::core::CollisionModel; Topology typedefsofa::core::CollisionModel; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE_TYPE enum valuesofa::core::CollisionModel; TSphere< DataTypes > classsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >friend; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; userDatasofa::core::CollisionModelprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecReal typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; velocity(sofa::Index index) constsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inline; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionModel() overridesofa::core::CollisionModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:17051,log,logErrors,17051,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,1,['log'],['logErrors']
Testability,"e::State<DataTypes>* sofa::gl::component::rendering3d::DataDisplay::state. Constructor details. ◆ DataDisplay(). sofa::gl::component::rendering3d::DataDisplay::DataDisplay ; (; ). protected . Function details. ◆ computeNormals(). void sofa::gl::component::rendering3d::DataDisplay::computeNormals ; (; ). protected . ◆ doDrawVisual(). void sofa::gl::component::rendering3d::DataDisplay::doDrawVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ doUpdateVisual(). void sofa::gl::component::rendering3d::DataDisplay::doUpdateVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ init(). void sofa::gl::component::rendering3d::DataDisplay::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ insertInNode(). bool sofa::gl::component::rendering3d::DataDisplay::insertInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::visual::VisualModel. ◆ removeInNode(). bool sofa::gl::component::rendering3d::DataDisplay::removeInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::visual::VisualModel. ◆ SOFA_CLASS2(). sofa::gl::component::rendering3d::DataDisplay::SOFA_CLASS2 ; (; DataDisplay ; , . core::visual::VisualModel ; , . Vec3State ;  . ). sofaglcomponentrendering3dDataDisplay; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:23534,test,test,23534,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,2,['test'],['test']
Testability,e::behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInteractionIdentifiers()sofa::core::behavior::BaseInteractionConstraintinlineprotectedvirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMechModel1()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; getMechModel2()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupsofa::core::behavior::BaseConstraintSetprotected; handleEvent(Event *)so,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html:6279,log,logging,6279,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,1,['log'],['logging']
Testability,"e::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshNewProximityIntersection(NewProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:6813,test,testIntersection,6813,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,e::collision::Pipeline; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNarrowPhaseDetection() constsofa::core::collision::Pipeline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResponseList() const =0sofa::core::collision::Pipelinepure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupManagersofa::core::collision::Pipelineprotected; groupManagerssofa::core::collision::Pipelineprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html:5206,log,logging,5206,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,3,['log'],['logging']
Testability,e::collision::Pipeline; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNarrowPhaseDetection() constsofa::core::collision::Pipeline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResponseList() const overridesofa::component::collision::detection::algorithm::CollisionPipelinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupManagersofa::core::collision::Pipelineprotected; groupManagerssofa::core::collision::Pipelineprotected; handleEvent(Event *)sofa::c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:5933,log,logging,5933,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,1,['log'],['logging']
Testability,"e::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::BruteForceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:2295,log,logging,2295,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,1,['log'],['logging']
Testability,"e::objectmodel::Base; CollisionElement1 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; CollisionElement2 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; CollisionModel1 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; CollisionModel2 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; ContactIdentifier()sofa::component::collision::response::contact::ContactIdentifier; contactssofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; cptsofa::component::collision::response::contact::ContactIdentifierinlineprotectedstatic; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; createResponse(core::objectmodel::BaseContext *group) overridesofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >virtual; d_componentStatesofa::core::objectmodel::Base; d_keepAlivesofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; d_messageLogCount",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html:3277,log,logging,3277,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,1,['log'],['logging']
Testability,"e::objectmodel::Base; getDOF() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inline; getEdgeNumericalIntegrationDescriptor()sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOppositePoint(PointID ind_p, const Edge &indices, Real coord_p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getRestEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html:15939,log,logging,15939,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"e::objectmodel::Base; getDOF() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inline; getEdgeNumericalIntegrationDescriptor()sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getQuadVertexCoordinates(const QuadID i, Coord[4]) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; getRestEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::cont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html:11899,log,logging,11899,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"e::objectmodel::Base; getDOF() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inline; getEdgeNumericalIntegrationDescriptor()sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getRestEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html:10880,log,logging,10880,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"e::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod)sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< EigenOrderingMethodType >; sofa::core::behavior::BaseOrderingMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseOrderingMethod() overridesofa::core::behavior::BaseOrderingMethod.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html:10354,log,logErrors,10354,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,1,['log'],['logErrors']
Testability,"e::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MergeMeshes, DataTypes), core::DataEngine)sofa::component::engine::generate::MergeMeshes< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::generate::MergeMeshes< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecIndex typedefsofa::component::engine::generate::MergeMeshes< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vf_edgessofa::component::engine::generate::MergeMeshes< DataTypes >; vf_hexahedrasofa::component::engine::generate::MergeMeshes< DataTypes >; vf_polygonssofa::component::engine::generate::MergeMeshes< DataTypes >; vf_positionssofa::component::engine::generate::MergeMeshes< DataTypes >; vf_quadssofa::component::engine::generate::MergeMeshes< DataTypes >; vf_tetrahedrasofa::component::engine::generate::MergeMeshes< DataTypes >; vf_trianglessofa::component::engine::generate::MergeMeshes< DataTypes >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html:13867,log,logErrors,13867,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,1,['log'],['logErrors']
Testability,"e::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_P1sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_P2sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_P3sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_tBeginsofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_tEndsofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::ParabolicProjectiveCons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html:3272,log,logging,3272,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,1,['log'],['logging']
Testability,"e::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSystem()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *params, linearalgebra::BaseVector *f) overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createDefaultLinearSystem()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; createInvertData()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protectedvirtual; createMatrix()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; createPersistentVector()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; currentBFactorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; currentKFactorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; currentMFactorsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; d_componentStatesofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html:3793,log,logging,3793,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,1,['log'],['logging']
Testability,"e::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_displacementssofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_xsofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >; d_x0sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; DisplacementTransformEng",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine-members.html:3048,log,logging,3048,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine-members.html,1,['log'],['logging']
Testability,"e::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; colorsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computePlaneSeparations()sofa::gl::component::rendering3d::SlicedVolumetricModelprotected; Coord typedefsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering3d::SlicedVolumetricModelvirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; Edge typedefsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; EdgesMap typedefsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html:4180,log,logging,4180,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,1,['log'],['logging']
Testability,"e::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BehaviorModel, objectmodel::BaseObject)sofa::core::BehaviorModel; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updatePosition(SReal dt)=0sofa::core::BehaviorModelpure virtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BehaviorModel() overridesofa::core::BehaviorModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html:9808,log,logErrors,9808,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,1,['log'],['logErrors']
Testability,"e::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(TopologyChecker, core::objectmodel::BaseObject)sofa::component::topology::utility::TopologyChecker; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TopologyChecker()sofa::component::topology::utility::TopologyCheckerprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~TopologyChecker() overridesofa::component::topology::utility::TopologyCheckerprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html:12000,log,logErrors,12000,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html,1,['log'],['logErrors']
Testability,"e::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getElementStiffnessMatrix(Real *stiffness, Index nodeIdx)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >inline; getInitialTetraRotation(Index index)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMaterialStiffness(TetrahedronID tetraId)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPoissonRatioInElement(sofa::Size elementId) constsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &x) const overridesofa::component::solidme",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html:20188,log,logging,20188,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,e::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; GetCustomClassName()sofa::component::sceneutility::makealiascomponent::MakeAliasComponentinlinestatic; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html:4681,log,logging,4681,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,1,['log'],['logging']
Testability,e::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFileRepository() overridesofa::component::sceneutility::AddPluginRepositoryinlineprotectedvirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html:4674,log,logging,4674,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html,1,['log'],['logging']
Testability,"e::visual::VisualModel, sofa::core::visual::VisualState< defaulttype::Vec3Types >)sofa::component::visual::VisualModelImpl; sourceFactorsofa::gl::component::rendering3d::OglModelprotected; SPtr typedefsofa::core::objectmodel::Base; srgbTexturingsofa::component::visual::VisualModelImpl; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texsofa::gl::component::rendering3d::OglModelprotected; TexCoord typedefsofa::component::visual::VisualModelImpl; texturenamesofa::component::visual::VisualModelImpl; texturessofa::gl::component::rendering3d::OglModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglesRevisionsofa::gl::component::rendering3d::OglModelprotected; updateBuffers() overridesofa::gl::component::rendering3d::OglModelvirtual; updateEdgesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateQuadsIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateTrianglesIndicesBuffer()sofa::gl::component::rendering3d::OglModel; updateVertexBuffer()sofa::gl::component::rendering3d::OglModel; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; useEdgessofa::gl::component::rendering3d::OglModelprotected; useQuadssofa::gl::component::rendering3d::OglModelprotected; useTopologysofa::component::visual::VisualModelImpl; useTrianglessofa::gl::component::rendering3d::OglModelprotected; vbosofa::gl::component::rendering3d::OglModelprotected; VBOGenDonesofa::gl::component::rendering3d::OglModelprotected; Vec3Real typedefsofa::component::visual::VisualModelImpl; VecCoord typedefsofa::component::visual::VisualModelImpl; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::visual::VisualModelImpl; VecLink typedefsofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html:26924,log,logErrors,26924,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model-members.html,3,['log'],['logErrors']
Testability,"e; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html:2295,log,logging,2295,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,1,['log'],['logging']
Testability,"e; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() constsofa::core::objectmodel::BaseContextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; executeVisitor(simulation::Visitor *, bool precomputedOrder=false)sofa::core::objectmodel::BaseContextvirtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html:1623,log,logging,1623,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,1,['log'],['logging']
Testability,"e; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ComplementaryROI()sofa::component::engine::select::ComplementaryROI< DataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::engine::select::ComplementaryROI< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbSetsofa::component::engine::select::ComplementaryROI< DataTypes >protected; d_pointsInROIsofa::component::engine::select::ComplementaryROI< DataTypes >protected; d_positionsofa::component::engine::select::ComplementaryROI< DataTypes >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i-members.html:2975,log,logging,2975,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i-members.html,1,['log'],['logging']
Testability,e; getBroadPhaseDetection() constsofa::core::collision::Pipeline; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNarrowPhaseDetection() constsofa::core::collision::Pipeline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResponseList() const =0sofa::core::collision::Pipelinepure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupManagersofa::core::collision::Pipelineprotected; groupManagerssofa::core::collision::Pipelineprotected; handleEvent(Event *)so,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html:5164,log,logging,5164,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,3,['log'],['logging']
Testability,e; getBroadPhaseDetection() constsofa::core::collision::Pipeline; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNarrowPhaseDetection() constsofa::core::collision::Pipeline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResponseList() const overridesofa::component::collision::detection::algorithm::CollisionPipelinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupManagersofa::core::collision::Pipelineprotected; groupManagerssofa::core::collision::Pipe,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:5891,log,logging,5891,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,1,['log'],['logging']
Testability,"e; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getFromModel()sofa::core::Mapping< TIn, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs()sofa::core::BaseMappinginlinevirtual; getK()sofa::core::BaseMappinginlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getMechTo() overridesofa::core::Mapping< TIn, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo() overridesofa::core::Mapping< TIn, TOut >virtual; getToModel()sofa::core::Mapping< TIn, TOut >; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html:7322,log,logging,7322,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,1,['log'],['logging']
Testability,"e; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getFromModel()sofa::core::Mapping< TIn, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs() overridesofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >virtual; getK() finalsofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >virtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getMechTo() overridesofa::core::Mapping< TIn, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo() overridesofa::core::Mapping< TIn, TOut >virtual; getToModel()sofa::core::Mapping< TIn, TOut >; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html:9065,log,logging,9065,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,1,['log'],['logging']
Testability,"e; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::topology::mapping::Tetra2TriangleTopologicalMappingvirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind)sofa::core::topology::TopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html:6007,log,logging,6007,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,1,['log'],['logging']
Testability,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setLock(bool value)sofa::component::haptics::ForceFeedbackinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setReferencePosition(sofa::type::Transform< SReal > &referencePosition)sofa::component::haptics::ForceFeedbackvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ForceFeedback, core::behavior::BaseController)sofa::component::haptics::ForceFeedback; sofa::core::behavior::BaseController::SOFA_ABSTRACT_CLASS(BaseController, core::objectmodel::BaseObject)sofa::core::behavior::BaseController; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html:10687,log,logErrors,10687,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,1,['log'],['logErrors']
Testability,"e; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(PauseAnimation, core::objectmodel::BaseObject)sofa::component::sceneutility::PauseAnimation; SOFA_CLASS(PauseAnimationOnEvent, PauseAnimation)sofa::component::sceneutility::PauseAnimationOnEvent; sofa::component::sceneutility::PauseAnimation::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~PauseAnimation() overridesofa::component::sceneutility::PauseAnimationprotected; ~PauseAnimationOnEvent() overridesofa::component::sceneutility::PauseAnimationOnEventprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html:10398,log,logErrors,10398,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,1,['log'],['logErrors']
Testability,"e; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(FixPickedParticleButtonSetting, MouseButtonSetting)sofa::gui::component::FixPickedParticleButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; stiffnesssofa::gui::component::FixPickedParticleButtonSetting; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html:10678,log,logErrors,10678,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting-members.html,2,['log'],['logErrors']
Testability,"e; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MergePoints, DataTypes), core::DataEngine)sofa::component::engine::generate::MergePoints< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::generate::MergePoints< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~MergePoints() overridesofa::component::engine::generate::MergePoints< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points-members.html:12871,log,logErrors,12871,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points-members.html,1,['log'],['logErrors']
Testability,"e; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(SumEngine, TDataType), core::DataEngine)sofa::component::engine::analyze::SumEngine< TDataType >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; SumEngine()sofa::component::engine::analyze::SumEngine< TDataType >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::component::engine::analyze::SumEngine< TDataType >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~SumEngine() overridesofa::component::engine::analyze::SumEngine< TDataType >inline.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html:12429,log,logErrors,12429,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html,1,['log'],['logErrors']
Testability,"e; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualManagerPass, core::visual::VisualManager)sofa::gl::component::shader::VisualManagerPass; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualManagerPass()sofa::gl::component::shader::VisualManagerPass; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualManagerPass() overridesofa::gl::component::shader::VisualManagerPass; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html:12749,log,logErrors,12749,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,2,['log'],['logErrors']
Testability,"e;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection);  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=delete;  ; int computeIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; bool testIntersection (SphereType1 &sph1, SphereType2 &sph2)=delete;  ; template<typename SphereType1 , typename SphereType2 > ; int computeIntersection (SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:3623,test,testIntersection,3623,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,3,['test'],['testIntersection']
Testability,"eAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(UniformVelocityDampingForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::behavior::ForceField< DataTypes >; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; UniformVelocityDampingForceField()sofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; VecIndex typedefsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ForceField() overridesofa::core::behavior::ForceField< DataTypes >protected; ~SingleStateAccessor() override=defaultsofa::core::behavi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field-members.html:15788,log,logErrors,15788,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field-members.html,1,['log'],['logErrors']
Testability,"eContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies() overridesofa::component::topology::mapping::Tetra2TriangleTopologicalMappingvirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_flipNormalssofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_noInitialTrianglessofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; d_noNewTrianglessofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html:2657,log,logging,2657,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,1,['log'],['logging']
Testability,"eData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAddResourceRepository()sofa::component::sceneutility::BaseAddResourceRepositoryprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::sceneutility::BaseAddResourceRepositoryvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_repositoryPathsofa::component::sceneutility::BaseAddResourceRepository; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::stri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html:2226,log,logging,2226,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,3,['log'],['logging']
Testability,"eField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMassDensity(const sofa::type::vector< Index > &indices, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs)sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId) overridesofa::core::behavior::Mass< DataTypes >virtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addMDx(const core::MechanicalParams *, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; sofa::core::behavior::Mass::addMDx(const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) overridesofa::core::behavior::Mass< DataTypes >virtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addMToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) overridesofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; sofa::core::behavior::Mass::addMToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::Mass< DataTypes >virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> functi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html:4004,log,logging,4004,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,1,['log'],['logging']
Testability,"eField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::mechanicalload::TorsionForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::mechanicalload::TorsionForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_originsofa::component::mechanicalload::TorsionForceField< DataTypes >; d_torquesofa::component::mechanicalload::TorsionForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; DataVecDeriv typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; Deriv typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html:5633,log,logging,5633,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,1,['log'],['logging']
Testability,"eField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ComputeJacobian(unsigned int stiffnessIndex, unsigned int springIndex)sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_compressiblesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_computeZeroLengthsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_drawModesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_firstObjectPointssofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_polynomialDegreesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_polynomialStiffnesssofa::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html:4666,log,logging,4666,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,1,['log'],['logging']
Testability,"eFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::topology::mapping::SubsetTopologicalMappingvirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind) overridesofa::component::topology::mapping::SubsetTopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEdgessofa::component::topology::mapping::SubsetTopologicalMapping; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleHexahe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html:6996,log,logging,6996,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,1,['log'],['logging']
Testability,"eFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTime(double time)sofa::component::playback::ReadTopology; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ReadTopology, core::objectmodel::BaseObject)sofa::component::playback::ReadTopology; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tetrahedrasofa::component::playback::ReadTopology; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; trianglessofa::component::playback::ReadTopology; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ReadTopology() overridesofa::component::playback::ReadTopologyprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html:11200,log,logErrors,11200,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html,1,['log'],['logErrors']
Testability,"eFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html:11835,log,logErrors,11835,api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine-members.html,1,['log'],['logErrors']
Testability,"eLine is true); Triangle/Point; Sphere/Point (if d_useSphereTriangle is true); RigidSphere/Point (if d_useSphereTriangle is true); Triangle/Sphere (if d_useSphereTriangle is true); Triangle/RigidSphere (if d_useSphereTriangle is true); Line/Sphere (if d_useSphereTriangle is true); Line/RigidSphere (if d_useSphereTriangle is true) Note that MeshMinProximityIntersection ignores Triangle/Line and Triangle/Triangle intersections. Datas can be set to ignore some pairs of collision models (d_useSphereTriangle, d_usePointPoint, etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2047,test,tests,2047,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,1,['test'],['tests']
Testability,"eList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(TransformEngine, DataTypes), core::DataEngine)sofa::component::engine::transform::TransformEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TransformEngine()sofa::component::engine::transform::TransformEngine< DataTypes >protected; translationsofa::component::engine::transform::TransformEngine< DataTypes >protected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::engine::transform::TransformEngine< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DataEngine() overridesofa::core::DataEngineprotected; ~DDGNode()sofa::core::objectmodel::DDGNodevirtual; ~TransformEngine() overridesofa::component::engine::transform::TransformEngine< DataTypes >inlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html:13032,log,logErrors,13032,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html,1,['log'],['logErrors']
Testability,"eMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContact() constsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >inline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html:8302,log,logging,8302,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,1,['log'],['logging']
Testability,"eMatrix_test.h>; Type-parameterized tests for classes derived from BaseMatrix. ; More... Inheritance diagram for sofa::linearalgebra::testing::TestBaseMatrix< T >:. [legend]; Detailed Description; template<class T>; class sofa::linearalgebra::testing::TestBaseMatrix< T >; Type-parameterized tests for classes derived from BaseMatrix. . Static Public Attributes; static constexpr sofa::Index NbRows = T::NbRows;  ; static constexpr sofa::Index NbCols = T::NbCols;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Protected Attributes; sofa::type::Mat< NbRows, NbCols, Real > m_modelMatrix;  ; std::unique_ptr< sofa::linearalgebra::BaseMatrix > m_testedMatrix {nullptr};  . Public Member Functions; void onSetUp () override;  ; void onTearDown () override;  ; void checkResize ();  ; void checkAddScalar ();  ; void checkAddBloc (sofa::linearalgebra::BaseMatrix::Index posRow, sofa::linearalgebra::BaseMatrix::Index posCol);  ;  Public Member Functions inherited from sofa::testing::NumericTest< T::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< T::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have dif",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html:1419,test,testing,1419,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,2,['test'],['testing']
Testability,"eMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; ressofa::simulation::mechanicalvisitor::MechanicalBuildConstraintMatrixprotected; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *, sofa::core::BaseMapping *) overridesofa::simulation::mechanicalvisitor::MechanicalBuildConstraintMatrixinlinevirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_build_constraint_matrix-members.html:10652,test,testTags,10652,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_build_constraint_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_build_constraint_matrix-members.html,2,['test'],['testTags']
Testability,"eName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(VoxelLoader, BaseLoader)sofa::core::loader::VoxelLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3i typedefsofa::core::loader::VoxelLoader; Vec6i typedefsofa::core::loader::VoxelLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VoxelLoader()sofa::core::loader::VoxelLoaderprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VoxelLoader() overridesofa::core::loader::VoxelLoaderprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:11265,log,logErrors,11265,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['log'],['logErrors']
Testability,"eName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setLock(bool value)sofa::component::haptics::ForceFeedbackinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setReferencePosition(sofa::type::Transform< SReal > &referencePosition)sofa::component::haptics::ForceFeedbackvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ForceFeedback, core::behavior::BaseController)sofa::component::haptics::ForceFeedback; sofa::core::behavior::BaseController::SOFA_ABSTRACT_CLASS(BaseController, core::objectmodel::BaseObject)sofa::core::behavior::BaseController; SOFA_CLASS(NullForceFeedback, ForceFeedback)sofa::component::haptics::NullForceFeedback; sofa::component::haptics::ForceFeedback::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html:10877,log,logErrors,10877,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html,1,['log'],['logErrors']
Testability,"eNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixLinearSystem, core::objectmodel::BaseObject)sofa::core::behavior::BaseMatrixLinearSystem; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html:10482,log,logErrors,10482,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,1,['log'],['logErrors']
Testability,"eObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::VisualTransform; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_recursivesofa::component::visual::VisualTransform; d_transformsofa::component::visual::VisualTransform; doDrawVisual(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; drawVisual(const VisualParams *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html:2759,log,logging,2759,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,1,['log'],['logging']
Testability,"eObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BVHNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::BVHNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:13817,log,logErrors,13817,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,1,['log'],['logErrors']
Testability,"eObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centersofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_centersofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_dminsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_frequencysofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_momentsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_penaltysofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_showForcessofa::component::mechanicalload::OscillatingTorsionPressureForceField< Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html:5288,log,logging,5288,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,1,['log'],['logging']
Testability,"eObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::NormalsFromPoints< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html:3021,log,logging,3021,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,1,['log'],['logging']
Testability,"eObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::MeshSplittingEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine-members.html:3021,log,logging,3021,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine-members.html,1,['log'],['logging']
Testability,"eObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::IndexValueMapper< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper-members.html:3021,log,logging,3021,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper-members.html,1,['log'],['logging']
Testability,"eObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< EigenOrderingMethodType >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html:2549,log,logging,2549,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,1,['log'],['logging']
Testability,"eProximity() is false) ; Reimplemented from sofa::core::collision::Intersection. ◆ setAlarmDistance(). void sofa::component::collision::detection::intersection::BaseProximityIntersection::setAlarmDistance ; (; SReal ; v). inlineoverridevirtual . Sets the alarm distance (if useProximity() is false, the alarm distance is equal to 0) ; Reimplemented from sofa::core::collision::Intersection. ◆ setContactDistance(). void sofa::component::collision::detection::intersection::BaseProximityIntersection::setContactDistance ; (; SReal ; v). inlineoverridevirtual . Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) ; Reimplemented from sofa::core::collision::Intersection. ◆ SOFA_ABSTRACT_CLASS(). sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_ABSTRACT_CLASS ; (; BaseProximityIntersection ; , . DiscreteIntersection ;  . ). ◆ testIntersection() [1/2]. bool sofa::component::collision::detection::intersection::BaseProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection.; Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [2/2]. bool sofa::component::collision::detection::intersection::BaseProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection.; Reimplemented in sofa::component::collision::detection::intersection::NewProximityInterse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:23508,test,testIntersection,23508,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"eResetStateVisitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *node) overridesofa::simulation::StoreResetStateVisitorvirtual; sofa::simulation::Visitor::processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::StoreResetStateVisitorvirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processObject(core::objectmodel::BaseObject *obj)sofa::simulation::StoreResetStateVisitor; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setTags(const TagSet &t)sofa::simulation::Visitorinline; StoreResetStateVisitor(const core::ExecParams *params)sofa::simulation::StoreResetStateVisitorinline; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor-members.html:4102,test,testTags,4102,api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor-members.html,2,['test'],['testTags']
Testability,"eSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::colli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:2853,log,logging,2853,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,1,['log'],['logging']
Testability,"eToVertexCrossContainer ; (; ). Method to test Edge to vertex cross container concistency. . ◆ checkHexahedronContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronContainer ; (; ). Method to test Hexahedron container concistency. . ◆ checkHexahedronToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToEdgeCrossContainer ; (; ). Method to test Hexahedron to edges cross container concistency. . ◆ checkHexahedronTopology(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronTopology ; (; ). } ; Hexahedron methods { Full method to check Hexahedron Topology. Will call See alsocheckHexahedronContainer, . checkHexahedronToQuadCrossContainer . checkHexahedronToEdgeCrossContainer and . checkHexahedronToVertexCrossContainer . ◆ checkHexahedronToQuadCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToQuadCrossContainer ; (; ). Method to test Hexahedron to quads cross container concistency. . ◆ checkHexahedronToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkHexahedronToVertexCrossContainer ; (; ). Method to test Hexahedron to vertices cross container concistency. . ◆ checkQuadContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadContainer ; (; ). Method to test quad container concistency. . ◆ checkQuadToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToEdgeCrossContainer ; (; ). Method to test quads to edges cross container concistency. . ◆ checkQuadTopology(). bool sofa::component::topology::utility::TopologyChecker::checkQuadTopology ; (; ). } ; Quad methods { Full method to check Quad Topology. Will call See alsocheckQuadContainer, . checkQuadToEdgeCrossContainer and . checkQuadToVertexCrossContainer . ◆ checkQuadToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkQuadToVertexCrossContainer ; (;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:18446,test,test,18446,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,"eTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processObject (simulation::Node *, core::objectmodel::BaseObject *obj);  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html:1898,test,testTags,1898,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,2,['test'],['testTags']
Testability,"eTriangleNormal (const TriangleID ind_t) const;  Computes the normal vector of a triangle indexed by ind_t (not normed) More...;  ; bool isQuadDeulaunayOriented (const typename DataTypes::Coord &p_q1, const typename DataTypes::Coord &p_q2, QuadID ind_q3, QuadID ind_q4);  Tests how to triangularize a quad whose vertices are defined by (p_q1, p_q2, ind_q3, ind_q4) according to the Delaunay criterion. More...;  ; bool isQuadDeulaunayOriented (const typename DataTypes::Coord &p1, const typename DataTypes::Coord &p2, const typename DataTypes::Coord &p3, const typename DataTypes::Coord &p4);  Tests how to triangularize a quad whose vertices are defined by (p1, p2, p3, p4) according to the Delaunay criterion. More...;  ; bool isDiagonalsIntersectionInQuad (const typename DataTypes::Coord triangle1[3], const typename DataTypes::Coord triangle2[3]);  Given two triangles, test if the intersection of the diagonals of the quad composed by the triangles is inside the quad or not. (test if triangles form a quad) More...;  ; sofa::type::Vec< 3, Real > getOppositePoint (PointID ind_p, const Edge &indices, Real coord_p) const;  Computes the opposite point to ind_p. More...;  ; bool isTriangleInPlane (const TriangleID ind_t, const PointID ind_p, const sofa::type::Vec< 3, Real > &plane_vect) const;  Tests if a triangle indexed by ind_t (and incident to the vertex indexed by ind_p) is included or not in the plane defined by (ind_p, plane_vect) More...;  ; void prepareVertexDuplication (const PointID ind_p, const TriangleID ind_t_from, const TriangleID ind_t_to, const Edge &indices_from, const Real &coord_from, const Edge &indices_to, const Real &coord_to, sofa::type::vector< TriangleID > &triangles_list_1, sofa::type::vector< TriangleID > &triangles_list_2) const;  Prepares the duplication of a vertex. More...;  ; bool computeSegmentTriangleIntersection (bool is_entered, const sofa::type::Vec< 3, Real > &a, const sofa::type::Vec< 3, Real > &b, const TriangleID ind_t, sofa::type::vector",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:14440,test,test,14440,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,2,['test'],['test']
Testability,"e_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::collision::detection::algorithm::CollisionPipel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:2895,log,logging,2895,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,1,['log'],['logging']
Testability,"eabstract . #include <Intersection.h>. Inheritance diagram for sofa::core::collision::ElementIntersector:. [legend]. Public Member Functions; virtual ~ElementIntersector ();  ; virtual bool canIntersect (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, const core::collision::Intersection *currentIntersection)=0;  Test if 2 elements can collide. Note that this can be conservative (i.e. return true even when no collision is present) More...;  ; virtual int beginIntersect (core::CollisionModel *model1, core::CollisionModel *model2, DetectionOutputVector *&contacts)=0;  ; virtual int intersect (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, DetectionOutputVector *contacts, const core::collision::Intersection *currentIntersection)=0;  Compute the intersection between 2 elements. Return the number of contacts written in the contacts vector. More...;  ; virtual int endIntersect (core::CollisionModel *model1, core::CollisionModel *model2, DetectionOutputVector *contacts)=0;  End intersection tests between two collision models. Return the number of contacts written in the contacts vector. More...;  ; virtual std::string name () const =0;  ; virtual bool canIntersect (core::CollisionElementIterator, core::CollisionElementIterator)=delete;  ; virtual int intersect (core::CollisionElementIterator, core::CollisionElementIterator, DetectionOutputVector *)=delete;  . Constructor details. ◆ ~ElementIntersector(). virtual sofa::core::collision::ElementIntersector::~ElementIntersector ; (; ). inlinevirtual . Function details. ◆ beginIntersect(). virtual int sofa::core::collision::ElementIntersector::beginIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . DetectionOutputVector *& ; contacts . ). pure virtual . Begin intersection tests between two collision models. Return the number of contacts written in the contacts vector. If the given contacts vector is nullptr, then this method should allocat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_element_intersector.html:1306,test,tests,1306,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_element_intersector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_element_intersector.html,1,['test'],['tests']
Testability,"eal > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ patchStruct. template<typename _DataTypes > . PatchTestStruct<DataTypes> sofa::AffinePatch_sofa_test< _DataTypes >::patchStruct. Structure which contains current node and pointers to the mechanical object and the affine constraint. . ◆ root. template<typename _DataTypes > . simulation::Node::SPtr sofa::AffinePatch_sofa_test< _DataTypes >::root. Root of the scene graph. . ◆ simulation. template<typename _DataTypes > . simulation::Simulation* sofa::AffinePatch_sofa_test< _DataTypes >::simulation. Tested simulation. . ◆ testedRotation. template<typename _DataTypes > . type::Mat<3,3,Real> sofa::AffinePatch_sofa_test< _DataTypes >::testedRotation. Tested Rotation: random rotation matrix. . ◆ testedTranslation. template<typename _DataTypes > . Coord sofa::AffinePatch_sofa_test< _DataTypes >::testedTranslation. Tested Translation: random translation. . Function details. ◆ compareSimulatedToTheoreticalPositions(). template<typename _DataTypes > . bool sofa::AffinePatch_sofa_test< _DataTypes >::compareSimulatedToTheoreticalPositions ; (; double ; convergenceAccuracy, . double ; diffMaxBetweenSimulatedAndTheoreticalPosition . ). inline . After simulation compare the positions of points to the theoretical positions. . ◆ createScene2DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene2DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTranslation = true . ). inline . Create a scene with a 2D regular grid and an affine constraint. . ◆ createScene3DRegularGrid(). template<typename _DataTypes > . void sofa::AffinePatch_sofa_test< _DataTypes >::createScene3DRegularGrid ; (; bool ; randomRotation = true, . bool ; randomTransl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:4981,test,testedTranslation,4981,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,2,['test'],['testedTranslation']
Testability,"eal)sofa::core::behavior::BaseForceFieldinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addDForce(const MechanicalParams *mparams, MultiVecDerivId dfId)=0sofa::core::behavior::BaseForceFieldpure virtual; addForce(const MechanicalParams *mparams, MultiVecDerivId fId)=0sofa::core::behavior::BaseForceFieldpure virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)=0sofa::core::behavior::BaseForceFieldpure virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html:1628,log,logging,1628,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,1,['log'],['logging']
Testability,eam-adaptater-constraints; . /feed; ; continuum robots; beam adaptater; constraints – SOFA. SOFA - Topic Tag: continuum robots; beam adaptater; constraints. /control; . /feed; ; control – SOFA. SOFA - Topic Tag: control. /controller; . /feed; ; Controller – SOFA. SOFA - Topic Tag: Controller. /control-xml-variables-in-c-or-python; . /feed; ; Control xml variables in C++ or Python. – SOFA. SOFA - Topic Tag: Control xml variables in C++ or Python. /coulomb; . /feed; ; coulomb – SOFA. SOFA - Topic Tag: coulomb. /cpp-controller; . /feed; ; Cpp controller – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag: CUDA Benchmark. /cutfem; . /feed; ; cutFEM – SOFA. SOFA - Topic Tag: cutFEM. /cut-soft-body; . /feed; ; cut soft body – SOFA. SOFA - Topic Tag: cut soft body. /cutting; . /feed; ; cutting – SOFA. SOFA - Topic Tag: cutting. /cutting-simulation; . /feed; ; Cutting Simulation – SOFA. SOFA - Topic Tag: Cutting Simulation. /damping; . /feed; ; damping – SOFA. SOFA - Topic Tag: damping. /damping-force-field-integration; . /feed; ; damping force field integration – SOFA. SOFA - Topic Tag: damping force field integration. /damping-gravity-fallspeed-eulerimplicitsolver-constantforcefield; . /feed; ; Damping Gravity fallspeed EulerImplicitSolver ConstantForceField – SOFA. SOFA - Topic Tag: Damping Gravity fallspeed EulerImplicitSolver ConstantForceField. /data; . /feed; ; Data – SOFA. SOFA - Topic Tag: Data. /data-component; . /feed; ; Data Component – SOFA. SOFA - Topic Tag: Data Component. /datadisplay-pointdata-c; . /feed; ; DataDisp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:438420,benchmark,benchmark,438420,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['benchmark'],['benchmark']
Testability,"earalgebra::BaseVector *src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyFromBuffer(VecId dst, const SReal *src, unsigned n) overridesofa::core::behavior::MechanicalState< TDataTypes >; sofa::core::behavior::BaseMechanicalState::copyFromBuffer(VecId dst, const SReal *src, unsigned int n)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseMatrix(linearalgebra::BaseMatrix *dest, ConstMatrixDerivId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseVector(linearalgebra::BaseVector *dest, ConstVecId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBuffer(SReal *dst, ConstVecId src, unsigned n) const overridesofa::core::behavior::MechanicalState< TDataTypes >; sofa::core::behavior::BaseMechanicalState::copyToBuffer(SReal *dst, ConstVecId src, unsigned int n) const =0sofa::core::behavior::BaseMechanicalStatepure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::MechanicalState< TDataTypes >; Deriv typedefsofa::core::behavior::MechanicalState< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endIntegration(const ExecParams *params, SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; exportGnuplot(SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html:5902,log,logging,5902,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,1,['log'],['logging']
Testability,"eate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::response::contact::ContactListenerinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContactListener(core::CollisionModel *collModel1=nullptr, core::CollisionModel *collModel2=nullptr)sofa::component::collision::response::contact::ContactListener; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::response::contact::ContactListenerinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html:2512,log,logging,2512,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,1,['log'],['logging']
Testability,"ebra::BaseVector *, unsigned int)sofa::core::behavior::BaseConstraintSetinlinevirtual; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getGroup() constsofa::core::behavior::BaseConstraint; getIdentifiers()sofa::core::behavior::BaseConstraintinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getInteractionIdentifiers()sofa::core::behavior::BaseInteractionConstraintinlineprotectedvirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMechModel1()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; getMechModel2()sofa::core::behavior::BaseInteractionConstraintinlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupsofa::core::behavior::BaseCons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html:6237,log,logging,6237,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,1,['log'],['logging']
Testability,"ec(). template<Size NumRows, class Real > . type::Vec<NumRows, Real> sofa::helper::sofaVec ; (; const Eigen::Matrix< Real, NumRows, 1 > & ; evec). ◆ solveLCP(). SOFA_HELPER_API int sofa::helper::solveLCP ; (; int ; dim, . SReal * ; q, . SReal ** ; M, . SReal * ; res . ). ◆ sortedPermutation(). template<class Container > . type::vector<unsigned> sofa::helper::sortedPermutation ; (; const Container & ; values). Return a sorted permutation of the container, i.e. a list of indices corresponding to increasing entries. . ◆ split(). std::vector< std::string > SOFA_HELPER_API sofa::helper::split ; (; const std::string & ; s, . char ; delimiter . ). Taken from https://www.fluentcpp.com/2017/04/21/how-to-split-a-string-in-c/. ; Split one string by a given delimiter and returns that into a std::vector. . ◆ SQR(). template<class T > . const T sofa::helper::SQR ; (; const T & ; a). inline . ◆ srand(). void sofa::helper::srand ; (; unsigned ; seed). inline . Define random methods srand and rand for double and int used only for the tests now. . ◆ starts_with(). SOFA_HELPER_API bool sofa::helper::starts_with ; (; const std::string & ; prefix, . const std::string & ; full . ). returns true if the prefix if located at the beginning of the ""full"" string. . ◆ strToDouble(). double sofa::helper::strToDouble ; (; std::string const & ; stringToConvert, . std::size_t const ; precision . ). ◆ SWAP(). template<class T > . void sofa::helper::SWAP ; (; T & ; a, . T & ; b . ). inline . ◆ upcaseString(). SOFA_HELPER_API std::string sofa::helper::upcaseString ; (; const std::string & ; s). Convert a string to upper case. . ◆ vector_access_failure(). void SOFA_HELPER_API sofa::helper::vector_access_failure ; (; const void * ; vec, . unsigned ; size, . unsigned ; i, . const std::type_info & ; type, . const char * ; tindex . ). ◆ widenString(). SOFA_HELPER_API std::wstring sofa::helper::widenString ; (; const std::string & ; s). Convert a string to a wstring. ; ReturnsThe converted string on success,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:43122,test,tests,43122,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,2,['test'],['tests']
Testability,"ec3 & ; p2, . const type::Vec3 & ; p3, . const type::Vec3 & ; n, . const type::Vec3 & ; q, . OutputVector * ; contacts, . int ; id, . bool ; swapElems = false . ). inlinestatic . ◆ testIntersection() [1/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [2/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line1, . collision::geometry::Line & ; line2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; line, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [5/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [6/18]. template<class T > . bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Line & ; e1, . collision::geometry::TSphere< T > & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:15202,test,testIntersection,15202,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BaseTopologyObject(). sofa::core::topology::BaseTopologyObject::BaseTopologyObject ; (; ). inlineprotected . ◆ ~BaseTopologyObject(). sofa::core::topology::BaseTopologyObject::~BaseTopologyObject ; (; ). inlineoverrideprotected . Function details. ◆ insertInNode(). bool sofa::core::topology::BaseTopologyObject::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::topology::BaseTopologyObject::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::core::topology::BaseTopologyObject::SOFA_CLASS ; (; BaseTopologyObject ; , . core::objectmodel::BaseObject ;  . ). sofacoretopologyBaseTopologyObject; Generated on Mon Nov 11 2024 03:16:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html:13315,test,test,13315,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,2,['test'],['test']
Testability,"echanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >virtual; computeCoordPositionDifference(Direction &r, const Coord_t< In > &a, const Coord_t< In > &b)sofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_colorsofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >; d_componentStatesofa::core::objectmodel::Base; d_computeDistancesofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_restLengthssofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >; d_showObjectScalesofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >; Direction typedefsofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html:5770,log,logging,5770,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html,1,['log'],['logging']
Testability,"echanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset)sofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyEdgeCreation(Index edgeIndex, EdgeRestInformation &, const core::topology::BaseMeshTopology::Edge &e, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html:2978,log,logging,2978,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,1,['log'],['logging']
Testability,"ect()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; clampVertexColorsofa::gl::component::shader::OglShader; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglShadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &)sofa::core::visual::VisualModelinlinevirtual; f_bboxsofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html:3014,log,logging,3014,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,6,['log'],['logging']
Testability,"ect, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapInput(Element elem, Index i1, Index i2)sofa::component::mapping::linear::Mesh2PointTopologicalMappingprotected; swapOutputPoints(Index i1, Index i2, bool removeLast=false)sofa::component::mapping::linear::Mesh2PointTopologicalMappingprotected; TETRA enum valuesofa::component::mapping::linear::Mesh2PointTopologicalMapping; tetraBaryCoordssofa::component::mapping::linear::Mesh2PointTopologicalMappingprotected; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TRIANGLE enum valuesofa::component::mapping::linear::Mesh2PointTopologicalMapping; triangleBaryCoordssofa::component::mapping::linear::Mesh2PointTopologicalMappingprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown() overridesofa::component::mapping::linear::Mesh2PointTopologicalMappingvirtual; Vec3d typedefsofa::component::mapping::linear::Mesh2PointTopologicalMapping; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Mesh2PointTopologicalMapping() overridesofa::component::mapping::linear::Mesh2PointTopologicalMappinginlineprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html:17110,log,logErrors,17110,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,1,['log'],['logErrors']
Testability,"ect. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SphereROI ();  ;  ~SphereROI () override=default;  ; bool testEdgeAngle (const Edge &e) const;  ; bool testTriangleAngle (const Triangle &t) const;  ; bool isPointInSphere (const CPos &c, const Real &r, const CPos &p) const;  ; bool isPointInROI (const CPos &p) const override;  ; bool isEdgeInROI (const Edge &e) const override;  ; bool isEdgeInStrictROI (const Edge &e) const override;  ; bool isTriangleInROI (const Triangle &t) const override;  ; bool isTriangleInStrictROI (const Triangle &t) const override;  ;  Protected Member Functions inherited from sofa::component::engine::select::BaseROI< DataTypes >;  BaseROI ();  ;  ~BaseROI () override=default;  ; bool isPointIn (const PointID pid) const;  ; template<typename Element > ; bool isInROI (const Element &e) const;  ; template<typename Element > ; bool isInStrictROI (const Element &e) const;  ; virtual bool isQuadInROI (const Quad &q) const;  ; virtual bool isQuadInStrictROI (const Quad &q) const;  ; virtual bool isTetrahedronInROI (const Tetra &t) const;  ; virtual bool isTetrahedronInStrictROI (const Tetra &t) const;  ; virtual bool isHexahedronInROI (const Hexa &t) const;  ; virtual bool isHexahedronInStrictROI (const Hexa &t) const;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html:18127,test,testEdgeAngle,18127,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,2,['test'],"['testEdgeAngle', 'testTriangleAngle']"
Testability,"ect; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getExtIndices() constsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inline; getExtPosition() constsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; getIndices() constsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >inlinevirtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparams) const overridesofa::core::behavior::ForceField< DataTypes >virtual; getSlave(const std::string &name) constsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html:10134,log,logging,10134,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,1,['log'],['logging']
Testability,"ect; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::MultiMapping< TIn, TOut >virtual; getFromModels()sofa::core::MultiMapping< TIn, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs()sofa::core::BaseMappinginlinevirtual; getK()sofa::core::BaseMappinginlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatInDeriv(const MultiMatrixDerivId id, type::vector< InDataMatrixDeriv * > &v) constsofa::core::MultiMapping< TIn, TOut >inlineprotected; getMatOutDeriv(const MultiMatrixDerivId id, type::vector< OutDataMatrixDeriv * > &v) constsofa::core::MultiMapping< TIn, TOut >inlineprotected; getMechFrom() overridesofa::core::MultiMapping< TIn, TOut >virtual; getMechTo() overridesofa::core::MultiMapping< TIn, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html:8923,log,logging,8923,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,1,['log'],['logging']
Testability,"ected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html:2337,log,logging,2337,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,1,['log'],['logging']
Testability,"ectedvirtual; processNodeTopDown(simulation::Node *node) overridesofa::simulation::BaseMechanicalVisitorvirtual; processNodeTopDown(simulation::Node *node, LocalStorage *stack) override=deletesofa::simulation::BaseMechanicalVisitorvirtual; readNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; removeTag(Tag t)sofa::simulation::Visitorinline; REPEAT_ALL enum valuesofa::simulation::Visitor; REPEAT_ONCE enum valuesofa::simulation::Visitor; Result enum namesofa::simulation::Visitor; RESULT_CONTINUE enum valuesofa::simulation::Visitor; RESULT_PRUNE enum valuesofa::simulation::Visitor; rootsofa::simulation::BaseMechanicalVisitorprotected; rootDatasofa::simulation::BaseMechanicalVisitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; runVisitorTask(VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; setNodeData(simulation::Node *, SReal *, const SReal *)=deletesofa::simulation::BaseMechanicalVisitorvirtual; setTags(const TagSet &t)sofa::simulation::Visitorinline; stopAtMechanicalMapping(simulation::Node *node, core::BaseMapping *map) overridesofa::simulation::mechanicalvisitor::MechanicalAddMBK_ToMatrixVisitorvirtual; subsetsToManagesofa::simulation::Visitor; Tag typedefsofa::simulation::Visitor; TagSet typedefsofa::simulation::Visitor; testTags(sofa::core::objectmodel::BaseObject *obj)sofa::simulation::Visitor; treeTraversal(TreeTraversalRepetition &repeat)sofa::simulation::Visitorinlinevirtual; TreeTraversalRepetition enum namesofa::simulation::Visitor; Visitor(const sofa::core::ExecParams *params)sofa::simulation::Visitorexplicit; writeNodeData() const =deletesofa::simulation::BaseMechanicalVisitorvirtual; ~Visitor()sofa::simulation::Visitorvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_k___to_matrix_visitor-members.html:10528,test,testTags,10528,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_k___to_matrix_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_k___to_matrix_visitor-members.html,2,['test'],['testTags']
Testability,"ection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [14/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). sofaco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:12274,test,testIntersection,12274,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; testIntersection(SphereType1 &sph1, SphereType2 &sph2)=deletesofa::component::collision::detection::intersection::MinProximityIntersection; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2)=deletesofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersectionSphere(SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist)sofa::component::collision::detection::intersection::DiscreteIntersectioninlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useLineLinesofa::component::collision::detection::intersection::MinProximityIntersection; useLinePointsofa::component::collision::detection::intersection::MinProximityIntersection; usePointPointsofa::component::collision::detection::intersection::MinProximityIntersection; useProximity() const overridesofa::component::collision::detection::intersection::BaseProximityIntersectionin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:16400,test,testIntersection,16400,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"ection);  ; bool testValidity (collision::geometry::Sphere &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Point &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Line &, const type::Vec3 &) const;  ; bool testValidity (collision::geometry::Triangle &, const type::Vec3 &) const;  ; bool testIntersection (collision::geometry::Cube &, collision::geometry::Cube &)=delete;  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Cube &, collision::geometry::Cube &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geomet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:7870,test,testIntersection,7870,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['test'],['testIntersection']
Testability,"ection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Line &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Triangle &)=deletesofa::component::collision::detection::intersection::MeshNewProximityIntersection; testI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html:8154,test,testIntersection,8154,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"ection, TDataTypes), BaseConstraintCorrection)sofa::core::behavior::ConstraintCorrection< TDataTypes >; sofa::core::behavior::BaseConstraintCorrection::SOFA_ABSTRACT_CLASS(BaseConstraintCorrection, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintCorrection; SOFA_CLASS(SOFA_TEMPLATE(PrecomputedConstraintCorrection, TDataTypes), SOFA_TEMPLATE(core::behavior::ConstraintCorrection, TDataTypes))sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; sofa::core::behavior::ConstraintCorrection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecCoord typedefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseConstraintCorrection() overridesofa::core::behavior::BaseConstraintCorrectionprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConstraintCorrection() override=defaultsofa::core::behavior::ConstraintCorrection< TDataTypes >protected; ~PrecomputedConstraintCorrection()sofa::component::constraint::lagrangia",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html:24084,log,logErrors,24084,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,1,['log'],['logErrors']
Testability,"ection::intersection::LocalMinDistance. ◆ testIntersection() [2/8]. bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, sofa::component::collision::detection::intersection::BaseProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [3/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::RigidSphere & ; sph1, . collision::geometry::RigidSphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [4/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::RigidSphere & ; sph1, . collision::geometry::RigidSphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [5/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [6/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:25020,test,testIntersection,25020,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"ection::intersection::MeshMinProximityIntersection; computeIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; createOutputVector(Model1 *, Model2 *)sofa::core::collision::BaseIntersectorinline; endIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; getOutputVector(Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts)sofa::core::collision::BaseIntersectorinline; MeshMinProximityIntersection(MinProximityIntersection *intersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentInterse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html:4293,test,testIntersection,4293,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"ection::testIntersection ; (; collision::geometry::Line & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [7/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Point & ; e1, . collision::geometry::Point & ; e2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [10/14]. bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::TSphere< T > & ;  . ). delete . ◆ testIntersection() [12/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::TSphere< T > & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/14]. template<class T > . bool sofa::component::collision::detection::intersection::MeshMinProximityIntersection::testIntersection ; (; collision::geometry::TSphere< T > & ; , . collision::geometry::Point & ;  . ). delete . ◆ testInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:11971,test,testIntersection,11971,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ection::testIntersection ; (; collision::geometry::Point & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [8/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Point & ; pt1, . collision::geometry::Point & ; pt2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [9/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Line & ;  . ). delete . ◆ testIntersection() [10/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Line & ; line, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [11/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [12/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri, . collision::geometry::Point & ; pt, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [13/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Triangle & ;  . ). delete . ◆ testIntersection() [14/18]. bool sofa::component::collision::detection::intersection::MeshNewProximityIntersection::testIntersection ; (; collision::geometry::Triangle & ; tri1, . collision::geometry::Triangle & ; tri2, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [15/18]. template<class T > . bool sofa::component::collisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:17040,test,testIntersection,17040,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html:3541,log,logging,3541,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,1,['log'],['logging']
Testability,"ectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation)=0sofa::core::behavior::BaseOrderingMethodpure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html:2394,log,logging,2394,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,1,['log'],['logging']
Testability,"ectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglRenderingSRGB, core::visual::VisualManager)sofa::gl::component::shader::OglRenderingSRGB; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~VisualManager() overridesofa::core::visual::VisualManagerinlineprotected; ~VisualModel() overridesofa::core::visual::VisualModelinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html:11557,log,logErrors,11557,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,2,['log'],['logErrors']
Testability,"ectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(Hexa2QuadTopologicalMapping, sofa::core::topology::TopologicalMapping)sofa::component::topology::mapping::Hexa2QuadTopologicalMapping; sofa::core::topology::TopologicalMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; toModelsofa::core::topology::TopologicalMapping; TopologicalMapping()sofa::core::topology::TopologicalMappingprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateTopologicalMappingBottomUp()sofa::core::topology::TopologicalMappinginlinevirtual; updateTopologicalMappingTopDown() overridesofa::component::topology::mapping::Hexa2QuadTopologicalMappingvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Hexa2QuadTopologicalMapping() override=defaultsofa::component::topology::mapping::Hexa2QuadTopologicalMappingprotected; ~TopologicalMapping() overridesofa::core::topology::TopologicalMappinginlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping-members.html:12563,log,logErrors,12563,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping-members.html,1,['log'],['logErrors']
Testability,"ectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkIndices()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >virtual; computeBBoxForIndices(const type::vector< Index > &indices)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; Coord typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_fixedDirectionssofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_projectVelocitysofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; d_showObjectsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; datasofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projectiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html:3789,log,logging,3789,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,1,['log'],['logging']
Testability,"ectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem() overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >virtual; CompositeLinearSystem()sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >protected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_matrixSizesofa::core::behavior::BaseMatrixLinearSystemprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; dispatchSystemRHS(core::MultiVecDerivId v) overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >virtual; dispatchSystemSolution(core::MultiVecDerivId v) overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html:3474,log,logging,3474,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,1,['log'],['logging']
Testability,"ectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixAccumulatorComponent, objectmodel::BaseObject)sofa::core::BaseMatrixAccumulatorComponent< c >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseMatrixAccumulatorComponent() override=defaultsofa::core::BaseMatrixAccumulatorComponent< c >; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html:10069,log,logErrors,10069,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,1,['log'],['logErrors']
Testability,"ectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; GetCustomTemplateName()sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >static; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html:6522,log,logging,6522,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,1,['log'],['logging']
Testability,"ectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::TrailRenderer< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::TrailRenderer< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbStepssofa::component::visual::TrailRenderer< DataTypes >; d_positionsofa::component::visual::TrailRenderer< DataTypes >; d_thicknesssofa::component::visual::TrailRenderer< DataTypes >; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::component::visual::TrailRenderer< DataTypes >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html:2753,log,logging,2753,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,1,['log'],['logging']
Testability,"ectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::WriteStateinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_DOFsVsofa::component::playback::WriteState; d_DOFsXsofa::component::playback::WriteState; d_filenamesofa::component::playback::WriteState; d_keperiodsofa::component::playback::WriteState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::playback::WriteState; d_stopAtsofa::component::playback::WriteState; d_timesofa::component::playback::WriteState; d_writeFsofa::component::playback::WriteState; d_writeVsofa::component::playback::WriteState; d_writeXsofa::component::playback::WriteState; d_writeX0sofa::component::playback::WriteState; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxs",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html:2274,log,logging,2274,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,1,['log'],['logging']
Testability,"ectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; cptsofa::component::odesolver::backward::NewmarkImplicitSolverprotected; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_betasofa::component::odesolver::backward::NewmarkImplicitSolver; d_componentStatesofa::core::objectmodel::Base; d_gammasofa::component::odesolver::backward::NewmarkImplicitSolver; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rayleighMasssofa::component::odesolver::backward::NewmarkImplicitSolver; d_rayleighStiffnesssofa::component::odesolver::backward::NewmarkImplicitSolver; d_threadSafeVisitorsofa::component::odesolver::backward::NewmarkImplicitSolver; d_velocityDampingsofa::component::odesolver::backward::NewmarkImplicitSolver; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeni",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html:2318,log,logging,2318,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,1,['log'],['logging']
Testability,"ectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; cptsofa::component::odesolver::backward::VariationalSymplecticSolver; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeHamiltoniansofa::component::odesolver::backward::VariationalSymplecticSolver; d_explicitsofa::component::odesolver::backward::VariationalSymplecticSolver; d_fileNamesofa::component::odesolver::backward::VariationalSymplecticSolver; d_hamiltonianEnergysofa::component::odesolver::backward::VariationalSymplecticSolver; d_messageLogCountsofa::core::objectmodel::Basemutable; d_newtonErrorsofa::component::odesolver::backward::VariationalSymplecticSolver; d_newtonStepssofa::component::odesolver::backward::VariationalSymplecticSolver; d_rayleighMasssofa::component::odesolver::backward::VariationalSymplecticSolver; d_rayleighStiffnesssofa::component::odesolver::backward::VariationalSymplecticSolver; d_sa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html:2330,log,logging,2330,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,1,['log'],['logging']
Testability,"ectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_absolute_correction_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_absolute_residual_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_newton_iterationssofa::component::odesolver::backward::StaticSolverprotected; d_relative_correction_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_relative_residual_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_should_diverge_when_residual_is_growingsofa::component::odesolver::backward::StaticSolverprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html:2300,log,logging,2300,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,1,['log'],['logging']
Testability,"ectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_ratesofa::component::odesolver::forward::DampVelocitySolver; d_thresholdsofa::component::odesolver::forward::DampVelocitySolver; DampVelocitySolver()sofa::component::odesolver::forward::DampVelocitySolverprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html:2310,log,logging,2310,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,1,['log'],['logging']
Testability,"ectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html:2308,log,logging,2308,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,3,['log'],['logging']
Testability,"ectmodel::Basevirtual; getComplianceMatrix(const MechanicalParams *)sofa::core::behavior::BaseForceFieldinlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFirstObjectIndices() constsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >inline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; sofa::getMechModel1()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel1()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel1() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::getMechModel2()sofa::core::behavior::BaseInteractionForceFieldvirtual; sofa::core::behavior::PairStateAccessor::getMechModel2()sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; sofa::core::behavior::PairStateAccessor::getMechModel2() constsofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >inline; getMState1()sofa::core::behavior::Pai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html:8981,log,logging,8981,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,1,['log'],['logging']
Testability,"ectmodel::RenamedData<bool> sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::m_displayFreePosition. protected . ◆ mstate. template<class TDataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::mstate. protected . ◆ normals. template<class TDataTypes > . VecDeriv sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::normals. protected . Constructor details. ◆ PointCollisionModel(). template<class DataTypes > . sofa::component::collision::geometry::PointCollisionModel< DataTypes >::PointCollisionModel. protected . Function details. ◆ canCollideWithElement(). template<class DataTypes > . bool sofa::component::collision::geometry::PointCollisionModel< DataTypes >::canCollideWithElement ; (; sofa::Index ; , . CollisionModel * ; , . sofa::Index ;  . ). overridevirtual . Test if two elements can collide with each other. ; This method should be implemented by models supporting self-collisions to prune tests between adjacent elements.; Default to true. Note that this method assumes that canCollideWith(model2) was already used to test if the collision models can collide. ; Reimplemented from sofa::core::CollisionModel. ◆ canCreate(). template<class TDataTypes > . template<class T > . static bool sofa::component::collision::geometry::PointCollisionModel< TDataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ computeBBox(). template<class DataTypes > . void sofa::component::collision::geometry::PointCollisionModel< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBoundingTree(). template<c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:24491,test,tests,24491,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,1,['test'],['tests']
Testability,ector *v)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDx() const overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLambda() const overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; graphConstraintssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; graphErrorssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; graphForcessofa::component::constraint::lagrangian::solver::GenericConstraintSolver; graphV,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:9616,log,logging,9616,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['log'],['logging']
Testability,"ectprotected; Triangle typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TriangleID typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TrianglesAroundEdge typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TrianglesAroundVertex typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; TriangleSetTopologyContainer()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; TriangleSetTopologyModifier classsofa::component::topology::container::dynamic::TriangleSetTopologyContainerfriend; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecEdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyContainer; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecTriangleID typedefsofa::component::topology::container::dynamic::TriangleSetTopologyContainer; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyContainer() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainerinlineprotected; ~PointSetTopologyContainer() override",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:35001,log,logErrors,35001,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['log'],['logErrors']
Testability,"ectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawModesofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_elongationOnlysofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_enabledsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kdsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_lengthssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_localRangesofa::component::solidmechanics::spring::QuadBendingSprings< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showArrowSizesofa::component::solidmechanics::sprin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html:6575,log,logging,6575,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,1,['log'],['logging']
Testability,"ectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawModesofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_elongationOnlysofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_enabledsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kdsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_kssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_lengthssofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showArrowSizesofa::component::solidmechanics::spring::SpringForceField< DataTypes >; d_springssofa::component::solidmechanics::spring::Sp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html:6316,log,logging,6316,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field-members.html,2,['log'],['logging']
Testability,"ectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dampingRatiosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_edgeInfosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_initialPointssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_triangleInfosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_useAngularSpringssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_youngModulussofa::component::solid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html:5984,log,logging,5984,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,1,['log'],['logging']
Testability,"ectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::Indices2ValuesMapper< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html:3033,log,logging,3033,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,1,['log'],['logging']
Testability,"ectvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ContextObject, BaseObject)sofa::core::objectmodel::ContextObject; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ContextObject() overridesofa::core::objectmodel::ContextObjectinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html:9869,log,logErrors,9869,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,1,['log'],['logErrors']
Testability,"ecute(sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false)sofa::simulation::Visitorvirtual; for_each(Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""))sofa::simulation::Visitorprotected; for_each(VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; for_each(VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo)sofa::simulation::Visitor; getCategoryName() constsofa::simulation::Visitorinlinevirtual; getClassName() const overridesofa::component::odesolver::testing::GetVectorVisitorinlinevirtual; getInfos() constsofa::simulation::Visitorinlinevirtual; GetVectorVisitor(const sofa::core::ExecParams *params, linearalgebra::BaseVector *vec, core::ConstVecId src)sofa::component::odesolver::testing::GetVectorVisitorinline; independentOnlysofa::component::odesolver::testing::GetVectorVisitorprotected; isThreadSafe() constsofa::simulation::Visitorinlinevirtual; NO_REPETITION enum valuesofa::simulation::Visitor; offsetsofa::component::odesolver::testing::GetVectorVisitorprotected; paramssofa::simulation::Visitorprotected; processNodeBottomUp(simulation::Node *)sofa::simulation::Visitorinlinevirtual; processNodeBottomUp(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; processNodeTopDown(simulation::Node *gnode) overridesofa::component::odesolver::testing::GetVectorVisitorinlinevirtual; sofa::simulation::Visitor::processNodeTopDown(simulation::Node *node, LocalStorage *)=deletesofa::simulation::Visitorvirtual; removeTag(Ta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor-members.html:2339,test,testing,2339,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor-members.html,1,['test'],['testing']
Testability,ecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingme,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:162462,log,logging,162462,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"ed (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream warning (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream error (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream fatal (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher::addHandler ; (; MessageHandler * ; o). static . to add a MessageHandler . ◆ advice(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::advice ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcher::clearHandlers ; (; ). static . to remove every MessageHandlers . ◆ deprecated(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::deprecated ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ error(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::error ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ fatal(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::fatal ; (; Messa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:1974,log,logging,1974,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,2,['log'],['logging']
Testability,"ed; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:2492,log,logging,2492,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,2,['log'],['logging']
Testability,"ed; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >virtual; computeElementStiffnessMatrix(StiffnessMatrix &S, StiffnessMatrix &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; computeMaterialStiffnesses()sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_initialPointssofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_methodsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; d_planeStrainsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; d_poissonRatiosofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; d_thicknesssofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; d_youngModulussofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::fem::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html:7615,log,logging,7615,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,1,['log'],['logging']
Testability,"edefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:3546,log,logging,3546,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,2,['log'],['logging']
Testability,"edefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:3546,log,logging,3546,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,2,['log'],['logging']
Testability,"edefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:3546,log,logging,3546,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,2,['log'],['logging']
Testability,"edefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawStep(sofa::core::visual::VisualParams *vparams) overridesofa::simulation::DefaultVisualManagerLoopvirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html:2966,log,logging,2966,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,2,['log'],['logging']
Testability,"edron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; Type enum namesofa::component::topology::container::grid::SparseGridTopology; UP enum valuesofa::component::topology::container::grid::SparseGridTopology; updateEdges()sofa::component::topology::container::grid::SparseGridTopologyprotectedvirtual; updateHexahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::component::topology::container::grid::SparseGridTopology; updateQuads()sofa::component::topology::container::grid::SparseGridTopologyprotectedvirtual; updateTetrahedra()sofa::component::topology::container::constant::MeshTopologyvirtual; UV typedefsofa::component::topology::container::constant::MeshTopology; UVID typedefsofa::component::topology::container::constant::MeshTopology; validHexahedrasofa::component::topology::container::constant::MeshTopologyprotected; validTetrahedrasofa::component::topology::container::constant::MeshTopologyprotected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; voxelizeTriangleMesh(helper::io::Mesh *mesh, sofa::core::sptr< RegularGridTopology > regularGrid, type::vector< Type > &regularGridTypes) constsofa::component::topol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html:46182,log,logErrors,46182,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,1,['log'],['logErrors']
Testability,"eed value. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Real >; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Function details. ◆ checkMatrix(). template<class T > . bool sofa::linearalgebra::testing::TestSparseMatrixProduct< T >::checkMatrix ; (; typename LHSMatrix::Index ; nbRowsA, . typename LHSMatrix::Index ; nbColsA, . typename RHSMatrix::Index ; nbColsB, . Real ; sparsity . ). inline . ◆ compareSparseMatrix(). template<class T > . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareSparseMatrix ; (; typename _AScalar ; , . int ; _AOptions, . typename _AStorageIndex ; , . typename _BScalar ; , . int ; _BOptions, . typename _BStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [1/2]. template<class T > . template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen ; (; typename _DstScalar ; , . int ; _DstOptions, . typename _DstStorageIndex ; , . typename _SrcScalar ; , . int ; _SrcOptions, . typename _SrcStorageIndex ;  . ). inlinestatic . ◆ copyFromEigen() [2/2]. template<class T > . static void sofa::testing::SparseMatrixTest< TReal >::copyFromEigen. inlinestatic . ◆ generateRandomSparseMatrix(). template<class T > . template<int EigenSparseMatrixOptions> . static void sofa::testing::SparseMatrixTest< TReal >::generateRandomSparseMatrix ; (; int ; EigenSparseMatrixOptions). inlinestatic . Generate a sparse matrix of size nbRows x nbCols. The sparsity is the ratio of non-zero values compared to the total size of the matrix (= nbRows x nbCols). . sofalinearalgebratestingTestSparseMatrixProduct; Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:6438,test,testing,6438,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,6,['test'],['testing']
Testability,"eference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1033,test,testing,1033,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,3,"['Test', 'test']","['TestBaseMatrix', 'testing']"
Testability,"eference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenOptions< const Eigen::Map< T, Options, StrideType > > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< TBlock > Struct Template Reference; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection Struct Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:240861,test,testing,240861,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"efinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseForceField() override=defaultsofa::core::behavior::BaseForceFieldprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~StateAccessor() override=defaultsofa::core::behavior::StateAccessorprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html:11602,log,logErrors,11602,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,1,['log'],['logErrors']
Testability,"efinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(GeometryAlgorithms, BaseTopologyObject)sofa::core::topology::GeometryAlgorithms; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~GeometryAlgorithms() overridesofa::core::topology::GeometryAlgorithmsinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html:10368,log,logErrors,10368,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms-members.html,1,['log'],['logErrors']
Testability,"efore, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkIndices()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >virtual; computeBBoxForIndices(const type::vector< Index > &indices)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; Coord typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_fixedDirectionssofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_projectVelocitysofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; d_showObjectsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; datasofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html:3747,log,logging,3747,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,1,['log'],['logging']
Testability,"efsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; Color typedefsofa::gl::component::rendering2d::OglColorMap; Color3 typedefsofa::gl::component::rendering2d::OglColorMap; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorSchemesofa::gl::component::rendering2d::OglColorMap; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_legendOffsetsofa::gl::component::rendering2d::OglColorMap; d_legendRangeScalesofa::gl::component::rendering2d::OglColorMap; d_legendSizesofa::gl::component::rendering2d::OglColorMap; d_legendTitlesofa::gl::component::rendering2d::OglColorMap; d_maxsofa::gl::component::rendering2d::OglColorMap; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minsofa::gl::component::rendering2d::OglColorMap; d_paletteSizesofa::gl::component::rendering2d::OglColorMap; d_showLegendsofa::gl::component::rendering2d::OglColorMap; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering2d::OglColorMapvirtual; doUpdateInternal()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html:2838,log,logging,2838,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,1,['log'],['logging']
Testability,"efsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::rendering3d::ClipPlanevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::gl::component::rendering3d::ClipPlanevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; ClipPlane()sofa::gl::component::rendering3d::ClipPlaneprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &)sofa::core::visual::VisualModelinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html:2885,log,logging,2885,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,1,['log'],['logging']
Testability,"eginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html:3710,log,logging,3710,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,2,['log'],['logging']
Testability,"eginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html:3710,log,logging,3710,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,2,['log'],['logging']
Testability,"eginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html:3710,log,logging,3710,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,2,['log'],['logging']
Testability,"ehavior::ConstraintSolver *solver);  Process the ConstraintSolver. More...;  ; virtual void bwdConstraintSet (simulation::Node *, sofa::core::behavior::BaseConstraintSet *);  Process all the BaseConstraintSet. More...;  ; virtual void bwdProjectiveConstraintSet (VisitorContext *ctx, sofa::core::behavior::BaseProjectiveConstraintSet *c);  Process all the BaseProjectiveConstraintSet. More...;  ; virtual void bwdConstraintSet (VisitorContext *ctx, sofa::core::behavior::BaseConstraintSet *c);  Process all the BaseConstraintSet. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html:8884,test,testTags,8884,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html,2,['test'],['testTags']
Testability,"ehavior::ConstraintSolverpure virtual; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html:2787,log,logging,2787,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,1,['log'],['logging']
Testability,"einline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom()sofa::core::topology::TopologicalMappinginline; getFromIndex(Index ind) overridesofa::component::topology::mapping::IdentityTopologicalMappingvirtual; sofa::core::topology::TopologicalMapping::getFromIndex(type::vector< Index > &, const Index) constsofa::core::topology::TopologicalMappinginlinevirtual; getGlob2LocMap()sofa::core::topology::TopologicalMappinginline; getGlobIndex(Index ind)sofa::core::topology::TopologicalMappingvirtual; getIn2OutMap()sofa::core::topology::TopologicalMappinginline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo()sofa::core::topology::TopologicalMappinginline; getTypeName() constsofa::core::objectmodel::Base; Glob2LocMapsofa::core::topology::TopologicalMappingprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping-members.html:5485,log,logging,5485,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping-members.html,1,['log'],['logging']
Testability,"einlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt2Attribute, SOFA_TEMPLATE3(OglAttribute, 2, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, int)))sofa::gl::component::shader::OglInt2Attribute; OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 2, int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >protected; ~OglInt2Attribute()sofa::gl::component::shader::OglInt2Attributeinlinevirtual; ~OglShaderElement() overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:15543,log,logErrors,15543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,2,['log'],['logErrors']
Testability,"einlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt3Attribute, SOFA_TEMPLATE3(OglAttribute, 3, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, int)))sofa::gl::component::shader::OglInt3Attribute; OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 3, int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >protected; ~OglInt3Attribute()sofa::gl::component::shader::OglInt3Attributeinlinevirtual; ~OglShaderElement() overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:15543,log,logErrors,15543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,2,['log'],['logErrors']
Testability,"einlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglInt4Attribute, SOFA_TEMPLATE3(OglAttribute, 4, GL_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, int)))sofa::gl::component::shader::OglInt4Attribute; OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE3(OglAttribute, size, type, sofa::type::Vec< 4, int >), core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglAttribute() overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >protected; ~OglInt4Attribute()sofa::gl::component::shader::OglInt4Attributeinlinevirtual; ~OglShaderElement() overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:15543,log,logErrors,15543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,2,['log'],['logErrors']
Testability,"einlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getCollisionModels() overridesofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >inlinevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html:7320,log,logging,7320,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,1,['log'],['logging']
Testability,"el1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  MinProximityIntersection ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:19094,test,testIntersectionSphere,19094,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,1,['test'],['testIntersectionSphere']
Testability,"el::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_hexahedronsofa::component::engine::generate::GenerateGrid< DataTypes >; d_maxCornersofa::component::engine::generate::GenerateGrid< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minCornersofa::component::engine::generate::GenerateGrid< DataTypes >; d_outputXsofa::component::engine::generate::GenerateGrid< DataTypes >; d_quadsofa::component::engine::generate::GenerateGrid< DataTypes >; d_resolutionsofa::component::engine::generate::GenerateGrid< DataTypes >; d_tetrahedronsofa::component::engine::generate::GenerateGrid< DataTypes >; d_trianglesofa::component::engine::generate::GenerateGrid< DataTypes >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html:2964,log,logging,2964,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,1,['log'],['logging']
Testability,"el::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNbPoints(Size)sofa::core::topology::Topologyinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(Topology, core::objectmodel::BaseObject)sofa::core::topology::Topology; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Topology()sofa::core::topology::Topologyinlineprotectedvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html:11881,log,logErrors,11881,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,1,['log'],['logErrors']
Testability,"el::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centersofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_centersofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_dminsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_frequencysofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_momentsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_penaltysofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_showForcessofa::component::mechanicalload:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html:5246,log,logging,5246,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,1,['log'],['logging']
Testability,"el::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getFromModel()sofa::core::Mapping< TIn, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs()sofa::core::BaseMappinginlinevirtual; getK()sofa::core::BaseMappinginlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechFrom() overridesofa::core::Mapping< TIn, TOut >virtual; getMechTo() overridesofa::core::Mapping< TIn, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTo() overridesofa::core::Mapping< TIn, TOut >virtual; getToModel()sofa::core::Mapping< TIn, TOut >; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyCha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html:7364,log,logging,7364,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,1,['log'],['logging']
Testability,"el::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getFrom() overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; getFromModels1()sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; getFromModels2()sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getJ(const MechanicalParams *)sofa::core::BaseMappingvirtual; getJ()sofa::core::BaseMappingvirtual; getJs()sofa::core::BaseMappinginlinevirtual; getK()sofa::core::BaseMappinginlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMatIn1Deriv(const MultiMatrixDerivId id, type::vector< DataMatrixDeriv_t< In1 > * > &v) constsofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlineprotected; getMatIn2Deriv(const MultiMatrixDerivId id, type::vector< DataMatrixDeriv_t< In2 > * > &v) constsofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlineprotected; getMatOutDeriv(const MultiMatrixDerivId id, type::vector< DataMatrixDeriv_t< Out > * > &v) constsofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlineprotected; getMechFrom() overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; getMechTo() overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html:10535,log,logging,10535,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,1,['log'],['logging']
Testability,"el::BaseObject; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; setSystemSolution(core::MultiVecDerivId v)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixLinearSystem, core::objectmodel::BaseObject)sofa::core::behavior::BaseMatrixLinearSystem; SOFA_CLASS(SOFA_TEMPLATE2(MatrixFreeSystem, TMatrix, TVector), SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector))sofa::component::linearsystem::MatrixFreeSystem< TMatrix, TVector >; sofa::component::linearsystem::TypedMatrixLinearSystem::SOFA_CLASS(SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; sofa::core::behavior::BaseMatrixLinearSystem::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; Vector typedefsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html:15083,log,logErrors,15083,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,1,['log'],['logErrors']
Testability,"el::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CenterPointTopologicalMapping()sofa::component::topology::mapping::CenterPointTopologicalMappingprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html:2588,log,logging,2588,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,1,['log'],['logging']
Testability,"el::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; endNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; EndPointList typedefsofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:3204,log,logging,3204,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,1,['log'],['logging']
Testability,"el::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; disable() overridesofa::core::Mapping< TIn, TOut >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateK(const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) overridesofa::component::mapping::nonlinear::SquareMapping< TIn, TOut >protectedvirtual; draw(const core::visual::VisualParams *)sofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html:5597,log,logging,5597,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,1,['log'],['logging']
Testability,"el::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; disable() overridesofa::core::Mapping< TIn, TOut >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateK(const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix)=0sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >protectedpure virtual; draw(const core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html:5470,log,logging,5470,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,1,['log'],['logging']
Testability,"el::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; PairStateAccessor< DataTypes, DataTypes >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeNearestPointMaps(const VecCoord &x1, const VecCoord &x2)sofa::component::engine::select::NearestPointROI< DataTypes >protected; Coord typedefsofa::component::engine::select::NearestPointROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_distancessofa::component::engine::select::NearestPointROI< DataTypes >; d_drawPairssofa::component::engine::select::NearestPointROI< DataTypes >; d_edgessofa::component::engine::select::NearestPointROI< DataTypes >; d_indexPairssofa::component::engine::select::NearestPointROI< DataTypes >; d_inputIndices1sofa::component::engine::select::NearestPointROI< DataTypes >; d_inputIndices2sofa::component::engine::select::NearestPointROI< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_useRestPositionsofa::component::engine::select::NearestPointROI< DataTypes >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DataVecCoord typedefsofa::component::engine::select::NearestPointROI< DataTypes >; DataVecDeriv ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html:3319,log,logging,3319,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,1,['log'],['logging']
Testability,"el::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dampingCoefficientssofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; dampingCoefficientssofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; DataVecDeriv typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; Deriv typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; DiagonalVelocityDampingForceField()sofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >protected; doUpdateInternal()sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html:5205,log,logging,5205,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html,1,['log'],['logging']
Testability,"el::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_old_positionsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; d_positionsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; d_stiffnesssofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; d_velocitysofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; datasofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; DataVecCoord typedefsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html:3194,log,logging,3194,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,1,['log'],['logging']
Testability,"el::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::JoinPoints< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html:3000,log,logging,3000,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html,1,['log'],['logging']
Testability,"el::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::simulation::PipelineImplvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Pipeline() overridesofa::core::collision::Pipelineprotected; ~PipelineImpl() overridesofa::simulation::PipelineImplprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html:11199,log,logErrors,11199,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,2,['log'],['logErrors']
Testability,el::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; GetCustomClassName()sofa::component::sceneutility::makealiascomponent::MakeAliasComponentinlinestatic; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html:4639,log,logging,4639,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,1,['log'],['logging']
Testability,"el::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; cubemapFilenameNegXsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegYsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegZsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosXsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosYsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosZsofa::gl::component::shader::OglTextureprotected; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglTexturevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:2735,log,logging,2735,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,4,['log'],['logging']
Testability,"el::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDistances(VVD &distances, VecVecCoord &gradients, const VecCoord &goals)sofa::component::engine::analyze::Distances< DataTypes >; getInputs()sofa::core::objectmodel::DDGNode; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOutputs()sofa::core::objectmodel::DDGNode; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; harmonicMaxValuesofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html:8227,log,logging,8227,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,1,['log'],['logging']
Testability,"elastic::TriangularFEMForceField< DataTypes >protected; toLameParameters(_2DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; toLameParameters(_3DMaterials, Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >static; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Transformation typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; triangleInfosofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; TrianglesAroundVertex typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; TriangularFEMForceField()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMatrixsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; VecCoord typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; VecData typedefsofa::core::objectmodel::Base; VecDeriv typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; VecElement typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; VecLink typedefsofa::core::objectmodel::Base; VecMaterialStiffness typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; VecReal typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; VecSlaves typedefsofa::core::objectmodel::BaseObject; VecStrainDisplacement typedefsofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; Vector typedefsofa::component::solidmechanics::fem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html:26009,log,logErrors,26009,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,1,['log'],['logErrors']
Testability,"eld< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_angularLimitsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_angularStiffnesssofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawSpringsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_indicessofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_springColorsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; DataVecDeriv ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html:5486,log,logging,5486,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,1,['log'],['logging']
Testability,"eld_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) More...;  ; std::pair< Real, Real > deltaRange;  Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. More...;  ; bool checkStiffness;  If false, stops the test after checking the force, without checking the stiffness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:1923,test,test,1923,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,2,['test'],['test']
Testability,"elete . ◆ computeIntersection() [2/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Ray & ; e1, . collision::geometry::Tetrahedron & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ computeIntersection() [3/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . OutputVector * ;  . ). delete . ◆ computeIntersection() [4/4]. int sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::computeIntersection ; (; collision::geometry::Tetrahedron & ; e1, . collision::geometry::Point & ; e2, . OutputVector * ; contacts, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [1/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ;  . ). delete . ◆ testIntersection() [2/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Ray & ; , . collision::geometry::Tetrahedron & ; , . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [3/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [4/4]. bool sofa::component::collision::detection::intersection::TetrahedronDiscreteIntersection::testIntersection ; (; collision::geometry::Tetrahedron & ; , . collision::geometry::Point & ; , . const core::collision::Intersection * ; currentIntersection . ). sofacomponentcollisiondetectionintersectionTetrahedronDiscreteIntersection; Generate",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:3865,test,testIntersection,3865,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"els must be swapped before calling the intersector. . Implemented in sofa::component::collision::detection::intersection::DiscreteIntersection. ◆ getAlarmDistance(). virtual SReal sofa::core::collision::Intersection::getAlarmDistance ; (; ); const. inlinevirtual . Return the alarm distance (must return 0 if useProximity() is false) ; Reimplemented in sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ getContactDistance(). virtual SReal sofa::core::collision::Intersection::getContactDistance ; (; ); const. inlinevirtual . Return the contact distance (must return 0 if useProximity() is false) ; Reimplemented in sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ isSupported(). bool sofa::core::collision::Intersection::isSupported ; (; core::CollisionElementIterator ; elem1, . core::CollisionElementIterator ; elem2 . ). virtual . Test if intersection between 2 types of elements is supported, i.e. an intersection test is implemented for this combinaison of types. Note that this method is deprecated in favor of findIntersector . ◆ setAlarmDistance(). virtual void sofa::core::collision::Intersection::setAlarmDistance ; (; SReal ; ). inlinevirtual . Set the alarm distance (must return 0 if useProximity() is false) ; Reimplemented in sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ setContactDistance(). virtual void sofa::core::collision::Intersection::setContactDistance ; (; SReal ; ). inlinevirtual . Set the contact distance (must return 0 if useProximity() is false) ; Reimplemented in sofa::component::collision::detection::intersection::BaseProximityIntersection. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::collision::Intersection::SOFA_ABSTRACT_CLASS ; (; Intersection ; , . objectmodel::BaseObject ;  . ). ◆ useContinuous(). virtual bool sofa::core::collision::Intersection::useContinuous ; (; ); const. inlinevirtual . returns true if algorithm uses continuous detection . ◆ useProximity()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection.html:16826,test,test,16826,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection.html,1,['test'],['test']
Testability,"ember Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes > Class Template Reference . #include <TriangleModel.h>. Inheritance diagram for sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; This class will create collision elements based on a triangle and/or quad mesh. It uses directly the information of the topology and the dof to compute the triangle normals, BB and BoundingTree. The class See alsoTTriangle is used to access specific triangle of this collision Model. . Public Attributes; Data< bool > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::Ta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:1319,test,test,1319,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['test'],['test']
Testability,ember List; SOFA API: sofa::helper::IsEqual< is_integer > Struct Template Reference; SOFA API: sofa::helper::IsEqual< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference; SOFA API: sofa::helper::IsNull< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Background Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Foreground Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader Struct Reference; SOFA API: sofa::helper::io::DDSHeader::DDSCaps Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader::DDSPixelFormat Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord >::TREENODE Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ComponentInfo Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileInfo Struct Reference; SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::narrowing_error Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::InitExternalModule St,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:236324,log,logging,236324,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"emplate wrapper method should generally be used to have the correct return type,; Generic list of objects access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getParents(). sofa::core::objectmodel::BaseNode::Parents sofa::simulation::graph::DAGNode::getParents ; (; ); const. overridevirtual . Get a list of parent node. ; Implements sofa::core::objectmodel::BaseNode. ◆ hasAncestor() [1/2]. bool sofa::simulation::graph::DAGNode::hasAncestor ; (; const BaseContext * ; context); const. overridevirtual . Test if the given context is an ancestor of this context. An ancestor is a parent or (recursively) the parent of an ancestor. ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ hasAncestor() [2/2]. bool sofa::simulation::graph::DAGNode::hasAncestor ; (; const BaseNode * ; node); const. inlineoverridevirtual . Test if the given context is an ancestor of this context. An ancestor is a parent or (recursively) the parent of an ancestor. ; Implements sofa::core::objectmodel::BaseNode. ◆ hasParent() [1/2]. bool sofa::simulation::graph::DAGNode::hasParent ; (; const BaseContext * ; context); const. Test if the given context is a parent of this context. . ◆ hasParent() [2/2]. bool sofa::simulation::graph::DAGNode::hasParent ; (; const BaseNode * ; node); const. overridevirtual . Test if the given node is a parent of this node. ; Implements sofa::core::objectmodel::BaseNode. ◆ initVisualContext(). void sofa::simulation::graph::DAGNode::initVisualContext ; (; ). overridevirtual . Called during initialization to correctly propagate the visual context to the children. ; Reimplemented from sofa::simulation::Node. ◆ moveChild(). void sofa::simulation::graph::DAGNode::moveChild ; (; BaseNode::SPtr ; node). overridevirtual . Move a node in this from another node. ; Implements sofa::simulation::Node. ◆ precomputeTraversalOrder(). void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:39267,Test,Test,39267,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['Test'],['Test']
Testability,"emplate<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &sph, collision::geometry::Point &pt, OutputVector *)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:4249,test,testIntersection,4249,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ename Vector2 > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; template<Size N, typename Real > ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ NumericTest(). template<typename _Real = SReal> . sofa::testing::NumericTest< _Real >::NumericTest ; (; ). inline . Function details. ◆ epsilon(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::epsilon ; (; ). inlinestatic . the smallest real number . ◆ infinity(). template<typename _Real = SReal> . static Real sofa::testing::NumericTest< _Real >::infinity ; (; ). inlinestatic . Infinity. . ◆ isSmall(). template<typename _Real = SReal> . static bool sofa::testing::NumericTest< _Real >::isSmall ; (; Real ; r, . Real ; ratio = 1. . ). inlinestatic . true if the magnitude of r is less than ratio*epsilon . ◆ matrixMaxDiff() [1/2]. template<typename _Real = SReal> . template<typename Matrix1 , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const Matrix1 & ; m1, . const Matrix2 & ; m2 . ). inlinestatic . return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes . ◆ matrixMaxDiff() [2/2]. template<typename _Real = SReal> . template<Size M, Size N, typename Real , typename Matrix2 > . static Real sofa::testing::NumericTest< _Real >::matrixMaxDiff ; (; const sofa::type::M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:3393,test,testing,3393,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,2,['test'],['testing']
Testability,ence; SOFA API: sofa::gui::common Namespace Reference; SOFA API: sofa::gui::component Namespace Reference; SOFA API: sofa::gui::component::performer Namespace Reference; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:205224,log,logging,205224,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,ence; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Ref,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:205388,log,logging,205388,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"eneName (std::string &n);  ; void setRecordX (bool b);  ; void setRecordV (bool b);  ; void setRecordF (bool b);  ; void setCreateInMapping (bool b);  ; void setCounter (int c);  ; const char * getClassName () const override;  ; void setExportTimes (const type::vector< double > &times);  ; void setPeriod (double period);  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state_creator.html:2349,test,testTags,2349,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state_creator.html,1,['test'],['testTags']
Testability,"ent. ; External children are child elements of a different type than their parent (often corresponding to the final elements).; Default to empty (i.e. two identical iterators) ; Reimplemented in sofa::component::collision::geometry::CubeCollisionModel. ◆ getFirst(). CollisionModel * sofa::core::CollisionModel::getFirst ; (; ). Return the first (i.e. root) CollisionModel in the hierarchy. . ◆ getGroups(). const std::set<int>& sofa::core::CollisionModel::getGroups ; (; ); const. inline . Return the group IDs containing this model. . ◆ getInternalChildren(). virtual std::pair<CollisionElementIterator,CollisionElementIterator> sofa::core::CollisionModel::getInternalChildren ; (; Index ; ); const. inlinevirtual . Return the list (as a pair of iterators) of internal children of an element. ; Internal children are child elements of the same type as their parent (often corresponding to non-final elements). This distinction is used to optimize the intersection tests inside the hierarchy, as internal children can be processed without dynamically retrieving a new intersection method.; Default to empty (i.e. two identical iterators) ; Reimplemented in sofa::component::collision::geometry::CubeCollisionModel. ◆ getLast(). CollisionModel * sofa::core::CollisionModel::getLast ; (; ). Return the last (i.e. leaf) CollisionModel in the hierarchy. . ◆ getNext(). CollisionModel* sofa::core::CollisionModel::getNext ; (; ). inline . Return the next (finer / lower / child level) CollisionModel in the hierarchy. . ◆ getNumberOfContacts(). Size sofa::core::CollisionModel::getNumberOfContacts ; (; ); const. inline . Get the number of contacts attached to the collision model. . ◆ getPrevious(). CollisionModel* sofa::core::CollisionModel::getPrevious ; (; ). inline . Return the previous (coarser / upper / parent level) CollisionModel in the hierarchy. . ◆ getProximity(). SReal sofa::core::CollisionModel::getProximity ; (; ); const. inline . Get distance to the actual (visual) surface. . ◆ getS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html:32797,test,tests,32797,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,1,['test'],['tests']
Testability,"ent::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; getEnclosingSphere(Coord &center, Real &radius) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getIndicesScale() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionPointWithPlane(const TetraID ind_ta, const sofa::type::Vec< 3, Real > &planP0, const sofa::type::Vec< 3, Real > &normal, sofa::type::vector< sofa::type::Vec< 3, Real > > &intersectedPoint, SeqEdges &intersectedEdge)sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOppositePoint(PointID ind_p, const Edge &indices, Real coord_p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPointPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointRestPosition(const PointID pointId) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getPointSetCenter() constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; getRestEdgeVertexCoordinates(const EdgeID i, Coord[2]) constsofa::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html:19436,log,logging,19436,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"ent::topology::container::dynamic::EdgeSetTopologyModifiervirtual; splitEdgesProcess(sofa::type::vector< EdgeID > &indices, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs, const bool removeIsolatedPoints=true)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swapEdges(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapEdgesProcess(const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; swapPoints(const Index i1, const Index i2)sofa::component::topology::container::dynamic::PointSetTopologyModifiervirtual; TopologyModifier()sofa::core::topology::TopologyModifierinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~EdgeSetTopologyModifier() overridesofa::component::topology::container::dynamic::EdgeSetTopologyModifierinlineprotected; ~PointSetTopologyModifier() overridesofa::component::topology::container::dynamic::PointSetTopologyModifierinlineprotected; ~TopologyModifier() overridesofa::core::topology::TopologyModifierinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html:20227,log,logErrors,20227,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,1,['log'],['logErrors']
Testability,"ent; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat2Variable, OglVariable< type::Vec2f >)sofa::gl::component::shader::OglFloat2Variable; OglVariable< type::Vec2f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec2f >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec2f >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloat2Variable()sofa::gl::component::shader::OglFloat2Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlineprotected; ~Sh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html:13467,log,logErrors,13467,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,1,['log'],['logErrors']
Testability,"ent; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat3Variable, OglVariable< type::Vec3f >)sofa::gl::component::shader::OglFloat3Variable; OglVariable< type::Vec3f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec3f >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec3f >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloat3Variable()sofa::gl::component::shader::OglFloat3Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlineprotected; ~Sh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html:13467,log,logErrors,13467,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,1,['log'],['logErrors']
Testability,"ent; shaderssofa::gl::component::shader::OglShaderElementprotected; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; sofa::gl::component::shader::OglShaderElement::SOFA_ABSTRACT_CLASS(ShaderElement, objectmodel::BaseObject)sofa::core::visual::ShaderElement; SOFA_CLASS(OglFloat4Variable, OglVariable< type::Vec4f >)sofa::gl::component::shader::OglFloat4Variable; OglVariable< type::Vec4f >::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(OglVariable, core::visual::VisualModel, OglShaderElement)sofa::gl::component::shader::OglVariable< type::Vec4f >; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; valuesofa::gl::component::shader::OglVariable< type::Vec4f >; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VisualModel()sofa::core::visual::VisualModelprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~OglFloat4Variable()sofa::gl::component::shader::OglFloat4Variableinlinevirtual; ~OglShaderElement() overridesofa::gl::component::shader::OglShaderElementinline; ~OglVariable() overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlineprotected; ~Sh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html:13467,log,logErrors,13467,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,2,['log'],['logErrors']
Testability,"ent< c >inline; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixAccumulatorComponent()sofa::core::BaseMatrixAccumulatorComponent< c >inline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ComponentType typedefsofa::core::BaseMatrixAccumulatorComponent< c >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html:2350,log,logging,2350,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,1,['log'],['logging']
Testability,entState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDepthTexture() overridesofa::gl::component::shader::DirectionalLightvirtual; getDirection() overridesofa::gl::component::shader::DirectionalLightinlinevirtual; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLightType() overridesofa::gl::component::shader::DirectionalLightinlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getOpenGLModelViewMatrix()sofa::gl::component::shader::Light; getOpenGLProjectionMatrix()sofa::gl::component::shader::Light; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPosition()sofa::gl::component::shader::Lightinlinevirtual; getShadowFactor()sofa::gl::component::shader::Lightinlinevirtual; getShadowMapSize()sofa::gl::component::shader::Lightvirtual; getShadowTextureUnit()sofa::gl::component::shader::Lightinlinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmod,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html:7214,log,logging,7214,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,1,['log'],['logging']
Testability,"entState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getEdgeInfo()sofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inlineprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLambda() constsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inlinevirtual; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMechanicalStates() constsofa::core::behavior::StateAccessorinlinevirtual; getMState()sofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMState() constsofa::core::behavior::SingleStateAccessor< DataTypes >inline; getMu() constsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inlinevirtual; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPotentialEnergy(const core::MechanicalParams *, const DataVecCoord &) const overridesofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >inlinevirtual; ForceField< DataTypes >::getPotentialEnergy(const MechanicalParams *mparam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html:11031,log,logging,11031,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,1,['log'],['logging']
Testability,"entState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode classsofa::core::objectmodel::BaseObjectfriend; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html:2133,log,logging,2133,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,1,['log'],['logging']
Testability,"entState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html:2178,log,logging,2178,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,1,['log'],['logging']
Testability,"entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::Fo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:5400,test,testing,5400,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,2,['test'],['testing']
Testability,"entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< T::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ m_modelMatrix. template<class T > . sofa::type::Mat<NbRows, NbCols, Real> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_modelMatrix. protected . ◆ m_testedMatrix. template<class T > . std::unique_ptr<sofa::linearalgebra::BaseMatrix> sofa::linearalgebra::testing::TestBaseMatrix< T >::m_testedMatrix {nullptr}. protected . ◆ NbCols. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbCols = T::NbCols. staticconstexpr . ◆ NbRows. template<class T > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrix< T >::NbRows = T::NbRows. staticconstexpr . Function details. ◆ checkAddBloc(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkAddBloc ; (; sofa::linearalgebra::BaseMatrix::Index ; posRow, . sofa::linearalgebra::BaseMatrix::Index ; posCol . ). inline . A 3x3 matrix is added into the matrix using the corresponding function overload This assumes the matrix is big enough to contain a 3x3 matrix at the requested position Parameters. posRowrow index at which the 3x3 matrix is added ; posColcolumn index at which the 3x3 matrix is added . ◆ checkAddScalar(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkAddScalar ; (; ). inline . ◆ checkResize(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::checkResize ; (; ). inline . ◆ onSetUp(). template<class T > . void sofa::linearalgebra::testing::TestBaseMatrix< T >::onSetUp ; (; ). inlineoverridevirtual . Reimplemented from sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html:3954,test,testing,3954,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,3,"['Test', 'test']","['TestBaseMatrix', 'testing']"
Testability,"eometry::Triangle & ; , . collision::geometry::Point & ;  . ). delete . ◆ testIntersection() [20/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Point & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testIntersection() [21/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; , . collision::geometry::Sphere & ;  . ). delete . ◆ testIntersection() [22/22]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testIntersection ; (; collision::geometry::Triangle & ; e2, . collision::geometry::Sphere & ; e1, . const core::collision::Intersection * ; currentIntersection . ). ◆ testValidity() [1/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Line & ; l, . const type::Vec3 & ; PQ . ); const. ◆ testValidity() [2/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Point & ; p, . const type::Vec3 & ; PQ . ); const. ◆ testValidity() [3/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Sphere & ; , . const type::Vec3 & ;  . ); const. inline . These methods check the validity of a found intersection. According to the local configuration around the found intersected primitive, we build a ""Region Of Interest"" geometric cone. Pertinent intersections have to belong to this cone, others are not taking into account anymore. . ◆ testValidity() [4/4]. bool sofa::component::collision::detection::intersection::LocalMinDistance::testValidity ; (; collision::geometry::Triangle & ; t, . const type::Vec3 & ; PQ . ); const. sofacomponentcollisiondetectionintersectionLocalMinDistance; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:38381,test,testValidity,38381,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,6,['test'],['testValidity']
Testability,"er * getShader () const override;  Shader. More...;  ; virtual sofa::core::visual::Shader * getShader (const sofa::core::objectmodel::TagSet &t) const;  ; Solvers and main algorithms; sofa::core::behavior::BaseAnimationLoop * getAnimationLoop () const override;  ; sofa::core::behavior::OdeSolver * getOdeSolver () const override;  ; sofa::core::collision::Pipeline * getCollisionPipeline () const override;  ; sofa::core::visual::VisualLoop * getVisualLoop () const override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseNode;  SOFA_ABSTRACT_CLASS (BaseNode, Base);  ; virtual Parents getParents () const =0;  ; virtual size_t getNbParents () const =0;  returns number of parents More...;  ; virtual BaseNode * getFirstParent () const =0;  return the first parent (returns nullptr if no parent) More...;  ; virtual BaseNode * getRoot () const;  returns the root by following up the first parent for multinodes More...;  ; virtual bool hasParent (const BaseNode *node) const =0;  Test if the given node is a parent of this node. More...;  ; virtual bool hasAncestor (const BaseNode *node) const =0;  ; virtual void detachFromGraph ()=0;  ; virtual std::string getPathName () const override;  Return the full path name of this node. More...;  ; virtual std::string getRootPath () const;  Return the path from this node to the root node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:14230,Test,Test,14230,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['Test'],['Test']
Testability,"er List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:163700,log,loggingmessagehandler,163700,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['loggingmessagehandler']
Testability,er List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:194900,test,testing,194900,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['test'],['testing']
Testability,"er concistency. . ◆ checkTetrahedronToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronToEdgeCrossContainer ; (; ). Method to test Tetrahedron to edges cross container concistency. . ◆ checkTetrahedronTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronTopology ; (; ). } ; Tetrahedron methods { Full method to check Tetrahedron Topology. Will call See alsocheckTetrahedronContainer, . checkTetrahedronToTriangleCrossContainer . checkTetrahedronToEdgeCrossContainer and . checkTetrahedronToVertexCrossContainer . ◆ checkTetrahedronToTriangleCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronToTriangleCrossContainer ; (; ). Method to test Tetrahedron to triangles cross container concistency. . ◆ checkTetrahedronToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTetrahedronToVertexCrossContainer ; (; ). Method to test Tetrahedron to vertices cross container concistency. . ◆ checkTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTopology ; (; ). ◆ checkTriangleContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleContainer ; (; ). Method to test Triangle container concistency. . ◆ checkTriangleToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleToEdgeCrossContainer ; (; ). Method to test triangles to edges cross container concistency. . ◆ checkTriangleTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleTopology ; (; ). } ; Triangle methods { Full method to check Triangle Topology. Will call See alsocheckTriangleContainer, . checkTriangleToEdgeCrossContainer and . checkTriangleToVertexCrossContainer . ◆ checkTriangleToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleToVertexCrossContainer ; (; ). Method to test triangles to vertices cross containe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:20669,test,test,20669,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,"er concistency. More...;  ; bool checkQuadTopology ();  } More...;  ; bool checkQuadContainer ();  Method to test quad container concistency. More...;  ; bool checkQuadToEdgeCrossContainer ();  Method to test quads to edges cross container concistency. More...;  ; bool checkQuadToVertexCrossContainer ();  Method to test quads to vertices cross container concistency. More...;  ; bool checkTetrahedronTopology ();  } More...;  ; bool checkTetrahedronContainer ();  Method to test Tetrahedron container concistency. More...;  ; bool checkTetrahedronToTriangleCrossContainer ();  Method to test Tetrahedron to triangles cross container concistency. More...;  ; bool checkTetrahedronToEdgeCrossContainer ();  Method to test Tetrahedron to edges cross container concistency. More...;  ; bool checkTetrahedronToVertexCrossContainer ();  Method to test Tetrahedron to vertices cross container concistency. More...;  ; bool checkHexahedronTopology ();  } More...;  ; bool checkHexahedronContainer ();  Method to test Hexahedron container concistency. More...;  ; bool checkHexahedronToQuadCrossContainer ();  Method to test Hexahedron to quads cross container concistency. More...;  ; bool checkHexahedronToEdgeCrossContainer ();  Method to test Hexahedron to edges cross container concistency. More...;  ; bool checkHexahedronToVertexCrossContainer ();  Method to test Hexahedron to vertices cross container concistency. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:5541,test,test,5541,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['test'],['test']
Testability,"er, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshGmshLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshGmshLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::core::loader::MeshLoader; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::loader::MeshLoader; updateElements()sofa::core::loader::MeshLoadervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::core::loader::MeshLoadervirtual; updateNormals()sofa::core::loader::MeshLoadervirtual; updatePoints()sofa::core::loader::MeshLoadervirtual; Vec3 typedefsofa::core::loader::MeshLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:16848,log,logErrors,16848,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['log'],['logErrors']
Testability,er::IsNull< is_integer > Struct Template Reference; SOFA API: sofa::helper::IsNull< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Background Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Foreground Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader Struct Reference; SOFA API: sofa::helper::io::DDSHeader::DDSCaps Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader::DDSPixelFormat Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord >::TREENODE Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ComponentInfo Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileInfo Struct Reference; SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::narrowing_error Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::InitExternalModule Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::ModuleIsInitialized Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::thread::AlignPow2< N > Struct Templat,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:236533,log,logging,236533,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"er::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleBarycoefs(const TriangleID ind_t, const sofa::type::Vec< 3, Real > &p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCenter(const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCircumcenter(const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleCircumcenterBaryCoefs(sofa::type::Vec< 3, Real > &baryCoord, const TriangleID i) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeTriangleNormal(const TriangleID ind_t) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; Coord typedefsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawColorTetrahedrasofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >protected; d_drawEdgessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; d_drawScaleTetrahedrasofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >protected; d_drawTetrahedrasofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showIndicesScalesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >protected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html:13431,log,logging,13431,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"er< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ end(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::end. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getElementInZone(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getElementInZone ; (; VecIds & ; elementsToTest). protected . Function testing if elements are in the range of a given zone The zone is given by the selectorScale. Test is done on Barycentric point of elements. I.e if this point is in the range of the area. then, element is accepted otherwise, element is rejected. Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing accepted element. . ◆ getNeighboorElements(). template<class DataTypes > . RemovePrimitivePerformer< DataTypes >::VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::getNeighboorElements ; (; VecIds & ; elementsToTest). protected . Function to get all elements directly neighboor of a given list of elements compute the list without redundancy using container xxAroundVertex() (where xx is the type of element). Parameters. elementsToTestvector of element Id to test. . ReturnsVecIds: vector of element Id containing neighbour (without already accepted elements and redundancy). . ◆ start(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::start. virtual . Functions called by TopologicalOperation performer. ; Functions called in framework of the mouse Interactor. ; Implements sofa::gui::component::performer::InteractionPerformer. sofaguico",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html:6636,test,test,6636,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,2,['test'],['test']
Testability,"erate pseudo-random numbers. It is designed to provide deterministic and portable random number generation, making it well-suited for testing purposes. . Public Member Functions;  LinearCongruentialRandomGenerator (unsigned int initialSeed);  ; unsigned int generateRandom ();  Generates the next pseudo-random number. More...;  ; template<class Scalar > ; Scalar generateInUnitRange ();  Generates a pseudo-random value within the unit interval [0, 1]. More...;  ; double generateInRange (double rmin, double rmax);  Generates a pseudo-random double value within a specified range. More...;  ; float generateInRange (float rmin, float rmax);  Generates a pseudo-random float value within a specified range. More...;  . Constructor details. ◆ LinearCongruentialRandomGenerator(). sofa::testing::LinearCongruentialRandomGenerator::LinearCongruentialRandomGenerator ; (; unsigned int ; initialSeed). explicit . Function details. ◆ generateInRange() [1/2]. double sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; double ; rmin, . double ; rmax . ). Generates a pseudo-random double value within a specified range. ; This function generates a pseudo-random double value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random double value in the specified range [rmin, rmax].; Example usage: double randomValue = generateInRange(10.0, 20.0);; sofa::testing::LinearCongruentialRandomGenerator::generateInRangedouble generateInRange(double rmin, double rmax)Generates a pseudo-random double value within a specified range.Definition: LinearCongruentialRandomGenerator.cpp:41. ◆ generateInRange() [2/2]. float sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; float ; rmin, . float ; rmax . ). Generates a pseudo-random float value within a specified range. ; This function generates a pseudo-random float ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html:1517,test,testing,1517,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,2,['test'],['testing']
Testability,"ere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [5/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [6/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::RigidSphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [7/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::Sphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [8/8]. bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Sphere & ; sph1, . collision::geometry::Sphere & ; sph2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersectionSphere(). template<class SphereType1 , class SphereType2 > . bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersectionSphere ; (; SphereType1 & ; sph1, . SphereType2 & ; sph2, . const SReal ; alarmDist . ). inlineprotected . sofacomponentcollisiondetectionintersectionDiscreteIntersection; Generated on Mon Nov 11 2024 02:19:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:26450,test,testIntersection,26450,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,4,['test'],"['testIntersection', 'testIntersectionSphere']"
Testability,"erence . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ◆ TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; ). sofalinearalgebratesting; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:1201,test,testing,1201,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,24,"['Test', 'test']","['TestBaseMatrix', 'TestSparseMatrixProduct', 'testing']"
Testability,erence; SOFA API: Member List; SOFA API: sofa::helper::io::XspLoader Class Reference; SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA A,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:161722,log,logging,161722,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,erence; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:162404,log,logging,162404,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['log'],['logging']
Testability,"eriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) overridesofa::component::mechanicalload::TrianglePressureForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) overridesofa::component::mechanicalload::TrianglePressureForceField< DataTypes >inlinevirtual; addKToMatrix(const core::MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) overridesofa::component::mechanicalload::TrianglePressureForceField< DataTypes >inlinevirtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field-members.html:2851,log,logging,2851,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field-members.html,1,['log'],['logging']
Testability,"ernal children of this element.; See alsoCollisionModel::getInternalChildren . ◆ getProximity(). template<class TModel > . SReal sofa::core::TCollisionElementIterator< TModel >::getProximity ; (; ); const. inline . Distance to the actual (visual) surface. . ◆ isActive(). template<class CollisionModel > . bool sofa::core::TCollisionElementIterator< CollisionModel >::isActive ; (; core::CollisionModel * ; cm = nullptr); const. inline . ◆ isLeaf(). template<class TModel > . bool sofa::core::TCollisionElementIterator< TModel >::isLeaf ; (; ); const. inline . Test if this element is a leaf.; Returnstrue if the element(index) is leaf. i.e. If it is a primitive itself. . ◆ operator!=(). template<class TModel > . template<class Model2 > . bool sofa::core::TCollisionElementIterator< TModel >::operator!= ; (; const TCollisionElementIterator< Model2 > & ; i); const. inline . Compare two iterators. Note that even it the iterators are of different types, they can point to the same element. . ◆ operator+(). template<class TModel > . TCollisionElementIterator sofa::core::TCollisionElementIterator< TModel >::operator+ ; (; int ; n); const. inline . ◆ operator+=(). template<class TModel > . TCollisionElementIterator& sofa::core::TCollisionElementIterator< TModel >::operator+= ; (; int ; n). inline . ◆ operator==(). template<class TModel > . template<class Model2 > . bool sofa::core::TCollisionElementIterator< TModel >::operator== ; (; const TCollisionElementIterator< Model2 > & ; i); const. inline . Compare two iterators. Note that even it the iterators are of different types, they can point to the same element. . ◆ valid(). template<class TModel > . bool sofa::core::TCollisionElementIterator< TModel >::valid ; (; ); const. inline . Test if this iterator is initialized with a valid CollisionModel. Note that it does not test if the referenced element inside the CollisionModel is valid. . sofacoreTCollisionElementIterator; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html:8885,test,test,8885,api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_collision_element_iterator.html,1,['test'],['test']
Testability,"erridesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; createDefaultSprings()sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; createEdgeInformation(Index, Spring &t, const core::topology::BaseMeshTopology::Edge &e, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_springArraysofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; d_stiffnesssofa::component::solidmechanics::spring::VectorSpringForceField< DataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html:4537,log,logging,4537,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,1,['log'],['logging']
Testability,"erridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< TDataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; Coord typedefsofa::core::State< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html:2522,log,logging,2522,api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,1,['log'],['logging']
Testability,"ers that process the Messages . Classes; class  LoggerStream;  ; class  NullLoggerStream;  . Static Public Member Functions; static int addHandler (MessageHandler *o);  to add a MessageHandler More...;  ; static int rmHandler (MessageHandler *o);  to remove a MessageHandler More...;  ; static void clearHandlers ();  to remove every MessageHandlers More...;  ; static std::vector< MessageHandler * > & getHandlers ();  the list of MessageHandlers More...;  ; static LoggerStream info (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream deprecated (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream warning (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream error (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream fatal (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher::addHandler ; (; MessageHandler * ; o). static . to add a MessageHandler . ◆ advice(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::advice ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcher::clearH",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:1730,log,log,1730,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,11,"['Log', 'log']","['LoggerStream', 'log', 'logging']"
Testability,"ers. swapModeloutput value set to true if the collision models must be swapped before calling the intersector. . Implements sofa::core::collision::Intersection. ◆ SOFA_CLASS(). sofa::component::collision::detection::intersection::DiscreteIntersection::SOFA_CLASS ; (; DiscreteIntersection ; , . sofa::core::collision::Intersection ;  . ). ◆ testIntersection() [1/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, sofa::component::collision::detection::intersection::BaseProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [2/8]. bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). virtual . Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, sofa::component::collision::detection::intersection::BaseProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [3/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::geometry::RigidSphere & ; sph1, . collision::geometry::RigidSphere & ; sph2 . ). virtualdelete . Reimplemented in sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [4/8]. virtual bool sofa::component::collision::detection::intersection::DiscreteIntersection::testIntersection ; (; collision::ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:24179,test,testIntersection,24179,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['test'],['testIntersection']
Testability,"ersection *currentIntersection);  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:3378,test,testIntersection,3378,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Line &line, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection);  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &tri, collision::geometry::TSphere< T > &sph, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Point &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Line &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Line &, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Triangl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html:3843,test,testIntersection,3843,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_new_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::TSphere< T > &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html:5171,test,testIntersection,5171,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"ersection(EdgeID edgeID, sofa::type::Vec< 3, Real > pointOnPlane, sofa::type::Vec< 3, Real > normalOfPlane, sofa::type::Vec< 3, Real > &intersection)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeRestHexahedronVolume(const HexaID h) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; computeRestQuadArea(const QuadID i) constsofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; computeRestSquareEdgeLength(const EdgeID i) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeShapeFunction(const LocalCoord nc, const HexahedronBinaryIndex bi) constsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; Coord typedefsofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawColorHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_drawEdgessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; d_drawHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_drawScaleHexahedrasofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showHexaIndicessofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >protected; d_showIndicesScalesofa::component::topolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html:9850,log,logging,9850,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms-members.html,1,['log'],['logging']
Testability,"ersection, bool addSelf=true)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::TSphere< T > &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Line &, collision::geometry::Line &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Triangle &, collision::geometry::TSphere< T > &, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::Point &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; testIntersection(collision::geometry::TSphere< T > &, collision::geometry::Point &)=deletesofa::component::collision::detection::intersection::MeshMinProximityIntersection; testInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html:4956,test,testIntersection,4956,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection-members.html,1,['test'],['testIntersection']
Testability,"ersection::setContactDistance ; (; SReal ; v). inlineoverridevirtual . Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) ; Reimplemented from sofa::core::collision::Intersection. ◆ SOFA_ABSTRACT_CLASS(). sofa::component::collision::detection::intersection::BaseProximityIntersection::SOFA_ABSTRACT_CLASS ; (; BaseProximityIntersection ; , . DiscreteIntersection ;  . ). ◆ testIntersection() [1/2]. bool sofa::component::collision::detection::intersection::BaseProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2 . ). virtualdelete . Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection.; Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ testIntersection() [2/2]. bool sofa::component::collision::detection::intersection::BaseProximityIntersection::testIntersection ; (; collision::geometry::Cube & ; cube1, . collision::geometry::Cube & ; cube2, . const core::collision::Intersection * ; currentIntersection . ). overridevirtual . Intersectors for cubes using proximities. ; Reimplemented from sofa::component::collision::detection::intersection::DiscreteIntersection.; Reimplemented in sofa::component::collision::detection::intersection::NewProximityIntersection, sofa::component::collision::detection::intersection::MinProximityIntersection, and sofa::component::collision::detection::intersection::LocalMinDistance. ◆ useProximity(). bool sofa::component::collision::detection::intersection::BaseProximityIntersection::useProximity ; (; ); const. inlineoverridevirtual . Returns true if algorithm uses proximity. ; Reimplemented from sofa::core::collision::Intersection. sofacomponentcollisiondetectionintersectionBaseProximityIntersection; Gen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:23973,test,testIntersection,23973,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,1,['test'],['testIntersection']
Testability,"ersion; ; SOFA - Topic: Error in compiling softrobots plugin, cableConstraint in SOFA 21.06 version. /error-in-configuring-sofa; . /feed; ; [SOLVED] Error in configuring Sofa – SOFA. SOFA - Topic: [SOLVED] Error in configuring Sofa. /error-in-first-launch-of-sofa-after-installation; ; SOFA - Topic: [SOLVED] Error in first launch of sofa after installation. /error-in-rigidrigidmapping-v15-09; . /feed; ; [SOLVED] Error in RigidRigidMapping (v15.09) – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /3; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /8; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /9; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /error-in-running-sofapython3-in-conda-environemtn-with-python3-83; ; SOFA - Topic: Error In Running SofaPython3 in Conda Environemtn with Python3.83. /error-in-simulationanimate-while-testing; ; SOFA - Topic: [SOLVED] ERROR in Simulation::animate() while testing. /error-into-use-the-linearsolverconstraintcorrection-with-sofacuda-types; ; SOFA - Topic: Error into use the LinearSolverConstraintCorrection with SofaCUDA types. /error-message-libpng16-dll; ; SOFA - Topic: [SOLVED] Error message – libpng16.dll. /error-msg-in-the-pneunetgripper-tutorial; ; SOFA - Topic: Error msg in the PneuNetGripper tutorial. /error-on-fetching-subirectory-eigen3; ; SOFA - Topic: [SOLVED] Error on Fetching subirectory eigen3. /error-on-sofaguiqt5-dll; ; SOFA - Topic: Error on SofaGuiQt5.dll. /error-pluginmanager-plugin-not-found; ; SOFA - Topic: [SOLVED] [ERROR] [PluginManager] Plugin not found. /error-plugin-not-foundsofamiscforcefielddev; ; SOFA - Topic: [SOLVED] error: Plugin not found:""SofaMiscForceFieldDev"". /error-runsofa-exe-can-not-run-after-successfully-build-the-project-in-vs2019; ; SOFA - Topic: [SOLVED] error: runsofa.exe can not run after successfully build the project in VS2019. /errors-appeared",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:295353,test,testing,295353,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['test'],['testing']
Testability,"es >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kdsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showSpringssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; DataVecDeriv typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; Deriv typedefsofa::component::solidmechanics::spring::TriangularBending",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html:6098,log,logging,6098,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,1,['log'],['logging']
Testability,"es the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of dpos/dnc on the geometry given by p (could be rest geometry) More...;  ; bool isHexahedronAffine (const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) const;  test if the heaxahedron is a simple affine warp of a cube More...;  ; LocalCoord computeHexahedronBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; LocalCoord computeHexahedronRestBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position in the hexa 'h' in its rest position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; Coord getPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  computes a position corresponding to given barycentric coordinates More...;  ; Coord getRestPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  ; Coord getPointPositionInHexahedron (const HexaID h, const Real baryC[3]) const;  computes a position corresponding to given ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:7431,test,test,7431,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,2,['test'],['test']
Testability,"es, GeometricalTypes >virtual; checkTopology()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; checkTotalMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeVertexMass(Real density)sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; Coord typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_fileMasssofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_massDensitysofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showAxisSizesofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_showCenterOfGravitysofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_totalMasssofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_vertexMasssofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mass::Dia",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html:8017,log,logging,8017,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,1,['log'],['logging']
Testability,"esLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; Coord1D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; Coord2D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; Coord3D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doDelOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doInternalUpdate() finalsofa::core::DataEngineinlineprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html:3919,log,logging,3919,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,1,['log'],['logging']
Testability,"esLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_indexsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >protected; d_maxsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >; DataVecDeriv typedefsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >; Deriv typedefsofa::comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html:3536,log,logging,3536,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,"esLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_constraintRestPossofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; d_iterativesofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; DataVecDeriv typedefsofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; Deriv typedefsofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; doUpdateInternal()sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html:3540,log,logging,3540,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,1,['log'],['logging']
Testability,"escending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; void setValue (bool _active);  ; bool getValue ();  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *)=delete;  ; virtual void processNodeBottomUp (simulation::Node *node, LocalStorage *)=delete;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html:1680,test,testTags,1680,api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,2,['test'],['testTags']
Testability,"escription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >protected; DataMatrixDeriv typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; DataVecCoord typedefsofa::component::constraint::projectiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html:3499,log,logging,3499,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,1,['log'],['logging']
Testability,"escription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html:2504,log,logging,2504,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,2,['log'],['logging']
Testability,"eset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ContextObject, BaseObject)sofa::core::objectmodel::ContextObject; SOFA_CLASS(Gravity, core::objectmodel::ContextObject)sofa::component::mechanicalload::Gravity; sofa::core::objectmodel::ContextObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ContextObject() overridesofa::core::objectmodel::ContextObjectinlineprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html:10123,log,logErrors,10123,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html,1,['log'],['logErrors']
Testability,"esetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topology()sofa::core::topology::Topologyinlineprotected; TopologyContainer()sofa::core::topology::TopologyContainerinlineprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::topology::Topology; TriangleID typedefsofa::core::topology::Topology; TrianglesAroundEdge typedefsofa::core::topology::BaseMeshTopology; TrianglesAroundVertex typedefsofa::core::topology::BaseMeshTopology; TrianglesInTetrahedron typedefsofa::core::topology::BaseMeshTopology; unlinkTopologyHandlerToData(TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType)sofa::core::topology::TopologyContainervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VerticesAroundVertex typedefsofa::core::topology::BaseMeshTopology; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BaseTopologyObject() overridesofa::core::topology::BaseTopologyObjectinlineprotected; ~Topology()sofa::core::topology::Topologyinlineprotectedvirtual; ~TopologyContainer() overridesofa::core::topology::TopologyContainerprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html:23530,log,logErrors,23530,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,1,['log'],['logErrors']
Testability,"eshold = (std::numeric_limits<T>::epsilon)() . ). inline . number null test rough floating point test ( <= threshold) exact integer test . ◆ join() [1/3]. template<class S , class Container > . std::string sofa::helper::join ; (; const Container & ; elems, . const S & ; delim . ). Join a container into a single string, separated by the provided delimiter. . ◆ join() [2/3]. template<class InputIt , class S > . std::string sofa::helper::join ; (; InputIt ; first, . InputIt ; last, . const S & ; delim . ). ◆ join() [3/3]. template<class InputIt , class UnaryFunction , class S > . std::string sofa::helper::join ; (; InputIt ; first, . InputIt ; last, . UnaryFunction ; f, . const S & ; delim . ). ◆ logFactoryRegister() [1/2]. template SOFA_HELPER_API void sofa::helper::logFactoryRegister ; (; const std::string & ; baseclass, . const std::string & ; classname, . std::string ; key, . bool ; multi . ). ◆ logFactoryRegister() [2/2]. template<class TKey > . void sofa::helper::logFactoryRegister ; (; const std::string & ; baseclass, . const std::string & ; classname, . TKey ; key, . bool ; multi . ). Log classes registered in the factory. . ◆ logFactoryRegister< std::string >(). template SOFA_HELPER_API void sofa::helper::logFactoryRegister< std::string > ; (; const std::string & ; baseclass, . const std::string & ; classname, . std::string ; key, . bool ; multi . ). ◆ narrow_cast(). template<class T , class U > . constexpr T sofa::helper::narrow_cast ; (; U && ; u). constexpr . Explicit narrow conversion Inspired by the Guidelines Support Library (https://github.com/microsoft/GSL) ; Template Parameters. TTarget type ; USource type . Parameters. uValue to cast . ReturnsThe value converted to the target type . ◆ narrow_cast_check(). template<class T , class U > . constexpr T sofa::helper::narrow_cast_check ; (; U ; u). constexpr . Explicit narrow conversion checking that the value is unchanged by the cast. If the value changed, an exception is thrown Inspired by the Guidelines ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:29782,log,logFactoryRegister,29782,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,2,['log'],['logFactoryRegister']
Testability,"esofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addForce(const MechanicalParams *mparams, MultiVecDerivId fId) overridesofa::core::behavior::ForceField< DataTypes >virtual; addKToMatrix(sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; ForceField< DataTypes >::addKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) overridesofa::core::behavior::ForceField< DataTypes >virtual; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMBKdx(const MechanicalParams *mparams, MultiVecDerivId dfId)sofa::core::behavior::BaseForceFieldvirtual; addMBKToMatrix(const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::core::behavior::BaseForceFieldvirtual; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addToMatrix(sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale)sofa::core::behavior::ForceField< DataTypes >inline; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html:3015,log,logging,3015,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,1,['log'],['logging']
